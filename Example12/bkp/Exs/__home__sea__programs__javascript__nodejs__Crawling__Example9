============================================================
path : __home__sea__programs__javascript__nodejs__Crawling__Example9
============================================================
full_path: __home__sea__programs__javascript__nodejs__Crawling__Example9__ex3.js
============================================================
id: 3
============================================================
file: ex3.js
============================================================
content: const axios = require('axios');
const cheerio = require('cheerio');
const fs = require('fs');


const url1 = "https://www.iban.com/exchange-rates";
const url2 = `https://www.w3schools.com/css/css_examples.asp`;

fetchData(url1).then((res) => {
    const html = res.data;
    const $ = cheerio.load(html);
    const statsTable = $('.table.table-bordered.table-hover.downloads > tbody > tr');
    statsTable.each(function() {
        let title = $(this).find('td').text();
        console.log(title);
    });
})

fetchData(url2).then((res) => {
    var obselete = [];
    const html = res.data;
    const $ = cheerio.load(html);
    try {
        let urls = $("a");
        Object.keys(urls).forEach((item) => {

            if (urls[item].type === 'tag') {
                let href = urls[item].attribs.href;

                if (href && !obselete.includes(href)) {
                    href = href.trim();
                    obselete.push(href);

                    // Slow down the
                    /*
                    setTimeout(function() {
                        href.startsWith('http') ? crawlAllUrls(href) : crawlAllUrls(`${url}${href}`) // The latter might need extra code to test if its the same site and it is a full domain with no URI
                    }, 5000)
                    */
                }
            }
        });
        for (var i = 0; i < obselete.length; i++) 
        {
            var index_js = obselete[i].indexOf('css_');
            var index_try = obselete[i].indexOf('try');
            if (index_js !== -1) {
                console.log('obselete[%d]', i);
                console.dir(obselete[i]);
                fs.appendFileSync('css_w3_links.txt', obselete[i] + '\n');
            }
            if (index_try !== -1) {
                console.log('obselete[%d]', i);
                console.dir(obselete[i]);
                fs.appendFileSync('css_try_w3_links.txt', obselete[i] + '\n');
            }

        }

    } catch (e) {
        console.error(`Encountered an error crawling ${url2}. Aborting crawl.`);
    }
    return obselete;
})



async function fetchData(url) {
    console.log("Crawling data...")
    // make http call to url
    let response = await axios(url).catch((err) => console.log(err));

    if (response.status !== 200) {
        console.log("Error occurred while fetching data");
        return;
    }
    return response;
}
============================================================


============================================================
path : __home__sea__programs__javascript__nodejs__Crawling__Example9
============================================================
full_path: __home__sea__programs__javascript__nodejs__Crawling__Example9__ex4.js
============================================================
id: 4
============================================================
file: ex4.js
============================================================
content: const axios = require('axios');
const cheerio = require('cheerio');
const fs = require('fs');
const readline = require('readline');

var filename = 'css_try_w3_links.txt';

async function processLineByLine(filename) {
  const fileStream = fs.createReadStream(filename);

  const rl = readline.createInterface({
    input: fileStream,
    crlfDelay: Infinity
  });
  // Note: we use the crlfDelay option to recognize all instances of CR LF
  // ('\r\n') in input.txt as a single line break.

  for await (const line of rl) {
    // Each line` in input.txt will be successively available here as `line`.
    console.log('line');
    console.dir(line);
    Glob_links(line);

    //console.log(`Line from file: ${line}`);
  }

}

processLineByLine(filename);

//url ="tryit.asp?filename=trycss_border";
//Glob_links(url);

function Glob_links(url)
{

var href = 'https://www.w3schools.com/css/'+url;

var value = url;

var new_value = value.replace(/\//gi, "__");
    new_value = new_value.replace(/\+/gi, '_');

var txt = new_value + '__?'; 
var dir = '/css_w3s_q_r/';
var new_filename = new_value + '.txt';
console.log('txt');
console.dir(txt);
console.log('new_value');
console.dir(new_value);
console.log('new_filename');
console.dir(new_filename);

try
{
    fs.appendFileSync(__dirname+dir+new_filename, txt);
}
catch (err) 
{
    if (err.code === 'ENOENT') 
    {
        console.log('File not found!');
    } 
    else 
    {
      fs.appendFileSync(__dirname+dir+'__LOG__ERR__.txt', err);   
      return true;
    }
}

fs.appendFileSync(__dirname+dir+new_filename, '\n');

try
{
    fetchData(href).then((res) => {

    const html = res.data;
    const $ = cheerio.load(html);
    const statsTable = $('textarea#textareaCode');

    statsTable.each(function() {
        let textarea = $(this).text();
        console.log('textarea');
        try
        {
            fs.appendFileSync(__dirname+dir+new_filename, textarea);
        }
        catch (err) 
        {
            if (err.code === 'ENOENT') 
            {
                console.log('File not found!');
            } 
            else 
            {
              fs.appendFileSync(__dirname+dir+'__LOG__ERR__.txt', err);                  
              return true;
            }
        }

        console.log(textarea);
    }); /*fin statsTable*/

    })/*fin fetchData treatement*/

}
catch
{
    textarea ='_no_response_';

    fs.writeFileSync(__dirname+dir+new_filename, textarea);
  
}

}/* fin Glob_links*/


async function fetchData(url) {
    console.log("Crawling data...")
    // make http call to url
    let response = await axios(url).catch((err) => console.log(err));

    if (response.status !== 200) {
        console.log("Error occurred while fetching data");
        return;
    }
    return response;
}


============================================================


