[
  {
    "id": 1,
    "keyword": null,
    "link": "                                                                        ",
    "title": " \"java.lang.NoClassDefFoundError: org/yaml/snakeyaml/LoaderOptions\"                                                                        ",
    "description": "# Solution: Add the following dependency to the pom.xml file.  <!-- https://mvnrepository.com/artifact/org.yaml/snakeyaml -->\r\n<dependency>     <groupId>org.yaml</groupId>     <artifactId>snakeyaml</artifactId>     <version>1.23</version>\r\n</dependency> \r\n\r\n                    \r\n                    \r\n                    ",
    "reg_date": "2021-11-01T15:07:04.000Z"
  },
  {
    "id": 2,
    "keyword": null,
    "link": null,
    "title": " 'Java' is not recognized as an internal or external command",
    "description": "1. downlaod java. (just search java) 2. download JDK (again just search JDK) if that didn't work go to where java is installed and add javapath to path.  (it is usually located at C:\\Program Files\\Common Files\\Oracle\\Java\\javapath ) Adding to path: 1. press widows key and type: system environment variables and press enter 2. press enviroment variables 3. under system variables find \"Path\" and double click it. 4. click new and paste the path to javapath folder\n",
    "reg_date": "2021-10-12T12:00:18.000Z"
  },
  {
    "id": 3,
    "keyword": null,
    "link": null,
    "title": " 'tools:replace=\"android:appComponentFactory\"' to <application> element at AndroidManifest.xml:6:5-34:19 to override.",
    "description": "    android:appComponentFactory=\"androidx.core.app.CoreComponentFactory\"     tools:replace=\"android:appComponentFactory\"     android.useAndroidX=true     android.enableJetifier=true\n",
    "reg_date": "2021-10-12T12:00:18.000Z"
  },
  {
    "id": 4,
    "keyword": null,
    "link": null,
    "title": " ++i vs i++ java",
    "description": "int a = 0; int b = a++; // b = 0; a = 1  a = 0; b = ++a: // b = 1; a = 1 \nint i = 3; int a = i++; // a = 3, i = 4 int b = ++a; // b = 4, a = 4 \n",
    "reg_date": "2021-10-12T12:00:18.000Z"
  },
  {
    "id": 5,
    "keyword": null,
    "link": null,
    "title": " <?xml version=\"1.0\" encoding=\"UTF-8\"?>",
    "description": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>  -<plist version=\"1.0\">   -<array>   -<dict>  <key>MR_21E1739C46034CF483FEFD94D0CC92EE</key>   -<dict>  <key>address</key>  <string>thuongluk145@gmail.com</string>  <key>original source</key>  <string>com.apple.mobilemail</string>  <key>sending address</key>  <string>hangmanhcuong1711@gmail.com</string>  <key>encoding version</key>  <integer>1</integer>  <key>t</key>   -<array>  <date>2019-05-03T00:30:26Z</date>  </array>  </dict>  </dict>   -<dict>  <key>MR_D770A886AC75C63BC29E5BEA15FCFC40</key>   -<dict>  <key>address</key>  <string>dangtai2911@gmail.com</string>  <key>original source</key>  <string>com.apple.mobilemail</string>  <key>sending address</key>  <string>hangmanhcuong1711@gmail.com</string>  <key>encoding version</key>  <integer>1</integer>  <key>t</key>   -<array>  <date>2019-05-03T09:26:15Z</date>  </array>  </dict>  </dict>   -<dict>  <key>MAX_RECENTS</key>   -<dict>  <key>map location</key>  <integer>500</integer>  <key>encoding version</key>  <integer>1</integer>  </dict>  </dict>   -<dict>  <key>MR_7C6988B8AE7129E90F377E784304D883</key>   -<dict>  <key>address</key>  <string>dangtai@gmail.com</string>  <key>original source</key>  <string>com.apple.mobilemail</string>  <key>sending address</key>  <string>hangmanhcuong1711@gmail.com</string>  <key>encoding version</key>  <integer>1</integer>  <key>t</key>   -<array>  <date>2019-05-03T05:08:25Z</date>  </array>  </dict>  </dict>  </array>  </plist>\nsimpleRawPath\": {         \"điểm\": [{           \"latE7\": 186711388,           \"lngE7\": 1056881409,           \"timestampMs\": \"1614603922283\",           \"độ ch&iacute;nh x&aacute;c\": 65         }]       },       \"ParkingEvent\": {         \"timestampMs\": \"1614604273000\",         \"vị tr&iacute;\" : {           \"vĩ độE7\": 186794206,           \"kinh độE7\": 1056744738,           \"độ ch&iacute;nh x&aacute;c\": 70\n",
    "reg_date": "2021-10-12T12:00:19.000Z"
  },
  {
    "id": 6,
    "keyword": null,
    "link": null,
    "title": " > Failed to apply plugin 'com.android.internal.version-check'.",
    "description": "classpath 'com.android.tools.build:gradle:3.5.3' \n",
    "reg_date": "2021-10-12T12:00:19.000Z"
  },
  {
    "id": 7,
    "keyword": null,
    "link": null,
    "title": " ?whats is the difference between while loop and for loop",
    "description": "//First Code WHILE loop int x = 0;  while (x < 10) {   //Do Something while x is less than 10      // if you don't want infinity loop increse x   x++; }  //Second Code But Now Its FOR loop with the same int x with different different result int x = 10  for (int i = 0; i < x; i++) {   //Do Something while i is less than x }  //in the while loop we executeing the code until all the conditions are true. //in the for loop we are looping through the int that we created,  //in our loop the int is 'i', and every time we done execute the code in  //the loop we check if the condition that we gave in the loop in our is  //if 'i' < x and if it's false we are increasing 'i' and execute the code  //again until the condition is true.   \n",
    "reg_date": "2021-10-12T12:00:19.000Z"
  },
  {
    "id": 8,
    "keyword": null,
    "link": null,
    "title": " @pathvariable spring boot",
    "description": "package com.zetcode.controller;  import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RestController;  @RestController public class MyController {        @RequestMapping(path=\"/{name}/{age}\")     public String getMessage(@PathVariable(\"name\") String name,              @PathVariable(\"age\") String age) {         var msg = String.format(\"%s is %s years old\", name, age);         return msg;     }    }\n",
    "reg_date": "2021-10-12T12:00:19.000Z"
  },
  {
    "id": 9,
    "keyword": null,
    "link": null,
    "title": " @test annotation in junit",
    "description": " # Used in JAVA  public class Example {     @Test     public void method() {        org.junit.Assert.assertTrue( new ArrayList().isEmpty() );     }  }  \nimport junit.framework.*;  public class JavaTest extends TestCase {    protected int value1, value2;        // assigning the values    protected void setUp(){       value1 = 3;       value2 = 3;    }     // test method to add two values    public void testAdd(){       double result = value1 + value2;       assertTrue(result == 6);    } }\n",
    "reg_date": "2021-10-12T12:00:19.000Z"
  },
  {
    "id": 10,
    "keyword": null,
    "link": null,
    "title": " @value annotation spring",
    "description": "@Value(\"${value.from.file}\")private String valueFromFile;\n",
    "reg_date": "2021-10-12T12:00:19.000Z"
  },
  {
    "id": 11,
    "keyword": null,
    "link": null,
    "title": " @value example spring boot",
    "description": "@Value(\"${value.from.file}\")private String valueFromFile;\n",
    "reg_date": "2021-10-12T12:00:19.000Z"
  },
  {
    "id": 12,
    "keyword": null,
    "link": null,
    "title": " \\t\\t java",
    "description": "public static void main(String args[]) {           String str1 = \"Hello\";           String str2 = \"world\";           System.out.println(str1 + \"\\t\" + str2); } // \\t is a tab space output: Hello\tworld\n for (int k = 0; k < 7; k++){         System.out.println(\"Vak/project:\\t\" + vakNamen[x] + \"\\t\\t\"         + \"Cijfer: \" + vakCijfers[x] + \"\\t\" + \"Behaalde punten: \"         + vakPunten[x]);         x++;     }\n",
    "reg_date": "2021-10-12T12:00:19.000Z"
  },
  {
    "id": 13,
    "keyword": null,
    "link": null,
    "title": " {} when initialising arraylist java",
    "description": "ArrayList<Type> obj = new ArrayList<Type>(         Arrays.asList(Object o1, Object o2, Object o3, ....so on));\nimport java.util.*; public class InitializationExample1 {    public static void main(String args[]) { \t   ArrayList<String> obj = new ArrayList<String>( \t\tArrays.asList(\"Pratap\", \"Peter\", \"Harsh\")); \t  System.out.println(\"Elements are:\"+obj);    } }\nArrayList<Type> list = new ArrayList<Type>(Arrays.asList( \t\telem1, elem2,..., elemN         ));\n",
    "reg_date": "2021-10-12T12:00:20.000Z"
  },
  {
    "id": 14,
    "keyword": null,
    "link": null,
    "title": " |= java operator",
    "description": "foo = 32;   // 32 =      0b00100000 bar = 9;    //  9 =      0b00001001 baz = 10;   // 10 =      0b00001010 foo |= bar; // 32 | 9  = 0b00101001 = 41             // now foo = 41 foo |= baz; // 41 | 10 = 0b00101011 = 43             // now foo = 43\nfoo = 32;   // 32 =      0b00100000 bar = 9;    //  9 =      0b00001001 baz = 10;   // 10 =      0b00001010 foo |= bar; // 32 | 9  = 0b00101001 = 41             // now foo = 41 foo |= baz; // 41 | 10 = 0b00101011 = 43             // now foo = 43 \n",
    "reg_date": "2021-10-12T12:00:20.000Z"
  },
  {
    "id": 15,
    "keyword": null,
    "link": null,
    "title": " équivalent setTimeInterval java",
    "description": "// Param is optional, to run task on UI thread.      Handler handler = new Handler(Looper.getMainLooper()); Runnable runnable = new Runnable() {     @Override     public void run() {         // Do the task...         handler.postDelayed(this, milliseconds) // Optional, to repeat the task.     } }; handler.postDelayed(runnable, milliseconds);  // Stop a repeating task like this. handler.removeCallbacks(runnable);\n",
    "reg_date": "2021-10-12T12:00:20.000Z"
  },
  {
    "id": 16,
    "keyword": null,
    "link": null,
    "title": " -Xlint:deprecation",
    "description": "//add to android project level build.gradle allprojects {     gradle.projectsEvaluated {         tasks.withType(JavaCompile) {             options.compilerArgs << \"-Xlint:unchecked\" << \"-Xlint:deprecation\"         }     } }\n",
    "reg_date": "2021-10-12T12:00:20.000Z"
  },
  {
    "id": 17,
    "keyword": null,
    "link": null,
    "title": " .charat() java",
    "description": "The charAt() method returns the character at the specified index in a string. The index of the first character is 0, the second character is 1, and so on. String myStr = \"Hello\"; char result = myStr.charAt(0); System.out.println(result); o/p: H\n// String charAt() method in java example public class StringCharAtMethodJava {    public static void main(String[] args)    {       String strInput = \"HelloWorldJava\";       char ch1 = strInput.charAt(1);       char ch2 = strInput.charAt(6);       char ch3 = strInput.charAt(10);       System.out.println(\"Character at 1st index is: \" + ch1);       System.out.println(\"Character at 6th index is: \" + ch2);       System.out.println(\"Character at 10th index is: \" + ch3);    } }\n",
    "reg_date": "2021-10-12T12:00:20.000Z"
  },
  {
    "id": 18,
    "keyword": null,
    "link": null,
    "title": " .length array java",
    "description": "/** * An Example to get the Array Length is Java */ public class ArrayLengthJava { public static void main(String[] args) { String[] myArray = { \"I\", \"Love\", \"Music\" }; int arrayLength = myArray.length; //array length attribute System.out.println(\"The length of the array is: \" + arrayLength); } } \nclass Main {   public static void main(String[] args) {     // Creating an array called x.     String[] x = new String[]{\"This\", \"Should\", \"return\", \"4\"};     // \"x.length\" finds the length of the array \"x\".     System.out.println(x.length);     // returns 4   } }\n",
    "reg_date": "2021-10-12T12:00:20.000Z"
  },
  {
    "id": 19,
    "keyword": null,
    "link": null,
    "title": " 1.6.6: mla citation awnser",
    "description": "mport java.util.*;  public class NightOut {     public static void main(String[] args)     {         Scanner imput = new Scanner(System.in);                  double dinner = 14.56;                  int minigolf = 10;                  double dessert = 4.56;                           double grandtotal = dinner + 2*minigolf + dessert;                System.out.println(\"How much did dinner cost?\");                System.out.println(\"Dinner: $\" + dinner);                System.out.println(\"How much is mini-golf for one person?\");                System.out.println(\"mini-golf: $\" + minigolf);                System.out.println(\"How much did dessert cost?\");                 System.out.println(\"Dessert: $\" + dessert);           System.out.println(\"Grand Total: $\" + grandtotal);        \n",
    "reg_date": "2021-10-12T12:00:20.000Z"
  },
  {
    "id": 20,
    "keyword": null,
    "link": null,
    "title": " 12 hours to 24 hours java",
    "description": "String result =                                       // Text representing the value of our date-time object.     LocalTime.parse(                                  // Class representing a time-of-day value without a date and without a time zone.         \"03:30 PM\" ,                                  // Your `String` input text.         DateTimeFormatter.ofPattern(                  // Define a formatting pattern to match your input text.             \"hh:mm a\" ,             Locale.US                                 // `Locale` determines the human language and cultural norms used in localization. Needed here to translate the `AM` & `PM` value.         )                                             // Returns a `DateTimeFormatter` object.     )                                                 // Return a `LocalTime` object.     .format( DateTimeFormatter.ofPattern(\"HH:mm\") )   // Generate text in a specific format. Returns a `String` object. ; \n",
    "reg_date": "2021-10-12T12:00:20.000Z"
  },
  {
    "id": 21,
    "keyword": null,
    "link": null,
    "title": " 20.21 (Use Comparator)",
    "description": "import java.util.Arrays; import java.util.Comparator;  public class Exercise_21 {      public static void main(String[] args) {         GeometricObject[] list = {                 new Circle(5), new Rectangle(4, 5),                 new Circle(5.5), new Rectangle(2.4, 5),                 new Circle(0.5), new Rectangle(4, 65),                 new Circle(4.5), new Rectangle(4.4, 1),                 new Circle(6.5), new Rectangle(4, 5)         };           System.out.println(\"Before sort\");         for (GeometricObject o : list) {             System.out.println(o.getArea());         }           selectionSort(list, new Comparator<GeometricObject>() {             @Override             public int compare(GeometricObject o1, GeometricObject o2) {                 double a1 = o1.getArea();                 double a2 = o2.getArea();                 if (a1 > a2)                     return 1;                 if (a1 == a2)                     return 0;                 else                     return -1;             }         });          System.out.println(\"After sort\");         for (GeometricObject o : list) {             System.out.println(o.getArea());         }      }      public static <E> void selectionSort(E[] array, Comparator<? super E> comparator) {          for (int i = 0; i < array.length - 1; i++) {              E currentMin = array[i];             int minIndex = i;             for (int k = i + 1; k < array.length; k++) {                 if (comparator.compare(array[k], currentMin) < 0) {                     currentMin = array[k];                     minIndex = k;                 }             }              if (minIndex != i) {                 array[minIndex] = array[i];                 array[i] = currentMin;             }         }     }  } \n",
    "reg_date": "2021-10-12T12:00:21.000Z"
  },
  {
    "id": 22,
    "keyword": null,
    "link": null,
    "title": " 2 decimal places print format JAVA",
    "description": "printf(%.2f);\n",
    "reg_date": "2021-10-12T12:00:21.000Z"
  },
  {
    "id": 23,
    "keyword": null,
    "link": null,
    "title": " 2d array java",
    "description": "int[][] multiples = new int[4][2];     // 2D integer array with 4 rows                                            and 2 columns String[][] cities = new String[3][3];  // 2D String array with 3 rows                                            and 3 columns\nchar[][] array = new int[rows][columns];\nint[][] arr = new int[row][column]; \n//Length int[][]arr= new int [filas][columnas]; arr.length=filas;          int[][] a = {             {1, 2, 3},              {4, 5, 6, 9},              {7},          };                // calculate the length of each row         System.out.println(\"Length of row 1: \" + a[0].length);         System.out.println(\"Length of row 2: \" + a[1].length);         System.out.println(\"Length of row 3: \" + a[2].length);     }\nString[][][] data = new String[3][4][2];\n int[][] arr = new int[10][20];          arr[0][0] = 1; \n",
    "reg_date": "2021-10-12T12:00:21.000Z"
  },
  {
    "id": 24,
    "keyword": null,
    "link": null,
    "title": " 2d array length in java",
    "description": "public class Main {   public static void main(String[] args) {     int[][] test = new int[10][4];     int rows = test.length;     int coloumns = test[0].length;     System.out.println(rows);     System.out.println(coloumns);   } }\n  int[][] test;    test = new int[5][10];    int row = test.length;   int col = test[0].length;\npublic static void main(String[] args) {      int[][] foo = new int[][] {         new int[] { 1, 2, 3 },         new int[] { 1, 2, 3, 4},     };      System.out.println(foo.length); //2 // gives count of rows     System.out.println(foo[0].length); //3 // gives count of columns for particular row     System.out.println(foo[1].length); //4 }\n",
    "reg_date": "2021-10-12T12:00:21.000Z"
  },
  {
    "id": 25,
    "keyword": null,
    "link": null,
    "title": " 2d arraylist in java",
    "description": "int vertexCount = 3; ArrayList<ArrayList<Integer>> graph = new ArrayList<>(vertexCount); //Next, we'll initialize each element of ArrayList with another ArrayList:  for(int i=0; i < vertexCount; i++) {     graph.add(new ArrayList()); }\nList<List<String>> listOfLists = new ArrayList<List<String>>(size);  for(int i=0; i<size; i++) { \tlistOfLists.add(new ArrayList<String>()); }\nArrayList<ArrayList<Object>> a = new ArrayList<ArrayList<Object>>();\n",
    "reg_date": "2021-10-12T12:00:21.000Z"
  },
  {
    "id": 26,
    "keyword": null,
    "link": null,
    "title": " 2d arrays | java",
    "description": "int[][] arr = new int[row][column]; \n int[][] arr = new int[m][n]; \n",
    "reg_date": "2021-10-12T12:00:21.000Z"
  },
  {
    "id": 27,
    "keyword": null,
    "link": null,
    "title": " 30/8",
    "description": "int x = 30; int y = 8; int answer = x / y; System.out.println(answer);\n",
    "reg_date": "2021-10-12T12:00:21.000Z"
  },
  {
    "id": 28,
    "keyword": null,
    "link": null,
    "title": " 3 important interface in jdbc",
    "description": "Connection =    Helps our java project connect to database Statement =    Helps to write and execute SQL query ResultSet =    A DataStructure where the data from query result stored +++++++++++++++++++++++++++++++++++++++++++++++++++++++++         After succesfully created the connect next step is STATEMENT  Statement statement = connection.createStatement(); We use createStatement() method to create the statement from our connection. -The result we get from this type of statement can only move from top to bottom, not other way around  Statement statement = connection. createStatement(ResultSet TYPE_SCROLL_INSENSITIVE ,ResultSet CONCUR_READ_ONLY);  -The result we get from this type of statement can freely move between rows  Once we have statement we can run the query and get the result to ResultSet format  \t\timport java.sql.ResultSet;          We use the method executeQuery() to execute our queries  ResultSet result = statement.               executeQuery(\"Select * from employees\");\n",
    "reg_date": "2021-10-12T12:00:21.000Z"
  },
  {
    "id": 29,
    "keyword": null,
    "link": null,
    "title": " 4 digit armstrong number in java",
    "description": "// Check whether a given number is armstrong number or not import java.util.Scanner; public class ArmstrongNumber {    public static void main(String[] args)    {       int x, y, z = 0, temp;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter a number: \");       x = sc.nextInt();       temp = x;       while(x > 0)       {          y = x % 10;          x = x / 10;          z = z + (y * y * y);       }       if(temp == z)       {          System.out.println(temp + \" is an Armstrong Number.\");       }       else       {          System.out.println(temp + \" is not an Armstrong Number.\");       }       sc.close();    } }\n// 4 digit armstrong number in java public class ArmstrongNumberDemo {    public static void main(String[] args)     {       int num = 9474, realNumber, remainder, output = 0, a = 0;       realNumber = num;       for(;realNumber != 0; realNumber /= 10, ++a);       realNumber = num;       for(;realNumber != 0; realNumber /= 10)       {          remainder = realNumber % 10;          output += Math.pow(remainder, a);       }       if(output == num)       {          System.out.println(num + \" is an Armstrong number.\");       }       else       {          System.out.println(num + \" is not an Armstrong number.\");       }    } }\n int c=0,a,temp;       int n=153;//It is the number to check armstrong       temp=n;       while(n>0)       {       a=n\u0010;       n=n/10;       c=c+(a*a*a);       }       if(temp==c)       System.out.println(\"armstrong number\");        else           System.out.println(\"Not armstrong number\");   \nimport java.util.Scanner;  public class Armstrong {   public static void main(String args[])   {     int num,temp,c=0;   \tScanner in=new Scanner(System.in);   \tnum=in.nextInt();   \ttemp=num;   \twhile(num!=0)   \t{     \tint d=num\u0010; //extracting last digit     \tc+=d*d*d;     \tnum/=10; // removing last digit   \t}   \tif(temp==c)   \t{     \tSystem.out.println(\"Number is Armstrong\");   \t}   \telse   \t\tSystem.out.println(\"Number is not Armstrong\");   } }\nimport java.util.Scanner;  /*  *@author: Mayank Manoj Raicha  * Armstrong Number in Java: A positive number is called armstrong number if it is equal to the sum of cubes of its digits   * for example 0, 1, 153, 370, 371, 407 etc.  * 153 = (1*1*1)+(5*5*5)+(3*3*3)  = 1+125+27 = 153  */ public class ArmstrongNumberExample {  \tpublic static void main(String[] args) { \t\t \t\tint sum = 0; \t\t \t\tScanner in = new Scanner(System.in); \t\tSystem.out.println(\"Enter the number: \"); \t\tint input = in.nextInt(); //1634 \t\tString val = String.valueOf(input); \t\tchar[] charArray = val.toCharArray();  //charArray[0] = \"1\" , charArray[1] = \"6\", charArray[2] = \"3\", charArray[3] = \"4\" \t\tint[] numArray = new int[charArray.length]; //Declaring this array to store the result of getPowerOfNumber() method for each digit. \t\t \t\t//for each char element calculate the power of number and store it in the \"cubedNumArray\" array. \t\tfor(int i=0; i<charArray.length; i++) { \t\t\tnumArray[i] = getPowerOfNumber(Integer.parseInt(String.valueOf(charArray[i])), charArray.length); \t\t\tsum = sum + numArray[i]; \t\t} \t\t       //Compare if the resulting sum is equal to the original input. \t\tif(sum == input) { \t\t\tSystem.out.println(\"Entered number is an Armstrong number.\"); \t\t}else { \t\t\tSystem.out.println(\"Entered number is NOT an Armstrong number.\"); \t\t} \t\t \t\tin.close(); \t}    \t//Calculate & Return the value of the first argument raised to the power of the second argument \tpublic static int getPowerOfNumber(int num, int count) { \t\treturn (int) Math.pow(num, count); \t} }\n",
    "reg_date": "2021-10-12T12:00:22.000Z"
  },
  {
    "id": 30,
    "keyword": null,
    "link": null,
    "title": " 5:26 java: package javafx.application does not exist",
    "description": "sudo apt-get install openjdk-8-jre \n",
    "reg_date": "2021-10-12T12:00:22.000Z"
  },
  {
    "id": 31,
    "keyword": null,
    "link": null,
    "title": " ARE THERE POINTER IN JAVA",
    "description": "Java does not have pointers.\n",
    "reg_date": "2021-10-12T12:00:22.000Z"
  },
  {
    "id": 32,
    "keyword": null,
    "link": null,
    "title": " Access denied finding property \"camera.aux.packagelist\"",
    "description": "// I have to face the same issue in MI A1 device but not using this library. // My solution is to use the below code in your manifest  <application> <uses-library android:name=\"org.apache.http.legacy\" android:required=\"false\"/> </application>  // It was solved my Access denied finding property \"camera.aux.packagelist\" issue.\n",
    "reg_date": "2021-10-12T12:00:22.000Z"
  },
  {
    "id": 33,
    "keyword": null,
    "link": null,
    "title": " Add two matrices in java using bufferedreader",
    "description": "// Add two matrices in java using bufferedreader import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class AddTwoMatrixUsingBufferedReader {    public static void main(String[] args) throws NumberFormatException, IOException    {       BufferedReader br = new BufferedReader(new InputStreamReader(System.in));       int a, b;       int[][] arr1 = new int[2][2];       int[][] arr2 = new int[2][2];       int[][] addition = new int[2][2];       System.out.println(\"Please enter elements of first matrix: \");       for(a = 0; a < 2; a++)       {          for(b = 0; b < 2; b++)          {             arr1[a][b] = Integer.parseInt(br.readLine());          }       }       System.out.println(\"Please enter elements of second matrix: \");       for(a = 0; a < 2; a++)       {          for(b = 0; b < 2; b++)          {             arr2[a][b] = Integer.parseInt(br.readLine());          }       }       System.out.println(\"Addition of two matrix in java using bufferedreader: \");       for(a = 0; a < 2; a++)       {          for(b = 0; b < 2; b++)          {             addition[a][b] = arr1[a][b] + arr2[a][b];             System.out.print(\" \" + addition[a][b]);          }          System.out.println( );       }    } }\n",
    "reg_date": "2021-10-12T12:00:22.000Z"
  },
  {
    "id": 34,
    "keyword": null,
    "link": null,
    "title": " Adding an existing project to GitHub",
    "description": "cd existing_folder git init git remote add origin https://gitlab.com/abc.git git add . git commit -m \"Initial commit\" git push -u origin master\n# Go into your existing directory and run below commands cd docker-spring-boot echo \"# docker-spring-boot\" >> README.md git init git add -A git commit -m \"first commit\" git branch -M master git remote add origin https://github.com/devopsmaster/docker-spring-boot.git git push -u origin master                   \ngit init git add . git commit -m \"First commit\" git remote add origin <remote repository URL> git remote -v git branch -M main git push -u origin main  1- # Create a new repository on GitHub. To avoid errors, do not initialize the new repository with README, license, or gitignore files. You can add these files after your project has been pushed to GitHub.  2- # Open Terminal.  3- # Change the current working directory to your local project.  4- # Initialize the local directory as a Git repository. $ git init  5- # Add the files in your new local repository. This stages them for the first commit. $ git add . # Adds the files in the local repository and stages them for commit. To unstage a file, use 'git reset HEAD YOUR-FILE'.  6- # Commit the files that you've staged in your local repository. $ git commit -m \"First commit\" # Commits the tracked changes and prepares them to be pushed to a remote repository. To remove this commit and modify the file, use 'git reset --soft HEAD~1' and commit and add the file again.  7- # At the top of your GitHub repository's Quick Setup page, click  to copy the remote repository URL.  8- # In Terminal, add the URL for the remote repository where your local repository will be pushed. $ git remote add origin <remote repository URL> # Sets the new remote $ git remote -v # Verifies the new remote URL  9- # Push the changes in your local repository to GitHub. $ git branch -M main $ git push -u origin main # Pushes the changes in your local repository up to the remote repository you specified as the origin\n// How to add your local code to a git repository?    // 1 - Create a repository on GitHub   // 2 - Open a command line on the root folder of your project   // 3 - Init a local repository        git add -A   // 4 - Stage all the files        git add .   // 5 - Commit        git commit -m \"First commit\"   // 6 - Associate the Git repository        git remote add origin [YOUR_REPO_HTTPS_LINK]   // 7 - Check remote connection        git remote -v   // 8 - Push all to the remote repository        git push origin master \ngit remote add origin        https://github.com/asd/FinraDeck.git (github adresi) &bull; git push -u origin master \nWe make a change in one branch, and we want carry that change to another branch. In order two merge two branches, we need to 1. Switch to the branch where we want to take the changes to. git checkout master(recently changed to main) 2. Run the merge command by mentioning the branch name where the changes are. git merge develop Takes the changes from develop and merges into my current branch (master) git branch -d <branch_name> deletes the branch. If we have unmerged changes, this command gives a warning and does not delete. git branch -D <branch_name> deletes the branch even if it has unmerged changes. Gives no warning. git push --set-upstream origin <branch_name> it creates a new branch with given name in the remote and pushes the changes from local branch to the new branch. \n",
    "reg_date": "2021-10-12T12:00:22.000Z"
  },
  {
    "id": 35,
    "keyword": null,
    "link": null,
    "title": " Android Splash Screen",
    "description": "//MainActivity.java  import androidx.appcompat.app.AppCompatActivity; import android.os.Bundle;  public class MainActivity extends AppCompatActivity {      @Override     protected void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         setContentView(R.layout.activity_main);     } }  //splashscreen.java  import android.app.Activity; import android.content.Intent; import android.os.Bundle; import android.os.Handler;  public class splashscreen extends Activity {     @Override     public void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         setContentView(R.layout.splashscreen);          //Splash Screen duration         int secondsDelayed = 1;         new Handler().postDelayed(new Runnable() {             public void run() {                 startActivity(new Intent(splashscreen.this, MainActivity.class));                 finish();             }         }, secondsDelayed * 3000);     } }  //activity_main.xml  <?xml version=\"1.0\" encoding=\"utf-8\"?> <androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"     xmlns:app=\"http://schemas.android.com/apk/res-auto\"     xmlns:tools=\"http://schemas.android.com/tools\"     android:layout_width=\"match_parent\"     android:layout_height=\"match_parent\"     tools:context=\".MainActivity\">      <TextView         android:layout_width=\"wrap_content\"         android:layout_height=\"wrap_content\"         android:text=\"Hello World!\"         app:layout_constraintBottom_toBottomOf=\"parent\"         app:layout_constraintLeft_toLeftOf=\"parent\"         app:layout_constraintRight_toRightOf=\"parent\"         app:layout_constraintTop_toTopOf=\"parent\" />  </androidx.constraintlayout.widget.ConstraintLayout>  //splashscreen.xml  <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"     android:orientation=\"vertical\" android:layout_width=\"match_parent\"     android:layout_height=\"match_parent\"     android:background=\"@drawable/splashlogo\"      />        Source: https://github.com/Lunox-Code/SplashScreen\n///*********************declarling time here********************     private static int SPLASH_TIME_OUT = 4000;      @Override     protected void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);          //This  code is used for hide the sheek bar of application************************************         getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);         //***********************************************************************************************          setContentView(R.layout.activity_main);  // this code is for splash screen ************************************************         new Handler().postDelayed(new Runnable() {             @Override             public void run() {                 Intent intent = new Intent(MainActivity.this,HomeActivity.class);                 startActivity(intent);                 finish();             }         },SPLASH_TIME_OUT);     }\npublic class MainActivity extends AppCompatActivity{ \tprivate static int SPLASH_TIME_OUT = 5000; \t@Override \tprotected void onCreate(Bundle savedInstanceState){ \t\tsuper.onCreate(savedInstanceState); \t\tsetContentView(R.layout.activity_main); \t\tnew Handler().postDelayed(new Runnable(){ \t\t\t@override \t\t\tpublic void run(){ \t\t\t\tIntent homeIntent = new Intent(MainActivity.this, HomeActivity.class); \t\t\t\tstartActivity (homeIntent); \t\t\t\tfinish(); \t\t\t},SPLASH_TIME_OUT) ; \t} }\n",
    "reg_date": "2021-10-12T12:00:22.000Z"
  },
  {
    "id": 36,
    "keyword": null,
    "link": null,
    "title": " Android Studio",
    "description": "sudo snap install android-studio --classic\nInstall this if you want your computer's fans go BRRRRRRRRR\nWelcome to hell hole\nAndroid Studio is the official integrated development environment for Google's Android operating system, built on JetBrains' IntelliJ IDEA software and designed specifically for Android development.\npublic class Main {   public static void main(String[] args) {     System.out.println(\"Android Studio is the official integrated development environment for Google's Android operating system, built on JetBrains' IntelliJ IDEA software and designed specifically for Android development.\");   } } /* compile it in a online compier  u will get the answer */\nMy opinion: RAM consuming and pretty heavy size too.\nAndroid Studio is the official integrated development environment for Google's Android operating system, built on JetBrains' IntelliJ IDEA software and designed specifically for Android development.  Developer(s): Google, JetBrains Operating system: Windows, macOS, Linux, Chrome OS Stable release: 4.2.2 / 30 June 2021; 34 days ago Preview release: Bumblebee (2021.1.1) Canary 5 (July 27, 2021; 7 days ago) Size: 727 to 877 MB License: Binaries: Freeware, Source code: Apache License Written in: Java, Kotlin and C++  Integrate Flutter into your project and get started!\nThis is nice\nmaybe try vs code or atom\n",
    "reg_date": "2021-10-12T12:00:23.000Z"
  },
  {
    "id": 37,
    "keyword": null,
    "link": null,
    "title": " Android Studio - All file names in project are red but there are no errors",
    "description": "Just simply right clicked the file -> GIT -> Add.  Good Luck!  ~Lunox\n",
    "reg_date": "2021-10-12T12:00:23.000Z"
  },
  {
    "id": 38,
    "keyword": null,
    "link": null,
    "title": " App.java is not on the classpath of project",
    "description": "Right click on Folder -> Add folder to java source path\n",
    "reg_date": "2021-10-12T12:00:23.000Z"
  },
  {
    "id": 39,
    "keyword": null,
    "link": null,
    "title": " Area of a Circle in Java Programming",
    "description": "import java.util.Scanner;  public class Main {     public static void main(String[] args){         double R,A;         Scanner sc = new Scanner(System.in);         R = sc.nextDouble();         A = 3.14159 * R * R;         System.out.printf(\"A=%.4f\\n\",  A);    } }\n",
    "reg_date": "2021-10-12T12:00:23.000Z"
  },
  {
    "id": 40,
    "keyword": null,
    "link": null,
    "title": " Armstrong number in java using recursion",
    "description": "// Armstrong number in java using recursion import java.util.Scanner; class RecursionArmstrong {    int number, sum;    RecursionArmstrong(int num1)    {       number = num1;       sum = 0;    }    long powerOf(int a, int b)    {       if(b == 0)       {          return 1;       }       else       {          return a * powerOf(a, b - 1);       }    }    void executePowerOf()    {       int d = number, r;       long total = (long)sum;       while(d > 0)       {          r = d % 10;          d = d / 10;          total = total + powerOf(r, 3);       }       if(number == total)       {          System.out.println(\"Given number is Armstrong number.\");       }       else       {          System.out.println(\"Not an Armstrong number.\");       }    }    public static void main(String[] args)     {       Scanner sc = new Scanner(System.in);       System.out.print(\"Please enter the number: \");       int num = sc.nextInt();       RecursionArmstrong obj = new RecursionArmstrong(num);       obj.executePowerOf();       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:23.000Z"
  },
  {
    "id": 41,
    "keyword": null,
    "link": null,
    "title": " ArrayList E get(int index) method in java",
    "description": "import java.util.ArrayList; public class ArrayListGetExample {    public static void main(String[] args)    {       ArrayList<String> al = new ArrayList<String>();       al.add(\"lion\");       al.add(\"tiger\");       al.add(\"deer\");       al.add(\"cheetah\");       al.add(\"elephant\");       al.add(\"fox\");       al.add(\"hyenas\");       al.add(\"jackal\");       System.out.println(\"Get second element of ArrayList: \" + al.get(1));       System.out.println(\"Get third element of ArrayList: \" + al.get(2));       System.out.println(\"Get fifth element of ArrayList: \" + al.get(4));       System.out.println(\"Get sixth element of ArrayList: \" + al.get(5));    } }\nimport java.util.ArrayList; public class ArrayListSetMethodExample {    public static void main(String[] args)    {       ArrayList<String> names = new ArrayList<String>(5);       names.add(\"vinay\");       names.add(\"ajay\");       names.add(\"vijay\");       names.add(\"bharat\");       names.add(\"dinesh\");       System.out.println(\"ArrayList before using set() method: \" + names);       // change vijay name to chandan       System.out.println(\"ArrayList after using set() method: \");       names.set(2, new String(\"chandan\"));       for(int a = 0; a < 5; a++)       {          System.out.println(names.get(a).toString());       }    } }\nget(index);\nList<String> cities = new ArrayList<String>(); cities.add(\"Tuguegarao City\"); cities.add(\"Tabuk City\"); cities.add(\"Davao City\");  System.out.println(cities.get(1)); //prints \"Tabuk City\"\nimport java.util.ArrayList; import java.util.Arrays;   public class ArrayListExample  {     public static void main(String[] args)      {         ArrayList<String> list = new ArrayList<>(Arrays.asList(\"alex\", \"brian\", \"charles\", \"dough\"));                   String firstName = list.get(0);         //alex         String secondName = list.get(1);        //brian                   System.out.println(firstName);         System.out.println(secondName);     } } \n",
    "reg_date": "2021-10-12T12:00:23.000Z"
  },
  {
    "id": 42,
    "keyword": null,
    "link": null,
    "title": " ArrayList Object[] toArray() method in java",
    "description": "import java.util.ArrayList; import java.util.List; public class ArrayListObjectToArrayMethodExample {    public static void main(String[] args)    {       List<Integer> al = new ArrayList<Integer>();       al.add(12);       al.add(14);       al.add(16);       al.add(18);       al.add(20);       Object[] obj = al.toArray();       for(Object num : obj)       {          System.out.print(num + \" \");       }    } }\n",
    "reg_date": "2021-10-12T12:00:23.000Z"
  },
  {
    "id": 43,
    "keyword": null,
    "link": null,
    "title": " ArrayList add(int index, E element) method in java",
    "description": "import java.util.ArrayList; public class ArrayListAddAllMethod {    public static void main(String[] args)    {       // creating an empty ArrayList with initial capacity       ArrayList<Integer> al1 = new ArrayList<Integer>(5);       al1.add(11);       al1.add(13);       al1.add(15);       // printing all elements of al1       System.out.println(\"ArrayList 1 elements: \");       for(Integer number : al1)       {          System.out.println(\"Number: \" + number);       }       // creating another empty ArrayList with initial capacity       ArrayList<Integer> al2 = new ArrayList<Integer>(5);       al2.add(12);       al2.add(14);       al2.add(16);       al2.add(18);       // printing all elements of ArrayList2       System.out.println(\"ArrayList 2 elements: \");       for(Integer number : al2)       {          System.out.println(\"Number: \" + number);       }       // insert all elements of al2 at third position       al1.addAll(2, al2);       System.out.println(\"Print all elements: \");       // printing all elements in al1       for(Integer number : al1)       {          System.out.println(\"Number: \" + number);       }    } }\nimport java.util.ArrayList; public class ArrayListAddMethodExample {    public static void main(String[] args)    {       // creating an empty ArrayList with initial capacity       ArrayList<Integer> al = new ArrayList<Integer>(6);       al.add(12);       al.add(14);       al.add(16);       al.add(18);       al.add(20);       // adding element 15 at fourth position       al.add(3, 15);       for(Integer number : al)       {          System.out.println(\"Number: \" + number);       }    } }\n",
    "reg_date": "2021-10-12T12:00:23.000Z"
  },
  {
    "id": 44,
    "keyword": null,
    "link": null,
    "title": " ArrayList addAll(int index, Collection c) method in java",
    "description": "import java.util.ArrayList; public class ArrayListAddAllMethod {    public static void main(String[] args)    {       // creating an empty ArrayList with initial capacity       ArrayList<Integer> al1 = new ArrayList<Integer>(5);       al1.add(11);       al1.add(13);       al1.add(15);       // printing all elements of al1       System.out.println(\"ArrayList 1 elements: \");       for(Integer number : al1)       {          System.out.println(\"Number: \" + number);       }       // creating another empty ArrayList with initial capacity       ArrayList<Integer> al2 = new ArrayList<Integer>(5);       al2.add(12);       al2.add(14);       al2.add(16);       al2.add(18);       // printing all elements of ArrayList2       System.out.println(\"ArrayList 2 elements: \");       for(Integer number : al2)       {          System.out.println(\"Number: \" + number);       }       // insert all elements of al2 at third position       al1.addAll(2, al2);       System.out.println(\"Print all elements: \");       // printing all elements in al1       for(Integer number : al1)       {          System.out.println(\"Number: \" + number);       }    } }\nimport java.util.ArrayList; public class ArrayListAddMethodExample {    public static void main(String[] args)    {       // creating an empty ArrayList with initial capacity       ArrayList<Integer> al = new ArrayList<Integer>(6);       al.add(12);       al.add(14);       al.add(16);       al.add(18);       al.add(20);       // adding element 15 at fourth position       al.add(3, 15);       for(Integer number : al)       {          System.out.println(\"Number: \" + number);       }    } }\n",
    "reg_date": "2021-10-12T12:00:23.000Z"
  },
  {
    "id": 45,
    "keyword": null,
    "link": null,
    "title": " ArrayList clear() method in java",
    "description": "import java.util.ArrayList; public class ArrayListClearMethodExample {    public static void main(String[] args)    {       ArrayList<Integer> al = new ArrayList<Integer>(4);       al.add(9);       al.add(3);       al.add(5);       al.add(1);       System.out.println(\"ArrayList before clear() method: \" + al);       al.clear();       System.out.println(\"ArrayList after clear() method: \" + al);    } }\n",
    "reg_date": "2021-10-12T12:00:24.000Z"
  },
  {
    "id": 46,
    "keyword": null,
    "link": null,
    "title": " ArrayList clone() method in java",
    "description": "import java.util.ArrayList; public class ArrayListCloneMethodExample {    public static void main(String[] args)    {       ArrayList<String> al = new ArrayList<String>();       al.add(\"violet\");       al.add(\"indigo\");       al.add(\"blue\");       al.add(\"green\");       al.add(\"yellow\");       System.out.println(\"ArrayList before using clone() method: \" + al);       // create another ArrayList and copy       ArrayList<String> arrClone = new ArrayList<String>();       arrClone = (ArrayList)al.clone();       System.out.println(\"ArrayList after using clone() method: \" + arrClone);    } }\n",
    "reg_date": "2021-10-12T12:00:24.000Z"
  },
  {
    "id": 47,
    "keyword": null,
    "link": null,
    "title": " ArrayList contains(Object o) method in java",
    "description": "import java.util.ArrayList; public class ArrayListContainsMethodExample {    public static void main(String[] args)    {       ArrayList<String> names = new ArrayList<String>(5);       names.add(\"virat\");       names.add(\"dhoni\");       names.add(\"rohit\");       names.add(\"vijay\");       names.add(\"ajay\");       System.out.println(\"Names: \" + names);       System.out.print(\"Does list contains name dhoni?: \");       System.out.println(names.contains(\"dhoni\"));       System.out.print(\"Does list contains name Sudhakar?: \");       System.out.println(names.contains(\"Sudhakar\"));    } }\n",
    "reg_date": "2021-10-12T12:00:24.000Z"
  },
  {
    "id": 48,
    "keyword": null,
    "link": null,
    "title": " ArrayList containsAll(Collection c) method in java",
    "description": "import java.util.ArrayList; public class ArrayListContainsAllMethodExample {    public static void main(String[] args)    {       ArrayList<String> al1 = new ArrayList<String>();       al1.add(\"red\");       al1.add(\"green\");       al1.add(\"blue\");       System.out.println(\"ArrayList 1: \" + al1);       // creating another ArrayList       ArrayList<String> al2 = new ArrayList<String>();       // adding elements to second ArrayList       al2.add(\"blue\");       al2.add(\"green\");       System.out.println(\"ArrayList 2: \" + al2);       // checking if ArrayList 1 contains ArrayList 2       boolean output1 = al1.containsAll(al2);       System.out.println(\"Does ArrayList 1 contains all elements of ArrayList 2?: \" + output1);       // checking if ArrayList 2 contains ArrayList 1       boolean output2 = al2.containsAll(al1);       System.out.println(\"Does ArrayList 2 contains all elements of ArrayList 1?: \" + output2);    } }\n",
    "reg_date": "2021-10-12T12:00:24.000Z"
  },
  {
    "id": 49,
    "keyword": null,
    "link": null,
    "title": " ArrayList ensureCapacity(int minCapacity) method in java",
    "description": "import java.util.ArrayList; public class ArrayListEnsureCapacityMethodExample {    public static void main(String[] args)    {       ArrayList<Integer> al = new ArrayList<Integer>(5);       al.add(25);       al.add(36);       al.add(50);       // increase the capacity of ArrayList to 10 elements       al.ensureCapacity(10);       // printing all the elements available in list       for(Integer num : al)       {          System.out.println(\"Numbers: \" + num);       }    } }\n",
    "reg_date": "2021-10-12T12:00:24.000Z"
  },
  {
    "id": 50,
    "keyword": null,
    "link": null,
    "title": " ArrayList forEach(Consumer super action) method in java",
    "description": "import java.util.ArrayList; public class ArrayListForEachMethodExample {    public static void main(String[] args)    {       ArrayList<String> colors = new ArrayList<String>();       colors.add(\"red\");       colors.add(\"blue\");       colors.add(\"green\");       colors.add(\"yellow\");       System.out.println(\"list of colors: \");       // forEach method of ArrayList       colors.forEach((n) -> System.out.println(n));    } }\nimport java.util.ArrayList; public class ArrayListForEachMethodExample {    public static void main(String[] args)    {       ArrayList<Integer> al = new ArrayList<Integer>();       al.add(10);       al.add(50);       al.add(20);       al.add(82);       al.add(75);       // print numbers using forEach method of ArrayList       al.forEach((n) -> System.out.println(n));    } }\n",
    "reg_date": "2021-10-12T12:00:24.000Z"
  },
  {
    "id": 51,
    "keyword": null,
    "link": null,
    "title": " ArrayList indexOf(Object o) method in java",
    "description": "import java.util.ArrayList; public class ArrayListIndexOfMethodExample {    public static void main(String[] args)    {       ArrayList<Integer> al = new ArrayList<Integer>(5);       al.add(8);       al.add(6);       al.add(5);       al.add(7);       al.add(9);       System.out.print(\"ArrayList values are: \");       for(Integer num : al)       {          System.out.print(num);          System.out.print(\" \");       }       // indexOf() method to find index of 5       int position = al.indexOf(5);       System.out.println(\"\\nElement 5 is at index: \" + position);    } }\n",
    "reg_date": "2021-10-12T12:00:24.000Z"
  },
  {
    "id": 52,
    "keyword": null,
    "link": null,
    "title": " ArrayList isEmpty() method in java",
    "description": "import java.util.ArrayList; public class ArrayListIsEmptyMethodExample {    public static void main(String[] args)    {       ArrayList<Integer> al = new ArrayList<Integer>();       // before checking ArrayList using isEmpty() method       System.out.println(\"Is ArrayList empty: \" + al.isEmpty());       al.add(86);       al.add(25);       al.add(53);       al.add(85);       // after checking ArrayList using isEmpty() method       System.out.println(\"Is ArrayList empty: \" + al.isEmpty());       for(Integer num : al)       {          System.out.println(num);       }    } }\n",
    "reg_date": "2021-10-12T12:00:24.000Z"
  },
  {
    "id": 53,
    "keyword": null,
    "link": null,
    "title": " ArrayList iterator() method in java",
    "description": "import java.util.ArrayList; import java.util.Iterator; public class ArrayListIteratorMethodExample {    public static void main(String[] args)    {       ArrayList<String> fruits = new ArrayList<String>(7);       fruits.add(\"banana\");       fruits.add(\"mango\");       fruits.add(\"apple\");       fruits.add(\"watermelon\");       fruits.add(\"pineapple\");       fruits.add(\"orange\");       fruits.add(\"plum\");       Iterator<String> iterate;       iterate = fruits.iterator();       System.out.println(\"Fruits in ArrayList are: \");       while(iterate.hasNext())       {          System.out.println(iterate.next());       }    } }\n",
    "reg_date": "2021-10-12T12:00:24.000Z"
  },
  {
    "id": 54,
    "keyword": null,
    "link": null,
    "title": " ArrayList lastIndexOf(Object o) method in java",
    "description": "import java.util.ArrayList; public class ArrayListLastIndexOfMethodExample {    public static void main(String[] args)    {       ArrayList<Integer> al = new ArrayList<Integer>();       al.add(40);       al.add(98);       al.add(20);       al.add(98);       al.add(35);       al.add(45);       al.add(35);       System.out.println(\"Last occurrence of element 98 is: \" + al.lastIndexOf(98));       System.out.println(\"Last occurrence of element 35 is: \" + al.lastIndexOf(35));    } }\n",
    "reg_date": "2021-10-12T12:00:24.000Z"
  },
  {
    "id": 55,
    "keyword": null,
    "link": null,
    "title": " ArrayList listIterator() method in java",
    "description": "import java.util.ArrayList; import java.util.ListIterator; public class ArrayListListIteratorMethodExample {    public static void main(String[] args)    {       ArrayList<String> al = new ArrayList<String>();       al.add(\"plum\");       al.add(\"apple\");       al.add(\"orange\");       al.add(\"mango\");       al.add(\"pineapple\");       System.out.println(al);       ListIterator<String> iterate = al.listIterator(1);       while(iterate.hasNext())       {          String str = iterate.next();          System.out.println(str);       }    } }\nexample on listIterator() method IndexOutOfBoundsException import java.util.ArrayList; import java.util.ListIterator; public class ArrayListListIteratorMethodExample {    public static void main(String[] args)    {       ArrayList<String> al = new ArrayList<String>();       al.add(\"plum\");       al.add(\"apple\");       al.add(\"orange\");       al.add(\"mango\");       al.add(\"pineapple\");       System.out.println(al);       ListIterator<String> iterate = al.listIterator(5);       System.out.println(iterate.hasNext());       iterate = al.listIterator(6);    } }\n",
    "reg_date": "2021-10-12T12:00:24.000Z"
  },
  {
    "id": 56,
    "keyword": null,
    "link": null,
    "title": " ArrayList listIterator(int index) method in java",
    "description": "import java.util.ArrayList; import java.util.ListIterator; public class ArrayListListIteratorIndexMethodExample {    public static void main(String[] args)    {       ArrayList<String> al = new ArrayList<String>();       al.add(\"apple\");       al.add(\"pineapple\");       al.add(\"orange\");       al.add(\"watermelon\");       al.add(\"banana\");       System.out.println(\"ArrayList of fruits: \" + al);       ListIterator<String> lif = al.listIterator(1);       ListIterator<String> lib = al.listIterator(2);       // using hasNext() and next() methods to iterate in forward direction       System.out.println(\"Iterate in forward direction from second position: \");       while(lif.hasNext())       {          System.out.println(lif.next());       }       // using hasPrevious() and previous() methods to iterate in backward direction       System.out.println(\"Iterate in backward direction from second position: \");       while(lib.hasPrevious())       {          System.out.println(lib.previous());       }    } }\nexample on listIterator(int index) method IndexOutOfBoundsException import java.util.ArrayList; import java.util.ListIterator; public class ArrayListListIteratorIndexMethodExample {    public static void main(String[] args)    {       ArrayList<String> al = new ArrayList<String>();       al.add(\"apple\");       al.add(\"pineapple\");       al.add(\"orange\");       al.add(\"watermelon\");       al.add(\"banana\");       System.out.println(\"ArrayList of fruits: \" + al);       ListIterator<String> lif = al.listIterator(1);       ListIterator<String> lib = al.listIterator(6);       // using hasNext() and next() methods to iterate in forward direction       System.out.println(\"Iterate in forward direction from second position: \");       while(lif.hasNext())       {          System.out.println(lif.next());       }       // using hasPrevious() and previous() methods to iterate in backward direction       System.out.println(\"Iterate in backward direction from second position: \");       while(lib.hasPrevious())       {          System.out.println(lib.previous());       }    } }\n",
    "reg_date": "2021-10-12T12:00:25.000Z"
  },
  {
    "id": 57,
    "keyword": null,
    "link": null,
    "title": " ArrayList remove(Object o) method in java",
    "description": "import java.util.ArrayList; public class ArrayListRemoveObjectExample {    public static void main(String[] args)    {       // create an empty ArrayList       ArrayList<String> names = new ArrayList<String>(7);       names.add(\"Bharat\");       names.add(\"Chetan\");       names.add(\"Dinesh\");       names.add(\"Bharat\");       names.add(\"Falguna\");       names.add(\"Dinesh\");       names.add(\"Bharat\");       System.out.println(\"ArrayList before using remove(Object o) method: \");       for(int a = 0; a < 7; a++)       {          System.out.println(names.get(a).toString());       }       // removing first occurrence of \"Bharat\" and \"Dinesh\"       names.remove(\"Bharat\");       names.remove(\"Dinesh\");       System.out.println(\"ArrayList after using remove(Object o) method: \");       for(int a = 0; a < 5; a++)       {          System.out.println(names.get(a).toString());       }    } }\n",
    "reg_date": "2021-10-12T12:00:25.000Z"
  },
  {
    "id": 58,
    "keyword": null,
    "link": null,
    "title": " ArrayList removeAll(Collection c) method in java",
    "description": "import java.util.ArrayList; public class ArrayListRemoveAllExample {    public static void main(String[] args)    {       try       {          ArrayList<Integer> al1 = new ArrayList<Integer>();          al1.add(2);          al1.add(4);          al1.add(6);          al1.add(8);          al1.add(10);          System.out.println(\"ArrayList before using removeAll() method: \" + al1);          // create another ArrayList          ArrayList<Integer> al2 = new ArrayList<Integer>();          al2.add(2);          al2.add(4);          al2.add(6);          // print al2          System.out.println(\"Elements to be removed: \" + al2);          // remove elements from ArrayList using removeAll() method          al1.removeAll(al2);          // print al1          System.out.println(\"ArrayList after using removeAll() method: \" + al1);       }       catch(NullPointerException ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\n",
    "reg_date": "2021-10-12T12:00:25.000Z"
  },
  {
    "id": 59,
    "keyword": null,
    "link": null,
    "title": " ArrayList removeIf() method in java",
    "description": "import java.util.ArrayList; public class ArrayListRemoveIfMethodExample {    public static void main(String[] args)    {       ArrayList<Integer> al = new ArrayList<Integer>();       al.add(15);       al.add(8);       al.add(58);       al.add(19);       // remove numbers divisible by 2       al.removeIf(n -> (n % 2 == 0));       // print list       for(int a : al)       {          System.out.println(a);       }    } }\n",
    "reg_date": "2021-10-12T12:00:25.000Z"
  },
  {
    "id": 60,
    "keyword": null,
    "link": null,
    "title": " ArrayList removeRange(int fromIndex int toIndex) method in java",
    "description": "import java.util.ArrayList; // extending class since removeRange() is a protected method public class ArrayListRemoveRangeMethodExample extends ArrayList<Integer> {    public static void main(String[] args)    {       ArrayListRemoveRangeMethodExample al = new ArrayListRemoveRangeMethodExample();       al.add(23);       al.add(38);       al.add(18);       al.add(62);       al.add(27);       al.add(95);       System.out.println(\"ArrayList before using removeRange method: \" + al);       // removing range of first 2 elements       al.removeRange(0, 2);       System.out.println(\"ArrayList after using removeRange method: \" + al);    } }\n",
    "reg_date": "2021-10-12T12:00:25.000Z"
  },
  {
    "id": 61,
    "keyword": null,
    "link": null,
    "title": " ArrayList retainAll(Collection<?> c) method in java",
    "description": "import java.util.ArrayList; public class ArrayListRetainAllMethod {    public static void main(String[] args)    {       ArrayList<String> al1 = new ArrayList<String>();       al1.add(\"red\");       al1.add(\"blue\");       al1.add(\"green\");       // create another ArrayList       ArrayList<String> al2 = new ArrayList<String>();       al2.add(\"red\");       al2.add(\"green\");       al2.add(\"indigo\");       al2.add(\"yellow\");       // printing ArrayList before using retainAll() method       System.out.println(\"ArrayList 1: \" + al1);       System.out.println(\"ArrayList 2: \" + al2);       // applying retainAll() method to al2 passing al1 as parameter       al2.retainAll(al1);       System.out.println(\"After Applying retainAll() method to al2: \");       System.out.println(\"ArrayList 1: \" + al1);       System.out.println(\"ArrayList 2: \" + al2);    } }\n",
    "reg_date": "2021-10-12T12:00:25.000Z"
  },
  {
    "id": 62,
    "keyword": null,
    "link": null,
    "title": " ArrayList set(int index E element) method in java",
    "description": "import java.util.ArrayList; public class ArrayListGetExample {    public static void main(String[] args)    {       ArrayList<String> al = new ArrayList<String>();       al.add(\"lion\");       al.add(\"tiger\");       al.add(\"deer\");       al.add(\"cheetah\");       al.add(\"elephant\");       al.add(\"fox\");       al.add(\"hyenas\");       al.add(\"jackal\");       System.out.println(\"Get second element of ArrayList: \" + al.get(1));       System.out.println(\"Get third element of ArrayList: \" + al.get(2));       System.out.println(\"Get fifth element of ArrayList: \" + al.get(4));       System.out.println(\"Get sixth element of ArrayList: \" + al.get(5));    } }\nexample on ArrayList set(int index, E element) method for IndexOutOfBoundsException import java.util.ArrayList; public class ArrayListSetMethodExample {    public static void main(String[] args)    {       try       {          ArrayList<Integer> al = new ArrayList<Integer>();          al.add(36);          al.add(23);          al.add(39);          al.add(69);          al.add(56);          System.out.println(\"ArrayList before using set() method: \" + al);          // replace number at the index 7 with 25          System.out.println(\"Trying to replace the element at index greater than capacity: \");          int num = al.set(7, 25);          // printing modified ArrayList          System.out.println(\"ArrayList after using set() method: \" + al);          // printing replaced element          System.out.println(\"Replaced number: \" + num);       }       catch(IndexOutOfBoundsException ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\nimport java.util.ArrayList; public class ArrayListSetMethodExample {    public static void main(String[] args)    {       ArrayList<String> names = new ArrayList<String>(5);       names.add(\"vinay\");       names.add(\"ajay\");       names.add(\"vijay\");       names.add(\"bharat\");       names.add(\"dinesh\");       System.out.println(\"ArrayList before using set() method: \" + names);       // change vijay name to chandan       System.out.println(\"ArrayList after using set() method: \");       names.set(2, new String(\"chandan\"));       for(int a = 0; a < 5; a++)       {          System.out.println(names.get(a).toString());       }    } }\n",
    "reg_date": "2021-10-12T12:00:25.000Z"
  },
  {
    "id": 63,
    "keyword": null,
    "link": null,
    "title": " ArrayList spliterator() method in java",
    "description": "import java.util.ArrayList; import java.util.Spliterator; public class ArrayListSpliteratorMethodExample {    public static void main(String[] args)    {       ArrayList<String> al = new ArrayList<String>();       al.add(\"red\");       al.add(\"blue\");       al.add(\"green\");       al.add(\"yellow\");       al.add(\"orange\");       // creating Spliterator of ArrayList and using spliterator() method       Spliterator<String> iterate = al.spliterator();       System.out.println(\"ArrayList of colors: \");       // forEachRemaining method of Spliterator       iterate.forEachRemaining((n) -> System.out.println(n));    } }\n",
    "reg_date": "2021-10-12T12:00:25.000Z"
  },
  {
    "id": 64,
    "keyword": null,
    "link": null,
    "title": " ArrayList subList(int fromIndex, int toIndex) method in java",
    "description": "import java.util.ArrayList; import java.util.List; public class ArrayListSubListMethodExample {    public static void main(String[] args)    {       try       {          ArrayList<String> al = new ArrayList<String>();          al.add(\"orange\");          al.add(\"apple\");          al.add(\"strawberry\");          al.add(\"banana\");          al.add(\"mango\");          System.out.println(\"Given ArrayList: \" + al);          // get subList using subList() method          List<String> li = al.subList(2, 4);          // printing subList          System.out.println(\"Sublist of ArrayList: \" + li);       }       catch(IndexOutOfBoundsException e)       {          System.out.println(\"Exception: \" + e);       }       catch(IllegalArgumentException ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\nimport java.util.ArrayList; import java.util.List; public class ArrayListSubListMethodExample {    public static void main(String[] args)    {       try       {          ArrayList<String> al = new ArrayList<String>();          al.add(\"orange\");          al.add(\"apple\");          al.add(\"strawberry\");          al.add(\"banana\");          al.add(\"mango\");          System.out.println(\"Given ArrayList: \" + al);          // get subList using subList() method          System.out.println(\"End point indices are out of order (fromIndex > toIndex): \");          List<String> li = al.subList(6, 2);          // printing subList          System.out.println(\"Sublist of ArrayList: \" + li);       }       catch(IndexOutOfBoundsException e)       {          System.out.println(\"Exception: \" + e);       }       catch(IllegalArgumentException ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\nimport java.util.ArrayList; import java.util.List; public class ArrayListSubListMethodExample {    public static void main(String[] args)    {       try       {          ArrayList<String> al = new ArrayList<String>();          al.add(\"orange\");          al.add(\"apple\");          al.add(\"strawberry\");          al.add(\"banana\");          al.add(\"mango\");          System.out.println(\"Given ArrayList: \" + al);          // get subList using subList() method          System.out.println(\"End index value is out of range: \");          List<String> li = al.subList(2, 6);          // printing subList          System.out.println(\"Sublist of ArrayList: \" + li);       }       catch(IndexOutOfBoundsException e)       {          System.out.println(\"Exception: \" + e);       }       catch(IllegalArgumentException ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\n",
    "reg_date": "2021-10-12T12:00:25.000Z"
  },
  {
    "id": 65,
    "keyword": null,
    "link": null,
    "title": " ArrayList trimToSize() method in java",
    "description": "import java.util.ArrayList; public class TrimToSizeMethodJavaExample {    public static void main(String[] args)    {       // initially size of ArrayList is 10       ArrayList<Integer> al = new ArrayList<Integer>(10);       // adding integers to ArrayList using add() method       al.add(1);       al.add(3);       al.add(5);       al.add(9);       al.add(11);       al.add(14);       // trims the size of ArrayList to 6 using trimToSize() method       al.trimToSize();       System.out.println(\"The ArrayList elements are: \");       for(Integer number : al)       {          System.out.println(\"Number: \" + number);       }    } }\n",
    "reg_date": "2021-10-12T12:00:26.000Z"
  },
  {
    "id": 66,
    "keyword": null,
    "link": null,
    "title": " Arraylist string to character java",
    "description": "String str = \"abcd...\"; ArrayList<Character> chars = new ArrayList<Character>(); for (char c : str.toCharArray()) {   chars.add(c); } \nArrayList<Character> operations = new ArrayList<Character>();\n",
    "reg_date": "2021-10-12T12:00:26.000Z"
  },
  {
    "id": 67,
    "keyword": null,
    "link": null,
    "title": " Arraylist swap calues",
    "description": "public class ArrayListExample  {     public static void main(String[] args)      {         ArrayList<String> list = new ArrayList<>(Arrays.asList(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"));                   System.out.println(list);                   Collections.swap(list, 1, 2);                   System.out.println(list);     } } \nString temp = arr[1]; arr[1] = arr[2]; arr[2] = temp; \n",
    "reg_date": "2021-10-12T12:00:26.000Z"
  },
  {
    "id": 68,
    "keyword": null,
    "link": null,
    "title": " Arrays.sort() in java",
    "description": "// how to sort an array in java without using sort() method (ascending order) public class WithoutSortMethod {    public static void main(String[] args)    {       int temp;       int[] arrNumbers = {14, 8, 5, 54, 41, 10, 1, 500};       System.out.println(\"Before sort: \");       for(int num : arrNumbers)       {          System.out.println(num);       }       for(int a = 0; a < arrNumbers.length; a++)       {          for(int b = a + 1; b < arrNumbers.length; b++)          {             if(arrNumbers[a] > arrNumbers[b])             {                temp = arrNumbers[a];                arrNumbers[a] = arrNumbers[b];                arrNumbers[b] = temp;             }          }       }       System.out.println(\"---------------\");       System.out.println(\"After sort: \");       for(int num : arrNumbers)       {          System.out.println(num);       }    } }\n// java sort arraylist import java.util.ArrayList; import java.util.Collections; public class JavaSortArraylist  {    public static void main(String[] args)     {       ArrayList<String> al = new ArrayList<String>();       al.add(\"Bear\");        al.add(\"Fox\");        al.add(\"Deer\");        al.add(\"Cheetah\");        al.add(\"Anteater\");       al.add(\"Elephant\");       System.out.println(\"Before sorting ArrayList: \" + al);       Collections.sort(al);        System.out.println(\"After sorting ArrayList in Ascending order: \" + al);    } }\n// how to sort an array in java without using sort method public class WithoutUsingSortMethod {    public static void main(String[] args)     {       int temp;       int[] arrNumbers = {14, 8, 5, 54, 41, 10, 1, 500};       System.out.println(\"Before sort: \");       for(int num : arrNumbers)       {          System.out.println(num);       }       for(int a = 0; a <= arrNumbers.length - 1; a++)       {          for(int b = 0; b <= arrNumbers.length - 2; b++)          {             if(arrNumbers[b] < arrNumbers[b + 1])             {                temp = arrNumbers[b];                arrNumbers[b] = arrNumbers[b + 1];                arrNumbers[b + 1] = temp;             }          }       }       System.out.println(\"---------------\");       System.out.println(\"After sort: \");       for(int num : arrNumbers)         {          System.out.println(num);       }    } }\n// how to sort an array of strings in descending import java.util.Arrays; import java.util.Collections; public class SortStringAlphabeticalOrder  {    public static void main(String[] args)     {       String[] strDesc = {\"Bear\",\"Fox\",\"Deer\",\"Cheetah\",\"Anteater\",\"Elephant\"};       System.out.println(\"Before sorting: \");       for(String string : strDesc)       {          System.out.println(string);       }       // arrays.sort       Arrays.sort(strDesc, Collections.reverseOrder());          System.out.println(\"-----------------------------------\");       System.out.println(\"Sorting string array in descending or reverse order: \");       for(String string : strDesc)       {          System.out.println(string);       }    } }\n// java program to sort strings in an alphabetical order import java.util.Arrays; public class SortStringAlphabeticalOrder {    public static void main(String[] args)    {       String[] strAsc = {\"Bear\",\"Fox\",\"Deer\",\"Cheetah\",\"Anteater\",\"Elephant\"};       System.out.println(\"Before sorting: \");       for(String string : strAsc)       {          System.out.println(string);       }       // arrays.sort       Arrays.sort(strAsc);       System.out.println(\"-----------------------------------\");       System.out.println(\"After sorting: \");       for(String str : strAsc)       {          System.out.println(str);       }    } }\n// java sort array of objects import java.util.Arrays; public class Employee implements Comparable<Employee> {    private String empName;     private int empAge;    public Employee(String name, int age)     {        this.empName = name;        this.empAge = age;     }    @Override     public String toString()     {        return \"{\" + \"name='\" + empName + '\\'' + \", age=\" + empAge + '}';     }    public String getName()     {        return empName;     }    public int getAge()     {        return empAge;     }    @Override     public int compareTo(Employee o)     {        if(this.empAge != o.getAge())        {           return this.empAge - o.getAge();        }       return this.empName.compareTo(o.getName());     } } public class SortArrayObjects  {    public static void main(String[] args)     {       Employee[] obj = { new Employee(\"virat\", 25), new Employee(\"dhoni\", 20),                           new Employee(\"rohit\", 22), new Employee(\"rahul\", 24)};       Arrays.sort(obj);        System.out.println(Arrays.toString(obj));    } }\n",
    "reg_date": "2021-10-12T12:00:26.000Z"
  },
  {
    "id": 69,
    "keyword": null,
    "link": null,
    "title": " Arrays copyOfRange() method in java",
    "description": "// arrays copyOfRange() method in java example import java.util.Arrays; public class ArrayCopyOfRangeDemo  {    public static void main(String[] args)     {       int[] arrNumber = { 66, 67, 68, 69, 70, 71, 72 };       System.out.println(\"Given array: \");       for(int a = 0; a < arrNumber.length; a++)        {          System.out.println(arrNumber[a]);        }       int[] copyNum = Arrays.copyOfRange(arrNumber, 2, 6);       System.out.println(\"----------------------\");       System.out.println(\"Between range 2 and 6: \");       for(int a : copyNum)       {          System.out.print(a + \" \");       }       System.out.println();    } }\n// arrays copyofrange short data type example import java.util.Arrays; public class ArrayCopyShort {    public static void main(String[] args)    {       short[] arrShort1 = new short[] {14, 23, 41};       System.out.println(\"ARRAY COPY OF RANGE METHOD - SHORT DATA TYPE\");       System.out.println(\"--------------------------------------------\");       System.out.println(\"Given array : \");       for(int a = 0; a < arrShort1.length; a++)       {          System.out.println(arrShort1[a]);       }       // java copyofrange       short[] arrShort2 = Arrays.copyOfRange(arrShort1, 1, 3);       System.out.println(\"Copied array : \");       for(int a = 0; a < arrShort2.length; a++)       {          System.out.println(arrShort2[a]);       }    } }\n",
    "reg_date": "2021-10-12T12:00:26.000Z"
  },
  {
    "id": 70,
    "keyword": null,
    "link": null,
    "title": " Attempt to invoke virtual method 'boolean java.lang.String.equalsIgnoreCase(java.lang.String)' on a null object referen",
    "description": "if (called_from != null && called_from.equalsIgnoreCase(\"add\")) { \n",
    "reg_date": "2021-10-12T12:00:26.000Z"
  },
  {
    "id": 71,
    "keyword": null,
    "link": null,
    "title": " Attempt to invoke virtual method 'int java.util.Random.nextInt(int)' on a null object reference",
    "description": "the problem: java.lang.NullPointerException: Attempt to invoke virtual method 'int java.util.Random.nextInt(int)' on a null object reference  //you might do not code that: Random rand = new Random(); \n",
    "reg_date": "2021-10-12T12:00:26.000Z"
  },
  {
    "id": 72,
    "keyword": null,
    "link": null,
    "title": " Bad notification for startForeground: java.lang.RuntimeException: invalid",
    "description": "@Override public void onCreate(){     super.onCreate();     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O)         startMyOwnForeground();     else         startForeground(1, new Notification()); }  private void startMyOwnForeground(){     String NOTIFICATION_CHANNEL_ID = \"com.example.simpleapp\";     String channelName = \"My Background Service\";     NotificationChannel chan = new NotificationChannel(NOTIFICATION_CHANNEL_ID, channelName, NotificationManager.IMPORTANCE_NONE);     chan.setLightColor(Color.BLUE);     chan.setLockscreenVisibility(Notification.VISIBILITY_PRIVATE);     NotificationManager manager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);     assert manager != null;     manager.createNotificationChannel(chan);      NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(this, NOTIFICATION_CHANNEL_ID);     Notification notification = notificationBuilder.setOngoing(true)             .setSmallIcon(R.drawable.icon_1)             .setContentTitle(\"App is running in background\")             .setPriority(NotificationManager.IMPORTANCE_MIN)             .setCategory(Notification.CATEGORY_SERVICE)             .build();     startForeground(2, notification); }\n",
    "reg_date": "2021-10-12T12:00:26.000Z"
  },
  {
    "id": 73,
    "keyword": null,
    "link": null,
    "title": " Bad notification for startForeground: java.lang.RuntimeException: invalid channel for service notification: Notification",
    "description": "@Override public void onCreate(){     super.onCreate();     if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O)         startMyOwnForeground();     else         startForeground(1, new Notification()); }  private void startMyOwnForeground(){     String NOTIFICATION_CHANNEL_ID = \"com.example.simpleapp\";     String channelName = \"My Background Service\";     NotificationChannel chan = new NotificationChannel(NOTIFICATION_CHANNEL_ID, channelName, NotificationManager.IMPORTANCE_NONE);     chan.setLightColor(Color.BLUE);     chan.setLockscreenVisibility(Notification.VISIBILITY_PRIVATE);     NotificationManager manager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);     assert manager != null;     manager.createNotificationChannel(chan);      NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(this, NOTIFICATION_CHANNEL_ID);     Notification notification = notificationBuilder.setOngoing(true)             .setSmallIcon(R.drawable.icon_1)             .setContentTitle(\"App is running in background\")             .setPriority(NotificationManager.IMPORTANCE_MIN)             .setCategory(Notification.CATEGORY_SERVICE)             .build();     startForeground(2, notification); }\n",
    "reg_date": "2021-10-12T12:00:26.000Z"
  },
  {
    "id": 74,
    "keyword": null,
    "link": null,
    "title": " BodyContentImpl memory leak",
    "description": "// JBoss 4.x-7.x -Dorg.apache.jasper.runtime.BodyContentImpl.LIMIT_BUFFER=true -Dorg.apache.jasper.runtime.JspFactoryImpl.USE_POOL=false\n",
    "reg_date": "2021-10-12T12:00:26.000Z"
  },
  {
    "id": 75,
    "keyword": null,
    "link": null,
    "title": " Bootstrap 4 Navbar Dropdown Menu Items Right",
    "description": "Bootstrap 5 (update 2021)  Use the dropdown-menu-end class on the dropdown-menu to align the items inside the menu right..      <div class=\"dropdown-menu dropdown-menu-end\">         <a class=\"dropdown-item\" href=\"#\">Link</a>         <a class=\"dropdown-item\" href=\"#\">Link</a>         <a class=\"dropdown-item\" href=\"#\">Link</a>     </div> https://codeply.com/p/kWLLKdjdpC  Bootstrap 4 (original answer)  Use the dropdown-menu-right class to align the items inside the menu right..      <div class=\"dropdown-menu dropdown-menu-right text-right\">         <a class=\"dropdown-item\" href=\"#\">Link</a>         <a class=\"dropdown-item\" href=\"#\">Link</a>         <a class=\"dropdown-item\" href=\"#\">Link</a>     </div> http://codeply.com/go/6Mf9aK0P8G\n    <div class=\"dropdown-menu dropdown-menu-end\">         <a class=\"dropdown-item\" href=\"#\">Link</a>         <a class=\"dropdown-item\" href=\"#\">Link</a>         <a class=\"dropdown-item\" href=\"#\">Link</a>     </div> \n",
    "reg_date": "2021-10-12T12:00:27.000Z"
  },
  {
    "id": 76,
    "keyword": null,
    "link": null,
    "title": " BoxLayout java",
    "description": "JScrollPane listScroller = new JScrollPane(list); listScroller.setPreferredSize(new Dimension(250, 80)); listScroller.setAlignmentX(LEFT_ALIGNMENT); ... //Lay out the label and scroll pane from top to bottom. JPanel listPane = new JPanel(); listPane.setLayout(new BoxLayout(listPane, BoxLayout.PAGE_AXIS)); JLabel label = new JLabel(labelText); ... listPane.add(label); listPane.add(Box.createRigidArea(new Dimension(0,5))); listPane.add(listScroller); listPane.setBorder(BorderFactory.createEmptyBorder(10,10,10,10));  //Lay out the buttons from left to right. JPanel buttonPane = new JPanel(); buttonPane.setLayout(new BoxLayout(buttonPane, BoxLayout.LINE_AXIS)); buttonPane.setBorder(BorderFactory.createEmptyBorder(0, 10, 10, 10)); buttonPane.add(Box.createHorizontalGlue()); buttonPane.add(cancelButton); buttonPane.add(Box.createRigidArea(new Dimension(10, 0))); buttonPane.add(setButton);  //Put everything together, using the content pane's BorderLayout. Container contentPane = getContentPane(); contentPane.add(listPane, BorderLayout.CENTER); contentPane.add(buttonPane, BorderLayout.PAGE_END); \nJScrollPane listScroller = new JScrollPane(list); listScroller.setPreferredSize(new Dimension(250, 80)); listScroller.setAlignmentX(LEFT_ALIGNMENT); ... //Lay out the label and scroll pane from top to bottom. JPanel listPane = new JPanel(); listPane.setLayout(new BoxLayout(listPane, BoxLayout.PAGE_AXIS)); JLabel label = new JLabel(labelText); ... listPane.add(label); listPane.add(Box.createRigidArea(new Dimension(0,5))); listPane.add(listScroller); listPane.setBorder(BorderFactory.createEmptyBorder(10,10,10,10));  //Lay out the buttons from left to right. JPanel buttonPane = new JPanel(); buttonPane.setLayout(new BoxLayout(buttonPane, BoxLayout.LINE_AXIS)); buttonPane.setBorder(BorderFactory.createEmptyBorder(0, 10, 10, 10)); buttonPane.add(Box.createHorizontalGlue()); buttonPane.add(cancelButton); buttonPane.add(Box.createRigidArea(new Dimension(10, 0))); buttonPane.add(setButton);  //Put everything together, using the content pane's BorderLayout. Container contentPane = getContentPane(); contentPane.add(listPane, BorderLayout.CENTER); contentPane.add(buttonPane, BorderLayout.PAGE_END);\n",
    "reg_date": "2021-10-12T12:00:27.000Z"
  },
  {
    "id": 77,
    "keyword": null,
    "link": null,
    "title": " Bresenham's line algorithm",
    "description": "void drawline(int x0, int y0, int x1, int y1)   {       int dx, dy, p, x, y;       dx=x1-x0;       dy=y1-y0;       x=x0;       y=y0;       p=2*dy-dx;       while(x<x1)       {           if(p>=0)           {               putpixel(x,y,7);               y=y+1;               p=p+2*dy-2*dx;            \tx+=1;         }           else           {               putpixel(x,y,7);               p=p+2*dy;}               x+=1;           }   }  \n#include<iostream.h> #include<graphics.h>   void drawline(int x0, int y0, int x1, int y1) {     int dx, dy, p, x, y;   \tdx=x1-x0; \tdy=y1-y0;   \tx=x0; \ty=y0;   \tp=2*dy-dx;   \twhile(x<x1) \t{ \t\tif(p>=0) \t\t{ \t\t\tputpixel(x,y,7); \t\t\ty=y+1; \t\t\tp=p+2*dy-2*dx; \t\t} \t\telse \t\t{ \t\t\tputpixel(x,y,7); \t\t\tp=p+2*dy; \t\t} \t\tx=x+1; \t} }   int main() { \tint gdriver=DETECT, gmode, error, x0, y0, x1, y1; \tinitgraph(&gdriver, &gmode, \"c:\\\\turboc3\\\\bgi\");   \tcout<<\"Enter co-ordinates of first point: \"; \tcin>>x0>>y0;   \tcout<<\"Enter co-ordinates of second point: \"; \tcin>>x1>>y1; \tdrawline(x0, y0, x1, y1);   \treturn 0; } \nstatic void bresenham(int x1, int y1, int x2, int y2)      {          int m_new = 2 * (y2 - y1);          int slope_error_new = m_new - (x2 - x1);                 for (int x = x1, y = y1; x <= x2; x++)          {              System.out.print(\"(\" +x + \",\" + y + \")\\n\");                 // Add slope to increment angle formed              slope_error_new += m_new;                 // Slope error reached limit, time to              // increment y and update slope error.              if (slope_error_new >= 0)              {                  y++;                  slope_error_new -= 2 * (x2 - x1);              }          }      }\nfunction line(x0, y0, x1, y1) {    var dx = Math.abs(x1 - x0);    var dy = Math.abs(y1 - y0);    var sx = (x0 < x1) ? 1 : -1;    var sy = (y0 < y1) ? 1 : -1;    var err = dx - dy;     while(true) {       setPixel(x0, y0); // Do what you need to for this        if ((x0 === x1) && (y0 === y1)) break;       var e2 = 2*err;       if (e2 > -dy) { err -= dy; x0  += sx; }       if (e2 < dx) { err += dx; y0  += sy; }    } } \n",
    "reg_date": "2021-10-12T12:00:27.000Z"
  },
  {
    "id": 78,
    "keyword": null,
    "link": null,
    "title": " BufferredReader Class",
    "description": "package com.javatpoint;   import java.io.*;   public class BufferedReaderExample {       public static void main(String args[])throws Exception{               FileReader fr=new FileReader(\"D:\\\\testout.txt\");               BufferedReader br=new BufferedReader(fr);                  int i;               while((i=br.read())!=-1){             System.out.print((char)i);             }             br.close();               fr.close();         }     }    \npackage com.javatpoint;   import java.io.*;   public class BufferedReaderExample{     public static void main(String args[])throws Exception{                  InputStreamReader r=new InputStreamReader(System.in);         BufferedReader br=new BufferedReader(r);                 System.out.println(\"Enter your name\");         String name=br.readLine();         System.out.println(\"Welcome \"+name);     }     }  \n",
    "reg_date": "2021-10-12T12:00:27.000Z"
  },
  {
    "id": 79,
    "keyword": null,
    "link": null,
    "title": " Build path specifies execution environment JavaSE-1.8. There are no JREs installed in the workspace that are strictly compatible with this environment.",
    "description": "<build>     <plugins>         <plugin>             <groupId>org.apache.maven.plugins</groupId>             <artifactId>maven-compiler-plugin</artifactId>             <configuration>                 <source>1.7</source>                 <target>1.7</target>             </configuration>         </plugin>     </plugins> </build> \n",
    "reg_date": "2021-10-12T12:00:27.000Z"
  },
  {
    "id": 80,
    "keyword": null,
    "link": null,
    "title": " Bukkit debug message",
    "description": "//Two methods: //Method one: broadcast to server-good for testing out things quickly: Bukkit.broadcastMessage(\"Something\") //Method two: log to console: instanceOfJavaPlugin.getLogger().log(Level.WARN, \"something\")\n",
    "reg_date": "2021-10-12T12:00:27.000Z"
  },
  {
    "id": 81,
    "keyword": null,
    "link": null,
    "title": " CSV to 2D array javaescript",
    "description": "function csvToArray(csv, delimiter = \",\", omitFirstRow = false) {   console.log(csv.indexOf('\\n'));   return csv.slice(omitFirstRow ? csv.indexOf('\\n')+1 : 0)             .split(\"\\n\")             .map((element) => element.split(delimiter)); }  let csv1 = \"a,b\\nc,d\"; let csv2 = \"a;b\\nc;d\"; let csv3 = \"head1,head2\\na,b\\nc,d\";  let result1 = csvToArray(csv1); let result2 = csvToArray(csv2); let result3 = csvToArray(csv3);  console.log(result1); console.log(result2); console.log(result3);\n",
    "reg_date": "2021-10-12T12:00:27.000Z"
  },
  {
    "id": 82,
    "keyword": null,
    "link": null,
    "title": " Calculate area of rectangle using class in java",
    "description": "// calculate area of rectangle using class in java import java.io.*; class RectangleShape  {    int length, breadth;     void setValue(int l, int b)     {         length = l;         breadth = b;     }    // get area of rectangle    int findArea()     {         return (length * breadth);     } } public class RectangleAreaDemo {    public static void main(String[] args)    {       RectangleJava obj = new RectangleJava();        obj.setValue(10, 5);        System.out.println(\"Area of rectangle: \" + obj.findArea());    } }\nimport java.util.Scanner; public class RectangleArea {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter length of rectangle: \");       double length = sc.nextDouble();       System.out.println(\"Please enter width of rectangle: \");       double width = sc.nextDouble();       double area = length * width;       System.out.println(\"Area of rectangle is: \" + area);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:27.000Z"
  },
  {
    "id": 83,
    "keyword": null,
    "link": null,
    "title": " Calculate area of rectangle using constructor overloading in java",
    "description": "import java.util.*; class RectangleShape {    int length, breadth;    // rectangle constructor java    RectangleShape(int l, int b)     {        length = l;        breadth = b;     }     RectangleShape(int l)     {        length = l;        breadth = 20;     }     RectangleShape()     {        length = 6;        breadth = 2;     }     float getArea()     {        return(length * breadth);     } } public class FindArea  {    public static void main(String[] args)    {       RectangleShape rs1 = new RectangleShape();        RectangleShape rs2 = new RectangleShape(60);        RectangleShape rs3 = new RectangleShape(40, 20);        System.out.println(\"First rectangle : \" + rs1.getArea());        System.out.println(\"Second rectangle : \" + rs2.getArea());        System.out.println(\"Third Rectangle : \" + rs3.getArea());    } }\n",
    "reg_date": "2021-10-12T12:00:27.000Z"
  },
  {
    "id": 84,
    "keyword": null,
    "link": null,
    "title": " Calculate area of rectangle using default constructor in java",
    "description": "import java.util.*; class RectangleShape  {    int area, length, breadth;     RectangleShape()     {        length = 50;        breadth = 20;     }     void getArea()     {        area = length * breadth;        System.out.println(\"Area of Rectangle : \" + area);     }   } public class RectangleAreaConstructor {    public static void main(String[] args)     {       RectangleShape rs = new RectangleShape();        rs.getArea();    } }\n",
    "reg_date": "2021-10-12T12:00:27.000Z"
  },
  {
    "id": 85,
    "keyword": null,
    "link": null,
    "title": " Calculate area of rectangle using parameterised constructor in java",
    "description": "import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; class RectangleShape  {    int area, length, breadth;    // Parameterized constructor    RectangleShape(int l, int b)     {        length = l;        breadth = b;     }     void getArea()     {        area = length * breadth;        System.out.println(\"Area of rectangle : \" + area);     }  } public class FindArea  {    public static void main(String[] args) throws IOException    {       BufferedReader br = new BufferedReader(new InputStreamReader(System.in));               int length, breadth;        System.out.println(\"Please enter length : \");       String strLength = br.readLine();        length = Integer.parseInt(strLength);       System.out.println(\"Please enter breadth : \");       String strBreadth = br.readLine();        breadth = Integer.parseInt(strBreadth);        RectangleShape rs = new RectangleShape(length, breadth);        rs.getArea();    } }\n",
    "reg_date": "2021-10-12T12:00:28.000Z"
  },
  {
    "id": 86,
    "keyword": null,
    "link": null,
    "title": " Cannot invoke toString() on the primitive type int",
    "description": "int foo = 12345; String foo_String = Integer.toString(foo);\n",
    "reg_date": "2021-10-12T12:00:28.000Z"
  },
  {
    "id": 87,
    "keyword": null,
    "link": null,
    "title": " Cannot resolve class android.support.design.widget.CoordinatorLayout",
    "description": "Replace <android.support.design.widget.coordinatorlayout   with <androidx.coordinatorlayout.widget.CoordinatorLayout\n",
    "reg_date": "2021-10-12T12:00:28.000Z"
  },
  {
    "id": 88,
    "keyword": null,
    "link": null,
    "title": " Cannot resolve method 'makeText(anonymous android.view.View.OnClickListener, java.lang.String, int)'",
    "description": "Toast.makeText(ActivityName.this, \"text\", Toast.LENGTH_SHORT).show();\n",
    "reg_date": "2021-10-12T12:00:28.000Z"
  },
  {
    "id": 89,
    "keyword": null,
    "link": null,
    "title": " Cannot run program \"/data/app/com.example.youtubedownloader-izZN4hCVc13wrYSVvsT0rA==/lib/x86/libpython.bin.so\": error=2, No such file or directory",
    "description": "// put This OnCreate   ffmpeg = FFmpeg.getInstance(context); try { \tffmpeg.loadBinary(new LoadBinaryResponseHandler() { \t\t@Override            public void onStart() {                Log.d(TAG,\"ffmpeg load binary started...\");            }             @Override            public void onFailure() {                Log.e(TAG,\"ffmpeg load binary failure...\");            }             @Override            public void onSuccess() {                Log.d(TAG,\"ffmpeg load binary success...\");            }             @Override            public void onFinish() {                Log.d(TAG,\"ffmpeg load binary finish...\");            }        });    } catch (FFmpegNotSupportedException e) {        // Handle if FFmpeg is not supported by device    } \n",
    "reg_date": "2021-10-12T12:00:28.000Z"
  },
  {
    "id": 90,
    "keyword": null,
    "link": null,
    "title": " Captain Disillusion age",
    "description": "p.sendmessage(\"born on 13 April 1980 \")\n",
    "reg_date": "2021-10-12T12:00:28.000Z"
  },
  {
    "id": 91,
    "keyword": null,
    "link": null,
    "title": " Card view implement",
    "description": "dependencies {     implementation \"androidx.cardview:cardview:1.0.0\" }\nimplementation \"androidx.cardview:cardview:1.0.0\" // The version of cardview may be changed in future\n",
    "reg_date": "2021-10-12T12:00:28.000Z"
  },
  {
    "id": 92,
    "keyword": null,
    "link": null,
    "title": " Cause: zip END header not found",
    "description": "$ ./gradlew --version Downloading https://services.gradle.org/distributions/gradle-5.6.2-all.zip ...... \n$ ./gradlew --version Could not unzip /home/cesarc/.gradle/wrapper/dists/gradle-5.6.2-all/9st6wgf78h16so49nn74lgtbb/gradle-5.6.2-all.zip to /home/cesarc/.gradle/wrapper/dists/gradle-5.6.2-all/9st6wgf78h16so49nn74lgtbb. Reason: error in opening zip file \n",
    "reg_date": "2021-10-12T12:00:28.000Z"
  },
  {
    "id": 93,
    "keyword": null,
    "link": null,
    "title": " Caused by: android.view.InflateException: Binary XML file line",
    "description": "Replace in your .xml  app:srcCompat=\"@drawable/ic_demo\"  with  android:src=\"@drawable/ic_demo\"\n",
    "reg_date": "2021-10-12T12:00:28.000Z"
  },
  {
    "id": 94,
    "keyword": null,
    "link": null,
    "title": " Changing background color of selected item in recyclerview",
    "description": "public void onBindViewHolder(final ViewHolder holder, final int position) {         holder.tv1.setText(android_versionnames[position]);          holder.row_linearlayout.setOnClickListener(new View.OnClickListener() {             @Override             public void onClick(View view) {                 row_index=position;                 notifyDataSetChanged();             }         });         if(row_index==position){             holder.row_linearlayout.setBackgroundColor(Color.parseColor(\"#567845\"));             holder.tv1.setTextColor(Color.parseColor(\"#ffffff\"));         }         else         {             holder.row_linearlayout.setBackgroundColor(Color.parseColor(\"#ffffff\"));             holder.tv1.setTextColor(Color.parseColor(\"#000000\"));         }      } \n",
    "reg_date": "2021-10-12T12:00:28.000Z"
  },
  {
    "id": 95,
    "keyword": null,
    "link": null,
    "title": " Character.getNumericValue['z']",
    "description": "//Java int f=Character.getNumericValue['z']; System.out.println(f); // prints 35  //a=10, z=35\n",
    "reg_date": "2021-10-12T12:00:29.000Z"
  },
  {
    "id": 96,
    "keyword": null,
    "link": null,
    "title": " Check if an array contains an element java",
    "description": "import java.util.Arrays;  // For String String[] array = {\"Boto\", \"Nesto\", \"Lepta\"}; String toSearch = \"Nesto\";  // Inline if (Arrays.toString(array).contains(toSearch)) { \t// Do something if it's found }  // Multi line String strArray = Array.toString(array); if (strArray.contains(toSearch)) { \t// Do your thing }  // Different elements int[] numbers = {1, 2, 3, 4, 5, 6, 7, 8, 9, 0}; int number = 5;  String checker = Arrays.toString(numbers);  // The toString of int in some cases can happen without explicitly saying so // In this example we convert both if (checker.contains(Integer.toString(number)) { \t// Found.      } \n",
    "reg_date": "2021-10-12T12:00:29.000Z"
  },
  {
    "id": 97,
    "keyword": null,
    "link": null,
    "title": " Collections reverse on java",
    "description": "//import java.util.Collections; //create and add items to list Collectons.reverse(list);\n",
    "reg_date": "2021-10-12T12:00:29.000Z"
  },
  {
    "id": 98,
    "keyword": null,
    "link": null,
    "title": " Command line is too long. Shorten command line for Application or also for Application default configuration?",
    "description": "In Intellij, go to \"edit configurations\" (Run -> Edit Configurations),  in the configuration tab that comes up in the line \"shorten command line\"  select option \"classpath file\"/\"@argFiles (Java 9+)\",  last option in the drop down menu.\n",
    "reg_date": "2021-10-12T12:00:29.000Z"
  },
  {
    "id": 99,
    "keyword": null,
    "link": null,
    "title": " Compare integers java sort",
    "description": "public class AgeComparatorDesc implements Comparator<Student> {    @Override   public int compare(Student o1, Student o2) {     if (o1.age > o2.age) {         return -1;     } else if (o1.age < o2.age) {         return 1;     }          return 0;   }  }\n",
    "reg_date": "2021-10-12T12:00:29.000Z"
  },
  {
    "id": 100,
    "keyword": null,
    "link": null,
    "title": " Compilation is not supported for following modules: android. Unfortunately you can't have non-Gradle Java modules and Android-Gradle modules in one project",
    "description": "save .idea folder somewhere else (for backup) remove .idea folder start AndroidStudio select project [there may be an error, ignore that] click File -> Invalidate Caches/ Restart click button: Invalidate Caches/ Restart resolved\n",
    "reg_date": "2021-10-12T12:00:29.000Z"
  },
  {
    "id": 101,
    "keyword": null,
    "link": null,
    "title": " ConcurrentModificationException fix",
    "description": "//Occurs when trying to remove an element from a Collection //while iterating over it  //Where removal takes place //Setup an iterator Iterator<Thing> iter = things.iterator(); //Iterate over collection while(iter.hasNext()) { \tThing thing = iter.next(); \tif (/* Some Condition that initiates removal */) {       //Remove using iterator       iter.remove();     } } //Avoids ConcurrentModificationException\n",
    "reg_date": "2021-10-12T12:00:29.000Z"
  },
  {
    "id": 102,
    "keyword": null,
    "link": null,
    "title": " Continue statement in java",
    "description": "int i=0; while(i<10){   if(i%2==0){     i++;     continue;// If it's pair we return to the while   }   System.out.println(i);// If is not we print it.   i++; }\n// continue in java example import java.util.*; public class ContinueJavaExample  {    public static void main(String[] args)     {       for(int a = 1; a <= 10; a++)       {          if(a % 2 != 0)          {             continue;          }          System.out.println(a + \" \");       }    } }\nint i = 0; while (i < 10) {   if (i == 4) {     i++;  //why do I need this line ?     continue;   }   System.out.println(i);   i++; }\n   int number = 4;         int finalnum = 20;         while(number <= finalnum){             number++;             if(number %2 != 0){//Each odd number restarts the loop               continue;             }             System.out.println(\"Even Number!: \"+ number);         }     }//EOM\n",
    "reg_date": "2021-10-12T12:00:29.000Z"
  },
  {
    "id": 103,
    "keyword": null,
    "link": null,
    "title": " Convert ASCII to String Java",
    "description": "String str = String.valueOf(Character.toChars(65)); // str &larr; \"A\"\n",
    "reg_date": "2021-10-12T12:00:29.000Z"
  },
  {
    "id": 104,
    "keyword": null,
    "link": null,
    "title": " Convert JSON to java objects with gson",
    "description": " \tGson gson = new Gson();  \t// 1. JSON file to Java object \tStaff staff = gson.fromJson(new FileReader(\"C:\\\\projects\\\\staff.json\"), Staff.class);  \t// 2. JSON string to Java object \tString json = \"{'name' : 'mkyong'}\"; \tStaff staff = gson.fromJson(json, Staff.class); \t\t \t// 3. JSON file to JsonElement, later String \tJsonElement json = gson.fromJson(new FileReader(\"C:\\\\projects\\\\staff.json\"), JsonElement.class);     String result = gson.toJson(json); \n",
    "reg_date": "2021-10-12T12:00:29.000Z"
  },
  {
    "id": 105,
    "keyword": null,
    "link": null,
    "title": " Convert binary to decimal in java using recursion",
    "description": "// Convert binary to decimal in java using recursion public class BinaryToDecimalRecursion {    static int binaryToDecimal(String strBinary, int a)     {       int size = strBinary.length();        if(a == size - 1)          return strBinary.charAt(a) - '0';        return((strBinary.charAt(a) - '0') << (size - a - 1)) + binaryToDecimal(strBinary, a + 1);     }    public static void main(String[] args)     {       String binaryNumber = \"1111\";        int n = 0;       System.out.println(\"Convert binary to decimal using recursion: \");       System.out.println(binaryToDecimal(binaryNumber, n));    } }\n",
    "reg_date": "2021-10-12T12:00:29.000Z"
  },
  {
    "id": 106,
    "keyword": null,
    "link": null,
    "title": " Convert char array to string in java",
    "description": "String str = \"example\"; char[] ch = str.toCharArray(); \nchar c = 'a'; String s = Character.toString(c); //s == \"a\"\nchar[] a = {'h', 'e', 'l', 'l', 'o', ' ', 'w', 'o', 'r', 'l', 'd'}; String str = new String(a);\nchar[] arr = { 'p',\" \",'q', 'r', 's' };       String str = String.valueOf(arr);       System.out.println(str);//\"p qrs\"\n// java convert array of char to string public class CharArrayToString {    public static void main(String[] args)    {       char[] charArray = new char[]{'F','l','o','w','e','r','B','r','a','c','k','e','t','s'};       String str = new String(charArray);       System.out.println(str);    } }\nString string = String.valueOf(a); \n",
    "reg_date": "2021-10-12T12:00:30.000Z"
  },
  {
    "id": 107,
    "keyword": null,
    "link": null,
    "title": " Convert decimal number to binary in java without using array",
    "description": "public class DecimalToBinaryWithoutArray {    static void toBinary(int num)    {        StringBuilder sb = new StringBuilder();        int a = 0;       while(num > 0)       {          sb.append(num % 2);          a++;          num = num / 2;       }       System.out.println(sb.reverse());     }    public static void main(String[] args)     {       int number = 20;        toBinary(number);    } }\npublic class DecimalToBinaryExample2{     public static void toBinary(int decimal){          int binary[] = new int[40];          int index = 0;          while(decimal > 0){            binary[index++] = decimal%2;            decimal = decimal/2;          }          for(int i = index-1;i >= 0;i--){            System.out.print(binary[i]);          }     System.out.println();//new line   }     public static void main(String args[]){       System.out.println(\"Decimal of 10 is: \");   toBinary(10);     System.out.println(\"Decimal of 21 is: \");   toBinary(21);     System.out.println(\"Decimal of 31 is: \");     toBinary(31);   }}    \n",
    "reg_date": "2021-10-12T12:00:30.000Z"
  },
  {
    "id": 108,
    "keyword": null,
    "link": null,
    "title": " Core Java concepts",
    "description": "Refer to this website: http://allaboutjava.com/\n",
    "reg_date": "2021-10-12T12:00:30.000Z"
  },
  {
    "id": 109,
    "keyword": null,
    "link": null,
    "title": " Could not create the Java Virtual Machine.",
    "description": "java -version\n",
    "reg_date": "2021-10-12T12:00:30.000Z"
  },
  {
    "id": 110,
    "keyword": null,
    "link": null,
    "title": " Could not identify launch activity: Default Activity not found",
    "description": "<activity     android:name=\".MainActivity\"     android:label=\"YourAppName\"     android:theme=\"@style/AppTheme.NoActionBar\" >       <intent-filter>             <action android:name=\"android.intent.action.MAIN\" />              <category android:name=\"android.intent.category.LAUNCHER\" />       </intent-filter> </activity> \n",
    "reg_date": "2021-10-12T12:00:30.000Z"
  },
  {
    "id": 111,
    "keyword": null,
    "link": null,
    "title": " Could not initialize class org.codehaus.groovy.vmplugin.VMPluginFactory",
    "description": "On your Android or Intellij Project, go to:  yourprojectname/gradle/wrapper/gradle-wrapper.properties.  Property distributionUrl should be:   distributionUrl=https\\://services.gradle.org/distributions/gradle-6.3-bin.zip  If it's an older version then change it, run ./gradlew clean build and try again.\ncould not initialize class org.codehaus.groovy.reflection.reflectioncache intellij\n",
    "reg_date": "2021-10-12T12:00:30.000Z"
  },
  {
    "id": 112,
    "keyword": null,
    "link": null,
    "title": " Could not initialize class org.jetbrains.kotlin.gradle.plugin.sources.DefaultKotlinSourceSetKt",
    "description": "buildscript { ext {     kotlinVersion = '1.3.72'     springBootVersion = '2.0.4.RELEASE' } repositories {     mavenCentral() } ...  }\n",
    "reg_date": "2021-10-12T12:00:30.000Z"
  },
  {
    "id": 113,
    "keyword": null,
    "link": null,
    "title": " Count number of words in a String",
    "description": "public static void main (String[] args) {       System.out.println(\"Simple Java Word Count Program\");       String str1 = \"Today is Holdiay Day\";       String[] wordArray = str1.trim().split(\"\\\\s+\");      int wordCount = wordArray.length;       System.out.println(\"Word count is = \" + wordCount); } \n String name = \"Carmen is a fantastic play\"; //arbitrary sentence                  int numWords = (name.split(\"\\\\s+\")).length; //split string based on whitespace                                                 //split returns array - find legth of array                  System.out.println(numWords);\npublic static void main(String[] args)     {          //Scanner object instantiation          Scanner dude = new Scanner(System.in);                 //variable declaration         String string1 = \"\";         int count = 0;         boolean isWord = false;                         //user prompt and input         System.out.println(\"Enter in your string\");         string1 = dude.nextLine();                 int endOfLine = string1.length()-1;         char ch [] = string1.toCharArray();                 for (int i = 0; i < string1.length(); i++)        {             if(Character.isLetter(ch[i]) && i != endOfLine)            {//if character is letter and not end of line                isWord = true; //it is part of a word             }              if (!Character.isLetter(ch[i]) && isWord)            { //if character is not a letter, and previous               //character is a letter i.e. non-letter is               //preceded by character                count++; //add to word count                isWord = false; //get ready to detect new word              }            if (Character.isLetter(ch[i]) && i == endOfLine)            { //if character is letter               //and at end of line                 count++; //add to word count                 isWord = false;             }                    }         System.out.println(\"There are \" +count+ \" words\");          }\n  String str = \"I am happy and why not   and why are you not happy and you should be\";         String [] arr = str.split(\" \");         Map<String, Integer> map = new HashMap<>();          for (int i=0 ; i < arr.length ; i++){                 if (!map.containsKey(arr[i])){                     map.put(arr[i],1);                 } else{                     map.put(arr[i],map.get(arr[i])+1);                 }         }         for(Map.Entry<String, Integer> each : map.entrySet()){    System.out.println(each.getKey()+\" occures \" + each.getValue() + \" times\");         }\n public static int count(String word) {     if (word == null || word.isEmpty()) {       return 0;     }      int wordCount = 0;      boolean isWord = false;     int endOfLine = word.length() - 1;     char[] characters = word.toCharArray();      for (int i = 0; i < characters.length; i++) {        // if the char is a letter, word = true.       if (Character.isLetter(characters[i]) && i != endOfLine) {         isWord = true;          // if char isn't a letter and there have been letters before,         // counter goes up.       } else if (!Character.isLetter(characters[i]) && isWord) {         wordCount++;         isWord = false;          // last word of String; if it doesn't end with a non letter, it         // wouldn't count without this.       } else if (Character.isLetter(characters[i]) && i == endOfLine) {         wordCount++;       }     }      return wordCount;   } \n// Count words (text separated by whitespace) in a piece of text use std::collections::HashMap;  fn word_count(text: &str) -> HashMap<&str, i32> {     let mut map = HashMap::new();     for word in text.split_whitespace() {         *map.entry(word).or_insert(0) += 1;     }     map }  fn main() {     println!(\"Count of words = {:?} \",word_count(\"the quick brown fox jumped over the lazy dog\")); }\n",
    "reg_date": "2021-10-12T12:00:30.000Z"
  },
  {
    "id": 114,
    "keyword": null,
    "link": null,
    "title": " Create ArrayList from array java",
    "description": "new ArrayList<>(Arrays.asList(array));\nnew ArrayList<>(Arrays.asList(array)) \n",
    "reg_date": "2021-10-12T12:00:31.000Z"
  },
  {
    "id": 115,
    "keyword": null,
    "link": null,
    "title": " Create a program that displays the letters A to Z.",
    "description": "#include <stdio.h> int main() {     char c;     for (c = 'A'; c <= 'Z'; ++c)         printf(\"%c \", c);     return 0; } \n",
    "reg_date": "2021-10-12T12:00:31.000Z"
  },
  {
    "id": 116,
    "keyword": null,
    "link": null,
    "title": " Create a socket connection java",
    "description": "import java.io.*; import java.net.*;  public class MyServer {   public static void main(String[] args)   {     try{       //this line creates a server on port 1234       ServerSocket server = new ServerSocket(1234);       // this line accepts a connection from the client   \t  Socket serverSocket = server.accept();              InputStream in = serverSocket.getInputStream();              //You can do anything with the inputstream            }catch(Exception e)     {       e.printStackTrace();     }   } }  public class MyClient {   public static void main(String[] args)   {     try{       // this line request a connection to the localhost server at port 1234   \t  Socket clientSocket = new Socket(\"localhost\", 1234);              OutputStream out = clientSocket.getOutputStream();       //You can send anything to the server     }catch(Exception e)     {       e.printStackTrace();     }   } }\n",
    "reg_date": "2021-10-12T12:00:31.000Z"
  },
  {
    "id": 117,
    "keyword": null,
    "link": null,
    "title": " Create dynamic 2d array in java",
    "description": "// Create dynamic 2d array in java import java.util.ArrayList; import java.util.List; public class Dynamic2dArray  {    public static void main(String[] args)     {       List<int[]> li = new ArrayList<>();       li.add(new int[]{2,4,6});       li.add(new int[]{3,5});       li.add(new int[]{1});       // element at row 0, column 0       System.out.println(\"Element at [0][0]: \" + li.get(0)[1]);       // get element at row : 1, column : 1       System.out.println(\"Element at [1][1]: \" + li.get(1)[1]);    } }\nint** arr = new int*[10]; // Number of Students int i=0, j; for (i; i<10; i++)  \tarr[i] = new int[5]; // Number of Courses /*In line[1], you're creating an array which can store the addresses   of 10 arrays. In line[4], you're allocating memories for the    array addresses you've stored in the array 'arr'. So it comes out    to be a 10 x 5 array. */\n",
    "reg_date": "2021-10-12T12:00:31.000Z"
  },
  {
    "id": 118,
    "keyword": null,
    "link": null,
    "title": " Create matrix with user input in java",
    "description": "import java.util.Scanner; public class MatrixUserInput {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter number of matrix rows : \");       int row = sc.nextInt();       System.out.println(\"Please enter number of matrix columns : \");       int col = sc.nextInt();       // defining two dimensional array java       int[][] numbers = new int[row][col];       // filling java matrix       fillingMatrix(sc, numbers, row, col);       // printing 2d array in matrix form in java       printingMatrix(numbers, row, col);    }    public static void fillingMatrix(Scanner scan, int num[][], int rows, int columns)    {       System.out.println(\"Please enter elements in matrix : \");       for(int a = 0; a < rows; a++)       {          for(int b = 0; b < columns; b++)          {             num[a][b] = scan.nextInt();          }       }    }    public static void printingMatrix(int num[][], int rows, int columns)    {       System.out.println(\"Printing 2d array in matrix form : \");       for(int a = 0; a < rows; a++)       {          for(int b = 0; b < columns; b++)          {             System.out.print(num[a][b] + \"\\t\");          }          System.out.println();       }    } }\n",
    "reg_date": "2021-10-12T12:00:31.000Z"
  },
  {
    "id": 119,
    "keyword": null,
    "link": null,
    "title": " D/NetworkSecurityConfig: No Network Security Config specified, using platform default",
    "description": "<?xml version=\"1.0\" encoding=\"utf-8\"?>   <network-security-config>     <base-config cleartextTrafficPermitted=\"true\" />   </network-security-config>\n<uses-library android:name=\"org.apache.http.legacy\" android:required=\"false\"/>\nandroid:usesCleartextTraffic=\"true\" android:networkSecurityConfig=\"@xml/network_security_config\"\n",
    "reg_date": "2021-10-12T12:00:31.000Z"
  },
  {
    "id": 120,
    "keyword": null,
    "link": null,
    "title": " December global holidays",
    "description": "its almost over...\nMaybe 2020 was kinda weird, but I hope everyone reading this has a wonderful December. Happy Holidays!!! :D\nint dayOfChristmas = 1;          if(dayOfChristmas == 1)         {         Console.WriteLine(\"On the first day of Christmas my true love sent to me: A Partridge in a Pear Tree\");         dayOfChristmas++;         }          if(dayOfChristmas == 2)         {         Console.WriteLine(\"On the second day of Christmas my true love sent to me: 2 Turtle Doves and a Partridge in a Pear Tree\");         dayOfChristmas++;         }          if(dayOfChristmas == 3)         {         Console.WriteLine(\"On the third day of Christmas my true love sent to me: 3 French Hens 2 Turtle Doves and a Partridge in a Pear Tree\");         dayOfChristmas++;         }          if(dayOfChristmas == 4)         {         Console.WriteLine(\"On the fourth day of Christmas my true love sent to me:4 Calling Birds 3 French Hens 2 Turtle Doves and a Partridge in a Pear Tree\");         dayOfChristmas++;         }          if(dayOfChristmas == 5)         {         Console.WriteLine(\"On the fifth day of Christmas my true love sent to me: 5 Golden Rings 4 Calling Birds 3 French Hens 2 Turtle Doves and a Partridge in a Pear Tree\");         dayOfChristmas++;         }          if(dayOfChristmas == 6)         {         Console.WriteLine(\"On the sixth day of Christmasmy true love sent to me: 6 Geese a Laying 5 Golden Rings 4 Calling Birds 3 French Hens 2 Turtle Doves and a Partridge in a Pear Tree\");         dayOfChristmas++;         }          if(dayOfChristmas == 7)         {         Console.WriteLine(\"On the seventh day of Christmas my true love sent to me: 7 Swans a Swimming 6 Geese a Laying 5 Golden Rings 4 Calling Birds 3 French Hens 2 Turtle Doves and a Partridge in a Pear Tree\");         dayOfChristmas++;         }          if(dayOfChristmas == 8)         {         Console.WriteLine(\"On the eighth day of Christmas my true love sent to me: 8 Maids a Milking 7 Swans a Swimming 6 Geese a Laying 5 Golden Rings 4 Calling Birds 3 French Hens 2 Turtle Doves and a Partridge in a Pear Tree\");         dayOfChristmas++;         }          if(dayOfChristmas == 9)         {         Console.WriteLine(\"On the ninth day of Christmas my true love sent to me: 9 Ladies Dancing 8 Maids a Milking 7 Swans a Swimming 6 Geese a Laying 5 Golden Rings 4 Calling Bird 3 French Hens 2 Turtle Doves and a Partridge in a Pear Tree\");         dayOfChristmas++;         }          if(dayOfChristmas == 10)         {         Console.WriteLine(\"On the tenth day of Christmas my true love sent to me: 10 Lords a Leaping 9 Ladies Dancing 8 Maids a Milking 7 Swans a Swimming 6 Geese a Laying 5 Golden Rings 4 Calling Birds 3 French Hens 2 Turtle Doves and a Partridge in a Pear Tree\");         dayOfChristmas++;         }          if(dayOfChristmas == 11)         {         Console.WriteLine(\"On the eleventh day of Christmas my true love sent to me: 11 Pipers Piping 10 Lords a Leaping 9 Ladies Dancing 8 Maids a Milking 7 Swans a Swimming 6 Geese a Laying 5 Golden Rings 4 Calling Birds 3 French Hens 2 Turtle Doves and a Partridge in a Pear Tree\");         dayOfChristmas++;         }          if(dayOfChristmas == 12)         {         Console.WriteLine(\"On the twelfth day of Christmas my true love sent to me 12 Drummers Drumming 11 Pipers Piping 10 Lords a Leaping 9 Ladies Dancing 8 Maids a Milking 7 Swans a Swimming 6 Geese a Laying 5 Golden Rings 4 Calling Birds 3 French Hens 2 Turtle Doves and a Partridge in a Pear Tree\");         dayOfChristmas++;         }                                  Console.WriteLine(\"Happy Holidays\");\nif December 25  \tPrint('Christmas')\nHappy Holidays Everyone! \nprint('Happy Holidays God Bless!!')\nMerry Christmas everyone. 2020 was weird but lets all hope that 2021 is better.\nHAPPY HOLIDAYS\nHappy Festivus!\nHappy Holidays!!!\n",
    "reg_date": "2021-10-12T12:00:31.000Z"
  },
  {
    "id": 121,
    "keyword": null,
    "link": null,
    "title": " Decimal number to binary in java using recursion",
    "description": "public class DecimalToBinaryUsingRecursion {    public static void main(String[] args)    {       int inputDecimal = 50;       System.out.println(toBinary(inputDecimal));    }    static int toBinary(int decimal)    {       if(decimal == 0)          return 0;       else          return(decimal % 2 + 10 * toBinary(decimal / 2));    } }\n",
    "reg_date": "2021-10-12T12:00:31.000Z"
  },
  {
    "id": 122,
    "keyword": null,
    "link": null,
    "title": " Diamond Shape Pattern Program in Java",
    "description": "//Diamond Shape Pattern Program in Java import java.util.Scanner; public class Edureka { public static void main(String args[]) { int n, i, j, space = 1; System.out.print(\"Enter the number of rows: \"); Scanner s = new Scanner(System.in); n = s.nextInt(); space = n - 1; for (j = 1; j<= n; j++) { for (i = 1; i<= space; i++) { System.out.print(\" \"); } space--; for (i = 1; i <= 2 * j - 1; i++) { System.out.print(\"*\"); } System.out.println(\"\"); } space = 1; for (j = 1; j<= n - 1; j++) { for (i = 1; i<= space; i++) { System.out.print(\" \"); } space++; for (i = 1; i<= 2 * (n - j) - 1; i++) { System.out.print(\"*\"); } System.out.println(\"\"); } } }\n",
    "reg_date": "2021-10-12T12:00:31.000Z"
  },
  {
    "id": 123,
    "keyword": null,
    "link": null,
    "title": " Difference between == operator and equals method in java",
    "description": "In general both equals() and == operator in Java are used to compare  objects to check equality but here are some of the differences between the two:  1) .equals() and == is that one is a method and other is operator. 2) We can use == operator for reference comparison (address comparison)  and .equals() method for content comparison.   -> == checks if both objects point to the same memory location   -> .equals() evaluates to the comparison of values in the objects. 3) If a class does not override the equals method, then by default it  uses equals(Object o) method of the closest parent class  that has overridden this method.  // Java program to understand   // the concept of == operator  public class Test {      public static void main(String[] args)      {          String s1 = new String(\"HELLO\");          String s2 = new String(\"HELLO\");          System.out.println(s1 == s2);          System.out.println(s1.equals(s2));      }  }  Output: false true    Explanation: Here we are creating two (String) objects namely s1 and s2. Both s1 and s2 refers to different objects.  -> When we use == operator for s1 and s2 comparison then the result is false   as both have different addresses in memory.  -> Using equals, the result is true because its only comparing the   values given in s1 and s2.\n// == operator String str1 = new String(\"Hello\"); String str2 = new String(\"Hello\"); System.out.println(str1 == str2); // output : false   // equals method String str1 = new String(\"Hello\"); String str2 = new String(\"Hello\"); System.out.println(str1.equals(str2)); // output : true\n// Java program to understand  // the concept of == operator and .equals() method public class Test {     public static void main(String[] args)     {         String s1 = new String(\"HELLO\");         String s2 = new String(\"HELLO\");         System.out.println(s1 == s2);         System.out.println(s1.equals(s2));     } }  Output: false true  Explanation: We can use == operators for reference comparison (address comparison) and  .equals() method for content comparison. In simple words, == checks if both  objects point to the same memory location whereas .equals() evaluates to the  comparison of values in the objects.\n",
    "reg_date": "2021-10-12T12:00:31.000Z"
  },
  {
    "id": 124,
    "keyword": null,
    "link": null,
    "title": " Difference between Array vs ArrayList",
    "description": "Arrays are fixed size ArrayList's size auotomatically adjusted Arrays can hold primitives and object ArrayList can hold only objects Arrays can be multi dimensional ArrayList cannot be multi-dimentional Array is a build in data structure ArrayList is implementing class of List interface in Collection framework\n",
    "reg_date": "2021-10-12T12:00:31.000Z"
  },
  {
    "id": 125,
    "keyword": null,
    "link": null,
    "title": " Display double in decimal places java",
    "description": "double input = 3.14159265359; System.out.format(\"double : %.2f\", input); // 3.14 System.out.println(\"double : \" + String.format(\"%.2f\", input)); // 3.14\n",
    "reg_date": "2021-10-12T12:00:32.000Z"
  },
  {
    "id": 126,
    "keyword": null,
    "link": null,
    "title": " Display even and odd numbers in java using for loop",
    "description": "import java.util.Scanner; public class FindEvenOrOdd {    public static void main(String[] args)    {       int a;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter a number to check even or odd: \");       a = sc.nextInt();       if(a % 2 == 0)       {          System.out.println(\"Entered number is an even number.\");       }       else       {          System.out.println(\"Entered number is an odd number.\");       }       sc.close();    } }\n// even and odd numbers in java using for loop import java.util.Scanner; public class EvenOddUsingForLoop {    public static void main(String[] args)    {       int a;       Scanner sc = new Scanner(System.in);       System.out.println(\"Enter number(max) to print all even and odd until: \");       int number = sc.nextInt();       System.out.println(\"Even numbers from 1 to \" + number + \" are: \\n\");       for(a = 1; a <= number; a++)       {          if(a % 2 == 0)          {             System.out.print(a + \"\\n\");          }       }       System.out.println(\"Odd numbers from 1 to \" + number + \" are: \\n\");       for(a = 1; a <= number; a++)       {          if(a % 2 == 1)          {             System.out.print(a + \"\\n\");          }       }       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:32.000Z"
  },
  {
    "id": 127,
    "keyword": null,
    "link": null,
    "title": " Duplicate class android.support.v4.app.",
    "description": "android.useAndroidX=true android.enableJetifier=true\n",
    "reg_date": "2021-10-12T12:00:32.000Z"
  },
  {
    "id": 128,
    "keyword": null,
    "link": null,
    "title": " Duplicate class org.intellij.lang.annotations.",
    "description": "configurations {             cleanedAnnotations              compile.exclude group: 'org.jetbrains' , module:'annotations'          }\n",
    "reg_date": "2021-10-12T12:00:32.000Z"
  },
  {
    "id": 129,
    "keyword": null,
    "link": null,
    "title": " Encoding UTF",
    "description": "String rawString = \"Entwickeln Sie mit Vergn&uuml;gen\"; byte[] bytes = rawString.getBytes(StandardCharsets.UTF_8);\n",
    "reg_date": "2021-10-12T12:00:32.000Z"
  },
  {
    "id": 130,
    "keyword": null,
    "link": null,
    "title": " Error:(4, 17) java: package org.junit does not exist",
    "description": "Open Module Settings  for my project and manually add jar Dependencies junit-4.12.jar and hamcrest-core-1.3.jar  which are contained in the IntelliJ installation lib directory, or download them online.\n",
    "reg_date": "2021-10-12T12:00:32.000Z"
  },
  {
    "id": 131,
    "keyword": null,
    "link": null,
    "title": " Error: Could not find or load main class -Djava.library.path=.home.hdoop.hadoop-3.3.0.lib.native",
    "description": "Sounds silly, but if you've copied .bashrc lines from somewhere check that the quotation marks are like this:     export HADOOP_OPTS=\"-Djava.library.path=$HADOOP_HOME/lib/native\" and not like this     export HADOOP_OPTS=&rdquo;-Djava.library.path=$HADOOP_HOME/lib/native&rdquo;  ...took me some time\n",
    "reg_date": "2021-10-12T12:00:32.000Z"
  },
  {
    "id": 132,
    "keyword": null,
    "link": null,
    "title": " Error: Could not find or load main class mina.calc.MinaCalculator in module mina",
    "description": "//You must change your class name\n",
    "reg_date": "2021-10-12T12:00:32.000Z"
  },
  {
    "id": 133,
    "keyword": null,
    "link": null,
    "title": " Error:java: Source option 5 is no longer supported. Use 6 or later.",
    "description": "<properties>     <maven.compiler.source>1.8</maven.compiler.source>     <maven.compiler.target>1.8</maven.compiler.target> </properties>\n    <plugin>         <groupId>org.apache.maven.plugins</groupId>         <artifactId>maven-compiler-plugin</artifactId>         <configuration>             <source>1.7</source>             <target>1.7</target>         </configuration>     </plugin> \n",
    "reg_date": "2021-10-12T12:00:32.000Z"
  },
  {
    "id": 134,
    "keyword": null,
    "link": null,
    "title": " Error creating bean with name 'dataSource' defined in class path resource",
    "description": "@EnableAutoConfiguration(exclude={DataSourceAutoConfiguration.class})\n",
    "reg_date": "2021-10-12T12:00:33.000Z"
  },
  {
    "id": 135,
    "keyword": null,
    "link": null,
    "title": " Even odd program in java using ternary operator",
    "description": "import java.util.Scanner; public class EvenOddTernary {    public static void main(String[] args)     {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter a number : \");       int number = sc.nextInt();       // java odd or even       String strOutput = (number % 2 == 0) ? \"even\" : \"odd\";          System.out.println(number + \" is \" + strInput);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:33.000Z"
  },
  {
    "id": 136,
    "keyword": null,
    "link": null,
    "title": " Exception in thread \"main\" java.lang.IllegalArgumentException: Removing a detached instance classes.Buch",
    "description": "// Don't open a new Transaction!\n",
    "reg_date": "2021-10-12T12:00:33.000Z"
  },
  {
    "id": 137,
    "keyword": null,
    "link": null,
    "title": " Exception in thread \"main\" java.lang.NoClassDefFoundError: javax/xml/bind/annotation/XmlSchema",
    "description": "#Installing Android SDK Command-line tools from Android SDK Manager 1- Open Tools > SDK Manager 2-From the left choose, Appearance & Behavior > System Settings > Android SDK 3-Select SDK Tools from the top menu 4- Check Android SDK Command-line tools and click 'apply'.\nexport PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin \n",
    "reg_date": "2021-10-12T12:00:33.000Z"
  },
  {
    "id": 138,
    "keyword": null,
    "link": null,
    "title": " Exception in thread \"main\" java.util.zip.ZipException: error",
    "description": "gradle-wrapper.properties  distributionUrl=https://services.gradle.org/distributions/gradle-6.6.1-all.zip \n",
    "reg_date": "2021-10-12T12:00:33.000Z"
  },
  {
    "id": 139,
    "keyword": null,
    "link": null,
    "title": " Exit program Android",
    "description": "public void onBackPressed() {   moveTaskToBack(true);   android.os.Process.killProcess(android.os.Process.myPid());   System.exit(1); }\n",
    "reg_date": "2021-10-12T12:00:33.000Z"
  },
  {
    "id": 140,
    "keyword": null,
    "link": null,
    "title": " Explain about instanceof operator in java",
    "description": "An instanceof in Java is a comparison operator which, given an object instance,  checks whether that instance is of a specified type (class/sub-class/interface)  or not. Just like other comparison operators, it returns true or false.  Comparing any object instance with a null type through instanceof operator  returns a false.    Instanceof operator is used to test the object is of which type.  Syntax : <reference expression> instanceof <destination type> Instanceof returns true if reference expression is subtype of destination type. Instanceof returns false if reference expression is null.\nThe instanceof operator tests to see if the prototype property of a constructor  appears anywhere in the prototype chain of an object. The return value is a  boolean value. For example :-  function Car(make, model, year) {   this.make = make;   this.model = model;   this.year = year; } const auto = new Car('Honda', 'Accord', 1998);  console.log(auto instanceof Car); // expected output: true  console.log(auto instanceof Object); // expected output: true \n",
    "reg_date": "2021-10-12T12:00:33.000Z"
  },
  {
    "id": 141,
    "keyword": null,
    "link": null,
    "title": " Explain try & catch finally block in Java",
    "description": "public class MyClass {   public static void main(String[ ] args) {     try {       int[] myNumbers = {1, 2, 3, 4, 5, 6};       System.out.println(myNumbers[10]);     } catch (Exception e) {       System.out.println(\"Something went wrong. check again\");     }   } }  \ntry block: code that is protected for any exceptions. and it is mandatory (only try) catch block: if any exception happens during runtime in the try block,  the catch block will catch that exception. if any exception happens during runtime in the try block,  control will be given to catch block. An optional finally block gives us a chance to run the code which  we want to execute EVERYTIME a try-catch block is completed  &ndash; either with errors or without any error.\nclass JavaException {  public static void main(String args[]) {   int d = 0;   int n = 20;   try {    int fraction = n / d;    System.out.println(\"This line will not be Executed\");   } catch (ArithmeticException e) {    System.out.println(\"In the catch Block due to Exception = \" + e);   }   System.out.println(\"End Of Main\");  } }\n",
    "reg_date": "2021-10-12T12:00:33.000Z"
  },
  {
    "id": 142,
    "keyword": null,
    "link": null,
    "title": " Factorial from 1 to 10 in java",
    "description": "// Factorial from 1 to 10 in java public class FactorialFrom1To10 {    public static void main(String[] args)    {       int count;       long factorial = 1;       System.out.printf(\"%4s0s\\n\", \"Number\", \"Factorials\");       for(count = 1; count <= 10; count++)       {          factorial *= count;          System.out.printf(\"M%,30d\\n\", count, factorial);       }    } }\npublic class FactorialDemo {    public static void main(String[] args)    {       int number = 6, factorial = 1;       for(int a = 1; a <= number; a++)       {          factorial = factorial * a;       }       System.out.println(\"Factorial of \" + number + \" is : \" + factorial);    } }\npublic class Factorial {      public static void main(String[] args) {         int num = 6;         long factorial = multiplyNumbers(num);         System.out.println(\"Factorial of \" + num + \" = \" + factorial);     }     public static long multiplyNumbers(int num)     {         if (num >= 1)             return num * multiplyNumbers(num - 1);         else             return 1;     } }\n",
    "reg_date": "2021-10-12T12:00:33.000Z"
  },
  {
    "id": 143,
    "keyword": null,
    "link": null,
    "title": " Failed to apply plugin [class 'com.google.gms.googleservices.GoogleServicesPlugin']",
    "description": "// in /platforms/android/cordova-support-google-services  // In this directory find the file {APP}-build.gradle  // Open and comment the next line  apply plugin: com.google.gms.googleservices.GoogleServicesPlugin\n",
    "reg_date": "2021-10-12T12:00:33.000Z"
  },
  {
    "id": 144,
    "keyword": null,
    "link": null,
    "title": " Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.19.1:test (default-test) on project",
    "description": " <plugins>         <plugin>           <groupId>org.apache.maven.plugins</groupId>           <artifactId>maven-surefire-plugin</artifactId>           <version>2.19.1</version>         </plugin>   </plugins>\n<plugin>     <groupId>org.apache.maven.plugins</groupId>     <artifactId>maven-surefire-plugin</artifactId>     <version>2.19.1</version>     <configuration>         <testFailureIgnore>true</testFailureIgnore>     </configuration> </plugin> \n<plugin>     <groupId>org.apache.maven.plugins</groupId>     <artifactId>maven-surefire-plugin</artifactId>     <version>3.0.0-M1</version> </plugin>\n",
    "reg_date": "2021-10-12T12:00:34.000Z"
  },
  {
    "id": 145,
    "keyword": null,
    "link": null,
    "title": " Failed to resolve org.junit.platform:junit-platform-launcher:1.7.0",
    "description": "<dependency>   <groupId>org.junit.platform</groupId>   <artifactId>junit-platform-launcher</artifactId>   <version>1.7.0</version>   <scope>test</scope> </dependency>\n",
    "reg_date": "2021-10-12T12:00:34.000Z"
  },
  {
    "id": 146,
    "keyword": null,
    "link": null,
    "title": " Fast Lookup of Java",
    "description": "Set<String> animals = new HashSet<String>(                           Arrays.asList(\"cat\", \"dog\", \"squirrel\", \"raccoon\")); if (animals.contains(\"dog\")) {     System.out.println(\"Yep, dog's here!\"); // prints } if (!animals.contains(\"aardvark\")) {     System.out.println(\"Ah, aardvark's missing!\"); // prints }\n",
    "reg_date": "2021-10-12T12:00:34.000Z"
  },
  {
    "id": 147,
    "keyword": null,
    "link": null,
    "title": " Find GCD of two numbers in java using recursion",
    "description": "// Find GCD of two numbers in java using recursion public class GCDUsingRecursion {    public static void main(String[] args)     {       int number1 = 898, number2 = 90;       int gcd = gcdRecursion(number1, number2);       System.out.println(\"G.C.D of \" + number1 + \" and \" + number2 + \" is \" + gcd);    }    public static int gcdRecursion(int num1, int num2)    {       if(num2 != 0)       {          return gcdRecursion(num2, num1 % num2);       }       else       {          return num1;       }    } }\n",
    "reg_date": "2021-10-12T12:00:34.000Z"
  },
  {
    "id": 148,
    "keyword": null,
    "link": null,
    "title": " Find minimum and maximum values in a java array",
    "description": "// Java program to find maximum and minimum number without using array import java.util.Scanner; public class MaximumMinimumWithoutArray {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter total number: \");       int numbers = sc.nextInt();       int maximum = Integer.MIN_VALUE;       int minimum = Integer.MAX_VALUE;       System.out.println(\"Please enter \" + numbers + \" numbers.\");       for(int a = 0; a < numbers; a++)       {          int current = sc.nextInt();          if(current > maximum)          {             maximum = current;          }          if(current < minimum)          {             minimum = current;          }       }       System.out.println(\"largest of \" + numbers + \" numbers is: \" + maximum);       System.out.println(\"smallest of \" + numbers + \" numbers is: \" + minimum);       sc.close();    } }\nprivate static int findMin(int[] array) { \t\tint min = array[0]; \t\tfor(int i=1;i<array.length;i++) { \t\t\tif(min > array[i]) { \t\t\t\tmin = array[i]; \t\t\t} \t\t} \t\treturn min; \t}\n// Find minimum and maximum values in a java array public class MaxMinValueInArray {    public static void main(String[] args)     {       int[] arrNumber = new int[]{50, 150, 250, 500, 160, 530};       int maximum = maxNumber(arrNumber);       System.out.println(\"Maximum value : \" + maximum);       // calling min function java       int minimum = minNumber(arrNumber);       System.out.println(\"Minimum value : \" + minimum);    }    // java find max in array    public static int maxNumber(int[] arr)    {       int maximumValue = arr[0];       for(int a = 1; a < arr.length; a++)       {          if(arr[a] > maximumValue)          {             maximumValue = arr[a];          }       }       return maximumValue;    }    // java min of array    public static int minNumber(int[] arr)    {       int minimumValue = arr[0];       // find minimum value in array java       for(int a = 1; a < arr.length; a++)       {          if(arr[a] < minimumValue)          {             minimumValue = arr[a];          }       }       return minimumValue;    } }\npublic class MinimumNumber{   public static void main(String[] args){     int[] arr=new int[]{2,3,4,1};     int min=arr[0];     for(int i=0;i<arr.length;i++){       if(arr[i]<min){         min=arr[i];       }     }     System.out.println(\"Minimum Number in array:\"+min);   } }\nInteger[] num = { 2, 4, 7, 5, 9 };         // using Collections.min() to find minimum element         // using only 1 line.         int min1 = Collections.min(Arrays.asList(num));          // using Collections.max() to find maximum element         // using only 1 line.         int max1 = Collections.max(Arrays.asList(num));          System.out.println(min1); // 2          System.out.println(max1); // 9\n",
    "reg_date": "2021-10-12T12:00:34.000Z"
  },
  {
    "id": 149,
    "keyword": null,
    "link": null,
    "title": " Floyd's triangle number pattern using while loop in java",
    "description": "// Floyd's triangle number pattern using while loop in java import java.util.Scanner; public class FloydTriangleWhileLoop {    public static void main(String[] args)     {       Scanner sc = new Scanner(System.in);       System.out.println(\"Enter the number of rows of floyd's triangle you want to print: \");       int rows = sc.nextInt();       int number = 1;       System.out.println(\"Floyd triangle in java using while loop\");       int a = 1;       int b = 1;       while(a <= rows)       {          b = 1;          while(b <= a)          {             System.out.println(number + \" \");             number++;             b++;          }          System.out.println();          a++;       }       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:34.000Z"
  },
  {
    "id": 150,
    "keyword": null,
    "link": null,
    "title": " Floyd's triangle star pattern in java",
    "description": "// Floyd's triangle star pattern in java import java.util.Scanner; public class FloydTriangleStars {    public static void main(String[] args)     {       Scanner sc = new Scanner(System.in);       System.out.println(\"Enter the number of rows of floyd's triangle you want to print: \");       int rows = sc.nextInt();       System.out.println(\"Printing floyd's triangle with stars in java\");       for(int a = 1; a <= rows; a++)       {          for(int b = 1; b <= a; b++)          {             System.out.print(\"* \");          }          System.out.println();       }       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:34.000Z"
  },
  {
    "id": 151,
    "keyword": null,
    "link": null,
    "title": " GORM in grails",
    "description": "def b = Book.findByTitle(\"The Shining\")      b = Book.findByTitleAndAuthor(\"The Sum of All Fears\", \"Tom Clancy\")     b = Book.findByReleaseDateBetween(firstDate, new Date())     b = Book.findByReleaseDateGreaterThanEquals(firstDate)     b = Book.findByReleaseDateLessThanEquals(firstDate)     b = Book.findByTitleLike(\"%Hard work%\")     b = Book.findByTitleIlike(\"%Hard work%\") // ignores case     b = Book.findByTitleNotEqual(\"Harry Potter\")     b = Book.findByReleaseDateIsNull()     b = Book.findByReleaseDateIsNotNull()     b = Book.findPaperbackByAuthor(\"Douglas Adams\")     b = Book.findNotPaperbackByAuthor(\"Douglas Adams\")     b = Book.findByAuthorInList([\"Douglas Adams\", \"Hunter S. Thompson\"])\ndef results = Book.findAllByTitle(\"The Shining\", [max: 10, sort: \"title\", order: \"desc\", offset: 100])\n",
    "reg_date": "2021-10-12T12:00:34.000Z"
  },
  {
    "id": 152,
    "keyword": null,
    "link": null,
    "title": " Generate Random number using random class in Java",
    "description": "import java.util.Random; class GenerateRandom {     public static void main( String args[] ) {       Random rand = new Random(); //instance of random class       int upperbound = 25;         //generate random values from 0-24       int int_random = rand.nextInt(upperbound);        double double_random=rand.nextDouble();       float float_random=rand.nextFloat();              System.out.println(\"Random integer value from 0 to\" + (upperbound-1) + \" : \"+ int_random);       System.out.println(\"Random float value between 0.0 and 1.0 : \"+float_random);       System.out.println(\"Random double value between 0.0 and 1.0 : \"+double_random);     } }\n",
    "reg_date": "2021-10-12T12:00:34.000Z"
  },
  {
    "id": 153,
    "keyword": null,
    "link": null,
    "title": " Get current date and time in java 8",
    "description": "// get current date and timein java using Calendar.getTime() method import java.util.Calendar; import java.util.Date; public class UsingCalendarClass {    public static void main(String[] args)    {       Date date = Calendar.getInstance().getTime();       System.out.println(date);    } }\n// Get current date and time in java 8 import java.time.LocalDate; import java.time.LocalDateTime; import java.time.LocalTime; public class CurrentDateTimeJava8  {    public static void main(String[] args)     {       LocalDate ld = LocalDate.now();       System.out.println(\"Current date: \" + ld);       // get current time value       LocalTime lt = LocalTime.now();       System.out.println(\"Current time: \" + lt);       // get current date-time value       LocalDateTime ldt = LocalDateTime.now();       System.out.println(\"Current date-time: \" + ldt);    } }\n// how to get current date and time in java  // using Date class and System.currentTimeMillis() method import java.util.Date; public class UsingDateClass {    public static void main(String[] args)     {       Date dt = new Date();       System.out.println(dt);       long milliSeconds = System.currentTimeMillis();         Date date = new Date(milliSeconds);       System.out.println(date);     } }\nLocalDate localDate = LocalDate.now(); \n",
    "reg_date": "2021-10-12T12:00:34.000Z"
  },
  {
    "id": 154,
    "keyword": null,
    "link": null,
    "title": " Get the first Monday of a month in Java",
    "description": "LocalDate now = LocalDate.now();  LocalDate firstMonday = now.with(TemporalAdjusters.firstInMonth(DayOfWeek.MONDAY));\n",
    "reg_date": "2021-10-12T12:00:35.000Z"
  },
  {
    "id": 155,
    "keyword": null,
    "link": null,
    "title": " Get the first day of the current month in Java",
    "description": "LocalDate now = LocalDate.now();  LocalDate firstDay = now.with(TemporalAdjusters.firstDayOfMonth());\n",
    "reg_date": "2021-10-12T12:00:35.000Z"
  },
  {
    "id": 156,
    "keyword": null,
    "link": null,
    "title": " Get the last Friday of a month in Java",
    "description": "LocalDate now = LocalDate.now();  LocalDate lastFriday = now.with(TemporalAdjusters.lastInMonth(DayOfWeek.FRIDAY));\n",
    "reg_date": "2021-10-12T12:00:35.000Z"
  },
  {
    "id": 157,
    "keyword": null,
    "link": null,
    "title": " Get the last day of a month in Java",
    "description": "LocalDate now = LocalDate.now();  LocalDate lastDay = now.with(TemporalAdjusters.lastDayOfMonth());\n",
    "reg_date": "2021-10-12T12:00:35.000Z"
  },
  {
    "id": 158,
    "keyword": null,
    "link": null,
    "title": " Given a double-precision number, , denoting an amount of money, use the NumberFormat class' getCurrencyInstance method to convert into the US, Indian, Chinese, and French currency formats",
    "description": "import java.util.Scanner; import java.text.NumberFormat; import java.util.Locale;  public class Solution {          public static void main(String[] args) {         /* Read input */         Scanner scanner = new Scanner(System.in);         double payment = scanner.nextDouble();         scanner.close();          /* Create custom Locale for India.            I used the \"IANA Language Subtag Registry\" to find India's country code */         Locale indiaLocale = new Locale(\"en\", \"IN\");          /* Create NumberFormats using Locales */         NumberFormat us     = NumberFormat.getCurrencyInstance(Locale.US);         NumberFormat india  = NumberFormat.getCurrencyInstance(indiaLocale);         NumberFormat china  = NumberFormat.getCurrencyInstance(Locale.CHINA);         NumberFormat france = NumberFormat.getCurrencyInstance(Locale.FRANCE);          /* Print output */                 System.out.println(\"US: \"     + us.format(payment));         System.out.println(\"India: \"  + india.format(payment));         System.out.println(\"China: \"  + china.format(payment));         System.out.println(\"France: \" + france.format(payment));     } } \n",
    "reg_date": "2021-10-12T12:00:35.000Z"
  },
  {
    "id": 159,
    "keyword": null,
    "link": null,
    "title": " Given an integer, , print its first multiples. Each multiple (where ) should be printed on a new line in the form: N x i = result.",
    "description": "        int sum;                  for(int i = 1; i <= 10; i++){             sum = n * i;             System.out.println(n + \" x \" + i + \" = \" + sum);         }\n",
    "reg_date": "2021-10-12T12:00:35.000Z"
  },
  {
    "id": 160,
    "keyword": null,
    "link": null,
    "title": " HOW TO SUPRESS sonar warning in java code",
    "description": "@java.lang.SuppressWarnings(\"squid:S00112\")\n",
    "reg_date": "2021-10-12T12:00:36.000Z"
  },
  {
    "id": 161,
    "keyword": null,
    "link": null,
    "title": " HTTP FAILED: java.net.UnknownServiceException: CLEARTEXT communication to ztdev.co.za not permitted by network security policy",
    "description": "<?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest ...>     <uses-permission android:name=\"android.permission.INTERNET\" />     <application         ...         android:usesCleartextTraffic=\"true\"         ...>         ...     </application> </manifest>\n<?xml version=\"1.0\" encoding=\"utf-8\"?> <network-security-config>     <base-config cleartextTrafficPermitted=\"true\" /> </network-security-config>  in manifest  <application         android:usesCleartextTraffic=\"true\"     </application>\nMuito obrigada\n",
    "reg_date": "2021-10-12T12:00:36.000Z"
  },
  {
    "id": 162,
    "keyword": null,
    "link": null,
    "title": " HashSet Object clone() method in java",
    "description": "import java.util.HashSet; public class HashSetObjectCloneMethodExample {    public static void main(String[] args)    {       HashSet<String> hs = new HashSet<String>();       hs.add(\"Welcome\");       hs.add(\"hello\");       hs.add(\"world\");       hs.add(\"core\");       hs.add(\"java\");       System.out.println(\"HashSet before using clone() method: \" + hs);       // create new cloned HashSet       HashSet<String> objClone = new HashSet<String>();       // clone HashSet using clone() method       objClone = (HashSet)hs.clone();       // print new HashSet after cloning       System.out.println(\"HashSet after using clone() method: \" + objClone);    } }\n",
    "reg_date": "2021-10-12T12:00:36.000Z"
  },
  {
    "id": 163,
    "keyword": null,
    "link": null,
    "title": " HashSet add(E e) method in java",
    "description": "import java.util.HashSet; public class HashSetAddMethodExample {    public static void main(String[] args)    {       HashSet<String> hs = new HashSet<String>();       // populating hash set       hs.add(\"violet\");       hs.add(\"indigo\");       hs.add(\"blue\");       hs.add(\"green\");       hs.add(\"yellow\");       System.out.println(\"HashSet of colors: \" + hs);    } }\n",
    "reg_date": "2021-10-12T12:00:36.000Z"
  },
  {
    "id": 164,
    "keyword": null,
    "link": null,
    "title": " HashSet clear() method in java",
    "description": "import java.util.HashSet; public class HashSetClearMethodExample {    public static void main(String[] args)    {       HashSet<String> hs = new HashSet<String>();       hs.add(\"Welcome\");       hs.add(\"hello\");       hs.add(\"world\");       hs.add(\"core\");       hs.add(\"java\");       System.out.println(\"HashSet before using clear() method: \" + hs);       // HashSet clear() method       hs.clear();       System.out.println(\"HashSet after using clear() method: \" + hs);    } }\n",
    "reg_date": "2021-10-12T12:00:36.000Z"
  },
  {
    "id": 165,
    "keyword": null,
    "link": null,
    "title": " HashSet contains(Object o) method in java",
    "description": "import java.util.HashSet; public class HashSetContainsObjectMethodExample {    public static void main(String[] args)    {       HashSet<String> hs = new HashSet<String>();       hs.add(\"hello\");       hs.add(\"world\");       hs.add(\"java\");       // check if element exists       boolean bool = hs.contains(\"world\");       System.out.println(\"Is element 'world' exists: \" + bool);    } }\n",
    "reg_date": "2021-10-12T12:00:36.000Z"
  },
  {
    "id": 166,
    "keyword": null,
    "link": null,
    "title": " HashSet isEmpty() method in java",
    "description": "import java.util.HashSet; public class HashSetIsEmptyMethodExample {    public static void main(String[] args)    {       HashSet<String> hs = new HashSet<String>();       hs.add(\"Welcome\");       hs.add(\"hello\");       hs.add(\"world\");       hs.add(\"core\");       hs.add(\"java\");       System.out.println(\"HashSet before using isEmpty() method: \" + hs);       // check if HashSet is empty       System.out.println(\"Is the HashSet empty: \" + hs.isEmpty());       // clear HashSet using clear() method       hs.clear();       // again check if HashSet is empty       System.out.println(\"Is the HashSet empty: \" + hs.isEmpty());    } }\n",
    "reg_date": "2021-10-12T12:00:36.000Z"
  },
  {
    "id": 167,
    "keyword": null,
    "link": null,
    "title": " HashSet iterator() method in java",
    "description": "Set<String> set = new HashSet<String>(); for (String s : set) {     System.out.println(s); }  //Java 8: set.forEach(System.out::println);\nimport java.util.HashSet; import java.util.Iterator; public class HashSetIteratorMethodExample {    public static void main(String[] args)    {       HashSet<String> hs = new HashSet<String>();       hs.add(\"Welcome\");       hs.add(\"hello\");       hs.add(\"world\");       hs.add(\"core\");       hs.add(\"java\");       System.out.println(\"HashSet values are: \" + hs);       // create an Iterator       Iterator<String> value = hs.iterator();       System.out.println(\"iterator values are: \");       while(value.hasNext())       {          System.out.println(value.next());       }    } }\n",
    "reg_date": "2021-10-12T12:00:36.000Z"
  },
  {
    "id": 168,
    "keyword": null,
    "link": null,
    "title": " HashSet remove(Object o) method in java",
    "description": "import java.util.HashSet; public class HashSetRemoveObjectMethodExample {    public static void main(String[] args)    {       HashSet<String> hs = new HashSet<String>();       hs.add(\"hello\");       hs.add(\"world\");       hs.add(\"java\");       System.out.println(\"HashSet before using remove(Object o) method: \" + hs);       // remove string \"world\" from HashSet       boolean bool = hs.remove(\"world\");       System.out.println(\"Has string removed? \" + bool);       System.out.println(\"HashSet after using remove(Object o) method: \" + hs);    } }\nexample on removeAll() method for NullPointerException import java.util.HashSet; public class HashSetRemoveAllMethodExample {    public static void main(String[] args)    {       try       {          HashSet<Integer> hs1 = new HashSet<Integer>();          hs1.add(2);          hs1.add(4);          hs1.add(6);          hs1.add(8);          hs1.add(10);          // printing hs1          System.out.println(\"HashSet before using removeAll() method: \" + hs1);          // create another object of HashSet          HashSet<Integer> hs2 = null;          // printing hs2          System.out.println(\"Elements to be removed: \" + hs2);          System.out.println(\"Trying to pass null: \");          // removing elements from HashSet          // specified in hs2 using removeAll() method          hs1.removeAll(hs2);          System.out.println(\"HashSet after using removeAll() method: \" + hs1);       }       catch(NullPointerException ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\nimport java.util.HashSet; public class HashSetRemoveAllMethodExample {    public static void main(String[] args)    {       try       {          HashSet<Integer> hs1 = new HashSet<Integer>();          hs1.add(2);          hs1.add(4);          hs1.add(6);          hs1.add(8);          hs1.add(10);          System.out.println(\"HashSet before using removeAll() method: \" + hs1);          // create another HashSet          HashSet<Integer> hs2 = new HashSet<Integer>();          hs2.add(2);          hs2.add(4);          hs2.add(6);          System.out.println(\"Elements to be removed: \" + hs2);          // remove elements from hs1 described in hs2 using removeAll() method          hs1.removeAll(hs2);          System.out.println(\"HashSet after using removeAll() method: \" + hs1);       }       catch(NullPointerException ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\n",
    "reg_date": "2021-10-12T12:00:36.000Z"
  },
  {
    "id": 169,
    "keyword": null,
    "link": null,
    "title": " HashSet size() method in java",
    "description": "import java.util.HashSet; public class HashSetSizeMethodExample {    public static void main(String[] args)    {       HashSet<String> hs = new HashSet<String>();       hs.add(\"Welcome\");       hs.add(\"hello\");       hs.add(\"world\");       hs.add(\"core\");       hs.add(\"java\");       System.out.println(\"HashSet values: \" + hs);       System.out.println(\"The size of HashSet is: \" + hs.size());    } }\n",
    "reg_date": "2021-10-12T12:00:36.000Z"
  },
  {
    "id": 170,
    "keyword": null,
    "link": null,
    "title": " How can I put a parameter into a localized string in Android?",
    "description": "// I use this in my string resource.  <string name=\"duration\"><xliff:g id=\"minutes\" example=\"42\" >%s</xliff:g> mins <xliff:g id=\"seconds\" example=\"28\" >%s</xliff:g> secs</string> // Which prints xx mins yy secs when you call:  getString(R.string.duration, minutes, seconds); \n",
    "reg_date": "2021-10-12T12:00:37.000Z"
  },
  {
    "id": 171,
    "keyword": null,
    "link": null,
    "title": " How do I compile and run a program in Java on my Mac?",
    "description": "cd ~ javac HelloWorld.java //for running it java HelloWorld\n",
    "reg_date": "2021-10-12T12:00:37.000Z"
  },
  {
    "id": 172,
    "keyword": null,
    "link": null,
    "title": " How do I make a splash screen?",
    "description": "//MainActivity.java  import androidx.appcompat.app.AppCompatActivity; import android.os.Bundle;  public class MainActivity extends AppCompatActivity {      @Override     protected void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         setContentView(R.layout.activity_main);     } }  //splashscreen.java  import android.app.Activity; import android.content.Intent; import android.os.Bundle; import android.os.Handler;  public class splashscreen extends Activity {     @Override     public void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         setContentView(R.layout.splashscreen);          //Splash Screen duration         int secondsDelayed = 1;         new Handler().postDelayed(new Runnable() {             public void run() {                 startActivity(new Intent(splashscreen.this, MainActivity.class));                 finish();             }         }, secondsDelayed * 3000);     } }  //activity_main.xml  <?xml version=\"1.0\" encoding=\"utf-8\"?> <androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"     xmlns:app=\"http://schemas.android.com/apk/res-auto\"     xmlns:tools=\"http://schemas.android.com/tools\"     android:layout_width=\"match_parent\"     android:layout_height=\"match_parent\"     tools:context=\".MainActivity\">      <TextView         android:layout_width=\"wrap_content\"         android:layout_height=\"wrap_content\"         android:text=\"Hello World!\"         app:layout_constraintBottom_toBottomOf=\"parent\"         app:layout_constraintLeft_toLeftOf=\"parent\"         app:layout_constraintRight_toRightOf=\"parent\"         app:layout_constraintTop_toTopOf=\"parent\" />  </androidx.constraintlayout.widget.ConstraintLayout>  //splashscreen.xml  <?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"     android:orientation=\"vertical\" android:layout_width=\"match_parent\"     android:layout_height=\"match_parent\"     android:background=\"@drawable/splashlogo\"      />        Source: https://github.com/Lunox-Code/SplashScreen\n",
    "reg_date": "2021-10-12T12:00:37.000Z"
  },
  {
    "id": 173,
    "keyword": null,
    "link": null,
    "title": " How do you count characters in a string array in Java?",
    "description": "package practical5;  import java.util.Arrays;  public class Part1_9 {  public static void main(String[] args) {      // declaring and populating array     String quoteArray[] = { \"\\\"Continuous\", \"effort\", \"not\", \"strength\",             \"nor\", \"intelligence\", \"is\", \"the\", \"key\", \"to\", \"unlocking\",             \"our\", \"potential.\\\"\\n\" };      // for loop to print full array     for (int counter = 0; counter < quoteArray.length; counter++) {         System.out.print(quoteArray[counter] + \" \");     }// end of for loop      // Printing array using Enhanced for/ for each loop (Different way to     // print array)     for (String element : quoteArray) {         System.out.print(element + \" \");     }// end of enhanced for      // line break     System.out.println();      // printing number of words in array     System.out.println(\"Number of words in array: \" + quoteArray.length);      **// printing total number of letters in array**     for (int counter = 0; counter < quoteArray.length; counter++) {         String letters = new String(quoteArray[counter]);     }      // printing the smallest word      // printing the biggest word  }// end of main  }// end of class\n",
    "reg_date": "2021-10-12T12:00:37.000Z"
  },
  {
    "id": 174,
    "keyword": null,
    "link": null,
    "title": " How to activate an entity listener for all entities",
    "description": "<entity-mappings>     <persistence-unit-metadata>         <persistence-unit-defaults>             <entity-listeners>                 <entity-listener class=\"org.thoughts.on.java.model.MyEntityListener\"/>             </entity-listeners>         </persistence-unit-defaults>     </persistence-unit-metadata> </entity-mappings> \npublic class ReplicationInsertEventListener          implements PostInsertEventListener {       public static final ReplicationInsertEventListener INSTANCE =          new ReplicationInsertEventListener();       @Override     public void onPostInsert(             PostInsertEvent event)              throws HibernateException {         final Object entity = event.getEntity();           if(entity instanceof Post) {             Post post = (Post) entity;               event.getSession().createNativeQuery(                 \"INSERT INTO old_post (id, title, version) \" +                 \"VALUES (:id, :title, :version)\")             .setParameter(\"id\", post.getId())             .setParameter(\"title\", post.getTitle())             .setParameter(\"version\", post.getVersion())             .setFlushMode(FlushMode.MANUAL)             .executeUpdate();         }     }       @Override     public boolean requiresPostCommitHanding(             EntityPersister persister) {         return false;     } } \n",
    "reg_date": "2021-10-12T12:00:37.000Z"
  },
  {
    "id": 175,
    "keyword": null,
    "link": null,
    "title": " How to add negative random numbers in java",
    "description": " //To get a random number between a set range with min and max:  int number = random.nextInt(max - min) + min; //It also works with negative numbers.  //So:  random.nextInt(30 + 10) - 10; // max = 30; min = -10; //Will yield a random int between -10 and 30 (exclusive).  //It also works with doubles.\n",
    "reg_date": "2021-10-12T12:00:37.000Z"
  },
  {
    "id": 176,
    "keyword": null,
    "link": null,
    "title": " How to chage font progrmatically",
    "description": "TextView tv = (TextView) findViewById(R.id.appname); Typeface face = Typeface.createFromAsset(getAssets(),             \"fonts/epimodem.ttf\"); tv.setTypeface(face);\n",
    "reg_date": "2021-10-12T12:00:37.000Z"
  },
  {
    "id": 177,
    "keyword": null,
    "link": null,
    "title": " How to check server version bukkit spigot paper",
    "description": "if (Bukkit.getVersion().contains(\"1.8.1\")) {    //stuff }\n",
    "reg_date": "2021-10-12T12:00:37.000Z"
  },
  {
    "id": 178,
    "keyword": null,
    "link": null,
    "title": " How to compare lists of custom classes without defining equals() and hashCode()?",
    "description": "lists equal\n",
    "reg_date": "2021-10-12T12:00:37.000Z"
  },
  {
    "id": 179,
    "keyword": null,
    "link": null,
    "title": " How to connect java class file to xml file",
    "description": "public class Login extends Activity {     @Override     protected void onCreate(Bundle savedInstanceState) {          super.onCreate(savedInstanceState);         setContentView(R.layout.login_activity.xml);         ...     } } \n",
    "reg_date": "2021-10-12T12:00:38.000Z"
  },
  {
    "id": 180,
    "keyword": null,
    "link": null,
    "title": " How to convert string to date in Java 8",
    "description": "import java.text.SimpleDateFormat;   import java.util.Date;   public class StringToDateExample1 {   public static void main(String[] args)throws Exception {       String sDate1=\"31/12/1998\";       Date date1=new SimpleDateFormat(\"dd/MM/yyyy\").parse(sDate1);       System.out.println(sDate1+\"\\t\"+date1);   }   }  \n// How to convert string to date in Java 8 import java.time.LocalDate; import java.time.LocalDateTime; public class Java8StringToDate {    public static void main(String[] args)    {       DateTimeFormatter dtf1 = DateTimeFormatter.ofPattern(\"d/MM/yyyy\");       String strDate1 = \"14/05/2005\";       LocalDate ld1 = LocalDate.parse(strDate1, dtf1);        System.out.println(ld1);       DateTimeFormatter dtf2 = DateTimeFormatter.ofPattern(\"MMM d yyyy\");       String strDate2 = \"May 14 2005\";       LocalDate ld2 = LocalDate.parse(strDate2, dtf2);        System.out.println(ld2);    } }\n",
    "reg_date": "2021-10-12T12:00:38.000Z"
  },
  {
    "id": 181,
    "keyword": null,
    "link": null,
    "title": " How to create a 2d array in java",
    "description": "char[][] array = new int[rows][columns];\nint[][] arr = new int[row][column]; \n//Length int[][]arr= new int [filas][columnas]; arr.length=filas;          int[][] a = {             {1, 2, 3},              {4, 5, 6, 9},              {7},          };                // calculate the length of each row         System.out.println(\"Length of row 1: \" + a[0].length);         System.out.println(\"Length of row 2: \" + a[1].length);         System.out.println(\"Length of row 3: \" + a[2].length);     }\n int[][] arr = new int[m][n]; \n int[][] arr = new int[10][20];          arr[0][0] = 1; \n",
    "reg_date": "2021-10-12T12:00:38.000Z"
  },
  {
    "id": 182,
    "keyword": null,
    "link": null,
    "title": " How to create directory in java",
    "description": "String path = ... File pathAsFile = new File(path);  if (!Files.exists(Paths.get(path))) { \tpathAsFile.mkdir(); }\npackage com.mkyong.file;  import java.io.File;  public class CreateDirectoryExample {      public static void main(String[] args) {          File file = new File(\"C:\\\\Directory1\");         if (!file.exists()) {             if (file.mkdir()) {                 System.out.println(\"Directory is created!\");             } else {                 System.out.println(\"Failed to create directory!\");             }         }          File files = new File(\"C:\\\\Directory2\\\\Sub2\\\\Sub-Sub2\");         if (!files.exists()) {             if (files.mkdirs()) {                 System.out.println(\"Multiple directories are created!\");             } else {                 System.out.println(\"Failed to create multiple directories!\");             }         }      }  }\n// mkdir() method in java example import java.io.*; public class CreateDirectory {    public static void main(String[] args)    {       File directory = new File(\"D:\\\\DirectoryExample\");       if(!directory.exists())       {          if(directory.mkdir())          {             System.out.println(\"Directory is created\");          }          else          {             System.out.println(\"Directory not created\");          }       }    } }\nnew File(\"pathToFile\").mkdir(); \n// mkdirs() method in java example import java.io.File; public class CreateDirectoryDemo {    public static void main(String[] args)    {       File directory = new File(\"D:\\\\DirectoryExample\\\\subdirectory1\\\\subdirectory2\");       if(!directory.exists())       {          if(directory.mkdirs())          {             System.out.println(\"Sub directories created\");          }          else          {             System.out.println(\"Sub directories not created\");          }       }    } }\n Path path = Paths.get(\"/home/mkyong/a/b/c/\");      //java.nio.file.Files;     Files.createDirectories(path);\n",
    "reg_date": "2021-10-12T12:00:38.000Z"
  },
  {
    "id": 183,
    "keyword": null,
    "link": null,
    "title": " How to delete a directory in java",
    "description": "// delete a directory in java using recursion or recursively import java.io.File; public class DeleteDirectoryRecursively {    public static void main(String[] args)    {       String strFolder = \"B:\\New folder\";       //delete folder recursively       deleteRecursive(new File(strFolder));    }    public static void deleteRecursive(File fl)    {       if(!fl.exists())          return;       // if directory call recursively       if(fl.isDirectory())       {          for(File file : fl.listFiles())          {             // recursive call             deleteRecursive(file);          }       }       // delete files and empty directory       fl.delete();       System.out.println(\"Deleted file/directory: \" + fl.getAbsolutePath());    } }\nboolean deleteDirectory(File directoryToBeDeleted) {     File[] allContents = directoryToBeDeleted.listFiles();     if (allContents != null) {         for (File file : allContents) {             deleteDirectory(file);         }     }     return directoryToBeDeleted.delete(); }\n",
    "reg_date": "2021-10-12T12:00:38.000Z"
  },
  {
    "id": 184,
    "keyword": null,
    "link": null,
    "title": " How to do press enter to continue in java",
    "description": "System.out.println(\"Press enter to continue\"); try{System.in.read();}         catch(Exception e){}\n",
    "reg_date": "2021-10-12T12:00:38.000Z"
  },
  {
    "id": 185,
    "keyword": null,
    "link": null,
    "title": " How to draw Bezier Curve in Android",
    "description": "public class DrawView extends View {      Paint paint;     Path path;      public DrawView(Context context) {         super(context);         init();     }      public DrawView(Context context, AttributeSet attrs) {         super(context, attrs);         init();     }      public DrawView(Context context, AttributeSet attrs, int defStyle) {         super(context, attrs, defStyle);         init();     }      private void init(){         paint = new Paint();          paint.setStyle(Paint.Style.STROKE);      }      @Override     protected void onDraw(Canvas canvas) {         // TODO Auto-generated method stub         super.onDraw(canvas);         path = new Path();         paint.setColor(Color.RED);         paint.setStrokeWidth(3);         path.moveTo(34, 259);         path.cubicTo(68, 151, 286, 350, 336, 252);         canvas.drawPath(path, paint);      }\n",
    "reg_date": "2021-10-12T12:00:38.000Z"
  },
  {
    "id": 186,
    "keyword": null,
    "link": null,
    "title": " How to find the length of an array in java",
    "description": "/** * An Example to get the Array Length is Java */ public class ArrayLengthJava { public static void main(String[] args) { String[] myArray = { \"I\", \"Love\", \"Music\" }; int arrayLength = myArray.length; //array length attribute System.out.println(\"The length of the array is: \" + arrayLength); } } \nInt[] array = {1,2,3}; int lengthOfArray = array.length; /** Finding the length of the array and storing it */ System.out.println(String.valueOf(lengthOfArray)); /** Should print out 3, String.value Of() is optional as printLn does this automatically. */\nlet coolCars = ['ford', 'chevy']; //to find length, use the array's built in method let length = coolCars.length; //length == 2.\narr.length;\nclass Main {   public static void main(String[] args) {     // Creating an array called x.     String[] x = new String[]{\"This\", \"Should\", \"return\", \"4\"};     // \"x.length\" finds the length of the array \"x\".     System.out.println(x.length);     // returns 4   } }\nint[] num = new int[5];\n",
    "reg_date": "2021-10-12T12:00:38.000Z"
  },
  {
    "id": 187,
    "keyword": null,
    "link": null,
    "title": " How to get any Number from user in Java",
    "description": "import java.util.Scanner;  public class Demo {      public static void main(String[] args) {          /* This reads the input provided by user          * using keyboard          */         Scanner scan = new Scanner(System.in);         System.out.print(\"Enter any number: \");          // This method reads the number provided using keyboard         int num = scan.nextInt();          // Closing Scanner after the use         scan.close();                  // Displaying the number          System.out.println(\"The number entered by user: \"+num);     } }\n",
    "reg_date": "2021-10-12T12:00:38.000Z"
  },
  {
    "id": 188,
    "keyword": null,
    "link": null,
    "title": " How to get current date and time in java",
    "description": "import java.time.format.DateTimeFormatter;   import java.time.LocalDateTime;     public class CurrentDateTimeExample1 {       public static void main(String[] args) {        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm:ss\");      LocalDateTime now = LocalDateTime.now();      System.out.println(dtf.format(now));     }     }   \n// get current date and timein java using Calendar.getTime() method import java.util.Calendar; import java.util.Date; public class UsingCalendarClass {    public static void main(String[] args)    {       Date date = Calendar.getInstance().getTime();       System.out.println(date);    } }\n// Get current date and time in java 8 import java.time.LocalDate; import java.time.LocalDateTime; import java.time.LocalTime; public class CurrentDateTimeJava8  {    public static void main(String[] args)     {       LocalDate ld = LocalDate.now();       System.out.println(\"Current date: \" + ld);       // get current time value       LocalTime lt = LocalTime.now();       System.out.println(\"Current time: \" + lt);       // get current date-time value       LocalDateTime ldt = LocalDateTime.now();       System.out.println(\"Current date-time: \" + ldt);    } }\n// get current date and time in java using LocalDate.now() method import java.time.LocalDate; public class UsingLocalDate {    public static void main(String[] args)    {       System.out.println(LocalDate.now());    } }\n// get current date and time in java using LocalDateTime.now() method import java.time.LocalDateTime; public class UsingLocalDateTime {    public static void main(String[] args)    {       System.out.println(LocalDateTime.now());    } }\n// how to get current date and time in java  // using Date class and System.currentTimeMillis() method import java.util.Date; public class UsingDateClass {    public static void main(String[] args)     {       Date dt = new Date();       System.out.println(dt);       long milliSeconds = System.currentTimeMillis();         Date date = new Date(milliSeconds);       System.out.println(date);     } }\n",
    "reg_date": "2021-10-12T12:00:39.000Z"
  },
  {
    "id": 189,
    "keyword": null,
    "link": null,
    "title": " How to get file last modified date in java",
    "description": "import java.io.*; import java.util.Date; import java.text.SimpleDateFormat; public class LastModifiedDateDemo {    public static void main(String[] args)    {       File file = new File(\"d:\\\\modifiedFile.txt\");       System.out.println(\"Before - file last modified date: \" + file.lastModified());       SimpleDateFormat sim = new SimpleDateFormat(\"MM/dd/yyyy HH:mm:ss\");       System.out.println(\"After - file last modified date: \" + sim.format(file.lastModified()));    } }\nPath file = ...; BasicFileAttributes attr = Files.readAttributes(file, BasicFileAttributes.class);  System.out.println(\"creationTime: \" + attr.creationTime()); System.out.println(\"lastAccessTime: \" + attr.lastAccessTime()); System.out.println(\"lastModifiedTime: \" + attr.lastModifiedTime());\n",
    "reg_date": "2021-10-12T12:00:39.000Z"
  },
  {
    "id": 190,
    "keyword": null,
    "link": null,
    "title": " How to make arguments minecraft java",
    "description": "if (alias.equalsIgnoreCase(\"hello\") { \tif (args.length == 0) { //Sender only typed '/hello' and nothing else \t\tsender.sendMessage(\"You only typed hello!\");   \t} else { //Sender typed more then 1 argument, so args[0] can't be null. \t\tif (args[0].equalsIgnoreCase(\"sir\") { //Sender typed '/hello sir' \t\t\tsender.sendMessage(\"You typed hello sir!\"); \t\t} else { //Sender had attest 1 argument, but didn't type sir as a second one! \t\t//args[0] also returns string, so lets send the message right back to them! \t\t\tsender.sendMessage(\"Your first argument was: \" + args[0]);   \t} }\n",
    "reg_date": "2021-10-12T12:00:39.000Z"
  },
  {
    "id": 191,
    "keyword": null,
    "link": null,
    "title": " How to print in console java",
    "description": "public class ConsoleTest {     public static void main(String[] args) {         System.out.println(\"Console is: \" + System.console());     } }\n",
    "reg_date": "2021-10-12T12:00:39.000Z"
  },
  {
    "id": 192,
    "keyword": null,
    "link": null,
    "title": " How to programmatically hide Android soft keyboard",
    "description": "    private void closeSoftKeyboard()      {      \t//If using a fragment use getActivity().getCurrentFocus()         View v = this.getCurrentFocus();       \t\t// If Soft Keyboard is visible, it will be hide         if (v != null) {            //If using a fragment use getActivity().getSystemService(...)             InputMethodManager inputManager                  = (InputMethodManager)                      getSystemService(Context.INPUT_METHOD_SERVICE);              inputManager.hideSoftInputFromWindow(v.getWindowToken(), 0);          }      } \n",
    "reg_date": "2021-10-12T12:00:39.000Z"
  },
  {
    "id": 193,
    "keyword": null,
    "link": null,
    "title": " How to refresh activity without intent in android",
    "description": "finish(); overridePendingTransition( 0, 0); startActivity(getIntent()); overridePendingTransition( 0, 0);\n",
    "reg_date": "2021-10-12T12:00:39.000Z"
  },
  {
    "id": 194,
    "keyword": null,
    "link": null,
    "title": " How to remove backstack fragment",
    "description": "You add to the back state from the FragmentTransaction and remove from the backstack using FragmentManager pop methods:  FragmentManager manager = getActivity().getSupportFragmentManager(); FragmentTransaction trans = manager.beginTransaction(); trans.remove(myFrag); trans.commit(); manager.popBackStack();\n",
    "reg_date": "2021-10-12T12:00:39.000Z"
  },
  {
    "id": 195,
    "keyword": null,
    "link": null,
    "title": " How to remove element from arraylist in java",
    "description": "// java program on ArrayList remove(int index) method example import java.util.ArrayList; import java.util.List; public class ArrayListRemoveIndex {    public static void main(String[] args)    {       List<Integer> al = new ArrayList<>();       al.add(56);       al.add(28);       al.add(39);       al.add(59);       al.add(82);       System.out.println(\"Before using ArrayList.remove(int index) method: \" + al);       // removes element 28       al.remove(1);       // element 39 is now moved one position back       // So element 39 is removed       al.remove(1);       System.out.println(\"After using ArrayList.remove(int index) method: \" + al);    } }\n// Java.util.ArrayList.remove(Object) method example import java.util.ArrayList; import java.util.List; public class ArrayListRemoveObjectMethod {    public static void main(String[] args)    {       List<Integer> al = new ArrayList<>();       al.add(56);       al.add(28);       al.add(39);       al.add(59);       al.add(82);       System.out.println(\"Before using ArrayList.remove(Object) method size of ArrayList: \" + al);       // removes element 56       al.remove(new Integer(56));       // removes element 28       al.remove(new Integer(28));       System.out.println(\"After using ArrayList.remove(Object) method size of ArrayList: \" + al);    } }\n//Create the ArrayList List<Integer> al = new ArrayList<>();  //Add the items al.add(10); al.add(18); //Remove item(1 = 2and item in list) al.remove(1); \n//create ArrayList ArrayList<String> arrayList = new ArrayList<String>(); //add item to ArrayList arrayList.add(\"item\"); //check if ArrayList contains item (returns boolean) System.out.println(arrayList.contains(\"item\")); //remove item from ArrayList arrayList.remove(\"item\");\n// Java program to demonstrate working of remove  // on an integer arraylist  import java.util.List;  import java.util.ArrayList;     public class GFG  {      public static void main(String[] args)      {          List<Integer> al = new ArrayList<>();          al.add(10);          al.add(30);          al.add(1);          al.add(2);             // This makes a call to remove(int) and           // removes element 20.          al.remove(1);                     // Now element 30 is moved one position back          // So element 30 is removed this time          al.remove(1);             System.out.println(\"Modified ArrayList : \" + al);      }  } \npublic E remove(int index)\t// returns removed element at index\n",
    "reg_date": "2021-10-12T12:00:39.000Z"
  },
  {
    "id": 196,
    "keyword": null,
    "link": null,
    "title": " How to remove last element from arraylist in java",
    "description": "ArrayList<Integer> list = new ArrayList<>(); list.add(1); list.add(2); list.add(3);  list.remove(list.size()-1); //removes 3\n// How to remove last element from arraylist in java import java.util.ArrayList; import java.util.List; public class ArrayListRemoveLastElement {    public static void main(String[] args)    {       List<Integer> al = new ArrayList<>();       al.add(56);       al.add(28);       al.add(39);       al.add(59);       al.add(82);       // using size() method to find index of last element       int index = al.size() - 1;       // deleting last element by passing index       al.remove(index);       System.out.println(\"After remove last element from arraylist: \" + al);    } }\nArrays.copyOf(original, original.length-1)\n",
    "reg_date": "2021-10-12T12:00:39.000Z"
  },
  {
    "id": 197,
    "keyword": null,
    "link": null,
    "title": " How to rename file in java",
    "description": "// rename file in java example import java.io.*; public class RenameFile {    public static void main(String[] args) throws IOException    {       File oldFile = new File(\"D:\\\\Project\\\\flower.txt\");       File newFile = new File(\"D:\\\\Project\\\\flowerbrackets.txt\");       if(oldFile.renameTo(newFile))       {          System.out.println(\"Rename successful\");       }       else       {          System.out.println(\"Rename failed\");       }    } }\n",
    "reg_date": "2021-10-12T12:00:39.000Z"
  },
  {
    "id": 198,
    "keyword": null,
    "link": null,
    "title": " How to scroll in appium using java",
    "description": "public void scrollDown()  {      //The viewing size of the device     Dimension size = driver.manage().window().getSize();      //x position set to mid-screen horizontally     int width = size.width / 2;      //Starting y location set to 80% of the height (near bottom)     int startPoint = (int) (size.getHeight() * 0.80);      //Ending y location set to 20% of the height (near top)     int endPoint = (int) (size.getHeight() * 0.20);      new TouchAction(driver).press(PointOption.point(width, startPoint)).waitAction(WaitOptions.waitOptions(Duration.ofMillis(2000))).moveTo(PointOption.point(width, endPoint)).release().perform();  } \n",
    "reg_date": "2021-10-12T12:00:40.000Z"
  },
  {
    "id": 199,
    "keyword": null,
    "link": null,
    "title": " How to see java versions mac",
    "description": "$ /usr/libexec/java_home -v\n",
    "reg_date": "2021-10-12T12:00:40.000Z"
  },
  {
    "id": 200,
    "keyword": null,
    "link": null,
    "title": " How to sort 2d array in java using stream api",
    "description": "Arrays.sort(myArr, (a, b) -> a[0] - b[0]);\n",
    "reg_date": "2021-10-12T12:00:40.000Z"
  },
  {
    "id": 201,
    "keyword": null,
    "link": null,
    "title": " How to sort a string array in java",
    "description": "// how to sort string array in java without using sort method import java.util.Arrays; public class SortStringArray {    public static void main(String[] args)    {       String[] strPlaces = {\"Great Barrier Reef\", \"Paris\", \"BoraBora\", \"Florence\",\"Tokyo\", \"Cusco\"};       int size = strPlaces.length;       for(int a = 0; a < size - 1; a++)       {          for(int b = a + 1; b < strPlaces.length; b++)          {             if(strPlaces[a].compareTo(strPlaces[b]) > 0)             {                String temp = strPlaces[a];                strPlaces[a] = strPlaces[b];                strPlaces[b] = temp;             }          }       }       System.out.println(Arrays.toString(strPlaces));    } }\n// java program to sort an array using Arrays.sort() method import java.util.Arrays; public class JavaArraySortMethod {    public static void main(String[] args)    {       String[] strGiven = {\"Great Barrier Reef\", \"Paris\", \"borabora\", \"Florence\",\"tokyo\", \"Cusco\"};       Arrays.sort(strGiven);       System.out.println(\"Output(case sensitive) : \" + Arrays.toString(strGiven));    } }\nimport java.util.Arrays;  public class Test {     public static void main(String[] args)     {         String original = \"edcba\";         char[] chars = original.toCharArray();         Arrays.sort(chars);         String sorted = new String(chars);         System.out.println(sorted);     } } \nString[] myArray = {\"JavaFX\", \"HBase\", \"OpenCV\", \"Java\", \"Hadoop\",\"Neo4j\"}; Arrays.sort(myArray); System.out.println(Arrays.toString(myArray));\npublic class ArrayReturn3 {       public static String[] sortNames(String[] userNames) {         String temp;         for (int i = 0; i < userNames.length; i++) {             for (int j = i + 1; j < userNames.length; j++) {                 if (userNames[i].compareTo(userNames[j]) > 0) {                     temp = userNames[i];                     userNames[i] = userNames[j];                     userNames[j] = temp;                 }             }         }         return userNames;     }       public static void main(String[] args) {         String[] names = {\"Ram\", \"Mohan\", \"Sohan\", \"Rita\", \"Anita\", \"Nita\", \"Shyam\", \"Mukund\"};         System.out.println(\"Names before sort\");         for (String n : names) {             System.out.print(\" \" + n);         }         String[] sortedNames = sortNames(names);         System.out.println(\"\\nNames after sort (Sent name)\");         for (String n : names) {             System.out.print(\" \" + n);         }         System.out.println(\"\\nNames after sort (Received name)\");         for (String n : sortedNames) {             System.out.print(\" \" + n);         }     } }\n",
    "reg_date": "2021-10-12T12:00:40.000Z"
  },
  {
    "id": 202,
    "keyword": null,
    "link": null,
    "title": " How to split a string in Java",
    "description": "String string = \"004-034556\"; String[] parts = string.split(\"-\"); String part1 = parts[0]; // 004 String part2 = parts[1]; // 034556 \nString yourString = \"Hello/Test/World\"; String[] strings = yourString.split(\"/\" /*<- Regex */);   Output: strings = [Hello, Test, World]\npublic class SplitExample2 {      public static void main(String args[])      {          String str = \"My name is Chaitanya\";         //regular expression is a whitespace here          String[] arr = str.split(\" \");             for (String s : arr)              System.out.println(s);      }  }\nString[] array = values.split(\"\\\\|\", -1);\n class Test {          public static void main( String[] args) {              String[] result = \"Stack Me 123 Heppa1 oeu\".split(\"\\\\a\");                                                                                                  // output should be              // S              // t              // a              // c              // k              // M              // e              // H              // e              // ...              for ( int x=0; x<result.length; x++) {                  System.out.println(result[x] + \"\\n\");              }          }      } \nString textfile = \"ReadMe.txt\"; String filename = textfile.split(\".\")[0]; String extension = textfile.split(\".\")[1];\n",
    "reg_date": "2021-10-12T12:00:40.000Z"
  },
  {
    "id": 203,
    "keyword": null,
    "link": null,
    "title": " How to turn off darkmode for my app in android studio",
    "description": "in the night\\themes.xml file paste the following line under the <!-- Base application theme. --> <item name=\"android:forceDarkAllowed\" tools:ignore=\"NewApi\">false</item> \n",
    "reg_date": "2021-10-12T12:00:40.000Z"
  },
  {
    "id": 204,
    "keyword": null,
    "link": null,
    "title": " Howow to use font object Java",
    "description": "Font smallFont = new Font(\"Monospaced\", Font.PLAIN, 10);   Font bigFont = new Font(\"Serif\", Font.BOLD, 18);\n",
    "reg_date": "2021-10-12T12:00:40.000Z"
  },
  {
    "id": 205,
    "keyword": null,
    "link": null,
    "title": " HttpContext.GetOwinContext().Authentication.SignOut",
    "description": "Request.GetOwinContext().Authentication.SignOut();  Request.GetOwinContext().Authentication.SignOut(Microsoft.AspNet.Identity.DefaultAuthenticationTypes.ApplicationCookie);  HttpContext.Current.GetOwinContext().Authentication.SignOut(Microsoft.AspNet.Identity.DefaultAuthenticationTypes.ApplicationCookie); \n",
    "reg_date": "2021-10-12T12:00:40.000Z"
  },
  {
    "id": 206,
    "keyword": null,
    "link": null,
    "title": " HttpServer example java",
    "description": "public class BasicHttpServerExample {    public static void main(String[] args) throws IOException {       HttpServer server = HttpServer.create(new InetSocketAddress(8500), 0);       HttpContext context = server.createContext(\"/\");       context.setHandler(BasicHttpServerExample::handleRequest);       server.start();   }    private static void handleRequest(HttpExchange exchange) throws IOException {       String response = \"Hi there!\";       exchange.sendResponseHeaders(200, response.getBytes().length);//response code and length       OutputStream os = exchange.getResponseBody();       os.write(response.getBytes());       os.close();   } }\n",
    "reg_date": "2021-10-12T12:00:40.000Z"
  },
  {
    "id": 207,
    "keyword": null,
    "link": null,
    "title": " IO STREAMS in java",
    "description": "import java.io.*; public class CopyFile {     public static void main(String args[]) throws IOException {         FileInputStream in = null;       FileOutputStream out = null;        try {          in = new FileInputStream(\"input.txt\");          out = new FileOutputStream(\"output.txt\");                    int c;          while ((c = in.read()) != -1) {             out.write(c);          }       }finally {          if (in != null) {             in.close();          }          if (out != null) {             out.close();          }       }    } }\n",
    "reg_date": "2021-10-12T12:00:40.000Z"
  },
  {
    "id": 208,
    "keyword": null,
    "link": null,
    "title": " ISO week date java",
    "description": "int calendarYear = now.getYear(); int weekNumber = now.get ( IsoFields.WEEK_OF_WEEK_BASED_YEAR ); int weekYear = now.get ( IsoFields.WEEK_BASED_YEAR );  \n",
    "reg_date": "2021-10-12T12:00:41.000Z"
  },
  {
    "id": 209,
    "keyword": null,
    "link": null,
    "title": " Implement the Bubble sort algorithm on the following ArrayList",
    "description": "import java.util.ArrayList;  public class Sort{     private static ArrayList<String> list = new ArrayList<String>();      public static ArrayList<String> sortByName(String [] input) {         String temp;         for (int i=0; i< input.length; i++){             for(int j= i; j< input.length-1; j++){                 char first = input[i].charAt(0);                 char sec = input[j +1].charAt(0);                  if (first < sec)  {                      temp = input[j +1];                      input[j +1] = input[i];                              input[i] = temp;                  }              }             list.add(input[i]);          }          return list;     }      public static void main(String[] args) {         String string[] =  {\"Ezen\", \"Allen\" , \"Wilker\", \"Kruden\", \"Crocket\"};         bubbleSortByName(string);     } }\n",
    "reg_date": "2021-10-12T12:00:41.000Z"
  },
  {
    "id": 210,
    "keyword": null,
    "link": null,
    "title": " Index through 2d array",
    "description": "int[][]x;//define for(int i=0;i<x.length;i++){   for(int j=0;j<x[i].length;j++){     //dp something with x[i][j]   } }\nint[][]x;//define for(int []y:x){   for(int a:y){     //do something with a   } }\n",
    "reg_date": "2021-10-12T12:00:41.000Z"
  },
  {
    "id": 211,
    "keyword": null,
    "link": null,
    "title": " InetAddress.getByAddress example",
    "description": "InetAddress addr = InetAddress.getByAddress(\"Localhost\",new byte[] { 127, 0, 0, 1 }); \n",
    "reg_date": "2021-10-12T12:00:41.000Z"
  },
  {
    "id": 212,
    "keyword": null,
    "link": null,
    "title": " InetAddress",
    "description": "        System.out.print(\"Insert HostName: \");         Scanner input=new Scanner(System.in);         String host=input.nextLine();         try{             InetAddress ip=InetAddress.getByName(host);             System.out.println(ip);             if(ip.isReachable(50)){                 System.out.println(\"Destination Reached\");             }             else{                 System.out.println(\"Destination Unreachable\");             }         }         catch (Exception e){             System.out.println(\"Invalid domain\");         }\n",
    "reg_date": "2021-10-12T12:00:41.000Z"
  },
  {
    "id": 213,
    "keyword": null,
    "link": null,
    "title": " Information Dialog in JavaFX",
    "description": "Alert alert = new Alert(AlertType.INFORMATION); alert.setTitle(\"Information Dialog\"); alert.setHeaderText(null); alert.setContentText(\"I have a great message for you!\");  alert.showAndWait(); \n",
    "reg_date": "2021-10-12T12:00:41.000Z"
  },
  {
    "id": 214,
    "keyword": null,
    "link": null,
    "title": " Integer.MAX VALUE",
    "description": "public const int MaxValue = 2147483647;\nInteger.MAX_VALUE //== 2147483647, once you increment past that, you   \t\t\t\t  //\"wrap around\" to Integer.MIN_VALUE\npublic int x = Integer.MAX_VALUE;  System.out.println(x)  // prints out 2147483647. you can't go over this number\npublic class Test {    public static void main(String[] args)    {      System.out.println(Integer.MIN_VALUE);      System.out.println(Integer.MAX_VALUE);      System.out.println(Integer.MIN_VALUE - 1);      System.out.println(Integer.MAX_VALUE + 1);    } }\nInteger.MAX_VALUE\n",
    "reg_date": "2021-10-12T12:00:41.000Z"
  },
  {
    "id": 215,
    "keyword": null,
    "link": null,
    "title": " Internal Exception: java.sql.SQLSyntaxErrorException: Table 'sql4409754.SEQUENCE' doesn't exist Error Code: 1146",
    "description": "// Add following lines to the persistence.xml <property name=\"eclipselink.ddl-generation\" value=\"drop-and-create-tables\"/> <property name=\"eclipselink.create-ddl-jdbc-file-name\" value=\"createDDL_ddlGeneration.jdbc\"/> <property name=\"eclipselink.drop-ddl-jdbc-file-name\" value=\"dropDDL_ddlGeneration.jdbc\"/> <property name=\"eclipselink.ddl-generation.output-mode\" value=\"both\"/>\n",
    "reg_date": "2021-10-12T12:00:41.000Z"
  },
  {
    "id": 216,
    "keyword": null,
    "link": null,
    "title": " Internet permision",
    "description": "<uses-permission android:name=\"android.permission.INTERNET\" /> \n",
    "reg_date": "2021-10-12T12:00:41.000Z"
  },
  {
    "id": 217,
    "keyword": null,
    "link": null,
    "title": " Inverted floyd triangle in java",
    "description": "// Inverted floyd triangle in java import java.util.Scanner; public class InvertedFloydTriangleDemo {    public static void main(String[] args)     {       Scanner sc = new Scanner(System.in);       System.out.print(\"Please enter size limit: \");       int num = sc.nextInt();       int a, b, x = 0;       System.out.println(\"Here's Inverted Floyd Triangle: \");       for(a = 1; a <= num; a++)       {          for(b = 1; b <= a; b++)             x++;       }       for(a = num; a >= 1; a--)       {          for(b = 1; b <= a; b++)          {             System.out.print(x + \" \");             x--;          }          System.out.println();       }       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:41.000Z"
  },
  {
    "id": 218,
    "keyword": null,
    "link": null,
    "title": " JAVA HOME is not defined correctly.",
    "description": " export JAVA_HOME=$(/usr/libexec/java_home) \n",
    "reg_date": "2021-10-12T12:00:42.000Z"
  },
  {
    "id": 219,
    "keyword": null,
    "link": null,
    "title": " JAVA HOME should point to a JDK not a JRE",
    "description": "C:\\Users>echo %PROGRAMFILES% C:\\Program Files  C:\\Program Files>set JAVA_HOME=%PROGRAMFILES%\\Java\\jdk-11.0.2  C:\\Program Files>echo %JAVA_HOME% C:\\Program Files\\Java\\jdk-11.0.2  C:\\Program Files>mvn -version Apache Maven 3.6.2 (40f52333136460af0dc0d7232c0dc0bcf0d9e117; 2019-08-27T17:06:16+02:00) Maven home: C:\\apache-maven-3.6.2\\bin\\.. Java version: 11.0.2, vendor: Oracle Corporation, runtime: C:\\Program Files\\Java\\jdk-11.0.2 Default locale: en_US, platform encoding: Cp1252 OS name: \"windows 10\", version: \"10.0\", arch: \"amd64\", family: \"windows\"\n",
    "reg_date": "2021-10-12T12:00:42.000Z"
  },
  {
    "id": 220,
    "keyword": null,
    "link": null,
    "title": " JAVA HashMap get keys by values",
    "description": "    Map<String, String> map = new HashMap<String, String>();          map.put(\"abc\", \"123\");     map.put(\"xyz\", \"456\");          for(Entry<String, String> entry : map.entrySet()) {         if(entry.getValue().equalsIgnoreCase(\"456\")) {             System.out.println(entry.getKey());         }     } \n",
    "reg_date": "2021-10-12T12:00:42.000Z"
  },
  {
    "id": 221,
    "keyword": null,
    "link": null,
    "title": " JDK JRE JVM",
    "description": "&bull; JVM (Java Virtual Machine) offers the runtime environment for codes to be executed. &bull; JRE (Java Runtime Environment) is the collection of files needed during runtime by JVM. &bull; JDK (Java Development Kit) is needed to write and execute a program and contains the JRE with necessary development tools.\nJava Virtual Machine: JVM is an abstract machine.  It actually runs by Java code. Most people know Java with this slogan  \"Write once and run everywhere' This slogan is because of JVM.  &bull; Java Runtime Environment : JRE is what we need to run a Java program  and containsset of libraries and other files that JVM uses at run time.  JRE = JVM + Library Classes  &bull; Java Development Kit : JDK is what we need to compile Java source code  and contains JRE, development tools. JDK = JRE + Development tools\nJVM: 1.\tJVM is an abstract machine.      Because it doesn't physically exist. 2.\tIt is a very important part of both JDK      and JRE because it is inbuilt in both.  3.\tWhatever Java program we want to run, goes into JVM.  4.\tAnd JVM is responsible for loading,     verifying and executing the java program      line by line hence it is also known as interpreter.      The Java Development Kit (JDK) is a software development  environment used for developing Java applications.  It includes: \tJava Virtual Machine,  \tJava Runtime Environment, \tLoader,  \tJava compiler,  \tDocumentation generator  \tArchiver (jar),  \tOther tools needed in Java development.       Java Runtime Environment : \tIt physically exists.  \tThe Java Runtime Environment provides     the minimum requirements such as libraries     and Class Loader for executing a      Java application on JVM.  \tIt consists of the Java Virtual Machine     core classes, and supporting files.    \nJDK is a software development kit whereas JRE is a software bundle that allows Java program to run, whereas JVM is an environment for executing bytecode. The full form of JDK is Java Development Kit, while the full form of JRE is Java Runtime Environment, while the full form of JVM is Java Virtual Machine.\n",
    "reg_date": "2021-10-12T12:00:42.000Z"
  },
  {
    "id": 222,
    "keyword": null,
    "link": null,
    "title": " JFrame text java",
    "description": "JLabel label1 = new JLabel(\"Test\"); label1.setText(\"Label Text\")\nlabel1.setText(\"Label Text\");\n",
    "reg_date": "2021-10-12T12:00:42.000Z"
  },
  {
    "id": 223,
    "keyword": null,
    "link": null,
    "title": " JLabel font",
    "description": "label = new JLabel(\"A label\"); label.setFont(new Font(\"Serif\", Font.PLAIN, 14));\nimport java.awt.Font; import javax.swing.*; public class SwingDemo {    public static void main(String args[]) {       JFrame frame = new JFrame(\"Label Example\");       JLabel label;       label = new JLabel(\"First Label\");       label.setBounds(50, 50, 100, 30);       label.setFont(new Font(\"Verdana\", Font.PLAIN, 18));       frame.add(label);       frame.setSize(300,300);       frame.setLayout(null);       frame.setVisible(true);    } }\n",
    "reg_date": "2021-10-12T12:00:42.000Z"
  },
  {
    "id": 224,
    "keyword": null,
    "link": null,
    "title": " JOptionPane.showMessageDialog",
    "description": "JOptionPane.showMessageDialog(null, \"A basic JOptionPane message dialog\");\nimport javax.swing.JOptionPane;  public class Main {   public static void main(String[] argv) throws Exception {      JOptionPane.showMessageDialog(null, \"I am happy.\");    } } \nalert('Message');\nimport javax.swing.ImageIcon; import javax.swing.JFrame; import javax.swing.JOptionPane;  public class ShowMessageDialogExample1 {   public static void main(String[] args)   {     String backupDir = \"/Users/al/backups\";          // create a jframe     JFrame frame = new JFrame(\"JOptionPane showMessageDialog example\");          // show a joptionpane dialog using showMessageDialog     JOptionPane.showMessageDialog(frame,         \"Problem writing to backup directory: '\" + backupDir + \"'.\");     System.exit(0);   } } \nJOptionPane.showMessageDialog(null, \"java is fun\");\nJOptionPane.showMessageDialog(frame, \"A basic JOptionPane message dialog\"); \n",
    "reg_date": "2021-10-12T12:00:42.000Z"
  },
  {
    "id": 225,
    "keyword": null,
    "link": null,
    "title": " JOptionPane with drop down list java",
    "description": "package com.mkyong.inputDialog;  import javax.swing.ImageIcon; import javax.swing.JOptionPane;  public class InputDialog6a {      public static void main(String[] args) {          String[] options = {\"I adore turtles\", \"Yes\", \"Maybe\", \"Urm...\", \"No\", \"Hate them\"};         ImageIcon icon = new ImageIcon(\"src/images/turtle32.png\");         String n = (String)JOptionPane.showInputDialog(null, \"Do you like turtles??\",                  \"I like turtles\", JOptionPane.QUESTION_MESSAGE, icon, options, options[2]);         System.out.println(n);      }  } Copy\n",
    "reg_date": "2021-10-12T12:00:42.000Z"
  },
  {
    "id": 226,
    "keyword": null,
    "link": null,
    "title": " JOptionpane",
    "description": "JOptionPane.showMessageDialog(null, \"This is a Message Dialog\");\nalert('Message');\nimport javax.swing.ImageIcon; import javax.swing.JFrame; import javax.swing.JOptionPane;  public class ShowMessageDialogExample1 {   public static void main(String[] args)   {     String backupDir = \"/Users/al/backups\";          // create a jframe     JFrame frame = new JFrame(\"JOptionPane showMessageDialog example\");          // show a joptionpane dialog using showMessageDialog     JOptionPane.showMessageDialog(frame,         \"Problem writing to backup directory: '\" + backupDir + \"'.\");     System.exit(0);   } } \nJOptionPane.showMessageDialog(frame, \"A basic JOptionPane message dialog\"); \nJOptionPane.showMessageDialog(frame, \"Eggs are not supposed to be green.\"); \n",
    "reg_date": "2021-10-12T12:00:42.000Z"
  },
  {
    "id": 227,
    "keyword": null,
    "link": null,
    "title": " JSONObject java",
    "description": "String message; JSONObject json = new JSONObject(); json.put(\"name\", \"student\");  JSONArray array = new JSONArray(); JSONObject item = new JSONObject(); item.put(\"information\", \"test\"); item.put(\"id\", 3); item.put(\"name\", \"course1\"); array.add(item);  json.put(\"course\", array);  message = json.toString();  // message // {\"course\":[{\"id\":3,\"information\":\"test\",\"name\":\"course1\"}],\"name\":\"student\"}\nimport org.json.simple.JSONObject;  class JsonEncodeDemo {     public static void main(String[] args) {       JSONObject obj = new JSONObject();  \t    inputJSON.put(\"subscriberName\", \"subscriber\"); \t    inputJSON.put(\"msisdn\",\"7055389495\");        System.out.print(obj);    } }\nJSONObject jsonObject = //... JsonNode jsonNode = convertJsonFormat(jsonObject); ObjectMapper mapper = new ObjectMapper(); MyPojoClass myPojo = mapper.readValue(new TreeTraversingParser(jsonNode), MyPojoClass.class);\n",
    "reg_date": "2021-10-12T12:00:42.000Z"
  },
  {
    "id": 228,
    "keyword": null,
    "link": null,
    "title": " Java.awt graphics tutorial",
    "description": "//For Drawing Text g.drawString(\"Hello\", 10, 10); // For Drawing Images g.drawImage(img,              0, 0, width, height,             0, 0, imageWidth, imageHeight,             null);                      // For Drawing Shapes g2.draw(new Line2D.Double(0, 0, 30, 40)); \n",
    "reg_date": "2021-10-12T12:00:43.000Z"
  },
  {
    "id": 229,
    "keyword": null,
    "link": null,
    "title": " Java Files",
    "description": "import java.io.File;  // Import the File class  File myObj = new File(\"filename.txt\"); // Specify the filename \n",
    "reg_date": "2021-10-12T12:00:43.000Z"
  },
  {
    "id": 230,
    "keyword": null,
    "link": null,
    "title": " Java JPanel set background color",
    "description": "import javax.swing.JPanel; import java.awt.Color;  JPanel panel = new JPanel(); panel.setBackground(Color.green); //To know all the colors, check this link: //https://docs.oracle.com/javase/7/docs/api/java/awt/Color.html\n",
    "reg_date": "2021-10-12T12:00:43.000Z"
  },
  {
    "id": 231,
    "keyword": null,
    "link": null,
    "title": " Java Pair",
    "description": "Pair<Integer, String> pair = new Pair<>(1, \"One\"); Integer key = pair.getKey(); String value = pair.getValue(); \n",
    "reg_date": "2021-10-12T12:00:43.000Z"
  },
  {
    "id": 232,
    "keyword": null,
    "link": null,
    "title": " Java Program For Hello World",
    "description": "public class HelloWorld {     public static void main(String[] args) {         // Write your code here     } }\n",
    "reg_date": "2021-10-12T12:00:43.000Z"
  },
  {
    "id": 233,
    "keyword": null,
    "link": null,
    "title": " Java String toCharArray() method",
    "description": "// String toCharArray() method example or string to char array java public class StringToCharArrayDemo {    public static void main(String[] args)    {       String strInput = new String(\"Flower Brackets\");       // using toCharArray() method java       char[] chArray = strInput.toCharArray();       System.out.println(\"Character array: \");       for(char ch : chArray)       {          System.out.println(ch);       }    } }\nString.toCharArray()\n",
    "reg_date": "2021-10-12T12:00:43.000Z"
  },
  {
    "id": 234,
    "keyword": null,
    "link": null,
    "title": " Java  Multiple Interfaces",
    "description": "/Extending Multiple Interfaces A Java class can only extend one parent class. Multiple inheritance is not allowed. Interfaces are not classes, however, and an interface can extend more than one parent interface.  The extends keyword is used once, and the parent interfaces are declared in a comma-separated list.  Example public interface Hockey extends Sports, Event\n",
    "reg_date": "2021-10-12T12:00:43.000Z"
  },
  {
    "id": 235,
    "keyword": null,
    "link": null,
    "title": " Java android studio int to string",
    "description": "String.valueOf(int)//Int to String ==>To print the int\n",
    "reg_date": "2021-10-12T12:00:43.000Z"
  },
  {
    "id": 236,
    "keyword": null,
    "link": null,
    "title": " Java array equals",
    "description": "java.util.Arrays.equals(a, b) // narrow equals (values are compared with == and value.equals) java.util.Arrays.deepEquals(a, b) // deep equals (recursively looks at nested arrays)\n",
    "reg_date": "2021-10-12T12:00:43.000Z"
  },
  {
    "id": 237,
    "keyword": null,
    "link": null,
    "title": " Java catch multiple exceptions and rethrow exception",
    "description": "// Before java 7 - syntax Java catch multiple exceptions and rethrow exception try {    // code that throw exceptions 1 and 3 } catch(SQLException e) {    logger.log(e); } catch(IOException e) {    logger.log(e); } catch(Exception e) {    logger.severe(e); }\n catch(IOException | SQLException ex){      logger.error(ex);      throw new MyException(ex.getMessage()); } \npublic class MyClass implements MyInterface {   public void find(int x) throws A_Exception, B_Exception{     ----     ----     ---   } }\n// syntax in java 7 Java catch multiple exceptions and rethrow exception try {    // code that throw exceptions 1 and 3 } catch(SQLException | IOException e) {    logger.log(e); } catch(Exception e) {    logger.severe(e); }\n",
    "reg_date": "2021-10-12T12:00:43.000Z"
  },
  {
    "id": 238,
    "keyword": null,
    "link": null,
    "title": " Java code to print odd number",
    "description": "class JavaExample {    public static void main(String args[]) { \tint n = 100; \tSystem.out.print(\"Odd Numbers from 1 to \"+n+\" are: \"); \tfor (int i = 1; i <= n; i++) { \t   if (i % 2 != 0) { \t\tSystem.out.print(i + \" \"); \t   } \t}    } }\n",
    "reg_date": "2021-10-12T12:00:44.000Z"
  },
  {
    "id": 239,
    "keyword": null,
    "link": null,
    "title": " Java convert binary to decimal",
    "description": "System.out.println(Integer.parseInt(\"1010\",2));  \nimport java.util.Scanner; public class BinaryToDecimalDemo  {    public static void main(String[] args)     {       int number, decimal = 0, a = 0;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter binary number: \");       String strBinary = sc.nextLine();       number = Integer.parseInt(strBinary);       while(number != 0){          decimal += (number % 10) * Math.pow(2, a);          number = number / 10;          a++;       }       System.out.println(\"Decimal number: \" + decimal);       sc.close();    } }\npublic class DecimalToBinaryExample2{     public static void toBinary(int decimal){          int binary[] = new int[40];          int index = 0;          while(decimal > 0){            binary[index++] = decimal%2;            decimal = decimal/2;          }          for(int i = index-1;i >= 0;i--){            System.out.print(binary[i]);          }     System.out.println();//new line   }     public static void main(String args[]){       System.out.println(\"Decimal of 10 is: \");   toBinary(10);     System.out.println(\"Decimal of 21 is: \");   toBinary(21);     System.out.println(\"Decimal of 31 is: \");     toBinary(31);   }}    \npublic class Details {     public int BinaryToDecimal(int binaryNumber){       int decimal = 0;     int p = 0;     while(true){       if(binaryNumber == 0){         break;       } else {           int temp = binaryNumber\u0010;           decimal += temp*Math.pow(2, p);           binaryNumber = binaryNumber/10;           p++;        }     }     return decimal;   }     public static void main(String args[]){     Details obj = new Details();     System.out.println(\"110 --> \"+obj.BinaryToDecimal(110));     System.out.println(\"1101 --> \"+obj.BinaryToDecimal(1101));     System.out.println(\"100 --> \"+obj.BinaryToDecimal(100));     System.out.println(\"110111 --> \"+obj.BinaryToDecimal(110111));   } }\nint foo = Integer.parseInt(\"1001\", 2); // 2 is the radix\nimport java.util.Scanner; class BinaryToDecimal {     public static void main(String args[]){        Scanner input = new Scanner( System.in );        System.out.print(\"Enter a binary number: \");        String binaryString =input.nextLine();        System.out.println(\"Output: \"+Integer.parseInt(binaryString,2));     } }\n",
    "reg_date": "2021-10-12T12:00:44.000Z"
  },
  {
    "id": 240,
    "keyword": null,
    "link": null,
    "title": " Java convert date to string",
    "description": "    Date date = Calendar.getInstance().getTime();       DateFormat dateFormat = new SimpleDateFormat(\"yyyy-mm-dd hh:mm:ss\");       String strDate = dateFormat.format(date);  \n// java convert date to string import java.util.Date; import java.text.SimpleDateFormat; public class DateToStringDemo {    public static void main(String[] args)    {       Date dt = new Date();       SimpleDateFormat sdf = new SimpleDateFormat(\"MM/dd/yyyy\");       String strDate = sdf.format(dt);       System.out.println(\"Date format - MM/dd/yyyy to string is : \" + strDate);       sdf = new SimpleDateFormat(\"dd-M-yyyy hh:mm:ss\");       strDate = sdf.format(dt);       System.out.println(\"Date format - dd-M-yyyy hh:mm:ss to string is : \" + strDate);       sdf = new SimpleDateFormat(\"dd MMMM yyyy\");       strDate = sdf.format(dt);       System.out.println(\"Date format - dd MMMM yyyy to string is : \" + strDate);       sdf = new SimpleDateFormat(\"dd MMMM yyyy zzzz\");       strDate = sdf.format(dt);       System.out.println(\"Date format - dd MMMM yyyy zzzz to string is : \" + strDate);       sdf = new SimpleDateFormat(\"E, dd MMM yyyy HH:mm:ss z\");       strDate = sdf.format(dt);       System.out.println(\"Date format - E, dd MMM yyyy HH:mm:ss z to string is : \" + strDate);    } }\nFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\"); String s = formatter.format(date);\n",
    "reg_date": "2021-10-12T12:00:44.000Z"
  },
  {
    "id": 241,
    "keyword": null,
    "link": null,
    "title": " Java convert hex to decimal",
    "description": "public class ConvertHexToDecimal {    public static void main(String[] args)    {       String strHex = \"b\";       int decimal = Integer.parseInt(strHex, 16);       System.out.println(\"Decimal number : \" + decimal);    } }\nimport java.util.Scanner; public class BinaryToDecimalDemo  {    public static void main(String[] args)     {       int number, decimal = 0, a = 0;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter binary number: \");       String strBinary = sc.nextLine();       number = Integer.parseInt(strBinary);       while(number != 0){          decimal += (number % 10) * Math.pow(2, a);          number = number / 10;          a++;       }       System.out.println(\"Decimal number: \" + decimal);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:44.000Z"
  },
  {
    "id": 242,
    "keyword": null,
    "link": null,
    "title": " Java convert octal to decimal",
    "description": "",
    "reg_date": "2021-10-12T12:00:44.000Z"
  },
  {
    "id": 243,
    "keyword": null,
    "link": null,
    "title": " Java copy file",
    "description": "var source = new File(\"src/resources/bugs.txt\"); var dest = new File(\"src/resources/bugs2.txt\");  Files.copy(source.toPath(), dest.toPath(),             StandardCopyOption.REPLACE_EXISTING);  //Source: http://zetcode.com/java/copyfile/\nvar source = new File(\"src/resources/bugs.txt\"); var dest = new File(\"src/resources/bugs2.txt\");  Files.copy(source.toPath(), dest.toPath(),             StandardCopyOption.REPLACE_EXISTING);\nimport java.io.FileInputStream; import java.io.FileOutputStream;  public class Main {     public static void main(String[] args) {         FileInputStream in =null;         FileOutputStream out=null;         try {             in=new FileInputStream(args[0]);             out=new FileOutputStream(args[1]);              int c;             while ((c=in.read())!=-1){                 out.write(c);             }         }         catch (Exception e){             System.out.println(\"Error Copping File\");         }     } }\n",
    "reg_date": "2021-10-12T12:00:44.000Z"
  },
  {
    "id": 244,
    "keyword": null,
    "link": null,
    "title": " Java create new file",
    "description": "import java.io.FileWriter;   // Import the FileWriter class import java.io.IOException;  // Import the IOException class to handle errors  public class WriteToFile {   public static void main(String[] args) {     try {       FileWriter myWriter = new FileWriter(\"filename.txt\");       myWriter.write(\"Files in Java might be tricky, but it is fun enough!\");       myWriter.close();       System.out.println(\"Successfully wrote to the file.\");     } catch (IOException e) {       System.out.println(\"An error occurred.\");       e.printStackTrace();     }   } }\n// example on createNewFile() method of File class in java import java.io.File; import java.io.IOException; public class CreateFileDemo {    public static void main(String[] args) throws IOException    {       try       {          File file = new File(\"D:\\\\demo.txt\");          boolean bool = file.createNewFile();          if(bool)          {             System.out.println(\"File created successfully\");          }          else          {             System.out.println(\"File already exists\");          }       }       catch(IOException ex)       {          System.out.println(\"Exception : \");          ex.printStackTrace();       }    } }\nFile myObj = new File(\"path\"); myObj.createNewFile(); FileWriter myWriter = new FileWriter(\"path\"); myWriter.write(\"text\"); myWriter.close();\nString fileData = \"yourContent\"; FileOutputStream fos = new FileOutputStream(\"yourFile.txt\"); fos.write(fileData.getBytes()); fos.flush(); fos.close();\nFile filename = new File(filepath)\npackage FileHandling;    // Import the File class import java.io.File;   // Import the IOException class to handle errors import java.io.IOException;    public class CreateFile { public static void main(String[] args) { try { // Creating an object of a file File myObj = new File(\"D:FileHandlingNewFilef1.txt\");  if (myObj.createNewFile()) { System.out.println(\"File created: \" + myObj.getName()); } else { System.out.println(\"File already exists.\"); } } catch (IOException e) { System.out.println(\"An error occurred.\"); e.printStackTrace(); } } }\n",
    "reg_date": "2021-10-12T12:00:44.000Z"
  },
  {
    "id": 245,
    "keyword": null,
    "link": null,
    "title": " Java create zip file",
    "description": "import java.io.FileOutputStream; import java.io.IOException; import java.nio.file.*; import java.nio.file.attribute.BasicFileAttributes; import java.util.zip.ZipEntry; import java.util.zip.ZipOutputStream;  public class ZipCompress {     public static void compress(String dirPath) {         final Path sourceDir = Paths.get(dirPath);         String zipFileName = dirPath.concat(\".zip\");         try {             final ZipOutputStream outputStream = new ZipOutputStream(new FileOutputStream(zipFileName));             Files.walkFileTree(sourceDir, new SimpleFileVisitor<Path>() {                 @Override                 public FileVisitResult visitFile(Path file, BasicFileAttributes attributes) {                     try {                         Path targetFile = sourceDir.relativize(file);                         outputStream.putNextEntry(new ZipEntry(targetFile.toString()));                         byte[] bytes = Files.readAllBytes(file);                         outputStream.write(bytes, 0, bytes.length);                         outputStream.closeEntry();                     } catch (IOException e) {                         e.printStackTrace();                     }                     return FileVisitResult.CONTINUE;                 }             });             outputStream.close();         } catch (IOException e) {             e.printStackTrace();         }     } }\nimport java.io.BufferedOutputStream; import java.io.File; import java.io.FileOutputStream; import java.nio.file.Files; import java.nio.file.Paths; import java.util.ArrayList; import java.util.List; import java.util.zip.ZipEntry; import java.util.zip.ZipOutputStream;  public class zip {      public static void main(String[] args) {     \tzipFolder(mapFolder(\"Test\"));     \t         System.out.println(\"Done\");     }      \tpublic static List<String> mapFolder(String path, boolean includeEmptyFolders) {     \tList<String> map = new ArrayList<String>();     \tList<String> unmappedDirs = new ArrayList<String>();     \tFile[] items = new File(path).listFiles();      \tif (!path.substring(path.length() - 1).equals(\"/\")) {     \t\tpath += \"/\";     \t}     \t\t     \tif (items != null) { \t    \tfor (File item : items) { \t    \t\tif (item.isFile()) { \t    \t\t\t\tmap.add(path+item.getName()); \t    \t\t} else { \t    \t\t\tunmappedDirs.add(path+item.getName()); \t    \t\t} \t    \t} \t    \t \t    \tif (!unmappedDirs.isEmpty()) { \t    \t\tfor (String folder : unmappedDirs) { \t    \t\t\tList<String> temp = mapFolder(folder, includeEmptyFolders); \t    \t\t\tif (!temp.isEmpty()) { \t    \t\t\t\tfor (String item : temp) \t    \t\t\t\t\tmap.add(item);     \t\t\t\t} else if (includeEmptyFolders == true) {     \t\t\t\t\tmap.add(folder+\"/\");     \t\t\t\t} \t    \t\t} \t    \t}     \t}     \treturn map;     }          public static void zipFolder(String zipPath, List<String> items) {     \ttry {             FileOutputStream f = new FileOutputStream(zipPath);             ZipOutputStream zip = new ZipOutputStream(new BufferedOutputStream(f));                          for (String item : items) {             \tString contents = String.join(\"\\n\", Files.readAllLines(Paths.get(item)));             \tzip.putNextEntry(new ZipEntry(item));             \t             \tbyte[] data = contents.getBytes();             \tzip.write(data, 0, data.length);             \tzip.closeEntry();             } \t\t    \t             zip.close();             f.close();         } catch(Exception e) {             System.out.println(e.getMessage());         }     } }\n",
    "reg_date": "2021-10-12T12:00:44.000Z"
  },
  {
    "id": 246,
    "keyword": null,
    "link": null,
    "title": " Java do while loop example",
    "description": "do { \t// loop content } while (/* condition */);\n// Java infinite while loop import java.util.*; public class WhileLoopExample {    public static void main(String[] args)    {       boolean value = true;       while(value)       {          System.out.println(\"Infinite loop\");       }    } }\npublic class WhileLoopDemo {    public static void main(String args[])    {       int a = 1;       while(a < 10)       {          System.out.println(a);          a++;          System.out.print(\"\\n\");       }    } }\ndo {   //something you want to execute at least once } while (someBooleanCondition); \nA while loop iterates a block of statements until condition is true. In a  while loop condition is executed first. Syntax:  while(condition) {    // code goes here }\n//do-while loop   int i=1;   do{   System.out.println(i);   i++;   }while(i<=10);  \n",
    "reg_date": "2021-10-12T12:00:44.000Z"
  },
  {
    "id": 247,
    "keyword": null,
    "link": null,
    "title": " Java for loop",
    "description": "for(int i = 0; i < 10; i++) {   //do something      //NOTE: the integer name does not need to be i, and the loop   //doesn't need to start at 0. In addition, the 10 can be replaced   //with any value. In this case, the loop will run 10 times.   //Finally, the incrementation of i can be any value, in this case,   //i increments by one. To increment by 2, for example, you would   //use \"i += 2\", or \"i = i+2\" }\n// Starting on 0: for(int i = 0; i < 5; i++) {   System.out.println(i + 1); }  // Starting on 1: for(int i = 1; i <= 5; i++) {   System.out.println(i); }   // Both for loops will iterate 5 times, // printing the numbers 1 - 5.\nint values[] = {1,2,3,4}; for(int i = 0; i < values.length; i++) {  \tSystem.out.println(values[i]);  }\nfor(int i = 0; i < {value}; i++) {   }\nclass for_loop { \tpublic static void main(String args[])     {      \tfor(int i=0;i<10;i++)         {           System.out.print(\" \" + i);         }       /*       Output: 0 1 2 3 4 5 6 7 8 9        */     } }\n// Example of a for loop in java that will iterate the number of times entered by the user import java.util.Scanner; // import Scanner class public class grepperjava {     public static void main(String[] ARGS)     {         System.out.println(\"\\nPlease enter a number, and the loop will iterate input times.\");         int input;         Scanner var = new Scanner(System.in); // Create scanner object, so user-input may be read         input = var.nextInt();         var.close();          for(int i = 0; i < input; i++)         {             System.out.println(\"This will print \" + input + \" times\");         }     } }\n",
    "reg_date": "2021-10-12T12:00:44.000Z"
  },
  {
    "id": 248,
    "keyword": null,
    "link": null,
    "title": " Java for loop example",
    "description": "for(int i = 0; i < 10; i++) {   //do something      //NOTE: the integer name does not need to be i, and the loop   //doesn't need to start at 0. In addition, the 10 can be replaced   //with any value. In this case, the loop will run 10 times.   //Finally, the incrementation of i can be any value, in this case,   //i increments by one. To increment by 2, for example, you would   //use \"i += 2\", or \"i = i+2\" }\n// Starting on 0: for(int i = 0; i < 5; i++) {   System.out.println(i + 1); }  // Starting on 1: for(int i = 1; i <= 5; i++) {   System.out.println(i); }   // Both for loops will iterate 5 times, // printing the numbers 1 - 5.\nint values[] = {1,2,3,4}; for(int i = 0; i < values.length; i++) {  \tSystem.out.println(values[i]);  }\n//Main two types of loops: //For loop: for(/*index declaration*/int i=0; /*runs as long as this is true*/    i<=5; /*change number at end of loop*/i++){ doStuff();  } //While loop: //runs as long as the condition is true while(condition){ //do what you want in here doStuff() }\nfor (int i = 0; i < 5; i++) {   System.out.println(i); } \n//for loop   for(int i=1;i<=10;i++){   System.out.println(i);   }   \n",
    "reg_date": "2021-10-12T12:00:45.000Z"
  },
  {
    "id": 249,
    "keyword": null,
    "link": null,
    "title": " Java get list of keys Hashmap",
    "description": "List<String> l = new ArrayList<String>(map.keySet()); \n",
    "reg_date": "2021-10-12T12:00:45.000Z"
  },
  {
    "id": 250,
    "keyword": null,
    "link": null,
    "title": " Java heap retention in BodyContentImpl",
    "description": "-Dorg.apache.jasper.runtime.BodyContentImpl.LIMIT_BUFFER=true -Dorg.apache.jasper.runtime.JspFactoryImpl.USE_POOL=false\n",
    "reg_date": "2021-10-12T12:00:45.000Z"
  },
  {
    "id": 251,
    "keyword": null,
    "link": null,
    "title": " Java how to copy file",
    "description": "var source = new File(\"src/resources/bugs.txt\"); var dest = new File(\"src/resources/bugs2.txt\");  Files.copy(source.toPath(), dest.toPath(),             StandardCopyOption.REPLACE_EXISTING);  //Source: http://zetcode.com/java/copyfile/\n",
    "reg_date": "2021-10-12T12:00:45.000Z"
  },
  {
    "id": 252,
    "keyword": null,
    "link": null,
    "title": " Java int to roman",
    "description": "import java.util.TreeMap;  public class RomanNumber {      private final static TreeMap<Integer, String> map = new TreeMap<Integer, String>();      static {          map.put(1000, \"M\");         map.put(900, \"CM\");         map.put(500, \"D\");         map.put(400, \"CD\");         map.put(100, \"C\");         map.put(90, \"XC\");         map.put(50, \"L\");         map.put(40, \"XL\");         map.put(10, \"X\");         map.put(9, \"IX\");         map.put(5, \"V\");         map.put(4, \"IV\");         map.put(1, \"I\");      }      public final static String toRoman(int number) {         int l =  map.floorKey(number);         if ( number == l ) {             return map.get(number);         }         return map.get(l) + toRoman(number-l);     }  }\n",
    "reg_date": "2021-10-12T12:00:45.000Z"
  },
  {
    "id": 253,
    "keyword": null,
    "link": null,
    "title": " Java loop array",
    "description": "For(<DataType of array/List><Temp variable name>   : <Array/List to be iterated>){     System.out.println(); //Any other operation can be done with this temp variable. }\n public class HelloWorld {   public static void main(String[] args) {          // init array     String[] family = new String[] {\"Member1\", \"Member2\", \"Member3\", \"Member4\", \"Member5\"};          // print array      for(String name : family)     {     \tSystem.out.println(name);     }          } } \nclass AssignmentOperator {    public static void main(String[] args) {              char[] vowels = {'a', 'e', 'i', 'o', 'u'};       // foreach loop       for (char item: vowels) {          System.out.println(item);       }    } }\n\t\tScanner scanner = new Scanner( System.in );         int n = scanner.nextInt();         int[] a=new int[ n + 1 ];         for( int k = 1; k <= n; k ++ ){             a[ k ] = scanner.nextInt();         }         Arrays.sort( a );         for( int k = 1; k <= n; k ++ ){             System.out.print( a[k] + \" \" );         }\nimport java.util.*;  public class HelloWorld {   public static void main(String[] args) {          // you can define the type of list you want to init - String int etc inside <yourType> eg. <String>     List<String> family = new ArrayList();          family.add(\"Member1\");     family.add(\"Member2\");     family.add(\"Member3\");     family.add(\"Member4\");     family.add(\"Member5\");          // print array      for(String name : family)     {     \tSystem.out.println(name);     }          } } \n3 1 2 3 \n",
    "reg_date": "2021-10-12T12:00:45.000Z"
  },
  {
    "id": 254,
    "keyword": null,
    "link": null,
    "title": " Java loop throug gson JsonElement",
    "description": "final JsonObject jsonObject = GSON.toJsonTree(<Object>).getAsJsonObject(); for(Map.Entry<String, JsonElement> entry : jsonObject.entrySet()) {     System.out.println(\"Key = \" + entry.getKey() + \" Value = \" + entry.getValue() ); }\n",
    "reg_date": "2021-10-12T12:00:45.000Z"
  },
  {
    "id": 255,
    "keyword": null,
    "link": null,
    "title": " Java make sure only one condition is true",
    "description": "if (Stream.of(valueA, valueB, valueC, valueD).filter(Objects::nonNull).count() != 1) {      /* throw error */  }\n",
    "reg_date": "2021-10-12T12:00:45.000Z"
  },
  {
    "id": 256,
    "keyword": null,
    "link": null,
    "title": " Java print class type",
    "description": "System.out.println(foo.getClass().getName());\n",
    "reg_date": "2021-10-12T12:00:45.000Z"
  },
  {
    "id": 257,
    "keyword": null,
    "link": null,
    "title": " Java program bubble sort in ascending and descending order",
    "description": "// Bubble sort descending order import java.util.Scanner; public class BubbleSortDescending  {    public static void main(String[] args)     {       int number, a, b, temp;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter number of integers: \");       number = sc.nextInt();       int[] arrInput = new int[number];       System.out.println(\"Enter \" + number + \" integers: \");       for(a = 0; a < number; a++)           arrInput[a] = sc.nextInt();       for(a = 0; a < (number - 1); a++)        {          for(b = 0; b < number - a - 1; b++)           {             // logic to sort in descending order             if(arrInput[b] < arrInput[b + 1])              {                temp = arrInput[b];                arrInput[b] = arrInput[b + 1];                arrInput[b + 1] = temp;             }          }       }       sc.close();       System.out.println(\"Sorted integers: \");       for(a = 0; a < number; a++)           System.out.println(arrInput[a]);    } }\n",
    "reg_date": "2021-10-12T12:00:45.000Z"
  },
  {
    "id": 258,
    "keyword": null,
    "link": null,
    "title": " Java program convert decimal to octal using while loop",
    "description": "import java.util.Scanner; public class DecimalToOctalUsingWhileLoop {    public static void main(String[] args)    {       int decimal;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter decimal number: \");       decimal = sc.nextInt();       int octalNumber = 0, a = 1;       while(decimal > 0)       {          octalNumber += a * (decimal % 8);          decimal = decimal / 8;          a = a * 10;       }       System.out.println(\"Octal number is: \" + octalNumber);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:46.000Z"
  },
  {
    "id": 259,
    "keyword": null,
    "link": null,
    "title": " Java program find GCD and LCM of two numbers using euclid’s algorithm",
    "description": "import java.util.Scanner; public class GCDLCMEuclid  {    // gcd java    void findGCD(long num1, long num2)    {       while(num2 > 0)       {          long temp = num2;          num2 = num1 % num2;          num1 = temp;       }       System.out.println(\"GCD is : \" + num1);    }    // lcm java    void findLCM(long num1, long num2)    {       long a = num1;       long b = num2;       while(num2 > 0)       {          long temp = num2;          num2 = num1 % num2;          num1 = temp;       }       long gcd = num1;       long lcm = (a * (b / gcd));       System.out.println(\"LCM is : \" + lcm);    }    public static void main(String[] args)    {       GCDLCMEuclid obj = new GCDLCMEuclid();       System.out.println(\"Please enter any two numbers to find GCD : \");       Scanner sc = new Scanner(System.in);       long a = sc.nextLong();       long b = sc.nextLong();       obj.findGCD(a, b);       System.out.println(\"Please enter any two numbers to find LCM : \");       long c = sc.nextLong();       long d = sc.nextLong();       obj.findLCM(c, d);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:46.000Z"
  },
  {
    "id": 260,
    "keyword": null,
    "link": null,
    "title": " Java program to add two numbers using bufferedreader",
    "description": "// Java program to add two numbers using bufferedreader import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class AddTwoBufferedReader  {    public static void main(String[] args) throws NumberFormatException, IOException     {       int number1, number2, add;       BufferedReader br = new BufferedReader(new InputStreamReader(System.in));       System.out.println(\"Please enter two numbers to add: \");       number1 = Integer.parseInt(br.readLine());       number2 = Integer.parseInt(br.readLine());       add = number1 + number2;       System.out.println(\"Add two numbers using bufferedreader: \" + add);    } }\n",
    "reg_date": "2021-10-12T12:00:46.000Z"
  },
  {
    "id": 261,
    "keyword": null,
    "link": null,
    "title": " Java program to calculate area of a circle",
    "description": "import java.util.Scanner; public class CalculateAreaOfCircle {    public static void main(String[] args)    {       double radius;       double pi = 3.1415, area;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter radius of circle: \");       radius = sc.nextDouble();       area = pi * radius * radius;       System.out.println(\"Area of circle: \" + area);       sc.close();    } }\nimport java.util.Scanner; public class AreaOfCircle {    public static void main(String args[]){       int radius;       double area;       Scanner sc = new Scanner(System.in);       System.out.println(\"Enter the radius of the circle ::\");       radius = sc.nextInt();       area = (radius*radius)*Math.PI;       System.out.println(\"Area of the circle is ::\"+area);    } }\n",
    "reg_date": "2021-10-12T12:00:46.000Z"
  },
  {
    "id": 262,
    "keyword": null,
    "link": null,
    "title": " Java program to calculate area of circle rectangle and triangle using switch statement",
    "description": "// Java program to calculate area of circle rectangle and triangle using switch statement import java.util.Scanner; public class FindAreaUsingSwitchStatement  {    public static void main(String[] args)     {       Scanner sc = new Scanner(System.in);       System.out.println(\"MENU:\");       System.out.println(\"1.Area of circle\");       System.out.println(\"2.Area of triangle\");       System.out.println(\"3.Area of rectangle\");       System.out.println(\"Please enter any of the above option: \");       int num = sc.nextInt();       switch(num)       {          case 1: System.out.println(\"Please enter radius of circle: \");          double radius = sc.nextFloat();          double areaCircle = (22 * radius * radius) / 7;          System.out.println(\"Area of circle is: \" + areaCircle);          break;          case 2: System.out.println(\"Please enter base and height of triangle: \");          double base = sc.nextFloat();          double height = sc.nextFloat();          double areaTriangle = (base* height) / 2;          System.out.println(\"Area of triangle is: \" + areaTriangle);          break;          case 3: System.out.println(\"Please enter length and breadth of rectangle: \");          int length = sc.nextInt();          int breadth = sc.nextInt();          int areaRectangle = length * breadth;          System.out.println(\"Area of ractangle is: \" + areaRectangle);          break;          default:System.exit(0);       }       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:46.000Z"
  },
  {
    "id": 263,
    "keyword": null,
    "link": null,
    "title": " Java program to calculate area of rectangle",
    "description": "// calculate area of rectangle using class in java import java.io.*; class RectangleShape  {    int length, breadth;     void setValue(int l, int b)     {         length = l;         breadth = b;     }    // get area of rectangle    int findArea()     {         return (length * breadth);     } } public class RectangleAreaDemo {    public static void main(String[] args)    {       RectangleJava obj = new RectangleJava();        obj.setValue(10, 5);        System.out.println(\"Area of rectangle: \" + obj.findArea());    } }\nimport java.util.Scanner; public class RectangleArea {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter length of rectangle: \");       double length = sc.nextDouble();       System.out.println(\"Please enter width of rectangle: \");       double width = sc.nextDouble();       double area = length * width;       System.out.println(\"Area of rectangle is: \" + area);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:46.000Z"
  },
  {
    "id": 264,
    "keyword": null,
    "link": null,
    "title": " Java program to calculate average of 3 numbers",
    "description": "// Java program to calculate average of 3 numbers import java.util.Scanner; public class AverageNumberDemo  {    public static void main(String[] args)     {       Scanner sc = new Scanner(System.in);       System.out.print(\"Please enter first number: \");       double number1 = sc.nextDouble();       System.out.print(\"Please enter second number: \");       double number2 = sc.nextDouble();       System.out.print(\"Please enter third number: \");       double number3 = sc.nextDouble();       System.out.print(\"The average of 3 numbers is: \" + calculateAverage(number1, number2, number3));       sc.close();    }    public static double calculateAverage(double num1, double num2, double num3)    {       return (num1 + num2 + num3) / 3;    } }\nint a, b, c, d; \t\ta = 2; \t\tb = 3; \t\tc = 5; \t\td = 10; \t\tSystem.out.println(\"Average of n nubers is: \" + (a + b + c + d) / 4); \t\t// OR \t\tScanner scanner = new Scanner(System.in); \t\tSystem.out.println(\"Enter 1st number: \"); \t\tint firstNumber = scanner.nextInt(); \t\tSystem.out.println(\"Enter 2nd number: \"); \t\tint secondNumber = scanner.nextInt(); \t\tSystem.out.println(\"Enter 3rd number: \"); \t\tint thirdNumber = scanner.nextInt(); \t\tSystem.out.println(\"Enter 4th number: \"); \t\tint fourthNumber = scanner.nextInt(); \t\tSystem.out.println(\"Enter 5th number: \"); \t\tint fifthNumber = scanner.nextInt(); \t\tSystem.out.println(\"Enter 6th number: \"); \t\tint sixthNumber = scanner.nextInt(); \t\tSystem.out.println(\"Enter Nth number: \"); \t\tint nthNumber = scanner.nextInt(); \t\tscanner.close(); \t\tSystem.out.println(\"Average of abouve input numbers is: \" \t\t\t\t+ (firstNumber + secondNumber + thirdNumber + fourthNumber + fifthNumber + sixthNumber + nthNumber) \t\t\t\t\t\t/ 7.0);\n",
    "reg_date": "2021-10-12T12:00:46.000Z"
  },
  {
    "id": 265,
    "keyword": null,
    "link": null,
    "title": " Java program to calculate compound interest",
    "description": "// Java program to find simple interest import java.util.Scanner; public class SimpleInterestJavaProgram {    public static void main(String[] args)    {       float principal, rate, time;       Scanner sc = new Scanner(System.in);       System.out.print(\"Enter principal amount : \");       principal = sc.nextFloat();       System.out.print(\"Please enter rate annually : \");       rate = sc.nextFloat();       System.out.print(\"Please enter time(in years) : \");       time = sc.nextFloat();       float simpleInterest;       simpleInterest = (principal * time * rate) / 100;       System.out.println(\"The Simple Interest is : \" + simpleInterest);       sc.close();    } }\n// Java program to calculate compound interest public class CompoundInterestDemo  {    public void calculateCompound(int p, int t, double r, int n)     {       double number = p * Math.pow(1 + (r / n), n * t);       double interest = number - p;       System.out.println(\"Compound interest after \" + t + \" years: \" + interest);       System.out.println(\"Money after \" + t + \" years: \" + number);    }    public static void main(String[] args)     {       CompoundInterestDemo obj = new CompoundInterestDemo();       obj.calculateCompound(200000, 6, .06, 12);    } }\n",
    "reg_date": "2021-10-12T12:00:47.000Z"
  },
  {
    "id": 266,
    "keyword": null,
    "link": null,
    "title": " Java program to calculate sum of even and odd numbers in an array",
    "description": "// Java program to calculate sum of even and odd numbers in an array import java.util.Scanner; public class FindSumOf {    public static void main(String[] args)    {       int number, sumEven = 0, sumOdd = 0;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter number of elements in an array: \");       number = sc.nextInt();       int[] arrNumbers = new int[number];       System.out.println(\"Please enter elements of the array: \");       for(int a = 0; a < number; a++)       {          arrNumbers[a] = sc.nextInt();       }       for(int a = 0; a < number; a++)       {          if(arrNumbers[a] % 2 == 0)          {             sumEven = sumEven + arrNumbers[a];          }          else          {             sumOdd = sumOdd + arrNumbers[a];          }       }       System.out.println(\"Sum of even numbers in an array: \" + sumEven);       System.out.println(\"Sum of odd numbers in an array : \" + sumOdd);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:47.000Z"
  },
  {
    "id": 267,
    "keyword": null,
    "link": null,
    "title": " Java program to check even or odd number",
    "description": "import java.util.Scanner;  class CheckEvenOdd {   public static void main(String args[])   {     int num;     System.out.println(\"Enter an Integer number:\");      //The input provided by user is stored in num     Scanner input = new Scanner(System.in);     num = input.nextInt();      /* If number is divisible by 2 then it's an even number      * else odd number*/     if ( num % 2 == 0 )         System.out.println(\"Entered number is even\");      else         System.out.println(\"Entered number is odd\");   } }\nimport java.util.Scanner; public class FindEvenOrOdd {    public static void main(String[] args)    {       int a;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter a number to check even or odd: \");       a = sc.nextInt();       if(a % 2 == 0)       {          System.out.println(\"Entered number is an even number.\");       }       else       {          System.out.println(\"Entered number is an odd number.\");       }       sc.close();    } }\nimport java.util.Scanner; public class evenOrOdd{      public static void main(String[] args){     Scanner in = new Scanner(System.in);     System.out.println(\"Please enter a non-negative number: \");     int x = in.nextInt();     if (x % 2 == 0)     {       System.out.println(\"The number is even\");     }     else {       System.out.println(\"The number is odd\");     }   } }        \n",
    "reg_date": "2021-10-12T12:00:47.000Z"
  },
  {
    "id": 268,
    "keyword": null,
    "link": null,
    "title": " Java program to check if it is a sparse matrix",
    "description": "import java.util; public class SparseMatrix {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter dimensions of sparse matrix: \");       int x = sc.nextInt();       int y = sc.nextInt();       int[][] arrNumber = new int[x][y];       int zeros = 0;       System.out.println(\"Please enter elements of sparse matrix: \");       for(int a = 0; a < x; a++)       {          for(int b = 0; b < y; b++)          {             arrNumber[a][b] = sc.nextInt();             if(arrNumber[a][b] == 0)             {                zeros++;             }          }       }\t        if(zeros > (x * y) / 2)       {          System.out.println(\"Given matrix is sparse matrix.\");       }       else       {          System.out.println(\"Given matrix is not a sparse matrix.\");       }\t        sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:47.000Z"
  },
  {
    "id": 269,
    "keyword": null,
    "link": null,
    "title": " Java program to check neon number",
    "description": "import java.util.Scanner; public class NeonNumberInJava {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter number to check neon number or not: \");       int number = sc.nextInt();       int square = number * number;       int sum = 0;       while(square != 0)       {          int n = square % 10;          sum = sum + n;          square = square / 10;       }       if(sum == number)       {          System.out.println(number + \" is a neon number.\");       }       else       {          System.out.println(number + \" is not a neon number.\");       }       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:47.000Z"
  },
  {
    "id": 270,
    "keyword": null,
    "link": null,
    "title": " Java program to check palindrome number using recursion",
    "description": "import java.util.Scanner; public class RecursivePalindromeJava  {    // to check if string is palindrome using recursion    public static boolean checkPalindrome(String str)    {       if(str.length() == 0 || str.length() == 1)          return true;        if(str.charAt(0) == str.charAt(str.length() - 1))          return checkPalindrome(str.substring(1, str.length() - 1));       return false;    }    public static void main(String[]args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter a string : \");       String strInput = sc.nextLine();       if(checkPalindrome(strInput))       {          System.out.println(strInput + \" is palindrome\");       }       else       {          System.out.println(strInput + \" not a palindrome\");       }       sc.close();    } }\n// Java program to check palindrome number using recursion public class PalindromeNumberRecursion {    static int palindromeRecursion(int number, int temp)    {       if(number == 0)          return temp;       // storing reverse of a number       temp = (temp * 10) + (number % 10);       return palindromeRecursion(number / 10, temp);    }    public static void main(String[] args)    {       int number = 141;       int temp = palindromeRecursion(number, 0);       if(temp == number)       {          System.out.println(\"number is palindrome.\");       }       else       {          System.out.println(\"number is not palindrome.\");       }    } }\n",
    "reg_date": "2021-10-12T12:00:47.000Z"
  },
  {
    "id": 271,
    "keyword": null,
    "link": null,
    "title": " Java program to check palindrome string using recursion",
    "description": "import java.util.Scanner; public class RecursivePalindromeJava  {    // to check if string is palindrome using recursion    public static boolean checkPalindrome(String str)    {       if(str.length() == 0 || str.length() == 1)          return true;        if(str.charAt(0) == str.charAt(str.length() - 1))          return checkPalindrome(str.substring(1, str.length() - 1));       return false;    }    public static void main(String[]args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter a string : \");       String strInput = sc.nextLine();       if(checkPalindrome(strInput))       {          System.out.println(strInput + \" is palindrome\");       }       else       {          System.out.println(strInput + \" not a palindrome\");       }       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:47.000Z"
  },
  {
    "id": 272,
    "keyword": null,
    "link": null,
    "title": " Java program to check whether string is palindrome using library methods",
    "description": "import java.util.Scanner; public class RecursivePalindromeJava  {    // to check if string is palindrome using recursion    public static boolean checkPalindrome(String str)    {       if(str.length() == 0 || str.length() == 1)          return true;        if(str.charAt(0) == str.charAt(str.length() - 1))          return checkPalindrome(str.substring(1, str.length() - 1));       return false;    }    public static void main(String[]args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter a string : \");       String strInput = sc.nextLine();       if(checkPalindrome(strInput))       {          System.out.println(strInput + \" is palindrome\");       }       else       {          System.out.println(strInput + \" not a palindrome\");       }       sc.close();    } }\npublic class StringPalindromeJava {    public static void isPalindrome(String str)    {       String strReverse = new StringBuffer(str).reverse().toString();        // checking for palindrome       if(str.equals(strReverse))       {          System.out.println(str + \" is palindrome string.\");       }       else       {          System.out.println(str + \" is not palindrome string.\");       }    }    public static void main(String[] args)    {       // palindrome java       isPalindrome(\"eye\");       isPalindrome(\"rotator\");    } }\nimport java.util.*;    class PalindromeExample2   {      public static void main(String args[])      {         String original, reverse = \"\"; // Objects of String class         Scanner in = new Scanner(System.in);          System.out.println(\"Enter a string/number to check if it is a palindrome\");         original = in.nextLine();          int length = original.length();          for ( int i = length - 1; i >= 0; i-- )            reverse = reverse + original.charAt(i);         if (original.equals(reverse))            System.out.println(\"Entered string/number is a palindrome.\");         else            System.out.println(\"Entered string/number isn't a palindrome.\");       }   }  \npackage test //The function below checks if a string is a palindrome //True = Is a palindrome & False = Not a palindrome \tpublic boolean isPalindromString(String text){     \tString reverse = reverse(text);       \tif(text.equals(reverse))     \t{         \treturn true;       \t}              \treturn false;     } //This function returns the reverse String of its input. //Ex. if given \"hello\", it will return \"olleh\" \tpublic String reverse(String input)     {      \t\tif(input == null || input.isEmpty())         { \t\t\treturn input;         }         \treturn input.charAt(input.length()- 1) + reverse(input.substring(0, input.length() - 1));     }\n",
    "reg_date": "2021-10-12T12:00:47.000Z"
  },
  {
    "id": 273,
    "keyword": null,
    "link": null,
    "title": " Java program to convert decimal number to binary & count number of 1s",
    "description": "// decimal to binary conversion in java import java.util.Scanner; public class DecimalBinaryDemo {    public static void main(String[] args)    {       int number, count = 0, temp;       String strConvert = \"\";       Scanner sc = new Scanner(System.in);       System.out.println(\"Enter a decimal number : \");       number = sc.nextInt();       // decimal to binary java       while(number > 0)       {          temp = number % 2;          if(temp == 1)          {             count++;          }          strConvert = strConvert + \" \" + temp;          number = number / 2;       }       System.out.println(\"Decimal to binary in java : \" + strConvert);       System.out.println(\"Number of 1s : \" + count);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:48.000Z"
  },
  {
    "id": 274,
    "keyword": null,
    "link": null,
    "title": " Java program to convert decimal to binary using toBinaryString and stack",
    "description": "public class DecimalToBinaryExample2{     public static void toBinary(int decimal){          int binary[] = new int[40];          int index = 0;          while(decimal > 0){            binary[index++] = decimal%2;            decimal = decimal/2;          }          for(int i = index-1;i >= 0;i--){            System.out.print(binary[i]);          }     System.out.println();//new line   }     public static void main(String args[]){       System.out.println(\"Decimal of 10 is: \");   toBinary(10);     System.out.println(\"Decimal of 21 is: \");   toBinary(21);     System.out.println(\"Decimal of 31 is: \");     toBinary(31);   }}    \nConvert decimal to binary using toBinaryString() method public class DecimalToBinary {    public static void main(String[] args)    {       System.out.println(\"decimal to binary using toBinaryString() 104: \");       // to binary string java       System.out.println(Integer.toBinaryString(104));       System.out.println(\"\\ndecimal to binary using toBinaryString() 554: \");       // tobinarystring       System.out.println(Integer.toBinaryString(554));       System.out.println(\"\\ndecimal to binary using toBinaryString() 644: \");       System.out.println(Integer.toBinaryString(644));    } }\nConvert decimal to binary using stack in java import java.util.*; public class DecimalBinaryExample {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);                       Stack<Integer> numStack = new Stack<Integer>();            System.out.println(\"Please enter a decimal number : \");       int number = sc.nextInt();       while(number != 0)       {          int a = number % 2;          numStack.push(a);          number /= 2;       }       System.out.println(\"Binary number : \");       while(!(numStack.isEmpty()))       {          System.out.print(numStack.pop());       }       System.out.println();       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:48.000Z"
  },
  {
    "id": 275,
    "keyword": null,
    "link": null,
    "title": " Java program to convert decimal to hexadecimal using recursion",
    "description": "// convert decimal to hexadecimal using recursion import java.util.Scanner; class DecimalToHexaDemo {    char[] charHexa ={'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};    int num;    String strHex = \"\";    String hexadecimal(int h)    {       if(h != 0)       {          num = h % 16;          strHex = charHexa[num] + strHex;          h = h / 16;          hexadecimal(h);       }       return strHex;    }    public static void main(String[] args)    {       DecimalToHexaDemo obj = new DecimalToHexaDemo();       int decimal;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter decimal number: \");       decimal = sc.nextInt();       System.out.println(\"Hexadecimal number is: \");       String hex = obj.hexadecimal(decimal);       System.out.println(hex);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:48.000Z"
  },
  {
    "id": 276,
    "keyword": null,
    "link": null,
    "title": " Java program to convert integer value into binary",
    "description": "int n = 1000; String s = Integer.toBinaryString(n);\nimport java.util.*; import java.util.Scanner; public class IntegerToBinary {    public static void main(String[] args)    {       int num;       String str = \"\";       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter the a number : \");       num = sc.nextInt();       // convert int to binary java       while(num > 0)       {          int y = num % 2;          str = y + str;          num = num / 2;       }       System.out.println(\"The binary conversion is : \" + str);       sc.close();    } }\npublic static String makeBinaryString(int n) { \tStringBuilder sb = new StringBuilder(); \twhile (n > 0) {     sb.append(n % 2); \t\tn /= 2; \t}   \tsb.reverse();  \t   \treturn sb.toString(); }\nInteger.toString(100,8) // prints 144 --octal representation  Integer.toString(100,2) // prints 1100100 --binary representation  Integer.toString(100,16) //prints 64 --Hex representation\nInteger.toBinaryString(int i)\n",
    "reg_date": "2021-10-12T12:00:48.000Z"
  },
  {
    "id": 277,
    "keyword": null,
    "link": null,
    "title": " Java program to delete specified integer from an array",
    "description": "// Java program to delete specified integer from an array import java.util.Scanner; public class DeleteSpecifiedInteger {    public static void main(String[] args)    {       int num, n, temp = 1, place = 0;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter number of elements: \");       num = sc.nextInt();       int[] arrNum = new int[num];       System.out.println(\"Please enter all the elements: \");       for(int a = 0; a < num; a++)       {          arrNum[a] = sc.nextInt();       }       System.out.println(\"Enter the element you want to delete: \");       n = sc.nextInt();       for(int a = 0; a < num; a++)       {          if(arrNum[a] == n)          {             temp = 1;             place = a;             break;          }          else          {             temp = 0;          }       }       if(temp == 1)       {          for(int a = place + 1; a < num; a++)          {             arrNum[a - 1] = arrNum[a];          }          System.out.println(\"After deleting element: \");          for(int a = 0; a < num - 2; a++)          {             System.out.print(arrNum[a] + \",\");          }          System.out.print(arrNum[num - 2]);       }       else       {          System.out.println(\"Element not found!!\");       }       sc.close();    } }\nimport java.util.Scanner;  public class ElemRemoval {      public static void main(String[] args) {         Scanner in = new Scanner(System.in);         int[] intArr = {1, 2, 5, 12, 7, 3, 8};         System.out.print(\"Enter Element to be deleted : \");         int elem = in.nextInt();                  for(int i = 0; i < intArr.length; i++){             if(intArr[i] == elem){                 // shifting elements                 for(int j = i; j < intArr.length - 1; j++){                     intArr[j] = intArr[j+1];                 }                 break;             }         }                System.out.println(\"Elements -- \" );         for(int i = 0; i < intArr.length - 1; i++){             System.out.print(\" \" + intArr[i]);         }                     } }\n",
    "reg_date": "2021-10-12T12:00:48.000Z"
  },
  {
    "id": 278,
    "keyword": null,
    "link": null,
    "title": " Java program to delete vowels in a given string",
    "description": "// Java program to delete vowels in a given string import java.util.*; public class RemoveVowelsInString {    public static void main(String[] args)    {       String str = \"Deekshit Prasad\";       System.out.println(\"Given string: \" + str);       str = str.replaceAll(\"[AaEeIiOoUu]\", \"\");       System.out.println(\"After deleting vowels in given a string: \" + str);    } }\n",
    "reg_date": "2021-10-12T12:00:48.000Z"
  },
  {
    "id": 279,
    "keyword": null,
    "link": null,
    "title": " Java program to display pascal triangle",
    "description": "#include <stdio.h> int main() {    int rows, coef = 1, space, i, j;    printf(\"Enter the number of rows: \");    scanf(\"%d\", &rows);    for (i = 0; i < rows; i++) {       for (space = 1; space <= rows - i; space++)          printf(\"  \");       for (j = 0; j <= i; j++) {          if (j == 0 || i == 0)             coef = 1;          else             coef = coef * (i - j + 1) / j;          printf(\"M\", coef);       }       printf(\"\\n\");    }    return 0; } \nimport java.util.Scanner; public class PascalsTriangleJava  {    static int findFactorial(int number)    {       int factorial;       for(factorial = 1; number > 1; number--)       {          factorial *= number;       }       return factorial;    }    // here's the function to display pascal's triangle    static int printPascalTraingle(int num, int p)     {       return findFactorial(num) / (findFactorial(num - p) * findFactorial(p));    }    public static void main(String[] args)     {       int row, a, b;       System.out.println(\"Please enter number of rows: \");       Scanner sc = new Scanner(System.in);       row = sc.nextInt();       System.out.println(\"Here's is pascal's triangle: \");       for(a = 0; a < row; a++)        {          for(b = 0; b < row - a; b++)          {             System.out.print(\" \");          }          for(b = 0; b <= a; b++)          {             System.out.print(\" \" + printPascalTraingle(a, b));          }          System.out.println();       }       sc.close();    } }\n/* Author: Jeffrey Huang */ import java.util.*; public class PascalTriangleCreator {     public static long factorial(long n){         /*         The whole purpose of this method is to find the factorial of a number,         since java does not have a built in method for it. Calculating n choose          r is done using factorial, and since this code will be used repeatedly,         it is wise to put it in a separate method.         */         long factorial;         if (n==0){             factorial=1;         }         else{             factorial=1;             for (int counter=1;counter<=n;counter++){                 factorial=factorial*counter;             }         }         return factorial;     }          public static long FinalValue(long n, long r){         //Calculates n choose r by calling the factorial method.         return factorial(n) / ( factorial(n-r) * factorial(r) );     }       public static void main(String[] args) {      Scanner sc=new Scanner (System.in);      long rows=1;      long i,j;      while (rows!=0){   System.out.println(\"How many rows of Pascal's triangle would you like to print? (0 to stop; 1-20 rows)\");   rows=sc.nextLong();   //The following while loop ensures that the user cannot input an invalid number.   while (rows<0||rows>20){       System.out.println(\"Invalid input.\");       System.out.println(\"How many rows of Pascal's triangle would you like to print? (0 to stop; 1-20 rows)\");       rows=sc.nextLong();   }   /*   The following if else block makes the code more efficient. Otherwise, if the user    enters zero at any other point than at the start of the loop, the program will go    through the long process of trying to print a triangle before terminating the   program.       Using the following method, it is true that rows==0 is tested for twice, but   it shortens the execution time immensely. And we know that when zero is true   for the if statement, it is guaranteed to be true when breaking the loop.   */   if (rows==0){       System.out.println(\"Program terminated by user.\");   }   else{   for(i = 0; i < rows; i++) {       //Iterates through the number of rows required.          for(j = 0; j <= rows-i; j++){            System.out.print(\"   \");             //Iterates the printing of spaces.          }          for(j = 0; j <= i; j++){            if ((FinalValue(i, j))>9999) {              System.out.print(\" \");             }            else if ((FinalValue(i, j))>999){              System.out.print(\"  \");             }            else if ((FinalValue(i, j))>99){              System.out.print(\"   \");             }            else if ((FinalValue(i, j))>9){              System.out.print(\"    \");             }            else{             System.out.print(\"     \");             }             System.out.print(FinalValue(i, j));             //Prints a number of spaces plus a number.          }          System.out.println();         }         }      }  sc.close();   } }\n",
    "reg_date": "2021-10-12T12:00:48.000Z"
  },
  {
    "id": 280,
    "keyword": null,
    "link": null,
    "title": " Java program to find LCM of two numbers",
    "description": "public class LCMOfTwoNumbers {    public static void main(String[] args)    {        int num1 = 85, num2 = 175, lcm;       lcm = (num1 > num2) ? num1 : num2;       while(true)       {          if(lcm % num1 == 0 && lcm % num2 == 0)          {             System.out.println(\"LCM of \" + num1 + \" and \" + num2 + \" is \" + lcm + \".\");             break;          }          ++lcm;       }    } }\ncalculate lcm two numbers in java we can use GCD public class LCMUsingGCD  {    public static void main(String[] args)     {       int num1 = 15, num2 = 25, gcd = 1;       for(int a = 1; a <= num1 && a <= num2; ++a)       {          if(num1 % a == 0 && num2 % a == 0)          {             gcd = a;          }       }       int lcm = (num1 * num2) / gcd;       System.out.println(\"LCM of \" + num1 + \" and \" + num2 + \" is \" + lcm + \".\");    } }\n",
    "reg_date": "2021-10-12T12:00:48.000Z"
  },
  {
    "id": 281,
    "keyword": null,
    "link": null,
    "title": " Java program to find area of triangle",
    "description": "import java.util.Scanner; public class FindAreaOfTriangle {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter width of triangle: \");       double base = sc.nextDouble();       System.out.println(\"Please enter height of triangle: \");       double height = sc.nextDouble();       // formula area of triangle = (width * height) / 2       double area = (base * height) / 2;       System.out.println(\"Area of triangle is: \" + area);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:48.000Z"
  },
  {
    "id": 282,
    "keyword": null,
    "link": null,
    "title": " Java program to find average of n numbers",
    "description": "// Java program to find average of n numbers import java.util.Scanner; public class FindAverageOfNNumbers {    public static void main(String[] args)     {       int num, count = 1;          float a, average, total = 0;          Scanner sc = new Scanner(System.in);            System.out.println(\"Please enter n numbers: \");         num = sc.nextInt();         while(count <= num)       {             System.out.println(count + \" number: \");            a = sc.nextInt();          total += a;          ++count;          }       average = total / num;          System.out.println(\"Average is: \" + average);       sc.close();    } }\nint a, b, c, d; \t\ta = 2; \t\tb = 3; \t\tc = 5; \t\td = 10; \t\tSystem.out.println(\"Average of n nubers is: \" + (a + b + c + d) / 4); \t\t// OR \t\tScanner scanner = new Scanner(System.in); \t\tSystem.out.println(\"Enter 1st number: \"); \t\tint firstNumber = scanner.nextInt(); \t\tSystem.out.println(\"Enter 2nd number: \"); \t\tint secondNumber = scanner.nextInt(); \t\tSystem.out.println(\"Enter 3rd number: \"); \t\tint thirdNumber = scanner.nextInt(); \t\tSystem.out.println(\"Enter 4th number: \"); \t\tint fourthNumber = scanner.nextInt(); \t\tSystem.out.println(\"Enter 5th number: \"); \t\tint fifthNumber = scanner.nextInt(); \t\tSystem.out.println(\"Enter 6th number: \"); \t\tint sixthNumber = scanner.nextInt(); \t\tSystem.out.println(\"Enter Nth number: \"); \t\tint nthNumber = scanner.nextInt(); \t\tscanner.close(); \t\tSystem.out.println(\"Average of abouve input numbers is: \" \t\t\t\t+ (firstNumber + secondNumber + thirdNumber + fourthNumber + fifthNumber + sixthNumber + nthNumber) \t\t\t\t\t\t/ 7.0);\n",
    "reg_date": "2021-10-12T12:00:48.000Z"
  },
  {
    "id": 283,
    "keyword": null,
    "link": null,
    "title": " Java program to find largest in three numbers using ternary operator",
    "description": "// Java program to find smallest of three numbers using ternary operator import java.util.Scanner; public class SmallestOfThreeNumbers  {    public static void main(String[] args)     {       int number1, number2, number3, smallest, temp;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter first number: \");       number1 = sc.nextInt();       System.out.println(\"Please enter second number: \");       number2 = sc.nextInt();       System.out.println(\"Please enter third number: \");       number3 = sc.nextInt();       sc.close();       temp = number1 < number2 ? number1 : number2;       smallest = number3 < temp ? number3 : temp;       System.out.println(\"Smallest of three numbers using ternary operator: \" + smallest);    } }\n// Java program to find largest in three numbers using ternary operator import java.util.Scanner; public class LargestInThree  {    public static void main(String[] args)     {       int number1, number2, number3, largest;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter first number: \");       number1 = sc.nextInt();       System.out.println(\"Please enter second number: \");       number2 = sc.nextInt();       System.out.println(\"Please enter third number: \");       number3 = sc.nextInt();       largest = number3 > (number1 > number2 ? number1 : number2) ? number3 : ((number1 > number2) ? number1 : number2);       System.out.println(\"Largest in three numbers using ternary operator: \" + largest);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:49.000Z"
  },
  {
    "id": 284,
    "keyword": null,
    "link": null,
    "title": " Java program to find maximum and minimum number without using array",
    "description": "// Java program to find maximum and minimum number without using array import java.util.Scanner; public class MaximumMinimumWithoutArray {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter total number: \");       int numbers = sc.nextInt();       int maximum = Integer.MIN_VALUE;       int minimum = Integer.MAX_VALUE;       System.out.println(\"Please enter \" + numbers + \" numbers.\");       for(int a = 0; a < numbers; a++)       {          int current = sc.nextInt();          if(current > maximum)          {             maximum = current;          }          if(current < minimum)          {             minimum = current;          }       }       System.out.println(\"largest of \" + numbers + \" numbers is: \" + maximum);       System.out.println(\"smallest of \" + numbers + \" numbers is: \" + minimum);       sc.close();    } }\n// Find minimum and maximum values in a java array public class MaxMinValueInArray {    public static void main(String[] args)     {       int[] arrNumber = new int[]{50, 150, 250, 500, 160, 530};       int maximum = maxNumber(arrNumber);       System.out.println(\"Maximum value : \" + maximum);       // calling min function java       int minimum = minNumber(arrNumber);       System.out.println(\"Minimum value : \" + minimum);    }    // java find max in array    public static int maxNumber(int[] arr)    {       int maximumValue = arr[0];       for(int a = 1; a < arr.length; a++)       {          if(arr[a] > maximumValue)          {             maximumValue = arr[a];          }       }       return maximumValue;    }    // java min of array    public static int minNumber(int[] arr)    {       int minimumValue = arr[0];       // find minimum value in array java       for(int a = 1; a < arr.length; a++)       {          if(arr[a] < minimumValue)          {             minimumValue = arr[a];          }       }       return minimumValue;    } }\nInteger[] num = { 2, 4, 7, 5, 9 };         // using Collections.min() to find minimum element         // using only 1 line.         int min1 = Collections.min(Arrays.asList(num));          // using Collections.max() to find maximum element         // using only 1 line.         int max1 = Collections.max(Arrays.asList(num));          System.out.println(min1); // 2          System.out.println(max1); // 9\n",
    "reg_date": "2021-10-12T12:00:49.000Z"
  },
  {
    "id": 285,
    "keyword": null,
    "link": null,
    "title": " Java program to find perimeter of a rectangle",
    "description": "import java.util.Scanner; public class PerimeterOfRectangleDemo {        public static void main(String []args)    {       float length, width, perimeter;       Scanner sc = new Scanner(System.in);       System.out.print(\"Please enter length of rectangle: \");       length = sc.nextFloat();       System.out.print(\"Please enter width of rectangle: \");       width  = sc.nextFloat();       perimeter = 2 * (length + width);       System.out.println(\"Perimeter of rectangle: \" + perimeter);       sc.close();    }           }\n",
    "reg_date": "2021-10-12T12:00:49.000Z"
  },
  {
    "id": 286,
    "keyword": null,
    "link": null,
    "title": " Java program to find perimeter of square",
    "description": "java program to calculate area of square import java.util.Scanner; public class FindAreaOfSquare {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter side of square: \");       double side = sc.nextDouble();       // formula area of square = side * side       double area = side * side;       System.out.println(\"Area of square is: \" + area);       sc.close();    } }\nimport java.util.Scanner; public class SquarePerimeter {    public static void main(String[] args)    {       int side, perimeter;       Scanner sc = new Scanner(System.in);       System.out.print(\"Please enter side length of square: \");       side = sc.nextInt();       perimeter = 4 * side;       System.out.print(\"Perimeter of square is: \" + perimeter);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:49.000Z"
  },
  {
    "id": 287,
    "keyword": null,
    "link": null,
    "title": " Java program to find simple interest",
    "description": "// Java program to find simple interest import java.util.Scanner; public class SimpleInterestJavaProgram {    public static void main(String[] args)    {       float principal, rate, time;       Scanner sc = new Scanner(System.in);       System.out.print(\"Enter principal amount : \");       principal = sc.nextFloat();       System.out.print(\"Please enter rate annually : \");       rate = sc.nextFloat();       System.out.print(\"Please enter time(in years) : \");       time = sc.nextFloat();       float simpleInterest;       simpleInterest = (principal * time * rate) / 100;       System.out.println(\"The Simple Interest is : \" + simpleInterest);       sc.close();    } }\nimport java.util.Scanner;  public class Main {      public static void main(String[] args) {          // simple interest          Scanner scanner = new Scanner(System.in);          System.out.print(\"Enter principal amount: \");         float principal = scanner.nextFloat();          System.out.print(\"Enter time in years: \");         float time = scanner.nextFloat();          System.out.print(\"Enter rate: \");         float rate = scanner.nextFloat();          float simpleInterest = (principal * time * rate) / 100;          System.out.println(\"The simple interest is \" + simpleInterest);     } }\n",
    "reg_date": "2021-10-12T12:00:49.000Z"
  },
  {
    "id": 288,
    "keyword": null,
    "link": null,
    "title": " Java program to find smallest of three numbers using ternary operator",
    "description": "// Java program to find smallest of three numbers using ternary operator import java.util.Scanner; public class SmallestOfThreeNumbers  {    public static void main(String[] args)     {       int number1, number2, number3, smallest, temp;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter first number: \");       number1 = sc.nextInt();       System.out.println(\"Please enter second number: \");       number2 = sc.nextInt();       System.out.println(\"Please enter third number: \");       number3 = sc.nextInt();       sc.close();       temp = number1 < number2 ? number1 : number2;       smallest = number3 < temp ? number3 : temp;       System.out.println(\"Smallest of three numbers using ternary operator: \" + smallest);    } }\n// Java program to find largest in three numbers using ternary operator import java.util.Scanner; public class LargestInThree  {    public static void main(String[] args)     {       int number1, number2, number3, largest;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter first number: \");       number1 = sc.nextInt();       System.out.println(\"Please enter second number: \");       number2 = sc.nextInt();       System.out.println(\"Please enter third number: \");       number3 = sc.nextInt();       largest = number3 > (number1 > number2 ? number1 : number2) ? number3 : ((number1 > number2) ? number1 : number2);       System.out.println(\"Largest in three numbers using ternary operator: \" + largest);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:49.000Z"
  },
  {
    "id": 289,
    "keyword": null,
    "link": null,
    "title": " Java program to find the largest in three numbers using nested if",
    "description": "// Java program to find largest of four numbers using nested if public class LargestNestedIfDemo  {    public static void main(String[] args)     {       int num1 = 36, num2 = 35, num3 = 56;       if(num1 >= num2)        {          if(num1 >= num3)          {             System.out.println(num1 + \" is largest number.\");          }          else          {             System.out.println(num3 + \" is largest number.\");          }       }        else        {          if(num2 >= num3)          {             System.out.println(num2 + \" is largest number.\");          }          else          {             System.out.println(num3 + \" is largest number.\");          }       }    } }\npublic class Main{public static void main(String[] args) {double a = 500, b = 1000, c = 1500;if( a >= b && a >= c)System.out.println(a + \" largest number\");else if (b >= a && b >= c)System.out.println(b + \" largest number\");elseSystem.out.println(c + \" largest number\");}}\n",
    "reg_date": "2021-10-12T12:00:49.000Z"
  },
  {
    "id": 290,
    "keyword": null,
    "link": null,
    "title": " Java program to find the sum of all even numbers from 1 to 10",
    "description": "int sum = 0; for (int i = 1; i <= 10; i++) { // Logic for sum of EVEN \tif (i % 2 == 0) { \t\tsum = sum + i; \t\t} } System.out.println(\"Sum of all even from 1 to 10 is: \" + sum);\n//import classes import java.util.*;  public class chapter5no9 {     static Scanner console = new Scanner(System.in);      public static void main(String[] args)     {      //Part A     int firstNum;     int secondNum;     int sumEven;      System.out.println(\"Please enter an integer: \");     firstNum = console.nextInt();      System.out.println(\"Please enter another integer less than the first integer: \");     secondNum = console.nextInt();      //Part B     if (firstNum < secondNum)     {         System.out.print(\"Your second number is greater than the first.  So Please re-enter: \");         secondNum = console.nextInt();     }     else     {         System.out.print(\"Odd Numbers: \");         firstNum++;         while (firstNum > secondNum)         {             if (secondNum % 2 != 0)             {                 System.out.print(\" \" + secondNum);             }             secondNum++;         }          System.out.println();         System.out.print(\"Sum of Even Numbers: \");         firstNum++;         while (firstNum > secondNum)         {             if (secondNum % 2 != 0)             {                 System.out.print(\" \" + secondNum);             }             secondNum++;         }     } } \n",
    "reg_date": "2021-10-12T12:00:49.000Z"
  },
  {
    "id": 291,
    "keyword": null,
    "link": null,
    "title": " Java program to find the sum of first 100 numbers",
    "description": "\t\tint sum = 0; \t\tfor(int i = 1; i <= 100; i++) { \t\t\tsum = sum + i; \t\t} \t\tSystem.out.println(\"Sum of first 100 numbers is : \" + sum);\n",
    "reg_date": "2021-10-12T12:00:49.000Z"
  },
  {
    "id": 292,
    "keyword": null,
    "link": null,
    "title": " Java program to find trace of a matrix",
    "description": "// Java program to find trace of a matrix import java.util.Scanner; public class TraceMatrixDemo  {    public static void main(String[] args)     {       int[][] arrInput = new int[10][10];       int a, b;       double total = 0;       System.out.println(\"Please enter total rows and columns: \");       Scanner sc = new Scanner(System.in);       int row = sc.nextInt();       int column = sc.nextInt();       System.out.println(\"Please enter matrix: \");       for(a = 0; a < row; a++)       {          for(b = 0; b < column; b++)           {             arrInput[a][b] = sc.nextInt();             System.out.print(\" \");          }       }       System.out.println(\"Entered matrix is: \");       for(a = 0; a < row; a++)       {          for(b = 0; b < column; b++)          {             System.out.println(arrInput[a][b] + \" \");          }          System.out.println(\" \");       }       System.out.println(\"Trace of a matrix: \");       for(a = 0; a < row; a++)       {            for(b = 0; b < column; b++)          {             if(a == b)             {                total = total + (arrInput[a][b]);             }          }       }       System.out.println(total);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:49.000Z"
  },
  {
    "id": 293,
    "keyword": null,
    "link": null,
    "title": " Java program to insert an element at specific position in an array",
    "description": "import java.util.Scanner; public class InsertElement {    public static void main(String[] args)     {       int number, position, insert;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter number of elements in array: \");       number = sc.nextInt();       int[] arrNumbers = new int[number + 1];       System.out.println(\"Please enter \" + number + \" elements: \");       for(int a = 0; a < number; a++)       {          arrNumbers[a] = sc.nextInt();       }       System.out.println(\"Please enter position to insert element: \");       position = sc.nextInt();       System.out.println(\"Please enter element you want to insert: \");       insert = sc.nextInt();       for(int a = (number - 1); a >= (position - 1); a--)       {          arrNumbers[a + 1] = arrNumbers[a];       }       arrNumbers[position - 1] = insert;       System.out.println(\"After inserting element: \");       for(int a = 0; a < number; a++)       {          System.out.print(arrNumbers[a] + \",\");       }       System.out.print(arrNumbers[number]);       sc.close();    } }\n// ! IMPORTANTE ! // in JAVA an array is not the same as an ArrayList object!! // 1 - declare, instanciate and populate int arr[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };  // 2 - declare and instanciate an int array with maxSize // note: the index goes between 0 and maxSize-1 int newarr[] = new int[maxSize]; // 2.1 - insert the value n on the position pos newarr[pos] = n;  // 2.2 - insert values recursively for (i = 0; i < maxSize; i++) { newarr[i] = arr[i]; }\n",
    "reg_date": "2021-10-12T12:00:50.000Z"
  },
  {
    "id": 294,
    "keyword": null,
    "link": null,
    "title": " Java program to print 3x3 matrix",
    "description": "// Java program to print 3x3 matrix import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class JavaPrint3x3Matrix {    public static void main(String[] args) throws IOException     {       BufferedReader br = new BufferedReader(new InputStreamReader(System.in));       int[][] inputNumber = new int[3][3];       int a, b;       String strMatrix;       System.out.println(\"Please enter elements to print 3x3 matrix: \");       for(a = 0; a <= 2; a++)       {          for(b = 0; b <= 2; b++)          {             strMatrix = br.readLine();             inputNumber[a][b] = Integer.parseInt(strMatrix);          }       }       System.out.println(\"Elements in 3x3 matrix are: \");       System.out.println(\"\");       for(a = 0; a <= 2; a++)       {          for(b = 0; b <= 2; b++)          {             System.out.print(inputNumber[a][b] + \"\\t\");          }          System.out.println();       }    } }\n",
    "reg_date": "2021-10-12T12:00:50.000Z"
  },
  {
    "id": 295,
    "keyword": null,
    "link": null,
    "title": " Java program to print Floyd's triangle",
    "description": "import java.util.Scanner; public class PrintFloydsTriangle {    public static void main(String[] args)    {       int row, y, z, number = 1;       Scanner sc = new Scanner(System.in);       System.out.println(\"Enter the number of rows of floyd's triangle you want to print: \");       row = sc.nextInt();       System.out.println(\"Floyd's Triangle: \");       for(y = 1; y <= row; y++)       {          for(z = 1; z <= y; z++)          {             System.out.print(number + \" \");             number++;          }          System.out.println();       }       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:50.000Z"
  },
  {
    "id": 296,
    "keyword": null,
    "link": null,
    "title": " Java program to print all armstrong numbers between given range",
    "description": "public class ArmstrongBetween1To1000 {    public static void main(String[] args)    {       int number, n, total = 0;       System.out.println(\"Armstrong number between 1 to 1000: \");       for(int a = 1; a <= 1000; a++)       {          number = a;          while(number > 0)          {             n = number % 10;             total = total + (n * n * n);             number = number / 10;          }          if(total == a)          {             System.out.print(a + \" \");          }          total = 0;       }    } }\n// Java program to print all armstrong numbers between given range import java.util.Scanner; public class ArmstrongNumbersGivenRange  {    public static void main(String[] args)     {       int number, startNumber, endNumber, a, rem, n, count = 0;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter starting number range: \");       startNumber = sc.nextInt();       System.out.println(\"Please enter ending number range: \");       endNumber = sc.nextInt();       for(a = startNumber + 1; a < endNumber; a++)       {          n = a;          number = 0;          while(n != 0)          {             rem = n % 10;             number = number + rem * rem * rem;             n = n / 10;          }          if(a == number)          {             if(count == 0)             {                System.out.println(\"Armstrong numbers between given range \" + startNumber + \" and \" + endNumber + \": \");             }             System.out.print(a + \"  \");             count++;          }       }       // if there is no Armstrong number found between range       if(count == 0)       {          System.out.println(\"Sorry!! There's no armstrong number between given range \" + startNumber + \" and \" + endNumber);       }       sc.close();    } }\nimport java.util.Scanner;  /*  *@author: Mayank Manoj Raicha  * Armstrong Number in Java: A positive number is called armstrong number if it is equal to the sum of cubes of its digits   * for example 0, 1, 153, 370, 371, 407 etc.  * 153 = (1*1*1)+(5*5*5)+(3*3*3)  = 1+125+27 = 153  */ public class ArmstrongNumberExample {  \tpublic static void main(String[] args) { \t\t \t\tint sum = 0; \t\t \t\tScanner in = new Scanner(System.in); \t\tSystem.out.println(\"Enter the number: \"); \t\tint input = in.nextInt(); //1634 \t\tString val = String.valueOf(input); \t\tchar[] charArray = val.toCharArray();  //charArray[0] = \"1\" , charArray[1] = \"6\", charArray[2] = \"3\", charArray[3] = \"4\" \t\tint[] numArray = new int[charArray.length]; //Declaring this array to store the result of getPowerOfNumber() method for each digit. \t\t \t\t//for each char element calculate the power of number and store it in the \"cubedNumArray\" array. \t\tfor(int i=0; i<charArray.length; i++) { \t\t\tnumArray[i] = getPowerOfNumber(Integer.parseInt(String.valueOf(charArray[i])), charArray.length); \t\t\tsum = sum + numArray[i]; \t\t} \t\t       //Compare if the resulting sum is equal to the original input. \t\tif(sum == input) { \t\t\tSystem.out.println(\"Entered number is an Armstrong number.\"); \t\t}else { \t\t\tSystem.out.println(\"Entered number is NOT an Armstrong number.\"); \t\t} \t\t \t\tin.close(); \t}    \t//Calculate & Return the value of the first argument raised to the power of the second argument \tpublic static int getPowerOfNumber(int num, int count) { \t\treturn (int) Math.pow(num, count); \t} }\n",
    "reg_date": "2021-10-12T12:00:50.000Z"
  },
  {
    "id": 297,
    "keyword": null,
    "link": null,
    "title": " Java program to print alphabets",
    "description": "public class PrintAlphabetUsingForLoop {    public static void main(String[] args)    {       System.out.println(\"Printing alphabets from a to z : \");       char alphabet;       for(alphabet = 'a'; alphabet <= 'z'; alphabet++)       {          System.out.println(alphabet);       }    } }\npublic class Characters {      public static void main(String[] args) {          char c;          for(c = 'A'; c <= 'Z'; ++c)             System.out.print(c + \" \");     } }\n",
    "reg_date": "2021-10-12T12:00:50.000Z"
  },
  {
    "id": 298,
    "keyword": null,
    "link": null,
    "title": " Java program to print alphabets using ascii values",
    "description": "// Java program to print alphabets using ascii values public class PrintAlphabetUsingAscii  {    public static void main(String[] args)     {       char ch = 'B';       int ascii = ch;       int castAscii = (int) ch;          System.out.println(\"ascii value of \" + ch + \" is: \" + ascii);       System.out.println(\"ascii value of \" + ch + \" is: \" + castAscii);    } }\n",
    "reg_date": "2021-10-12T12:00:50.000Z"
  },
  {
    "id": 299,
    "keyword": null,
    "link": null,
    "title": " Java program to print armstrong number from 1 to 1000",
    "description": "public class ArmstrongBetween1To1000 {    public static void main(String[] args)    {       int number, n, total = 0;       System.out.println(\"Armstrong number between 1 to 1000: \");       for(int a = 1; a <= 1000; a++)       {          number = a;          while(number > 0)          {             n = number % 10;             total = total + (n * n * n);             number = number / 10;          }          if(total == a)          {             System.out.print(a + \" \");          }          total = 0;       }    } }\n// Java program to print all armstrong numbers between given range import java.util.Scanner; public class ArmstrongNumbersGivenRange  {    public static void main(String[] args)     {       int number, startNumber, endNumber, a, rem, n, count = 0;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter starting number range: \");       startNumber = sc.nextInt();       System.out.println(\"Please enter ending number range: \");       endNumber = sc.nextInt();       for(a = startNumber + 1; a < endNumber; a++)       {          n = a;          number = 0;          while(n != 0)          {             rem = n % 10;             number = number + rem * rem * rem;             n = n / 10;          }          if(a == number)          {             if(count == 0)             {                System.out.println(\"Armstrong numbers between given range \" + startNumber + \" and \" + endNumber + \": \");             }             System.out.print(a + \"  \");             count++;          }       }       // if there is no Armstrong number found between range       if(count == 0)       {          System.out.println(\"Sorry!! There's no armstrong number between given range \" + startNumber + \" and \" + endNumber);       }       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:50.000Z"
  },
  {
    "id": 300,
    "keyword": null,
    "link": null,
    "title": " Java program to print odd and even numbers in an array",
    "description": "import java.util.Scanner; public class EvenOddArray {     public static void main(String[] args)     {         int numbers;         Scanner sc = new Scanner(System.in);         System.out.print(\"Please enter elements in array : \");         numbers = sc.nextInt();         int[] arrNum = new int[numbers];         System.out.println(\"Enter \" + numbers + \" elements : \");         for(int a = 0; a < numbers; a++)          {             arrNum[a] = sc.nextInt();         }         // print odd numbers         System.out.print(\"Odd numbers : \");         for(int a = 0 ; a < numbers ; a++)         {             if(arrNum[a] % 2 != 0)             {                 System.out.print(arrNum[a] + \" \");             }         }         System.out.println(\"\");         // print even numbers         System.out.print(\"Even numbers : \");         for(int a = 0 ; a < numbers ; a++)         {             if(arrNum[a] % 2 == 0)             {                 System.out.print(arrNum[a] + \" \");             }         }         sc.close();     } }\n",
    "reg_date": "2021-10-12T12:00:51.000Z"
  },
  {
    "id": 301,
    "keyword": null,
    "link": null,
    "title": " Java program to print prime numbers from 2 to n",
    "description": "// Java program to print prime numbers from 2 to n import java.util.Scanner; public class PrimeNumberFrom2Ton {    public static void main(String[] args)     {       int loop, max;       System.out.print(\"Please enter highest (maximum) number: \");       Scanner sc = new Scanner(System.in);       max = sc.nextInt();       for(loop = 2; loop < max; ++loop)       {          if(findPrime(loop))          {             System.out.println(loop);          }       }       sc.close();    }    public static boolean findPrime(int number)    {       int a;       boolean boolPrime = true;       for(a = 2; a < number / 2; a++)       {          if(number%a == 0)          {             boolPrime = false;             break;          }       }       return boolPrime;    } }\n",
    "reg_date": "2021-10-12T12:00:51.000Z"
  },
  {
    "id": 302,
    "keyword": null,
    "link": null,
    "title": " Java program to print prime numbers in a given range",
    "description": "// Java program to print prime numbers in a given range public class PrimeNumberRangeDemo  {    public static void main(String[] args)     {       int lowerRange = 10, higherRange = 50;         while(lowerRange < higherRange)        {          boolean flag = false;          for(int a = 2; a <= lowerRange / 2; ++a)           {             if(lowerRange % a == 0)             {                flag = true;                break;             }          }          if(!flag && lowerRange != 0 && lowerRange != 1)              System.out.print(lowerRange + \" \");          ++lowerRange;       }    } }\n// Java program to print prime numbers from 2 to n import java.util.Scanner; public class PrimeNumberFrom2Ton {    public static void main(String[] args)     {       int loop, max;       System.out.print(\"Please enter highest (maximum) number: \");       Scanner sc = new Scanner(System.in);       max = sc.nextInt();       for(loop = 2; loop < max; ++loop)       {          if(findPrime(loop))          {             System.out.println(loop);          }       }       sc.close();    }    public static boolean findPrime(int number)    {       int a;       boolean boolPrime = true;       for(a = 2; a < number / 2; a++)       {          if(number%a == 0)          {             boolPrime = false;             break;          }       }       return boolPrime;    } }\nNow let&rsquo;s see print first 10 prime numbers in java.  public class FirstTenPrimeNumbers {    public static void main(String[] args)     {       int count = 0, number = 0, a = 1, b = 1;         while(number < 10)         {            b = 1;            count = 0;            while(b <= a)            {               if(a%b == 0)                   count++;               b++;          }            if(count == 2)            {               System.out.printf(\"%d \", a);               number++;            }            a++;         }    } }\n// Java program to print prime numbers upto n import java.util.Scanner; public class PrimeNumberUptoN {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       int a = 0;       int n = 0;       String strPrime = \"\";       System.out.println(\"Please enter the value of n: \");       int number = sc.nextInt();       for(a = 1; a <= number; a++)       {          int counter = 0;          for(n = a; n >= 1; n--)          {             if(a % n == 0)             {                counter = counter + 1;             }          }          if(counter == 2)          {             strPrime = strPrime + a + \" \";          }       }       System.out.println(\"prime numbers upto n are: \");       System.out.println(strPrime);       sc.close();    } }\nclass PrimeNumbers {    public static void main (String[] args)    {\t\t        int i =0;        int num =0;        //Empty String        String  primeNumbers = \"\";         for (i = 1; i <= 100; i++)                 { \t\t  \t             int counter=0; \t             for(num =i; num>=1; num--) \t  {              if(i%num==0) \t     {  \t\tcounter = counter + 1; \t     } \t  } \t  if (counter ==2) \t  { \t     //Appended the Prime number to the String \t     primeNumbers = primeNumbers + i + \" \"; \t  }\t        }\t        System.out.println(\"Prime numbers from 1 to 100 are :\");        System.out.println(primeNumbers);    } }\nIt will display the prime numbers between 1 and 100.  class PrimeNumbers {    public static void main (String[] args)    {\t\t        int i =0;        int num =0;        //Empty String        String  primeNumbers = \"\";         for (i = 1; i <= 100; i++)                 { \t\t  \t             int counter=0; \t             for(num =i; num>=1; num--) \t  {              if(i%num==0) \t     {  \t\tcounter = counter + 1; \t     } \t  } \t  if (counter ==2) \t  { \t     //Appended the Prime number to the String \t     primeNumbers = primeNumbers + i + \" \"; \t  }\t        }\t        System.out.println(\"Prime numbers from 1 to 100 are :\");        System.out.println(primeNumbers);    } }\n",
    "reg_date": "2021-10-12T12:00:51.000Z"
  },
  {
    "id": 303,
    "keyword": null,
    "link": null,
    "title": " Java program to print prime numbers upto n",
    "description": "// Java program to print prime numbers in a given range public class PrimeNumberRangeDemo  {    public static void main(String[] args)     {       int lowerRange = 10, higherRange = 50;         while(lowerRange < higherRange)        {          boolean flag = false;          for(int a = 2; a <= lowerRange / 2; ++a)           {             if(lowerRange % a == 0)             {                flag = true;                break;             }          }          if(!flag && lowerRange != 0 && lowerRange != 1)              System.out.print(lowerRange + \" \");          ++lowerRange;       }    } }\n// Java program to print prime numbers from 2 to n import java.util.Scanner; public class PrimeNumberFrom2Ton {    public static void main(String[] args)     {       int loop, max;       System.out.print(\"Please enter highest (maximum) number: \");       Scanner sc = new Scanner(System.in);       max = sc.nextInt();       for(loop = 2; loop < max; ++loop)       {          if(findPrime(loop))          {             System.out.println(loop);          }       }       sc.close();    }    public static boolean findPrime(int number)    {       int a;       boolean boolPrime = true;       for(a = 2; a < number / 2; a++)       {          if(number%a == 0)          {             boolPrime = false;             break;          }       }       return boolPrime;    } }\n// Java program to print prime numbers upto n import java.util.Scanner; public class PrimeNumberUptoN {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       int a = 0;       int n = 0;       String strPrime = \"\";       System.out.println(\"Please enter the value of n: \");       int number = sc.nextInt();       for(a = 1; a <= number; a++)       {          int counter = 0;          for(n = a; n >= 1; n--)          {             if(a % n == 0)             {                counter = counter + 1;             }          }          if(counter == 2)          {             strPrime = strPrime + a + \" \";          }       }       System.out.println(\"prime numbers upto n are: \");       System.out.println(strPrime);       sc.close();    } }\nclass PrimeNumbers {    public static void main (String[] args)    {\t\t        int i =0;        int num =0;        //Empty String        String  primeNumbers = \"\";         for (i = 1; i <= 100; i++)                 { \t\t  \t             int counter=0; \t             for(num =i; num>=1; num--) \t  {              if(i%num==0) \t     {  \t\tcounter = counter + 1; \t     } \t  } \t  if (counter ==2) \t  { \t     //Appended the Prime number to the String \t     primeNumbers = primeNumbers + i + \" \"; \t  }\t        }\t        System.out.println(\"Prime numbers from 1 to 100 are :\");        System.out.println(primeNumbers);    } }\npublic class PrimeNumbersFrom1To100 {    public static void main(String[] args)    {       int maxNumber = 100;       boolean prime = true;       String primeNumbers = \"\";       for(int a = 1; a <= maxNumber; a++)       {          prime = checkPrime(a);          if(prime)          {             primeNumbers = primeNumbers + a + \" \";          }       }       System.out.println(\"Display prime numbers from 1 to \" + maxNumber + \": \");       System.out.println(primeNumbers);    }    public static boolean checkPrime(int number)    {       int remainder;       for(int a = 2; a <= number / 2; a++)       {          remainder = number % a;          // if remainder is equal to 0 then number is not prime          if(remainder == 0)          {             return false;          }       }       return true;    } }\n",
    "reg_date": "2021-10-12T12:00:51.000Z"
  },
  {
    "id": 304,
    "keyword": null,
    "link": null,
    "title": " Java program to remove consonants from a string",
    "description": "// Java program to remove consonants from a string import java.util.Arrays; import java.util.List; public class RemoveConsonantsFromString {    public static void main(String[] args)     {       String str = \"hello world core java\";       System.out.println(\"Remove consonants from a string: \");       System.out.println(removeConsonantsFunction(str));    }    static boolean checkAlphabet(char ch)     {        if(ch >= 'a' && ch <= 'z')          return true;       if(ch >= 'A' && ch <= 'Z')           return true;        return false;     }    static String removeConsonantsFunction(String strConsonant)    {       Character[] chVowel = { 'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U' };       List<Character> li = Arrays.asList(chVowel);       StringBuffer sb = new StringBuffer(strConsonant);       for(int a = 0; a < sb.length(); a++)       {          if(checkAlphabet(sb.charAt(a)) && !li.contains(sb.charAt(a)))           {              sb.replace(a, a + 1, \"\");              a--;           }       }       return sb.toString();     } }\n",
    "reg_date": "2021-10-12T12:00:51.000Z"
  },
  {
    "id": 305,
    "keyword": null,
    "link": null,
    "title": " Java program to remove vowels from a string using switch case",
    "description": "// remove vowels from string import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class RemoveVowelsUsingSwitchCase {    public static void main(String[] args) throws IOException     {       BufferedReader br = new BufferedReader(new InputStreamReader(System.in));       String strFirst, str = \"\";       char ch, chCase;       int a, len;       System.out.println(\"Please enter a sentence : \");       strFirst = br.readLine();       len = strFirst.length();       for(a = 0; a < len; a++)        {          ch = strFirst.charAt(a);          chCase = Character.toLowerCase(ch);          switch(chCase)           {             case 'a':             case 'e':             case 'i':             case 'o':             case 'u':                break;             default:                str = str + ch;          }       }       System.out.println(\"String without vowels : \" + str);    } }\n// Java program to delete vowels in a given string import java.util.*; public class RemoveVowelsInString {    public static void main(String[] args)    {       String str = \"Deekshit Prasad\";       System.out.println(\"Given string: \" + str);       str = str.replaceAll(\"[AaEeIiOoUu]\", \"\");       System.out.println(\"After deleting vowels in given a string: \" + str);    } }\n",
    "reg_date": "2021-10-12T12:00:51.000Z"
  },
  {
    "id": 306,
    "keyword": null,
    "link": null,
    "title": " Java program to remove vowels from string using StringBuffer class",
    "description": "// java program to remove vowels from a string using StringBuffer class import java.util.Arrays; import java.util.List; public class RemoveVowels {    static String removeVowel(String strVowel)    {       Character[] vowel = {'a', 'e', 'i', 'o', 'u','A','E','I','O','U'};       List<Character> li = Arrays.asList(vowel);       StringBuffer strBuffer = new StringBuffer(strVowel);       for(int a = 0; a < strBuffer.length(); a++)       {          if(li.contains(strBuffer.charAt(a)))          {             strBuffer.replace(a, a + 1, \"\") ;             a--;          }       }       return strBuffer.toString();    }    public static void main(String[] args)    {       String strInput = \"Hello World Java\";       System.out.println(removeVowel(strInput));    } }\n",
    "reg_date": "2021-10-12T12:00:51.000Z"
  },
  {
    "id": 307,
    "keyword": null,
    "link": null,
    "title": " Java program to sort names in an alphabetical order",
    "description": "// java sort string characters alphabetically import java.util.Arrays; public class CharactersAlphabetically {    public static void main(String[] args)    {       String strInput = \"flowerbrackets\";       // converting string to char array       char[] ch = strInput.toCharArray();       // sorting char array       Arrays.sort(ch);       // converting char array to string       String strSorted = String.valueOf(ch);       System.out.println(\"sort string characters alphabetically: \" + strSorted);    } }\nimport java.util.Scanner; public class SortNamesAlphabeticalOrder {    public static void main(String[] args)    {       int number;       String str;       Scanner sc1 = new Scanner(System.in);       System.out.println(\"Please enter number of strings: \");       number = sc1.nextInt();       String[] names = new String[number];       Scanner sc2 = new Scanner(System.in);       System.out.println(\"Enter all strings: \");       for(int a = 0; a < number; a++)       {          names[a] = sc2.nextLine();       }       for(int a = 0; a < number; a++)       {          for(int b = a + 1; b < number; b++)          {             // java alphabetical sort             if(names[a].compareTo(names[b]) > 0)             {                str = names[a];                names[a] = names[b];                names[b] = str;             }          }       }       System.out.println(\"After sorting names in an alphabetical order: \");       for(int a = 0; a < number - 1; a++)       {          System.out.println(names[a] + \", \");       }       System.out.print(names[number - 1]);       sc1.close();       sc2.close();    } }\nAssuming that those are Strings, use the convenient static method sort&hellip;   java.util.Collections.sort(listOfCountryNames)\n// Arrange words of a sentence in alphabetical order in java import java.util.Set; import java.util.StringTokenizer; import java.util.TreeSet; public class ArrangeInAlphabeticalOrder  {    public static void main(String[] args)     {       Set set = new TreeSet();       String strInput = \"hi all welcome to flower brackets blog\";       System.out.println(\"Before arranging sentence in alphabetical order: \" + strInput);       StringTokenizer strToken = new StringTokenizer(strInput,\" \");       while(strToken.hasMoreElements())       {          set.add(strToken.nextElement());       }       System.out.println(\"After arranging sentence in alphabetical order: \" + set);    } }\n",
    "reg_date": "2021-10-12T12:00:51.000Z"
  },
  {
    "id": 308,
    "keyword": null,
    "link": null,
    "title": " Java program to swap two numbers using function",
    "description": "import java.util.Scanner; // java swap function public class SwapTwoNumberDemo  {    int numOne, numTwo;    public void swapNum(SwapTwoNumberDemo stn)    {       int temp;       temp = stn.numOne;       stn.numOne = stn.numTwo;       stn.numTwo = temp;    }    public static void main(String[] args)     {       SwapTwoNumberDemo obj = new SwapTwoNumberDemo();       try       {          Scanner sc = new Scanner(System.in);                       System.out.println(\"First number : \");          obj.numOne = sc.nextInt();          System.out.println(\"Second number : \");          obj.numTwo = sc.nextInt();          obj.swapNum(obj);          System.out.println(\"After swapping - numOne : \" + obj.numOne + \", numTwo : \" + obj.numTwo);          sc.close();       }       catch(Exception ex)       {          System.out.println(\"Exception: \" + ex.toString());       }    } }\nint a, b, c; a = 5; b = 3; System.out.println(\"Before SWAP a = \" + a + \", b = \" + b); c = a; a = b; b = c; System.out.println(\"After SWAP a = \" + a + \", b = \" + b);\nint a = 5; int b = 6;  int temp = a; a = b; b = temp;  // now a is 6 and b is 5. \n",
    "reg_date": "2021-10-12T12:00:52.000Z"
  },
  {
    "id": 309,
    "keyword": null,
    "link": null,
    "title": " Java remove character from string",
    "description": "// remove last character from string in java public class SubstringDemo {    public static void main(String[] args)    {       String strInput = \"Flower Brackets!\";       String strOutput = strInput.substring(0, strInput.length() - 1);       System.out.println(strOutput);    } }\n// how to remove particular character from string public class RemoveParticularCharacter {    public static void main(String[] args)    {       String strInput = \"Hello world java\";       System.out.println(removeCharacter(strInput, 6));    }    public static String removeCharacter(String strRemove, int r)    {       return strRemove.substring(0, r) + strRemove.substring(r + 1);    } }\nString str = \"abcdDCBA123\"; String strNew = str.replace(\"a\", \"\"); // strNew is 'bcdDCBA123'\n# subString(int start, int end);  String a = \"Hello!\"; b = a.subString(0,a.length()-1) #Remove the last String # b should be \"Hello\" then\n String str = \"abcdDCBA123\"; String strNew = str.replace(\"a\", \"\"); // strNew is 'bcdDCBA123' \n// Java remove character from string public class RemoveOnlyLetters {    public static void main(String[] args)    {       String strExample = \"jd15352kLJJD55185716kdkLJJJ\";       System.out.println(\"Before: \" + strExample);       strExample = strExample.replaceAll(\"[a-zA-Z]\", \"\");       System.out.println(\"After: \" + strExample);    } }\n",
    "reg_date": "2021-10-12T12:00:52.000Z"
  },
  {
    "id": 310,
    "keyword": null,
    "link": null,
    "title": " Java repeat last 3 letters of string",
    "description": "word + word.substring(word.length()-3, word.length())\n",
    "reg_date": "2021-10-12T12:00:52.000Z"
  },
  {
    "id": 311,
    "keyword": null,
    "link": null,
    "title": " Java reverse string array",
    "description": "int length = array.length; \t\tfor(int i=0;i<length/2;i++) { \t\t\tint swap = array[i]; \t\t\tarray[i] = array[length-i-1]; \t\t\tarray[length-i-1] = swap; \t\t} or Collections.reverse(Arrays.asList(array)); \npublic class ReverseString {     public static void main(String[] args) {         String s1 = \"neelendra\";         for(int i=s1.length()-1;i>=0;i--)             {                 System.out.print(s1.charAt(i));             }     } }\nString string=\"whatever\"; String reverse = new StringBuffer(string).reverse().toString(); System.out.println(reverse); \n// reverse a string using reverse() method of StringBuilder class class ReverseUsingReverseMethod {    public static void main(String[] args)    {       String str = \"Hello world Java\";       StringBuilder sb = new StringBuilder();       // append string to StringBuilder       sb.append(str);       sb = sb.reverse();       // printing reversed String       System.out.println(sb);    } }\nString rev = new StringBuilder(\"Your String\").reverse().toString();\n// reverse string array in java using collections import java.util.ArrayList; import java.util.Collections; import java.util.List; public class ReverseStringArrayUsingCollections {    public static void main(String[] args)    {       // creating list of strings       List<String> li = new ArrayList<String>();       li.add(\"java\");       li.add(\"core\");       li.add(\"world\");       li.add(\"hello\");       System.out.println(\"Given list: \" + li);       Collections.reverse(li);       System.out.println(\"After using collections: \" + li);    } }\n",
    "reg_date": "2021-10-12T12:00:52.000Z"
  },
  {
    "id": 312,
    "keyword": null,
    "link": null,
    "title": " Java scanner example",
    "description": "import java.util.Scanner;  // import scanner   Scanner myScanner = new Scanner(System.in); // Make scanner obj  String inputString = myScanner.nextLine(); // Take whole line  boolean inputBoolean = myScanner.nextBoolean(); //Boolean input  long inputLong = myScanner.nextLong(); //Interger,long ... input\nimport java.util.Scanner;\t\t//Import Scanner in java  class classname{   public void methodname(){     Scanner s_name = new Scanner(System.in);\t//Scanner declaration     //Use Scanner object to take input     int val1    =  s_name.nextInt();\t\t\t//int     float val2  =  s_name.nextFloat();\t\t\t//float     double val3 =  s_name.nextDouble();\t\t\t//double     string name =  s_name.nextLine();\t\t\t//string     char ch     =  s_name.nextLine().charAt(0);\t//character   }}\nimport java.util.Scanner;  Public class Scanner { \tPublic static void main(String[] args) {     \t// Scanner *scanner name here* = new Scanner(System.in);       \tScanner scan = new Scanner(System.in);       \tSystem.out.println(\"Type anything and the scanner will take that input and print it\");       \tString next = scan.next();       \tSystem.out.println(next);     }  }\nimport java.util.Scanner;//import Scanner  Scanner input=new Scanner(System.in);//Create the scanner Obj  float numF = input.nextFloat();//Returns float int num1 = input.nextInt(); //Returns int byte byte1 = input.nextByte();//Returns Byte long lg1 = input.nextLong();//Returns long boolean b1 = input.nextBoolean();//Returns bool double num2 = input.nextDouble();//Returns Double String nome = input.nextLine();//Returns String  //execution is pause until you give input  \n// import Scanner import java.util.Scanner;  // Initialize Scanner Scanner input = new Scanner(System.in);  // Test program with Scanner System.out.println(\"What is your name?\"); String name = input.nextLine();  System.out.println(\"Hello,\" + name + \" , it is nice to meet you!\");\nimport java.util.Scanner; public class AddTwoNumbers2 {      public static void main(String[] args) {                  int num1, num2, sum;         Scanner sc = new Scanner(System.in);         System.out.println(\"Enter First Number: \");         num1 = sc.nextInt();                  System.out.println(\"Enter Second Number: \");         num2 = sc.nextInt();                  sc.close();         sum = num1 + num2;         System.out.println(\"Sum of these numbers: \"+sum);     } }  Output:\n",
    "reg_date": "2021-10-12T12:00:52.000Z"
  },
  {
    "id": 313,
    "keyword": null,
    "link": null,
    "title": " Java sort Map by values",
    "description": "Map<String, Integer> unSortedMap = getUnSortedMap();           System.out.println(\"Unsorted Map : \" + unSortedMap);   //LinkedHashMap preserve the ordering of elements in which they are inserted LinkedHashMap<String, Integer> sortedMap = new LinkedHashMap<>();   unSortedMap.entrySet()     .stream()     .sorted(Map.Entry.comparingByValue())     .forEachOrdered(x -> sortedMap.put(x.getKey(), x.getValue()));   System.out.println(\"Sorted Map   : \" + sortedMap);   Output:   Unsorted Map : {alex=1, charles=4, david=2, brian=5, elle=3} Sorted Map   : {alex=1, david=2, elle=3, charles=4, brian=5} \n//---------------------------------------------------------------------- // in ascending order: Map<String, Integer> unSortedMap = getUnSortedMap();           System.out.println(\"Unsorted Map : \" + unSortedMap);   //LinkedHashMap preserve the ordering of elements in which they are inserted LinkedHashMap<String, Integer> sortedMap = new LinkedHashMap<>();   unSortedMap.entrySet()     .stream()     .sorted(Map.Entry.comparingByValue())     .forEachOrdered(x -> sortedMap.put(x.getKey(), x.getValue()));   System.out.println(\"Sorted Map   : \" + sortedMap);   Output:   Unsorted Map : {alex=1, charles=4, david=2, brian=5, elle=3} Sorted Map   : {alex=1, david=2, elle=3, charles=4, brian=5}   //---------------------------------------------------------------------- // in descending order: Map<String, Integer> unSortedMap = getUnSortedMap();           System.out.println(\"Unsorted Map : \" + unSortedMap);   //LinkedHashMap preserve the ordering of elements in which they are inserted LinkedHashMap<String, Integer> reverseSortedMap = new LinkedHashMap<>();   //Use Comparator.reverseOrder() for reverse ordering unSortedMap.entrySet()     .stream()     .sorted(Map.Entry.comparingByValue(Comparator.reverseOrder()))      .forEachOrdered(x -> reverseSortedMap.put(x.getKey(), x.getValue()));   System.out.println(\"Reverse Sorted Map   : \" + reverseSortedMap);   Output:   Unsorted Map        : {alex=1, charles=4, david=2, brian=5, elle=3} Reverse Sorted Map  : {brian=5, charles=4, elle=3, david=2, alex=1} \n",
    "reg_date": "2021-10-12T12:00:52.000Z"
  },
  {
    "id": 314,
    "keyword": null,
    "link": null,
    "title": " Java string replace",
    "description": "public static void main(String args[]){   String s1=\"my name is khan my name is java\";   String replaceString=s1.replace(\"is\",\"was\");//replaces all occurrences of \"is\" to \"was\"   System.out.println(replaceString);   }}   \nString str1 = \"abc123abc123\"; String str2 = str1.replace(\"abc\", \"0\"); System.out.println(str2); // 01230123 \nString str = \"..............................\";           int index = 5;             char ch = '|';            StringBuilder string = new StringBuilder(str);          string.setCharAt(index, ch);           System.out.println(string); \nString s1 = \"my name is khan and my name is java\"; String replaceString = s1.replace(\"is\",\"was\"); //replaces all occurrences of \"is\" to \"was\" System.out.println(replaceString);\nString a = \"Cool\"; a = a.replace(\"o\",\"yy\"); \npublic static void main(String args[]){   String s1=\"my name is khan my name is java\";   String replaceString=s1.replace(\"is\",\"was\");//replaces all occurrences of \"is\" to \"was\"   System.out.println(replaceString);   }}  \n",
    "reg_date": "2021-10-12T12:00:52.000Z"
  },
  {
    "id": 315,
    "keyword": null,
    "link": null,
    "title": " Java switch case with string",
    "description": "switch(x){ \tcase(0):\t\t//if x == 0     \t//do some stuff     \tbreak;     //add more cases   default:\t\t\t//when x does not match any case     //do some stuff     break; }\n// Java switch case with string public class SwitchCaseWithString  {    public static void main(String[] args)     {       String str = \"twelve\";        switch(str)        {           case \"ten\":               System.out.println(\"ten\");               break;          case \"eleven\":               System.out.println(\"eleven\");               break;          case \"twelve\":               System.out.println(\"twelve\");               break;           default:               System.out.println(\"doesn't match\");        }    } }\n",
    "reg_date": "2021-10-12T12:00:53.000Z"
  },
  {
    "id": 316,
    "keyword": null,
    "link": null,
    "title": " Java tree from star",
    "description": "public static void main(String[] args) {          for (int i = 0; i < 10; i++) {             for (int j = 0; j < 10 - i; j++)                 System.out.print(\" \");             for (int k = 0; k < (2 * i + 1); k++)                 System.out.print(\"*\");             System.out.println();         }     }\n",
    "reg_date": "2021-10-12T12:00:53.000Z"
  },
  {
    "id": 317,
    "keyword": null,
    "link": null,
    "title": " Java treemap comparator() method example",
    "description": "// Java treemap comparator() method example import java.util.Comparator; import java.util.NavigableMap; import java.util.TreeMap; public class TreemapComparatorExample  {    public static void main(String[] args)     {       NavigableMap<Integer, String> nm = new TreeMap<Integer, String>();       // populating tree map       nm.put(101, \"apple\");        nm.put(102, \"banana\");        nm.put(103, \"apricot\");        nm.put(104, \"blackberry\");        nm.put(105, \"avocado\");        // printing TreeMap        System.out.println(\"TreeMap: \" + nm);       // using comparator() method       Comparator c = nm.comparator();       // print comparator value       System.out.println(\"Comparator value: \" + c);    } }\n",
    "reg_date": "2021-10-12T12:00:53.000Z"
  },
  {
    "id": 318,
    "keyword": null,
    "link": null,
    "title": " Java use Base64",
    "description": "//For Strings:      //Encode:   public static String encode(String input) {        return Base64.getEncoder().encodeToString(input.getBytes());    }    //Decode:   public static String decode(String input) {        byte[] decodedBytes = Base64.getDecoder().decode(input);       return new String(decodedBytes);    }    //For Urls   //Encode:   public static String encodeURL(String input) {        return Base64.getUrlEncoder().encodeToString(input.getBytes());    }    //Decode:   public static String decodeURL(String input) {        byte[] decodedBytes = Base64.getUrlDecoder().decode(input);       return new String(decodedBytes);    }\n",
    "reg_date": "2021-10-12T12:00:53.000Z"
  },
  {
    "id": 319,
    "keyword": null,
    "link": null,
    "title": " Javafx button color",
    "description": "//making a red button in javafx  Button button = new Button(\"My Button\"); button.setStyle(\"-fx-background-color: #ff0000; \"); \nBackgroundImage backgroundImage = new BackgroundImage( new Image( getClass().getResource(\"/testing/background.jpg\").toExternalForm()), BackgroundRepeat.NO_REPEAT, BackgroundRepeat.NO_REPEAT, BackgroundPosition.DEFAULT, BackgroundSize.DEFAULT);         Background background = new Background(backgroundImage);          Button button = new Button( \"Click me!\");         button.setBackground(background);\n/*can address these properties: */ -fx-border-width -fx-border-color -fx-background-color -fx-font-size -fx-text-fill  /*\tsee source for more examples \tsee JavaFX CSS Reference Guide for additional properties: \thttps://docs.oracle.com/javafx/2/api/javafx/scene/doc-files/cssref.html */\n",
    "reg_date": "2021-10-12T12:00:53.000Z"
  },
  {
    "id": 320,
    "keyword": null,
    "link": null,
    "title": " Javafx hbox",
    "description": "//just for me lol, pls don't delete //using javafx hbox package com.jenkov.javafx.layouts;  import javafx.application.Application; import javafx.scene.Scene; import javafx.scene.control.Button; import javafx.scene.layout.HBox; import javafx.stage.Stage;  public class HBoxExperiments extends Application  {    @Override   public void start(Stage primaryStage)     throws Exception {      primaryStage.setTitle(\"HBox Experiment 1\");      Button button1 = new Button(\"Button Number 1\");     Button button2 = new Button(\"Button Number 2\");      HBox hbox = new HBox(button1, button2);      Scene scene = new Scene(hbox, 200, 100);     primaryStage.setScene(scene);     primaryStage.show();   }    public static void main(String[] args) {     Application.launch(args);   } } \n",
    "reg_date": "2021-10-12T12:00:53.000Z"
  },
  {
    "id": 321,
    "keyword": null,
    "link": null,
    "title": " Javatpoint Java",
    "description": "Refer to this website: http://allaboutjava.com/\n",
    "reg_date": "2021-10-12T12:00:53.000Z"
  },
  {
    "id": 322,
    "keyword": null,
    "link": null,
    "title": " Jlabel icon",
    "description": "ImageIcon image = new ImageIcon(\"c:\\\\path\\\\image.png\"); imagelabel = new JLabel(character, image, JLabel.CENTER); frame.add(imagelabel);\n",
    "reg_date": "2021-10-12T12:00:53.000Z"
  },
  {
    "id": 323,
    "keyword": null,
    "link": null,
    "title": " Josephus Problem",
    "description": "import java.util.*;import java.io.*;import java.lang.*;class GFG {         static int jos(int n, int k)    {        if(n == 1)            return 0;        else            return (jos(n - 1, k) + k) % n;    }    static int myJos(int n, int k)    {        return jos(n, k) + 1;    }             public static void main(String args[])     {         System.out.println(myJos(70, 5));      }}\n",
    "reg_date": "2021-10-12T12:00:53.000Z"
  },
  {
    "id": 324,
    "keyword": null,
    "link": null,
    "title": " JsonArray get first Object",
    "description": "private static int FIRST_ELEMENT = 0;  public static void main(String[] args) {     JSONArray json = new JSONArray(\"[{\\\"Hello1\\\":\\\"1\\\"},{\\\"Hello2\\\":\\\"2\\\"}]\");      if (json.length() > 0) {         System.out.println(\"First: \" + json.getJSONObject(FIRST_ELEMENT).toString());// parse the date instead of toString()     } } \n",
    "reg_date": "2021-10-12T12:00:54.000Z"
  },
  {
    "id": 325,
    "keyword": null,
    "link": null,
    "title": " LCM with java",
    "description": "/* Easiest but slowest method */ class LCM   {       static void find_LCM(int num1, int num2)       {           System.out.println(\"Number 1: \" + num1);           System.out.println(\"Number 2: \" + num2);           long check_num = 1;           while (true)           {               if ((check_num%num1) == 0 && (check_num%num2) == 0)               {                    long LCM = check_num;                    System.out.println(\"The LCM is: \" + LCM);                    break;               }               else                    ++check_num;           }        }   } \n",
    "reg_date": "2021-10-12T12:00:54.000Z"
  },
  {
    "id": 326,
    "keyword": null,
    "link": null,
    "title": " Leap year using conditional operator in java",
    "description": "// Leap year using conditional operator in java import java.util.Scanner; public class LeapYearExample  {    public static void main(String[] args)     {       long number, year, a;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter any year :\");       year = sc.nextLong();               if(year != 0)       {          number = (year % 400 == 0)?(a = 1):((year % 100 == 0)?(a = 0):((year % 4 == 0)?(a = 1):(a = 0)));                if(number == 1)          {             System.out.println(year + \" is a leap year\");          }          else          {             System.out.println(year + \" is not a leap year\");          }       }       else       {          System.out.println(\"year zero does not exist \");       }       sc.close();    } }\nimport java.util.Scanner;public class Main{public static void main(String[] args){int year;System.out.println(\"Enter the year\");Scanner sc = new Scanner(System.in);year = sc.nextInt();if (((year % 4 == 0) && (year % 100!= 0)) || (year@0 == 0))System.out.println(\"it is a leap year\");elseSystem.out.println(\"it is not a leap year\");}}\n",
    "reg_date": "2021-10-12T12:00:54.000Z"
  },
  {
    "id": 327,
    "keyword": null,
    "link": null,
    "title": " Linear search in java",
    "description": "public static int linear(int[] arr, int keyValue) {   int pos = -1;       for (int i = 0; i < arr.length; i++)     {         if (arr[i] == keyValue)         {             pos = i;             break;         } \t} \treturn pos; }\npublic class LinearSearchExample {    // here function returns index of element x in arrLinear    static int searchNumber(int[] arrLinear, int key)    {       int num = arrLinear.length;       for(int a = 0; a < num; a++)       {          // here we are returning the index of the element if found          if(arrLinear[a] == key)             return a;       }       // here we are returning -1 if element is not found       return -1;    }    public static void main(String[] args)    {       int[] arrLinear = {15, 25, 35, 55, 75, 95};       int key = 55;       int output = searchNumber(arrLinear, key);       if(output == -1)       {          System.out.println(\"Sorry!!Element is not present\");       }       else       {          System.out.println(\"Element is present at index \" + output);       }    } }\n",
    "reg_date": "2021-10-12T12:00:54.000Z"
  },
  {
    "id": 328,
    "keyword": null,
    "link": null,
    "title": " Linked List implementation",
    "description": "typedef struct node{     int value; //this is the value the node stores     struct node *next; //this is the node the current node points to. this is how the nodes link }node;  node *createNode(int val){     node *newNode = malloc(sizeof(node));     newNode->value = val;     newNode->next = NULL;     return newNode; }\npublic class LinkedList {      private Node head;     private int length = 0;      public LinkedList() {         this.head = new Node(null);     }      public int size() {         return length;     }        // Adds an element to the end of the list     public void add(Object data)  {          Node node = new Node(data);         Node iterator = head;         while (iterator.getNext() != null){             iterator = iterator.getNext();         }         iterator.setNext(node);         length++;     }        // Obtains an element by index     public Object get(int index) {          if (head.getNext() == null || index >= length){             return null;         }          Node iterator = head.getNext();         int counter = 0;          while(counter < index){              iterator = iterator.getNext();             counter++;         }         return iterator.getData();      }        // Returns the index of the element in the list     public int indexOf(Object data) {         Node obj=head;         for (int i = 0; i < length; i++) {             obj = obj.getNext();             if (obj.getData().equals(data)) {                 return i;             }         }         return -1;         //throw new Exception(\"Data not found\");     }        // Removes an element from the list     public boolean remove(Object data) {          if (head.getNext() == null){             return false;         }          Node iterator = head;          while(iterator.getNext() != null){              if (iterator.getNext().getData().equals(data)){                 iterator.setNext(iterator.getNext().getNext());                 length--;                 return true;             }              iterator = iterator.getNext();         }          return false;     }      private class Node {          private Object data;         private Node next;          public Node(Object data) {             this.data = data;             next = null;         }          public Object getData() {             return data;         }          public void setData(Object data) {             this.data = data;         }          public Node getNext() {             return next;         }          public void setNext(Node next) {             this.next = next;         }     }  }\nimport java.util.LinkedList; LinkedList<Integer> myList = new LinkedList<Integer>(); myList.add(0); myList.remove(0);//Remove at index 0 myList.size(); myList.get(0);//Return element at index 0\nList<Integer> list = new LinkedList<>();\n",
    "reg_date": "2021-10-12T12:00:54.000Z"
  },
  {
    "id": 329,
    "keyword": null,
    "link": null,
    "title": " List of strings to array of strings java",
    "description": "String string = list.stream().map(Object::toString).collect(Collectors.joining(\"\"));\n        String[]result=stringList.toArray(new String[0]);\nlist.toArray(new String[0]);\n",
    "reg_date": "2021-10-12T12:00:54.000Z"
  },
  {
    "id": 330,
    "keyword": null,
    "link": null,
    "title": " Lists",
    "description": "List<String> names = List.of(\"John\", \"Jack\"); // M&oacute;dos&iacute;thatatlan lista  List<String> moreNumbers = new ArrayList<>(); // M&oacute;dos&iacute;that&oacute; lista, diamond oper&aacute;tor, primit&iacute;v t&iacute;pus nem lehet  List<String> copy = new ArrayList<>(numbers); // M&oacute;dos&iacute;that&oacute; m&aacute;solat  List<String> namesToModify = new ArrayList<>(List.of(\"John\", \"Jack\")); // M&oacute;dos&iacute;that&oacute; lista egy utas&iacute;t&aacute;sban  copy.add(\"Jane\"); // [\"John\", \"Jack\", \"Jane\"] - hozz&aacute;ad&aacute;s copy.remove(\"John\"); // [\"Jack\", \"Jane\"] - elt&aacute;vol&iacute;t&aacute;s  boolean containsJohn = names.contains(\"John\"); // false - nincs benne  int size = names.size(); // 2 - hossza  int indexOfJane = names.indexOf(\"Jane\") // 1 - 1. indexen  for(String name: names){     System.out.println(name); }\n",
    "reg_date": "2021-10-12T12:00:54.000Z"
  },
  {
    "id": 331,
    "keyword": null,
    "link": null,
    "title": " LocalDateTime to XMLGregorianCalendar",
    "description": "LocalDateTime localDatetime = LocalDateTime.now(); DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd'T'HH:mm:ss\");  String formattedDate = localDatetime.format(formatter); XMLGregorianCalendar calendar = DatatypeFactory.newInstance().newXMLGregorianCalendar(formattedDate);\n",
    "reg_date": "2021-10-12T12:00:54.000Z"
  },
  {
    "id": 332,
    "keyword": null,
    "link": null,
    "title": " Lunar New Year",
    "description": "// Happy Lunar New Year! :>\nHappy lunar new year!!!\n",
    "reg_date": "2021-10-12T12:00:54.000Z"
  },
  {
    "id": 333,
    "keyword": null,
    "link": null,
    "title": " Make a negative number positive Java",
    "description": "Math.abs(-5); // returns 5\n",
    "reg_date": "2021-10-12T12:00:55.000Z"
  },
  {
    "id": 334,
    "keyword": null,
    "link": null,
    "title": " Manifest merger failed androidx",
    "description": "Inside app > build.gradle : dependencies { \t...     // add the following single line for androidx     implementation 'androidx.appcompat:appcompat:1.1.0'     // implementation before testImplementation     testImplementation ...... }  Inside gradle.properties : \tandroid.useAndroidX=true \tandroid.enableJetifier=true      Inside AndroidManifest.xml : \t<application     \t....         tools:replace=\"android:appComponentFactory\"         android:appComponentFactory=\"whateverString\"         ....     >\n",
    "reg_date": "2021-10-12T12:00:55.000Z"
  },
  {
    "id": 335,
    "keyword": null,
    "link": null,
    "title": " Mapping int to int (in Java)",
    "description": "Map<Integer, Integer> map = new HashMap<Integer, Integer>(); map.put(1, 0);\n",
    "reg_date": "2021-10-12T12:00:55.000Z"
  },
  {
    "id": 336,
    "keyword": null,
    "link": null,
    "title": " Markdown heading",
    "description": "***  ---  _________________ \n# Bold I just love **bold text**. I just love __bold text__. Love**is**bold  # Italic Italicized text is the *cat's meow*. Italicized text is the _cat's meow_. A*cat*meow\n# Title \t//Creates a h1 ## Title \t//Creates a h2 ##### Title  //Creates a h5\n",
    "reg_date": "2021-10-12T12:00:55.000Z"
  },
  {
    "id": 337,
    "keyword": null,
    "link": null,
    "title": " Matrix multiplication in java using function",
    "description": "public class Matrix {   private double[][] multiply(double[][] matrixOne, double[][] matrixTwo) {             assert matrixOne[0].length == matrixTwo.length: \"width of matrix one must be equal to height of matrix two\";             double[][] product = new double[matrixOne.length][matrixTwo[0].length];     \t\t//fills output matrix with 0's             for(short l = 0; l<matrixOne.length; l++) {                 for(short m = 0; m<matrixTwo[0].length; m++) {                     product[l][m] = 0;                 }             }     \t\t//takes the dot product of the rows and columns and adds them to output matrix             for(short i = 0; i<matrixOne.length; i++) {                 for(short j = 0; j<matrixTwo[0].length; j++) {                     for(short k = 0; k<matrixOne[0].length; k++) {                         product[i][j] += matrixOne[i][k] * matrixTwo[k][j];                     }                 }             }             return product;         } }\n    public class MatrixMultiplicationExample{       public static void main(String args[]){       //creating two matrices         int a[][]={{1,1,1},{2,2,2},{3,3,3}};         int b[][]={{1,1,1},{2,2,2},{3,3,3}};                  //creating another matrix to store the multiplication of two matrices         int c[][]=new int[3][3];  //3 rows and 3 columns                //multiplying and printing multiplication of 2 matrices         for(int i=0;i<3;i++){         for(int j=0;j<3;j++){         c[i][j]=0;           for(int k=0;k<3;k++)           {           c[i][j]+=a[i][k]*b[k][j];           }//end of k loop       System.out.print(c[i][j]+\" \");  //printing matrix element       }//end of j loop       System.out.println();//new line         }         }}  \n// matrix multiplication java public class MatrixMultiplicationJavaDemo  {    public static int[][] multiplyMatrix(int[][] matrix1, int[][] matrix2, int row, int column, int col)    {       int[][] multiply = new int[row][col];       for(int a = 0; a < row; a++)        {          for(int b = 0; b < col; b++)           {             for(int k = 0; k < column; k++)              {                multiply[a][b] += matrix1[a][k] * matrix2[k][b];             }          }       }       return multiply;    }    public static void printMatrix(int[][] multiply)     {       System.out.println(\"Multiplication of two matrices: \");       for(int[] row : multiply)        {          for(int column : row)           {             System.out.print(column + \"    \");          }          System.out.println();       }    }    public static void main(String[] args)     {       int row = 2, col = 3;       int column = 2;       int[][] matrixOne = {{1, 2, 3}, {4, 5, 6}};       int[][] matrixTwo = {{7, 8}, {9, 1}, {2, 3}};       int[][] product = multiplyMatrix(matrixOne, matrixTwo, row, col, column);       printMatrix(product);    } }\n",
    "reg_date": "2021-10-12T12:00:55.000Z"
  },
  {
    "id": 338,
    "keyword": null,
    "link": null,
    "title": " Maven Dependency for flyway",
    "description": "<plugin>     <groupId>org.flywaydb</groupId>     <artifactId>flyway-maven-plugin</artifactId>     <version>4.0.3</version>  </plugin>\n",
    "reg_date": "2021-10-12T12:00:55.000Z"
  },
  {
    "id": 339,
    "keyword": null,
    "link": null,
    "title": " Min value map",
    "description": "Map -- Min value Write a method that can return the minimum value from ta map (DO NOT use sort method)   Solution:  public  static  int  minValue( Map<String,Integer>    map  ) {         SortedSet<Integer> sm = new TreeSet<>(map.values());         return sm.first( ); }\n",
    "reg_date": "2021-10-12T12:00:55.000Z"
  },
  {
    "id": 340,
    "keyword": null,
    "link": null,
    "title": " Mirror Reflection leetcode",
    "description": "class Solution {     double EPS = 1e-6;      public int mirrorReflection(int p, int q) {         double x = 0, y = 0;         double rx = p, ry = q;              // While it hasn't reached a receptor,...         while (!( close(x, p) && (close(y, 0) || close(y, p))                   || close(x, 0) && close (y, p) )) {             // Want smallest t so that some x + rx, y + ry is 0 or p             // x + rxt = 0, then t = -x/rx etc.             double t = 1e9;             if ((-x / rx) > EPS) t = Math.min(t, -x / rx);             if ((-y / ry) > EPS) t = Math.min(t, -y / ry);             if (((p-x) / rx) > EPS) t = Math.min(t, (p-x) / rx);             if (((p-y) / ry) > EPS) t = Math.min(t, (p-y) / ry);              x += rx * t;             y += ry * t;              if (close(x, p) || close(x, 0)) rx *= -1;             if (close(y, p) || close(y, 0)) ry *= -1;         }          if (close(x, p) && close(y, p)) return 1;         return close(x, p) ? 0 : 2;     }      public boolean close(double x, double y) {         return Math.abs(x - y) < EPS;     } }\n",
    "reg_date": "2021-10-12T12:00:55.000Z"
  },
  {
    "id": 341,
    "keyword": null,
    "link": null,
    "title": " More than one file was found with OS independent path 'META-INF/metadata.jvm.kotlin module'",
    "description": "android {             packagingOptions {         exclude 'META-INF/DEPENDENCIES'         exclude 'META-INF/LICENSE'         exclude 'META-INF/LICENSE.txt'         exclude 'META-INF/license.txt'         exclude 'META-INF/NOTICE'         exclude 'META-INF/NOTICE.txt'         exclude 'META-INF/notice.txt'         exclude 'META-INF/ASL2.0'         exclude(\"META-INF/*.kotlin_module\")        }           }\n",
    "reg_date": "2021-10-12T12:00:56.000Z"
  },
  {
    "id": 342,
    "keyword": null,
    "link": null,
    "title": " Multiplication table in java using array",
    "description": "// Multiplication table in java using array public class MultiplicationTableUsingArray {    public static void main(String[] args)    {       int[][] arrMultipleTable = new int[10][10];       int row = 1, column = 1;       for(int a = 0; a < arrMultipleTable.length; a++)       {          for(int b = 0; b < arrMultipleTable[a].length; b++)          {             arrMultipleTable[a][b] = row * column;             column = column + 1;          }          row = row + 1;          column = 1;       }       for(int a = 0; a < arrMultipleTable.length; a++)       {          for(int b = 0; b < arrMultipleTable[a].length; b++)          {             System.out.print(\" \" + arrMultipleTable[a][b] + \"\\t| \");          }          System.out.print(\"\\n\");       }    } }\n",
    "reg_date": "2021-10-12T12:00:56.000Z"
  },
  {
    "id": 343,
    "keyword": null,
    "link": null,
    "title": " Multiply two numbers without using arithmetic operators in java",
    "description": "import java.util.Scanner; public class MultiplyWithoutArithmeticOperators {    static int multiplyNumber(int num1, int num2)    {       int output = 0;       boolean boolNegative = (num1 < 0 && num2 >= 0) || (num2 < 0 && num1 >= 0);       boolean boolPositive = !boolNegative;       num1 = Math.abs(num1);       for(int a = 0; a < num1; a++)       {          if(boolNegative && num2 > 0 || boolPositive && num2 < 0)          {             output -= num2;          }          else          {             output += num2;          }       }       return output;    }    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       System.out.print(\"Please enter first number: \");       int num1 = sc.nextInt();       System.out.print(\"Please enter second number: \");       int num2 = sc.nextInt();       System.out.println(\"Multiplication of two numbers: \" + multiplyNumber(num1, num2));       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:56.000Z"
  },
  {
    "id": 344,
    "keyword": null,
    "link": null,
    "title": " Nested classes in java",
    "description": "// anonymous inner class as method argument. interface HelloWorld {    String print(); } public class AnonymousInnerDemo {    // method accepts object of interface HelloWorld    public void display(HelloWorld m)    {       System.out.println(m.print() + \"example of anonymous inner class as method argument.\");    }    public static void main(String[] args)    {       AnonymousInnerDemo obj = new AnonymousInnerDemo();       // pass an anonymous inner class as an argument       obj.display(new HelloWorld() {          public String print() {             return \"Hi! \";          }       });    } }\n// example on inner class in java class OuterDemo {    int num;    // inner class    private class InnerDemo    {       public void display()       {          System.out.println(\"inner class\");       }    }    // access inner class from method within    void printInner()    {       InnerDemo objInner = new InnerDemo();       objInner.display();    } } public class InnerClassExample {    public static void main(String[] args)    {       OuterDemo objOuter = new OuterDemo();       objOuter.printInner();    } }\n// example on method local inner class in java. class Outer {    // outer class instance method    void display()    {       int num = 96;       // method-local inner class       class MethodLocalInner       {          public void show()          {             System.out.println(\"in method local inner class \" + num);          }       } // end of inner class       // access method local inner class       MethodLocalInner objInner = new MethodLocalInner();       objInner.show();    }    public static void main(String[] args)    {       Outer objOuter = new Outer();       objOuter.display();    } }\n// example on static nested classes java import java.util.*; public class OuterClass {    static class NestedClass    {       public void display()        {          System.out.println(\"static nested class example\");       }    }    public static void main(String[] args)     {       OuterClass.NestedClass nested = new OuterClass.NestedClass();\t        nested.display();    } }\n// Anonymous inner class in java abstract class Anonymous {    public abstract void display(); } public class AnonymousInnerExample {    public static void main(String[] args)    {       Anonymous obj = new Anonymous() {          public void display() {             System.out.println(\"anonymous inner class example\");          }       };       obj.display();    } }\n// how to access private members of a class. class OuterClass {    // outer class private variable    private int number = 56;    // inner class    public class InnerClass    {       public int showNumber()       {          System.out.println(\"showNumber() method of inner class.\");          return number;       }    } } public class AccessPrivateMembers {    public static void main(String[] args)    {       OuterClass objOuter = new OuterClass();       OuterClass.InnerClass objInner = objOuter.new InnerClass();       System.out.println(objInner.showNumber());    } }\n",
    "reg_date": "2021-10-12T12:00:56.000Z"
  },
  {
    "id": 345,
    "keyword": null,
    "link": null,
    "title": " New Year's Eve",
    "description": "Happy New Year my grepper friends!!!\nCheers to a New Year Grepper Community!!  \nif is \"12/31/2020\":   print(\"HAPPY NEW YEARS EVE!\")\nWOOOOOOO! Cheers to a New Year!!\nDon't miss clicking on the ICON right of this screen! Wohuuuuuu!\nHappy New Year! Goodbye 2020!\nOMG ! CANT WAIT FOR 2021!!!\nYo coders, happy 2021... Let's make it fantastic !\nSystem.out.print(\"Happy new  year\");\nGood Bye 2020,Hey Wassup? 2021\n",
    "reg_date": "2021-10-12T12:00:56.000Z"
  },
  {
    "id": 346,
    "keyword": null,
    "link": null,
    "title": " No Java files found that extend CordovaActivity.",
    "description": "remove : cordova platform rm android add : cordova platform add android\n",
    "reg_date": "2021-10-12T12:00:56.000Z"
  },
  {
    "id": 347,
    "keyword": null,
    "link": null,
    "title": " Not supported for DML operations",
    "description": "public interface LimitRepository extends JpaRepository<CLimit, Long> {    @Transactional   @Modifying   @Query(\"delete from CLimit l where l.trader.id =:#{#trader.id}\")   void deleteLimitsByTrader(@Param(\"trader\") CTrader trader);  } \n",
    "reg_date": "2021-10-12T12:00:56.000Z"
  },
  {
    "id": 348,
    "keyword": null,
    "link": null,
    "title": " Overload the default constructor to take a parameter for each attribute and set it",
    "description": "class StudentData {    private int stuID;    private String stuName;    private int stuAge;    StudentData()    {        //Default constructor        stuID = 100;        stuName = \"New Student\";        stuAge = 18;    }    StudentData(int num1, String str, int num2)    {        //Parameterized constructor        stuID = num1;        stuName = str;        stuAge = num2;    }    //Getter and setter methods    public int getStuID() {        return stuID;    }    public void setStuID(int stuID) {        this.stuID = stuID;    }    public String getStuName() {        return stuName;    }    public void setStuName(String stuName) {        this.stuName = stuName;    }    public int getStuAge() {        return stuAge;    }    public void setStuAge(int stuAge) {        this.stuAge = stuAge;    }     public static void main(String args[])    {        //This object creation would call the default constructor        StudentData myobj = new StudentData();        System.out.println(\"Student Name is: \"+myobj.getStuName());        System.out.println(\"Student Age is: \"+myobj.getStuAge());        System.out.println(\"Student ID is: \"+myobj.getStuID());         /*This object creation would call the parameterized         * constructor StudentData(int, String, int)*/        StudentData myobj2 = new StudentData(555, \"Chaitanya\", 25);        System.out.println(\"Student Name is: \"+myobj2.getStuName());        System.out.println(\"Student Age is: \"+myobj2.getStuAge());        System.out.println(\"Student ID is: \"+myobj2.getStuID());    } }\n",
    "reg_date": "2021-10-12T12:00:57.000Z"
  },
  {
    "id": 349,
    "keyword": null,
    "link": null,
    "title": " Pascal's triangle in java using recursion",
    "description": "// Pascal's triangle in java using recursion import java.util.Scanner; public class RecursionPascalTriangle  {    public static void display(int num)    {       for(int a = 0; a < num; a++)       {          for(int b = 0; b <= a; b++)          {             System.out.println(pascalTriangle(a, b) + \" \");          }          System.out.println();       }    }    public static int pascalTriangle(int a, int b)    {       if(b == 0 || b == a)       {          return 1;       }       else       {          return pascalTriangle(a - 1, b - 1) + pascalTriangle(a - 1, b);       }    }    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter number of rows: \");       int row = sc.nextInt();       display(row);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:57.000Z"
  },
  {
    "id": 350,
    "keyword": null,
    "link": null,
    "title": " Pascal triangle in java using array",
    "description": "// Pascal triangle in java using array import java.util.Scanner; public class PascalTriangleUsingArray {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       int num, a, b, arr[][], p;       System.out.println(\"Please enter number of rows: \");       num = sc.nextInt();       p = num - 1;       arr = new int[num][num];       for(a = 0; a < num; a++)       {          for(b = 0; b <= a; b++)             if(b == 0 || b == a)                arr[a][b] = 1;             else                arr[a][b] = arr[a - 1][b - 1] + arr[a - 1][b];       }       System.out.println(\"Pascal's triangle: \\n\");       for(a = 0; a < num; a++)       {          for(b = 0; b <= p; b++)             System.out.print(\" \");          p--;          for(b = 0; b <= a; b++)             System.out.print(arr[a][b] + \" \");          System.out.println();       }       sc.close();    } }\n// Pascal triangle program in java without using arrays import java.util.Scanner; public class PascalTriangleDemo  {    public static void main(String[] args)     {       System.out.println(\"Please enter number of rows to print pascal's triangle: \");       Scanner sc = new Scanner(System.in);       int row = sc.nextInt();                   System.out.println(\"Pascal's triangle with \" + row + \" rows.\");       displayPascalTriangle(row);       sc.close();    }    public static void displayPascalTriangle(int r)     {       for(int a = 0; a < r; a++)        {          int num = 1;          System.out.printf(\"%\" + (r - a) * 2 + \"s\", \"\");          for(int b = 0; b <= a; b++)           {             System.out.printf(\"M\", num);             num = num * (a - b) / (b + 1);          }          System.out.println();       }    } }\n/* Author: Jeffrey Huang */ import java.util.*; public class PascalTriangleCreator {     public static long factorial(long n){         /*         The whole purpose of this method is to find the factorial of a number,         since java does not have a built in method for it. Calculating n choose          r is done using factorial, and since this code will be used repeatedly,         it is wise to put it in a separate method.         */         long factorial;         if (n==0){             factorial=1;         }         else{             factorial=1;             for (int counter=1;counter<=n;counter++){                 factorial=factorial*counter;             }         }         return factorial;     }          public static long FinalValue(long n, long r){         //Calculates n choose r by calling the factorial method.         return factorial(n) / ( factorial(n-r) * factorial(r) );     }       public static void main(String[] args) {      Scanner sc=new Scanner (System.in);      long rows=1;      long i,j;      while (rows!=0){   System.out.println(\"How many rows of Pascal's triangle would you like to print? (0 to stop; 1-20 rows)\");   rows=sc.nextLong();   //The following while loop ensures that the user cannot input an invalid number.   while (rows<0||rows>20){       System.out.println(\"Invalid input.\");       System.out.println(\"How many rows of Pascal's triangle would you like to print? (0 to stop; 1-20 rows)\");       rows=sc.nextLong();   }   /*   The following if else block makes the code more efficient. Otherwise, if the user    enters zero at any other point than at the start of the loop, the program will go    through the long process of trying to print a triangle before terminating the   program.       Using the following method, it is true that rows==0 is tested for twice, but   it shortens the execution time immensely. And we know that when zero is true   for the if statement, it is guaranteed to be true when breaking the loop.   */   if (rows==0){       System.out.println(\"Program terminated by user.\");   }   else{   for(i = 0; i < rows; i++) {       //Iterates through the number of rows required.          for(j = 0; j <= rows-i; j++){            System.out.print(\"   \");             //Iterates the printing of spaces.          }          for(j = 0; j <= i; j++){            if ((FinalValue(i, j))>9999) {              System.out.print(\" \");             }            else if ((FinalValue(i, j))>999){              System.out.print(\"  \");             }            else if ((FinalValue(i, j))>99){              System.out.print(\"   \");             }            else if ((FinalValue(i, j))>9){              System.out.print(\"    \");             }            else{             System.out.print(\"     \");             }             System.out.print(FinalValue(i, j));             //Prints a number of spaces plus a number.          }          System.out.println();         }         }      }  sc.close();   } }\nimport java.util.Scanner; class Pascal_Triangle {//opening of class     public static void main(String args[])     {//opening of main         Scanner sc=new Scanner(System.in);         int n,i,j,a[][];         //taking user's input.         System.out.println(\"HOW MANY STEPS?\");         n=sc.nextInt();         a=new int[n][n];         //filling the 2D matrix.         for(i=0;i<n;i++){             for(j=0;j<=i;j++)                 if(j==0 || j==i)                     a[i][j]=1;                 else                     a[i][j]=a[i-1][j-1]+a[i-1][j];         }         //displaying the Pascal's Triangle as the output.         System.out.println(\"\\nOUTPUT:\\n\");         for(i=0;i<n;i++)         {             for(j=0;j<=i;j++)                 System.out.print(a[i][j]+\"\\t\");              System.out.println();         }     }//clossing of main }//closing of class\nimport java.util.Scanner; class Pascal_Triangle {//opening of class     public static void main(String args[])     {//opening of main         Scanner sc=new Scanner(System.in);         int n,i,j,a[][],s;         //taking user's input.         System.out.println(\"HOW MANY STEPS?\");         n=sc.nextInt();         s=n-1;          a=new int[n][n];         //filling the 2D matrix.         for(i=0;i<n;i++){             for(j=0;j<=i;j++)                 if(j==0 || j==i)                     a[i][j]=1;                 else                     a[i][j]=a[i-1][j-1]+a[i-1][j];         }         //displaying the Pascal's Triangle as the output.         System.out.println(\"\\nOUTPUT:\\n\");         for(i=0;i<n;i++)         {             for(j=0;j<=s;j++)             System.out.print(\" \");//printing blank spaces at the beginning of rows                          s--;                          for(j=0;j<=i;j++)                 System.out.print(a[i][j]+\" \");              System.out.println();         }     }//clossing of main }//closing of class\n",
    "reg_date": "2021-10-12T12:00:57.000Z"
  },
  {
    "id": 351,
    "keyword": null,
    "link": null,
    "title": " Pascal triangle program in java without using arrays",
    "description": "// Pascal triangle in java using array import java.util.Scanner; public class PascalTriangleUsingArray {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       int num, a, b, arr[][], p;       System.out.println(\"Please enter number of rows: \");       num = sc.nextInt();       p = num - 1;       arr = new int[num][num];       for(a = 0; a < num; a++)       {          for(b = 0; b <= a; b++)             if(b == 0 || b == a)                arr[a][b] = 1;             else                arr[a][b] = arr[a - 1][b - 1] + arr[a - 1][b];       }       System.out.println(\"Pascal's triangle: \\n\");       for(a = 0; a < num; a++)       {          for(b = 0; b <= p; b++)             System.out.print(\" \");          p--;          for(b = 0; b <= a; b++)             System.out.print(arr[a][b] + \" \");          System.out.println();       }       sc.close();    } }\n// Pascal triangle program in java without using arrays import java.util.Scanner; public class PascalTriangleDemo  {    public static void main(String[] args)     {       System.out.println(\"Please enter number of rows to print pascal's triangle: \");       Scanner sc = new Scanner(System.in);       int row = sc.nextInt();                   System.out.println(\"Pascal's triangle with \" + row + \" rows.\");       displayPascalTriangle(row);       sc.close();    }    public static void displayPascalTriangle(int r)     {       for(int a = 0; a < r; a++)        {          int num = 1;          System.out.printf(\"%\" + (r - a) * 2 + \"s\", \"\");          for(int b = 0; b <= a; b++)           {             System.out.printf(\"M\", num);             num = num * (a - b) / (b + 1);          }          System.out.println();       }    } }\n",
    "reg_date": "2021-10-12T12:00:57.000Z"
  },
  {
    "id": 352,
    "keyword": null,
    "link": null,
    "title": " Plugin with id 'com.android.application' not found.",
    "description": "// Top-level build file where you can add configuration options common to all sub-projects/modules. buildscript {     repositories {         mavenCentral()     }     dependencies {         classpath 'com.android.tools.build:gradle:0.xx.y'     } }  allprojects {     repositories {         mavenCentral()     } } \n",
    "reg_date": "2021-10-12T12:00:57.000Z"
  },
  {
    "id": 353,
    "keyword": null,
    "link": null,
    "title": " Polymorphisim",
    "description": "Polymorphism means objects behave in different forms.  ■ It occurs when parent class/interface  calls to child class' objects  Sub class can never be the reference type of Super Class Object ■ The reference of an object decides what is accessible. ■ Abstract class and interface are meant to be reference type, CAN NEVER BE IN OBJECT TYPE Static polymorphism. Ex: method overloading.   Dynamic polymorphism Ex: method overriding  EXAMPLE: WebDriver driver = new ChromeDriver();  driver.get()-> chrome, firefox we are initializing Chrome browser using  Selenium WebDriver. It also means we are creating  a reference variable (driver) of the interface (WebDriver)  and creating an Object (from ChromeDriver class).  I am using Polymorphism In my framework in Driver Class.  By making return type WebDriver I will be able to return  ChromeDriverObject and FireFoxDriverObject. That&rsquo;s how I achieve  multi browser testing. Reference type decides what can be called or accessed WebDriver driver = getDriver(); getDriver() ==> chrome, firefox, ...          List<WebElement> list = new ArrayList<>(); List being reference to ArrayList. List is a super type of ArrayList.  Map being reference to HasMap. Set is being reference to HashSet.\n",
    "reg_date": "2021-10-12T12:00:57.000Z"
  },
  {
    "id": 354,
    "keyword": null,
    "link": null,
    "title": " Prime number program in java using scanner",
    "description": "// Prime number program in java using scanner import java.util.Scanner; public class PrimeNumberUsingScanner  {    public static void main(String[] args)     {       Scanner sc = new Scanner(System.in);         System.out.println(\"Please enter a number to check prime number: \");         int number = sc.nextInt();         if(checkPrimeNumber(number))        {            System.out.println(number + \" is a prime number\");         }       else        {            System.out.println(number + \" is not a prime number\");         }       sc.close();    }    public static boolean checkPrimeNumber(int number)     {         if(number <= 1)        {            return false;       }         for(int a = 2; a < Math.sqrt(number); a++)        {            if(number % a == 0)           {               return false;            }         }         return true;      } }\npublic class Prime {     public static void main(String[] args) {          int num = 29;         boolean flag = false;         for(int i = 2; i <= num/2; ++i){             if(num % i == 0){                 flag = true;                 break;             }         }          if (!flag)             System.out.println(num + \" is a prime number.\");         else             System.out.println(num + \" is not a prime number.\"); }}\npublic class Prime {     public static void main(String[] args) {          int num = 29;         boolean flag = false;         for(int i = 2; i <= num/2; ++i){             if(num % i == 0){                 flag = true;                 break;             }         }          if (!flag)             System.out.println(num + \" is a prime number.\");         else             System.out.println(num + \" is not a prime number.\"); }} Source:www.progra \n",
    "reg_date": "2021-10-12T12:00:57.000Z"
  },
  {
    "id": 355,
    "keyword": null,
    "link": null,
    "title": " Primitive Type vs. Reference Type",
    "description": "int a = 11; // Primitive Type   Integer b = new Integer(11); // Reference Type  \n+================+=========+===================================================================================+ | Primitive type | Size    | Description                                                                       | +================+=========+===================================================================================+ | byte           | 1 byte  | Stores whole numbers from -128 to 127                                             | +----------------+---------+-----------------------------------------------------------------------------------+ | short          | 2 bytes | Stores whole numbers from -32,768 to 32,767                                       | +----------------+---------+-----------------------------------------------------------------------------------+ | int            | 4 bytes | Stores whole numbers from -2,147,483,648 to 2,147,483,647                         | +----------------+---------+-----------------------------------------------------------------------------------+ | long           | 8 bytes | Stores whole numbers from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 | +----------------+---------+-----------------------------------------------------------------------------------+ | float          | 4 bytes | Stores fractional numbers. Sufficient for storing 6 to 7 decimal digits           | +----------------+---------+-----------------------------------------------------------------------------------+ | double         | 8 bytes | Stores fractional numbers. Sufficient for storing 15 decimal digits               | +----------------+---------+-----------------------------------------------------------------------------------+ | char           | 2 bytes | Stores a single character/letter or ASCII values                                  | +----------------+---------+-----------------------------------------------------------------------------------+ | boolean        | 1 bit   | Stores true or false values                                                       | +----------------+---------+-----------------------------------------------------------------------------------+\n",
    "reg_date": "2021-10-12T12:00:57.000Z"
  },
  {
    "id": 356,
    "keyword": null,
    "link": null,
    "title": " Print pattern in java 1 01 101 0101 10101",
    "description": "// Print pattern in java 1 01 101 0101 10101 import java.util.Scanner; public class PatternInJava {    public static void main(String[] args)    {       int a, b, x, y;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter number of rows to print pattern: \");       int rows = sc.nextInt();       for(a = 1; a <= rows; a++)       {          if(a % 2 == 0)          {             x = 1;             y = 0;          }          else          {             x = 0;             y = 1;          }          for(b = 1; b <= a; b++)          {             if(b % 2 == 0)             {                System.out.print(x);             }             else             {                System.out.print(y);             }          }          System.out.println(\"\");          sc.close();       }    } }\n",
    "reg_date": "2021-10-12T12:00:57.000Z"
  },
  {
    "id": 357,
    "keyword": null,
    "link": null,
    "title": " Problem adding rectangle in javaFX",
    "description": "import javafx.scene.shape.Rectangle; \n",
    "reg_date": "2021-10-12T12:00:57.000Z"
  },
  {
    "id": 358,
    "keyword": null,
    "link": null,
    "title": " Program to check whether the number is prime or not in java",
    "description": "public class Main  { public static void main(String[] args)  { int num = 100; boolean flag = false; for (int i = 2; i <= num / 2; ++i)  { if (num % i == 0) { flag = true; break; } } if (!flag) System.out.println(num + \" is a prime number\"); else System.out.println(num + \" is not a prime number\"); } }\n#include <stdio.h>void main(){int value, rem;printf(\"Enter an int \");scanf(\"%d\", &value);rem = value % 2;if (rem == 0)printf(\"%d is an even int\\n\", value);elseprintf(\"%d is an odd int\\n\", value);}\n",
    "reg_date": "2021-10-12T12:00:58.000Z"
  },
  {
    "id": 359,
    "keyword": null,
    "link": null,
    "title": " Program to find area of rectangle using inheritance in java",
    "description": "// Program to find area of rectangle using inheritance in java class RectangleDimension {    int length;    int breadth; } class Rectangle extends RectangleDimension {    int area;    void findArea()    {       area = length * breadth;    } } public class AreaOfRectangleUsingInheritance  {    public static void main(String[] args)     {       Rectangle obj = new Rectangle();       obj.length = 50;       obj.breadth = 20;       obj.findArea();       int area = obj.length * obj.breadth;       System.out.println(\"Area of rectangle is: \" + area);    } }\n",
    "reg_date": "2021-10-12T12:00:58.000Z"
  },
  {
    "id": 360,
    "keyword": null,
    "link": null,
    "title": " Program type already present: android.support.v4.app.INotificationSideChannel",
    "description": "implementation 'com.android.support:appcompat-v7:28.0.0-alpha1' implementation 'com.android.support:design:28.0.0-alpha1' implementation 'com.android.support:support-v4:28.0.0-alpha1' \nandroid.useAndroidX = true android.enableJetifier = false \n",
    "reg_date": "2021-10-12T12:00:58.000Z"
  },
  {
    "id": 361,
    "keyword": null,
    "link": null,
    "title": " Quicksort java",
    "description": "import java.util.Arrays; public class QuickSortInJava {    int partition(int[] arrNumbers, int low, int high)    {       int pivot = arrNumbers[high];       // smaller element index       int a = (low - 1);       for(int b = low; b < high; b++)       {          // if current element is smaller than the pivot          if(arrNumbers[b] < pivot)          {             a++;             // swap arrNumbers[a] and arrNumbers[b]             int temp = arrNumbers[a];             arrNumbers[a] = arrNumbers[b];             arrNumbers[b] = temp;          }       }       // swap arrNumbers[a + 1] and arrNumbers[high] or pivot       int temp = arrNumbers[a + 1];       arrNumbers[a + 1] = arrNumbers[high];       arrNumbers[high] = temp;       return a + 1;    }    void sort(int[] arrNumbers, int low, int high)    {       if (low < high)       {          int p = partition(arrNumbers, low, high);          /* recursive sort elements before          partition and after partition */          sort(arrNumbers, low, p - 1);          sort(arrNumbers, p + 1, high);       }    }    static void displayArray(int[] arrNumbers)    {       int s = arrNumbers.length;       for(int a = 0; a < s; ++a)          System.out.print(arrNumbers[a] + \" \");       System.out.println();    }    public static void main(String[] args)    {       int[] arrNumbers = {59, 74, 85, 67, 56, 29, 68, 34};       int s = arrNumbers.length;       QuickSortInJava obj = new QuickSortInJava();       obj.sort(arrNumbers, 0, s - 1);       System.out.println(\"After sorting array: \");       displayArray(arrNumbers);    } }\n//GOD's quicksort public static <E extends Comparable<E>> List<E> sort(List<E> col) {   if (col == null || col.isEmpty())     return Collections.emptyList();   else {     E pivot = col.get(0);     Map<Integer, List<E>> grouped = col.stream()       .collect(Collectors.groupingBy(pivot::compareTo));     return Stream.of(sort(grouped.get(1)), grouped.get(0), sort(grouped.get(-1)))       .flatMap(Collection::stream).collect(Collectors.toList());   } }\n import java.util.*; class QuickSort {     //selects last element as pivot, pi using which array is partitioned.     int partition(int intArray[], int low, int high) {         int pi = intArray[high];         int i = (low-1); // smaller element index         for (int j=low; j<high; j++) {             // check if current element is less than or equal to pi             if (intArray[j] <= pi) {                 i++;                 // swap intArray[i] and intArray[j]                 int temp = intArray[i];                 intArray[i] = intArray[j];                 intArray[j] = temp;             }         }          // swap intArray[i+1] and intArray[high] (or pi)         int temp = intArray[i+1];         intArray[i+1] = intArray[high];         intArray[high] = temp;          return i+1;     }       //routine to sort the array partitions recursively     void quick_sort(int intArray[], int low, int high) {         if (low < high) {             //partition the array around pi=>partitioning index and return pi             int pi = partition(intArray, low, high);              // sort each partition recursively             quick_sort(intArray, low, pi-1);             quick_sort(intArray, pi+1, high);         }     } }  class QUICK_SORT{     public static void main(String args[]) {         //initialize a numeric array, intArray         int intArray[] = {3,2,1,6,5,4};         int n = intArray.length;         //print the original array         System.out.println(\"Original Array: \" + Arrays.toString(intArray));         //call quick_sort routine using QuickSort object         QuickSort obj = new QuickSort();         obj.quick_sort(intArray, 0, n-1);         //print the sorted array         System.out.println(\"\\nSorted Array: \" + Arrays.toString(intArray));     } }\n\t//Worst case: if pivot was at the end and all numbers are greater than the pivot \t//Best case: (n log n): due to you cutting the array in half n times \t// Average case(n log n): ^  public class QuickSort { \t \tpublic static void main(String [] args) { \t\tint [] arr = {5, 1, 6, 4, 2, 3}; \t\tquickSort(arr, 0, arr.length); \t\t       \t/*Using a for each loop to print out the ordered numbers from the array*/       \tfor(int i: arr){         \tSystem.out.println(i);         }// End of the for-each loop \t \t}// End of the main method \t \tpublic static void quickSort(int [] arr, int start, int end) { \t\t/*Base case*/ \t\tif(start >= end) { \t\t\treturn; \t\t}// End of the base case \t\t \t\tint pIndex = partition(arr, start, end);// The index of the pivot. \t\t//System.out.println(pIndex); \t\t \t\t/*Recursive cases*/ \t\tquickSort(arr, start, pIndex - 1);// Left side of the array \t\tquickSort(arr, pIndex + 1, end);// Right side of the array \t\t \t}// End of the quicksort method \t \tpublic static int partition(int [] arr, int start, int end) { \t\tint pivot = arr[end - 1];// Select the pivot to be the last element \t\tint pIndex = start;// (Partition index) Indicates where the pivot will be.  \t\t \t\tfor(int i = start; i < end; i++) { \t\t\tif(arr[i] < pivot) { \t\t\t\t \t\t\t\t// if a number is smaller than the pivot, it gets swapped with the Partition index \t\t\t\tint temp = arr[pIndex]; \t\t\t\tarr[pIndex] = arr[i]; \t\t\t\tarr[i] = temp; \t\t\t\t \t\t\t\tpIndex++;// increments the partition index, only stops when pivot is in the right area \t\t\t}// End of the if statement \t\t\t \t\t}// End of the for loop \t\t \t\t// This swaps the pivot with the element that stopped where the pivot should be \t\tarr[end - 1] = arr[pIndex]; \t\tarr[pIndex] = pivot; \t\treturn pIndex; \t}// End of the partition method \t }// End of the QuickSort class\n// @see https://www.youtube.com/watch?v=es2T6KY45cA&vl=en // @see https://www.youtube.com/watch?v=aXXWXz5rF64 // @see https://www.cs.usfca.edu/~galles/visualization/ComparisonSort.html  function partition(list, start, end) {     const pivot = list[end];     let i = start;     for (let j = start; j < end; j += 1) {         if (list[j] <= pivot) {             [list[j], list[i]] = [list[i], list[j]];             i++;         }     }     [list[i], list[end]] = [list[end], list[i]];     return i; }  function quicksort(list, start = 0, end = undefined) {     if (end === undefined) {         end = list.length - 1;     }     if (start < end) {         const p = partition(list, start, end);         quicksort(list, start, p - 1);         quicksort(list, p + 1, end);     }     return list; }  quicksort([5, 4, 2, 6, 10, 8, 7, 1, 0]); \npublic static ArrayList<Vehicle> quickSort(ArrayList<Vehicle> list) {     if (list.isEmpty())          return list; // start with recursion base case     ArrayList<Vehicle> sorted;  // this shall be the sorted list to return, no needd to initialise     ArrayList<Vehicle> smaller = new ArrayList<Vehicle>(); // Vehicles smaller than pivot     ArrayList<Vehicle> greater = new ArrayList<Vehicle>(); // Vehicles greater than pivot     Vehicle pivot = list.get(0);  // first Vehicle in list, used as pivot     int i;     Vehicle j;     // Variable used for Vehicles in the loop     for (i=1;i<list.size();i++)     {         j=list.get(i);         if (j.compareTo(pivot)<0)   // make sure Vehicle has proper compareTo method              smaller.add(j);         else             greater.add(j);     }     smaller=quickSort(smaller);  // capitalise 's'     greater=quickSort(greater);  // sort both halfs recursively     smaller.add(pivot);          // add initial pivot to the end of the (now sorted) smaller Vehicles     smaller.addAll(greater);     // add the (now sorted) greater Vehicles to the smaller ones (now smaller is essentially your sorted list)     sorted = smaller;            // assign it to sorted; one could just as well do: return smaller      return sorted; }\n",
    "reg_date": "2021-10-12T12:00:58.000Z"
  },
  {
    "id": 362,
    "keyword": null,
    "link": null,
    "title": " R8: java.lang.OutOfMemoryError: GC overhead limit exceeded react-native",
    "description": "Add this line to gradle properties file  org.gradle.jvmargs=-Xms128m -Xmx1024m -XX:+CMSClassUnloadingEnabled\nandroid { //snip //add this into your existing 'android' block  dexOptions {  javaMaxHeapSize \"4g\"  } //snip } \n",
    "reg_date": "2021-10-12T12:00:58.000Z"
  },
  {
    "id": 363,
    "keyword": null,
    "link": null,
    "title": " Random number generator in java",
    "description": "import java.util.Random;  Random rand = new Random();  // Obtain a number between [0 - 49]. int n = rand.nextInt(50);  // Add 1 to the result to get a number from the required range // (i.e., [1 - 50]). n += 1;\nimport java.util.Random;  Random rand = new Random(); int maxNumber = 10;  int randomNumber = rand.nextInt(maxNumber) + 1;  System.out.println(randomNumber);\nimport java.util.Random;  class scratch{     public static void main(String[] args) {         Random rand = new Random();         System.out.println( rand.nextInt(5) );         //prints a random Int between 0 - 4 (including 0 & 4);     } }\nimport java.lang.Math;  int randomNumber;  int minimum = 1; int maximum = 10 - minimum;  randomNumber = (int)((Math.random()*maximum) + minimum);  System.out.println(\"Random Number (Between 1-10): \" + randomNumber);\n// java.util.random example import java.util.Random; public class JavaRandomClass {    public static void main(String[] args)    {       Random random = new Random();       // random integers in range 0 to 999        int randInt1 = random.nextInt(1000);        int randInt2 = random.nextInt(1000);       // printing random integers       System.out.println(\"Random Integers: \" + randInt1);        System.out.println(\"Random Integers: \" + randInt2);       // here we are generating Random doubles       double randDou1 = random.nextDouble();        double randDou2 = random.nextDouble();       // printing random doubles       System.out.println(\"Random Doubles: \" + randDou1);        System.out.println(\"Random Doubles: \" + randDou2);    } }\n// example on Math.random() method in java public class RandomMethodExample {    public static void main(String[] args)    {       // here we are generating random doubles        System.out.println(Math.random());        System.out.println(Math.random());    } }\n",
    "reg_date": "2021-10-12T12:00:58.000Z"
  },
  {
    "id": 364,
    "keyword": null,
    "link": null,
    "title": " Range Sum of BST leetcode java",
    "description": "class Solution {     public int rangeSumBST(TreeNode root, int low, int high) {     if(root == null)         return 0;          if(root.val > high)     {         return rangeSumBST(root.left,low,high);     }       else if(root.val < low)     {         return rangeSumBST(root.right,low,high);     }     else     {        return root.val + rangeSumBST(root.left,low,high) + rangeSumBST(root.right,low,high);     }          } }\n",
    "reg_date": "2021-10-12T12:00:58.000Z"
  },
  {
    "id": 365,
    "keyword": null,
    "link": null,
    "title": " Reading Large Files in Java",
    "description": "import java.io.*;  public class FileReaderWithBufferedReader {      public static void main(String[] args) throws IOException{We         String file = \"src/file.txt\";         BufferedReader bufferedReader = new BufferedReader(new FileReader(file));          String curLine;         while ((curLine = bufferedReader.readLine()) != null){             //process the line as required             System.out.println(curLine);         }         bufferedReader.close();     } } \n",
    "reg_date": "2021-10-12T12:00:58.000Z"
  },
  {
    "id": 366,
    "keyword": null,
    "link": null,
    "title": " Recursion - java program to convert decimal to octal",
    "description": "import java.util.Scanner; public class DecimalToOctalExample {    static int octal[] = new int[50], x = 1;    // decimal to octal java    int[] convertToOctal(int oct)    {       if(oct != 0)       {          octal[x++] = oct % 8;          oct = oct / 8;          convertToOctal(oct);       }       return octal;    }    public static void main(String[] args)    {       DecimalToOctalExample dto = new DecimalToOctalExample();       int decimal;       Scanner sc = new Scanner(System.in);        System.out.println(\"Please enter a decimal number: \");       decimal = sc.nextInt();       System.out.println(\"The octal number is : \");       int[] oct = dto.convertToOctal(decimal);       for(int a = x - 1; a > 0; a--)       {          System.out.print(oct[a]);       }       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:58.000Z"
  },
  {
    "id": 367,
    "keyword": null,
    "link": null,
    "title": " RecyclerView: No layout manager attached; skipping layout",
    "description": "You need to set layout manager Kotlin: val linearLayoutManager:LinearLayoutManager = LinearLayoutManager(this) linearLayoutManager.orientation = LinearLayoutManager.HORIZONTAL{or VERTICAL} recycleView.layoutManager = linearLayoutManager Java: LinearLayoutManager linearLayoutManager = new LinearLayoutManager(this); linearLayoutManager.setOrientation(LinearLayoutManager.HORIZONTAL{or VERTICAL}); list.setLayoutManager(linearLayoutManager);\n <androidx.recyclerview.widget.RecyclerView         android:id=\"@+id/reccylerview\"         android:layout_width=\"0dp\"         android:layout_height=\"0dp\"         android:layout_marginTop=\"8dp\"         android:scrollbars=\"vertical\"         app:layoutManager=\"androidx.recyclerview.widget.LinearLayoutManager\"/>\n",
    "reg_date": "2021-10-12T12:00:59.000Z"
  },
  {
    "id": 368,
    "keyword": null,
    "link": null,
    "title": " Regex split  java",
    "description": "package com.tutorialspoint;  import java.lang.*;  public class StringDemo {     public static void main(String[] args) {        String str = \"a d, m, i.n\";       String delimiters = \"\\\\s+|,\\\\s*|\\\\.\\\\s*\";        // analyzing the string        String[] tokensVal = str.split(delimiters);        // prints the number of tokens       System.out.println(\"Count of tokens = \" + tokensVal.length);            for(String token : tokensVal) {          System.out.print(token);       }     } }\nPattern p = Pattern.compile(\"(\\\\d+)|([a-zA-Z]+)\"); Matcher m = p.matcher(\"810LN15\"); List<String> tokens = new LinkedList<String>(); while(m.find()) {   String token = m.group( 1 ); //group 0 is always the entire match      tokens.add(token); } //now iterate through 'tokens' and check whether you have a number or text\n",
    "reg_date": "2021-10-12T12:00:59.000Z"
  },
  {
    "id": 369,
    "keyword": null,
    "link": null,
    "title": " Regrex for letter in java",
    "description": "String REGREX_LETTERS =  \"[a-zA-Z]+\"\n",
    "reg_date": "2021-10-12T12:00:59.000Z"
  },
  {
    "id": 370,
    "keyword": null,
    "link": null,
    "title": " Remove duplicate element in an array in java",
    "description": "import java.util.*;  public class RemoveDuplicatesFromArrayList {      public static void main(String[] args) {         List<Integer> numbers = Arrays.asList(1,2,2,2,3,5);          System.out.println(numbers);          Set<Integer> hashSet = new LinkedHashSet(numbers);         ArrayList<Integer> removedDuplicates = new ArrayList(hashSet);          System.out.println(removedDuplicates);     } } \n// Must sort arrays first --> Arrays.sort(arrayName) public class RemoveDuplicateInArrayExample{   public static int removeDuplicateElements(int arr[], int n){           if (n==0 || n==1){               return n;           }           int[] temp = new int[n];           int j = 0;           for (int i=0; i<n-1; i++){               if (arr[i] != arr[i+1]){                   temp[j++] = arr[i];               }            }           temp[j++] = arr[n-1];              // Changing original array           for (int i=0; i<j; i++){               arr[i] = temp[i];           }           return j;       }               public static void main (String[] args) {           int arr[] = {10,20,20,30,30,40,50,50};           int length = arr.length;           length = removeDuplicateElements(arr, length);           //printing array elements           for (int i=0; i<length; i++)              System.out.print(arr[i]+\" \");       }   } \npublic class RemoveDuplicateElementDemo  {    public static int removeDuplicate(int[] arrNumbers, int num)    {         if(num == 0 || num == 1)       {            return num;         }         int[] arrTemporary = new int[num];         int b = 0;         for(int a = 0; a < num - 1; a++)       {            if(arrNumbers[a] != arrNumbers[a + 1])          {               arrTemporary[b++] = arrNumbers[a];            }         }         arrTemporary[b++] = arrNumbers[num - 1];        for(int a = 0; a < b; a++)       {            arrNumbers[a] = arrTemporary[a];         }         return b;      }    public static void main(String[] args)     {       int[] arrInput = {1, 2, 3, 3, 4, 5, 5, 6, 7, 8};         int len = arrInput.length;         len = removeDuplicate(arrInput, len);         // printing elements       for(int a = 0; a < len; a++)       {          System.out.print(arrInput[a] + \" \");       }    } }\npublic static <T> ArrayList<T> removeDuplicates(ArrayList<T> list){   Set<T> set = new LinkedHashSet<>(list);   return new ArrayList<T>(set); }\n ArrayList<Object> withDuplicateValues;  HashSet<Object> withUniqueValue = new HashSet<>(withDuplicateValues);    withDuplicateValues.clear();  withDuplicateValues.addAll(withUniqueValue);\nSet<String> set = new HashSet<>(yourList); yourList.clear(); yourList.addAll(set); \n",
    "reg_date": "2021-10-12T12:00:59.000Z"
  },
  {
    "id": 371,
    "keyword": null,
    "link": null,
    "title": " Remove element from a specific index from an array in java",
    "description": "// Java program to delete specified integer from an array import java.util.Scanner; public class DeleteSpecifiedInteger {    public static void main(String[] args)    {       int num, n, temp = 1, place = 0;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter number of elements: \");       num = sc.nextInt();       int[] arrNum = new int[num];       System.out.println(\"Please enter all the elements: \");       for(int a = 0; a < num; a++)       {          arrNum[a] = sc.nextInt();       }       System.out.println(\"Enter the element you want to delete: \");       n = sc.nextInt();       for(int a = 0; a < num; a++)       {          if(arrNum[a] == n)          {             temp = 1;             place = a;             break;          }          else          {             temp = 0;          }       }       if(temp == 1)       {          for(int a = place + 1; a < num; a++)          {             arrNum[a - 1] = arrNum[a];          }          System.out.println(\"After deleting element: \");          for(int a = 0; a < num - 2; a++)          {             System.out.print(arrNum[a] + \",\");          }          System.out.print(arrNum[num - 2]);       }       else       {          System.out.println(\"Element not found!!\");       }       sc.close();    } }\n// remove element from a specific index from an array import java.util.Arrays; public class DeleteElementDemo {    // remove element method     public static int[] removeElement(int[] arrGiven, int index)     {       // if empty        if(arrGiven == null || index < 0 || index >= arrGiven.length)        {          return arrGiven;        }       // creating another array one less than initial array        int[] newArray = new int[arrGiven.length - 1];       // copying elements except index        for(int a = 0, b = 0; a < arrGiven.length; a++)        {           if(a == index)          {             continue;          }          newArray[b++] = arrGiven[a];        }       return newArray;     }    public static void main(String[] args)     {        int[] arrInput = { 2, 4, 6, 8, 10 };       // printing given array        System.out.println(\"Given array: \" + Arrays.toString(arrInput));       // getting specified index        int index = 3;       // print index        System.out.println(\"Index to be removed: \" + index);       // removing element        arrInput = removeElement(arrInput, index);       // printing new array        System.out.println(\"New array: \" + Arrays.toString(arrInput));    } }\n",
    "reg_date": "2021-10-12T12:00:59.000Z"
  },
  {
    "id": 372,
    "keyword": null,
    "link": null,
    "title": " Reverse a string in java without using reverse function",
    "description": "// Reverse a string in java without using reverse function import java.util.Scanner; public class ReverseWithoutFunction  {    public static void main(String[] args)     {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter a string: \");       String strInput = sc.nextLine();       int len = strInput.length();       String strReverse = \"\";       System.out.println(\"Reverse a string without using reverse function: \");       for(int a = len - 1; a >= 0; a--)       {          strReverse = strReverse + strInput.charAt(a);       }       System.out.println(strReverse);       sc.close();    } }\nAs we know that String is immutable. String class do not have reverse() method.\n",
    "reg_date": "2021-10-12T12:00:59.000Z"
  },
  {
    "id": 373,
    "keyword": null,
    "link": null,
    "title": " Reverse a string in java word by word",
    "description": "// Reverse a string in java word by word import java.util.Scanner; public class ReverseStringWordByWord  {    public static void main(String[] args)     {       String strWord = \"\";       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter a string: \");       String strGiven = sc.nextLine();            char[] chArray = strGiven.toCharArray();       System.out.println(\"Reversed string word by word: \");       for(int a = 0; a < (chArray.length); a++)       {          if(chArray[a] != ' ')          {             strWord = strWord + chArray[a];          }          else          {             for(int b = strWord.length(); b > 0; b--)             {                System.out.println(strWord.charAt(b - 1));                    }             System.out.print(\" \");             strWord = \"\";          }       }       for(int b = strWord.length(); b > 0; b--)       {          System.out.println(strWord.charAt(b - 1));              }       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:00:59.000Z"
  },
  {
    "id": 374,
    "keyword": null,
    "link": null,
    "title": " Reverse an array in java using for loop",
    "description": "// Reverse an array in java using for loop public class ReverseArrayUsingForLoop  {    public static void main(String[] args)     {       int[] arrNumbers = new int[]{2, 4, 6, 8, 10};         System.out.println(\"Given array: \");         for(int a = 0; a < arrNumbers.length; a++)       {          System.out.print(arrNumbers[a] + \" \");       }       System.out.println(\"Reverse array: \");       // looping array in reverse order       for(int a = arrNumbers.length - 1; a >= 0; a--)        {            System.out.print(arrNumbers[a] + \" \");         }    } }\nint length = array.length; \t\tfor(int i=0;i<length/2;i++) { \t\t\tint swap = array[i]; \t\t\tarray[i] = array[length-i-1]; \t\t\tarray[length-i-1] = swap; \t\t} or Collections.reverse(Arrays.asList(array)); \nvar array = ['a','b','c','d','e','f','g'] var j = array.length   for(var i = 0; i < array.length ; i++){     console.log(array[j])     j=j-1 }      /*  var j holds value of the array's number of values so every time in the loop it decrements by 1 making the  function print a backwars array        */\nimport java.util.Scanner; public class Example {    public static void main(String args[])    { \tint counter, i=0, j=0, temp; \tint number[] = new int[100]; \tScanner scanner = new Scanner(System.in); \tSystem.out.print(\"How many elements you want to enter: \"); \tcounter = scanner.nextInt();  \t/* This loop stores all the elements that we enter in an  \t * the array number. First element is at number[0], second at  \t * number[1] and so on \t */ \tfor(i=0; i<counter; i++) \t{ \t    System.out.print(\"Enter Array Element\"+(i+1)+\": \"); \t    number[i] = scanner.nextInt(); \t}  \t/* Here we are writing the logic to swap first element with \t * last element, second last element with second element and \t * so on. On the first iteration of while loop i is the index  \t * of first element and j is the index of last. On the second \t * iteration i is the index of second and j is the index of  \t * second last. \t */ \tj = i - 1;      \ti = 0;          \tscanner.close(); \twhile(i<j) \t{   \t   temp = number[i]; \t   number[i] = number[j]; \t   number[j] = temp; \t   i++; \t   j--; \t}  \tSystem.out.print(\"Reversed array: \"); \tfor(i=0; i<counter; i++) \t{ \t   System.out.print(number[i]+ \"  \"); \t}           } }\n     for (int i = aList.size() - 1; i >= 0; i--) {         String s = aList.get(i);     } \nfor (int counter = myArray.length - 1; counter >= 0; counter--) { \n",
    "reg_date": "2021-10-12T12:00:59.000Z"
  },
  {
    "id": 375,
    "keyword": null,
    "link": null,
    "title": " Reverse an array without using another array in java",
    "description": "// Reverse an array without using another array in java import java.util.Scanner; public class ReverseWithoutArray  {       public static void main(String[] args)        {          int number, temp, a;          Scanner sc = new Scanner(System.in);          System.out.print(\"Please enter number of elements in the array: \");          number = sc.nextInt();          int[] arrayNumbers = new int[number];          System.out.println(\"Please enter \" + number + \" number elements.\");          for(a = 0; a < number; a++)          {              arrayNumbers[a] = sc.nextInt();          }          for(a = 0; a < number; a++, number--)          {              temp = arrayNumbers[a];              arrayNumbers[a] = arrayNumbers[number - 1];              arrayNumbers[number - 1] = temp;          }          System.out.println(\"Reverse of an array is : \");          for(a = 0; a < arrayNumbers.length; a++)          {              System.out.println(arrayNumbers[a]);          }          sc.close();       } }\n",
    "reg_date": "2021-10-12T12:00:59.000Z"
  },
  {
    "id": 376,
    "keyword": null,
    "link": null,
    "title": " Reverse factorial program in java",
    "description": "// Reverse factorial program in java import java.util.Scanner; public class ReverseFactorialProgram {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter a number to compute reverse factorial: \");       int number = sc.nextInt();       int reverse = number;       for(int a = 2; reverse != a; a++)       {          reverse = reverse / a;       }       System.out.println(\"Reverse factorial of \" + number + \" is: \" + reverse);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:01:00.000Z"
  },
  {
    "id": 377,
    "keyword": null,
    "link": null,
    "title": " Rxjava dependencies",
    "description": "implementation 'io.reactivex.rxjava3:rxjava:3.0.7'\n",
    "reg_date": "2021-10-12T12:01:00.000Z"
  },
  {
    "id": 378,
    "keyword": null,
    "link": null,
    "title": " SLF4J: Failed to load class \"org.slf4j.impl.StaticLoggerBinder\".",
    "description": "   <dependency>        <groupId>org.slf4j</groupId>        <artifactId>slf4j-api</artifactId>        <version>1.7.5</version>    </dependency>    <dependency>        <groupId>org.slf4j</groupId>        <artifactId>slf4j-log4j12</artifactId>        <version>1.7.5</version>    </dependency>\n// Using Kotlin  implementation(\"org.slf4j:slf4j-api:1.7.5\") implementation(\"org.slf4j:slf4j-log4j12:1.7.5\")\n",
    "reg_date": "2021-10-12T12:01:00.000Z"
  },
  {
    "id": 379,
    "keyword": null,
    "link": null,
    "title": " Selection Structure and Conditions",
    "description": "for (int i=0; i<=20; i+=4) {    System.out.print(i + \" \"); }\n",
    "reg_date": "2021-10-12T12:01:00.000Z"
  },
  {
    "id": 380,
    "keyword": null,
    "link": null,
    "title": " Single responsibility",
    "description": "public String readFile(String filename) throws IOException public Record parse(String data) throws ParseException \n",
    "reg_date": "2021-10-12T12:01:00.000Z"
  },
  {
    "id": 381,
    "keyword": null,
    "link": null,
    "title": " Sort string array in case insensitive order and case sensitive order java",
    "description": "import java.util.Arrays; public class SortStringArrayDemo {    public static void main(String[] args)     {       String[] fruits = new String[5];       fruits[0] = \"Mango\";       fruits[1] = \"cherries\";       fruits[2] = \"Apple\";       fruits[3] = \"lychee \";       fruits[4] = \"Elderberry\";       Arrays.sort(fruits);       System.out.println(\"CASE SENSITIVE ORDER : \");       System.out.println(Arrays.toString(fruits));       Arrays.sort(fruits, String.CASE_INSENSITIVE_ORDER);       System.out.println(\"CASE INSENSITIVE ORDER : \");       System.out.println(Arrays.toString(fruits));    } }\n",
    "reg_date": "2021-10-12T12:01:00.000Z"
  },
  {
    "id": 382,
    "keyword": null,
    "link": null,
    "title": " Sort the map by values",
    "description": "Map -- Sort the map by values Write a method that can sort the Map by values   Solution: public static Map<String, Integer>  sortByValue(Map<String, Integer> map){ List<Entry<String, Integer>> list = new ArrayList(map.entrySet()); list.sort(Entry.comparingByValue()); map = new LinkedHashMap(); for(Entry<String, Integer> each : list) { map.put(each.getKey(), each.getValue()); } return map; }\n",
    "reg_date": "2021-10-12T12:01:00.000Z"
  },
  {
    "id": 383,
    "keyword": null,
    "link": null,
    "title": " Source option 5 is no longer supported. Use 7 or later",
    "description": "<properties>     <maven.compiler.source>1.8</maven.compiler.source>     <maven.compiler.target>1.8</maven.compiler.target> </properties>\n",
    "reg_date": "2021-10-12T12:01:00.000Z"
  },
  {
    "id": 384,
    "keyword": null,
    "link": null,
    "title": " Spigot API inventory close",
    "description": "@EventHandler public void onInventoryClose(InventoryCloseEvent e) {    }\n",
    "reg_date": "2021-10-12T12:01:00.000Z"
  },
  {
    "id": 385,
    "keyword": null,
    "link": null,
    "title": " Static method - java convert decimal to octal",
    "description": "import java.util.Scanner; public class DecimalToOctal {    static int a = 1;    public static void main(String[] args)    {       int decimal;       Scanner sc = new Scanner(System.in);          System.out.println(\"Please enter a decimal number : \");       decimal = sc.nextInt();       System.out.println(\"The octal number is : \");       int[] oct = convertToOctal(decimal);        for(int x = a - 1; x > 0; x--)       {          System.out.print(oct[x]);       }       sc.close();    }    static int[] convertToOctal(int oct)     {       int y[] = new int[50];       while(oct != 0)       {          y[a++] = oct % 8;          oct = oct / 8;       }       return y;    } }\n",
    "reg_date": "2021-10-12T12:01:00.000Z"
  },
  {
    "id": 386,
    "keyword": null,
    "link": null,
    "title": " Streams I/O Java",
    "description": "import java.io.*; public class CopyFile {     public static void main(String args[]) throws IOException {         FileInputStream in = null;       FileOutputStream out = null;        try {          in = new FileInputStream(\"input.txt\");          out = new FileOutputStream(\"output.txt\");                    int c;          while ((c = in.read()) != -1) {             out.write(c);          }       }finally {          if (in != null) {             in.close();          }          if (out != null) {             out.close();          }       }    } }\nArrays.asList(\"a1\", \"a2\", \"a3\")     .stream()     .findFirst()     .ifPresent(System.out::println);  // a1 \n",
    "reg_date": "2021-10-12T12:01:01.000Z"
  },
  {
    "id": 387,
    "keyword": null,
    "link": null,
    "title": " StringBuilder java pop back",
    "description": "sb.setLength(sb.length() - 1);\n",
    "reg_date": "2021-10-12T12:01:01.000Z"
  },
  {
    "id": 388,
    "keyword": null,
    "link": null,
    "title": " String array into LinkedList java",
    "description": " LinkedList ll = new LinkedList(Arrays.asList(sa));\n",
    "reg_date": "2021-10-12T12:01:01.000Z"
  },
  {
    "id": 389,
    "keyword": null,
    "link": null,
    "title": " String by byte array in java",
    "description": " String str = \"Example String\";  byte[] b = str.getBytes();\n",
    "reg_date": "2021-10-12T12:01:01.000Z"
  },
  {
    "id": 390,
    "keyword": null,
    "link": null,
    "title": " String charAt() method in java",
    "description": "The charAt() method returns the character at the specified index in a string. The index of the first character is 0, the second character is 1, and so on. String myStr = \"Hello\"; char result = myStr.charAt(0); System.out.println(result); o/p: H\n// String charAt() method in java example public class StringCharAtMethodJava {    public static void main(String[] args)    {       String strInput = \"HelloWorldJava\";       char ch1 = strInput.charAt(1);       char ch2 = strInput.charAt(6);       char ch3 = strInput.charAt(10);       System.out.println(\"Character at 1st index is: \" + ch1);       System.out.println(\"Character at 6th index is: \" + ch2);       System.out.println(\"Character at 10th index is: \" + ch3);    } }\nchar ch=name.charAt(4);\n",
    "reg_date": "2021-10-12T12:01:01.000Z"
  },
  {
    "id": 391,
    "keyword": null,
    "link": null,
    "title": " String concatenation in java",
    "description": "// String concatenation in java using concat() method public class StringConcatMethodDemo {    public static void main(String[] args)    {       String str1 = \"Flower \";       String str2 = \"Brackets\";       String str3 = str1.concat(str2);       System.out.println(str3);    } }\n// StringBuilder String stringBuilderConcat = new StringBuilder()     .append(greeting)     .append(\" \")     .append(person)     .append(\"! Welcome to the \")     .append(location)     .append(\"!\")     .build();\npublic class ConcatenationExample {    public static void main(String args[]) {        //One way of doing concatenation        String str1 = \"Welcome\";        str1 = str1.concat(\" to \");        str1 = str1.concat(\" String handling \");        System.out.println(str1);         //Other way of doing concatenation in one line        String str2 = \"This\";        str2 = str2.concat(\" is\").concat(\" just a\").concat(\" String\");        System.out.println(str2);    } }\npublic class Concat {     String cat(String a, String b) {         a += b;         return a;     } }\nString s=\"Sachin\"+\" Tendulkar\";      System.out.println(s);//Sachin Tendulkar    Output:Sachin Tendulkar \n",
    "reg_date": "2021-10-12T12:01:01.000Z"
  },
  {
    "id": 392,
    "keyword": null,
    "link": null,
    "title": " String indexOf(String str int fromIndex) method in java",
    "description": "import java.util.*; public class StringIndexOfMethodExample {    public static void main(String[] args)    {       String strInput = new String(\"hello world core java\");       String strSub = new String(\"core\");       System.out.print(\"Index found: \" );       System.out.println(strInput.indexOf(strSub, 3));    } }   \n",
    "reg_date": "2021-10-12T12:01:01.000Z"
  },
  {
    "id": 393,
    "keyword": null,
    "link": null,
    "title": " String joiner in streams java",
    "description": "setOfTags.stream().collect(Collectors.joining(\";\"))\n",
    "reg_date": "2021-10-12T12:01:01.000Z"
  },
  {
    "id": 394,
    "keyword": null,
    "link": null,
    "title": " String length() method in java",
    "description": "String data = \"Hello, World!\"; int nameLength = data.length(); // 13\npublic class Sample_String {     public static void main(String[] args) {         //declare the String as an object S1 S2         String S1 = \"Hello Java String Method\";         String S2 = \"RockStar\";          //length() method of String returns the length of a String S1.         int length = S1.length();         System.out.println(\"Length of a String is: \" + length);         //8 Length of a String RockStar         System.out.println(\"Length of a String is: \" + S2.length());     } } \nString data = \"Hello, World!\"; int nameLength = data.length(); \nstring.length() \n// String length() method example public class StringLengthJava {    public static void main(String[] args)    {       String str1 = \"flowerbrackets\";       String str2 = \"helloworld\";       System.out.println(\"string length : \" + str1.length());       System.out.println(\"string length : \" + str2.length());    } }\nlength() : In String class we have length() method which is used  to return the number of characters in string. Ex : String str = &ldquo;Hello World&rdquo;; System.out.println(str.length()); Str.length() will return 11 characters including space.     length : we have length instance variable in arrays which will  return the number of values or objects in array. For example : String days[]={&rdquo; Sun&rdquo;,&rdquo;Mon&rdquo;,&rdquo;wed&rdquo;,&rdquo;thu&rdquo;,&rdquo;fri&rdquo;,&rdquo;sat&rdquo;}; Will return 6 since the number of values in days array is 6\n",
    "reg_date": "2021-10-12T12:01:01.000Z"
  },
  {
    "id": 395,
    "keyword": null,
    "link": null,
    "title": " String palindrome in java using stringbuffer",
    "description": "// String palindrome in java using stringbuffer public class PalindromeUsingStringBuffer {    public static void main(String[] args)    {       String strInput = \"nayan\";       StringBuffer sb = new StringBuffer(strInput);       sb.reverse();       String str = sb.toString();       if(strInput.equals(str))       {          System.out.println(str + \" string is palindrome.\");       }       else       {          System.out.println(str + \" string is not palindrome.\");       }    } }\n",
    "reg_date": "2021-10-12T12:01:02.000Z"
  },
  {
    "id": 396,
    "keyword": null,
    "link": null,
    "title": " String palindrome in java without using reverse method",
    "description": "// String palindrome in java without using reverse method import java.util.Scanner; public class StringPalindromeDemo  {    public static void main(String[] args)     {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter string to check palindrome: \");       String strInput = sc.nextLine();       // converting string to char array       char[] chString = strInput.toCharArray();              // storing reverse string       String strReverse = \"\";                // reading char by char       for(int a = chString.length - 1; a >= 0; a--)        {          strReverse = strReverse + chString[a];       }        // printing given string and reversed string       System.out.println(\"Given string: \" + strInput);       System.out.println(\"Reverse String: \" + strReverse);        // check if given string is palindrome       if(strInput.equals(strReverse))       {          System.out.println(\"string is palindrome.\");       }       else       {          System.out.println(\"string is not palindrome.\");       }    } }\n",
    "reg_date": "2021-10-12T12:01:02.000Z"
  },
  {
    "id": 397,
    "keyword": null,
    "link": null,
    "title": " String remove duplicate in java",
    "description": "import java.util.*;  public class RemoveDuplicatesFromArrayList {      public static void main(String[] args) {         List<Integer> numbers = Arrays.asList(1,2,2,2,3,5);          System.out.println(numbers);          Set<Integer> hashSet = new LinkedHashSet(numbers);         ArrayList<Integer> removedDuplicates = new ArrayList(hashSet);          System.out.println(removedDuplicates);     } } \nString str1 = \"ABCDABCD\"; String result1 = \"\";  for (int a = 0; a <= str1.length()-1; a++) { if (result1.contains(\"\" + str1.charAt(a))) {  // charAt methodda you provide index number ve sana character olarak donuyor, // If the string result does not contains str.CharAt(i),  // then we concate it to the result. if it does we will not    continue; } result1 += str1.charAt(a); } System.out.println(result1);\n",
    "reg_date": "2021-10-12T12:01:02.000Z"
  },
  {
    "id": 398,
    "keyword": null,
    "link": null,
    "title": " String remove duplicate method in java",
    "description": "public static void main(String[] args) {          String result = removeDup(\"AAABBBCCC\");         System.out.println(result); // ABC  public static  String  removeDup( String  str) {         String result = \"\";         for (int i = 0; i < str.length(); i++)             if (!result.contains(\"\" + str.charAt(i)))                 result += \"\" + str.charAt(i);         return result;     } }\nimport java.util.*;  public class RemoveDuplicatesFromArrayList {      public static void main(String[] args) {         List<Integer> numbers = Arrays.asList(1,2,2,2,3,5);          System.out.println(numbers);          Set<Integer> hashSet = new LinkedHashSet(numbers);         ArrayList<Integer> removedDuplicates = new ArrayList(hashSet);          System.out.println(removedDuplicates);     } } \nString fullString = \"lol lol\"; String[] words = fullString.split(\"\\\\W+\"); StringBuilder stringBuilder = new StringBuilder(); Set<String> wordsHashSet = new HashSet<>();  for (String word : words) {     if (wordsHashSet.contains(word.toLowerCase())) continue;     wordsHashSet.add(word.toLowerCase());     stringBuilder.append(word).append(\" \"); } String nonDuplicateString = stringBuilder.toString().trim();\npublic static <T> ArrayList<T> removeDuplicates(ArrayList<T> list){   Set<T> set = new LinkedHashSet<>(list);   return new ArrayList<T>(set); }\nList<Integer>numbers = Arrays.asList(1,2,2,2,3,5); // [1, 2, 3, 5] System.out.println(numbers);  Set<Integer> hashSet = new LinkedHashSet(numbers); ArrayList<Integer> removedDuplicates = new ArrayList(hashSet); System.out.println(removedDuplicates); // [1, 2, 3, 5]\n",
    "reg_date": "2021-10-12T12:01:02.000Z"
  },
  {
    "id": 399,
    "keyword": null,
    "link": null,
    "title": " String toLowerCase(Locale locale) method in java",
    "description": "import java.util.Locale; public class StringToLowerCaseMethodExample {    public static void main(String[] args)    {       String str = \"HELLOWORLD sTrInG\";       String strEnglish = str.toLowerCase(Locale.ENGLISH);       System.out.println(strEnglish);       String strTurkish = str.toLowerCase(Locale.forLanguageTag(\"tr\"));       System.out.println(strTurkish);    } }   \nimport java.util.*; public class StringToLowerCaseMethodExample {    public static void main(String[] args)    {       String str = \"HELLOWORLD CORE jAva\";       String strLower = str.toLowerCase();       System.out.println(strLower);    } }   \n/* to find the lowercase or uppercase of a string,  * we just .toLowerCase() or .toUpperCase() */  public class CaseDemonstration {   public static void main(String[] args) {         \tString testString = \"THIS IS AN EXAMPLE OF A STRING\";     String testStringLower = testString.toLowerCase(); // make a string lowercase     System.out.println(testStringLower); // \"this is an example of a string\"     String testStringUpper = testStringLower.toUpperCase(); // make it upper again     System.out.println(testStringUpper); // \"THIS IS AN EXAMPLE OF A STRING\"        } }\n",
    "reg_date": "2021-10-12T12:01:02.000Z"
  },
  {
    "id": 400,
    "keyword": null,
    "link": null,
    "title": " Symmetric matrix program in java",
    "description": "// symmetric matrix program in java import java.util.Scanner; public class SymmetricMatrixDemo {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter number of rows - \");       int row = sc.nextInt();       System.out.println(\"Please enter number of columns - \");       int col = sc.nextInt();       int symMatrix[][] = new int[row][col];       System.out.println(\"Please enter the elements - \");       for(int x = 0; x < row; x++)       {          for(int y = 0; y < col; y++)          {             symMatrix[x][y] = sc.nextInt();          }       }       System.out.println(\"Now printing the input matrix - \");       for(int x = 0; x < row; x++)       {          for(int y = 0; y < col; y++)          {             System.out.print(symMatrix[x][y] + \"\\t\");          }          System.out.println();       }       // check if a matrix is symmetric       if(row != col)       {          System.out.println(\"It's not a square matrix!!\");       }       else       {          boolean symmetricMatrix = true;          for(int x = 0; x < row; x++)          {             for(int y = 0; y < col; y++)             {                if(symMatrix[x][y] != symMatrix[y][x])                {                   symmetricMatrix = false;                   break;                }             }          }          if(symmetricMatrix)          {             System.out.println(\"It's a symmetric matrix!!\");          }          else          {             System.out.println(\"It's not a symmetric matrix!!\");          }       }       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:01:02.000Z"
  },
  {
    "id": 401,
    "keyword": null,
    "link": null,
    "title": " T implements comparable",
    "description": "public static class Node<T extends Comparable<T>> { //HERE      private T value;      public Node(T val) {         this.value = val;     }      public void insert(T val) {         if (value.compareTo(val) > 0) {             new Node<T>(val);         }     } }\n",
    "reg_date": "2021-10-12T12:01:02.000Z"
  },
  {
    "id": 402,
    "keyword": null,
    "link": null,
    "title": " TextInputEditText click event",
    "description": "from_textedit.setEnabled(true); from_textedit.setTextIsSelectable(true); from_textedit.setFocusable(false); from_textedit.setFocusableInTouchMode(false); from_textedit.setOnClickListener(new View.OnClickListener() {     @Override     public void onClick(View view) {         Log.d(TAG, \"Edit Text is clicked\");     } });\n",
    "reg_date": "2021-10-12T12:01:02.000Z"
  },
  {
    "id": 403,
    "keyword": null,
    "link": null,
    "title": " The package java.awt.event is not accessible",
    "description": "//add this \"module-info.java\" requires java.desktop;\n",
    "reg_date": "2021-10-12T12:01:02.000Z"
  },
  {
    "id": 404,
    "keyword": null,
    "link": null,
    "title": " The shrinker may have failed to optimize the Java bytecode. To disable the shrinker, pass the `--no-shrink` flag to this command.",
    "description": "buildTypes {         release {             signingConfig signingConfigs.debug             minifyEnabled true         }         debug{             minifyEnabled true         }     }\n",
    "reg_date": "2021-10-12T12:01:02.000Z"
  },
  {
    "id": 405,
    "keyword": null,
    "link": null,
    "title": " The specified child already has a parent. You must call removeView() on the child's parent first",
    "description": "// TEXTVIEW if(tv.getParent() != null) {     ((ViewGroup)tv.getParent()).removeView(tv); // <- fix } layout.addView(tv); //  <==========  ERROR IN THIS LINE DURING 2ND RUN // EDITTEXT\n",
    "reg_date": "2021-10-12T12:01:03.000Z"
  },
  {
    "id": 406,
    "keyword": null,
    "link": null,
    "title": " The superclass \"javax.servlet.http.HttpServlet\" was not found on the Java Build Path",
    "description": "<dependency>     <groupId>javax.servlet</groupId>     <artifactId>javax.servlet-api</artifactId>     <version>3.1.0</version>     <scope>provided</scope> </dependency>\n",
    "reg_date": "2021-10-12T12:01:03.000Z"
  },
  {
    "id": 407,
    "keyword": null,
    "link": null,
    "title": " This project uses AndroidX dependencies, but the 'android.useAndroidX' property is not enabled.",
    "description": "android.useAndroidX=true android.enableJetifier=true\n// old version fix // goto [project folder]/platforms/android // open gradle.properties // add or modify this lines android.useAndroidX=true android.enableJetifier=true  // new version fix // if not work // try this cordova plugin add cordova-plugin-androidx\n",
    "reg_date": "2021-10-12T12:01:03.000Z"
  },
  {
    "id": 408,
    "keyword": null,
    "link": null,
    "title": " This project uses AndroidX dependencies, but the 'android.useAndroidX' property is not enabled. Set this property to true in the gradle.properties file and retry.",
    "description": "// To enable jetifier, add those two lines to your gradle.properties file: android.useAndroidX=true android.enableJetifier=true\n",
    "reg_date": "2021-10-12T12:01:03.000Z"
  },
  {
    "id": 409,
    "keyword": null,
    "link": null,
    "title": " This project uses AndroidX dependencies, but the 'android.useAndroidX' property is not enabled",
    "description": "android.useAndroidX=true android.enableJetifier=true\n// old version fix // goto [project folder]/platforms/android // open gradle.properties // add or modify this lines android.useAndroidX=true android.enableJetifier=true  // new version fix // if not work // try this cordova plugin add cordova-plugin-androidx\n",
    "reg_date": "2021-10-12T12:01:03.000Z"
  },
  {
    "id": 410,
    "keyword": null,
    "link": null,
    "title": " This version of the Android Support plugin for IntelliJ IDEA (or Android Studio) cannot open this project, please retry with version 4.1 or newer.",
    "description": "classpath 'com.android.tools.build:gradle:4.2.0' \nclasspath 'com.android.tools.build:gradle:4.0.1' \n",
    "reg_date": "2021-10-12T12:01:03.000Z"
  },
  {
    "id": 411,
    "keyword": null,
    "link": null,
    "title": " This version of the Android Support plugin for IntelliJ IDEA (or Android Studio) cannot open this project, please retry with version 4.2 or newer.",
    "description": "classpath 'com.android.tools.build:gradle:4.2.0' \nclasspath 'com.android.tools.build:gradle:4.0.1' \n",
    "reg_date": "2021-10-12T12:01:03.000Z"
  },
  {
    "id": 412,
    "keyword": null,
    "link": null,
    "title": " Thread",
    "description": "Thread.sleep(2000);\n",
    "reg_date": "2021-10-12T12:01:03.000Z"
  },
  {
    "id": 413,
    "keyword": null,
    "link": null,
    "title": " Transpose of a matrix in java using BufferedReader",
    "description": "// Transpose of a matrix in java using BufferedReader import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; public class TransposeMatrixDemo  {    public static void main(String[] args) throws IOException     {       BufferedReader br = new BufferedReader(new InputStreamReader(System.in));       System.out.print(\"Please enter number of rows: \");       int row = Integer.parseInt(br.readLine());       System.out.print(\"Please enter number of columns: \");       int col = Integer.parseInt(br.readLine());       int[][] arrMatrix = new int[row][col];       int[][] arrTranspose = new int[row][col];       System.out.println(\"Please enter elements of matrix: \");       for(int a = 0; a < row; a++)        {          for(int b = 0; b < col; b++)           {             arrMatrix[a][b] = Integer.parseInt(br.readLine());          }       }       System.out.println(\"Given Matrix\\n\");       for(int a = 0; a < row; a++)        {          for(int b = 0; b < col; b++)           {             System.out.print(arrMatrix[a][b] + \" \");          }          System.out.print(\"\\n\");       }       for(int a = 0; a < row; a++)        {          for(int b = 0; b < col; b++)           {             arrTranspose[b][a] = arrMatrix[a][b];          }       }       System.out.println(\"Transpose matrix in java \\n\");       for(int a = 0; a < col; a++)        {          for(int b = 0; b < row; b++)           {             System.out.print(arrTranspose[a][b] + \" \");          }          System.out.print(\"\\n\");       }    } }\n",
    "reg_date": "2021-10-12T12:01:03.000Z"
  },
  {
    "id": 414,
    "keyword": null,
    "link": null,
    "title": " TreeMap K firstKey() method in java",
    "description": "import java.util.TreeMap; public class TreeMapFirstKeyMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(2, \"tejas\");       tm.put(1, \"om\");       tm.put(3, \"tarun\");       tm.put(6, \"siddarth\");       tm.put(5, \"fanindra\");       System.out.println(\"first key of TreeMap: \");       System.out.println(\"First key is: \" + tm.firstKey());    } }\n",
    "reg_date": "2021-10-12T12:01:03.000Z"
  },
  {
    "id": 415,
    "keyword": null,
    "link": null,
    "title": " TreeMap V get(Object key) method in java",
    "description": "import java.util.TreeMap; public class TreeMapGetObjectMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(2, \"tejas\");       tm.put(1, \"om\");       tm.put(3, \"tarun\");       tm.put(6, \"siddarth\");       tm.put(5, \"fanindra\");       System.out.println(\"Check value of key 5: \");       System.out.println(\"Value is: \" + tm.get(5));    } }\n",
    "reg_date": "2021-10-12T12:01:04.000Z"
  },
  {
    "id": 416,
    "keyword": null,
    "link": null,
    "title": " TreeMap ceilingKey() method in java",
    "description": "example of TreeMap ceilingKey(K key) method when it returns null import java.util.NavigableMap; import java.util.TreeMap; public class TreeMapCeilingkeyDemo {    public static void main(String[] args)    {       NavigableMap<Integer, String> nm = new TreeMap<Integer, String>();       nm.put(10, \"apple\");       nm.put(20, \"banana\");       nm.put(30, \"cherry\");       nm.put(40, \"fig\");       nm.put(60, \"grape\");       nm.put(70, \"kiwifruit\");       // 200 is not present in map       // or any key greater than 200       // hence returns null       System.out.println(\"Ceiling key for 200: \" + nm.ceilingKey(200));    } }\nimport java.util.NavigableMap; import java.util.TreeMap; public class TreeMapCeilingkeyDemo {    public static void main(String[] args)    {       NavigableMap<Integer, String> nm = new TreeMap<Integer, String>();       nm.put(10, \"apple\");       nm.put(20, \"banana\");       nm.put(30, \"cherry\");       nm.put(40, \"fig\");       nm.put(60, \"grape\");       nm.put(70, \"kiwifruit\");       // 60 is least value > 50       // it is returned as key.       System.out.println(\"Ceiling key for 50: \" + nm.ceilingKey(50));    } }\nexample on TreeMap ceilingKey(K key) method when it returns ClassCastException import java.util.NavigableMap; import java.util.TreeMap; public class TreeMapCeilingkeyDemo {    public static void main(String[] args)    {       NavigableMap<Object, String> tm = new TreeMap<Object, String>();       tm.put(10, \"apple\");       tm.put(20, \"banana\");       tm.put(30, \"cherry\");       tm.put(40, \"fig\");       tm.put(60, \"grape\");       tm.put(70, \"kiwifruit\");       try       {          // returns ClassCastException          // we cannot compare String object with an Integer object          System.out.println(\"Ceiling key entry for \\\"asd\\\": \" + tm.ceilingKey(new String(\"mango\")));       }       catch(Exception ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\n",
    "reg_date": "2021-10-12T12:01:04.000Z"
  },
  {
    "id": 417,
    "keyword": null,
    "link": null,
    "title": " TreeMap clear() method in java",
    "description": "import java.util.TreeMap; public class TreeMapClearMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(8, \"red\");       tm.put(12, \"blue\");       tm.put(10, \"yellow\");       tm.put(6, \"green\");       tm.put(4, \"violet\");       System.out.println(\"TreeMap before using clear() method: \" + tm);       // clearing TreeMap using clear() method       tm.clear();       System.out.println(\"TreeMap after using clear() method: \" + tm);    } }\n",
    "reg_date": "2021-10-12T12:01:04.000Z"
  },
  {
    "id": 418,
    "keyword": null,
    "link": null,
    "title": " TreeMap clone() method in java",
    "description": "import java.util.TreeMap; public class TreeMapCloneMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       TreeMap<Integer, String> tmClone = new TreeMap<Integer, String>();       tm.put(60, \"apple\");       tm.put(10, \"banana\");       tm.put(50, \"cherry\");       tm.put(30, \"fig\");       tm.put(80, \"grape\");       tm.put(90, \"kiwifruit\");       // cloning TreeMap       System.out.println(\"Cloning TreeMap: \");       tmClone = (TreeMap)tm.clone();       System.out.println(\"Given TreeMap: \" + tm);       System.out.println(\"Cloned TreeMap: \" + tmClone);    } }\n",
    "reg_date": "2021-10-12T12:01:04.000Z"
  },
  {
    "id": 419,
    "keyword": null,
    "link": null,
    "title": " TreeMap containsKey() method in java",
    "description": "import java.util.TreeMap; public class TreeMapContainsKeyMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       // map String values to Integer keys       tm.put(56, \"orange\");       tm.put(62, \"indigo\");       tm.put(43, \"red\");       tm.put(91, \"green\");       tm.put(38, \"yellow\");       System.out.println(\"TreeMap before using containsKey() method: \" + tm);       // check for key element '62'       System.out.println(\"Does key '62' present? \" + tm.containsKey(62));       // check for key element '90'       System.out.println(\"Does key '90' present? \" + tm.containsKey(90));    } }\nmap Integer values to String Keys import java.util.TreeMap; public class TreeMapContainsKeyMethodExample {    public static void main(String[] args)    {       TreeMap<String, Integer> tm = new TreeMap<String, Integer>();       // Mapping Integer values to string keys       tm.put(\"violet\", 18);       tm.put(\"red\", 12);       tm.put(\"violet\", 14);       tm.put(\"green\", 16);       tm.put(\"blue\", 20);       System.out.println(\"Given TreeMap Mappings are: \" + tm);       // check for key element 'green'       System.out.println(\"Is key 'green' present? \" + tm.containsKey(\"green\"));       // checking for key element 'yellow'       System.out.println(\"Is key 'yellow' present? \" + tm.containsKey(\"yellow\"));    } }\n",
    "reg_date": "2021-10-12T12:01:04.000Z"
  },
  {
    "id": 420,
    "keyword": null,
    "link": null,
    "title": " TreeMap containsValue() method in java",
    "description": "map Integer values to String keys import java.util.TreeMap; public class TreeMapContainsValueMethodExample {    public static void main(String[] args)    {       TreeMap<String, Integer> tm = new TreeMap<String, Integer>();       // Map integer values to string keys       tm.put(\"indigo\", 16);       tm.put(\"red\", 12);       tm.put(\"indigo\", 14);       tm.put(\"orange\", 18);       tm.put(\"violet\", 20);       System.out.println(\"TreeMap before using containsValue() method: \" + tm);       // Checking for the Value '12'       System.out.println(\"Does value '12' present? \" + tm.containsValue(12));       // Checking for the Value '14'       System.out.println(\"Does value '14' present? \" + tm.containsValue(14));       // Checking for the Value '20'       System.out.println(\"Does value '20' present? \" + tm.containsValue(20));    } }\nimport java.util.TreeMap; public class TreeMapContainsValueMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       // Map string values to integer keys       tm.put(16, \"indigo\");       tm.put(12, \"red\");       tm.put(14, \"indigo\");       tm.put(18, \"orange\");       tm.put(20, \"violet\");       System.out.println(\"TreeMap before using containsValue() method: \" + tm);       // checking for Value 'indigo'       System.out.println(\"Does value 'indigo' present? \" + tm.containsValue(\"indigo\"));       // checking for Value 'blue'       System.out.println(\"Does value 'blue' present? \" + tm.containsValue(\"blue\"));    } }\n",
    "reg_date": "2021-10-12T12:01:04.000Z"
  },
  {
    "id": 421,
    "keyword": null,
    "link": null,
    "title": " TreeMap descendingKeySet() method in java",
    "description": "import java.util.NavigableSet; import java.util.TreeMap; public class TreeMapDescendingKeySetMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(63, \"banana\");       tm.put(56, \"watermelon\");       tm.put(35, \"orange\");       tm.put(83, \"apple\");       tm.put(65, \"pineapple\");       // put values in NavigableSet       NavigableSet ns = tm.descendingKeySet();       System.out.println(\"TreeMap values using descendingKeySet() method: \");       System.out.println(\"NavigableSet values: \" + ns);    } }\nimport java.util.NavigableMap; import java.util.TreeMap; public class TreeMapDescendingMapMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(93, \"blue\");       tm.put(26, \"violet\");       tm.put(63, \"red\");       tm.put(53, \"green\");       tm.put(96, \"five\");       // put values in NavigableMap       NavigableMap nm = tm.descendingMap();       System.out.println(\"TreeMap values using descendingMap() method: \");       System.out.println(\"NavigableMap values: \" + nm);    } }\n",
    "reg_date": "2021-10-12T12:01:04.000Z"
  },
  {
    "id": 422,
    "keyword": null,
    "link": null,
    "title": " TreeMap descendingMap() method in java",
    "description": "import java.util.NavigableSet; import java.util.TreeMap; public class TreeMapDescendingKeySetMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(63, \"banana\");       tm.put(56, \"watermelon\");       tm.put(35, \"orange\");       tm.put(83, \"apple\");       tm.put(65, \"pineapple\");       // put values in NavigableSet       NavigableSet ns = tm.descendingKeySet();       System.out.println(\"TreeMap values using descendingKeySet() method: \");       System.out.println(\"NavigableSet values: \" + ns);    } }\nimport java.util.NavigableMap; import java.util.TreeMap; public class TreeMapDescendingMapMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(93, \"blue\");       tm.put(26, \"violet\");       tm.put(63, \"red\");       tm.put(53, \"green\");       tm.put(96, \"five\");       // put values in NavigableMap       NavigableMap nm = tm.descendingMap();       System.out.println(\"TreeMap values using descendingMap() method: \");       System.out.println(\"NavigableMap values: \" + nm);    } }\n",
    "reg_date": "2021-10-12T12:01:04.000Z"
  },
  {
    "id": 423,
    "keyword": null,
    "link": null,
    "title": " TreeMap entrySet() method in java",
    "description": "example to map integer values to String keys import java.util.TreeMap; public class TreeMapEntrySetMethodExample {    public static void main(String[] args)    {       TreeMap<String, Integer> tm = new TreeMap<String, Integer>();       // map Integer values to String keys       tm.put(\"mango\", 56);       tm.put(\"apple\", 28);       tm.put(\"banana\", 35);       tm.put(\"pineapple\", 73);       tm.put(\"orange\", 61);       // printing the TreeMap       System.out.println(\"Given TreeMap is: \" + tm);       // use entrySet() to get set view       System.out.println(\"set view is: \" + tm.entrySet());    } }\nimport java.util.TreeMap; public class TreeMapEntrySetMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       // map String values to Integer keys       tm.put(56, \"mango\");       tm.put(28, \"apple\");       tm.put(35, \"banana\");       tm.put(73, \"pineapple\");       tm.put(61, \"orange\");       // printing the TreeMap       System.out.println(\"Given TreeMap is: \" + tm);       // use entrySet() to get set view       System.out.println(\"set view is: \" + tm.entrySet());    } }\n",
    "reg_date": "2021-10-12T12:01:04.000Z"
  },
  {
    "id": 424,
    "keyword": null,
    "link": null,
    "title": " TreeMap firstEntry() method in java",
    "description": "import java.util.TreeMap; public class TreeMapFirstEntryMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(69, \"mango\");       tm.put(53, \"apple\");       tm.put(26, \"orange\");       tm.put(38, \"grapes\");       tm.put(50, \"banana\");       System.out.println(\"Checking TreeMap for first entry: \");       System.out.println(\"TreeMap firstEntry is: \" + tm.firstEntry());    } }\n",
    "reg_date": "2021-10-12T12:01:04.000Z"
  },
  {
    "id": 425,
    "keyword": null,
    "link": null,
    "title": " TreeMap floorEntry() method in java",
    "description": "import java.util.TreeMap; public class TreeMapFloorEntryMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(63, \"orange\");       tm.put(50, \"apple\");       tm.put(83, \"watermelon\");       tm.put(86, \"banana\");       tm.put(56, \"mango\");       System.out.println(\"Check floor entry for 86: \");       System.out.println(\"Value is: \" + tm.floorEntry(86));    } }\nimport java.util.TreeMap; public class TreeMapFloorkeyExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(60, \"apple\");       tm.put(10, \"banana\");       tm.put(50, \"cherry\");       tm.put(30, \"fig\");       tm.put(80, \"grape\");       tm.put(90, \"kiwifruit\");       // printing values of TreeMap       System.out.println(\"TreeMap: \" + tm);       try       {          // passing null as parameter to floorKey() method          System.out.println(tm.floorKey(null));       }       catch(Exception ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\n",
    "reg_date": "2021-10-12T12:01:05.000Z"
  },
  {
    "id": 426,
    "keyword": null,
    "link": null,
    "title": " TreeMap headMap() method in java",
    "description": "import java.util.SortedMap; import java.util.TreeMap; public class TreeMapHeadMapMethodExample {    public static void main(String[] args)    {       TreeMap<String, Integer> tm = new TreeMap<String, Integer>();       // map string values to integer keys       tm.put(\"mango\", 65);       tm.put(\"apple\", 63);       tm.put(\"grapes\", 35);       tm.put(\"pineapple\", 60);       tm.put(\"banana\", 26);       System.out.println(\"Given TreeMap is: \" + tm);       // create SortedMap for map head       SortedMap<String, Integer> sm = new TreeMap<String, Integer>();       sm = tm.headMap(\"pineapple\");       // Getting map head       System.out.println(\"headmap is: \" + sm);    } }\nimport java.util.SortedMap; import java.util.TreeMap; public class TreeMapHeadMapMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       // map string values to integer keys       tm.put(65, \"mango\");       tm.put(63, \"apple\");       tm.put(35, \"grapes\");       tm.put(60, \"pineapple\");       tm.put(26, \"banana\");       System.out.println(\"Given TreeMap is: \" + tm);       // create SortedMap for map head       SortedMap<Integer, String> sm = new TreeMap<Integer, String>();       sm = tm.headMap(60);       // Getting map head       System.out.println(\"headmap is: \" + sm);    } }\n",
    "reg_date": "2021-10-12T12:01:05.000Z"
  },
  {
    "id": 427,
    "keyword": null,
    "link": null,
    "title": " TreeMap higherKey() method in java",
    "description": "import java.util.TreeMap; public class TreeMapHigherKeyMethodExample {    public static void main(String[] args)    {       try       {          TreeMap<Integer, String> tm = new TreeMap<Integer, String>();          tm.put(6, \"green\");          tm.put(3, \"violet\");          tm.put(2, \"red\");          tm.put(8, \"yellow\");          tm.put(5, \"blue\");          System.out.println(\"Given TreeMap: \" + tm);          // getting higher key value for 5 using higherKey() method          int value = tm.higherKey(5);          System.out.println(\"The higherKey value for 5: \" + value);       }       catch(NullPointerException ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\nLet&rsquo;s see example on TreeMap higherKey(K key) method for NullPointerException import java.util.TreeMap; public class TreeMapHigherKeyMethodExample {    public static void main(String[] args)    {       try       {          TreeMap<Integer, String> tm = new TreeMap<Integer, String>();          tm.put(6, \"green\");          tm.put(3, \"violet\");          tm.put(2, \"red\");          tm.put(8, \"yellow\");          tm.put(5, \"blue\");          System.out.println(\"Given TreeMap: \" + tm);          // getting higher key value for null using higherKey() method          System.out.println(\"The higherKey value for null: \");          int value = tm.higherKey(null);          System.out.println(\"Value is: \" + value);       }       catch(NullPointerException ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\n",
    "reg_date": "2021-10-12T12:01:05.000Z"
  },
  {
    "id": 428,
    "keyword": null,
    "link": null,
    "title": " TreeMap in java",
    "description": "import java.util.ArrayList; import java.util.Collections; import java.util.List; import java.util.ListIterator; public class Main {    public static void main(String[] args) {       List<String> list = new ArrayList<String>();       list.add(\"a\");       list.add(\"b\");       list.add(\"c\");       list.add(\"d\");       list.add(\"e\");       list.add(\"f\");              //On met la liste dans le d&eacute;sordre       Collections.shuffle(list);       System.out.println(list);              //On la remet dans l'ordre       Collections.sort(list);       System.out.println(list);              Collections.rotate(list, -1);       System.out.println(list);              //On r&eacute;cup&egrave;re une sous-liste       List<String> sub = list.subList(2, 5);       System.out.println(sub);       Collections.reverse(sub);       System.out.println(sub);              //On r&eacute;cup&egrave;re un ListIterator       ListIterator<String> it = list.listIterator();       while(it.hasNext()){          String str = it.next();          if(str.equals(\"d\"))             it.set(\"z\");       }       while(it.hasPrevious())          System.out.print(it.previous());           } } \nimport java.util.Map; import java.util.TreeMap; public class TreeMapExample {    public static void main(String[] args)     {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();           tm.put(1000, \"Apple\");           tm.put(1002, \"Raspberry\");           tm.put(1001, \"Velvet apple\");           tm.put(1003, \"Banana\");           for(Map.Entry obj : tm.entrySet())       {              System.out.println(obj.getKey() + \" \" + obj.getValue());           }    } }\nimport java.util.*;  // Declare the variable using the interface of the object for flexibility. // Non-primative data types only. Map<Integer, String> mambo = new TreeMap<Integer, String>();  mambo.put(key, value); // TreeMap will be sorted by key. // Work with any comparable object as a key.  mambo.put(1, \"Monica\"); mambo.put(2, \"Erica\"); mambo.put(3, \"Rita\");\n- TreeMap doesn't have null key and keys are sorted  Can contain only unique keys and keys are sorted in ascending order. \nTreeMap<Integer, String> x = new TreeMap<Integer, String>();     tm.put(1, \"Hello\");\nTreeSet: Can contain only unique values and it is sorted in ascending order TreeMap: Can contain only unique keys and keys are sorted in ascending order. \n",
    "reg_date": "2021-10-12T12:01:05.000Z"
  },
  {
    "id": 429,
    "keyword": null,
    "link": null,
    "title": " TreeMap keySet() method in java",
    "description": "import java.util.TreeMap; public class TreeMapKeySetMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(53, \"mango\");       tm.put(62, \"apple\");       tm.put(29, \"grapes\");       tm.put(93, \"banana\");       tm.put(98, \"watermelon\");       System.out.println(\"Given TreeMap is: \" + tm);       // use keySet() to get set view of keys       System.out.println(\"set is: \" + tm.keySet());    } }\n",
    "reg_date": "2021-10-12T12:01:05.000Z"
  },
  {
    "id": 430,
    "keyword": null,
    "link": null,
    "title": " TreeMap lastEntry() method in java",
    "description": "import java.util.TreeMap; public class TreeMapLastKeyMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(99, \"yellow\");       tm.put(86, \"violet\");       tm.put(93, \"red\");       tm.put(36, \"green\");       tm.put(29, \"blue\");       System.out.println(\"Given TreeMap is: \" + tm);       // display lastKey of TreeMap       System.out.println(\"last key is: \" + tm.lastKey());    } }\nmap integer values to string keys import java.util.TreeMap; public class TreeMapLastKeyMethodExample {    public static void main(String[] args)    {       TreeMap<String, Integer> tm = new TreeMap<String, Integer>();       tm.put(\"yellow\", 99);       tm.put(\"violet\", 86);       tm.put(\"red\", 93);       tm.put(\"green\", 36);       tm.put(\"blue\", 29);       System.out.println(\"Given TreeMap is: \" + tm);       // display lastKey of TreeMap       System.out.println(\"last key is: \" + tm.lastKey());    } }\nimport java.util.TreeMap; public class TreeMapLastEntryMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(96, \"mango\");       tm.put(39, \"grapes\");       tm.put(56, \"pineapple\");       tm.put(93, \"apple\");       tm.put(69, \"watermelon\");       // get value with greatest key       System.out.println(\"Check last entry in given TreeMap: \");       System.out.println(\"Value is: \"+ tm.lastEntry());    } }\n",
    "reg_date": "2021-10-12T12:01:05.000Z"
  },
  {
    "id": 431,
    "keyword": null,
    "link": null,
    "title": " TreeMap lastKey() method in java",
    "description": "import java.util.TreeMap; public class TreeMapLastKeyMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(99, \"yellow\");       tm.put(86, \"violet\");       tm.put(93, \"red\");       tm.put(36, \"green\");       tm.put(29, \"blue\");       System.out.println(\"Given TreeMap is: \" + tm);       // display lastKey of TreeMap       System.out.println(\"last key is: \" + tm.lastKey());    } }\nmap integer values to string keys import java.util.TreeMap; public class TreeMapLastKeyMethodExample {    public static void main(String[] args)    {       TreeMap<String, Integer> tm = new TreeMap<String, Integer>();       tm.put(\"yellow\", 99);       tm.put(\"violet\", 86);       tm.put(\"red\", 93);       tm.put(\"green\", 36);       tm.put(\"blue\", 29);       System.out.println(\"Given TreeMap is: \" + tm);       // display lastKey of TreeMap       System.out.println(\"last key is: \" + tm.lastKey());    } }\nimport java.util.TreeMap; public class TreeMapLastEntryMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(96, \"mango\");       tm.put(39, \"grapes\");       tm.put(56, \"pineapple\");       tm.put(93, \"apple\");       tm.put(69, \"watermelon\");       // get value with greatest key       System.out.println(\"Check last entry in given TreeMap: \");       System.out.println(\"Value is: \"+ tm.lastEntry());    } }\n",
    "reg_date": "2021-10-12T12:01:05.000Z"
  },
  {
    "id": 432,
    "keyword": null,
    "link": null,
    "title": " TreeMap lowerEntry(K key) method in java",
    "description": "import java.util.Map; import java.util.TreeMap; public class TreeMapLowerEntryMethodExample {    public static void main(String[] args)    {       try       {          TreeMap<Integer, String> tm = new TreeMap<Integer, String>();          tm.put(7, \"red\");          tm.put(3, \"green\");          tm.put(6, \"violet\");          tm.put(5, \"blue\");          tm.put(4, \"yellow\");          System.out.println(\"Given TreeMap: \" + tm);          // get lowerEntry value for null using lowerEntry() method          System.out.println(\"Get lowerEntry value for value null: \");          Map.Entry<Integer, String> value = tm.lowerEntry(null);          System.out.println(\"Value is: \" + value);       }       catch(NullPointerException ex)       {          System.out.println(\"Exception : \" + ex);       }    } }\nimport java.util.TreeMap; public class TreeMapLowerEntryMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(7, \"red\");       tm.put(3, \"green\");       tm.put(6, \"violet\");       tm.put(5, \"blue\");       tm.put(4, \"yellow\");       // get lower entry       System.out.println(\"Check lower entry in given TreeMap\");       System.out.println(\"Value is: \"+ tm.lowerEntry(5));    } }\nimport java.util.TreeMap; public class TreeMapLowerKeyMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(8, \"mango\");       tm.put(5, \"apple\");       tm.put(3, \"watermelon\");       tm.put(7, \"pineapple\");       tm.put(6, \"orange\");       tm.put(9, \"grapes\");       System.out.println(\"TreeMap: \" + tm.toString());       // here 10 is not available it returns 9       System.out.print(\"Lower Key Entry of Element 10 is: \");       System.out.println(tm.lowerKey(10));       System.out.print(\"Lower Key Entry of Element 5 is: \");       System.out.println(tm.lowerKey(5));    } }\n",
    "reg_date": "2021-10-12T12:01:05.000Z"
  },
  {
    "id": 433,
    "keyword": null,
    "link": null,
    "title": " TreeMap lowerKey(K key) method in java",
    "description": "import java.util.Map; import java.util.TreeMap; public class TreeMapLowerEntryMethodExample {    public static void main(String[] args)    {       try       {          TreeMap<Integer, String> tm = new TreeMap<Integer, String>();          tm.put(7, \"red\");          tm.put(3, \"green\");          tm.put(6, \"violet\");          tm.put(5, \"blue\");          tm.put(4, \"yellow\");          System.out.println(\"Given TreeMap: \" + tm);          // get lowerEntry value for null using lowerEntry() method          System.out.println(\"Get lowerEntry value for value null: \");          Map.Entry<Integer, String> value = tm.lowerEntry(null);          System.out.println(\"Value is: \" + value);       }       catch(NullPointerException ex)       {          System.out.println(\"Exception : \" + ex);       }    } }\nexample on TreeMap lowerKey(K key) method for NullPointerException import java.util.TreeMap; public class TreeMapLowerKeyMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(8, \"mango\");       tm.put(5, \"apple\");       tm.put(3, \"watermelon\");       tm.put(7, \"pineapple\");       tm.put(6, \"orange\");       tm.put(9, \"grapes\");       System.out.println(\"TreeMap: \" + tm.toString());       try       {          // pass null as parameter to lowerKey() method          System.out.println(tm.lowerKey(null));       }       catch(Exception ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\nimport java.util.TreeMap; public class TreeMapLowerEntryMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(7, \"red\");       tm.put(3, \"green\");       tm.put(6, \"violet\");       tm.put(5, \"blue\");       tm.put(4, \"yellow\");       // get lower entry       System.out.println(\"Check lower entry in given TreeMap\");       System.out.println(\"Value is: \"+ tm.lowerEntry(5));    } }\nimport java.util.TreeMap; public class TreeMapLowerKeyMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(8, \"mango\");       tm.put(5, \"apple\");       tm.put(3, \"watermelon\");       tm.put(7, \"pineapple\");       tm.put(6, \"orange\");       tm.put(9, \"grapes\");       System.out.println(\"TreeMap: \" + tm.toString());       // here 10 is not available it returns 9       System.out.print(\"Lower Key Entry of Element 10 is: \");       System.out.println(tm.lowerKey(10));       System.out.print(\"Lower Key Entry of Element 5 is: \");       System.out.println(tm.lowerKey(5));    } }\n",
    "reg_date": "2021-10-12T12:01:06.000Z"
  },
  {
    "id": 434,
    "keyword": null,
    "link": null,
    "title": " TreeMap navigableKeySet() method in java",
    "description": "import java.util.NavigableSet; import java.util.TreeMap; public class TreeMapNavigableKeySetMethodExample {    public static void main(String[] args)    {       try       {          TreeMap<String, Integer> tm = new TreeMap<String, Integer>();          tm.put(\"apple\", 11);          tm.put(\"banana\", 12);          tm.put(\"grapes\", 13);          tm.put(\"orange\", 14);          tm.put(\"pineapple\", 15);          System.out.println(\"Given TreeMap: \" + tm);          // get NavigableSet view of keys using navigableKeySet() method          NavigableSet<String> ns = tm.navigableKeySet();          System.out.println(\"Value is: \" + ns);       }       catch(NullPointerException ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\nimport java.util.NavigableSet; import java.util.TreeMap; public class TreeMapNavigableKeySetMethodExample {    public static void main(String[] args)    {       try       {          TreeMap<Integer, String> tm = new TreeMap<Integer, String>();          tm.put(11, \"apple\");          tm.put(12, \"banana\");          tm.put(13, \"grapes\");          tm.put(14, \"orange\");          tm.put(15, \"pineapple\");          System.out.println(\"Given TreeMap: \" + tm);          // get NavigableSet view of keys using navigableKeySet() method          NavigableSet<Integer> ns = tm.navigableKeySet();          System.out.println(\"Value is: \" + ns);       }       catch(NullPointerException ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\n",
    "reg_date": "2021-10-12T12:01:06.000Z"
  },
  {
    "id": 435,
    "keyword": null,
    "link": null,
    "title": " TreeMap pollFirstEntry() method in java",
    "description": "import java.util.TreeMap; public class TreeMapPollFirstEntryMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(63, \"yellow\");       tm.put(95, \"red\");       tm.put(96, \"green\");       tm.put(21, \"violet\");       tm.put(28, \"blue\");       System.out.println(\"TreeMap before using pollFirstEntry() method: \" + tm);       System.out.println(\"Value is: \" + tm.pollFirstEntry());       System.out.println(\"TreeMap after using pollFirstEntry() method: \" + tm);    } }\nimport java.util.TreeMap; public class TreeMapPollLastEntryMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(63, \"yellow\");       tm.put(95, \"red\");       tm.put(96, \"green\");       tm.put(21, \"violet\");       tm.put(28, \"blue\");       System.out.println(\"TreeMap before using pollLastEntry() method: \" + tm);       System.out.println(\"Value is: \" + tm.pollLastEntry());       System.out.println(\"TreeMap after using pollLastEntry() method: \" + tm);    } }\n",
    "reg_date": "2021-10-12T12:01:06.000Z"
  },
  {
    "id": 436,
    "keyword": null,
    "link": null,
    "title": " TreeMap pollLastEntry() method in java",
    "description": "import java.util.TreeMap; public class TreeMapPollFirstEntryMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(63, \"yellow\");       tm.put(95, \"red\");       tm.put(96, \"green\");       tm.put(21, \"violet\");       tm.put(28, \"blue\");       System.out.println(\"TreeMap before using pollFirstEntry() method: \" + tm);       System.out.println(\"Value is: \" + tm.pollFirstEntry());       System.out.println(\"TreeMap after using pollFirstEntry() method: \" + tm);    } }\nimport java.util.TreeMap; public class TreeMapPollLastEntryMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(63, \"yellow\");       tm.put(95, \"red\");       tm.put(96, \"green\");       tm.put(21, \"violet\");       tm.put(28, \"blue\");       System.out.println(\"TreeMap before using pollLastEntry() method: \" + tm);       System.out.println(\"Value is: \" + tm.pollLastEntry());       System.out.println(\"TreeMap after using pollLastEntry() method: \" + tm);    } }\n",
    "reg_date": "2021-10-12T12:01:06.000Z"
  },
  {
    "id": 437,
    "keyword": null,
    "link": null,
    "title": " TreeMap put() method in java",
    "description": "import java.util.TreeMap; public class TreeMapPutMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(32, \"pineapple\");       tm.put(51, \"watermelon\");       tm.put(38, \"grapes\");       tm.put(69, \"mango\");       tm.put(58, \"apple\");       // put value at key 3       System.out.println(\"TreeMap before using put(K key, V value) method: \" + tm);       System.out.println(\"Value is: \" + tm.put(38, \"banana\"));       System.out.println(\"TreeMap after using put(K key, V value) method: \" + tm);    } }\n",
    "reg_date": "2021-10-12T12:01:06.000Z"
  },
  {
    "id": 438,
    "keyword": null,
    "link": null,
    "title": " TreeMap putAll() method in java",
    "description": "import java.util.TreeMap; public class TreeMapPutAllMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm1 = new TreeMap<Integer, String>();       tm1.put(32, \"pineapple\");       tm1.put(51, \"watermelon\");       tm1.put(38, \"grapes\");       tm1.put(69, \"mango\");       tm1.put(58, \"apple\");       System.out.println(\"TreeMap before using putAll() method: \" + tm1);       // create new TreeMap and copy       TreeMap<Integer, String> tm2 = new TreeMap<Integer, String>();       tm2.putAll(tm1);       System.out.println(\"TreeMap after using putAll() method: \" + tm2);    } }\n",
    "reg_date": "2021-10-12T12:01:06.000Z"
  },
  {
    "id": 439,
    "keyword": null,
    "link": null,
    "title": " TreeMap remove(Object key) method in java",
    "description": "import java.util.TreeMap; public class TreeMapRemoveMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(32, \"pineapple\");       tm.put(51, \"watermelon\");       tm.put(38, \"grapes\");       tm.put(69, \"mango\");       tm.put(58, \"apple\");       System.out.println(\"Given TreeMap is: \" + tm);       // remove existing key mapping       String strReturn = (String)tm.remove(38);       System.out.println(\"Returned value is: \" + strReturn);       System.out.println(\"New TreeMap is: \" + tm);    } }\n",
    "reg_date": "2021-10-12T12:01:06.000Z"
  },
  {
    "id": 440,
    "keyword": null,
    "link": null,
    "title": " TreeMap size() method in java",
    "description": "import java.util.TreeMap; public class TreeMapSizeMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       tm.put(32, \"pineapple\");       tm.put(51, \"watermelon\");       tm.put(38, \"grapes\");       tm.put(69, \"mango\");       tm.put(58, \"apple\");       System.out.println(\"Given TreeMap is: \" + tm);       System.out.println(\"size of TreeMap is: \" + tm.size());    } }\n",
    "reg_date": "2021-10-12T12:01:06.000Z"
  },
  {
    "id": 441,
    "keyword": null,
    "link": null,
    "title": " TreeMap subMap() method in java",
    "description": "import java.util.NavigableMap; import java.util.TreeMap; public class TreeMapSubMapMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       NavigableMap<Integer, String> nm = new TreeMap<Integer, String>();       tm.put(18, \"violet\");       tm.put(12, \"red\");       tm.put(14, \"violet\");       tm.put(16, \"green\");       tm.put(20, \"blue\");       System.out.println(\"Get a portion of TreeMap: \");       nm = tm.subMap(12, true, 18, true);       System.out.println(\"Sub map values are: \" + nm);    } }\nimport java.util.SortedMap; import java.util.TreeMap; public class TreeMapSubMapFromKeyMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       SortedMap<Integer, String> sm = new TreeMap<Integer, String>();       tm.put(18, \"violet\");       tm.put(12, \"red\");       tm.put(14, \"violet\");       tm.put(16, \"green\");       tm.put(20, \"blue\");       System.out.println(\"Gett a portion of TreeMap: \");       sm = tm.subMap(12, 18);       System.out.println(\"Sub map values are: \" + sm);    } }\n",
    "reg_date": "2021-10-12T12:01:07.000Z"
  },
  {
    "id": 442,
    "keyword": null,
    "link": null,
    "title": " TreeMap subMap(K fromKey K toKey) method in java",
    "description": "import java.util.NavigableMap; import java.util.TreeMap; public class TreeMapSubMapMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       NavigableMap<Integer, String> nm = new TreeMap<Integer, String>();       tm.put(18, \"violet\");       tm.put(12, \"red\");       tm.put(14, \"violet\");       tm.put(16, \"green\");       tm.put(20, \"blue\");       System.out.println(\"Get a portion of TreeMap: \");       nm = tm.subMap(12, true, 18, true);       System.out.println(\"Sub map values are: \" + nm);    } }\nimport java.util.SortedMap; import java.util.TreeMap; public class TreeMapSubMapFromKeyMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       SortedMap<Integer, String> sm = new TreeMap<Integer, String>();       tm.put(18, \"violet\");       tm.put(12, \"red\");       tm.put(14, \"violet\");       tm.put(16, \"green\");       tm.put(20, \"blue\");       System.out.println(\"Gett a portion of TreeMap: \");       sm = tm.subMap(12, 18);       System.out.println(\"Sub map values are: \" + sm);    } }\n",
    "reg_date": "2021-10-12T12:01:07.000Z"
  },
  {
    "id": 443,
    "keyword": null,
    "link": null,
    "title": " TreeMap tailMap(K fromKey) method in java",
    "description": "import java.util.SortedMap; import java.util.TreeMap; public class TreeMapTailMapMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       SortedMap<Integer, String> sm = new TreeMap<Integer, String>();       tm.put(18, \"violet\");       tm.put(12, \"red\");       tm.put(14, \"violet\");       tm.put(16, \"green\");       tm.put(20, \"blue\");       System.out.println(\"Get tail map of TreeMap: \");       sm = tm.tailMap(14);       System.out.println(\"Tail map values are: \" + sm);    } }\n",
    "reg_date": "2021-10-12T12:01:07.000Z"
  },
  {
    "id": 444,
    "keyword": null,
    "link": null,
    "title": " TreeMap tailMap(K fromKey boolean inclusive) method in java",
    "description": "import java.util.SortedMap; import java.util.TreeMap; public class TreeMapTailMapBooleanMethodExample {    public static void main(String[] args)    {       TreeMap<Integer, String> tm = new TreeMap<Integer, String>();       SortedMap<Integer, String> sm = new TreeMap<Integer, String>();       tm.put(18, \"violet\");       tm.put(12, \"red\");       tm.put(14, \"violet\");       tm.put(16, \"green\");       tm.put(20, \"blue\");       System.out.println(\"Get tail map of TreeMap: \");       sm = tm.tailMap(12, true);       System.out.println(\"Tail map values are: \" + sm);    } }\n",
    "reg_date": "2021-10-12T12:01:07.000Z"
  },
  {
    "id": 445,
    "keyword": null,
    "link": null,
    "title": " TreeSet addAll() method in java",
    "description": "import java.util.Iterator; import java.util.TreeSet; public class TreeSetAddAllMethodExample {    public static void main(String[] args)    {       TreeSet<Integer> ts1 = new TreeSet<Integer>();       TreeSet<Integer> ts2 = new TreeSet<Integer>();       // add in TreeSet ts1       ts1.add(23);       ts1.add(24);       ts1.add(25);       // add in TreeSet ts2       ts2.add(26);       ts2.add(27);       ts2.add(28);       // add ts2 to ts1       ts1.addAll(ts2);       // create an iterator       Iterator<Integer> iterate = ts1.iterator();       // displaying the Tree set data       System.out.print(\"TreeSet values: \");       while(iterate.hasNext())       {          System.out.print(iterate.next() + \" \");       }    } }\n",
    "reg_date": "2021-10-12T12:01:07.000Z"
  },
  {
    "id": 446,
    "keyword": null,
    "link": null,
    "title": " TreeSet ceiling() method in java",
    "description": "TreeSet ceiling() method for NullPointerException. import java.util.TreeSet; public class TreeSetCeilingMethodExample {    public static void main(String[] args)    {       try       {          TreeSet<Integer> ts = new TreeSet<Integer>();          ts.add(50);          ts.add(60);          ts.add(70);          ts.add(80);          System.out.println(\"TreeSet values: \" + ts);          // get ceiling value for null using ceiling() method          System.out.println(\"compare with null value: \");          int value = ts.ceiling(null);          // print the ceiling value          System.out.println(\"Ceiling value for null: \" + value);       }       catch(NullPointerException ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\nimport java.util.TreeSet; public class TreeSetCeilingMethodExample {    public static void main(String[] args)    {       try       {          TreeSet<Integer> ts = new TreeSet<Integer>();          ts.add(50);          ts.add(60);          ts.add(70);          ts.add(80);          System.out.println(\"TreeSet values: \" + ts);          // get ceiling value for 65 using ceiling() method          int value = ts.ceiling(65);          // print the ceiling value          System.out.println(\"Ceiling value for 65: \" + value);       }       catch(NullPointerException ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\n",
    "reg_date": "2021-10-12T12:01:07.000Z"
  },
  {
    "id": 447,
    "keyword": null,
    "link": null,
    "title": " TreeSet clear() method in java",
    "description": "import java.util.TreeSet; public class TreeSetClearMethodExample {    public static void main(String[] args)    {       TreeSet<String> ts = new TreeSet<String>();       ts.add(\"grapes\");       ts.add(\"apple\");       ts.add(\"mango\");       ts.add(\"banana\");       ts.add(\"orange\");       ts.add(\"pineapple\");       System.out.println(\"TreeSet before using clear() method: \" + ts);       // clear TreeSet using clear() method       ts.clear();       // print final TreeSet       System.out.println(\"TreeSet after using clear() method: \" + ts);    } }\n",
    "reg_date": "2021-10-12T12:01:07.000Z"
  },
  {
    "id": 448,
    "keyword": null,
    "link": null,
    "title": " TreeSet clone() method in java",
    "description": "import java.util.TreeSet; public class TreeSetCloneMethodExample {    public static void main(String[] args)    {       TreeSet<String> ts = new TreeSet<String>();       ts.add(\"green\");       ts.add(\"blue\");       ts.add(\"yellow\");       ts.add(\"red\");       ts.add(\"violet\");       ts.add(\"orange\");       System.out.println(\"TreeSet: \" + ts);       // create a new cloned TreeSet       TreeSet<String> treeCloned = new TreeSet<String>();       // clone TreeSet using clone() method       treeCloned = (TreeSet)ts.clone();       // print cloned TreeSet       System.out.println(\"cloned TreeSet: \" + treeCloned);    } }\n",
    "reg_date": "2021-10-12T12:01:07.000Z"
  },
  {
    "id": 449,
    "keyword": null,
    "link": null,
    "title": " TreeSet comparator() method in java",
    "description": "import java.util.TreeSet; public class TreeSetComparatorMethodExample {    public static void main(String[] args)    {       TreeSet<Integer> ts = new TreeSet<Integer>();       TreeSet<Integer> comp = new TreeSet<Integer>();       ts.add(5);       ts.add(6);       ts.add(7);       ts.add(8);       ts.add(9);       ts.add(10);       // use comparator       comp = (TreeSet)ts.comparator();       if(comp != null)       {          for(Integer element : comp)          {             System.out.println(element + \" \");          }       }       else       {          System.out.println(\"TreeSet comparator value: \" + comp);          System.out.println(\"Hence it is using natural ordering.\");       }    } }\n",
    "reg_date": "2021-10-12T12:01:07.000Z"
  },
  {
    "id": 450,
    "keyword": null,
    "link": null,
    "title": " TreeSet contains(Object o) method in java",
    "description": "import java.util.TreeSet; public class TreeSetContainsObjectMethodExample {    public static void main(String[] args)    {       TreeSet<String> ts = new TreeSet<String>();       ts.add(\"mango\");       ts.add(\"grapes\");       ts.add(\"apple\");       ts.add(\"banana\");       ts.add(\"orange\");       ts.add(\"pineapple\");       System.out.println(\"TreeSet: \" + ts);       // check for \"apple\"       System.out.println(\"Does TreeSet contains 'apple'? \" + ts.contains(\"apple\"));       // check for \"grapes\"       System.out.println(\"Does TreeSet contains 'grapes'? \" + ts.contains(\"grapes\"));       // check for \"red\"       System.out.println(\"Does TreeSet contains 'red'? \" + ts.contains(\"red\"));    } }\n",
    "reg_date": "2021-10-12T12:01:07.000Z"
  },
  {
    "id": 451,
    "keyword": null,
    "link": null,
    "title": " TreeSet descendingIterator() method in java",
    "description": "import java.util.Iterator; import java.util.NavigableSet; import java.util.TreeSet; public class TreeSetDescendingSetMethodExample {    public static void main(String[] args)    {       try       {          TreeSet<String> ts = new TreeSet<String>();          ts.add(\"Apple\");          ts.add(\"Banana\");          ts.add(\"Cherry\");          ts.add(\"Dragon Fruit\");          System.out.println(\"TreeSet: \" + ts);          // reverse order view of element using descendingSet() method          NavigableSet<String> ns = ts.descendingSet();          Iterator<String> iterate = ns.iterator();          System.out.println(\"Values using descendingSet() method: \");          while(iterate.hasNext())          {             System.out.println(iterate.next());          }       }       catch(NullPointerException ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\nimport java.util.Iterator; import java.util.TreeSet; public class TreeSetDescendingIteratorMethodExample {    public static void main(String[] args)    {       try       {          TreeSet<Integer> ts = new TreeSet<Integer>();          ts.add(50);          ts.add(60);          ts.add(70);          ts.add(80);          System.out.println(\"TreeSet: \" + ts);          // create descending iterator using descendingIterator() method          Iterator<Integer> iterate = ts.descendingIterator();          System.out.println(\"Values using descendingIterator() method: \");          while(iterate.hasNext())          {             System.out.println(iterate.next());          }       }       catch(NullPointerException ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\nTreeSet descendingIterator() method for String value. import java.util.Iterator; import java.util.TreeSet; public class TreeSetDescendingIteratorMethodExample {    public static void main(String[] args)    {       try       {          TreeSet<String> ts = new TreeSet<String>();          ts.add(\"Ajay\");          ts.add(\"Bharat\");          ts.add(\"Chetan\");          ts.add(\"Dinesh\");          System.out.println(\"TreeSet: \" + ts);          // create descending iterator using descendingIterator() method          Iterator<String> iterate = ts.descendingIterator();          System.out.println(\"Values using descendingIterator() method: \");          while(iterate.hasNext())          {             System.out.println(iterate.next());          }       }       catch(NullPointerException ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\n",
    "reg_date": "2021-10-12T12:01:08.000Z"
  },
  {
    "id": 452,
    "keyword": null,
    "link": null,
    "title": " TreeSet descendingSet() method in java",
    "description": "import java.util.Iterator; import java.util.NavigableSet; import java.util.TreeSet; public class TreeSetDescendingSetMethodExample {    public static void main(String[] args)    {       try       {          TreeSet<String> ts = new TreeSet<String>();          ts.add(\"Apple\");          ts.add(\"Banana\");          ts.add(\"Cherry\");          ts.add(\"Dragon Fruit\");          System.out.println(\"TreeSet: \" + ts);          // reverse order view of element using descendingSet() method          NavigableSet<String> ns = ts.descendingSet();          Iterator<String> iterate = ns.iterator();          System.out.println(\"Values using descendingSet() method: \");          while(iterate.hasNext())          {             System.out.println(iterate.next());          }       }       catch(NullPointerException ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\nimport java.util.Iterator; import java.util.TreeSet; public class TreeSetDescendingIteratorMethodExample {    public static void main(String[] args)    {       try       {          TreeSet<Integer> ts = new TreeSet<Integer>();          ts.add(50);          ts.add(60);          ts.add(70);          ts.add(80);          System.out.println(\"TreeSet: \" + ts);          // create descending iterator using descendingIterator() method          Iterator<Integer> iterate = ts.descendingIterator();          System.out.println(\"Values using descendingIterator() method: \");          while(iterate.hasNext())          {             System.out.println(iterate.next());          }       }       catch(NullPointerException ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\nTreeSet descendingIterator() method for String value. import java.util.Iterator; import java.util.TreeSet; public class TreeSetDescendingIteratorMethodExample {    public static void main(String[] args)    {       try       {          TreeSet<String> ts = new TreeSet<String>();          ts.add(\"Ajay\");          ts.add(\"Bharat\");          ts.add(\"Chetan\");          ts.add(\"Dinesh\");          System.out.println(\"TreeSet: \" + ts);          // create descending iterator using descendingIterator() method          Iterator<String> iterate = ts.descendingIterator();          System.out.println(\"Values using descendingIterator() method: \");          while(iterate.hasNext())          {             System.out.println(iterate.next());          }       }       catch(NullPointerException ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\n",
    "reg_date": "2021-10-12T12:01:08.000Z"
  },
  {
    "id": 453,
    "keyword": null,
    "link": null,
    "title": " TreeSet floor() method in java",
    "description": "import java.util.TreeSet; public class TreeSetFloorMethodExample {    public static void main(String[] args)    {       try       {          TreeSet<Integer> ts = new TreeSet<Integer>();          ts.add(50);          ts.add(60);          ts.add(70);          ts.add(80);          System.out.println(\"Given TreeSet: \" + ts);          // get floor value for 65 using floor() method          int value = ts.floor(65);          // print floor value          System.out.println(\"Floor value for 65 is : \" + value);       }       catch(NullPointerException ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\nfloor() method for NullPointerException. import java.util.TreeSet; public class TreeSetFloorMethodExample {    public static void main(String[] args)    {       try       {          TreeSet<Integer> ts = new TreeSet<Integer>();          ts.add(50);          ts.add(60);          ts.add(70);          ts.add(80);          System.out.println(\"Given TreeSet: \" + ts);          // get floor value for null using floor() method          System.out.println(\"Get floor value for null: \");          int value = ts.floor(null);          // print floor value          System.out.println(\"Floor value for 65: \" + value);       }       catch(NullPointerException ex)       {          System.out.println(\"Exception: \" + ex);       }    } }\n",
    "reg_date": "2021-10-12T12:01:08.000Z"
  },
  {
    "id": 454,
    "keyword": null,
    "link": null,
    "title": " TreeSet headSet() method in java",
    "description": "import java.util.Iterator; import java.util.TreeSet; public class TreeSetHeadSetEToElementMethodExample {    public static void main(String[] args)    {       TreeSet<Integer> ts = new TreeSet<Integer>();       TreeSet<Integer> hs = new TreeSet<Integer>();       ts.add(1);       ts.add(2);       ts.add(3);       ts.add(4);       ts.add(5);       ts.add(6);       // get values less than 5       hs = (TreeSet)ts.headSet(5);       // create iterator       Iterator<Integer> iterate = hs.iterator();       System.out.println(\"TreeSet data: \");       while(iterate.hasNext())       {          System.out.println(iterate.next() + \" \");       }    } }   \nimport java.util.Iterator; import java.util.TreeSet; public class TreeSetHeadSetMethodExample {    public static void main(String[] args)    {       TreeSet<Integer> ts = new TreeSet<Integer>();       TreeSet<Integer> hs = new TreeSet<Integer>();       ts.add(1);       ts.add(2);       ts.add(3);       ts.add(4);       ts.add(5);       ts.add(6);       // get values for 5 inclusive true       hs = (TreeSet)ts.headSet(5, true);       // create iterator       Iterator<Integer> iterate = hs.iterator();       System.out.println(\"TreeSet data for '5' inclusive TRUE: \");       while(iterate.hasNext())       {          System.out.println(iterate.next() + \" \");       }       // get values for 5 inclusive false       hs = (TreeSet)ts.headSet(5, false);       iterate = hs.iterator();       System.out.println(\"TreeSet data for '5' inclusive FALSE: \");       while(iterate.hasNext())       {          System.out.println(iterate.next() + \" \");       }    } }   \n",
    "reg_date": "2021-10-12T12:01:08.000Z"
  },
  {
    "id": 455,
    "keyword": null,
    "link": null,
    "title": " TreeSet headSet(E toElement) method in java",
    "description": "import java.util.Iterator; import java.util.TreeSet; public class TreeSetHeadSetEToElementMethodExample {    public static void main(String[] args)    {       TreeSet<Integer> ts = new TreeSet<Integer>();       TreeSet<Integer> hs = new TreeSet<Integer>();       ts.add(1);       ts.add(2);       ts.add(3);       ts.add(4);       ts.add(5);       ts.add(6);       // get values less than 5       hs = (TreeSet)ts.headSet(5);       // create iterator       Iterator<Integer> iterate = hs.iterator();       System.out.println(\"TreeSet data: \");       while(iterate.hasNext())       {          System.out.println(iterate.next() + \" \");       }    } }   \nimport java.util.Iterator; import java.util.TreeSet; public class TreeSetHeadSetMethodExample {    public static void main(String[] args)    {       TreeSet<Integer> ts = new TreeSet<Integer>();       TreeSet<Integer> hs = new TreeSet<Integer>();       ts.add(1);       ts.add(2);       ts.add(3);       ts.add(4);       ts.add(5);       ts.add(6);       // get values for 5 inclusive true       hs = (TreeSet)ts.headSet(5, true);       // create iterator       Iterator<Integer> iterate = hs.iterator();       System.out.println(\"TreeSet data for '5' inclusive TRUE: \");       while(iterate.hasNext())       {          System.out.println(iterate.next() + \" \");       }       // get values for 5 inclusive false       hs = (TreeSet)ts.headSet(5, false);       iterate = hs.iterator();       System.out.println(\"TreeSet data for '5' inclusive FALSE: \");       while(iterate.hasNext())       {          System.out.println(iterate.next() + \" \");       }    } }   \n",
    "reg_date": "2021-10-12T12:01:08.000Z"
  },
  {
    "id": 456,
    "keyword": null,
    "link": null,
    "title": " TreeSet higher() method in java",
    "description": "import java.util.TreeSet; public class TreeSetHigherMethodExample {    public static void main(String[] args)    {       TreeSet<Integer> ts = new TreeSet<Integer>();       ts.add(9);       ts.add(4);       ts.add(6);       ts.add(2);       ts.add(10);       ts.add(3);       System.out.println(ts.higher(9));    } }\nTreeSet higher() method for NullPointerException. import java.util.TreeSet; public class TreeSetHigherMethodExample {    public static void main(String[] args)    {       TreeSet<Integer> ts = new TreeSet<Integer>();       ts.add(9);       ts.add(4);       ts.add(6);       ts.add(2);       ts.add(10);       ts.add(3);       // pass null to method       try       {          System.out.println(ts.higher(null));       }       catch(Exception ex)       {          System.out.println(ex);       }    } }\nTreeSet higher() method for ClassCastException. import java.util.ArrayList; import java.util.LinkedList; import java.util.List; import java.util.TreeSet; public class TreeSetHigherMethodExample {    public static void main(String[] args)    {       TreeSet<List> ts = new TreeSet<List>();       List<Integer> li1 = new LinkedList<Integer>();       try       {          li1.add(2);          li1.add(4);          ts.add(li1);          List<Integer> li2 = new LinkedList<Integer>();          li2.add(6);          li2.add(8);          List<Integer> li3 = new ArrayList<Integer>();          li2.add(10);          li2.add(12);       }       catch(Exception ex)       {          System.out.println(ex);       }    } }\n",
    "reg_date": "2021-10-12T12:01:08.000Z"
  },
  {
    "id": 457,
    "keyword": null,
    "link": null,
    "title": " TreeSet in java",
    "description": "import java.util.Iterator; import java.util.TreeSet; public class TreeSetIteratorMethodExample {    public static void main(String[] args)    {       TreeSet<Integer> ts = new TreeSet<Integer>();       ts.add(23);       ts.add(52);       ts.add(63);       ts.add(21);       // create ascending iterator       Iterator<Integer> iterate = ts.iterator();       // print TreeSet       System.out.println(\"TreeSet in ascending order: \");       while(iterate.hasNext())       {          System.out.println(iterate.next() + \" \");       }    } }\npackage MyPackage;    public class Tree {      static class Node {         int value;          Node left, right;                     Node(int value){              this.value = value;              left = null;              right = null;          }      }              public void insert(Node node, int value) {         if (value < node.value) { if (node.left != null) { insert(node.left, value); } else { System.out.println(\" Inserted \" + value + \" to left of \" + node.value); node.left = new Node(value); } } else if (value > node.value) {           if (node.right != null) {             insert(node.right, value);           } else {             System.out.println(\"  Inserted \" + value + \" to right of \"                 + node.value);             node.right = new Node(value);           }         }       }      public void traverseInOrder(Node node) {         if (node != null) {             traverseInOrder(node.left);             System.out.print(\" \" + node.value);             traverseInOrder(node.right);         }      }            public static void main(String args[])      {      Tree tree = new Tree();                 Node root = new Node(5);                 System.out.println(\"Binary Tree Example\");                 System.out.println(\"Building tree with root value \" + root.value);                 tree.insert(root, 2);                 tree.insert(root, 4);                 tree.insert(root, 8);                 tree.insert(root, 6);                 tree.insert(root, 7);                 tree.insert(root, 3);                 tree.insert(root, 9);                 System.out.println(\"Traversing tree in order\");                 tree.traverseLevelOrder();                                } }\n// java treeset example import java.util.Iterator; import java.util.TreeSet; public class TreeSetExamples {    public static void main(String[] args)    {       TreeSet<String> ts = new TreeSet<String>();       ts.add(\"red\");       ts.add(\"blue\");       ts.add(\"green\");       ts.add(\"red\");       Iterator<String> iterate = ts.iterator();       while(iterate.hasNext())       {          System.out.println(iterate.next());       }    } }\nimport java.util.*;  // Declare the variable using the interface of the object for flexibility. // Non-primative data types only. Set<String> movies = new TreeSet<String>();  movies.add(E); // TreeSet will be sorted by element. // Work with any comparable object.  movies.add(\"The Shining\"); movies.add(\"Dawn of the Dead\"); movies.add(\"Zombieland\");\n- TreeSet sorts the order and don't accept null \n// extrait de la classe TreeSet public class TreeSet extends AbstractSet         implements SortedSet, Cloneable, java.io.Serializable {   //...   public TreeSet() {     this(new TreeMap());   }   //... }\n",
    "reg_date": "2021-10-12T12:01:08.000Z"
  },
  {
    "id": 458,
    "keyword": null,
    "link": null,
    "title": " TreeSet isEmpty() method in java",
    "description": "import java.util.TreeSet; public class TreeSetIsEmptyMethodExample {    public static void main(String[] args)    {       TreeSet<String> ts = new TreeSet<String>();       ts.add(\"violet\");       ts.add(\"green\");       ts.add(\"red\");       ts.add(\"yellow\");       ts.add(\"blue\");       ts.add(\"indigo\");       System.out.println(\"Given TreeSet: \" + ts);       // check for empty TreeSet       System.out.println(\"Is TreeSet empty? \" + ts.isEmpty());       // clear TreeSet using clear() method       ts.clear();       // again check for empty TreeSet       System.out.println(\"Is TreeSet empty? \" + ts.isEmpty());    } }\n",
    "reg_date": "2021-10-12T12:01:08.000Z"
  },
  {
    "id": 459,
    "keyword": null,
    "link": null,
    "title": " TreeSet iterator() method in java",
    "description": "import java.util.Iterator; import java.util.TreeSet; public class TreeSetIteratorMethodExample {    public static void main(String[] args)    {       TreeSet<Integer> ts = new TreeSet<Integer>();       ts.add(23);       ts.add(52);       ts.add(63);       ts.add(21);       // create ascending iterator       Iterator<Integer> iterate = ts.iterator();       // print TreeSet       System.out.println(\"TreeSet in ascending order: \");       while(iterate.hasNext())       {          System.out.println(iterate.next() + \" \");       }    } }\n",
    "reg_date": "2021-10-12T12:01:09.000Z"
  },
  {
    "id": 460,
    "keyword": null,
    "link": null,
    "title": " TreeSet last() method in java",
    "description": "import java.util.TreeSet; public class TreeSetLastMethodExample {    public static void main(String[] args)    {       TreeSet<Integer> ts = new TreeSet<Integer>();       ts.add(58);       ts.add(42);       ts.add(29);       ts.add(10);       // print last highest element       System.out.println(\"Last highest element is: \" + ts.last());    } }\nTreeSet last() method when elements are String types. import java.util.TreeSet; public class TreeSetLastMethodExample {    public static void main(String[] args)    {       TreeSet<String> ts = new TreeSet<String>();       ts.add(\"grapes\");       ts.add(\"banana\");       ts.add(\"watermelon\");       ts.add(\"apple\");       // print last highest element       System.out.println(\"Last highest element is: \" + ts.last());    } }\n",
    "reg_date": "2021-10-12T12:01:09.000Z"
  },
  {
    "id": 461,
    "keyword": null,
    "link": null,
    "title": " TreeSet lower() method in java",
    "description": "import java.util.TreeSet; public class TreeSetLowerMethodExample {    public static void main(String[] args)    {       TreeSet<Integer> ts = new TreeSet<Integer>();       ts.add(15);       ts.add(8);       ts.add(3);       ts.add(2);       ts.add(10);       ts.add(5);       System.out.println(ts.lower(18));    } }   \nTreeSet lower() method for ClassCastException. import java.util.ArrayList; import java.util.LinkedList; import java.util.List; import java.util.TreeSet; public class TreeSetLowerMethodExample {    public static void main(String[] args)    {       TreeSet<List> ts = new TreeSet<List>();       List<Integer> li1 = new LinkedList<Integer>();       li1.add(10);       li1.add(20);       ts.add(li1);       List<Integer> li2 = new LinkedList<Integer>();       li2.add(30);       li2.add(40);       List<Integer> li3 = new ArrayList<Integer>();       li2.add(50);       li2.add(60);       try       {          System.out.println(ts.lower(li3));       }       catch(Exception ex)       {          System.out.println(ex);       }    } }\nTreeSet lower() method for NullPointerException. import java.util.TreeSet; public class TreeSetLowerMethodExample {    public static void main(String[] args)    {       TreeSet<Integer> ts = new TreeSet<Integer>();       try       {          ts.add(15);          ts.add(8);          ts.add(3);          ts.add(2);          ts.add(10);          ts.add(5);          System.out.println(ts.lower(null));       }       catch(Exception ex)       {          ex.printStackTrace();       }    } }   \n",
    "reg_date": "2021-10-12T12:01:09.000Z"
  },
  {
    "id": 462,
    "keyword": null,
    "link": null,
    "title": " TreeSet remove() method in java",
    "description": "import java.util.TreeSet; public class TreeSetRemoveMethodExample {    public static void main(String[] args)    {       TreeSet<String> ts = new TreeSet<String>();       ts.add(\"orange\");       ts.add(\"green\");       ts.add(\"blue\");       ts.add(\"red\");       ts.add(\"violet\");       ts.add(\"yellow\");       System.out.println(\"Given TreeSet: \" + ts);       // remove elements using remove() method       ts.remove(\"blue\");       ts.remove(\"violet\");       ts.remove(\"red\");       // print TreeSet after removal       System.out.println(\"New TreeSet: \" + ts);    } }   \n",
    "reg_date": "2021-10-12T12:01:09.000Z"
  },
  {
    "id": 463,
    "keyword": null,
    "link": null,
    "title": " TreeSet subSet() method in java",
    "description": "import java.util.Iterator; import java.util.TreeSet; public class TreeSetSubSetMethodExample {    public static void main(String[] args)    {       TreeSet<Integer> ts = new TreeSet<Integer>();       TreeSet<Integer> sub = new TreeSet<Integer>();       ts.add(11);       ts.add(22);       ts.add(33);       ts.add(44);       ts.add(55);       ts.add(66);       ts.add(77);       ts.add(88);       // creating subset       sub = (TreeSet)ts.subSet(22, true, 77, true);       // create iterator       Iterator<Integer> iterate = sub.iterator();       System.out.println(\"TreeSet subset: \");       while(iterate.hasNext())       {          System.out.println(iterate.next() + \" \");       }    } }   \n",
    "reg_date": "2021-10-12T12:01:09.000Z"
  },
  {
    "id": 464,
    "keyword": null,
    "link": null,
    "title": " Tutorialspoint Java",
    "description": "Refer to this website: http://allaboutjava.com/\n",
    "reg_date": "2021-10-12T12:01:09.000Z"
  },
  {
    "id": 465,
    "keyword": null,
    "link": null,
    "title": " Types of HTML alerts",
    "description": "<div class=\"alert alert-primary\" role=\"alert\">   This is a primary alert&mdash;check it out! </div> <div class=\"alert alert-secondary\" role=\"alert\">   This is a secondary alert&mdash;check it out! </div> <div class=\"alert alert-success\" role=\"alert\">   This is a success alert&mdash;check it out! </div> <div class=\"alert alert-danger\" role=\"alert\">   This is a danger alert&mdash;check it out! </div> <div class=\"alert alert-warning\" role=\"alert\">   This is a warning alert&mdash;check it out! </div> <div class=\"alert alert-info\" role=\"alert\">   This is a info alert&mdash;check it out! </div> <div class=\"alert alert-light\" role=\"alert\">   This is a light alert&mdash;check it out! </div> <div class=\"alert alert-dark\" role=\"alert\">   This is a dark alert&mdash;check it out! </div>\n",
    "reg_date": "2021-10-12T12:01:09.000Z"
  },
  {
    "id": 466,
    "keyword": null,
    "link": null,
    "title": " Unable to find bundled Java version.",
    "description": "cd /Applications/Android\\ Studio.app/Contents/jre  ln -s ../jre jdk  ln -s \"/Library/Internet Plug-Ins/JavaAppletPlugin.plugin\" jdk  flutter doctor -v \n",
    "reg_date": "2021-10-12T12:01:09.000Z"
  },
  {
    "id": 467,
    "keyword": null,
    "link": null,
    "title": " Unhandled exception: java.lang.InterruptedException",
    "description": "try {     Thread.sleep(1500); } catch(InterruptedException e) {     System.out.println(\"got interrupted!\"); }\n",
    "reg_date": "2021-10-12T12:01:09.000Z"
  },
  {
    "id": 468,
    "keyword": null,
    "link": null,
    "title": " Unique character from String map",
    "description": "Map -- Unique character from String public static void main(String[] args) {      String str = \"accabbcd\";     Map<Character, Integer> unique = new HashMap<>();      for( int j = 0; j < str.length(); j++) {         int count =0;         for (int i = 0; i < str.length(); i++) {             if(str.charAt(i) == str.charAt(j))                 count++;         }         if( count == 1){             unique.put(str.charAt(j), count);         }     }      System.out.println(unique);  }\n",
    "reg_date": "2021-10-12T12:01:09.000Z"
  },
  {
    "id": 469,
    "keyword": null,
    "link": null,
    "title": " Unrecognized option: --version Error: Could not create the Java Virtual Machine. Error: A fatal exception has occurred. Program will exit.",
    "description": "java -version\njava -version and not java --version.\n",
    "reg_date": "2021-10-12T12:01:10.000Z"
  },
  {
    "id": 470,
    "keyword": null,
    "link": null,
    "title": " Unsupported Modules Detected",
    "description": "save .idea folder somewhere else (for backup) remove .idea folder start AndroidStudio select project [there may be an error, ignore that] click File -> Invalidate Caches/ Restart click button: Invalidate Caches/ Restart resolved\nDelete .idea/modules.xml Reload All Gradle Projects\n",
    "reg_date": "2021-10-12T12:01:10.000Z"
  },
  {
    "id": 471,
    "keyword": null,
    "link": null,
    "title": " Utils code for plugin minecraft",
    "description": "package ____________;  import org.bukkit.ChatColor;  public class Utils {      public  static String chat (String s) {         return ChatColor.translateAlternateColorCodes('&', s);     }  }\n",
    "reg_date": "2021-10-12T12:01:10.000Z"
  },
  {
    "id": 472,
    "keyword": null,
    "link": null,
    "title": " Validation failed for query for method public abstract java.util.List",
    "description": "@Query(value = \"SELECT ...\", nativeQuery = true) public List<Object[]> transactions();\n",
    "reg_date": "2021-10-12T12:01:10.000Z"
  },
  {
    "id": 473,
    "keyword": null,
    "link": null,
    "title": " W/System.err: java.io.IOException: Cleartext HTTP traffic to  not permitted",
    "description": "<application    android:usesCleartextTraffic=\"true\"\n",
    "reg_date": "2021-10-12T12:01:10.000Z"
  },
  {
    "id": 474,
    "keyword": null,
    "link": null,
    "title": " WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable",
    "description": "Sounds silly, but if you've copied .bashrc lines from somewhere check that the quotation marks are like this:     export HADOOP_OPTS=\"-Djava.library.path=$HADOOP_HOME/lib/native\" and not like this     export HADOOP_OPTS=&rdquo;-Djava.library.path=$HADOOP_HOME/lib/native&rdquo;  ...took me some time\n",
    "reg_date": "2021-10-12T12:01:10.000Z"
  },
  {
    "id": 475,
    "keyword": null,
    "link": null,
    "title": " WHAT IS JRE",
    "description": "&bull; Java Runtime Environment : \tIt physically exists.  \tThe Java Runtime Environment provides     the minimum requirements such as libraries     and Class Loader for executing a      Java application on JVM.  \tIt consists of the Java Virtual Machine     core classes, and supporting files.\n",
    "reg_date": "2021-10-12T12:01:10.000Z"
  },
  {
    "id": 476,
    "keyword": null,
    "link": null,
    "title": " What AJAJ stand for",
    "description": "Asynchronous JavaScript and JSON\n",
    "reg_date": "2021-10-12T12:01:10.000Z"
  },
  {
    "id": 477,
    "keyword": null,
    "link": null,
    "title": " What are abstract methods in java",
    "description": "Sometimes we may come across a situation where we cannot provide  implementation to all the methods in a class. We want to leave the  implementation to a class that extends it. In such case we declare a class as abstract.To make a class abstract we use key word abstract.  Any class that contains one or more abstract methods is declared as abstract.  If we don&rsquo;t declare class as abstract which contains abstract methods we get  compile time error.      1)Abstract classes cannot be instantiated   2)An abstarct classes contains abstract method, concrete methods or both.   3)Any class which extends abstarct class must override all methods of abstract     class   4)An abstarct class can contain either 0 or more abstract method.    \nAn abstract method is the method which does&rsquo;nt have any body.  Abstract method is declared with keyword abstract and semicolon in place of method body.    public abstract void <method name>(); Ex : public abstract void getDetails(); It is the responsibility of subclass to provide implementation to  abstract method defined in abstract class\nNo, abstract class can have zero abstract methods. \nabstract class scratch{    }\n//abstract parent class abstract class Animal{    //abstract method    public abstract void sound(); } //Dog class extends Animal class public class Dog extends Animal{     public void sound(){ \tSystem.out.println(\"Woof\");    }    public static void main(String args[]){ \tAnimal obj = new Dog(); \tobj.sound();    } }\npublic abstract class GraphicObject {     abstract void draw(); }\n",
    "reg_date": "2021-10-12T12:01:10.000Z"
  },
  {
    "id": 478,
    "keyword": null,
    "link": null,
    "title": " What is Array?",
    "description": "&bull; An array is a container object that holds a fixed number  of values of a single type. The length of an array is established  when the array is created. After creation, its length is fixed.  You have seen an example of arrays already, in the main  method of the \"Hello World!\" application. This section discusses arrays in greater detail.  &bull; Each item in an array is called an element,  and each element is accessed by its numerical index.  &bull; Advantage of Java Array  o Code Optimization: It makes the code optimized,  we can retrieve or sort the data easily.  o Random access: We can get any data located at any index position.  &bull; Disadvantage of Java Array  o Size Limit: We can store only fixed size of elements in the array.  It doesn't grow its size at runtime. To solve this  problem, collection framework is used in java.\n // *** An array is a collection of data items, all of the same type,  //     accessed using a common name  int main() {       // Creating an integer array named arr of size 10.     int arr[10];     // accessing element at 0 index and setting its value     // to 5.     arr[0] = 5;     // access and print value at 0 index we get the output     // as 5.     printf(\"%d\", arr[0]);       return 0; }\n",
    "reg_date": "2021-10-12T12:01:10.000Z"
  },
  {
    "id": 479,
    "keyword": null,
    "link": null,
    "title": " What is IS-A relationship in java",
    "description": "&lsquo;Has a &lsquo; relationship is also known as &ldquo;composition or Aggregation&rdquo;.  As in inheritance we have &lsquo;extends&rsquo; keyword we don&rsquo;t have any keyword to  implement &lsquo;Has a&rsquo; relationship in java. The main advantage of &lsquo;Has-A&lsquo;  relationship in java code reusability. For has a relationship we use new keyword  Ex: Car has an engine. We cannot say Car in an engine.\n&lsquo;is a&rsquo; relationship is also known as inheritance. We can implement  &lsquo;is a&rsquo; relationship or inheritance in java using extends keyword.  The advantage of inheritance or is a relationship is reusability of code  instead of duplicating the code.    Ex :  Motor cycle is a vehicle Car is a vehicle  Both, car and motorcycle extends vehicle.\npublic class Actress extends Person {        public String readScript(String movie) {        return \"Reading the script of \" + movie;    }         // additional methods/constructors}\n",
    "reg_date": "2021-10-12T12:01:11.000Z"
  },
  {
    "id": 480,
    "keyword": null,
    "link": null,
    "title": " What is a point class in java?",
    "description": "public class Point { private double x; private double y;  public Point(double x, double y){     this.x=x;     this.y=y; }public String toString(){     return \"(\"+ this.x+\",\"+this.y+\")\"; } public static void main(String[] args){     Point point= new Point(3,2);             System.out.println(point.tostring());     } }\n",
    "reg_date": "2021-10-12T12:01:11.000Z"
  },
  {
    "id": 481,
    "keyword": null,
    "link": null,
    "title": " What is a try block in java?",
    "description": "Java try block is used to enclose the code that might throw an exception\ntry {   //  Block of code to try } catch(Exception e) {   //  Block of code to handle errors }\ntry block: code that is protected for any exceptions. and it is mandatory  (only try) catch block: if any exception happens during runtime in the try block,  the catch block will catch that exception. if any exception happens during runtime in the try block,  control will be given to catch block. An optional finally block gives us a chance to run the code which  we want to execute EVERYTIME a try-catch block is completed  &ndash; either with errors or without any error.\n",
    "reg_date": "2021-10-12T12:01:11.000Z"
  },
  {
    "id": 482,
    "keyword": null,
    "link": null,
    "title": " What is an error in Java",
    "description": "Error is the subclass of Throwable class in java. When errors are caused  by our program we call that as Exception, but sometimes exceptions are  caused due to some environment issues such as running out of memory.  In such cases we can&rsquo;t handle the exceptions.  Exceptions which cannot be recovered are called as errors in java. Ex : Out of memory issues\n",
    "reg_date": "2021-10-12T12:01:11.000Z"
  },
  {
    "id": 483,
    "keyword": null,
    "link": null,
    "title": " What is null mean in java",
    "description": "When a reference variable doesn&rsquo;t point to any value it is assigned null. Example : Employee employee; In the example employee object is not instantiate so it is  pointed no where\n",
    "reg_date": "2021-10-12T12:01:11.000Z"
  },
  {
    "id": 484,
    "keyword": null,
    "link": null,
    "title": " What is packages in java",
    "description": "Package is a mechanism to group related classes ,interfaces and enums  in to a single module. Package can be declared using the following statement : Syntax : package <package-name> Coding Convention : package name should be declared in small letters. package statement defines the namespace. The main use of package is 1) To resolve naming conflicts 2) For visibility control : We can define classes and interfaces that are  not accessible outside the class\n// import <package>\t\t\t-> Imports the whole package // import <package>.<class> -> Imports a certain class import java.util.Scanner;\n",
    "reg_date": "2021-10-12T12:01:11.000Z"
  },
  {
    "id": 485,
    "keyword": null,
    "link": null,
    "title": " While looping in java",
    "description": "int number = 1;  while(number < 10){   System.out.println(number);   number += 1; }  \n",
    "reg_date": "2021-10-12T12:01:11.000Z"
  },
  {
    "id": 486,
    "keyword": null,
    "link": null,
    "title": " Why is it not recommended to use script elements in jsp?",
    "description": "Scriptlet is similar to expression except for the equal sign &ldquo;=&rdquo;. ... Because of mixing between Java code and HTML make JSP page difficult to maintain so scriptlet is not recommended for future development\n",
    "reg_date": "2021-10-12T12:01:11.000Z"
  },
  {
    "id": 487,
    "keyword": null,
    "link": null,
    "title": " Write a Java program to count the letters numbers and other characters of an input string.",
    "description": "public static String countLetter(String str){     String abc=str;     int a=0,b=0;     while(str.length()>0){         int i=0;         String ch=str.substring(i,i+1);         if(ch.matches(\".*[a-zA-Z].*\")){             a++;         }else if (ch.matches(\".*[0-9].*\")){             b++;         }         str=str.substring(i+1);     }     return abc + \" has \"+a+\" letters \"+b+\" digit            and \"+(abc.length()-(a+b))+\" other characters \";               OR+++++++++++++++++++++++++++++++++                 static void findSum(String str) {    int total= str.length();    str = str.replaceAll(\"\\\\s\", \"\");    int num =0;    int letter=0;    int i=0;    while(i<str.length()){       char ch = str.charAt(i);       // if current character is a digit       if (Character.isDigit(ch))          num ++;          // if current character is an alphabet       else {          letter++;       }       i++;    }    System.out.println(letter + \" letters -> \"+num +                       \" numbers -> \"+ (total-letter-num) + \" other chars\"); }                  \n",
    "reg_date": "2021-10-12T12:01:12.000Z"
  },
  {
    "id": 488,
    "keyword": null,
    "link": null,
    "title": " Write a method that takes a parameter int size and returns an int[] array of that size.",
    "description": "public int[] makeArray(int size) {     int[] arr = new int[size];     for(int i = 0; i < arr.length; i++)         {             arr[i] = 0;         }         return arr; } \nwrite a method that takes a parameter int size and returns an int[] array of that size.\n",
    "reg_date": "2021-10-12T12:01:12.000Z"
  },
  {
    "id": 489,
    "keyword": null,
    "link": null,
    "title": " Write a program that asks the user for a number n and prints the sum of the numbers 1 to n.",
    "description": "public class Main {   public static void main(String[] args) {     var scanner = new java.util.Scanner(System.in);     System.out.print(\"What is n? \");     int n = scanner.nextInt();     int sum = 0;     for (int i = 1; i <= n; ++i) {       sum += i;     }     System.out.println(\"The sum of 1..n is \" + sum);   } }\n",
    "reg_date": "2021-10-12T12:01:12.000Z"
  },
  {
    "id": 490,
    "keyword": null,
    "link": null,
    "title": " Write a program that asks the user for their name and greets them with their name",
    "description": "public class Main {   public static void main(String[] args) {     var scanner = new java.util.Scanner(System.in);     System.out.print(\"What is your name? \");     var name = scanner.nextLine();     System.out.println(\"Hello \" + name + \"!\"):   } }\n",
    "reg_date": "2021-10-12T12:01:12.000Z"
  },
  {
    "id": 491,
    "keyword": null,
    "link": null,
    "title": " Write a program that prints \"Hello World\" to the screen",
    "description": "#include <stdio.h> #include <stdlib.h>  int main() {   printf(\"Hello, World!\");   return 0; }\npublic class Main {   public static void main(String[] args) {     System.out.println(\"Hello, World!\");   } }\n",
    "reg_date": "2021-10-12T12:01:12.000Z"
  },
  {
    "id": 492,
    "keyword": null,
    "link": null,
    "title": " Write a program that prints a multiplication table for numbers up to 12.",
    "description": "public class Main {   public static void main(String[] args) {     for (int y = 1; y <= 12; ++y) {       for (int x = 1; x <= 12; ++x) {         System.out.printf(\"M\", y*x);       }       System.out.println();     }   } }\n",
    "reg_date": "2021-10-12T12:01:12.000Z"
  },
  {
    "id": 493,
    "keyword": null,
    "link": null,
    "title": " Write a program that prints all prime numbers less than 1,000,000",
    "description": "public class Main {   public static void main(String[] args) {     for (int i = 2; i < 1_000_000; ++i) {       boolean isPrime = true;       int sqrt = (int)Math.ceil(Math.sqrt(i));       for (int divisor = 2; divisor <= sqrt; ++divisor) {         if (i % divisor == 0) {           isPrime = false;           break;         }       }       if (isPrime) {         System.out.println(i);       }     }   } }\n",
    "reg_date": "2021-10-12T12:01:12.000Z"
  },
  {
    "id": 494,
    "keyword": null,
    "link": null,
    "title": " Write a program that prints the next 20 leap years.",
    "description": "public class Main {   public static void main(String[] args) {     var scanner = new java.util.Scanner(System.in);     System.out.print(\"What is the current year? \");     int year = scanner.nextInt() + 1;     int count = 0;     while (count < 20) {       if (year % 4 == 0) {         if (year % 100 != 0 || year % 400 == 0) {           ++count;           System.out.println(year);         }       }       ++year;     }   } }\n2024 2040\n",
    "reg_date": "2021-10-12T12:01:12.000Z"
  },
  {
    "id": 495,
    "keyword": null,
    "link": null,
    "title": " Write a program to find factorial of a number using for loop in java",
    "description": "public class Main { public static void main(String[] args) { int num = 15; long factorial = 1; for(int i = 1; i <= num; ++i) { factorial = factorial * i; } System.out.printf(\"Factorial of %d is\", factorial); } }\n",
    "reg_date": "2021-10-12T12:01:12.000Z"
  },
  {
    "id": 496,
    "keyword": null,
    "link": null,
    "title": " Writing an array to JSON file",
    "description": "package com.howtodoinjava.demo.jsonsimple;   import java.io.FileWriter; import java.io.IOException; import org.json.simple.JSONArray; import org.json.simple.JSONObject;   public class WriteJSONExample {     @SuppressWarnings(\"unchecked\")     public static void main( String[] args )     {         //First Employee         JSONObject employeeDetails = new JSONObject();         employeeDetails.put(\"firstName\", \"Lokesh\");         employeeDetails.put(\"lastName\", \"Gupta\");         employeeDetails.put(\"website\", \"howtodoinjava.com\");                   JSONObject employeeObject = new JSONObject();          employeeObject.put(\"employee\", employeeDetails);                   //Second Employee         JSONObject employeeDetails2 = new JSONObject();         employeeDetails2.put(\"firstName\", \"Brian\");         employeeDetails2.put(\"lastName\", \"Schultz\");         employeeDetails2.put(\"website\", \"example.com\");                   JSONObject employeeObject2 = new JSONObject();          employeeObject2.put(\"employee\", employeeDetails2);                   //Add employees to list         JSONArray employeeList = new JSONArray();         employeeList.add(employeeObject);         employeeList.add(employeeObject2);                   //Write JSON file         try (FileWriter file = new FileWriter(\"employees.json\")) {             //We can write any JSONArray or JSONObject instance to the file             file.write(employeeList.toJSONString());              file.flush();           } catch (IOException e) {             e.printStackTrace();         }     } } \n",
    "reg_date": "2021-10-12T12:01:12.000Z"
  },
  {
    "id": 497,
    "keyword": null,
    "link": null,
    "title": " Xlint:deprecation android studio",
    "description": "//add to android project level build.gradle allprojects {     gradle.projectsEvaluated {         tasks.withType(JavaCompile) {             options.compilerArgs << \"-Xlint:unchecked\" << \"-Xlint:deprecation\"         }     } }\n",
    "reg_date": "2021-10-12T12:01:12.000Z"
  },
  {
    "id": 498,
    "keyword": null,
    "link": null,
    "title": "  recent version of the Java Runtime (class file version 55.0)",
    "description": "add env in manifest.yml  applications:  env:             JBP_CONFIG_OPEN_JDK_JRE: \"{jre: { version: 11.+ }}\"\n",
    "reg_date": "2021-10-12T12:01:13.000Z"
  },
  {
    "id": 499,
    "keyword": null,
    "link": null,
    "title": " abs in java",
    "description": "import java.lang.Math; int sum,x=-5; sum = Math.abs(x);\nMath.abs(number);\npublic class Test {      public static void main(String args[]) {       Integer a = -8;       double d = -100;       float f = -90;        System.out.println(Math.abs(a));       System.out.println(Math.abs(d));            System.out.println(Math.abs(f));        } }\nabs(intx);\n",
    "reg_date": "2021-10-12T12:01:13.000Z"
  },
  {
    "id": 500,
    "keyword": null,
    "link": null,
    "title": " absolute method in jdbc",
    "description": "absolute(int row) -> go to specific row\n",
    "reg_date": "2021-10-12T12:01:13.000Z"
  },
  {
    "id": 501,
    "keyword": null,
    "link": null,
    "title": " absolute value java",
    "description": "import java.lang.Math; int sum,x=-5; sum = Math.abs(x);\npublic class Test {      public static void main(String args[]) {       Integer a = -8;       double d = -100;       float f = -90;        System.out.println(Math.abs(a));       System.out.println(Math.abs(d));            System.out.println(Math.abs(f));        } }\nabs(intx);\n",
    "reg_date": "2021-10-12T12:01:13.000Z"
  },
  {
    "id": 502,
    "keyword": null,
    "link": null,
    "title": " abstract vs final",
    "description": "1-Abstract method should be overriden  -Final method can't be overriden 2-Abstract method can be inherited  -Final can't be inherited 3-Abstract can be w/o implementation  -Final must have implemetation 4-Abstract we can't create objects  -Final we can create objects(string) 5-Abstract can't be instantiated  -Final can be instantiated\n",
    "reg_date": "2021-10-12T12:01:13.000Z"
  },
  {
    "id": 503,
    "keyword": null,
    "link": null,
    "title": " abstraction in java",
    "description": "bstraction: Hiding the implementation details,  concentrating on essentials things,  without worrying about the details  ■ In java, abstraction is achieved via abstract class or interface  ■ Abstraction cannot exist without inheritance   3.1. Abstract class a class that's meant to be inherited  (cannot be private or final) ■ To create an abstract class: add keyword abstract  before the class declaration  ■ A class that we cannot create object  when abstract class extended by regular class:  we MUST override all the abstract methods of super class when abstract class extended by abstract class:  no need to override any abstract methods  abstract class vs non-abstract class: NON-ABSTRACT CLASS: cannot have: abstract methods can have: constructor, instance method, static method,  instance block, static block, instance variable, static variable ABSTRACT CLASS: can have: constructor, instance method, static method, instance block, static block, instance variable, static variable... ABSTRACT METHOD: method without implementation, meant to be override  (cannot create object, cannot be final,static,private)  FRAMEWORK EXAMPLE: In my framework I have achieved abstraction by using collections  or Map, because it&rsquo;s all interface. Most of the cases I come  across using List. If we want to access elements frequently  by using index, List is a way to go. ArrayList provides  faster access if we know index. If we want to store elements and  want them to maintain an order, List is a better choice.  i) List webs = driver.getWindowHandles();     =>create a list first to store web URLs in list ii)To handle dynamic elements store it in the list and identify by index List all = driver.findElements(By.tagname(&ldquo;&rdquo;)); In my framework I follow POM and had situations where some pages  shared similar actions that were similar but worked slightly  different, so I was able to use abstraction to define those  actions and implement them in each page according to what was needed  for that webpage\nAbstraction is defined as hiding internal implementation and showing only  necessary information. // abstract class abstract class Addition {    // abstract methods    public abstract int addTwoNumbers(int number1, int number2);    public abstract int addFourNumbers(int number1, int number2, int number3, int number4);    // non-abstract method    public void printValues()    {       System.out.println(\"abstract class printValues() method\");    } } class AbstractMethodExample extends Addition {    public int addTwoNumbers(int number1, int number2)    {       return number1 + number2;    }    public int addFourNumbers(int number1, int number2, int number3, int number4)    {       return number1 + number2 + number3 + number4;    }    public static void main(String[] args)    {       Addition add = new AbstractMethodExample();       System.out.println(add.addTwoNumbers(6, 6));       System.out.println(add.addFourNumbers(8, 8, 3, 2));       add.printValues();    } }\nAbstraction is nothing but the quality of dealing with ideas rather than  events. It basically deals with hiding the internal details and showing  the essential things to the user.\n// abstraction in java with example // abstract class abstract class Addition {    // abstract methods    public abstract int addTwoNumbers(int number1, int number2);    public abstract int addFourNumbers(int number1, int number2, int number3, int number4);    // non-abstract method    public void printValues()    {       System.out.println(\"abstract class printValues() method\");    } } class AbstractMethodExample extends Addition {    public int addTwoNumbers(int number1, int number2)    {       return number1 + number2;    }    public int addFourNumbers(int number1, int number2, int number3, int number4)    {       return number1 + number2 + number3 + number4;    }    public static void main(String[] args)    {       Addition add = new AbstractMethodExample();       System.out.println(add.addTwoNumbers(6, 6));       System.out.println(add.addFourNumbers(8, 8, 3, 2));       add.printValues();    } }\nSometimes we may come across a situation where we cannot provide implementation to all the methods in a class. We want to leave the  implementation to a class that extends it.   In that case we declare a class as abstract by using abstract keyword on method signature.In my framework I have created my PageBase class as super class of the all page classes.  I have collected all common elements and functions into PageBase class and all other page classes extent PageBase class. By doing so, I don't have to locate very common WebElements and it provides reusability in my framework. Also 1)Abstract classes cannot be instantiated 2)An abstarct classes contains abstract method, concrete methods or both. 3)Any class which extends abstarct class must   override all methods of abstract class 4)An abstarct class can contain either   0 or more abstract method.   \n// example on abstract class in java import java.util.*; // abstract class abstract class Shape {    // abstract method    abstract void sides(); } class Triangle extends Shape {    void sides()    {       System.out.println(\"Triangle shape has three sides.\");    } } class Pentagon extends Shape {    void sides()    {       System.out.println(\"Pentagon shape has five sides.\");    }    public static void main(String[] args)    {       Triangle obj1 = new Triangle();       obj1.sides();       Pentagon obj2 = new Pentagon();       obj2.sides();    } }\n",
    "reg_date": "2021-10-12T12:01:13.000Z"
  },
  {
    "id": 504,
    "keyword": null,
    "link": null,
    "title": " abstraction java",
    "description": "bstraction: Hiding the implementation details,  concentrating on essentials things,  without worrying about the details  ■ In java, abstraction is achieved via abstract class or interface  ■ Abstraction cannot exist without inheritance   3.1. Abstract class a class that's meant to be inherited  (cannot be private or final) ■ To create an abstract class: add keyword abstract  before the class declaration  ■ A class that we cannot create object  when abstract class extended by regular class:  we MUST override all the abstract methods of super class when abstract class extended by abstract class:  no need to override any abstract methods  abstract class vs non-abstract class: NON-ABSTRACT CLASS: cannot have: abstract methods can have: constructor, instance method, static method,  instance block, static block, instance variable, static variable ABSTRACT CLASS: can have: constructor, instance method, static method, instance block, static block, instance variable, static variable... ABSTRACT METHOD: method without implementation, meant to be override  (cannot create object, cannot be final,static,private)  FRAMEWORK EXAMPLE: In my framework I have achieved abstraction by using collections  or Map, because it&rsquo;s all interface. Most of the cases I come  across using List. If we want to access elements frequently  by using index, List is a way to go. ArrayList provides  faster access if we know index. If we want to store elements and  want them to maintain an order, List is a better choice.  i) List webs = driver.getWindowHandles();     =>create a list first to store web URLs in list ii)To handle dynamic elements store it in the list and identify by index List all = driver.findElements(By.tagname(&ldquo;&rdquo;)); In my framework I follow POM and had situations where some pages  shared similar actions that were similar but worked slightly  different, so I was able to use abstraction to define those  actions and implement them in each page according to what was needed  for that webpage\nAbstraction is defined as hiding internal implementation and showing only  necessary information. // abstract class abstract class Addition {    // abstract methods    public abstract int addTwoNumbers(int number1, int number2);    public abstract int addFourNumbers(int number1, int number2, int number3, int number4);    // non-abstract method    public void printValues()    {       System.out.println(\"abstract class printValues() method\");    } } class AbstractMethodExample extends Addition {    public int addTwoNumbers(int number1, int number2)    {       return number1 + number2;    }    public int addFourNumbers(int number1, int number2, int number3, int number4)    {       return number1 + number2 + number3 + number4;    }    public static void main(String[] args)    {       Addition add = new AbstractMethodExample();       System.out.println(add.addTwoNumbers(6, 6));       System.out.println(add.addFourNumbers(8, 8, 3, 2));       add.printValues();    } }\nSometimes we may come across a situation where we cannot provide  implementation to all the methods in a class. We want to leave the  implementation to a class that extends it. In such case we declare a class as abstract.To make a class abstract we use key word abstract.  Any class that contains one or more abstract methods is declared as abstract.  If we don&rsquo;t declare class as abstract which contains abstract methods we get  compile time error.      1)Abstract classes cannot be instantiated   2)An abstarct classes contains abstract method, concrete methods or both.   3)Any class which extends abstarct class must override all methods of abstract     class   4)An abstarct class can contain either 0 or more abstract method.    \nAbstraction is nothing but the quality of dealing with ideas rather than  events. It basically deals with hiding the internal details and showing  the essential things to the user.\n// abstraction in java with example // abstract class abstract class Addition {    // abstract methods    public abstract int addTwoNumbers(int number1, int number2);    public abstract int addFourNumbers(int number1, int number2, int number3, int number4);    // non-abstract method    public void printValues()    {       System.out.println(\"abstract class printValues() method\");    } } class AbstractMethodExample extends Addition {    public int addTwoNumbers(int number1, int number2)    {       return number1 + number2;    }    public int addFourNumbers(int number1, int number2, int number3, int number4)    {       return number1 + number2 + number3 + number4;    }    public static void main(String[] args)    {       Addition add = new AbstractMethodExample();       System.out.println(add.addTwoNumbers(6, 6));       System.out.println(add.addFourNumbers(8, 8, 3, 2));       add.printValues();    } }\nSometimes we may come across a situation where we cannot provide implementation to all the methods in a class. We want to leave the  implementation to a class that extends it.   In that case we declare a class as abstract by using abstract keyword on method signature.In my framework I have created my PageBase class as super class of the all page classes.  I have collected all common elements and functions into PageBase class and all other page classes extent PageBase class. By doing so, I don't have to locate very common WebElements and it provides reusability in my framework. Also 1)Abstract classes cannot be instantiated 2)An abstarct classes contains abstract method, concrete methods or both. 3)Any class which extends abstarct class must   override all methods of abstract class 4)An abstarct class can contain either   0 or more abstract method.   \n",
    "reg_date": "2021-10-12T12:01:14.000Z"
  },
  {
    "id": 505,
    "keyword": null,
    "link": null,
    "title": " access each key and value in a hashmap java",
    "description": "// access each key and corresponding value in a hashmap HashMap<Integer, Integer> map = new HashMap<>();  for(Map.Entry<Integer, Integer> entry : map.entrySet()){   entry.getKey();   entry.getValue(); }\n",
    "reg_date": "2021-10-12T12:01:14.000Z"
  },
  {
    "id": 506,
    "keyword": null,
    "link": null,
    "title": " access main class from another class spigot",
    "description": "private MainClassName plugin;  public currentClassname(MainClassName instance) { \tplugin = instance; }  // you can then use your plugin as the plugin variable\n",
    "reg_date": "2021-10-12T12:01:14.000Z"
  },
  {
    "id": 507,
    "keyword": null,
    "link": null,
    "title": " actionListener java",
    "description": "import java.awt.event.ActionEvent; import java.awt.event.ActionListener;  /*in main*/ button.addActionListener(new ActionListener() {   public void actionPerformed(ActionEvent e) { \t\t\tSystem.out.println('x');   } });\nbutton.addActionListener(new ActionListener() {             @Override             public void actionPerformed(ActionEvent actionEvent)              {                            }         });\nJButton Button = new JButton(); Button.setSize(300,300); Button.addActionListener(new ActionListener() { \tpublic void actionPerformed(ActionEvent e)      System.out.println(BlockNumber)   \t} });\n",
    "reg_date": "2021-10-12T12:01:14.000Z"
  },
  {
    "id": 508,
    "keyword": null,
    "link": null,
    "title": " action bar spigot",
    "description": "player.spigot().sendMessage(   ChatMessageType.ACTION_BAR,   new TextComponent(\"This message will be in the Action Bar\"));\nplayer.spigot().sendMessage(ChatMessageType.ACTION_BAR, new TextComponent(\"This message will be in the Action Bar\"));\n",
    "reg_date": "2021-10-12T12:01:14.000Z"
  },
  {
    "id": 509,
    "keyword": null,
    "link": null,
    "title": " activitycompat.requestpermissions not working",
    "description": "ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.READ_PHONE_STATE}, 225); \n",
    "reg_date": "2021-10-12T12:01:14.000Z"
  },
  {
    "id": 510,
    "keyword": null,
    "link": null,
    "title": " adb: command not found",
    "description": "export ANDROID_HOME=/Users/$USER/Library/Android/sdk export PATH=${PATH}:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools\n~/Library/Android/sdk/platform-tools/adb\n",
    "reg_date": "2021-10-12T12:01:14.000Z"
  },
  {
    "id": 511,
    "keyword": null,
    "link": null,
    "title": " adblocker extension chrome",
    "description": "good choice\nuse ad guard\nbest choice of your life \n",
    "reg_date": "2021-10-12T12:01:14.000Z"
  },
  {
    "id": 512,
    "keyword": null,
    "link": null,
    "title": " add a button to toolbar android",
    "description": "<?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"     xmlns:tools=\"http://schemas.android.com/tools\"     android:layout_width=\"match_parent\"     android:layout_height=\"match_parent\"     android:paddingBottom=\"@dimen/activity_vertical_margin\"     android:paddingLeft=\"@dimen/activity_horizontal_margin\"     android:paddingRight=\"@dimen/activity_horizontal_margin\"     android:paddingTop=\"@dimen/activity_vertical_margin\"     android:orientation=\"vertical\"     tools:context=\"com.blogspot.android_er.androidtoolbar.MainActivity\">      <android.support.v7.widget.Toolbar         android:id=\"@+id/toolbar\"         android:layout_width=\"match_parent\"         android:layout_height=\"56dp\"         android:background=\"#FFA000\">         <Button             android:id=\"@+id/toolbarbtn\"             android:layout_width=\"wrap_content\"             android:layout_height=\"wrap_content\"             android:text=\"Button\"             android:layout_gravity=\"right\"/>     </android.support.v7.widget.Toolbar>     <TextView         android:layout_width=\"wrap_content\"         android:layout_height=\"wrap_content\"         android:text=\"Hello World!\" /> </LinearLayout> \npackage com.blogspot.android_er.androidtoolbar;  import android.os.Bundle; import android.support.v7.app.AppCompatActivity; import android.support.v7.widget.Toolbar; import android.view.Menu; import android.view.MenuItem; import android.view.View; import android.widget.Button; import android.widget.Toast;  public class MainActivity extends AppCompatActivity {      Button toolBarBtn;      @Override     protected void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         setContentView(R.layout.activity_main);         Toolbar toolbar = (Toolbar)findViewById(R.id.toolbar);         setSupportActionBar(toolbar);          getSupportActionBar().setTitle(\"Toolbar example\");         toolbar.setSubtitle(\"Android-er.blogspot.com\");         toolbar.setLogo(android.R.drawable.ic_menu_info_details);          toolBarBtn = (Button)findViewById(R.id.toolbarbtn);         toolBarBtn.setOnClickListener(new View.OnClickListener() {             @Override             public void onClick(View v) {                 Toast.makeText(getBaseContext(),                         \"Button in ToolBar clicked\",                         Toast.LENGTH_LONG).show();             }         });     }      @Override     public boolean onCreateOptionsMenu(Menu menu) {         getMenuInflater().inflate(R.menu.menu_main, menu);         return super.onCreateOptionsMenu(menu);     }      @Override     public boolean onOptionsItemSelected(MenuItem item) {          Toast.makeText(this, item.getTitle(), Toast.LENGTH_LONG).show();          int item_id = item.getItemId();         switch(item_id){             case R.id.item_checkable1:                 if(item.isChecked()){                     item.setChecked(false);                 }else{                     item.setChecked(true);                 }                 break;             case R.id.item_checkable2:                 if(item.isChecked()){                     item.setChecked(false);                 }else{                     item.setChecked(true);                 }                 break;         }          return super.onOptionsItemSelected(item);     } }  \n",
    "reg_date": "2021-10-12T12:01:14.000Z"
  },
  {
    "id": 513,
    "keyword": null,
    "link": null,
    "title": " add a value to a list java in java hashmap",
    "description": "if (map.get(id) == null) { //gets the value for an id)     map.put(id, new ArrayList<String>()); //no ArrayList assigned, create new ArrayList  map.get(id).add(value); //adds value to list.\n",
    "reg_date": "2021-10-12T12:01:15.000Z"
  },
  {
    "id": 514,
    "keyword": null,
    "link": null,
    "title": " add certificate to java truststore",
    "description": "# Copy the certificate into the directory Java_home\\Jre\\Lib\\Security # Change your directory to Java_home\\Jre\\Lib\\Security> # Import the certificate to a trust store.  keytool -import -alias ca -file somecert.cer -keystore cacerts -storepass changeit [Return]  Trust this certificate: [Yes] \n",
    "reg_date": "2021-10-12T12:01:15.000Z"
  },
  {
    "id": 515,
    "keyword": null,
    "link": null,
    "title": " add days to date java",
    "description": "LocalDate date=LocalDate.now(); date.addDays(1); System.out.println(date);\n",
    "reg_date": "2021-10-12T12:01:15.000Z"
  },
  {
    "id": 516,
    "keyword": null,
    "link": null,
    "title": " add each element in an array java",
    "description": "import java.util.Arrays; import java.util.Scanner; public class SumOfElementsOfAnArray {    public static void main(String args[]){       System.out.println(\"Enter the required size of the array :: \");       Scanner s = new Scanner(System.in);       int size = s.nextInt();       int myArray[] = new int [size];       int sum = 0;       System.out.println(\"Enter the elements of the array one by one \");        for(int i=0; i<size; i++){          myArray[i] = s.nextInt();          sum = sum + myArray[i];       }       System.out.println(\"Elements of the array are: \"+Arrays.toString(myArray));       System.out.println(\"Sum of the elements of the array ::\"+sum);    } }\n",
    "reg_date": "2021-10-12T12:01:15.000Z"
  },
  {
    "id": 517,
    "keyword": null,
    "link": null,
    "title": " add integers java",
    "description": " int a=3;  int b=5;  int sum= Integer.sum(a,b);\n",
    "reg_date": "2021-10-12T12:01:15.000Z"
  },
  {
    "id": 518,
    "keyword": null,
    "link": null,
    "title": " add item to start of list java",
    "description": "list.add(0, yourObject);\n",
    "reg_date": "2021-10-12T12:01:15.000Z"
  },
  {
    "id": 519,
    "keyword": null,
    "link": null,
    "title": " add jpg to JPanel",
    "description": "BufferedImage myPicture = ImageIO.read(new File(\"path-to-file\")); JLabel picLabel = new JLabel(new ImageIcon(myPicture)); add(picLabel);\n",
    "reg_date": "2021-10-12T12:01:15.000Z"
  },
  {
    "id": 520,
    "keyword": null,
    "link": null,
    "title": " add one character to string java",
    "description": "char ch='A'; String str=\"pple\"; str= ch+str;   // str will change to \"Apple\"\n",
    "reg_date": "2021-10-12T12:01:15.000Z"
  },
  {
    "id": 521,
    "keyword": null,
    "link": null,
    "title": " add one day to current  timestamp date in java",
    "description": "import java.sql.Timestamp; import java.util.Calendar; import java.util.Date;   public class AddTime {   public static void main( String[] args ) {       Timestamp timestamp = new Timestamp(new Date().getTime());     System.out.println(timestamp);       Calendar cal = Calendar.getInstance();     cal.setTimeInMillis(timestamp.getTime());       // add 30 seconds     cal.add(Calendar.SECOND, 30);     timestamp = new Timestamp(cal.getTime().getTime());     System.out.println(timestamp);       // add 5 hours     cal.setTimeInMillis(timestamp.getTime());     cal.add(Calendar.HOUR, 5);     timestamp = new Timestamp(cal.getTime().getTime());     System.out.println(timestamp);       // add 30 days     cal.setTimeInMillis(timestamp.getTime());     cal.add(Calendar.DAY_OF_MONTH, 30);     timestamp = new Timestamp(cal.getTime().getTime());     System.out.println(timestamp);       // add 6 months     cal.setTimeInMillis(timestamp.getTime());     cal.add(Calendar.MONTH, 6);     timestamp = new Timestamp(cal.getTime().getTime());     System.out.println(timestamp);   } }    \n",
    "reg_date": "2021-10-12T12:01:15.000Z"
  },
  {
    "id": 522,
    "keyword": null,
    "link": null,
    "title": " add opacity to activity android",
    "description": "<?xml version=\"1.0\" encoding=\"utf-8\"?> <resources>   <style name=\"Theme.Transparent\" parent=\"android:Theme\">     <item name=\"android:windowIsTranslucent\">true</item>     <item name=\"android:windowBackground\">@android:color/transparent</item>     <item name=\"android:windowContentOverlay\">@null</item>     <item name=\"android:windowNoTitle\">true</item>     <item name=\"android:windowIsFloating\">true</item>     <item name=\"android:backgroundDimEnabled\">false</item>   </style> </resources>\n",
    "reg_date": "2021-10-12T12:01:15.000Z"
  },
  {
    "id": 523,
    "keyword": null,
    "link": null,
    "title": " add retrofit dependency android",
    "description": "implementation 'com.squareup.retrofit2:retrofit:2.4.0' implementation 'com.squareup.retrofit2:converter-gson:2.4.0' \nimplementation 'com.squareup.retrofit2:retrofit:2.9.0'\n",
    "reg_date": "2021-10-12T12:01:16.000Z"
  },
  {
    "id": 524,
    "keyword": null,
    "link": null,
    "title": " add second to date java",
    "description": "/*  w  w w  .  j  a va  2s .  c om*/ import java.util.Calendar; import java.util.Date;  public class Main {    public static void main(String[] args) {     System.out.println(addSeconds(new Date(), 100));   }    public static Date addSeconds(Date date, Integer seconds) {     Calendar cal = Calendar.getInstance();     cal.setTime(date);     cal.add(Calendar.SECOND, seconds);     return cal.getTime();   } } \n",
    "reg_date": "2021-10-12T12:01:16.000Z"
  },
  {
    "id": 525,
    "keyword": null,
    "link": null,
    "title": " add text to jlable",
    "description": "JLabel label = new JLabel(\"Whatever text\"); or  label.setText(\"Whatever Text\");\n",
    "reg_date": "2021-10-12T12:01:16.000Z"
  },
  {
    "id": 526,
    "keyword": null,
    "link": null,
    "title": " add to list java",
    "description": "list.add(value);\npackage com.journaldev.examples;  import java.util.ArrayList; import java.util.List;  public class ListAddExamples {  \tpublic static void main(String[] args) {  \t\tList<String> vowels = new ArrayList<>();  \t\tvowels.add(\"A\"); // [A] \t\tvowels.add(\"E\"); // [A, E] \t\tvowels.add(\"U\"); // [A, E, U]  \t\tSystem.out.println(vowels); // [A, E, U]  \t\tvowels.add(2, \"I\"); // [A, E, I, U] \t\tvowels.add(3, \"O\"); // [A, E, I, O, U]  \t\tSystem.out.println(vowels); // [A, E, I, O, U] \t} }\nmyList.add(item)\nList<SomePojo> list = new ArrayList<SomePojo>();  List<SomePojo> anotherList = new ArrayList<SomePojo>(); anotherList.add(list);\nList mylist.addAll(secondList);\n",
    "reg_date": "2021-10-12T12:01:16.000Z"
  },
  {
    "id": 527,
    "keyword": null,
    "link": null,
    "title": " add two matrices of the same size in java",
    "description": "public class AddTwoMatrices {      public static void main(String[] args) {          int r, c, i, j;         Scanner in = new Scanner(System.in);          System.out.println(\"Enter the row size of the matrix:\");         r = in.nextInt();          System.out.println(\"Enter the column size of the matrix:\");         c = in.nextInt();          int array1[][] = new int[r][c];         int array2[][] = new int[r][c];         int sum[][] = new int[r][c];          System.out.println(\"Input elements of the first matrix:\");         for (i = 0; i < r; i++) {             for (j = 0; j < c; j++) {                 array1[i][j] = in.nextInt();             }         }          System.out.println(\"Input elements of the second matrix:\");         for (i = 0; i < r; i++) {             for (j = 0; j < c; j++) {                 array2[i][j] = in.nextInt();             }         }          for (i = 0; i < array1.length; i++) {             for (j = 0; j < array2.length; j++) {                 sum[i][j] = array1[i][j] + array2[i][j];                 System.out.print(sum[i][j] + \"\\t\");             }             System.out.println();         }     } }\n",
    "reg_date": "2021-10-12T12:01:16.000Z"
  },
  {
    "id": 528,
    "keyword": null,
    "link": null,
    "title": " add two numbers bitwise",
    "description": "public class Bitwise_Addition{     int add(int a, int b){         int c;     while(b!=0){         c=a&b;         a=a^b;         b=c<<1;         }     return a;     } }\n",
    "reg_date": "2021-10-12T12:01:16.000Z"
  },
  {
    "id": 529,
    "keyword": null,
    "link": null,
    "title": " add uuid to csv",
    "description": "BufferedReader csvReader = new BufferedReader(new FileReader(\"Path to existing csv\"));         String delimiter = \",\"         List<List<String>> rows = new ArrayList<>();         String row;         while ((row = csvReader.readLine()) != null) {             String[] data = row.split(delimiter);             rows.add(Arrays.asList(data));         }         csvReader.close();          FileWriter csvWriter = new FileWriter(\"Path to final csv\");         for (List<String> rowData : rows) {              csvWriter.append(UUID.randomUUID().toString());             csvWriter.append(delimiter);             csvWriter.append(String.join(delimiter, rowData));             csvWriter.append(System.lineSeparator());         }         csvWriter.flush();         csvWriter.close();\n",
    "reg_date": "2021-10-12T12:01:16.000Z"
  },
  {
    "id": 530,
    "keyword": null,
    "link": null,
    "title": " add value with n variable with Arraylist in java",
    "description": "Scanner in = new Scanner(System.in); int n = 5; ArrayList<String> addName = new ArrayList<>(); for(int i = 0; i < n; i++){   addName.add(in.nextLine()); }\n",
    "reg_date": "2021-10-12T12:01:16.000Z"
  },
  {
    "id": 531,
    "keyword": null,
    "link": null,
    "title": " add view to relativelayout programmatically",
    "description": "TextView tv = new TextView(mContext); RelativeLayout.LayoutParams params = new RelativeLayout.LayoutParams(     ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT); params.addRule(RelativeLayout.ALIGN_PARENT_LEFT, RelativeLayout.TRUE); params.leftMargin = 107 ... mRelativeLayout.addView(tv, params);\n",
    "reg_date": "2021-10-12T12:01:16.000Z"
  },
  {
    "id": 532,
    "keyword": null,
    "link": null,
    "title": " adding an element to the end of a linked list java",
    "description": "class Node {     Object data;     Node next;     Node(Object d,Node n) {         data = d ;         next = n ;        }     public static Node addLast(Node header, Object x) {        // save the reference to the header so we can return it.        Node ret = header;         // check base case, header is null.        if (header == null) {            return new Node(x, null);        }         // loop until we find the end of the list        while ((header.next != null)) {            header = header.next;        }         // set the new node to the Object x, next will be null.        header.next = new Node(x, null);        return ret;    } }\n",
    "reg_date": "2021-10-12T12:01:16.000Z"
  },
  {
    "id": 533,
    "keyword": null,
    "link": null,
    "title": " adding image in java swing\\",
    "description": "BufferedImage myPicture = ImageIO.read(new File(\"path-to-file\")); JLabel picLabel = new JLabel(new ImageIcon(myPicture)); add(picLabel);\nimport java.awt.*;   import javax.swing.JFrame;      public class MyCanvas extends Canvas{              public void paint(Graphics g) {              Toolkit t=Toolkit.getDefaultToolkit();           Image i=t.getImage(\"p3.gif\");           g.drawImage(i, 120,100,this);                  }           public static void main(String[] args) {           MyCanvas m=new MyCanvas();           JFrame f=new JFrame();           f.add(m);           f.setSize(400,400);           f.setVisible(true);       }      } \n",
    "reg_date": "2021-10-12T12:01:17.000Z"
  },
  {
    "id": 534,
    "keyword": null,
    "link": null,
    "title": " addition of two binary numbers in java",
    "description": "import java.util.Scanner; public class JavaExample {    public static void main(String[] args)    {\t  \tlong b1, b2; \tint i = 0, carry = 0; \tint[] sum = new int[10]; \tScanner scanner = new Scanner(System.in); \tSystem.out.print(\"Enter first binary number: \"); \tb1 = scanner.nextLong(); \tSystem.out.print(\"Enter second binary number: \"); \tb2 = scanner.nextLong(); \tscanner.close(); \twhile (b1 != 0 || b2 != 0)  \t{ \t\tsum[i++] = (int)((b1 % 10 + b2 % 10 + carry) % 2); \t\tcarry = (int)((b1 % 10 + b2 % 10 + carry) / 2); \t\tb1 = b1 / 10; \t\tb2 = b2 / 10; \t} \tif (carry != 0) { \t\tsum[i++] = carry; \t} \t--i; \tSystem.out.print(\"Output: \"); \twhile (i >= 0) { \t\tSystem.out.print(sum[i--]); \t} \tSystem.out.print(\"\\n\");      } }\n",
    "reg_date": "2021-10-12T12:01:17.000Z"
  },
  {
    "id": 535,
    "keyword": null,
    "link": null,
    "title": " admost rewarded",
    "description": " javaCopyAdMostInterstitial VIDEO = new AdMostInterstitial(ACTIVITY, < ZONE_ID >, new AdMostAdListener() {         @Override          public void onReady(String network, int ecpm) {             // It indicates that the rewarded video ad is loaded and ready to show.         }         @Override         public void onFail(int errorCode) {           // It indicates that the rewarded video ad received no-fill response from all of its placements.           // Therefore, the ad can not be shown.           // Warning: Attempting to load a new ad from the onFail() methods is strongly discouraged.           // If you must load an ad from onFail() ensure to limit ad load retries to avoid continuous           // failed ad requests in situations such as limited network connectivity.          }         @Override         public void onDismiss(String message) {           // It indicates that the rewarded video ad is closed by clicking cross button/back button.           // It does not mean that the user deserves to receive a reward. You need to check whether onComplete(String network) callback is called or not         }         @Override         public void onComplete(String network) {           // It indicates that the user deserves to receive a reward. You may need to store this information in a variable and give a reward           // to the user after onDismiss(String message) callback is called by showing some animations for instance.           // Note: If onComplete(String network) callback is called for the ad, it is always called before onDismiss(String message) callback.         }         @Override         public void onShown(String network) {           // It indicates that the loaded rewarded video ad is shown to the user.(Note: It does not mean that the user deserves a reward)           // It is immediately called after the loaded ad is shown to the user using VIDEO.show()         }         @Override         public void onClicked(String s) {             // It indicates that the video ad is clicked.         }         @Override         public void onStatusChanged(int statusCode) {             // This callback will be triggered only when frequency cap ended.             // status code             // 1 - AdMost.AD_STATUS_CHANGE_FREQ_CAP_ENDED         } \t\t     });    //Load for video VIDEO.refreshAd(AUTO_SHOW);\n",
    "reg_date": "2021-10-12T12:01:17.000Z"
  },
  {
    "id": 536,
    "keyword": null,
    "link": null,
    "title": " admost track purchase",
    "description": "String admostIapID = AdMost.getInstance().trackPurchase(purchaseData, dataSignature, jsonSkuDetail, iabListener, isDebug);\n",
    "reg_date": "2021-10-12T12:01:17.000Z"
  },
  {
    "id": 537,
    "keyword": null,
    "link": null,
    "title": " advantages of Exception handling in java",
    "description": "1) Separating normal code from exception handling code to avoid abnormal  termination of program. 2) Categorizing in to different types of Exceptions so that rather than  handling all exceptions with Exception root class we can handle with specific  exceptions. It is recommended to handle exceptions with specific Exception  instead of handling with Exception root class. 3) Call stack mechanism : If a method throws an exception and it is not handled  immediately, then that exception is propagated or thrown to the caller of that  method. This propogation continues till it finds an appropriate exception  handler,if it finds handler it would be handled otherwise program terminates abruptly.\n",
    "reg_date": "2021-10-12T12:01:17.000Z"
  },
  {
    "id": 538,
    "keyword": null,
    "link": null,
    "title": " advantages of using Java",
    "description": "Java is a high-level object-oriented programming language used for developing games, device systems, and applications. It is secure, fast, reliable, portable and platform independent.\n",
    "reg_date": "2021-10-12T12:01:17.000Z"
  },
  {
    "id": 539,
    "keyword": null,
    "link": null,
    "title": " afficher texte java",
    "description": "System.out.println(\"your text\");\n",
    "reg_date": "2021-10-12T12:01:17.000Z"
  },
  {
    "id": 540,
    "keyword": null,
    "link": null,
    "title": " ajio",
    "description": "ajio\n",
    "reg_date": "2021-10-12T12:01:17.000Z"
  },
  {
    "id": 541,
    "keyword": null,
    "link": null,
    "title": " alert dialog on android",
    "description": "new AlertDialog.Builder(this)     .setTitle(\"Closing application\")     .setMessage(\"Are you sure you want to exit?\")     .setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {           @Override           public void onClick(DialogInterface dialog, int which) {            }      }).setNegativeButton(\"No\", null).show(); \n",
    "reg_date": "2021-10-12T12:01:17.000Z"
  },
  {
    "id": 542,
    "keyword": null,
    "link": null,
    "title": " alertdialog show in android",
    "description": "  AlertDialog.Builder builder = new AlertDialog.Builder(this);         builder.setMessage(getResources().getString(R.string.do_you_really_want_to_signout));         builder.setTitle(getResources().getString(R.string.sign_out));         builder.setCancelable(false);         builder.setNegativeButton(getResources().getString(R.string.cancel), new DialogInterface.OnClickListener() {             public void onClick(DialogInterface dialog, int which) {                 dialog.cancel();             }         });         builder.setPositiveButton(getResources().getString(R.string.sure), new DialogInterface.OnClickListener() {             public void onClick(DialogInterface dialog, int which) {                 Toast.makeText(AccountActivity.this, R.string.log_out_success,                         Toast.LENGTH_LONG).show();                             }         });          AlertDialog alert = builder.create();         alert.show();\n",
    "reg_date": "2021-10-12T12:01:17.000Z"
  },
  {
    "id": 543,
    "keyword": null,
    "link": null,
    "title": " all devisor of a number java",
    "description": "public static ArrayList<Integer> getDivisors(int n){         ArrayList<Integer> divisors = new ArrayList<>();         //without 1 or n         for (int i = 2; i * i <= n; ++i)             if (n % i == 0) {                 divisors.add(i);                 if (i != n / i) divisors.add(n / i);             }         return divisors;     }\n",
    "reg_date": "2021-10-12T12:01:18.000Z"
  },
  {
    "id": 544,
    "keyword": null,
    "link": null,
    "title": " all java variables",
    "description": "/* Depending on what variables you want to declare */ String hello = \"hello\"; //characters short one = 12;//shorter integers int two = 2000; //complete integer up too 32 bits long number = 2000000; //complete integer up to 64 bits float decimal = 1.512 //up to 7 decimal digits double million = 1.387892847395 //up tp 16 decmial digits Bool condition = true; // true or false char a = \"a\"; // unicode character\n",
    "reg_date": "2021-10-12T12:01:18.000Z"
  },
  {
    "id": 545,
    "keyword": null,
    "link": null,
    "title": " all meta tags",
    "description": "<head lang=\"en\">   <meta http-equiv=\"content-language\" content=\"en\">   <meta charset=\"UTF-8\">   <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">   <meta name=\"keywords\" content=\"website, blog, foo, bar\">   <meta name=\"author\" content=\"John Doe\">   <meta name=\"publisher\" content=\"John Doe\">   <meta name=\"copyright\" content=\"John Doe\">   <meta name=\"description\" content=\"This short description describes my website.\">   <meta name=\"page-topic\" content=\"Media\">   <meta name=\"page-type\" content=\"Blogging\">   <meta name=\"audience\" content=\"Everyone\">   <meta name=\"robots\" content=\"index, follow\">      <title>My website title</title> </head>\nComplete List of HTML Meta Tags  Basic HTML Meta Tags   <meta charset='UTF-8'> <meta name='keywords' content='your, tags'> <meta name='description' content='150 words'> <meta name='subject' content='your website's subject'> <meta name='copyright' content='company name'> <meta name='language' content='ES'> <meta name='robots' content='index,follow'> <meta name='revised' content='Sunday, July 18th, 2010, 5:15 pm'> <meta name='abstract' content=''> <meta name='topic' content=''> <meta name='summary' content=''> <meta name='Classification' content='Business'> <meta name='author' content='name, email@hotmail.com'> <meta name='designer' content=''> <meta name='reply-to' content='email@hotmail.com'> <meta name='owner' content=''> <meta name='url' content='http://www.websiteaddrress.com'> <meta name='identifier-URL' content='http://www.websiteaddress.com'> <meta name='directory' content='submission'> <meta name='pagename' content='jQuery Tools, Tutorials and Resources - O'Reilly Media'> <meta name='category' content=''> <meta name='coverage' content='Worldwide'> <meta name='distribution' content='Global'> <meta name='rating' content='General'> <meta name='revisit-after' content='7 days'> <meta name='subtitle' content='This is my subtitle'> <meta name='target' content='all'> <meta name='HandheldFriendly' content='True'> <meta name='MobileOptimized' content='320'> <meta name='date' content='Sep. 27, 2010'> <meta name='search_date' content='2010-09-27'> <meta name='DC.title' content='Unstoppable Robot Ninja'> <meta name='ResourceLoaderDynamicStyles' content=''> <meta name='medium' content='blog'> <meta name='syndication-source' content='https://mashable.com/2008/12/24/free-brand-monitoring-tools/'> <meta name='original-source' content='https://mashable.com/2008/12/24/free-brand-monitoring-tools/'> <meta name='verify-v1' content='dV1r/ZJJdDEI++fKJ6iDEl6o+TMNtSu0kv18ONeqM0I='> <meta name='y_key' content='1e39c508e0d87750'> <meta name='pageKey' content='guest-home'> <meta itemprop='name' content='jQTouch'> <meta http-equiv='Expires' content='0'> <meta http-equiv='Pragma' content='no-cache'> <meta http-equiv='Cache-Control' content='no-cache'> <meta http-equiv='imagetoolbar' content='no'> <meta http-equiv='x-dns-prefetch-control' content='off'>\n <meta name=\"description\" content=\"Free Web tutorials on HTML and CSS\">  \n<!DOCTYPE html> <html> <head> <meta charset=\"utf-8\"><!-- ensures the character encoding --> <meta name=\"keywords\" content=\"give a short or mid description about the content keywords of your website\"> <meta name=\"description\" content=\"\"give a short or mid description about the contents of your website\"> <meta name=\"author\" content=\"write the name of the author of the webpage\"> <meta name=\"refresh\" content=\"50\"><!-- writing this code will make sure the browser refreshes after every 50seconds --> <meta http-equi=\"refresh\" content=\"5; url=\"write the url of your website\"><!-- writing this code, the browser will automatically redirect to the given page after the provided time , in this case it is 5seconds --> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><!-- this makes sure that the webpage is supported on all devices --> </head> <body> </body> </html>\n<meta name=\"keywords\" content=\"HTML, CSS, JavaScript\"> <meta name=\"description\" content=\"Free Web tutorials for HTML and CSS\"> <meta name=\"author\" content=\"John Doe\"> <meta http-equiv=\"refresh\" content=\"30\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"> \n<meta name=\"og:title\" content=\"The Rock\"/> <meta name=\"og:type\" content=\"movie\"/> <meta name=\"og:url\" content=\"http://www.imdb.com/title/tt0117500/\"/> <meta name=\"og:image\" content=\"http://ia.media-imdb.com/rock.jpg\"/> <meta name=\"og:site_name\" content=\"IMDb\"/> <meta name=\"og:description\" content=\"A group of U.S. Marines, under command of...\"/>  <meta name=\"fb:page_id\" content=\"43929265776\" />  <meta name=\"og:email\" content=\"me@example.com\"/> <meta name=\"og:phone_number\" content=\"650-123-4567\"/> <meta name=\"og:fax_number\" content=\"+1-415-123-4567\"/>  <meta name=\"og:latitude\" content=\"37.416343\"/> <meta name=\"og:longitude\" content=\"-122.153013\"/> <meta name=\"og:street-address\" content=\"1601 S California Ave\"/> <meta name=\"og:locality\" content=\"Palo Alto\"/> <meta name=\"og:region\" content=\"CA\"/> <meta name=\"og:postal-code\" content=\"94304\"/> <meta name=\"og:country-name\" content=\"USA\"/>  <meta property=\"og:type\" content=\"game.achievement\"/> <meta property=\"og:points\" content=\"POINTS_FOR_ACHIEVEMENT\"/>  <meta property=\"og:video\" content=\"http://example.com/awesome.swf\" /> <meta property=\"og:video:height\" content=\"640\" /> <meta property=\"og:video:width\" content=\"385\" /> <meta property=\"og:video:type\" content=\"application/x-shockwave-flash\" /> <meta property=\"og:video\" content=\"http://example.com/html5.mp4\" /> <meta property=\"og:video:type\" content=\"video/mp4\" /> <meta property=\"og:video\" content=\"http://example.com/fallback.vid\" /> <meta property=\"og:video:type\" content=\"text/html\" />  <meta property=\"og:audio\" content=\"http://example.com/amazing.mp3\" /> <meta property=\"og:audio:title\" content=\"Amazing Song\" /> <meta property=\"og:audio:artist\" content=\"Amazing Band\" /> <meta property=\"og:audio:album\" content=\"Amazing Album\" /> <meta property=\"og:audio:type\" content=\"application/mp3\" />\n",
    "reg_date": "2021-10-12T12:01:18.000Z"
  },
  {
    "id": 546,
    "keyword": null,
    "link": null,
    "title": " allow internet permission android",
    "description": "//Add this to app manifest <uses-permission android:name=\"android.permission.INTERNET\" />\n//add to AndroidManifest.xml <uses-permission android:name=\"android.permission.INTERNET\" />\n",
    "reg_date": "2021-10-12T12:01:18.000Z"
  },
  {
    "id": 547,
    "keyword": null,
    "link": null,
    "title": " american heavy tanks of ww2",
    "description": "//This is not what we searched for, google.\n",
    "reg_date": "2021-10-12T12:01:18.000Z"
  },
  {
    "id": 548,
    "keyword": null,
    "link": null,
    "title": " an array of names for java",
    "description": "        String[] names = {             \"Liam\",             \"Olivia\",             \"Noah\",             \"Emma\",             \"Oliver\",             \"Ava\",             \"William\",             \"Sophia\",             \"Elijah\",             \"Isabella\",             \"James\",             \"Charlotte\",             \"Benjamin\",             \"Amelia\",             \"Lucas\",             \"Mia\",             \"Mason\",             \"Harper\",             \"Ethan\",             \"Evelyn\"         };\nint[] intArray = new int[20]; String[] cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\nFor example: int[ ] num = new int[6]; public class AccessingArrayElements {    public static void main(String[] args)    {       int[] arrNum = {25, 23, 15, 20, 24};       for(int a = 0; a < arrNum.length; a++)       {          System.out.println(arrNum[a]);       }    } }\n",
    "reg_date": "2021-10-12T12:01:18.000Z"
  },
  {
    "id": 549,
    "keyword": null,
    "link": null,
    "title": " and roid shape setCornerRadii",
    "description": "    float mRadius=3f;      GradientDrawable drawable=new GradientDrawable();     drawable.setShape(GradientDrawable.RECTANGLE);     drawable.setCornerRadii(new float[]{mRadius, mRadius, 0, 0, 0, 0, mRadius, mRadius});\n",
    "reg_date": "2021-10-12T12:01:18.000Z"
  },
  {
    "id": 550,
    "keyword": null,
    "link": null,
    "title": " android:windowLightStatusBar programmatically",
    "description": "if (on) {     View view = getWindow().getDecorView();     view.setSystemUiVisibility(view.getSystemUiVisibility() | View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR); } else {     View view = getWindow().getDecorView();     view.setSystemUiVisibility(view.getSystemUiVisibility() & ~View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR); }\n",
    "reg_date": "2021-10-12T12:01:18.000Z"
  },
  {
    "id": 551,
    "keyword": null,
    "link": null,
    "title": " android-edittext allow only characters and numbers",
    "description": "android:digits=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\" android:inputType=\"textCapCharacters\"\n",
    "reg_date": "2021-10-12T12:01:18.000Z"
  },
  {
    "id": 552,
    "keyword": null,
    "link": null,
    "title": " android.support.design.widget.coordinatorlayout androidx",
    "description": "Replace <android.support.design.widget.coordinatorlayout   with <androidx.coordinatorlayout.widget.CoordinatorLayout\n",
    "reg_date": "2021-10-12T12:01:18.000Z"
  },
  {
    "id": 553,
    "keyword": null,
    "link": null,
    "title": " android BottomSheetDialogFragment not opening fully on landscape",
    "description": "class MyBottomSheetFragment : BottomSheetDialogFragment() {     //....     override fun onStart() {         super.onStart()         //this forces the sheet to appear at max height even on landscape         val behavior = BottomSheetBehavior.from(requireView().parent as View)         behavior.state = BottomSheetBehavior.STATE_EXPANDED     } }\n",
    "reg_date": "2021-10-12T12:01:19.000Z"
  },
  {
    "id": 554,
    "keyword": null,
    "link": null,
    "title": " android action key",
    "description": "TextView.OnEditorActionListener editListener =  \t(TextView view, int actionId, KeyEvent event) -> {         if (actionId == EditorInfo.IME_ACTION_NEXT) {           Toast.makeText(this, \"next\", Toast.LENGTH_SHORT).show();         }         if (actionId == EditorInfo.IME_ACTION_DONE) {           Toast.makeText(this, \"done\", Toast.LENGTH_SHORT).show();         }         return false; \t};  editView.setOnEditorActionListener(editListener);\n",
    "reg_date": "2021-10-12T12:01:19.000Z"
  },
  {
    "id": 555,
    "keyword": null,
    "link": null,
    "title": " android add activity parent manifest",
    "description": "<!-- The main/home activity (it has no parent activity) -->     <activity         android:name=\"com.example.app_name.A\" ...>         ...     </activity>     <!-- A child of the main activity -->     <activity         android:name=\".B\"         android:label=\"B\"         android:parentActivityName=\"com.example.app_name.A\" >         <!-- Parent activity meta-data to support 4.0 and lower -->         <meta-data             android:name=\"android.support.PARENT_ACTIVITY\"             android:value=\"com.example.app_name.A\" />     </activity>\n",
    "reg_date": "2021-10-12T12:01:19.000Z"
  },
  {
    "id": 556,
    "keyword": null,
    "link": null,
    "title": " android ancestor navigation",
    "description": "@Override public boolean onOptionsItemSelected(@NonNull MenuItem item) {   int itemId = item.getItemId();   if (itemId == android.R.id.home) {     // force up navigation to have the same behavior as temporal navigation     onBackPressed();     return true;   } else {     return super.onOptionsItemSelected(item);   } }\n",
    "reg_date": "2021-10-12T12:01:19.000Z"
  },
  {
    "id": 557,
    "keyword": null,
    "link": null,
    "title": " android ancestral navigation",
    "description": "@Override public boolean onOptionsItemSelected(@NonNull MenuItem item) {   int itemId = item.getItemId();   if (itemId == android.R.id.home) {     // force up navigation to have the same behavior as temporal navigation     onBackPressed();     return true;   } else {     return super.onOptionsItemSelected(item);   } }\n",
    "reg_date": "2021-10-12T12:01:19.000Z"
  },
  {
    "id": 558,
    "keyword": null,
    "link": null,
    "title": " android application",
    "description": "import android.app.Application;  public class MyApplication extends Application {     // Called when the application is starting;     // before any activity, service, or receiver objects have been created. \t@Override \tpublic void onCreate() { \t    super.onCreate();         // your code here \t} }  in the AndroidManifest.xml:  <application      android:name=\".MyApplication\"     ...>  get application object in other parts of the code:  MyApplication app = (MyApplication) getApplication(); \n",
    "reg_date": "2021-10-12T12:01:19.000Z"
  },
  {
    "id": 559,
    "keyword": null,
    "link": null,
    "title": " android arraylist",
    "description": "import java.util.ArrayList;      //Integer ArrayList ArrayList<Integer> aList = new ArrayList<Integer>();  aList.add(5); aList.add(11); aList.add(17);  System.out.println(\"Integer Number Added in ArrayList= \" + aList);  //String ArrayList ArrayList<String> sList = new ArrayList<String>();  sList.add(\"Learning\"); sList.add(\"JAVA\");  System.out.println(\"String Added in ArrayList= \"+ sList);\npublic void ensureCapacity (int minCapacity)\n",
    "reg_date": "2021-10-12T12:01:19.000Z"
  },
  {
    "id": 560,
    "keyword": null,
    "link": null,
    "title": " android arraylist to comma separated string",
    "description": "android.text.TextUtils.join(\",\", ids);\n",
    "reg_date": "2021-10-12T12:01:19.000Z"
  },
  {
    "id": 561,
    "keyword": null,
    "link": null,
    "title": " android back navigation",
    "description": "@Override public boolean onOptionsItemSelected(@NonNull MenuItem item) {   int itemId = item.getItemId();   if (itemId == android.R.id.home) {     // force up navigation to have the same behavior as temporal navigation     onBackPressed();     return true;   } else {     return super.onOptionsItemSelected(item);   } }\n",
    "reg_date": "2021-10-12T12:01:19.000Z"
  },
  {
    "id": 562,
    "keyword": null,
    "link": null,
    "title": " android bottom navigation hiding views",
    "description": "private fun setupNav() {     val navController = findNavController(R.id.nav_host_fragment)     findViewById<BottomNavigationView>(R.id.bottomNav)         .setupWithNavController(navController)      navController.addOnDestinationChangedListener { _, destination, _ ->         when (destination.id) {             R.id.mainFragment -> showBottomNav()             R.id.mineFragment -> showBottomNav()             else -> hideBottomNav()         }     } }  private fun showBottomNav() {     bottomNav.visibility = View.VISIBLE  }  private fun hideBottomNav() {     bottomNav.visibility = View.GONE  }\n",
    "reg_date": "2021-10-12T12:01:20.000Z"
  },
  {
    "id": 563,
    "keyword": null,
    "link": null,
    "title": " android cardview dependency",
    "description": "dependencies {     implementation \"androidx.cardview:cardview:1.0.0\" }\nimplementation \"androidx.cardview:cardview:1.0.0\"\n",
    "reg_date": "2021-10-12T12:01:20.000Z"
  },
  {
    "id": 564,
    "keyword": null,
    "link": null,
    "title": " android change checkbox color",
    "description": "<android.support.v7.widget.AppCompatCheckBox      android:layout_width=\"wrap_content\"      android:layout_height=\"wrap_content\"      app:buttonTint=\"@color/COLOR_HERE\" /> \n<CheckBox   ...   android:buttonTint=\"@color/tint_color\" />\n",
    "reg_date": "2021-10-12T12:01:20.000Z"
  },
  {
    "id": 565,
    "keyword": null,
    "link": null,
    "title": " android check if app is running",
    "description": "private fun isAppRunning() : Boolean {         val services = (getSystemService(Context.ACTIVITY_SERVICE) as ActivityManager).runningAppProcesses         return services.firstOrNull{it.processName.equals(packageName,true)} != null     }\n",
    "reg_date": "2021-10-12T12:01:20.000Z"
  },
  {
    "id": 566,
    "keyword": null,
    "link": null,
    "title": " android checkbox tint color",
    "description": "<CheckBox   ...   android:buttonTint=\"@color/tint_color\" /> \n",
    "reg_date": "2021-10-12T12:01:20.000Z"
  },
  {
    "id": 567,
    "keyword": null,
    "link": null,
    "title": " android clear specific sharedpreference value",
    "description": "SharedPreferences preferences = getSharedPreferences(\"Mypref\", 0); preferences.edit().remove(\"text\").commit();\n",
    "reg_date": "2021-10-12T12:01:20.000Z"
  },
  {
    "id": 568,
    "keyword": null,
    "link": null,
    "title": " android coding how to open map",
    "description": "//Moves you to different intent with the map on it  String uri = String.format(Locale.ENGLISH, \"geo:%f,%f\", latitude, longitude); Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(uri)); context.startActivity(intent); \n",
    "reg_date": "2021-10-12T12:01:20.000Z"
  },
  {
    "id": 569,
    "keyword": null,
    "link": null,
    "title": " android copy text to clipboard programmatically",
    "description": "import android.content.ClipboardManager;  // ...  ClipboardManager clipboard = (ClipboardManager) getSystemService(CLIPBOARD_SERVICE);  ClipData clip = ClipData.newPlainText(\"label\", \"Text to copy\"); clipboard.setPrimaryClip(clip); \n",
    "reg_date": "2021-10-12T12:01:20.000Z"
  },
  {
    "id": 570,
    "keyword": null,
    "link": null,
    "title": " android create notification",
    "description": "NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(yourContext.getApplicationContext(), \"notify_001\"); Intent ii = new Intent(yourContext.getApplicationContext(), YourMainActivty.class); PendingIntent pendingIntent = PendingIntent.getActivity(yourContext, 0, ii, 0);  NotificationCompat.BigTextStyle bigText = new NotificationCompat.BigTextStyle(); bigText.bigText(notificationsTextDetailMode); //detail mode is the \"expanded\" notification bigText.setBigContentTitle(notificationTitleDetailMode); bigText.setSummaryText(usuallyAppVersionOrNumberOfNotifications); //small text under notification  mBuilder.setContentIntent(pendingIntent); mBuilder.setSmallIcon(R.mipmap.ic_launcher); //notification icon mBuilder.setContentTitle(notificationTitle); //main title mBuilder.setContentText(notificationText); //main text when you \"haven't expanded\" the notification yet mBuilder.setPriority(Notification.PRIORITY_MAX); mBuilder.setStyle(bigText);  NotificationManager mNotificationManager = (NotificationManager) yourContext.getSystemService(Context.NOTIFICATION_SERVICE);  NotificationChannel channel = new NotificationChannel(\"notify_001\",                                                       \"Channel human readable title\",                                                       NotificationManager.IMPORTANCE_DEFAULT); if (mNotificationManager != null) {   mNotificationManager.createNotificationChannel(channel); }  if (mNotificationManager != null) {   mNotificationManager.notify(0, mBuilder.build()); }\n",
    "reg_date": "2021-10-12T12:01:20.000Z"
  },
  {
    "id": 571,
    "keyword": null,
    "link": null,
    "title": " android create snackbar",
    "description": "Snackbar.make(fragmentView, text, Snackbar.LENGTH_LONG).setAction(\"Action\", null /* replace with your action or leave null to just display text*/).show();\n",
    "reg_date": "2021-10-12T12:01:20.000Z"
  },
  {
    "id": 572,
    "keyword": null,
    "link": null,
    "title": " android currency format",
    "description": "float price = 10.99f; NumberFormat priceFormat = NumberFormat.getCurrencyInstance(); String priceString = priceFormat.format(price);\n",
    "reg_date": "2021-10-12T12:01:20.000Z"
  },
  {
    "id": 573,
    "keyword": null,
    "link": null,
    "title": " android date",
    "description": "import java.time.*; LocalDateTime datetime = LocalDateTime.now(); \nimport java.time.*; import java.time.format.*; DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"HH:mm:ss\"); LocalTime time = LocalTime.now(); String output = formatter.format(time);\n",
    "reg_date": "2021-10-12T12:01:21.000Z"
  },
  {
    "id": 574,
    "keyword": null,
    "link": null,
    "title": " android date time",
    "description": "import java.time.*; LocalDateTime datetime = LocalDateTime.now(); \nSimpleDateFormat.getDateInstance().format(Date())\nSimpleDateFormat.getDateTimeInstance().format(Date())\nSimpleDateFormat.getTimeInstance().format(Date())\nString dateStr = \"04/05/2010\";   SimpleDateFormat curFormater = new SimpleDateFormat(\"dd/MM/yyyy\");  Date dateObj = curFormater.parse(dateStr);  SimpleDateFormat postFormater = new SimpleDateFormat(\"MMMM dd, yyyy\");   String newDateStr = postFormater.format(dateObj); \n",
    "reg_date": "2021-10-12T12:01:21.000Z"
  },
  {
    "id": 575,
    "keyword": null,
    "link": null,
    "title": " android datepickerdialog",
    "description": " package com.journaldev.datetimepickerdialog;  import android.app.DatePickerDialog; import android.app.TimePickerDialog; import android.support.v7.app.AppCompatActivity; import android.os.Bundle; import android.view.Menu; import android.view.MenuItem; import android.view.View; import android.widget.Button; import android.widget.DatePicker; import android.widget.EditText; import android.widget.TimePicker;  import java.util.Calendar;  public class MainActivity extends AppCompatActivity implements         View.OnClickListener {      Button btnDatePicker, btnTimePicker;     EditText txtDate, txtTime;     private int mYear, mMonth, mDay, mHour, mMinute;      @Override     protected void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         setContentView(R.layout.activity_main);          btnDatePicker=(Button)findViewById(R.id.btn_date);         btnTimePicker=(Button)findViewById(R.id.btn_time);         txtDate=(EditText)findViewById(R.id.in_date);         txtTime=(EditText)findViewById(R.id.in_time);          btnDatePicker.setOnClickListener(this);         btnTimePicker.setOnClickListener(this);      }      @Override     public void onClick(View v) {          if (v == btnDatePicker) {              // Get Current Date             final Calendar c = Calendar.getInstance();             mYear = c.get(Calendar.YEAR);             mMonth = c.get(Calendar.MONTH);             mDay = c.get(Calendar.DAY_OF_MONTH);               DatePickerDialog datePickerDialog = new DatePickerDialog(this,                     new DatePickerDialog.OnDateSetListener() {                          @Override                         public void onDateSet(DatePicker view, int year,                                               int monthOfYear, int dayOfMonth) {                              txtDate.setText(dayOfMonth + \"-\" + (monthOfYear + 1) + \"-\" + year);                          }                     }, mYear, mMonth, mDay);             datePickerDialog.show();         }         if (v == btnTimePicker) {              // Get Current Time             final Calendar c = Calendar.getInstance();             mHour = c.get(Calendar.HOUR_OF_DAY);             mMinute = c.get(Calendar.MINUTE);              // Launch Time Picker Dialog             TimePickerDialog timePickerDialog = new TimePickerDialog(this,                     new TimePickerDialog.OnTimeSetListener() {                          @Override                         public void onTimeSet(TimePicker view, int hourOfDay,                                               int minute) {                              txtTime.setText(hourOfDay + \":\" + minute);                         }                     }, mHour, mMinute, false);             timePickerDialog.show();         }     } } \n@NonNull @Override public Dialog onCreateDialog(Bundle savedInstanceState) {     Calendar calendar = Calendar.getInstance();     int year    = calendar.get(Calendar.YEAR);     int month   = calendar.get(Calendar.MONTH);     int day     = calendar.get(Calendar.DAY_OF_MONTH);      DatePickerDialog dialog = new DatePickerDialog(getContext(), listener, year, month, day);     Field mDatePickerField;     try {             mDatePickerField = dialog.getClass().getDeclaredField(\"mDatePicker\");             mDatePickerField.setAccessible(true);     } catch (Exception e) {             e.printStackTrace();     }     dialog.getDatePicker().setMinDate(System.currentTimeMillis() - 1000);     return dialog; }\n",
    "reg_date": "2021-10-12T12:01:21.000Z"
  },
  {
    "id": 576,
    "keyword": null,
    "link": null,
    "title": " android dialog box example",
    "description": "runOnUiThread(new Runnable() {     @Override     public void run() {          if (!isFinishing()){             new AlertDialog.Builder(YourActivity.this)               .setTitle(\"Your Alert\")               .setMessage(\"Your Message\")               .setCancelable(false)               .setPositiveButton(\"ok\", new OnClickListener() {                   @Override                   public void onClick(DialogInterface dialog, int which) {                       // Whatever...                   }               }).show();         }     } });\n<?xml version=\"1.0\" encoding=\"utf-8\"?> <FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"     xmlns:app=\"http://schemas.android.com/apk/res-auto\"     xmlns:tools=\"http://schemas.android.com/tools\"     android:layout_width=\"match_parent\"     android:layout_height=\"250dp\"     android:layout_gravity=\"center\"     android:layout_marginLeft=\"55dp\"     android:layout_marginRight=\"55dp\"     android:gravity=\"center\">      <LinearLayout         android:layout_width=\"match_parent\"         android:layout_height=\"match_parent\"         android:layout_gravity=\"center_vertical\"         android:gravity=\"center_vertical\"         android:orientation=\"vertical\">          <android.support.v7.widget.CardView             android:layout_width=\"match_parent\"             android:layout_height=\"165dp\"             android:layout_gravity=\"center\"             android:layout_marginEnd=\"60dp\"             android:layout_marginStart=\"60dp\"             app:cardCornerRadius=\"8dp\"             app:cardElevation=\"15dp\">              <TextView                 android:layout_width=\"wrap_content\"                 android:layout_height=\"wrap_content\"                 android:layout_gravity=\"center_horizontal\"                 android:layout_marginTop=\"14dp\"                 android:gravity=\"center\"                 android:text=\"Quit Earning?\"                 android:textColor=\"@android:color/black\"                 android:textSize=\"20dp\"                 android:textStyle=\"bold\" />              <TextView                 android:layout_width=\"wrap_content\"                 android:layout_height=\"wrap_content\"                 android:layout_gravity=\"center\"                 android:layout_marginEnd=\"20dp\"                 android:layout_marginStart=\"20dp\"                 android:gravity=\"center\"                 android:text=\"You are 400pts. away from \\n unlocking rewards. quit Earning?\"                 android:textSize=\"18dp\"                 android:textStyle=\"bold\" />          </android.support.v7.widget.CardView>     </LinearLayout>      <FrameLayout         android:layout_width=\"wrap_content\"         android:layout_height=\"wrap_content\"         android:layout_gravity=\"center\"         android:id=\"@+id/frmNo\"         android:layout_marginRight=\"45dp\"         android:layout_marginTop=\"75dp\">          <android.support.design.widget.FloatingActionButton             android:layout_width=\"60dp\"             android:layout_height=\"60dp\"             android:src=\"@android:color/transparent\"             app:backgroundTint=\"@color/fab2\" />          <TextView             android:layout_width=\"wrap_content\"             android:layout_height=\"wrap_content\"             android:layout_gravity=\"center\"             android:elevation=\"6dp\"             android:text=\"No\"             android:textAppearance=\"?android:attr/textAppearanceMedium\"             android:textColor=\"@android:color/white\"             android:textStyle=\"bold\" />     </FrameLayout>      <FrameLayout         android:layout_width=\"wrap_content\"         android:layout_height=\"wrap_content\"         android:layout_gravity=\"center\"         android:id=\"@+id/frmOk\"         android:layout_marginLeft=\"50dp\"         android:layout_marginTop=\"75dp\">          <android.support.design.widget.FloatingActionButton             android:layout_width=\"60dp\"             android:layout_height=\"60dp\"             android:src=\"@android:color/transparent\"             app:backgroundTint=\"@color/fab1\" />          <TextView             android:layout_width=\"wrap_content\"             android:layout_height=\"wrap_content\"             android:layout_gravity=\"center\"             android:elevation=\"6dp\"             android:text=\"Ok\"             android:textAppearance=\"?android:attr/textAppearanceMedium\"             android:textColor=\"@android:color/white\"             android:textStyle=\"bold\" />     </FrameLayout> </FrameLayout>\n",
    "reg_date": "2021-10-12T12:01:21.000Z"
  },
  {
    "id": 577,
    "keyword": null,
    "link": null,
    "title": " android dialogfragment fullscreen stack overflow",
    "description": "This below answer works for me in fragment dialog.       Dialog dialog = getDialog();         if (dialog != null)         {             int width = ViewGroup.LayoutParams.MATCH_PARENT;             int height = ViewGroup.LayoutParams.MATCH_PARENT;             dialog.getWindow().setLayout(width, height);         }\noverride fun onStart() {     super.onStart()     dialog?.let {         val width = ViewGroup.LayoutParams.MATCH_PARENT         val height = ViewGroup.LayoutParams.MATCH_PARENT         it.window?.setLayout(width, height)     } }\n",
    "reg_date": "2021-10-12T12:01:21.000Z"
  },
  {
    "id": 578,
    "keyword": null,
    "link": null,
    "title": " android dismiss keyboard",
    "description": "public static void hideSoftKeyboard(Activity activity) {     InputMethodManager inputMethodManager =          (InputMethodManager) activity.getSystemService(             Activity.INPUT_METHOD_SERVICE);     inputMethodManager.hideSoftInputFromWindow(         activity.getCurrentFocus().getWindowToken(), 0); }\nInputMethodManager imm = (InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE); imm.hideSoftInputFromWindow(myEditText.getWindowToken(), 0);\n",
    "reg_date": "2021-10-12T12:01:21.000Z"
  },
  {
    "id": 579,
    "keyword": null,
    "link": null,
    "title": " android display drawable in imageview",
    "description": "img=(ImageView)findViewById(R.id.imageview1); Drawable myDrawable = getResources().getDrawable(R.drawable.imageView1); img.setImageDrawable(myDrawable); \n",
    "reg_date": "2021-10-12T12:01:21.000Z"
  },
  {
    "id": 580,
    "keyword": null,
    "link": null,
    "title": " android done key",
    "description": "import android.view.inputmethod.EditorInfo; import android.widget.TextView;  Context context = this;  TextView.OnEditorActionListener editListener = new TextView.OnEditorActionListener() {   @Override   public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {     if (actionId == EditorInfo.IME_ACTION_NEXT) {       Toast.makeText(context, \"next\", Toast.LENGTH_SHORT).show();     }     if (actionId == EditorInfo.IME_ACTION_DONE) {       Toast.makeText(context, \"done\", Toast.LENGTH_SHORT).show();     }     return false;   } };  nameEdit.setOnEditorActionListener(editListener);\n",
    "reg_date": "2021-10-12T12:01:21.000Z"
  },
  {
    "id": 581,
    "keyword": null,
    "link": null,
    "title": " android done key event",
    "description": "import android.view.inputmethod.EditorInfo; import android.widget.TextView;  Context context = this;  TextView.OnEditorActionListener editListener = new TextView.OnEditorActionListener() {   @Override   public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {     if (actionId == EditorInfo.IME_ACTION_NEXT) {       Toast.makeText(context, \"next\", Toast.LENGTH_SHORT).show();     }     if (actionId == EditorInfo.IME_ACTION_DONE) {       Toast.makeText(context, \"done\", Toast.LENGTH_SHORT).show();     }     return false;   } };  nameEdit.setOnEditorActionListener(editListener);\n",
    "reg_date": "2021-10-12T12:01:21.000Z"
  },
  {
    "id": 582,
    "keyword": null,
    "link": null,
    "title": " android elevation not working",
    "description": "android:outlineProvider=\"bounds\"\n",
    "reg_date": "2021-10-12T12:01:21.000Z"
  },
  {
    "id": 583,
    "keyword": null,
    "link": null,
    "title": " android exo player tutorail",
    "description": "implementation 'com.google.android.exoplayer:exoplayer:2.7.2'\n",
    "reg_date": "2021-10-12T12:01:22.000Z"
  },
  {
    "id": 584,
    "keyword": null,
    "link": null,
    "title": " android get id of view",
    "description": "//Don't get the ID name/string from the view ID.  //Instead use the  android:tag = \"String\" //in your xml   //Then in Java use  View.getTag()    //To still get the ID name/string from view ID. getResources().getResourceEntryName(View.getId())\npublic void onClick(View v) {     switch (v.getId()) {     case R.id.add_04:         Toast.makeText(MainActivity.this, \"1\", Toast.LENGTH_LONG).show();         break;     case R.id.add_05:         Toast.makeText(MainActivity.this, \"2\", Toast.LENGTH_LONG).show();         break;     } }\n",
    "reg_date": "2021-10-12T12:01:22.000Z"
  },
  {
    "id": 585,
    "keyword": null,
    "link": null,
    "title": " android get last crash adb",
    "description": "adb logcat -b crash \n",
    "reg_date": "2021-10-12T12:01:22.000Z"
  },
  {
    "id": 586,
    "keyword": null,
    "link": null,
    "title": " android get screen width and height",
    "description": "DisplayMetrics displayMetrics = getResources().getDisplayMetrics(); float dpHeight = displayMetrics.heightPixels / displayMetrics.density; float dpWidth = displayMetrics.widthPixels / displayMetrics.density; Log.d(\"MyHeight\", dpHeight+\"\"); Log.d(\"MyWidth\", dpWidth+\"\");\nDisplay display = getWindowManager().getDefaultDisplay(); Point size = new Point(); display.getSize(size); int width = size.x; int height = size.y; \n",
    "reg_date": "2021-10-12T12:01:22.000Z"
  },
  {
    "id": 587,
    "keyword": null,
    "link": null,
    "title": " android get text from string xml programmatically",
    "description": "Context context; String mess = context.getString(R.string.mess_1)\n",
    "reg_date": "2021-10-12T12:01:22.000Z"
  },
  {
    "id": 588,
    "keyword": null,
    "link": null,
    "title": " android glide dependencies",
    "description": "repositories {   mavenCentral()   google() }  dependencies {   implementation 'com.github.bumptech.glide:glide:4.11.0'   annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0' }\n",
    "reg_date": "2021-10-12T12:01:22.000Z"
  },
  {
    "id": 589,
    "keyword": null,
    "link": null,
    "title": " android glide dependency",
    "description": "dependencies {   implementation 'com.github.bumptech.glide:glide:4.11.0'   annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0' }\nrepositories {   mavenCentral()   google() }  dependencies {   implementation 'com.github.bumptech.glide:glide:4.11.0'   annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0' }\n",
    "reg_date": "2021-10-12T12:01:22.000Z"
  },
  {
    "id": 590,
    "keyword": null,
    "link": null,
    "title": " android gridlayout equal column width",
    "description": "android:layout_gravity=\"fill\" android:layout_columnWeight=\"1\"\n",
    "reg_date": "2021-10-12T12:01:22.000Z"
  },
  {
    "id": 591,
    "keyword": null,
    "link": null,
    "title": " android hide keyboard",
    "description": "public void hideKeyboard(Context context, View view) {     InputMethodManager imm = (InputMethodManager) context.getSystemService(Activity.INPUT_METHOD_SERVICE);     imm.hideSoftInputFromWindow(view.getWindowToken(), 0); }  // call from inside an Activity... hideKeyboard(this, view); hideKeyboard(this, getCurrentFocus()); hideKeyboard(this, getWindow().getDecorView()); hideKeyboard(this, findViewById(android.R.id.content));\n class CloseHideSoftKeyboard : AppCompatActivity() {     override fun onCreate(savedInstanceState: Bundle?) {         super.onCreate(savedInstanceState)         setContentView(R.layout.activity_message)          val editTextXml = findViewById<EditText>(R.id.editText)         val btnSendMessage = findViewById<Button>(R.id.btnSend)                  btnSendMessage.setOnClickListener{           // ... you actions           // Important! EditText must have be focused            // do action close keyboard first before go to another           // activity or fragment         \tcloseSoftKeyboard(this, editTextXml)         }     }       /* hide soft keyboard after writing and sending message or any */    private fun closeSoftKeyboard(context: Context, v: View) {         val iMm = context.getSystemService(Activity.INPUT_METHOD_SERVICE) as InputMethodManager         iMm.hideSoftInputFromWindow(v.windowToken, 0)         v.clearFocus()     } } // link to resourse (Russian version) // https://issue.life/questions/1109022/close-hide-the-android-soft-keyboard\n//With AndroidX: fun View.hideKeyboard() = ViewCompat.getWindowInsetsController(this)     ?.hide(WindowInsetsCompat.Type.ime())\n<activity android:name=\"com.your.package.ActivityName\"           android:windowSoftInputMode=\"stateHidden\"  />\n",
    "reg_date": "2021-10-12T12:01:22.000Z"
  },
  {
    "id": 592,
    "keyword": null,
    "link": null,
    "title": " android hide status bar and action bar daynamically",
    "description": "import androidx.appcompat.app.AppCompatActivity; import android.os.Bundle; import android.view.Window; import android.view.WindowManager; public class MainActivity extends AppCompatActivity {    @Override    protected void onCreate(Bundle savedInstanceState) {       super.onCreate(savedInstanceState);       requestWindowFeature(Window.FEATURE_NO_TITLE);       getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);       setContentView(R.layout.activity_main);    } }\n",
    "reg_date": "2021-10-12T12:01:22.000Z"
  },
  {
    "id": 593,
    "keyword": null,
    "link": null,
    "title": " android hide textview",
    "description": "         android:visibility=\"invisible\"\n",
    "reg_date": "2021-10-12T12:01:23.000Z"
  },
  {
    "id": 594,
    "keyword": null,
    "link": null,
    "title": " android highlight part of textview",
    "description": "String newString = oldString.replaceAll(textToHighlight, \"<font color='red'>\"+textToHighlight+\"</font>\"); textView.setText(Html.fromHtml(newString)); \n",
    "reg_date": "2021-10-12T12:01:23.000Z"
  },
  {
    "id": 595,
    "keyword": null,
    "link": null,
    "title": " android how to add permission to manifest",
    "description": "<manifest xlmns:android...>  ...  <uses-permission android:name=\"android.permission.INTERNET\" />  <application ... </manifest> \n",
    "reg_date": "2021-10-12T12:01:23.000Z"
  },
  {
    "id": 596,
    "keyword": null,
    "link": null,
    "title": " android how to determine if the edit text  focus changes",
    "description": "for (EditText view : editList){    view.setOnFocusChangeListener(focusListener); } .... private OnFocusChangeListener focusListener = new OnFocusChangeListener() {     public void onFocusChange(View v, boolean hasFocus) {         if (hasFocus){              focusedView = v;         } else {              focusedView  = null;         }     } } \n",
    "reg_date": "2021-10-12T12:01:23.000Z"
  },
  {
    "id": 597,
    "keyword": null,
    "link": null,
    "title": " android how to don't show keyboard",
    "description": "getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN);\n",
    "reg_date": "2021-10-12T12:01:23.000Z"
  },
  {
    "id": 598,
    "keyword": null,
    "link": null,
    "title": " android how to get current activity",
    "description": "ActivityManager am = (ActivityManager)context.getSystemService(Context.ACTIVITY_SERVICE); ComponentName cn = am.getRunningTasks(1).get(0).topActivity;\n",
    "reg_date": "2021-10-12T12:01:23.000Z"
  },
  {
    "id": 599,
    "keyword": null,
    "link": null,
    "title": " android how to split string",
    "description": "String currentString = \"Fruit: they taste good\"; String[] separated = currentString.split(\":\"); separated[0]; // this will contain \"Fruit\" separated[1]; // this will contain \" they taste good\"\n",
    "reg_date": "2021-10-12T12:01:23.000Z"
  },
  {
    "id": 600,
    "keyword": null,
    "link": null,
    "title": " android how to start a new activity on button click",
    "description": "Intent intent = new Intent(this, DisplayMessageActivity.class);         intent.putExtra(key:,value:);         startActivity(intent);\nIntent intent = new Intent(this, ActivityToBeCalled.class); startActivity(intent);\n private Button button;      @Override     protected void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         setContentView(R.layout.activity_main4);         button = (Button)findViewById(R.id.button7);          button.setOnClickListener(new View.OnClickListener() {             @Override             public void onClick(View v) {                 openInsideActivity4();             }         });     }     public void openInsideActivity4()     {         Intent intent = new Intent(this,InsideActivity4.class);         startActivity(intent);     }\n",
    "reg_date": "2021-10-12T12:01:23.000Z"
  },
  {
    "id": 601,
    "keyword": null,
    "link": null,
    "title": " android how to switch between activities",
    "description": "Intent intent = new Intent(getApplicationContext(), ActivityToBeOpened.class); startActivity(intent);\n",
    "reg_date": "2021-10-12T12:01:23.000Z"
  },
  {
    "id": 602,
    "keyword": null,
    "link": null,
    "title": " android iinput edit text password icon change",
    "description": "<?xml version=\"1.0\" encoding=\"utf-8\"?> <selector xmlns:android=\"http://schemas.android.com/apk/res/android\"> <item android:drawable=\"@drawable/ic_visibility_black_18dp\" android:state_checked=\"true\"/> <item android:drawable=\"@drawable/ic_visibility_off_black_18dp\"/> </selector>  <android.support.design.widget.TextInputLayout     android:id=\"@+id/layoutTextInput\"     app:passwordToggleEnabled=\"true\"     app:passwordToggleDrawable=\"@drawable/show_password_selector\"     android:textColorHint=\"@color/gray\">     <android.support.v7.widget.AppCompatEditText         android:id=\"@+id/editTextValue\"         android:imeOptions=\"actionNext\"         android:layout_marginBottom=\"8dp\"         android:inputType=\"text\"/> </android.support.design.widget.TextInputLayout>\n",
    "reg_date": "2021-10-12T12:01:23.000Z"
  },
  {
    "id": 603,
    "keyword": null,
    "link": null,
    "title": " android image view showing rotate image",
    "description": "android:rotation=\"90\"\n",
    "reg_date": "2021-10-12T12:01:24.000Z"
  },
  {
    "id": 604,
    "keyword": null,
    "link": null,
    "title": " android internet permission",
    "description": "//Add this to app manifest <uses-permission android:name=\"android.permission.INTERNET\" />\n<manifest ...>     <uses-permission android:name=\"android.permission.INTERNET\" />     <application         android:usesCleartextTraffic=\"true\"         ...>         ...     </application> </manifest>\n//add to AndroidManifest.xml <uses-permission android:name=\"android.permission.INTERNET\" />\n<uses-permission android:name=\"android.permission.INTERNET\" />  \n<uses-permission android:name=\"android.permission.INTERNET\" /> \n<uses-permission android:name=\"android.permission.INTERNET\"/>\n",
    "reg_date": "2021-10-12T12:01:24.000Z"
  },
  {
    "id": 605,
    "keyword": null,
    "link": null,
    "title": " android java back button closeapp",
    "description": "public void onBackPressed(){ Intent a = new Intent(Intent.ACTION_MAIN); a.addCategory(Intent.CATEGORY_HOME); a.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK); startActivity(a); } \n",
    "reg_date": "2021-10-12T12:01:24.000Z"
  },
  {
    "id": 606,
    "keyword": null,
    "link": null,
    "title": " android java close app",
    "description": " @Override     public void onBackPressed() {         AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(this);         alertDialogBuilder.setTitle(\"Exit Application?\");         alertDialogBuilder                 .setMessage(\"Click yes to exit!\")                 .setCancelable(false)                 .setPositiveButton(\"Yes\",                         new DialogInterface.OnClickListener() {                             public void onClick(DialogInterface dialog, int id) {                                 moveTaskToBack(true);                                 android.os.Process.killProcess(android.os.Process.myPid());                                 System.exit(1);                             }                         })                  .setNegativeButton(\"No\", new DialogInterface.OnClickListener() {                     public void onClick(DialogInterface dialog, int id) {                          dialog.cancel();                     }                 });          AlertDialog alertDialog = alertDialogBuilder.create();         alertDialog.show();     } \n",
    "reg_date": "2021-10-12T12:01:24.000Z"
  },
  {
    "id": 607,
    "keyword": null,
    "link": null,
    "title": " android java convert double to 2 decimal places",
    "description": "String.format(\"%.2f\", d)\nString stringDecimal = String.format(\"%.2f, d\");\n",
    "reg_date": "2021-10-12T12:01:24.000Z"
  },
  {
    "id": 608,
    "keyword": null,
    "link": null,
    "title": " android java display icon in action bar",
    "description": "getSupportActionBar().setDisplayShowHomeEnabled(true); getSupportActionBar().setLogo(R.mipmap.ic_launcher); getSupportActionBar().setDisplayUseLogoEnabled(true);\nActionBar actionBar = getActionBar(); actionBar.setSubtitle(\"mytest\"); actionBar.setTitle(\"vogella.com\");\n",
    "reg_date": "2021-10-12T12:01:24.000Z"
  },
  {
    "id": 609,
    "keyword": null,
    "link": null,
    "title": " android java double to string",
    "description": "double total = 44; String total2 = Double.toString(total);\ndouble number = -895.25; String numberAsString = String.valueOf(number);\ndouble a = Double.parseDouble(editText.getText().toString()); Double.toString() \n",
    "reg_date": "2021-10-12T12:01:24.000Z"
  },
  {
    "id": 610,
    "keyword": null,
    "link": null,
    "title": " android java format date time",
    "description": "import java.time.*; import java.time.format.*; DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"); LocalDateTime datetime = LocalDateTime.now(); String output = formatter.format(datetime);\nimport java.time.*; import java.time.format.*; DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"); LocalDate date = LocalDate.now(); String output = formatter.format(date);\nimport java.time.*; import java.time.format.*; DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"HH:mm:ss\"); LocalTime time = LocalTime.now(); String output = formatter.format(time);\n",
    "reg_date": "2021-10-12T12:01:24.000Z"
  },
  {
    "id": 611,
    "keyword": null,
    "link": null,
    "title": " android java get current date",
    "description": "Calendar c = Calendar.getInstance(); SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\"); String strDate = sdf.format(c.getTime()); Log.d(\"Date\",\"DATE : \" + strDate)\nimport java.time.*; LocalDateTime datetime = LocalDateTime.now(); \nimport java.time.*; LocalDate date = LocalDate.now();\nString currentTime = new SimpleDateFormat(\"HH:mm:ss\", Locale.getDefault()).format(new Date());\nString date = new SimpleDateFormat(\"yyyy-MM-dd\", Locale.getDefault()).format(new Date());\nString currentDateTimeString = java.text.DateFormat.getDateTimeInstance().format(new Date());  // textView is the TextView view that should display it textView.setText(currentDateTimeString);\n",
    "reg_date": "2021-10-12T12:01:24.000Z"
  },
  {
    "id": 612,
    "keyword": null,
    "link": null,
    "title": " android java get current time",
    "description": "import java.time.*; LocalDateTime datetime = LocalDateTime.now(); \nimport java.time.*; LocalDate date = LocalDate.now();\nString currentTime = new SimpleDateFormat(\"HH:mm:ss\", Locale.getDefault()).format(new Date());\nimport java.time.*; LocalTime time = LocalTime.now(); \nimport java.util.Calendar  Date currentTime = Calendar.getInstance().getTime();\n",
    "reg_date": "2021-10-12T12:01:24.000Z"
  },
  {
    "id": 613,
    "keyword": null,
    "link": null,
    "title": " android java how to blur an image",
    "description": "// siyanda zama <ImageView \tandroid:layout_height=\"wrap_content\"     android:layout_width=\"match_parent\"     android:alpha=\"0.7\"       />\n",
    "reg_date": "2021-10-12T12:01:25.000Z"
  },
  {
    "id": 614,
    "keyword": null,
    "link": null,
    "title": " android java log",
    "description": "Log.e(String, String); //(error) Log.w(String, String); //(warning) Log.i(String, String); //(information) Log.d(String, String); //(debug) Log.v(String, String); //(verbose) Log.println(Log.ASSERT,\"TAG\",\"Msg\") //You should choose assert from logcat \nButton: Log.i(\"Info\", \"Example of info (like Button Pressed)\"); Plain Text: Log.i(\"Username\", usernameEditText.getText().toString());\nimport android.util.Log; Log.d(\"tagString\", \"messageString\");\nLog.i(\"The place or function from where log is made\",\"The log text to show\");\n",
    "reg_date": "2021-10-12T12:01:25.000Z"
  },
  {
    "id": 615,
    "keyword": null,
    "link": null,
    "title": " android java parse date time",
    "description": "import java.time.*; import java.time.format.*; DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"); LocalDateTime datetime = LocalDateTime.now(); String output = formatter.format(datetime);\nimport java.time.*; import java.time.format.*; DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"); String input = \"2021-02-05 13:07:35\"; LocalDateTime datetime = LocalDateTime.parse(input, formatter);\nimport java.time.*; import java.time.format.*; DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"HH:mm:ss\"); String input = \"13:07:35\"; LocalTime time = LocalTime.parse(input, formatter);\nimport java.time.*; import java.time.format.*; DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"); String input = \"2021-02-05\"; LocalDate date = LocalDate.parse(input, formatter);\nimport java.time.*; import java.time.format.*; DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"); LocalDate date = LocalDate.now(); String output = formatter.format(date);\nimport java.time.*; import java.time.format.*; DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"HH:mm:ss\"); LocalTime time = LocalTime.now(); String output = formatter.format(time);\n",
    "reg_date": "2021-10-12T12:01:25.000Z"
  },
  {
    "id": 616,
    "keyword": null,
    "link": null,
    "title": " android java remove action bar",
    "description": "// In your Styles.xml file, change: parent=\"Theme.AppCompat.Light.DarkActionBar\"   // to: parent=\"Theme.AppCompat.Light.NoActionBar\"\n    ActionBar actionBar=getSupportActionBar();     actionBar.hide();\n",
    "reg_date": "2021-10-12T12:01:25.000Z"
  },
  {
    "id": 617,
    "keyword": null,
    "link": null,
    "title": " android java seekbar",
    "description": "final SeekBar SeekBarName = (SeekBar) findViewById(R.id.SeekBarId); SeekBarName.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {  Set Max: SeekBarName.setMax(); Set starting point: SeekBarName.setProgress();\n",
    "reg_date": "2021-10-12T12:01:25.000Z"
  },
  {
    "id": 618,
    "keyword": null,
    "link": null,
    "title": " android java string to double",
    "description": "public class stringtodouble { \tpublic static void main(String args) {     \tString string = \"1.23\";       \tdouble decimal = Double.parseDouble(string);     } }\nString s; DecimalFormat dF = new DecimalFormat(\"0.00\"); Number num = dF.parse(s); double final = num.doubleValue();\ndouble total = a;        String total2 = String.valueOf(total); a = variabile inserita dall&rsquo;utente nel plain text \nDouble lat; String lat_str = \"17.456174\"; try { lat = Double.parseDouble(lat_str); }catch (NumberFormatException e) { //lat_string does not contain valid double value }   \ndouble a = Double.parseDouble(editText.getText().toString()); Double.toString() \n",
    "reg_date": "2021-10-12T12:01:25.000Z"
  },
  {
    "id": 619,
    "keyword": null,
    "link": null,
    "title": " android java text fields",
    "description": "EditText usernameEditText = (EditText) findViewById(R.id.Plain textid);\n",
    "reg_date": "2021-10-12T12:01:25.000Z"
  },
  {
    "id": 620,
    "keyword": null,
    "link": null,
    "title": " android java toast",
    "description": "Toast myToast = Toast.makeText(this, \"I'm a toast!\", Toast.LENGTH_LONG); myToast.show();\nToast.makeText(context this, text \"Example of Text\", Toast.LENGTH_LONG).show();\nToast.makeText(context, text, duration).show(); \nToast toast = Toast.makeText(this, \"message\", Toast.LENGTH_LONG;);     toast.show();\nToast.makeText(this, \"Mmm Toasty\", Toast.LENGTH_LONG).show();\n",
    "reg_date": "2021-10-12T12:01:25.000Z"
  },
  {
    "id": 621,
    "keyword": null,
    "link": null,
    "title": " android java transparent background",
    "description": "#80000000\n100% &mdash; FF 95% &mdash; F2 90% &mdash; E6 85% &mdash; D9 80% &mdash; CC 75% &mdash; BF 70% &mdash; B3 65% &mdash; A6 60% &mdash; 99 55% &mdash; 8C 50% &mdash; 80 45% &mdash; 73 40% &mdash; 66 35% &mdash; 59 30% &mdash; 4D 25% &mdash; 40 20% &mdash; 33 15% &mdash; 26 10% &mdash; 1A 5% &mdash; 0D 0% &mdash; 00 \n",
    "reg_date": "2021-10-12T12:01:25.000Z"
  },
  {
    "id": 622,
    "keyword": null,
    "link": null,
    "title": " android java xml combo box",
    "description": "<androidx.appcompat.widget.AppCompatSpinner         android:layout_width=\"match_parent\"         android:layout_height=\"wrap_content\"         android:id=\"@+id/spinner\" />\n",
    "reg_date": "2021-10-12T12:01:25.000Z"
  },
  {
    "id": 623,
    "keyword": null,
    "link": null,
    "title": " android kill other app programmatically by package",
    "description": "ActivityManager am = (ActivityManager) getSystemService(Activity.ACTIVITY_SERVICE); am.killBackgroundProcesses(packageName); \t Permission:  <uses-permission android:name=\"android.permission.KILL_BACKGROUND_PROCESSES\" />\n",
    "reg_date": "2021-10-12T12:01:26.000Z"
  },
  {
    "id": 624,
    "keyword": null,
    "link": null,
    "title": " android kotlin center text",
    "description": "// Centering text in kotlin for android  // like this android:textAlignment=\"center\"\n",
    "reg_date": "2021-10-12T12:01:26.000Z"
  },
  {
    "id": 625,
    "keyword": null,
    "link": null,
    "title": " android kotlin change text color",
    "description": "// Android kotlin changing text color  // like this android:textColor=\"#454545\"\n",
    "reg_date": "2021-10-12T12:01:26.000Z"
  },
  {
    "id": 626,
    "keyword": null,
    "link": null,
    "title": " android langange change not properly",
    "description": " @Override public void onCreate() {     super.onCreate();     LocaleUtil.setLocale(new Locale(LocaleUtil.with(this).getPreference()));     LocaleUtil.updateConfig(this,getBaseContext().getResources().getConfiguration()); } // Add this method in all activity @Override public void onConfigurationChanged(Configuration newConfig) {     super.onConfigurationChanged(newConfig);     LocaleUtil.setLocale(new Locale(LocaleUtil.with(this).getPreference()));     LocaleUtil.updateConfig(this, newConfig); }\n",
    "reg_date": "2021-10-12T12:01:26.000Z"
  },
  {
    "id": 627,
    "keyword": null,
    "link": null,
    "title": " android localdatetime",
    "description": "import java.time.*; LocalDateTime datetime = LocalDateTime.now(); \n",
    "reg_date": "2021-10-12T12:01:26.000Z"
  },
  {
    "id": 628,
    "keyword": null,
    "link": null,
    "title": " android manifest cleartext traffic permitted",
    "description": "<?xml version=\"1.0\" encoding=\"utf-8\"?> <manifest ...>     <uses-permission android:name=\"android.permission.INTERNET\" />     <application         ...         android:usesCleartextTraffic=\"true\"         ...>         ...     </application> </manifest>\n",
    "reg_date": "2021-10-12T12:01:26.000Z"
  },
  {
    "id": 629,
    "keyword": null,
    "link": null,
    "title": " android maven dependency",
    "description": "maven {              url 'repo1.maven.org/maven2';          } \n",
    "reg_date": "2021-10-12T12:01:26.000Z"
  },
  {
    "id": 630,
    "keyword": null,
    "link": null,
    "title": " android navigation bar color change",
    "description": "<item name=\"android:navigationBarColor\">@color/theme_color</item>\n",
    "reg_date": "2021-10-12T12:01:26.000Z"
  },
  {
    "id": 631,
    "keyword": null,
    "link": null,
    "title": " android next key",
    "description": "import android.view.inputmethod.EditorInfo; import android.widget.TextView;  Context context = this;  TextView.OnEditorActionListener editListener = new TextView.OnEditorActionListener() {   @Override   public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {     if (actionId == EditorInfo.IME_ACTION_NEXT) {       Toast.makeText(context, \"next\", Toast.LENGTH_SHORT).show();     }     if (actionId == EditorInfo.IME_ACTION_DONE) {       Toast.makeText(context, \"done\", Toast.LENGTH_SHORT).show();     }     return false;   } };  nameEdit.setOnEditorActionListener(editListener);\n",
    "reg_date": "2021-10-12T12:01:26.000Z"
  },
  {
    "id": 632,
    "keyword": null,
    "link": null,
    "title": " android number format",
    "description": "float price = 10.99f; NumberFormat priceFormat = NumberFormat.getCurrencyInstance(); String priceString = priceFormat.format(price);\n",
    "reg_date": "2021-10-12T12:01:26.000Z"
  },
  {
    "id": 633,
    "keyword": null,
    "link": null,
    "title": " android onlcik java",
    "description": "Button button = (Button) findViewById(R.id.button_send); button.setOnClickListener(new View.OnClickListener() {     public void onClick(View v) {         // Do something in response to button click     } }); //https://developer.android.com/guide/topics/ui/controls/button\n",
    "reg_date": "2021-10-12T12:01:27.000Z"
  },
  {
    "id": 634,
    "keyword": null,
    "link": null,
    "title": " android open browser",
    "description": "Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(\"http://www.google.com\")); startActivity(browserIntent);\n",
    "reg_date": "2021-10-12T12:01:27.000Z"
  },
  {
    "id": 635,
    "keyword": null,
    "link": null,
    "title": " android parse date",
    "description": "import java.time.*; import java.time.format.*; DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"); String input = \"2021-02-05 13:07:35\"; LocalDateTime datetime = LocalDateTime.parse(input, formatter);\nimport java.time.*; import java.time.format.*; DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"HH:mm:ss\"); String input = \"13:07:35\"; LocalTime time = LocalTime.parse(input, formatter);\n",
    "reg_date": "2021-10-12T12:01:27.000Z"
  },
  {
    "id": 636,
    "keyword": null,
    "link": null,
    "title": " android parse time",
    "description": "import java.time.*; import java.time.format.*; DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"); String input = \"2021-02-05 13:07:35\"; LocalDateTime datetime = LocalDateTime.parse(input, formatter);\n",
    "reg_date": "2021-10-12T12:01:27.000Z"
  },
  {
    "id": 637,
    "keyword": null,
    "link": null,
    "title": " android parse timestamp",
    "description": "import java.time.*; import java.time.format.*; DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"); String input = \"2021-02-05 13:07:35\"; LocalDateTime datetime = LocalDateTime.parse(input, formatter);\n",
    "reg_date": "2021-10-12T12:01:27.000Z"
  },
  {
    "id": 638,
    "keyword": null,
    "link": null,
    "title": " android pass object to activity",
    "description": "Intent intent = new Intent(fromClass.this,toClass.class).putExtra(\"myCustomerObj\",customerObj);\nCustomer customerObjInToClass = getIntent().getExtras().getParcelable(\"myCustomerObj\");\n",
    "reg_date": "2021-10-12T12:01:27.000Z"
  },
  {
    "id": 639,
    "keyword": null,
    "link": null,
    "title": " android play sound file from assets",
    "description": "// MediaPlayer m; /*assume, somewhere in the global scope...*/  public void playBeep() {     try {         if (m.isPlaying()) {             m.stop();             m.release();             m = new MediaPlayer();         }          AssetFileDescriptor descriptor = getAssets().openFd(\"beepbeep.mp3\");         m.setDataSource(descriptor.getFileDescriptor(), descriptor.getStartOffset(), descriptor.getLength());         descriptor.close();          m.prepare();         m.setVolume(1f, 1f);         m.setLooping(true);         m.start();     } catch (Exception e) {         e.printStackTrace();     } }\n",
    "reg_date": "2021-10-12T12:01:27.000Z"
  },
  {
    "id": 640,
    "keyword": null,
    "link": null,
    "title": " android recyclerview show hide item with animation with default animation",
    "description": "import android.animation.Animator; import android.animation.AnimatorListenerAdapter; import android.view.View;  public final class AnimationUtils {    public static void slideDown(final View view) {         view.animate()                 .translationY(view.getHeight())                 .alpha(0.f)                 .setListener(new AnimatorListenerAdapter() {                     @Override                     public void onAnimationEnd(Animator animation) {                         // superfluous restoration                         view.setVisibility(View.GONE);                         view.setAlpha(1.f);                         view.setTranslationY(0.f);                     }                 });     }      public static void slideUp(final View view) {         view.setVisibility(View.VISIBLE);         view.setAlpha(0.f);          if (view.getHeight() > 0) {             slideUpNow(view);         } else {             // wait till height is measured             view.post(new Runnable() {                 @Override                 public void run() {                     slideUpNow(view);                 }             });         }     }      private static void slideUpNow(final View view) {         view.setTranslationY(view.getHeight());         view.animate()                 .translationY(0)                 .alpha(1.f)                 .setListener(new AnimatorListenerAdapter() {                     @Override                     public void onAnimationEnd(Animator animation) {                         view.setVisibility(View.VISIBLE);                         view.setAlpha(1.f);                     }                 });     }  }\n",
    "reg_date": "2021-10-12T12:01:27.000Z"
  },
  {
    "id": 641,
    "keyword": null,
    "link": null,
    "title": " android resource linking failed",
    "description": "Change the following settings in build.gradle file to:  classpath 'com.android.tools.build:gradle:3.4.2'\n",
    "reg_date": "2021-10-12T12:01:28.000Z"
  },
  {
    "id": 642,
    "keyword": null,
    "link": null,
    "title": " android retrofit get @query",
    "description": "interface WeatherService {     @GET(\"data/2.5/weather?\")     fun getCurrentWeatherData(@Query(\"lat\") lat: String, @Query(\"lon\") lon: String, @Query(\"APPID\") app_id: String): Call<WeatherResponse> }\n",
    "reg_date": "2021-10-12T12:01:28.000Z"
  },
  {
    "id": 643,
    "keyword": null,
    "link": null,
    "title": " android round double to 2 decimal",
    "description": "String.format(\"%.2f\", d)\nString stringDecimal = String.format(\"%.2f, d\");\n",
    "reg_date": "2021-10-12T12:01:28.000Z"
  },
  {
    "id": 644,
    "keyword": null,
    "link": null,
    "title": " android save int",
    "description": "public void saveInt(int val, String key){     SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(mainActivity);     SharedPreferences.Editor editor = prefs.edit();     editor.putInt(key, val);     editor.apply(); }  public int getInt(String key){     SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(mainActivity);     int val = prefs.getInt(key, 0);     return val; }\n",
    "reg_date": "2021-10-12T12:01:28.000Z"
  },
  {
    "id": 645,
    "keyword": null,
    "link": null,
    "title": " android selectable textview",
    "description": "<TextView     android:id=\"@+id/deviceIdTV\"     android:layout_width=\"wrap_content\"     android:layout_height=\"wrap_content\"     android:textIsSelectable=\"true\"     android:text=\"\" />\n",
    "reg_date": "2021-10-12T12:01:28.000Z"
  },
  {
    "id": 646,
    "keyword": null,
    "link": null,
    "title": " android separator line in view",
    "description": " <View  android:id=\"@+id/view1\"  android:layout_width=\"fill_parent\"  android:layout_height=\"2dp\"  android:layout_alignParentRight=\"true\"  android:layout_below=\"@+id/textView1\"  android:layout_marginTop=\"20dp\"  android:background=\"#ff9703\" />\n",
    "reg_date": "2021-10-12T12:01:28.000Z"
  },
  {
    "id": 647,
    "keyword": null,
    "link": null,
    "title": " android settextcolor programmatically",
    "description": "mTextView.setTextColor(getResources().getColor(R.color.<name_of_color>));\nmTextView.setTextColor(Color.parseColor(\"#bdbdbd\"));\n",
    "reg_date": "2021-10-12T12:01:28.000Z"
  },
  {
    "id": 648,
    "keyword": null,
    "link": null,
    "title": " android sharedpreferences",
    "description": "// load file SharedPreferences sharedPref = getSharedPreferences(PREFERENCES_FILENAME, MODE_PRIVATE);  // read value String value = sharedPref.getString(PREFERENCE_KEY, null);  // write value sharedPref.edit()   .putString(PREFERENCE_KEY, value)   .apply(); \nSharedPreferences sharedPref = getSharedPreferences(\"name\", Context.MODE_PRIVATE); SharedPreferences.Editor editor = sharedPref.edit(); editor.putString(\"key\", \"Value\"); editor.commit();\nboolean mBoolean = PreferenceManager.getDefaultSharedPreferences(yourContext).getBoolean(key, defaultValue); //getBoolean will return defaultValue is key isn't found //you can also use getInt, getFloat, getLong, getString, getStringSet and change the variable type, of course \n// MY_PREFS_NAME - a static String variable like:  //public static final String MY_PREFS_NAME = \"MyPrefsFile\"; SharedPreferences.Editor editor = getSharedPreferences(MY_PREFS_NAME, MODE_PRIVATE).edit();  editor.putString(\"name\", \"Elena\");  editor.putInt(\"idName\", 12);  editor.apply(); \nboolean committed = PreferenceManager.getDefaultSharedPreferences(yourContext).edit().putBoolean(key, mValue).commit(); //you can also use putInt, putFloat, putLong, putString, putStringSet and change the value of mValue //committed is true if everything went alright, false if there was an error\n",
    "reg_date": "2021-10-12T12:01:28.000Z"
  },
  {
    "id": 649,
    "keyword": null,
    "link": null,
    "title": " android sqlite select query",
    "description": "SQLiteDatabase db = this.getReadableDatabase(); Cursor c = db.rawQuery(\"SELECT column1,column2,column3 FROM table \", null); if (c.moveToFirst()){     do {         // Passing values          String column1 = c.getString(0);         String column2 = c.getString(1);         String column3 = c.getString(2);          // Do something Here with values     } while(c.moveToNext()); } c.close(); db.close();\n",
    "reg_date": "2021-10-12T12:01:28.000Z"
  },
  {
    "id": 650,
    "keyword": null,
    "link": null,
    "title": " android start service on boot",
    "description": "<!-- Allows application to receive actions related to rebooting --> <uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\" />  <!-- Inside your <application> --> <receiver \tandroid:name=\"com.example.MyBroadcastReceiver\" \tandroid:exported=\"true\" \tandroid:enabled=\"true\"     android:installLocation=\"internalOnly\"> \t<intent-filter> \t\t<!-- Handles cold reboot (power off/on) --> \t\t<action android:name=\"android.intent.action.BOOT_COMPLETED\" /> \t\t<!-- Handles quick restart --> \t\t<action android:name=\"android.intent.action.QUICKBOOT_POWERON\" /> \t</intent-filter> </receiver> \n",
    "reg_date": "2021-10-12T12:01:28.000Z"
  },
  {
    "id": 651,
    "keyword": null,
    "link": null,
    "title": " android studio Manifest.xml internet permissionm",
    "description": "<uses-permission android:name=\"android.permission.INTERNET\" /> \n",
    "reg_date": "2021-10-12T12:01:29.000Z"
  },
  {
    "id": 652,
    "keyword": null,
    "link": null,
    "title": " android studio Toast usage",
    "description": "    Context context = getApplicationContext();     CharSequence text = \"Hello toast!\";     int duration = Toast.LENGTH_SHORT;      Toast toast = Toast.makeText(context, text, duration);     toast.show();\n",
    "reg_date": "2021-10-12T12:01:29.000Z"
  },
  {
    "id": 653,
    "keyword": null,
    "link": null,
    "title": " android studio allow http",
    "description": "<application android:usesCleartextTraffic=\"true\"> </application> \n",
    "reg_date": "2021-10-12T12:01:29.000Z"
  },
  {
    "id": 654,
    "keyword": null,
    "link": null,
    "title": " android studio ask for external storage permission",
    "description": "pickimage.setOnClickListener(new View.OnClickListener() {     @Override     public void onClick(View v) {       if(checkSelfPermission(Manifest.permission.READ_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED)       {         ChoosePicture();       }else{         String[] myPermission={Manifest.permission.READ_EXTERNAL_STORAGE};         requestPermissions(myPermission,750);       } \t     } });  //if(checkSelfPermission(Manifest.permission.READ_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED) is asking if permission to read External Storage is granted //if yes execute method ChoosePicture(); and choose a pictrue from your device //if not ask for permission by copy_paste the code in the else brackets //in requestPermissions(myPermission,750); you can send any number other than 750 it doesnt matter \n",
    "reg_date": "2021-10-12T12:01:29.000Z"
  },
  {
    "id": 655,
    "keyword": null,
    "link": null,
    "title": " android studio breakpoint not working",
    "description": "<application android:icon=\"@drawable/icon\" android:label=\"@string/app_name\" android:debuggable=\"true\">\n",
    "reg_date": "2021-10-12T12:01:29.000Z"
  },
  {
    "id": 656,
    "keyword": null,
    "link": null,
    "title": " android studio button usage",
    "description": "//this for xml file  <Button           android:id=\"@+id/button\"           android:layout_width=\"wrap_content\"           android:layout_height=\"wrap_content\"           android:layout_centerHorizontal=\"true\"           android:layout_marginTop=\"109dp\"           android:text=\"hello\"    />   //this for java file  Button btn;   @Override       protected void onCreate(Bundle savedInstanceState) {           super.onCreate(savedInstanceState);           setContentView(R.layout.activity_main);     btn = (Button) findViewById(R.id.button);         btn.setOnClickListener(new View.OnClickListener() {               @Override               public void onClick(View view) {                  //do something             }           });      } \nButton b = findById();\nmycodes_Button.setOnTouchListener(new OnTouchListener() {     @Override     public boolean onTouch(View v, MotionEvent event) {         mycodes_Button.setPressed(true);         return true;     } }); \n",
    "reg_date": "2021-10-12T12:01:29.000Z"
  },
  {
    "id": 657,
    "keyword": null,
    "link": null,
    "title": " android studio centering textview in relativelayout",
    "description": "android:layout_centerHorizontal=\"true\"\n",
    "reg_date": "2021-10-12T12:01:29.000Z"
  },
  {
    "id": 658,
    "keyword": null,
    "link": null,
    "title": " android studio change menu title",
    "description": "//android studio inside activity java  getSupportActionBar().setTitle(\"Your Title\");\n",
    "reg_date": "2021-10-12T12:01:29.000Z"
  },
  {
    "id": 659,
    "keyword": null,
    "link": null,
    "title": " android studio change title bar text",
    "description": "getSupportActionBar().setTitle(\"Hello world App\"); \n//android studio inside activity java  getSupportActionBar().setTitle(\"Your Title\");\n",
    "reg_date": "2021-10-12T12:01:29.000Z"
  },
  {
    "id": 660,
    "keyword": null,
    "link": null,
    "title": " android studio check network connection",
    "description": "private Boolean isNetworkAvailable() {     ConnectivityManager connectivityManager            = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);     NetworkInfo activeNetworkInfo = connectivityManager.getActiveNetworkInfo();     return activeNetworkInfo != null && activeNetworkInfo.isConnectedOrConnecting(); }\n//beware that (contextname) is your activity name like if your working on //activity with name of FirstActivity then instead of (contextname) //write **FirstActivity.this**.getSystemService...  ConnectivityManager cm =         (ConnectivityManager)contextname.getSystemService(Context.CONNECTIVITY_SERVICE);  NetworkInfo activeNetwork = cm.getActiveNetworkInfo(); boolean isConnected = activeNetwork != null &&                       activeNetwork.isConnectedOrConnecting();  //in the end boolean Variable isConnected should hold the Status  //of your network Connection if isConnected is true then you have active network //otherwise if its false you have no internet Connection \n",
    "reg_date": "2021-10-12T12:01:29.000Z"
  },
  {
    "id": 661,
    "keyword": null,
    "link": null,
    "title": " android studio constraint layout proportional height",
    "description": "<android.support.constraint.ConstraintLayout     xmlns:android=\"http://schemas.android.com/apk/res/android\"     xmlns:app=\"http://schemas.android.com/apk/res-auto\"     android:layout_width=\"match_parent\"     android:layout_height=\"match_parent\">      <ImageView         android:id=\"@+id/img_icon\"         android:layout_width=\"0dp\"         android:layout_height=\"0dp\"         android:background=\"@color/dark_red\"         app:layout_constraintBottom_toBottomOf=\"parent\"         app:layout_constraintDimensionRatio=\"1:1\"         app:layout_constraintEnd_toEndOf=\"parent\"         app:layout_constraintStart_toStartOf=\"parent\"         app:layout_constraintTop_toTopOf=\"parent\"         app:layout_constraintWidth_percent=\"0.5\" />  </android.support.constraint.ConstraintLayout>\n",
    "reg_date": "2021-10-12T12:01:30.000Z"
  },
  {
    "id": 662,
    "keyword": null,
    "link": null,
    "title": " android studio create a Uri",
    "description": "Uri myUri = Uri.parse(\"http://www.google.com\");\n",
    "reg_date": "2021-10-12T12:01:30.000Z"
  },
  {
    "id": 663,
    "keyword": null,
    "link": null,
    "title": " android studio define array",
    "description": "private int[] memory = new int[3000]; \n",
    "reg_date": "2021-10-12T12:01:30.000Z"
  },
  {
    "id": 664,
    "keyword": null,
    "link": null,
    "title": " android studio disable button click",
    "description": "//Java  button.setEnabled(false);  //Kotlin with viewbinding binding.button.isEnabled = false  \n//Java myButton.setEnabled(true);\nmyButton.setEnabled(false); \n",
    "reg_date": "2021-10-12T12:01:30.000Z"
  },
  {
    "id": 665,
    "keyword": null,
    "link": null,
    "title": " android studio dp to px",
    "description": "// Converts 14 dip into its equivalent px float dip = 14f; Resources r = getResources(); float px = TypedValue.applyDimension(     TypedValue.COMPLEX_UNIT_DIP,     dip,     r.getDisplayMetrics() ); \n",
    "reg_date": "2021-10-12T12:01:30.000Z"
  },
  {
    "id": 666,
    "keyword": null,
    "link": null,
    "title": " android studio edittext set cursor position",
    "description": "// position: int myEditText.setSelection(position)\n",
    "reg_date": "2021-10-12T12:01:30.000Z"
  },
  {
    "id": 667,
    "keyword": null,
    "link": null,
    "title": " android studio float to int",
    "description": "int i = Math.round(f); // f a float\n",
    "reg_date": "2021-10-12T12:01:30.000Z"
  },
  {
    "id": 668,
    "keyword": null,
    "link": null,
    "title": " android studio fragment findviewbyid",
    "description": "View view = (View)getView().findViewById(R.id.view);\n",
    "reg_date": "2021-10-12T12:01:30.000Z"
  },
  {
    "id": 669,
    "keyword": null,
    "link": null,
    "title": " android studio get id name from view",
    "description": "//Don't get the ID name/string from the view ID.  //Instead use the  android:tag = \"String\" //in your xml   //Then in Java use  View.getTag()    //To still get the ID name/string from view ID. getResources().getResourceEntryName(View.getId())\n",
    "reg_date": "2021-10-12T12:01:30.000Z"
  },
  {
    "id": 670,
    "keyword": null,
    "link": null,
    "title": " android studio get time",
    "description": "String currentTime = new SimpleDateFormat(\"HH:mm:ss\", Locale.getDefault()).format(new Date());\n",
    "reg_date": "2021-10-12T12:01:30.000Z"
  },
  {
    "id": 671,
    "keyword": null,
    "link": null,
    "title": " android studio int ot string",
    "description": "String.valueOf(int)//Int to String ==>To print the int\nInteger.toString(int)\n",
    "reg_date": "2021-10-12T12:01:31.000Z"
  },
  {
    "id": 672,
    "keyword": null,
    "link": null,
    "title": " android studio intent usage",
    "description": "Intent i = new Intent(MainActivity.this, ActivityTwo.class); startActivity(i);\n",
    "reg_date": "2021-10-12T12:01:31.000Z"
  },
  {
    "id": 673,
    "keyword": null,
    "link": null,
    "title": " android studio invalid gradle jdk configuration found. open gradle settings use jdk from project structure",
    "description": "Delete these generated files:  .idea/gradle.xml .idea/workspace.xml then click try again to sync the project.\n",
    "reg_date": "2021-10-12T12:01:31.000Z"
  },
  {
    "id": 674,
    "keyword": null,
    "link": null,
    "title": " android studio java random number generator",
    "description": "final int min = 20; final int max = 80; final int random = new Random().nextInt((max - min) + 1) + min;\nfinal int random = new Random().nextInt(61) + 20; // [0, 60] + 20 => [20, 80]\n",
    "reg_date": "2021-10-12T12:01:31.000Z"
  },
  {
    "id": 675,
    "keyword": null,
    "link": null,
    "title": " android studio java toast",
    "description": "Toast myToast = Toast.makeText(this, \"I'm a toast!\", Toast.LENGTH_LONG); myToast.show();\nToast.makeText(Activity.this, \"I am Awesome!\", Toast.LENGTH_SHORT).show();\nToast toast = Toast.makeText(this, \"message\", Toast.LENGTH_LONG;);     toast.show();\nToast.makeText(this, \"Mmm Toasty\", Toast.LENGTH_LONG).show();\n",
    "reg_date": "2021-10-12T12:01:31.000Z"
  },
  {
    "id": 676,
    "keyword": null,
    "link": null,
    "title": " android studio linearlayout set margin",
    "description": "LinearLayout ll = new LinearLayout(this); ll.setOrientation(LinearLayout.VERTICAL);  LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(      LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT);  layoutParams.setMargins(30, 20, 30, 0);  Button okButton=new Button(this); okButton.setText(\"some text\"); ll.addView(okButton, layoutParams); \n",
    "reg_date": "2021-10-12T12:01:31.000Z"
  },
  {
    "id": 677,
    "keyword": null,
    "link": null,
    "title": " android studio log usage",
    "description": "Log.e(String, String); //(error) Log.w(String, String); //(warning) Log.i(String, String); //(information) Log.d(String, String); //(debug) Log.v(String, String); //(verbose) Log.println(Log.ASSERT,\"TAG\",\"Msg\") //You should choose assert from logcat \nimport android.util.Log; Log.d(\"tagString\", \"messageString\");\n",
    "reg_date": "2021-10-12T12:01:31.000Z"
  },
  {
    "id": 678,
    "keyword": null,
    "link": null,
    "title": " android studio lower case letters on a button",
    "description": "<Button             android:layout_width=\"match_parent\"             android:layout_height=\"wrap_content\"             android:id=\"@+id/btnLogin\"             android:text=\"Login for Chat\"                          //This is how to maintain lower case letters on android buttons :                         android:textAllCaps=\"false\"/>\n",
    "reg_date": "2021-10-12T12:01:31.000Z"
  },
  {
    "id": 679,
    "keyword": null,
    "link": null,
    "title": " android studio parse to int",
    "description": "public class JavaStringToIntExample {   public static void main (String[] args)   {     // String s = \"fred\";  // use this if you want to test the exception below     String s = \"100\";       try     {       // the String to int conversion happens here       int i = Integer.parseInt(s.trim());         // print out the value after the conversion       System.out.println(\"int i = \" + i);     }     catch (NumberFormatException nfe)     {       System.out.println(\"NumberFormatException: \" + nfe.getMessage());     }   } }\n",
    "reg_date": "2021-10-12T12:01:31.000Z"
  },
  {
    "id": 680,
    "keyword": null,
    "link": null,
    "title": " android studio print console",
    "description": "System.out.println(\"Your message\");\nLog.println(Log.DEBUG,\"debug\", \"Your message to print\");\n",
    "reg_date": "2021-10-12T12:01:31.000Z"
  },
  {
    "id": 681,
    "keyword": null,
    "link": null,
    "title": " android studio proportional width",
    "description": "<android.support.constraint.ConstraintLayout     xmlns:android=\"http://schemas.android.com/apk/res/android\"     xmlns:app=\"http://schemas.android.com/apk/res-auto\"     android:layout_width=\"match_parent\"     android:layout_height=\"match_parent\">      <ImageView         android:id=\"@+id/img_icon\"         android:layout_width=\"0dp\"         android:layout_height=\"0dp\"         android:background=\"@color/dark_red\"         app:layout_constraintBottom_toBottomOf=\"parent\"         app:layout_constraintDimensionRatio=\"1:1\"         app:layout_constraintEnd_toEndOf=\"parent\"         app:layout_constraintStart_toStartOf=\"parent\"         app:layout_constraintTop_toTopOf=\"parent\"         app:layout_constraintWidth_percent=\"0.5\" />  </android.support.constraint.ConstraintLayout>\n",
    "reg_date": "2021-10-12T12:01:32.000Z"
  },
  {
    "id": 682,
    "keyword": null,
    "link": null,
    "title": " android studio reg get float from numeric string",
    "description": "float f = Float.valueOf(\"25.5sp.\".replaceAll(\"[^\\\\d.]+|\\\\.(?!\\\\d)\", \"\")); // f = 25.5 \n",
    "reg_date": "2021-10-12T12:01:32.000Z"
  },
  {
    "id": 683,
    "keyword": null,
    "link": null,
    "title": " android studio remove notification bar",
    "description": "    protected void onResume() {         super.onResume();         View decorView = getWindow().getDecorView();         // Hide the status bar.         int uiOptions = View.SYSTEM_UI_FLAG_FULLSCREEN;         decorView.setSystemUiVisibility(uiOptions);     } \n",
    "reg_date": "2021-10-12T12:01:32.000Z"
  },
  {
    "id": 684,
    "keyword": null,
    "link": null,
    "title": " android studio set text of textview",
    "description": "// globally  TextView myAwesomeTextView = (TextView)findViewById(R.id.myAwesomeTextView);  //in your OnCreate() method myAwesomeTextView.setText(\"My Awesome Text\");\n",
    "reg_date": "2021-10-12T12:01:32.000Z"
  },
  {
    "id": 685,
    "keyword": null,
    "link": null,
    "title": " android studio setbackground",
    "description": "RelativeLayout layout =(RelativeLayout)findViewById(R.id.background); layout.setBackgroundResource(R.drawable.ready); \n",
    "reg_date": "2021-10-12T12:01:32.000Z"
  },
  {
    "id": 686,
    "keyword": null,
    "link": null,
    "title": " android studio start activity",
    "description": "Intent intent = new Intent(this, DisplayMessageActivity.class);         intent.putExtra(key:,value:);         startActivity(intent);\nstartActivity(new Intent(getApplicationContext(), newActivity.class));\n //Intent i = new Intent(getApplicationContext(), Second.class);                // startActivity(i);\n",
    "reg_date": "2021-10-12T12:01:32.000Z"
  },
  {
    "id": 687,
    "keyword": null,
    "link": null,
    "title": " android studio textbox change text",
    "description": "XML: <TextView         android:id=\"@+id/helloTxt\"         android:layout_width=\"wrap_content\"         android:layout_height=\"wrap_content\"/>          Java: TextView msg = findViewById(R.id.helloTxt); msg.setText(\"Hello\");\n",
    "reg_date": "2021-10-12T12:01:32.000Z"
  },
  {
    "id": 688,
    "keyword": null,
    "link": null,
    "title": " android studio timers",
    "description": "Timer() Creates a new timer.  Timer(boolean isDaemon) Creates a new timer whose associated thread may be specified to Thread#setDaemon.  Timer(String name) Creates a new timer whose associated thread has the specified name.  Timer(String name, boolean isDaemon) Creates a new timer whose associated thread has the specified name, and may be specified to Thread#setDaemon.\npublic Timer ()\n",
    "reg_date": "2021-10-12T12:01:32.000Z"
  },
  {
    "id": 689,
    "keyword": null,
    "link": null,
    "title": " android studio visibility",
    "description": "//An ImageButton for example: ImageButton btn = findViewById(R.id.viewID);  btn.setVisibility(View.INVISIBLE); // or... btn.setVisibility(View.GONE); // or... btn.setVisibility(View.VISIBLE);\n",
    "reg_date": "2021-10-12T12:01:32.000Z"
  },
  {
    "id": 690,
    "keyword": null,
    "link": null,
    "title": " android studio webview mailto",
    "description": "webView.setWebViewClient(new WebViewClient() {             @Override             public boolean shouldOverrideUrlLoading(WebView view, String url) {                 if( URLUtil.isNetworkUrl(url) ) {                     return false;                 }                  Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));                 startActivity( intent );                 return true;             }         });\n",
    "reg_date": "2021-10-12T12:01:32.000Z"
  },
  {
    "id": 691,
    "keyword": null,
    "link": null,
    "title": " android substring",
    "description": "String substr=mysourcestring.substring(startIndex); \nString substr=mysourcestring.substring(mysourcestring.indexOf(\"characterValue\")); \nString hallostring = \"hallo\"; String asubstring = hallostring.substring(0, 1);  \nString substr=mysourcestring.substring(mysourcestring.indexOf(\"characterValue\") + 1); \nString substr=mysourcestring.substring(startIndex,endIndex); \n",
    "reg_date": "2021-10-12T12:01:32.000Z"
  },
  {
    "id": 692,
    "keyword": null,
    "link": null,
    "title": " android switch on change",
    "description": "mySwitch.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {     public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {         // do something, the isChecked will be         // true if the switch is in the On position     } });\n",
    "reg_date": "2021-10-12T12:01:33.000Z"
  },
  {
    "id": 693,
    "keyword": null,
    "link": null,
    "title": " android temporal navigation",
    "description": "@Override public boolean onOptionsItemSelected(@NonNull MenuItem item) {   int itemId = item.getItemId();   if (itemId == android.R.id.home) {     // force up navigation to have the same behavior as temporal navigation     onBackPressed();     return true;   } else {     return super.onOptionsItemSelected(item);   } }\n",
    "reg_date": "2021-10-12T12:01:33.000Z"
  },
  {
    "id": 694,
    "keyword": null,
    "link": null,
    "title": " android time",
    "description": "import java.time.*; LocalDateTime datetime = LocalDateTime.now(); \n",
    "reg_date": "2021-10-12T12:01:33.000Z"
  },
  {
    "id": 695,
    "keyword": null,
    "link": null,
    "title": " android toolbar example",
    "description": "<?xml version=\"1.0\" encoding=\"utf-8\"?> <LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:background=\"@android:color/white\"> <android.support.v7.widget.Toolbar android:id=\"@+id/toolbar\" android:layout_width=\"match_parent\" android:layout_height=\"58dp\" android:background=\"?attr/colorPrimary\" android:minHeight=\"?attr/actionBarSize\" android:titleTextColor=\"#ffffff\">  </android.support.v7.widget.Toolbar> </LinearLayout>\n",
    "reg_date": "2021-10-12T12:01:33.000Z"
  },
  {
    "id": 696,
    "keyword": null,
    "link": null,
    "title": " android toolbar with menus",
    "description": "@Override public boolean onCreateOptionsMenu(Menu menu) {     getMenuInflater().inflate(R.menu.main_menu, menu);     return true; }\n",
    "reg_date": "2021-10-12T12:01:33.000Z"
  },
  {
    "id": 697,
    "keyword": null,
    "link": null,
    "title": " android transparent status bar",
    "description": " <!-- in themes --> <item name=\"android:windowTranslucentStatus\">true</item> <item name=\"android:windowTranslucentNavigation\">true</item>\ngetWindow().setFlags(     WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS,     WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS );\n",
    "reg_date": "2021-10-12T12:01:33.000Z"
  },
  {
    "id": 698,
    "keyword": null,
    "link": null,
    "title": " android up navigation",
    "description": "@Override public boolean onOptionsItemSelected(@NonNull MenuItem item) {   int itemId = item.getItemId();   if (itemId == android.R.id.home) {     // force up navigation to have the same behavior as temporal navigation     onBackPressed();     return true;   } else {     return super.onOptionsItemSelected(item);   } }\n",
    "reg_date": "2021-10-12T12:01:33.000Z"
  },
  {
    "id": 699,
    "keyword": null,
    "link": null,
    "title": " android vertical seekbar github",
    "description": "import android.content.Context; import android.graphics.Canvas; import android.util.AttributeSet; import android.view.MotionEvent; import android.widget.SeekBar;  public class VerticalSeekBar extends SeekBar {  \tprotected OnSeekBarChangeListener changeListener; \tprotected int x, y, z, w;  \tpublic VerticalSeekBar(Context context) { \t\tsuper(context); \t}  \tpublic VerticalSeekBar(Context context, AttributeSet attrs, int defStyle) { \t\tsuper(context, attrs, defStyle); \t}  \tpublic VerticalSeekBar(Context context, AttributeSet attrs) { \t\tsuper(context, attrs); \t}  \t@Override \tprotected synchronized void onSizeChanged(int w, int h, int oldw, int oldh) { \t\tsuper.onSizeChanged(h, w, oldh, oldw);  \t\tthis.x = w; \t\tthis.y = h; \t\tthis.z = oldw; \t\tthis.w = oldh; \t}  \t@Override \tprotected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) { \t\tsuper.onMeasure(heightMeasureSpec, widthMeasureSpec); \t\tsetMeasuredDimension(getMeasuredHeight(), getMeasuredWidth()); \t}  \t@Override \tprotected void onDraw(Canvas c) { \t\tc.rotate(-90); \t\tc.translate(-getHeight(), 0); \t\tsuper.onDraw(c); \t}  \t@Override \tpublic boolean onTouchEvent(MotionEvent event) { \t\tif (!isEnabled()) { \t\t\treturn false; \t\t}  \t\tswitch (event.getAction()) { \t\tcase MotionEvent.ACTION_DOWN: \t\t\tsetSelected(true); \t\t\tsetPressed(true); \t\t\tif (changeListener != null) \t\t\t\tchangeListener.onStartTrackingTouch(this); \t\t\tbreak; \t\tcase MotionEvent.ACTION_UP: \t\t\tsetSelected(false); \t\t\tsetPressed(false); \t\t\tif (changeListener != null) \t\t\t\tchangeListener.onStopTrackingTouch(this); \t\t\tbreak; \t\tcase MotionEvent.ACTION_MOVE: \t\t\tint progress = getMax() \t\t\t\t\t- (int) (getMax() * event.getY() / getHeight()); \t\t\tsetProgress(progress); \t\t\tonSizeChanged(getWidth(), getHeight(), 0, 0); \t\t\tif (changeListener != null) \t\t\t\tchangeListener.onProgressChanged(this, progress, true); \t\t\tbreak;  \t\tcase MotionEvent.ACTION_CANCEL: \t\t\tbreak; \t\t} \t\treturn true; \t}  \t@Override \tpublic synchronized void setOnSeekBarChangeListener( \t\t\tOnSeekBarChangeListener listener) { \t\tchangeListener = listener; \t}  \t@Override \tpublic synchronized void setProgress(int progress) { \t\tif (progress >= 0) \t\t\tsuper.setProgress(progress);  \t\telse \t\t\tsuper.setProgress(0); \t\tonSizeChanged(x, y, z, w); \t\tif (changeListener != null) \t\t\tchangeListener.onProgressChanged(this, progress, false); \t} }\nimport android.content.Context import android.graphics.Canvas import android.util.AttributeSet import android.view.MotionEvent   class VerticalSeekBar : androidx.appcompat.widget.AppCompatSeekBar {     private var changeListener: OnSeekBarChangeListener? = null     private var x = 0     private var y = 0     private var z = 0     private var w = 0      constructor(context: Context) : super(context) {}     constructor(context: Context, attrs: AttributeSet, defStyle: Int) : super(         context,         attrs,         defStyle     ) {     }      constructor(context: Context, attrs: AttributeSet) : super(context, attrs) {}      @Synchronized     override fun onSizeChanged(w: Int, h: Int, oldw: Int, oldh: Int) {         super.onSizeChanged(h, w, oldh, oldw)         x = w         y = h         z = oldw         this.w = oldh     }      override fun onMeasure(widthMeasureSpec: Int, heightMeasureSpec: Int) {         super.onMeasure(heightMeasureSpec, widthMeasureSpec)         setMeasuredDimension(measuredHeight, measuredWidth)     }      override fun onDraw(c: Canvas) {         c.rotate(-90f)         c.translate(-height.toFloat(), 0f)         super.onDraw(c)     }      override fun onTouchEvent(event: MotionEvent): Boolean {         if (!isEnabled) {             return false         }         when (event.action) {             MotionEvent.ACTION_DOWN -> {                 isSelected = true                 isPressed = true                 if (changeListener != null) changeListener!!.onStartTrackingTouch(this)             }             MotionEvent.ACTION_UP -> {                 isSelected = false                 isPressed = false                 if (changeListener != null) changeListener!!.onStopTrackingTouch(this)             }             MotionEvent.ACTION_MOVE -> {                 val progress = (max                         - (max * event.y / height).toInt())                 setProgress(progress)                 onSizeChanged(width, height, 0, 0)                 if (changeListener != null) changeListener!!.onProgressChanged(this, progress, true)             }             MotionEvent.ACTION_CANCEL -> {             }         }         return true     }      @Synchronized     override fun setOnSeekBarChangeListener(         listener: OnSeekBarChangeListener     ) {         changeListener = listener     }      @Synchronized     override fun setProgress(progress: Int) {         if (progress >= 0) super.setProgress(progress) else super.setProgress(0)         onSizeChanged(x, y, z, w)         if (changeListener != null) changeListener!!.onProgressChanged(this, progress, false)     } }\n",
    "reg_date": "2021-10-12T12:01:33.000Z"
  },
  {
    "id": 700,
    "keyword": null,
    "link": null,
    "title": " android vibrate device",
    "description": "import android.os.Vibrator; ... Vibrator v = (Vibrator) getSystemService(Context.VIBRATOR_SERVICE); // Vibrate for 500 milliseconds if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {     v.vibrate(VibrationEffect.createOneShot(500, VibrationEffect.DEFAULT_AMPLITUDE)); } else {     //deprecated in API 26      v.vibrate(500); }\n",
    "reg_date": "2021-10-12T12:01:33.000Z"
  },
  {
    "id": 701,
    "keyword": null,
    "link": null,
    "title": " android view to bitmap",
    "description": "public static Bitmap loadBitmapFromView(View v) {     Bitmap b = Bitmap.createBitmap( v.getLayoutParams().width, v.getLayoutParams().height, Bitmap.Config.ARGB_8888);                     Canvas c = new Canvas(b);     v.layout(v.getLeft(), v.getTop(), v.getRight(), v.getBottom());     v.draw(c);     return b; }\n",
    "reg_date": "2021-10-12T12:01:34.000Z"
  },
  {
    "id": 702,
    "keyword": null,
    "link": null,
    "title": " android volley",
    "description": "implementation 'com.android.volley:volley:1.2.1'\ndependencies {     def version = '1.1.1'     implementation \"com.android.volley:volley:$version\" } \n//Android\n",
    "reg_date": "2021-10-12T12:01:34.000Z"
  },
  {
    "id": 703,
    "keyword": null,
    "link": null,
    "title": " android xml hide",
    "description": "android:visibility=\"gone\"\n",
    "reg_date": "2021-10-12T12:01:34.000Z"
  },
  {
    "id": 704,
    "keyword": null,
    "link": null,
    "title": " android zoom animation",
    "description": "<?xml version=\"1.0\" encoding=\"utf-8\"?> <set xmlns:android=\"http://schemas.android.com/apk/res/android\" android:fillAfter=\"true\">     <scale     android:duration=\"1000\"     android:fromXScale=\"1.0\"     android:fromYScale=\"1.0\"     android:pivotX=\"50%\"     android:pivotY=\"50%\"     android:toXScale=\"0.5\"     android:toYScale=\"0.5\"/> </set> \n<?xml version=\"1.0\" encoding=\"utf-8\"?> <set xmlns:android=\"http://schemas.android.com/apk/res/android\" android:fillAfter=\"true\">     <scale     android:duration=\"1000\"     android:fromXScale=\"1\"     android:fromYScale=\"1\"     android:pivotX=\"50%\"     android:pivotY=\"50%\"     android:toXScale=\"3\"     android:toYScale=\"3\"/>  </set> \n",
    "reg_date": "2021-10-12T12:01:34.000Z"
  },
  {
    "id": 705,
    "keyword": null,
    "link": null,
    "title": " androidx cardview",
    "description": "dependencies {     implementation \"androidx.cardview:cardview:1.0.0\" }\nimplementation \"androidx.cardview:cardview:1.0.0\"\n",
    "reg_date": "2021-10-12T12:01:34.000Z"
  },
  {
    "id": 706,
    "keyword": null,
    "link": null,
    "title": " androidx recyclerview dependency",
    "description": "dependencies {     implementation \"androidx.recyclerview:recyclerview:1.1.0\"     // For control over item selection of both touch and mouse driven selection     implementation \"androidx.recyclerview:recyclerview-selection:1.1.0-rc01\" }\n implementation \"androidx.recyclerview:recyclerview:1.1.0\"  implementation \"androidx.recyclerview:recyclerview-selection:1.1.0-rc03\"\nimplementation 'com.android.support:recyclerview-v7:23.1.1'\nimplementation \"androidx.recyclerview:recyclerview:1.1.0\"     // For control over item selection of both touch and mouse driven selection     implementation \"androidx.recyclerview:recyclerview-selection:1.1.0-rc01\"\ndependencies {     implementation(\"androidx.recyclerview:recyclerview:1.2.1\")     // For control over item selection of both touch and mouse driven selection     implementation(\"androidx.recyclerview:recyclerview-selection:1.1.0\") }\n",
    "reg_date": "2021-10-12T12:01:34.000Z"
  },
  {
    "id": 707,
    "keyword": null,
    "link": null,
    "title": " animation in wave line chart android studio",
    "description": "lineDataSet.setMode(LineDataSet.Mode.CUBIC_BEZIER); \n",
    "reg_date": "2021-10-12T12:01:34.000Z"
  },
  {
    "id": 708,
    "keyword": null,
    "link": null,
    "title": " animationtimer javafx",
    "description": "static int speed x ; // prefered speed to start with = 5;  new AnimationTimer(){   long lastTick = 0;   @Override   public void handle(long now){     if(lastTick == 0 ){       frame();       lastTick = now ;       return;     }     if(now - lastTick > 1000000000 / speed){       frame();       lastTick = now;     }          }   }.start();\n",
    "reg_date": "2021-10-12T12:01:34.000Z"
  },
  {
    "id": 709,
    "keyword": null,
    "link": null,
    "title": " ansi colors",
    "description": "public class ConsoleColors {     // Reset     public static final String RESET = \"\\033[0m\";  // Text Reset      // Regular Colors     public static final String BLACK = \"\\033[0;30m\";   // BLACK     public static final String RED = \"\\033[0;31m\";     // RED     public static final String GREEN = \"\\033[0;32m\";   // GREEN     public static final String YELLOW = \"\\033[0;33m\";  // YELLOW     public static final String BLUE = \"\\033[0;34m\";    // BLUE     public static final String PURPLE = \"\\033[0;35m\";  // PURPLE     public static final String CYAN = \"\\033[0;36m\";    // CYAN     public static final String WHITE = \"\\033[0;37m\";   // WHITE      // Bold     public static final String BLACK_BOLD = \"\\033[1;30m\";  // BLACK     public static final String RED_BOLD = \"\\033[1;31m\";    // RED     public static final String GREEN_BOLD = \"\\033[1;32m\";  // GREEN     public static final String YELLOW_BOLD = \"\\033[1;33m\"; // YELLOW     public static final String BLUE_BOLD = \"\\033[1;34m\";   // BLUE     public static final String PURPLE_BOLD = \"\\033[1;35m\"; // PURPLE     public static final String CYAN_BOLD = \"\\033[1;36m\";   // CYAN     public static final String WHITE_BOLD = \"\\033[1;37m\";  // WHITE      // Underline     public static final String BLACK_UNDERLINED = \"\\033[4;30m\";  // BLACK     public static final String RED_UNDERLINED = \"\\033[4;31m\";    // RED     public static final String GREEN_UNDERLINED = \"\\033[4;32m\";  // GREEN     public static final String YELLOW_UNDERLINED = \"\\033[4;33m\"; // YELLOW     public static final String BLUE_UNDERLINED = \"\\033[4;34m\";   // BLUE     public static final String PURPLE_UNDERLINED = \"\\033[4;35m\"; // PURPLE     public static final String CYAN_UNDERLINED = \"\\033[4;36m\";   // CYAN     public static final String WHITE_UNDERLINED = \"\\033[4;37m\";  // WHITE      // Background     public static final String BLACK_BACKGROUND = \"\\033[40m\";  // BLACK     public static final String RED_BACKGROUND = \"\\033[41m\";    // RED     public static final String GREEN_BACKGROUND = \"\\033[42m\";  // GREEN     public static final String YELLOW_BACKGROUND = \"\\033[43m\"; // YELLOW     public static final String BLUE_BACKGROUND = \"\\033[44m\";   // BLUE     public static final String PURPLE_BACKGROUND = \"\\033[45m\"; // PURPLE     public static final String CYAN_BACKGROUND = \"\\033[46m\";   // CYAN     public static final String WHITE_BACKGROUND = \"\\033[47m\";  // WHITE      // High Intensity     public static final String BLACK_BRIGHT = \"\\033[0;90m\";  // BLACK     public static final String RED_BRIGHT = \"\\033[0;91m\";    // RED     public static final String GREEN_BRIGHT = \"\\033[0;92m\";  // GREEN     public static final String YELLOW_BRIGHT = \"\\033[0;93m\"; // YELLOW     public static final String BLUE_BRIGHT = \"\\033[0;94m\";   // BLUE     public static final String PURPLE_BRIGHT = \"\\033[0;95m\"; // PURPLE     public static final String CYAN_BRIGHT = \"\\033[0;96m\";   // CYAN     public static final String WHITE_BRIGHT = \"\\033[0;97m\";  // WHITE      // Bold High Intensity     public static final String BLACK_BOLD_BRIGHT = \"\\033[1;90m\"; // BLACK     public static final String RED_BOLD_BRIGHT = \"\\033[1;91m\";   // RED     public static final String GREEN_BOLD_BRIGHT = \"\\033[1;92m\"; // GREEN     public static final String YELLOW_BOLD_BRIGHT = \"\\033[1;93m\";// YELLOW     public static final String BLUE_BOLD_BRIGHT = \"\\033[1;94m\";  // BLUE     public static final String PURPLE_BOLD_BRIGHT = \"\\033[1;95m\";// PURPLE     public static final String CYAN_BOLD_BRIGHT = \"\\033[1;96m\";  // CYAN     public static final String WHITE_BOLD_BRIGHT = \"\\033[1;97m\"; // WHITE      // High Intensity backgrounds     public static final String BLACK_BACKGROUND_BRIGHT = \"\\033[0;100m\";// BLACK     public static final String RED_BACKGROUND_BRIGHT = \"\\033[0;101m\";// RED     public static final String GREEN_BACKGROUND_BRIGHT = \"\\033[0;102m\";// GREEN     public static final String YELLOW_BACKGROUND_BRIGHT = \"\\033[0;103m\";// YELLOW     public static final String BLUE_BACKGROUND_BRIGHT = \"\\033[0;104m\";// BLUE     public static final String PURPLE_BACKGROUND_BRIGHT = \"\\033[0;105m\"; // PURPLE     public static final String CYAN_BACKGROUND_BRIGHT = \"\\033[0;106m\";  // CYAN     public static final String WHITE_BACKGROUND_BRIGHT = \"\\033[0;107m\";   // WHITE }\nBlack            \\e[0;30m Blue             \\e[0;34m Green            \\e[0;32m Cyan             \\e[0;36m Red              \\e[0;31m Purple           \\e[0;35m Brown            \\e[0;33m Gray             \\e[0;37m Dark Gray        \\e[1;30m Light Blue       \\e[1;34m Light Green      \\e[1;32m Light Cyan       \\e[1;36m Light Red        \\e[1;31m Light Purple     \\e[1;35m Yellow           \\e[1;33m White            \\e[1;37m \n# Red  print(u\"\\u001b[31mHello World\")  # Black: \\u001b[30m # Red: \\u001b[31m # Green: \\u001b[32m # Yellow: \\u001b[33m # Blue: \\u001b[34m # Magenta: \\u001b[35m # Cyan: \\u001b[36m # White: \\u001b[37m # Reset: \\u001b[0m \nenum Color {     //Color end string, color reset     RESET(\"\\033[0m\"),      // Regular Colors. Normal color, no bold, background color etc.     BLACK(\"\\033[0;30m\"),    // BLACK     RED(\"\\033[0;31m\"),      // RED     GREEN(\"\\033[0;32m\"),    // GREEN     YELLOW(\"\\033[0;33m\"),   // YELLOW     BLUE(\"\\033[0;34m\"),     // BLUE     MAGENTA(\"\\033[0;35m\"),  // MAGENTA     CYAN(\"\\033[0;36m\"),     // CYAN     WHITE(\"\\033[0;37m\"),    // WHITE      // Bold     BLACK_BOLD(\"\\033[1;30m\"),   // BLACK     RED_BOLD(\"\\033[1;31m\"),     // RED     GREEN_BOLD(\"\\033[1;32m\"),   // GREEN     YELLOW_BOLD(\"\\033[1;33m\"),  // YELLOW     BLUE_BOLD(\"\\033[1;34m\"),    // BLUE     MAGENTA_BOLD(\"\\033[1;35m\"), // MAGENTA     CYAN_BOLD(\"\\033[1;36m\"),    // CYAN     WHITE_BOLD(\"\\033[1;37m\"),   // WHITE      // Underline     BLACK_UNDERLINED(\"\\033[4;30m\"),     // BLACK     RED_UNDERLINED(\"\\033[4;31m\"),       // RED     GREEN_UNDERLINED(\"\\033[4;32m\"),     // GREEN     YELLOW_UNDERLINED(\"\\033[4;33m\"),    // YELLOW     BLUE_UNDERLINED(\"\\033[4;34m\"),      // BLUE     MAGENTA_UNDERLINED(\"\\033[4;35m\"),   // MAGENTA     CYAN_UNDERLINED(\"\\033[4;36m\"),      // CYAN     WHITE_UNDERLINED(\"\\033[4;37m\"),     // WHITE      // Background     BLACK_BACKGROUND(\"\\033[40m\"),   // BLACK     RED_BACKGROUND(\"\\033[41m\"),     // RED     GREEN_BACKGROUND(\"\\033[42m\"),   // GREEN     YELLOW_BACKGROUND(\"\\033[43m\"),  // YELLOW     BLUE_BACKGROUND(\"\\033[44m\"),    // BLUE     MAGENTA_BACKGROUND(\"\\033[45m\"), // MAGENTA     CYAN_BACKGROUND(\"\\033[46m\"),    // CYAN     WHITE_BACKGROUND(\"\\033[47m\"),   // WHITE      // High Intensity     BLACK_BRIGHT(\"\\033[0;90m\"),     // BLACK     RED_BRIGHT(\"\\033[0;91m\"),       // RED     GREEN_BRIGHT(\"\\033[0;92m\"),     // GREEN     YELLOW_BRIGHT(\"\\033[0;93m\"),    // YELLOW     BLUE_BRIGHT(\"\\033[0;94m\"),      // BLUE     MAGENTA_BRIGHT(\"\\033[0;95m\"),   // MAGENTA     CYAN_BRIGHT(\"\\033[0;96m\"),      // CYAN     WHITE_BRIGHT(\"\\033[0;97m\"),     // WHITE      // Bold High Intensity     BLACK_BOLD_BRIGHT(\"\\033[1;90m\"),    // BLACK     RED_BOLD_BRIGHT(\"\\033[1;91m\"),      // RED     GREEN_BOLD_BRIGHT(\"\\033[1;92m\"),    // GREEN     YELLOW_BOLD_BRIGHT(\"\\033[1;93m\"),   // YELLOW     BLUE_BOLD_BRIGHT(\"\\033[1;94m\"),     // BLUE     MAGENTA_BOLD_BRIGHT(\"\\033[1;95m\"),  // MAGENTA     CYAN_BOLD_BRIGHT(\"\\033[1;96m\"),     // CYAN     WHITE_BOLD_BRIGHT(\"\\033[1;97m\"),    // WHITE      // High Intensity backgrounds     BLACK_BACKGROUND_BRIGHT(\"\\033[0;100m\"),     // BLACK     RED_BACKGROUND_BRIGHT(\"\\033[0;101m\"),       // RED     GREEN_BACKGROUND_BRIGHT(\"\\033[0;102m\"),     // GREEN     YELLOW_BACKGROUND_BRIGHT(\"\\033[0;103m\"),    // YELLOW     BLUE_BACKGROUND_BRIGHT(\"\\033[0;104m\"),      // BLUE     MAGENTA_BACKGROUND_BRIGHT(\"\\033[0;105m\"),   // MAGENTA     CYAN_BACKGROUND_BRIGHT(\"\\033[0;106m\"),      // CYAN     WHITE_BACKGROUND_BRIGHT(\"\\033[0;107m\");     // WHITE      private final String code;      Color(String code) {         this.code = code;     }      @Override     public String toString() {         return code;     } }\n",
    "reg_date": "2021-10-12T12:01:34.000Z"
  },
  {
    "id": 710,
    "keyword": null,
    "link": null,
    "title": " apache csv get headers",
    "description": "CSVFormat csvFileFormat = CSVFormat.DEFAULT.withHeader(FILE_HEADER_MAPPING); FileReader fileReader = new FileReader(\"file\"); CSVParser csvFileParser = new CSVParser(fileReader, csvFileFormat); List csvRecords = csvFileParser.getRecords();\n",
    "reg_date": "2021-10-12T12:01:34.000Z"
  },
  {
    "id": 711,
    "keyword": null,
    "link": null,
    "title": " append a character to string java",
    "description": "1. String otherString = \"helen\" + character;  2. otherString +=  character;\n",
    "reg_date": "2021-10-12T12:01:35.000Z"
  },
  {
    "id": 712,
    "keyword": null,
    "link": null,
    "title": " append to file in java",
    "description": " File file = new File(\"append.txt\"); FileWriter fr = new FileWriter(file, true); // parameter 'true' is for append mode fr.write(\"data\"); fr.close(); \n",
    "reg_date": "2021-10-12T12:01:35.000Z"
  },
  {
    "id": 713,
    "keyword": null,
    "link": null,
    "title": " applicationcontext.xml",
    "description": "<?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns=\"http://www.springframework.org/schema/beans\"     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context=\"http://www.springframework.org/schema/context\"     xsi:schemaLocation=\"http://www.springframework.org/schema/beans      http://www.springframework.org/schema/beans/spring-beans.xsd      http://www.springframework.org/schema/context      http://www.springframework.org/schema/context/spring-context.xsd\">           <bean id=\"operations\"    class=\"com.howtodoinjava.spring.beans.Operations\"></bean>     <bean id=\"employee\"  class=\"com.howtodoinjava.spring.beans.Employee\"></bean>     <bean id=\"department\"    class=\"com.howtodoinjava.spring.beans.Department\"></bean>       </beans>  \n",
    "reg_date": "2021-10-12T12:01:35.000Z"
  },
  {
    "id": 714,
    "keyword": null,
    "link": null,
    "title": " applying insertion sort on string in java",
    "description": "public static void insertion(String[] ans){\t\t\t//Main Methord \t\tfor (int i = 0; i < ans.length-1; i++) {             for (int j = i + 1; j > 0; j--) {                 if (ans[j].compareTo(ans[j - 1]) < 0) {                     String temp = ans[j];                     ans[j] = ans[j - 1];                     ans[j - 1] = temp;                 }             }         }   } public static void main(String[] args){\t\t//driver code   \tString[] ans = {\"xa\",\"ax\"}; \tinsertion(ans); }\n",
    "reg_date": "2021-10-12T12:01:35.000Z"
  },
  {
    "id": 715,
    "keyword": null,
    "link": null,
    "title": " apt install java 11",
    "description": "sudo apt-get update && sudo apt-get upgrade sudo apt-get install default-jdk\nsudo apt-get update  sudo apt-get install oracle-java11-installer-local\n",
    "reg_date": "2021-10-12T12:01:35.000Z"
  },
  {
    "id": 716,
    "keyword": null,
    "link": null,
    "title": " area and perimeter of trapezium in java",
    "description": "import java.util.*; public class AreaAndPerimeterOfTrapezium {    public static void main(String[] args)    {       float a = 6;       float b = 14;       float c = 10;       float d = 5;       float h = 21;       float area = (float) (0.5 * (a + b) * h);       // a, b, c and d are sides of trapezium       float perimeter = a + b + c + d;       System.out.println(\"area of trapezium is: \" + area);       System.out.println(\"perimeter of trapezium is: \" + perimeter);    } }\n",
    "reg_date": "2021-10-12T12:01:35.000Z"
  },
  {
    "id": 717,
    "keyword": null,
    "link": null,
    "title": " area of circle in java",
    "description": "import java.util.Scanner; public class CalculateAreaOfCircle {    public static void main(String[] args)    {       double radius;       double pi = 3.1415, area;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter radius of circle: \");       radius = sc.nextDouble();       area = pi * radius * radius;       System.out.println(\"Area of circle: \" + area);       sc.close();    } }\nimport java.util.Scanner; public class AreaOfCircle {    public static void main(String args[]){       int radius;       double area;       Scanner sc = new Scanner(System.in);       System.out.println(\"Enter the radius of the circle ::\");       radius = sc.nextInt();       area = (radius*radius)*Math.PI;       System.out.println(\"Area of the circle is ::\"+area);    } }\npublic class scratch {     public static void main(String[] args) {         JFrame window = new JFrame();         window.setTitle(\"Christmas Tree\");         window.setSize(700, 600);         window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);         window.setVisible(true);         DrawingComponent DC = new DrawingComponent();         window.add(DC);     } } class DrawingComponent extends JComponent{       public void paint(Graphics graph0){         Graphics2D graph = (Graphics2D) graph0;         Ellipse2D.Double circle = new Ellipse.Double(5, 5, 25, 25);         graph.fill(circle);       } }\nimport java.util.Scanner;  public class Main {      public static void main(String[] args) {          final  float PI = 3.14f;         Scanner scanner = new Scanner(System.in);          System.out.print(\"Enter radius of circle: \");         int radius = scanner.nextInt();          double areaOfCircle = PI * Math.pow(radius,2);          System.out.printf(\" Area of circle of circle is %.2f \",areaOfCircle);     } } \nimport java.util.Scanner;  public class Main {     public static void main(String[] args){         double R,A;         Scanner sc = new Scanner(System.in);         R = sc.nextDouble();         A = 3.14159 * R * R;         System.out.printf(\"A=%.4f\\n\",  A);    } }\n",
    "reg_date": "2021-10-12T12:01:35.000Z"
  },
  {
    "id": 718,
    "keyword": null,
    "link": null,
    "title": " area of equilateral triangle in java",
    "description": "import java.util.Scanner; public class AreaOfEquilateral {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter the side of equilateral triangle: \");       double side = sc.nextDouble();       double area = (Math.sqrt(3)/4) * (side * side);       System.out.println(\"Area of equilateral triangle is: \" + area);       sc.close();    } }\nimport java.util.Scanner;  public class Main {      public static void main(String[] args) {          // area of equilateral triangle          Scanner scanner = new Scanner(System.in);          System.out.print(\"Enter the equal length: \");         float equalLength = scanner.nextFloat();          double area = (Math.sqrt(3) / 4) * Math.pow(equalLength,2);          System.out.printf(\"The area is %.2f\",area);     } }\n",
    "reg_date": "2021-10-12T12:01:35.000Z"
  },
  {
    "id": 719,
    "keyword": null,
    "link": null,
    "title": " area of octagon in java",
    "description": "import java.util.Scanner; public class AreaOfOctagon {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter length of side of octagon: \");       int side = sc.nextInt();       float area = (float) (2 * (1 + Math.sqrt(2)) * side * side);       System.out.println(\"Area of octagon is: \" + area);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:01:35.000Z"
  },
  {
    "id": 720,
    "keyword": null,
    "link": null,
    "title": " area of parallelogram in java",
    "description": "import java.util.Scanner; public class AreaOfParallelogram {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter base of parallelogram: \");       double base = sc.nextDouble();       System.out.println(\"Please enter height of parallelogram: \");       double height = sc.nextDouble();       double area = base * height;       System.out.println(\"Area of parallelogram is: \" + area);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:01:35.000Z"
  },
  {
    "id": 721,
    "keyword": null,
    "link": null,
    "title": " area of rhombus in java",
    "description": "import java.util.Scanner; public class AreaOfRhombus {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter length of diagonal 1: \");       double diagonal1 = sc.nextDouble();       System.out.println(\"Please enter length of diagonal 2: \");       double diagonal2 = sc.nextDouble();       double area = (diagonal1 * diagonal2) / 2;       System.out.println(\"Area of Rhombus is: \" + area);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:01:36.000Z"
  },
  {
    "id": 722,
    "keyword": null,
    "link": null,
    "title": " arithmetic exception in java",
    "description": "It occurs when there is an error  in the aritchmatic logic. For  Example we can't divide int to 0. In this case it will throw arithmatic exception and we can handle with try catch block.(unchecked exception)\nclass Example1 {    public static void main(String args[])    {       try{          int num1=30, num2=0;          int output=num1/num2;          System.out.println (\"Result: \"+output);       }       catch(ArithmeticException e){          System.out.println (\"You Shouldn't divide a number by zero\");       }    } }\n",
    "reg_date": "2021-10-12T12:01:36.000Z"
  },
  {
    "id": 723,
    "keyword": null,
    "link": null,
    "title": " armstrong number in java",
    "description": "// Check whether a given number is armstrong number or not import java.util.Scanner; public class ArmstrongNumber {    public static void main(String[] args)    {       int x, y, z = 0, temp;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter a number: \");       x = sc.nextInt();       temp = x;       while(x > 0)       {          y = x % 10;          x = x / 10;          z = z + (y * y * y);       }       if(temp == z)       {          System.out.println(temp + \" is an Armstrong Number.\");       }       else       {          System.out.println(temp + \" is not an Armstrong Number.\");       }       sc.close();    } }\n// 4 digit armstrong number in java public class ArmstrongNumberDemo {    public static void main(String[] args)     {       int num = 9474, realNumber, remainder, output = 0, a = 0;       realNumber = num;       for(;realNumber != 0; realNumber /= 10, ++a);       realNumber = num;       for(;realNumber != 0; realNumber /= 10)       {          remainder = realNumber % 10;          output += Math.pow(remainder, a);       }       if(output == num)       {          System.out.println(num + \" is an Armstrong number.\");       }       else       {          System.out.println(num + \" is not an Armstrong number.\");       }    } }\n int c=0,a,temp;       int n=153;//It is the number to check armstrong       temp=n;       while(n>0)       {       a=n\u0010;       n=n/10;       c=c+(a*a*a);       }       if(temp==c)       System.out.println(\"armstrong number\");        else           System.out.println(\"Not armstrong number\");   \nimport java.util.Scanner;  public class Armstrong {   public static void main(String args[])   {     int num,temp,c=0;   \tScanner in=new Scanner(System.in);   \tnum=in.nextInt();   \ttemp=num;   \twhile(num!=0)   \t{     \tint d=num\u0010; //extracting last digit     \tc+=d*d*d;     \tnum/=10; // removing last digit   \t}   \tif(temp==c)   \t{     \tSystem.out.println(\"Number is Armstrong\");   \t}   \telse   \t\tSystem.out.println(\"Number is not Armstrong\");   } }\nimport java.util.Scanner;  /*  *@author: Mayank Manoj Raicha  * Armstrong Number in Java: A positive number is called armstrong number if it is equal to the sum of cubes of its digits   * for example 0, 1, 153, 370, 371, 407 etc.  * 153 = (1*1*1)+(5*5*5)+(3*3*3)  = 1+125+27 = 153  */ public class ArmstrongNumberExample {  \tpublic static void main(String[] args) { \t\t \t\tint sum = 0; \t\t \t\tScanner in = new Scanner(System.in); \t\tSystem.out.println(\"Enter the number: \"); \t\tint input = in.nextInt(); //1634 \t\tString val = String.valueOf(input); \t\tchar[] charArray = val.toCharArray();  //charArray[0] = \"1\" , charArray[1] = \"6\", charArray[2] = \"3\", charArray[3] = \"4\" \t\tint[] numArray = new int[charArray.length]; //Declaring this array to store the result of getPowerOfNumber() method for each digit. \t\t \t\t//for each char element calculate the power of number and store it in the \"cubedNumArray\" array. \t\tfor(int i=0; i<charArray.length; i++) { \t\t\tnumArray[i] = getPowerOfNumber(Integer.parseInt(String.valueOf(charArray[i])), charArray.length); \t\t\tsum = sum + numArray[i]; \t\t} \t\t       //Compare if the resulting sum is equal to the original input. \t\tif(sum == input) { \t\t\tSystem.out.println(\"Entered number is an Armstrong number.\"); \t\t}else { \t\t\tSystem.out.println(\"Entered number is NOT an Armstrong number.\"); \t\t} \t\t \t\tin.close(); \t}    \t//Calculate & Return the value of the first argument raised to the power of the second argument \tpublic static int getPowerOfNumber(int num, int count) { \t\treturn (int) Math.pow(num, count); \t} }\n",
    "reg_date": "2021-10-12T12:01:36.000Z"
  },
  {
    "id": 724,
    "keyword": null,
    "link": null,
    "title": " array ausgeben java",
    "description": "int[] zahlen = new int[] {1, 2, 3, 4, 5, 6, 7, 8, 9, 0};        for(int i = 0; i < zahlen.length; i++) {    System.out.println(zahlen[i]); } \n",
    "reg_date": "2021-10-12T12:01:36.000Z"
  },
  {
    "id": 725,
    "keyword": null,
    "link": null,
    "title": " array contains java",
    "description": "import java.util.Arrays;  // For String String[] array = {\"Boto\", \"Nesto\", \"Lepta\"}; String toSearch = \"Nesto\";  // Inline if (Arrays.toString(array).contains(toSearch)) { \t// Do something if it's found }  // Multi line String strArray = Array.toString(array); if (strArray.contains(toSearch)) { \t// Do your thing }  // Different elements int[] numbers = {1, 2, 3, 4, 5, 6, 7, 8, 9, 0}; int number = 5;  String checker = Arrays.toString(numbers);  // The toString of int in some cases can happen without explicitly saying so // In this example we convert both if (checker.contains(Integer.toString(number)) { \t// Found.      } \npackage com.mkyong.core;  import java.util.Arrays; import java.util.List;  public class StringArrayExample1 {      public static void main(String[] args) {          String[] alphabet = new String[]{\"A\", \"B\", \"C\"};          // Convert String Array to List         List<String> list = Arrays.asList(alphabet);                  if(list.contains(\"A\")){             System.out.println(\"Hello A\");         }      }  } Copy\nArrays.asList(yourArray).contains(yourValue)\nStringArrayExample1.java  package com.mkyong.core;  import java.util.Arrays; import java.util.List;  public class StringArrayExample1 {      public static void main(String[] args) {          String[] alphabet = new String[]{\"A\", \"B\", \"C\"};          // Convert String Array to List         List<String> list = Arrays.asList(alphabet);                  if(list.contains(\"A\")){             System.out.println(\"Hello A\");         }      }  }\n\t// Convert to stream and test it \tboolean result = Arrays.stream(alphabet).anyMatch(\"A\"::equals); \tif (result) { \t\tSystem.out.println(\"Hello A\"); \t} Copy\nprivate static final Set<String> VALUES = Set.of(     \"AB\",\"BC\",\"CD\",\"AE\" ); \n",
    "reg_date": "2021-10-12T12:01:36.000Z"
  },
  {
    "id": 726,
    "keyword": null,
    "link": null,
    "title": " array declaration and initialization in java",
    "description": "int[] data = {10,20,30,40,50,60,71,80,90,91}; // or int[] data; data = new int[] {10,20,30,40,50,60,71,80,90,91}; // or int[] data = new int[10]; data = {10,20,30,40,50,60,71,80,90,91};\nint[] arr = new int[5];\t // integer array of size 5 you can also change data type \nint[] data = {10,20,30,40,50,60,71,80,90,91};  // or  int[] data; data = new int[] {10,20,30,40,50,60,71,80,90,91}; \nint[] age = new int[5];\nint[] num = new int[5];\n",
    "reg_date": "2021-10-12T12:01:36.000Z"
  },
  {
    "id": 727,
    "keyword": null,
    "link": null,
    "title": " array in line java",
    "description": "m(new String[]{\"blah\", \"hey\", \"yo\"});\n",
    "reg_date": "2021-10-12T12:01:36.000Z"
  },
  {
    "id": 728,
    "keyword": null,
    "link": null,
    "title": " array java",
    "description": " int[] intArray = new int[]{ 1,2,3,4,5,6,7,8,9,10 };   // Declarando un array literal\n// array of 5 strings String[] arr = new String[5]  arr[0] = \"Happy\"; arr[1] = \"Birthday\"; arr[2] = \"To\"; // etc...\nint[] intArray = new int[]{ 1,2,3,4,5,6,7,8,9,10 }\nint intArray[];    //declaring array intArray = new int[20];  // allocating memory to array //OR int[] intArray = new int[20]; // combining both statements in one\nint[] array = new int[/*size*/]; // Works for double, char, etc.\nint[] intArray = new int[20]; String[] cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\n",
    "reg_date": "2021-10-12T12:01:36.000Z"
  },
  {
    "id": 729,
    "keyword": null,
    "link": null,
    "title": " array of number arrays java",
    "description": "int[][] arrays = { array1, array2, array3, array4, array5 };\n",
    "reg_date": "2021-10-12T12:01:36.000Z"
  },
  {
    "id": 730,
    "keyword": null,
    "link": null,
    "title": " array out of bounds error java",
    "description": "x = 5; System.out.println(x);\n//Use index inside the bounds of the array\n",
    "reg_date": "2021-10-12T12:01:36.000Z"
  },
  {
    "id": 731,
    "keyword": null,
    "link": null,
    "title": " array rotation program in java",
    "description": "//Rotating array left  //d = number of rotations static void rotLeft(int[] a, int d) {     //using secondary array of  same size  \tint [] n = new int[a.length];     //saving element into array n[] according to newlocation of rotations(d) \tfor(int i = 0; i < a.length; i++) \t{ \t\tint newlocation = (i+(a.length - d))% a.length; \t\tn[newlocation] = a[i]; \t} \t//printing new rotated array \tfor(int i = 0; i < a.length; i++) \t{ \t\tSystem.out.print(n[i]+ \" \"); \t} }\n",
    "reg_date": "2021-10-12T12:01:36.000Z"
  },
  {
    "id": 732,
    "keyword": null,
    "link": null,
    "title": " array slice java",
    "description": "int[] newArray = Arrays.copyOfRange(oldArray, startIndex, endIndex);\nimport java.util.Arrays; public class SlicingAnArray {    public static void main(String args[]){       int intArray[] = {12, 14, 58, 225, 56, 96 , 3, 45, 8 };       intArray = Arrays.copyOfRange(intArray, 3, 7);       System.out.println(Arrays.toString(intArray));    } }\nimport java.util.IntStream; // for java 8 and 8+ IntStream.range(start, end).map(x -> arr[x]).toArray();\n   //index   0   1   2   3   4 int[] arr = {10, 20, 30, 40, 50}; Arrays.copyOfRange(arr, 0, 2);          // returns {10, 20} Arrays.copyOfRange(arr, 1, 4);          // returns {20, 30, 40} Arrays.copyOfRange(arr, 2, arr.length); // returns {30, 40, 50} (length = 5) \n",
    "reg_date": "2021-10-12T12:01:37.000Z"
  },
  {
    "id": 733,
    "keyword": null,
    "link": null,
    "title": " array string java in one line",
    "description": "String[] stringarray = {\"string1\", \"string2\", \"string3\"};\n",
    "reg_date": "2021-10-12T12:01:37.000Z"
  },
  {
    "id": 734,
    "keyword": null,
    "link": null,
    "title": " array to arraylist",
    "description": "new ArrayList<>(Arrays.asList(array));\nnew ArrayList<>(Arrays.asList(array)) \nList<Element> list = Arrays.asList(array);\nList<String> list = new ArrayList<>(); list.add(\"a\"); list.add(\"ab\"); list.add(\"abc\"); list.add(\"abcd\"); // convert String[] array = list.toArray();\nArrayList<String> ArrayLister=new ArrayList<>(){ArrayLister.add(\"Hi\")}; String[] array=ArrayLister.toArray(String[]); \nInteger[] arr = new Integer[al.size()];             // ArrayList to Array Conversion          for (int i = 0; i < al.size(); i++)              arr[i] = al.get(i); \n",
    "reg_date": "2021-10-12T12:01:37.000Z"
  },
  {
    "id": 735,
    "keyword": null,
    "link": null,
    "title": " array to arraylist java",
    "description": "String[] arr = list.toArray(new String[list.size()]);\nnew ArrayList<>(Arrays.asList(array));\nInteger[] spam = new Integer[] { 1, 2, 3 }; List<Integer> list = Arrays.asList(spam);\nnew ArrayList<>(Arrays.asList(array)) \nList<Element> list = Arrays.asList(array);\nArrayList<Integer> list = new ArrayList<>(OtherList); //it will copy all elements from OtherList to this one //time complexity - O(n)\n",
    "reg_date": "2021-10-12T12:01:37.000Z"
  },
  {
    "id": 736,
    "keyword": null,
    "link": null,
    "title": " array to set java",
    "description": " Integer[] sourceArray = { 0, 1, 2, 3, 4, 5 };     Set<Integer> targetSet = new HashSet<Integer>(Arrays.asList(sourceArray));\n\t  Set<String> set = new HashSet<String>();       set.add(\"Apple\");       set.add(\"Orange\");       set.add(\"Banana\");               String[] myArray = new String[set.size()];       set.toArray(myArray);\n",
    "reg_date": "2021-10-12T12:01:37.000Z"
  },
  {
    "id": 737,
    "keyword": null,
    "link": null,
    "title": " array to string java",
    "description": "Arrays.toString(charArr);\npublic class ArrayOfStrings {    public static void main(String args[]) {       String stringArray[] = {\"Hello \", \" how\", \" are\", \" you\", \" welcome\", \" to\", \" Tutorialspoint\"};       StringBuffer sb = new StringBuffer();       for(int i = 0; i < stringArray.length; i++) {          sb.append(stringArray[i]);       }       String str = sb.toString();       System.out.println(str);    } }\nchar[] charArray = new char[] {'b','u','z','z'};  String answer = new String(charArray);\n",
    "reg_date": "2021-10-12T12:01:37.000Z"
  },
  {
    "id": 738,
    "keyword": null,
    "link": null,
    "title": " array vs arraylist",
    "description": "Arrays are fixed size ArrayList's size auotomatically adjusted Arrays can hold primitives and object ArrayList can hold only objects Arrays can be multi dimensional ArrayList cannot be multi-dimentional Array is a build in data structure ArrayList is implementing class of List interface in Collection framework\nArrayList is not thread safe/syncronized Vector is thread safe/syncronized ArrayList is faster than Vector Both allow duplicate values and keep ordering Both are implementations of List interface\nArrayList is not thread safe Vector is thread safe/syncronized ArrayList is faster than Vector Both allow duplicate values and keep ordering Both are implementations of List interface\n",
    "reg_date": "2021-10-12T12:01:37.000Z"
  },
  {
    "id": 739,
    "keyword": null,
    "link": null,
    "title": " arrayindexoutofboundsexception in java",
    "description": "public class ArrayIndexOutOfBoundException {          public static void main(String[] args) {   \t\tString[] arr = {\"Mario\",\"Giuseppe\",\"Francesco\",\"Alessandro\"};    \t\t//Declaring 4 elements in the String array                                                           for(int i=0;i<=arr.length;i++) {           \t\t//Here, no element is present at the iteration number arr.length, i.e 4               System.out.println(arr[i]);       \t\t//So it will throw ArrayIndexOutOfBoundException at iteration 4                    }          }      }  \n",
    "reg_date": "2021-10-12T12:01:37.000Z"
  },
  {
    "id": 740,
    "keyword": null,
    "link": null,
    "title": " arraylist",
    "description": "import java.util.ArrayList;\nimport java.util.ArrayList; public class ArrayListExample {    public static void main(String[] args)    {       int num = 14;       // declaring ArrayList with initial size num       ArrayList<Integer> al = new ArrayList<Integer>(num);       // append new element at the end of list       for(int a = 1; a <= num; a++)       {          al.add(a);       }       System.out.println(al);       // remove element at index 7       al.remove(7);       // print ArrayList after deletion       System.out.println(al);       // print elements one by one       for(int a = 0; a < al.size(); a++)       {          System.out.print(al.get(a) + \" \");       }    } }\nimport java.util.List; //list abstract class import java.util.ArrayList; //arraylist class  //Object Lists List l = new ArrayList(); ArrayList a = new ArrayList();  //Specialized List List<String> l = new ArrayList<String>(); ArrayList<Integer> a = new ArrayList<Integer>(); //only reference data types allowed in brackets <>  //Initial Capacity List<Double> l = new ArrayList<Double>(5); //list will start with a capacity of 5 //saves allocation times\n//requires either one of these two imports, both work. import java.util.ArrayList; //--or-- import java.util.*  ArrayList<DataType> name = new ArrayList<DataType>(); //Defining an arraylist, substitute \"DataType\" with an Object //such as Integer, Double, String, etc //the < > is required //replace \"name\" with your name for the arraylist\n// THIS IS OKAY: ArrayList arrayList = new ArrayList();\nArrayList<String>arrayList=new ArrayList<>();\n",
    "reg_date": "2021-10-12T12:01:37.000Z"
  },
  {
    "id": 741,
    "keyword": null,
    "link": null,
    "title": " arraylist add",
    "description": "ArrayList<Integer> str=new ArrayList<Integer>(); str.add(0); str.add(1);  // Result = [0, 1]      str.add(1, 11);  // Result = [0, 11, 1]\nArrayList<String> arrayList = new ArrayList<>(); // Adds element at the back of the list arrayList.add(\"foo\"); arrayList.add(\"bar\"); // Result = [\"foo\", \"bar\"]  // Adds element at the specified index arrayList.add(1, \"baz\"); // Result = [\"foo\", \"baz\", \"bar\"]\nArrayList<String> languages = new ArrayList<String>();  languages.add(\"PHP\"); languages.add(\"JAVA\"); languages.add(\"C#\"); ArrayList<int> numbers = new ArrayList<int>();  numbers.add(9); numbers.add(14); numbers.add(2);\nArrayList<String>arrayList=new ArrayList<>();\n//create ArrayList ArrayList<String> arrayList = new ArrayList<String>(); //add item to ArrayList arrayList.add(\"item\"); //check if ArrayList contains item (returns boolean) System.out.println(arrayList.contains(\"item\")); //remove item from ArrayList arrayList.remove(\"item\");\nimport java.util.ArrayList; public class Details {     public static void main(String[] args) {          //ArrayList<String> Declaration         ArrayList<String> al= new ArrayList<String>();         //add method for String ArrayList         al.add(\"Ram\");         al.add(\"Shyam\");         al.add(\"CPS\");         al.add(\"John\");         al.add(\"Steve\");         System.out.println(\"Elements of ArrayList of String Type: \"+al);\n",
    "reg_date": "2021-10-12T12:01:38.000Z"
  },
  {
    "id": 742,
    "keyword": null,
    "link": null,
    "title": " arraylist add new element to end",
    "description": "    //add to the end of the list     stringList.add(random);      //add to the beginning of the list     stringList.add(0,  random);      //replace the element at index 4 with random     stringList.set(4, random);      //remove the element at index 5     stringList.remove(5);      //remove all elements from the list     stringList.clear(); \n",
    "reg_date": "2021-10-12T12:01:38.000Z"
  },
  {
    "id": 743,
    "keyword": null,
    "link": null,
    "title": " arraylist get last",
    "description": "firstNum = numbers[0]; lastNum = numbers[numbers.length-1];\nArrayList<Integer> list = new ArrayList<Integer>(5);  int last = list.get(list.size() - 1); \nE e = list.get(list.size() - 1);\nList<E> tail = l.subList(Math.max(l.size() - 3, 0), l.size());\nList<Post> myLastPosts = posts.subList(posts.size()-40, posts.size());\n",
    "reg_date": "2021-10-12T12:01:38.000Z"
  },
  {
    "id": 744,
    "keyword": null,
    "link": null,
    "title": " arraylist get value at index java",
    "description": "import java.util.ArrayList; public class ArrayListGetExample {    public static void main(String[] args)    {       ArrayList<String> al = new ArrayList<String>();       al.add(\"lion\");       al.add(\"tiger\");       al.add(\"deer\");       al.add(\"cheetah\");       al.add(\"elephant\");       al.add(\"fox\");       al.add(\"hyenas\");       al.add(\"jackal\");       System.out.println(\"Get second element of ArrayList: \" + al.get(1));       System.out.println(\"Get third element of ArrayList: \" + al.get(2));       System.out.println(\"Get fifth element of ArrayList: \" + al.get(4));       System.out.println(\"Get sixth element of ArrayList: \" + al.get(5));    } }\nget(index);\n",
    "reg_date": "2021-10-12T12:01:38.000Z"
  },
  {
    "id": 745,
    "keyword": null,
    "link": null,
    "title": " arraylist in java",
    "description": "import java.util.ArrayList;\nimport java.util.ArrayList; public class ArrayListExample {    public static void main(String[] args)    {       int num = 14;       // declaring ArrayList with initial size num       ArrayList<Integer> al = new ArrayList<Integer>(num);       // append new element at the end of list       for(int a = 1; a <= num; a++)       {          al.add(a);       }       System.out.println(al);       // remove element at index 7       al.remove(7);       // print ArrayList after deletion       System.out.println(al);       // print elements one by one       for(int a = 0; a < al.size(); a++)       {          System.out.print(al.get(a) + \" \");       }    } }\nimport java.util.List; //list abstract class import java.util.ArrayList; //arraylist class  //Object Lists List l = new ArrayList(); ArrayList a = new ArrayList();  //Specialized List List<String> l = new ArrayList<String>(); ArrayList<Integer> a = new ArrayList<Integer>(); //only reference data types allowed in brackets <>  //Initial Capacity List<Double> l = new ArrayList<Double>(5); //list will start with a capacity of 5 //saves allocation times\nArrayList<String> languages = new ArrayList<String>();  languages.add(\"PHP\"); languages.add(\"JAVA\"); languages.add(\"C#\"); ArrayList<int> numbers = new ArrayList<int>();  numbers.add(9); numbers.add(14); numbers.add(2);\n//requires either one of these two imports, both work. import java.util.ArrayList; //--or-- import java.util.*  ArrayList<DataType> name = new ArrayList<DataType>(); //Defining an arraylist, substitute \"DataType\" with an Object //such as Integer, Double, String, etc //the < > is required //replace \"name\" with your name for the arraylist\nSize is dynamic Only supports objects not syncronized array based class\n",
    "reg_date": "2021-10-12T12:01:38.000Z"
  },
  {
    "id": 746,
    "keyword": null,
    "link": null,
    "title": " arraylist insert at position",
    "description": "import java.util.ArrayList; public class ArrayListAddMethodExample {    public static void main(String[] args)    {       // creating an empty ArrayList with initial capacity       ArrayList<Integer> al = new ArrayList<Integer>(6);       al.add(12);       al.add(14);       al.add(16);       al.add(18);       al.add(20);       // adding element 15 at fourth position       al.add(3, 15);       for(Integer number : al)       {          System.out.println(\"Number: \" + number);       }    } }\nArrayList<String> arrayList = new ArrayList<>(); // Adds element at the back of the list arrayList.add(\"foo\"); arrayList.add(\"bar\"); // Result = [\"foo\", \"bar\"]  // Adds element at the specified index arrayList.add(1, \"baz\"); // Result = [\"foo\", \"baz\", \"bar\"]\n/* add(index, item to add); */ ArrayList<String> languages = new ArrayList<String>();  languages.add(\"PHP\"); languages.add(\"JAVA\"); languages.add(\"C#\"); languages.add(2, \"RUBY\"); /* at index 2, add RUBY*/ ArrayList<int> numbers = new ArrayList<int>();  numbers.add(9); numbers.add(14); numbers.add(2); numbers.add(1, 15); /* at index 1, add 15*/ /*   After Execution:   languages => PHP JAVA RUBY C#   numbers => 9 15 14 2 */\n//Insert a value by using arrayName.add(index, value) //Will not remove current element at index. Will simply move all elements to //the right. import java.util.ArrayList; public class main{   public static void main(String[] args){    ArrayList<Integer> list = new ArrayList<Integer>();    \tlist.add(0);     list.add(1);     list.add(2);     list.add(3);     list.add(4);     list.add(5);     list.add(0, 100);          //enhanced for loop will print all elements of the ArrayList     for(int element : list){     System.out.print(list + \", \");       }     //Expected output: \"100, 0, 1, 2, 3, 4, 5, \"   }    }\n//public void add (int index , E element)   \n",
    "reg_date": "2021-10-12T12:01:38.000Z"
  },
  {
    "id": 747,
    "keyword": null,
    "link": null,
    "title": " arraylist java",
    "description": "import java.util.ArrayList;\n   ArrayList<Integer> contractValue = new ArrayList<Integer>();\nList<String> words = new ArrayList<String>();\nArrayList<String> al = new ArrayList<String>();       al.add(\"Hello\");       al.add(\"Wor\");       al.add(\"ld\");       StringBuffer sb = new StringBuffer();              for (String s : al) {          sb.append(s);          sb.append(\" \");       }       String str = sb.toString();       System.out.println(str);//\"Hello wor ld\" \nimport java.util.ArrayList; public class ArrayListExample {    public static void main(String[] args)    {       int num = 14;       // declaring ArrayList with initial size num       ArrayList<Integer> al = new ArrayList<Integer>(num);       // append new element at the end of list       for(int a = 1; a <= num; a++)       {          al.add(a);       }       System.out.println(al);       // remove element at index 7       al.remove(7);       // print ArrayList after deletion       System.out.println(al);       // print elements one by one       for(int a = 0; a < al.size(); a++)       {          System.out.print(al.get(a) + \" \");       }    } }\n//requires either one of these two imports, both work. import java.util.ArrayList; //--or-- import java.util.*  ArrayList<DataType> name = new ArrayList<DataType>(); //Defining an arraylist, substitute \"DataType\" with an Object //such as Integer, Double, String, etc //the < > is required //replace \"name\" with your name for the arraylist\n",
    "reg_date": "2021-10-12T12:01:38.000Z"
  },
  {
    "id": 748,
    "keyword": null,
    "link": null,
    "title": " arraylist java methds",
    "description": "import java.util.ArrayList; ArrayList<Integer> myList = new ArrayList<Integer>(); myList.add(0); myList.remove(0);//Remove at index 0 myList.size(); myList.get(0);//Return element at index 0\n",
    "reg_date": "2021-10-12T12:01:38.000Z"
  },
  {
    "id": 749,
    "keyword": null,
    "link": null,
    "title": " arraylist java package name",
    "description": "import java.util.ArrayList;\n",
    "reg_date": "2021-10-12T12:01:38.000Z"
  },
  {
    "id": 750,
    "keyword": null,
    "link": null,
    "title": " arraylist length",
    "description": "aList.size()\nimport java.util.ArrayList;  /*  * Java Program to find the length of ArrayList. *  */  public class ArrayListDemo{    public static void main(String[] args) {     System.out.println(\"Welcome to Java Program to find the length of array list\");      ArrayList<String> listOfBanks = new ArrayList<>();     int size = listOfBanks.size();     System.out.println(\"size of array list after creating: \" + size);      listOfBanks.add(\"Citibank\");     listOfBanks.add(\"Chase\");     listOfBanks.add(\"Bank of America\");     size = listOfBanks.size();      System.out.println(\"length of ArrayList after adding elements: \" + size);      listOfBanks.clear();     size = listOfBanks.size();     System.out.println(\"size of ArrayList after clearing elements: \" + size);   }  } Output Welcome to Java Program to find length of array list the size of array list after creating: 0 the length of ArrayList after adding elements: 3 the length of ArrayList after clearing elements: 0\nArrayList<String> listOfBanks = new ArrayList<>();  int size = listOfBanks.size();  System.out.println(\"size of array list after creating: \" + size);\nimport java.util.ArrayList; public class ArrayListSizeMethodExample {    public static void main(String[] args)    {       ArrayList<Integer> al = new ArrayList<Integer>();       int s = al.size();       System.out.println(\"size of ArrayList: \" + s);       al.add(25);       al.add(64);       al.add(73);       s = al.size();       System.out.println(\"size of ArrayList after adding elements: \" + s);       al.clear();       s = al.size();       System.out.println(\"size of ArrayList after clearing elements: \" + s);    } }\nlist.size()\nimport java.util.ArrayList; public class ArrayListSizeMethodExample {    public static void main(String[] args)    {       ArrayList<String> al = new ArrayList<String>();       int s = al.size();       System.out.println(\"size of ArrayList: \" + s);       al.add(\"red\");       al.add(\"blue\");       al.add(\"green\");       s = al.size();       System.out.println(\"size of ArrayList after adding elements: \" + s);       al.clear();       s = al.size();       System.out.println(\"size of ArrayList after clearing elements: \" + s);    } }\n",
    "reg_date": "2021-10-12T12:01:38.000Z"
  },
  {
    "id": 751,
    "keyword": null,
    "link": null,
    "title": " arraylist length java",
    "description": "aList.size()\nimport java.util.ArrayList;  /*  * Java Program to find the length of ArrayList. *  */  public class ArrayListDemo{    public static void main(String[] args) {     System.out.println(\"Welcome to Java Program to find the length of array list\");      ArrayList<String> listOfBanks = new ArrayList<>();     int size = listOfBanks.size();     System.out.println(\"size of array list after creating: \" + size);      listOfBanks.add(\"Citibank\");     listOfBanks.add(\"Chase\");     listOfBanks.add(\"Bank of America\");     size = listOfBanks.size();      System.out.println(\"length of ArrayList after adding elements: \" + size);      listOfBanks.clear();     size = listOfBanks.size();     System.out.println(\"size of ArrayList after clearing elements: \" + size);   }  } Output Welcome to Java Program to find length of array list the size of array list after creating: 0 the length of ArrayList after adding elements: 3 the length of ArrayList after clearing elements: 0\nArrayList<String> listOfBanks = new ArrayList<>();  int size = listOfBanks.size();  System.out.println(\"size of array list after creating: \" + size);\nimport java.util.ArrayList; public class ArrayListSizeMethodExample {    public static void main(String[] args)    {       ArrayList<Integer> al = new ArrayList<Integer>();       int s = al.size();       System.out.println(\"size of ArrayList: \" + s);       al.add(25);       al.add(64);       al.add(73);       s = al.size();       System.out.println(\"size of ArrayList after adding elements: \" + s);       al.clear();       s = al.size();       System.out.println(\"size of ArrayList after clearing elements: \" + s);    } }\nlist.size()\nimport java.util.ArrayList; public class ArrayListSizeMethodExample {    public static void main(String[] args)    {       ArrayList<String> al = new ArrayList<String>();       int s = al.size();       System.out.println(\"size of ArrayList: \" + s);       al.add(\"red\");       al.add(\"blue\");       al.add(\"green\");       s = al.size();       System.out.println(\"size of ArrayList after adding elements: \" + s);       al.clear();       s = al.size();       System.out.println(\"size of ArrayList after clearing elements: \" + s);    } }\n",
    "reg_date": "2021-10-12T12:01:39.000Z"
  },
  {
    "id": 752,
    "keyword": null,
    "link": null,
    "title": " arraylist methods in java",
    "description": "import java.util.ArrayList;\nimport java.util.ArrayList; public class ArrayListExample {    public static void main(String[] args)    {       int num = 14;       // declaring ArrayList with initial size num       ArrayList<Integer> al = new ArrayList<Integer>(num);       // append new element at the end of list       for(int a = 1; a <= num; a++)       {          al.add(a);       }       System.out.println(al);       // remove element at index 7       al.remove(7);       // print ArrayList after deletion       System.out.println(al);       // print elements one by one       for(int a = 0; a < al.size(); a++)       {          System.out.print(al.get(a) + \" \");       }    } }\nimport java.util.List; //list abstract class import java.util.ArrayList; //arraylist class  //Object Lists List l = new ArrayList(); ArrayList a = new ArrayList();  //Specialized List List<String> l = new ArrayList<String>(); ArrayList<Integer> a = new ArrayList<Integer>(); //only reference data types allowed in brackets <>  //Initial Capacity List<Double> l = new ArrayList<Double>(5); //list will start with a capacity of 5 //saves allocation times\nArrayList<String> languages = new ArrayList<String>();  languages.add(\"PHP\"); languages.add(\"JAVA\"); languages.add(\"C#\"); ArrayList<int> numbers = new ArrayList<int>();  numbers.add(9); numbers.add(14); numbers.add(2);\nimport java.util.ArrayList; ArrayList<Integer> myList = new ArrayList<Integer>(); myList.add(0); myList.remove(0);//Remove at index 0 myList.size(); myList.get(0);//Return element at index 0\n// Assign to list variable directly with STREAM FILTER METHID ArrayList<String> filteredColors = (ArrayList<String>) colors.stream().filter(x -> x.contains(\"o\")).collect(Collectors.toList());  // Clone and remove unwanted(TRADITIONAL FILTERING) filteredColors = (ArrayList<String>) colors.clone(); filteredColors.removeIf(x -> !x.contains(\"o\"));  // Find specific element colors.stream().filter(x -> x.contains(\"ora\")).findFirst().get();\n",
    "reg_date": "2021-10-12T12:01:39.000Z"
  },
  {
    "id": 753,
    "keyword": null,
    "link": null,
    "title": " arraylist of arraylist",
    "description": "public class GuiTest {  \t \tpublic static void main(String[] args) { \t\tList<List<Integer>> MainList = new ArrayList<List<Integer>>(); \t\tRandom NewRandomNumber = new Random(); \t\t \t\tfor (int i = 0; i < 10; i++) { \t\t\tList<Integer> SecondList = new ArrayList<Integer>(); \t\t\tMainList.add(SecondList); \t\t\tfor (int i2 = 0; i2 < 10; i2++) { \t\t\t\tSecondList.add(NewRandomNumber.nextInt(6)); \t\t\t} \t\t}\nimport java.util.ArrayList; ArrayList<Integer> myList = new ArrayList<Integer>(); myList.add(0); myList.remove(0);//Remove at index 0 myList.size(); myList.get(0);//Return element at index 0\n// THIS IS OKAY: ArrayList arrayList = new ArrayList();\nArrayList<String>arrayList=new ArrayList<>();\npublic static void main(String[] args) {     ArrayList<ArrayList<Integer>> outer = new ArrayList<ArrayList<Integer>>();     ArrayList<Integer> inner = new ArrayList<Integer>();              inner.add(100);          inner.add(200);     outer.add(inner); // add first list     inner = new ArrayList<Integer>(inner); // create a new inner list that has the same content as                                              // the original inner list     outer.add(inner); // add second list      outer.get(0).add(300); // changes only the first inner list      System.out.println(outer); }\n",
    "reg_date": "2021-10-12T12:01:39.000Z"
  },
  {
    "id": 754,
    "keyword": null,
    "link": null,
    "title": " arraylist of double",
    "description": "import java.util.ArrayList;  \tpublic void function(){     \tArrayList<type> myList = new ArrayList<>();    }\n",
    "reg_date": "2021-10-12T12:01:39.000Z"
  },
  {
    "id": 755,
    "keyword": null,
    "link": null,
    "title": " arraylist replace value java",
    "description": "list.set(1,\"new value\");  //example ..  List<String> list = new ArrayList<>(); list.add(\"one\"); list.add(\"two\"); list.add(\"three\"); System.out.println(list); // [one,two,three] list.set(1,\"new\"); System.out.println(list); //[one,new,three]\n",
    "reg_date": "2021-10-12T12:01:39.000Z"
  },
  {
    "id": 756,
    "keyword": null,
    "link": null,
    "title": " arraylist string to string array",
    "description": "String[] arr = list.toArray(new String[list.size()]);\nArrayList<String> al = new ArrayList<String>();       al.add(\"Hello\");       al.add(\"Wor\");       al.add(\"ld\");       StringBuffer sb = new StringBuffer();              for (String s : al) {          sb.append(s);          sb.append(\" \");       }       String str = sb.toString();       System.out.println(str);//\"Hello wor ld\" \nString [] strings = new String [] {\"1\", \"2\" }; List<String> stringList = new ArrayList<String>(Arrays.asList(strings)); //new ArrayList is only needed if you absolutely need an ArrayList \nnew ArrayList( Arrays.asList( new String[]{\"abc\", \"def\"} ) );\nString listString = String.join(\", \", list); //Java 8 or later\n",
    "reg_date": "2021-10-12T12:01:39.000Z"
  },
  {
    "id": 757,
    "keyword": null,
    "link": null,
    "title": " arraylist to array java",
    "description": "new ArrayList<>(Arrays.asList(array));\nString[] arr = list.toArray(new String[list.size()]);\nList<Element> list = Arrays.asList(array);\nList<String> list = new ArrayList<>(); list.add(\"a\"); list.add(\"ab\"); list.add(\"abc\"); list.add(\"abcd\"); // convert String[] array = list.toArray();\nArrayList<String> ArrayLister=new ArrayList<>(){ArrayLister.add(\"Hi\")}; String[] array=ArrayLister.toArray(String[]); \nList<String> stockList = new ArrayList<String>(); stockList.add(\"stock1\"); stockList.add(\"stock2\");  String[] stockArr = new String[stockList.size()]; stockArr = stockList.toArray(stockArr);  for(String s : stockArr)     System.out.println(s);\n",
    "reg_date": "2021-10-12T12:01:39.000Z"
  },
  {
    "id": 758,
    "keyword": null,
    "link": null,
    "title": " arraylist to set java 8",
    "description": "Set<Foo> foo = new HashSet<Foo>(myList);\n",
    "reg_date": "2021-10-12T12:01:39.000Z"
  },
  {
    "id": 759,
    "keyword": null,
    "link": null,
    "title": " arraylist with values",
    "description": "ArrayList<String> cities = new ArrayList<>(Arrays.asList(\"London\", \"Tokyo\", \"New York\"));\nList<String> x = new ArrayList<>(Arrays.asList(\"xyz\", \"abc\"));\n",
    "reg_date": "2021-10-12T12:01:39.000Z"
  },
  {
    "id": 760,
    "keyword": null,
    "link": null,
    "title": " arraylist with values java",
    "description": "ArrayList<String> cities = new ArrayList<>(Arrays.asList(\"London\", \"Tokyo\", \"New York\"));\nList<String> x = new ArrayList<>(Arrays.asList(\"xyz\", \"abc\"));\n",
    "reg_date": "2021-10-12T12:01:39.000Z"
  },
  {
    "id": 761,
    "keyword": null,
    "link": null,
    "title": " arrays.aslist.add",
    "description": "List<String> list = new ArrayList<String>(Arrays.asList(\"a\", \"b\"));\n",
    "reg_date": "2021-10-12T12:01:39.000Z"
  },
  {
    "id": 762,
    "keyword": null,
    "link": null,
    "title": " arrays.fill java",
    "description": "import java.util.Arrays; int[] myArray = new int[10]; Arrays.fill(myArray,1);//This will fill the array with 1s\n// fill array with counter (for loop) (1,2,3,4,5)  int[] myArray = new int[5];  for (int i = 0; i < myArray.length; i++) { \t myArray[i] = i + 1;  }\n",
    "reg_date": "2021-10-12T12:01:40.000Z"
  },
  {
    "id": 763,
    "keyword": null,
    "link": null,
    "title": " arrays.sum",
    "description": "int[] a = {10,20,30,40,50}; int sum = IntStream.of(a).sum(); System.out.println(\"The sum is \" + sum); \npublic class Exercise2 { public static void main(String[] args) {       int my_array[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}; int sum = 0;  for (int i : my_array)     sum += i; System.out.println(\"The sum is \" + sum); } }\nint sum = Arrays.stream(\"1 2 3 4\".split(\"\\\\s+\")).mapToInt(Integer::parseInt).sum(); \n/**  * C program to find sum of all elements of array  */  #include <stdio.h> #define MAX_SIZE 100  int main() {     int arr[MAX_SIZE];     int i, n, sum=0;      /* Input size of the array */     printf(\"Enter size of the array: \");     scanf(\"%d\", &n);      /* Input elements in array */     printf(\"Enter %d elements in the array: \", n);     for(i=0; i<n; i++)     {         scanf(\"%d\", &arr[i]);          // Add each array element to sum         sum += arr[i];     }      printf(\"Sum of all elements of array = %d\", sum);      return 0; }\n/**  * C program to find sum of all elements of array   */  #include <stdio.h> #define MAX_SIZE 100  int main() {     int arr[MAX_SIZE];     int i, n, sum=0;      /* Input size of the array */     printf(\"Enter size of the array: \");     scanf(\"%d\", &n);      /* Input elements in array */     printf(\"Enter %d elements in the array: \", n);     for(i=0; i<n; i++)     {         scanf(\"%d\", &arr[i]);     }      /*      * Add each array element to sum      */     for(i=0; i<n; i++)     {         sum = sum + arr[i];     }       printf(\"Sum of all elements of array = %d\", sum);      return 0; }\n",
    "reg_date": "2021-10-12T12:01:40.000Z"
  },
  {
    "id": 764,
    "keyword": null,
    "link": null,
    "title": " arrays",
    "description": "// Java program to demonstrate working of Arrays.toString()  import java.io.*;  import java.util.*;   class GFG {  \tpublic static void main(String[] args)  \t{  \t\t// Let us create different types of arrays and  \t\t// print their contents using Arrays.toString()  \t\tboolean[] boolArr = new boolean[] { true, true, false, true };  \t\tbyte[] byteArr = new byte[] { 10, 20, 30 };  \t\tchar[] charArr = new char[] { 'g', 'e', 'e', 'k', 's' };  \t\tdouble[] dblArr = new double[] { 1, 2, 3, 4 };  \t\tfloat[] floatArr = new float[] { 1, 2, 3, 4 };  \t\tint[] intArr = new int[] { 1, 2, 3, 4 };  \t\tlong[] lomgArr = new long[] { 1, 2, 3, 4 };  \t\tObject[] objArr = new Object[] { 1, 2, 3, 4 };  \t\tshort[] shortArr = new short[] { 1, 2, 3, 4 };   \t\tSystem.out.println(Arrays.toString(boolArr));  \t\tSystem.out.println(Arrays.toString(byteArr));  \t\tSystem.out.println(Arrays.toString(charArr));  \t\tSystem.out.println(Arrays.toString(dblArr));  \t\tSystem.out.println(Arrays.toString(floatArr));  \t\tSystem.out.println(Arrays.toString(intArr));  \t\tSystem.out.println(Arrays.toString(lomgArr));  \t\tSystem.out.println(Arrays.toString(objArr));  \t\tSystem.out.println(Arrays.toString(shortArr));  \t}  }  \nitemp:integer \narrays \n//Javascript Array var fruitList = [\"Bananas\", \"Apples\", \"Oranges\"]\n// Java program to demonstrate working of Arrays.toString()  import java.io.*;  import java.util.*;   class GFG {  \tpublic static void main(String[] args)  \t{  \t\t// Let us create different types of arrays and  \t\t// print their contents using Arrays.toString()  \t\tboolean[] boolArr = new boolean[] { true, true, false, true };  \t\tbyte[] byteArr = new byte[] { 10, 20, 30 };  \t\tchar[] charArr = new char[] { 'g', 'e', 'e', 'k', 's' };  \t\tdouble[] dblArr = new double[] { 1, 2, 3, 4 };  \t\tfloat[] floatArr = new float[] { 1, 2, 3, 4 };  \t\tint[] intArr = new int[] { 1, 2, 3, 4 };  \t\tlong[] lomgArr = new long[] { 1, 2, 3, 4 };  \t\tObject[] objArr = new Object[] { 1, 2, 3, 4 };  \t\tshort[] shortArr = new short[] { 1, 2, 3, 4 };   \t\tSystem.out.println(Arrays.toString(boolArr));  \t\tSystem.out.println(Arrays.toString(byteArr));  \t\tSystem.out.println(Arrays.toString(charArr));  \t\tSystem.out.println(Arrays.toString(dblArr));  \t\tSystem.out.println(Arrays.toString(floatArr));  \t\tSystem.out.println(Arrays.toString(intArr));  \t\tSystem.out.println(Arrays.toString(lomgArr));  \t\tSystem.out.println(Arrays.toString(objArr));  \t\tSystem.out.println(Arrays.toString(shortArr));  \t}  } \nint[] numbers = new int[10];  int[] names = new String[]{\"John\", \"Jack\"};  int length = names.length;  for (String name: names) {     System.out.println(name); }\n",
    "reg_date": "2021-10-12T12:01:40.000Z"
  },
  {
    "id": 765,
    "keyword": null,
    "link": null,
    "title": " arrays in java",
    "description": "// Accessing array elements using for loop public class AccessingArrayElements {    public static void main(String[] args)    {       int[] arrNum = {25, 23, 15, 20, 24};       for(int a = 0; a < arrNum.length; a++)       {          System.out.println(arrNum[a]);       }    } }\nint[] intArray = new int[20]; String[] cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\nFor example: int[ ] num = new int[6]; public class AccessingArrayElements {    public static void main(String[] args)    {       int[] arrNum = {25, 23, 15, 20, 24};       for(int a = 0; a < arrNum.length; a++)       {          System.out.println(arrNum[a]);       }    } }\nint[] arr;\t\t\t// Declaration dataType can int, float etc. arr = new int[N];\t// Allocation N = 0 to 2,147,483,647.\n3 data structures: 1. Array 2. Collection 3. Maps             Arrays: a variable that can have multiple data     DataType[]  variableName = { dat1, data2, data3 }; the data we are storing MUST match with DataTyp each data in the array has its own index number  initializing the size of the array: 1. giving the values: size will be initialized automatically \tint[] arr = {10, 20, 30}; 2. giving the size only: default value of the datatype will be assigned at each index \t\t\t                  int[] arr = new int[length]; \t\t\t                  int[] arr = new int[5]; default values: byte, short, int, long ==> 0 \t\t\tString or any object ==> null                         length: returns the length of array Array' size is fixed Arrays utilities: length: returns total number of the element of the arra Arrays Utilities:  Arrays class:  presented in \"java.util\"              import java.util.Arrays;   Arrays.toString(arrayName): converts the array to String, returns the string Arrays.sort(arrayName): sorts the given array in ascending order                     Arrays.equals(arr1, arr2): chekcs if the two arrays are same or not. returns boolean   toCharArray(): returns char array from the string String str = \"Batch 18\"; char[] ch   = str.toCharArray(); //['B', 'a', 't', 'c', 'h', ' ', '1', '8']  Array: size is fixed        supports primitives and objects        Can be multi-dimensional        has index, accept duplicates        Arrays.sort(arrayName);        Collections.sort()  \nint int_array[] = {10, 22, 475, 90, 54, 63}; // Brace-enclosed initializer list.  float float_array[]; // Array declaration/initialization with \"new\" keyword. float_array = new float[SIZE_OF_ARRAY]; // Assume \"SIZE_OF_ARRAY\" is an integer.\n",
    "reg_date": "2021-10-12T12:01:40.000Z"
  },
  {
    "id": 766,
    "keyword": null,
    "link": null,
    "title": " arrays lists java",
    "description": "List<int[]> A = new List<int[]>(); \nArrayList: part of Collections         does not support primitives, only support none primitives size is dynamic, automatically adjusted has index numbers ArrayList <DataType>  listName = new ArrayList <DataType> (); methods: add(): adds Objects to the arraylist get(index): gets the object at the given index, returns the object as it is size(): returns the length (size) of the arraylist as an int add(Object): adds objects to the arraylist add(index, Object): adds the object at the given index set(index, Object):  replacing the original object at given index with the new given object remove(int index): object at the given index will be removed. ONLY one  remove(Object): given object will be removed, returns boolean. ONLY one  clear(): remove everything from arraylist, size will be 0 indexOf(Object): returns the index number of the object, int contains(Object): returns boolean  equals(ArrayListName): compares two arrayList  isEmpty(): returns boolean, depeding on the size  Data Structures: \t\t1. Array  ==>    Arrays (java.util) \t\t2. Collection ==> Collections (java.util), does not support primitive \t\t3. Maps  ==> does not support primitive   Methods: Bulk Operations: containsAll(CollectionType): verifies if all objects in CollectionType are contained in the list or not, returns boolean   addAll(CollectionType): adds multiple objects, adds all the objects from given collection type   removeAll(CollectionType): removes multiple objetcs, removes all the matching objects   retainAll(CollectionType): removes all the unmatching objects \t\t\t\t\t{1,2,3,4,5,6,7,1,2,3,4} \t\t\t\t\tremoveAll(1,2,3,4) ==> {5,6,7} \t\t\t\t\tretainAll(1,2,3,4) ==> {1,2,3,4,1,2,3,4 }                Arrays.asList(object1, object2 ..): returns the collection type (List)    ArrayList<Integer> numList = new ArrayList<>(CollectionType);    sorting arrayList: \tCollections.sort(ArrayListName); ==> Ascending order   \tCollections: presented in \"java.util\" package \t\timport PakageName.Classname; \t\timport java.util.Collections;      Collections Class: sort(CollectionType): sorting any given collectionType   frequency(CollectionType, Object): returns the frequency of the given object from the given collectionType   max(CollectionType): return the max object from collectiontype   min(CollectionType): return the min object from collectiontype   swap(CollectionType, index1, index2): swaps the elemnts at the given indexs from the CollectionType \t\t\t\tlist: {1,2,3,4,5} \t\t\t\tCollections.swap(list, 1, 2); ==> {1,3,2,4,5}   replaceAll(CollectionType, oldValue, newValue): \t\t\t\tlist: {1,1,1,2,3,4,5} \t\t\t\tCollections.replaceAll(list, 1, 10); ==>{10,10,10,2,3,4,5}  Predicate:  can be applied to any collection-Type \t\tnumber % 2 != 0   \t\tPredicate<Ineteger>  oddNumber =  p -> p %2 != 0;   ArrayLisst method: remove If(Predicate): removes everything that's matching with the expression of predicate \n",
    "reg_date": "2021-10-12T12:01:40.000Z"
  },
  {
    "id": 767,
    "keyword": null,
    "link": null,
    "title": " arrays sort 2d array java",
    "description": "Arrays.sort(myArr,(double[] a,double[] b)->{                 //here multiple lines of code can be placed                 return a[0]-b[0];              });\n",
    "reg_date": "2021-10-12T12:01:40.000Z"
  },
  {
    "id": 768,
    "keyword": null,
    "link": null,
    "title": " ascii in java",
    "description": "public class AsciiValue {      public static void main(String[] args) {          char ch = 'z';         int ascii = ch;         // You can also cast char to int         int castAscii = (int) ch;          System.out.println(\"The ASCII value of \" + ch + \" is: \" + ascii);         System.out.println(\"The ASCII value of \" + ch + \" is: \" + castAscii);     } }\npublic class AsciiValue {      public static void main(String[] args) {          char ch = 'a';         int ascii = ch;         // You can also cast char to int         int castAscii = (int) ch;          System.out.println(\"The ASCII value of \" + ch + \" is: \" + ascii);         System.out.println(\"The ASCII value of \" + ch + \" is: \" + castAscii);     } }\nchar a = 97+1; char b = 'a'+2; r = (char)(1+5)\n",
    "reg_date": "2021-10-12T12:01:40.000Z"
  },
  {
    "id": 769,
    "keyword": null,
    "link": null,
    "title": " ascii values to display certain characters in java",
    "description": "/*ASCII acronym for American Standard Code for Information Interchange. It is a 7-bit character set contains 128 (0 to 127) characters. It represents the numerical value of a character. For example, the ASCII value of A is 65.*/ char a = 65, b = 66, c = 67; System.out.println(a); System.out.println(b); System.out.println(c);  /* this is how you type ASCII values in java */\nchar a = 65, b = 66, c = 67; System.out.println(a); System.out.println(b); System.out.println(c);  /* this is how you type ASCII values in java */\n",
    "reg_date": "2021-10-12T12:01:40.000Z"
  },
  {
    "id": 770,
    "keyword": null,
    "link": null,
    "title": " assert system.out.println",
    "description": "private final ByteArrayOutputStream outContent = new ByteArrayOutputStream(); private final ByteArrayOutputStream errContent = new ByteArrayOutputStream(); private final PrintStream originalOut = System.out; private final PrintStream originalErr = System.err;  @Before public void setUpStreams() {     System.setOut(new PrintStream(outContent));     System.setErr(new PrintStream(errContent)); }  @After public void restoreStreams() {     System.setOut(originalOut);     System.setErr(originalErr); }  sample test cases:  @Test public void out() {     System.out.print(\"hello\");     assertEquals(\"hello\", outContent.toString()); }  @Test public void err() {     System.err.print(\"hello again\");     assertEquals(\"hello again\", errContent.toString()); }\n",
    "reg_date": "2021-10-12T12:01:40.000Z"
  },
  {
    "id": 771,
    "keyword": null,
    "link": null,
    "title": " at retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1.onFailure(DefaultCallAdapterFactory.java:96)",
    "description": "class RetrofitService {      private val BASE_URL = \"https://jsonplaceholder.typicode.com/\"       private val loggingInterceptor = HttpLoggingInterceptor()       private val httpClient = OkHttpClient.Builder().addInterceptor(loggingInterceptor).build()      private val builder = Retrofit.Builder()         .baseUrl(BASE_URL)         .addConverterFactory(GsonConverterFactory.create())         .client(httpClient)      private val retrofit = builder.build()      init {         loggingInterceptor.level = HttpLoggingInterceptor.Level.BODY     }      fun <S> createService(         serviceClass: Class<S>     ): S {         return retrofit.create(serviceClass)     } }\nandroid {     compileOptions {         targetCompatibility = \"8\"         sourceCompatibility = \"8\"     } }\n",
    "reg_date": "2021-10-12T12:01:40.000Z"
  },
  {
    "id": 772,
    "keyword": null,
    "link": null,
    "title": " atom editor",
    "description": "good choice\natom uses js ,c++,c,etc. it is a great ide.   (help they kidnaped my family and made me say this.) joke :D\nAtom is a good editor for many coding fields, from software scripting to web development. Atom is cross platform for Window, Linux, and OSX. It's 100% free and open source. One of Atom's key selling points is its flexibility and readiness for customization.  Download Atom Editor: https://atom.io/\nNice Text Editor For Git.\nAtom is quite nice. The default One Dark theme is one of the best out of all themes on all editors. My only issue is that EVERYTHING needs a third-party package. I kid you not, just to run the code, you need to download the scripts package. Packages out of the way, it's good, and I honestly prefer Atom over VSCode.\nbest choice 11/10 if you want to use python with atom you might be set for the rest of your life\n",
    "reg_date": "2021-10-12T12:01:41.000Z"
  },
  {
    "id": 773,
    "keyword": null,
    "link": null,
    "title": " autocompletetextview in android studio",
    "description": " public class CountriesActivity extends Activity {      protected void onCreate(Bundle icicle) {          super.onCreate(icicle);          setContentView(R.layout.countries);           ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,                  android.R.layout.simple_dropdown_item_1line, COUNTRIES);          AutoCompleteTextView textView = (AutoCompleteTextView)                  findViewById(R.id.countries_list);          textView.setAdapter(adapter);      }       private static final String[] COUNTRIES = new String[] {          \"Belgium\", \"France\", \"Italy\", \"Germany\", \"Spain\"      };  }  \n",
    "reg_date": "2021-10-12T12:01:42.000Z"
  },
  {
    "id": 774,
    "keyword": null,
    "link": null,
    "title": " awk print second",
    "description": "awk -F '\"' '{print $2}' your_input_file\n",
    "reg_date": "2021-10-12T12:01:42.000Z"
  },
  {
    "id": 775,
    "keyword": null,
    "link": null,
    "title": " awt draw circle",
    "description": "public void drawCenteredCircle(Graphics2D g, int x, int y, int r) {   x = x-(r/2);   y = y-(r/2);   g.fillOval(x,y,r,r); } \n",
    "reg_date": "2021-10-12T12:01:42.000Z"
  },
  {
    "id": 776,
    "keyword": null,
    "link": null,
    "title": " balance array interviewbit",
    "description": "public class Solution {          public int solve(ArrayList<Integer> A) {                  int n = A.size();         int result = 0;         int even = 0;         int odd =0;                  for(int i = 0 ; i < A.size() ; i++){             if(i%2 == 0)                 even += A.get(i);             else                 odd += A.get(i);         }                  int keven = 0;         int kodd =0;                  for(int i = 0 ; i < A.size() ; i++){             if(i%2 == 0){                 if((even - (A.get(i)+keven) + kodd) == ((odd-kodd) + keven))                     result += 1;                 keven += A.get(i);                 }             else{                 if((odd - (A.get(i)+kodd) + keven) == (kodd + (even-keven)))                     result += 1;                 kodd += A.get(i);                 }         }                  return result;              } }\n",
    "reg_date": "2021-10-12T12:01:43.000Z"
  },
  {
    "id": 777,
    "keyword": null,
    "link": null,
    "title": " balance array interviewbit solution",
    "description": "public class Solution {          public int solve(ArrayList<Integer> A) {                  int n = A.size();         int result = 0;         int even = 0;         int odd =0;                  for(int i = 0 ; i < A.size() ; i++){             if(i%2 == 0)                 even += A.get(i);             else                 odd += A.get(i);         }                  int keven = 0;         int kodd =0;                  for(int i = 0 ; i < A.size() ; i++){             if(i%2 == 0){                 if((even - (A.get(i)+keven) + kodd) == ((odd-kodd) + keven))                     result += 1;                 keven += A.get(i);                 }             else{                 if((odd - (A.get(i)+kodd) + keven) == (kodd + (even-keven)))                     result += 1;                 kodd += A.get(i);                 }         }                  return result;              } }\n",
    "reg_date": "2021-10-12T12:01:43.000Z"
  },
  {
    "id": 778,
    "keyword": null,
    "link": null,
    "title": " base64.decode android",
    "description": "// Sending side byte[] data = text.getBytes(\"UTF-8\"); String base64 = Base64.encodeToString(data, Base64.DEFAULT);  // Receiving side byte[] data = Base64.decode(base64, Base64.DEFAULT); String text = new String(data, \"UTF-8\");\n",
    "reg_date": "2021-10-12T12:01:43.000Z"
  },
  {
    "id": 779,
    "keyword": null,
    "link": null,
    "title": " base64 in java",
    "description": "//For Strings:      //Encode:   public static String encode(String input) {        return Base64.getEncoder().encodeToString(input.getBytes());    }    //Decode:   public static String decode(String input) {        byte[] decodedBytes = Base64.getDecoder().decode(input);       return new String(decodedBytes);    }    //For Urls   //Encode:   public static String encodeURL(String input) {        return Base64.getUrlEncoder().encodeToString(input.getBytes());    }    //Decode:   public static String decodeURL(String input) {        byte[] decodedBytes = Base64.getUrlDecoder().decode(input);       return new String(decodedBytes);    }\nString originalInput = \"test input\"; String encodedString = Base64.getEncoder().encodeToString(originalInput.getBytes()); \n",
    "reg_date": "2021-10-12T12:01:43.000Z"
  },
  {
    "id": 780,
    "keyword": null,
    "link": null,
    "title": " basic hello world program in java",
    "description": "public class Main {    public static void main(String[] args) {   \tSystem.out.println(\"Hello, World!\");    }    }\nclass Simple{       public static void main(String args[]){        System.out.println(\"Hello Java\");       }   }  \n//simple hello world code for Java class HelloWorld {     public static void main(String[] args) {         System.out.println(\"Hello, World!\");      } }\nclass main {     public static void main(String[] args) {         System.out.println(\"Hello World!\");     } } \npublic class Main{public static void main(String args[]){System.out.println(\"Hello World\");}}\n",
    "reg_date": "2021-10-12T12:01:43.000Z"
  },
  {
    "id": 781,
    "keyword": null,
    "link": null,
    "title": " bat file",
    "description": "The ERRORLEVEL environment variable holds the latest return value: IF %ERRORLEVEL% NEQ 0 (   echo \"Previous command execution failed.\"   exit %ERRORLEVEL% )\n//Save it as start_dev.bat  @ECHO off cd \"C:\\xampp\" start xampp-control.exe  cd \"C:\\Users\\...\" start cmd /k \"code . && ng s -o\"   cd \"C:\\Users\\...\" start cmd /k \"code-insiders . && php artisan serve\"\n@ECHO OFF ECHO Congratulations! Your first batch file executed successfully. PAUSE \n",
    "reg_date": "2021-10-12T12:01:43.000Z"
  },
  {
    "id": 782,
    "keyword": null,
    "link": null,
    "title": " bean definition in spring",
    "description": "<?xml version = \"1.0\" encoding = \"UTF-8\"?>  <beans xmlns = \"http://www.springframework.org/schema/beans\"    xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\"    xsi:schemaLocation = \"http://www.springframework.org/schema/beans    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd\">     <!-- A simple bean definition -->    <bean id = \"...\" class = \"...\">       <!-- collaborators and configuration for this bean go here -->    </bean>     <!-- A bean definition with lazy init set on -->    <bean id = \"...\" class = \"...\" lazy-init = \"true\">       <!-- collaborators and configuration for this bean go here -->    </bean>     <!-- A bean definition with initialization method -->    <bean id = \"...\" class = \"...\" init-method = \"...\">       <!-- collaborators and configuration for this bean go here -->    </bean>     <!-- A bean definition with destruction method -->    <bean id = \"...\" class = \"...\" destroy-method = \"...\">       <!-- collaborators and configuration for this bean go here -->    </bean>     <!-- more bean definitions go here -->     </beans>\n",
    "reg_date": "2021-10-12T12:01:43.000Z"
  },
  {
    "id": 783,
    "keyword": null,
    "link": null,
    "title": " beanutils copyproperties",
    "description": "import org.springframework.beans.BeanUtils;  BeanUtils.copyProperties(source, target)\n",
    "reg_date": "2021-10-12T12:01:43.000Z"
  },
  {
    "id": 784,
    "keyword": null,
    "link": null,
    "title": " best IDE for java",
    "description": "The best IDE for java is different based on what you need, the two main ones that i see alot (and personally use) are: 1.) IntelliJ  2.) Eclipse IntelliJ is a very feature packed IDE with great addons and some great built in factors, Its only real downsides are its CPU and memory usage (There is also a paid version but the free one works just fine!) Eclipse is a very light weight IDE where almost everything is installed via addons, making it super configurable  TL;DR: If you want a feature packed IDE go IntelliJ, if you want a light weight IDE go Eclipse\n",
    "reg_date": "2021-10-12T12:01:44.000Z"
  },
  {
    "id": 785,
    "keyword": null,
    "link": null,
    "title": " best ascii art characters",
    "description": "String[] characters = new String[] {\"$\", \"@\", \"B\", \"%\", \"8\", \"&\", \"W\", \"M\", \"#\", \"*\", \"o\", \"a\", \"h\", \"k\", \"b\", \"d\", \"p\", \"q\", \"w\", \"m\", \"Z\" ,\"O\", \"0\", \"Q\", \"L\", \"C\", \"J\", \"U\", \"Y\", \"X\", \"z\", \"c\", \"v\", \"u\", \"n\", \"x\", \"r\", \"j\", \"f\", \"t\", \"/\", \"\\\\\", \"|\", \"(\", \")\", \"1\", \"{\", \"}\", \"[\", \"]\", \"?\", \"-\", \"_\", \"+\", \"~\", \"<\", \">\", \"i\", \"!\", \"l\", \"I\", \";\", \":\", \",\", \"\\\"\", \"^\", \"`\", \"'\", \".\", \" \"};\n",
    "reg_date": "2021-10-12T12:01:44.000Z"
  },
  {
    "id": 786,
    "keyword": null,
    "link": null,
    "title": " best programming language",
    "description": "ah not again! did u ever heard up of python,it is the best language.learn that!\nJava \nThere are no \"best programming language\".  Start with what you want to make and google \"best programming language for {the thing you want to create}\"\n",
    "reg_date": "2021-10-12T12:01:44.000Z"
  },
  {
    "id": 787,
    "keyword": null,
    "link": null,
    "title": " better way to check string on null and empty java",
    "description": "if(str != null && !str.isEmpty()) { /* do your stuffs here */ }\n/* You can use Apache Commons  */ StringUtils.isEmpty(str)    /* which checks for empty strings and handles null gracefully. */    /*   HINT   */   /* the shorter and simler your code, the easier it is to test it */\npublic class Null {   \tpublic static boolean isNullOrEmpty(String str) {         if(str != null && !str.isEmpty())             return false;         return true;     } }\nif(str != null && !str.isEmpty()) Be sure to use the parts of && in this order, because java will not proceed to evaluate the second part if the first part of && fails, thus ensuring you will not get a null pointer exception from str.isEmpty() if str is null.\n",
    "reg_date": "2021-10-12T12:01:44.000Z"
  },
  {
    "id": 788,
    "keyword": null,
    "link": null,
    "title": " bfs solutions java",
    "description": "# tree level-by-level traversal. O(n) time/space def breadthFirstSearch(root):     q = [root]      while q:         current = q.pop(0)         print(current)         if current.left is not None: q.append(current.left)         if current.right is not None: q.append(current.right)\npackage com.javaaid.hackerrank.solutions.tutorials.ctci;  import java.util.ArrayList; import java.util.LinkedList; import java.util.Queue; import java.util.Scanner; import java.util.Stack;  class Graph {    private final int V;   private int E;   private ArrayList<Integer>[] adj;    Graph(int V) {     adj = (ArrayList<Integer>[]) new ArrayList[V + 1];     this.V = V;     this.E = 0;     for (int v = 1; v <= V; v++) adj[v] = new ArrayList<Integer>(V);   }    Graph(Scanner in) {     this(in.nextInt());     int E = in.nextInt();     for (int i = 0; i < E; i++) {       int v = in.nextInt();       int w = in.nextInt();       addEdge(v, w);     }   }    public int V() {     return V;   }    public int E() {     return E;   }    public void addEdge(int v, int w) {     adj[v].add(w);     adj[w].add(v);     E++;   }    public Iterable<Integer> adj(int v) {     return adj[v];   } }  class BreadthFirstPaths {    private int s;   private boolean marked[];   private int edgeTo[];    BreadthFirstPaths(Graph G, int s) {     marked = new boolean[G.V() + 1];     this.s = s;     edgeTo = new int[G.V() + 1];     bfs(G, s);   }    private void bfs(Graph G, int s) {     Queue<Integer> q = (Queue<Integer>) new LinkedList<Integer>();     q.add(s);     while (!q.isEmpty()) {       int v = q.poll();       marked[v] = true;       for (int w : G.adj(v)) {         if (!marked[w]) {           marked[w] = true;           edgeTo[w] = v;           q.add(w);         }       }     }   }    public Iterable<Integer> pathTo(int v) {     if (!hasPathTo(v)) return null;     Stack<Integer> path = new Stack<Integer>();     for (int x = v; x != s; x = edgeTo[x]) path.push(x);     path.push(s);     return path;   }    public boolean hasPathTo(int v) {     return marked[v];   } }  public class BFSShortestReachInAGraph {    public static void main(String[] args) {     Scanner sc = new Scanner(System.in);     int q = sc.nextInt();     for (int i = 0; i < q; i++) {       Graph G = new Graph(sc);       int s = sc.nextInt();       BreadthFirstPaths bfp = new BreadthFirstPaths(G, s);       for (int v = 1; v <= G.V(); v++) {         if (s != v) {           if (bfp.hasPathTo(v)) {             Stack<Integer> st = (Stack<Integer>) bfp.pathTo(v);             int sum = 0;             for (int x = 1; x < st.size(); x++) {               sum += 6;             }             System.out.print(sum + \" \");           } else {             System.out.print(-1 + \" \");           }         }       }       System.out.println();       sc.close();     }   } } \n#include<iostream> #include <list>   using namespace std;     class Graph {     int V;             list<int> *adj;    public:     Graph(int V);              void addEdge(int v, int w);             void BFS(int s);   };   Graph::Graph(int V) {     this->V = V;     adj = new list<int>[V]; }   void Graph::addEdge(int v, int w) {     adj[v].push_back(w);  }   void Graph::BFS(int s) {        bool *visited = new bool[V];     for(int i = 0; i < V; i++)         visited[i] = false;           list<int> queue;           visited[s] = true;     queue.push_back(s);           list<int>::iterator i;       while(!queue.empty())     {                 s = queue.front();         cout << s << \" \";         queue.pop_front();                  for (i = adj[s].begin(); i != adj[s].end(); ++i)         {             if (!visited[*i])             {                 visited[*i] = true;                 queue.push_back(*i);             }         }     } }    int main() {          Graph g(4);     g.addEdge(0, 1);     g.addEdge(0, 2);     g.addEdge(1, 2);     g.addEdge(2, 0);     g.addEdge(2, 3);     g.addEdge(3, 3);       cout << \"Following is Breadth First Traversal \"          << \"(starting from vertex 2) \\n\";     g.BFS(2);       return 0; }\n",
    "reg_date": "2021-10-12T12:01:44.000Z"
  },
  {
    "id": 789,
    "keyword": null,
    "link": null,
    "title": " bigdecimal divide java",
    "description": "        BigDecimal mark1 = new BigDecimal(\"78\");         BigDecimal total = new BigDecimal(\"100\");         BigDecimal c = mark1.divide(total, 2, RoundingMode.HALF_UP);\n",
    "reg_date": "2021-10-12T12:01:44.000Z"
  },
  {
    "id": 790,
    "keyword": null,
    "link": null,
    "title": " bigdecimal to string",
    "description": "BigDecimal bigDecimal = new BigDecimal(\"10.0001\"); String bigDecimalString = String.valueOf(bigDecimal.doubleValue()); System.out.println(\"bigDecimal value in String: \"+bigDecimalString);\n",
    "reg_date": "2021-10-12T12:01:45.000Z"
  },
  {
    "id": 791,
    "keyword": null,
    "link": null,
    "title": " binary number input in int java",
    "description": "Integer.toBinaryString(int i)\n",
    "reg_date": "2021-10-12T12:01:45.000Z"
  },
  {
    "id": 792,
    "keyword": null,
    "link": null,
    "title": " binary numbers java",
    "description": "int binaryNumber = 0b1001;      //binaryNumber == 9\n",
    "reg_date": "2021-10-12T12:01:45.000Z"
  },
  {
    "id": 793,
    "keyword": null,
    "link": null,
    "title": " binary search arraylist algorithm",
    "description": "public static int binarySearch(int[] elements, int target) {       int left = 0;       int right = elements.length - 1;       while (left <= right)       {          int middle = (left + right) / 2;          if (target < elements[middle])          {             right = middle - 1;          }          else if (target > elements[middle])          {             left = middle + 1;          }          else {             return middle;          }        }        return -1;    }\n",
    "reg_date": "2021-10-12T12:01:45.000Z"
  },
  {
    "id": 794,
    "keyword": null,
    "link": null,
    "title": " binary search java",
    "description": "// Java implementation of iterative Binary Search  class BinarySearch {  \t// Returns index of x if it is present in arr[],  \t// else return -1  \tint binarySearch(int arr[], int x)  \t{  \t\tint l = 0, r = arr.length - 1;  \t\twhile (l <= r) {  \t\t\tint m = l + (r - l) / 2;   \t\t\t// Check if x is present at mid  \t\t\tif (arr[m] == x)  \t\t\t\treturn m;   \t\t\t// If x greater, ignore left half  \t\t\tif (arr[m] < x)  \t\t\t\tl = m + 1;   \t\t\t// If x is smaller, ignore right half  \t\t\telse \t\t\t\tr = m - 1;  \t\t}   \t\t// if we reach here, then element was  \t\t// not present  \t\treturn -1;  \t}   \t// Driver method to test above  \tpublic static void main(String args[])  \t{  \t\tBinarySearch ob = new BinarySearch();  \t\tint arr[] = { 2, 3, 4, 10, 40 };  \t\tint n = arr.length;  \t\tint x = 10;  \t\tint result = ob.binarySearch(arr, x);  \t\tif (result == -1)  \t\t\tSystem.out.println(\"Element not present\");  \t\telse \t\t\tSystem.out.println(\"Element found at \" \t\t\t\t\t\t\t+ \"index \" + result);  \t}  } \npublic class Main{ public static void binarySearch(int arr[], int a, int b, int key){ int mid = (a + b)/2; while( a <= b ){ if ( arr[mid] < key ){ a = mid + 1; }else if ( arr[mid] == key ){ System.out.println(\"number is here \" + mid); break; }else{ b = mid - 1; } mid = (a + b)/2; } if ( a > b ){ System.out.println(\"number not here\"); } } public static void main(String args[]){ int arr[] = {10,20,30,40,50}; int key = 30; int b=arr.length-1; binarySearch(arr,0,b,key); } } \npublic int runBinarySearchRecursively(   int[] sortedArray, int key, int low, int high) {     int middle = (low + high) / 2;              if (high < low) {         return -1;     }      if (key == sortedArray[middle]) {         return middle;     } else if (key < sortedArray[middle]) {         return runBinarySearchRecursively(           sortedArray, key, low, middle - 1);     } else {         return runBinarySearchRecursively(           sortedArray, key, middle + 1, high);     } } \nbinary search program in java. public class BinarySearchExample {    public static void binarySearch(int[] arrNumbers, int start, int end, int keyElement)    {       int middle = (start + end) / 2;       while(start <= end)       {          if(arrNumbers[middle] < keyElement)          {             start = middle + 1;          }          else if(arrNumbers[middle] == keyElement)          {             System.out.println(\"Element found at index: \" + middle);             break;          }          else          {             end = middle - 1;          }          middle = (start + end) / 2;       }       if(start > end)       {          System.out.println(\"Element not found!\");       }    }    public static void main(String[] args)    {       int[] arrNumbers = {14,15,16,17,18};       int keyElement = 16;       int end = arrNumbers.length - 1;       binarySearch(arrNumbers, 0, end, keyElement);    } }\nimport java.util.Scanner;  // Binary Search in Java  class Main {   int binarySearch(int array[], int element, int low, int high) {      // Repeat until the pointers low and high meet each other     while (low <= high) {        // get index of mid element       int mid = low + (high - low) / 2;        // if element to be searched is the mid element       if (array[mid] == element)         return mid;        // if element is less than mid element       // search only the left side of mid       if (array[mid] < element)         low = mid + 1;        // if element is greater than mid element       // search only the right side of mid       else         high = mid - 1;     }      return -1;   }    public static void main(String args[]) {      // create an object of Main class     Main obj = new Main();      // create a sorted array     int[] array = { 3, 4, 5, 6, 7, 8, 9 };     int n = array.length;      // get input from user for element to be searched     Scanner input = new Scanner(System.in);      System.out.println(\"Enter element to be searched:\");      // element to be searched     int element = input.nextInt();     input.close();      // call the binary search method     // pass arguments: array, element, index of first and last element     int result = obj.binarySearch(array, element, 0, n - 1);     if (result == -1)       System.out.println(\"Not found\");     else       System.out.println(\"Element found at index \" + result);   } }\n// Returns index of key in sorted list sorted in // ascending order public static int binarySearch(List slist, T key)  // Returns index of key in sorted list sorted in // order defined by Comparator c. public static int binarySearch(List slist, T key, Comparator c)  If key is not present, the it returns \"(-(insertion point) - 1)\".  The insertion point is defined as the point at which the key  would be inserted into the list.\n",
    "reg_date": "2021-10-12T12:01:45.000Z"
  },
  {
    "id": 795,
    "keyword": null,
    "link": null,
    "title": " binary search program in java",
    "description": "// Java implementation of iterative Binary Search  class BinarySearch {  \t// Returns index of x if it is present in arr[],  \t// else return -1  \tint binarySearch(int arr[], int x)  \t{  \t\tint l = 0, r = arr.length - 1;  \t\twhile (l <= r) {  \t\t\tint m = l + (r - l) / 2;   \t\t\t// Check if x is present at mid  \t\t\tif (arr[m] == x)  \t\t\t\treturn m;   \t\t\t// If x greater, ignore left half  \t\t\tif (arr[m] < x)  \t\t\t\tl = m + 1;   \t\t\t// If x is smaller, ignore right half  \t\t\telse \t\t\t\tr = m - 1;  \t\t}   \t\t// if we reach here, then element was  \t\t// not present  \t\treturn -1;  \t}   \t// Driver method to test above  \tpublic static void main(String args[])  \t{  \t\tBinarySearch ob = new BinarySearch();  \t\tint arr[] = { 2, 3, 4, 10, 40 };  \t\tint n = arr.length;  \t\tint x = 10;  \t\tint result = ob.binarySearch(arr, x);  \t\tif (result == -1)  \t\t\tSystem.out.println(\"Element not present\");  \t\telse \t\t\tSystem.out.println(\"Element found at \" \t\t\t\t\t\t\t+ \"index \" + result);  \t}  } \npublic class Main{ public static void binarySearch(int arr[], int a, int b, int key){ int mid = (a + b)/2; while( a <= b ){ if ( arr[mid] < key ){ a = mid + 1; }else if ( arr[mid] == key ){ System.out.println(\"number is here \" + mid); break; }else{ b = mid - 1; } mid = (a + b)/2; } if ( a > b ){ System.out.println(\"number not here\"); } } public static void main(String args[]){ int arr[] = {10,20,30,40,50}; int key = 30; int b=arr.length-1; binarySearch(arr,0,b,key); } } \npublic int runBinarySearchRecursively(   int[] sortedArray, int key, int low, int high) {     int middle = (low + high) / 2;              if (high < low) {         return -1;     }      if (key == sortedArray[middle]) {         return middle;     } else if (key < sortedArray[middle]) {         return runBinarySearchRecursively(           sortedArray, key, low, middle - 1);     } else {         return runBinarySearchRecursively(           sortedArray, key, middle + 1, high);     } } \nbinary search program in java. public class BinarySearchExample {    public static void binarySearch(int[] arrNumbers, int start, int end, int keyElement)    {       int middle = (start + end) / 2;       while(start <= end)       {          if(arrNumbers[middle] < keyElement)          {             start = middle + 1;          }          else if(arrNumbers[middle] == keyElement)          {             System.out.println(\"Element found at index: \" + middle);             break;          }          else          {             end = middle - 1;          }          middle = (start + end) / 2;       }       if(start > end)       {          System.out.println(\"Element not found!\");       }    }    public static void main(String[] args)    {       int[] arrNumbers = {14,15,16,17,18};       int keyElement = 16;       int end = arrNumbers.length - 1;       binarySearch(arrNumbers, 0, end, keyElement);    } }\nimport java.util.Scanner;  // Binary Search in Java  class Main {   int binarySearch(int array[], int element, int low, int high) {      // Repeat until the pointers low and high meet each other     while (low <= high) {        // get index of mid element       int mid = low + (high - low) / 2;        // if element to be searched is the mid element       if (array[mid] == element)         return mid;        // if element is less than mid element       // search only the left side of mid       if (array[mid] < element)         low = mid + 1;        // if element is greater than mid element       // search only the right side of mid       else         high = mid - 1;     }      return -1;   }    public static void main(String args[]) {      // create an object of Main class     Main obj = new Main();      // create a sorted array     int[] array = { 3, 4, 5, 6, 7, 8, 9 };     int n = array.length;      // get input from user for element to be searched     Scanner input = new Scanner(System.in);      System.out.println(\"Enter element to be searched:\");      // element to be searched     int element = input.nextInt();     input.close();      // call the binary search method     // pass arguments: array, element, index of first and last element     int result = obj.binarySearch(array, element, 0, n - 1);     if (result == -1)       System.out.println(\"Not found\");     else       System.out.println(\"Element found at index \" + result);   } }\n// Returns index of key in sorted list sorted in // ascending order public static int binarySearch(List slist, T key)  // Returns index of key in sorted list sorted in // order defined by Comparator c. public static int binarySearch(List slist, T key, Comparator c)  If key is not present, the it returns \"(-(insertion point) - 1)\".  The insertion point is defined as the point at which the key  would be inserted into the list.\n",
    "reg_date": "2021-10-12T12:01:45.000Z"
  },
  {
    "id": 796,
    "keyword": null,
    "link": null,
    "title": " binary search tree insert java",
    "description": "public static Node insert(Node root, int x){     if (root == null)         return new Node(x);     else if(x>root.getData())         root.setRightChild(insert(root.getRightChild(),x));     else         root.setLeftChild(insert(root.getLeftChild(),x));     return root; } \nvoid BSNode::insert(std::string value) {  \tif (this->_data == value) { \t\t_count++; \t\treturn; \t}  \tif (this->_data > value) { \t\tif (this->getLeft() == nullptr) { \t\t\tthis->_left = new BSNode(value); \t\t} \t\tthis->getLeft()->insert(value); \t\treturn; \t}  \tif (this->getRight() == nullptr) { \t\tthis->_right = new BSNode(value); \t\treturn; \t} \tthis->getRight()->insert(value); }\n",
    "reg_date": "2021-10-12T12:01:46.000Z"
  },
  {
    "id": 797,
    "keyword": null,
    "link": null,
    "title": " binary string to int java",
    "description": "System.out.println(Integer.parseInt(\"1010\",2));  \nint decimal=Integer.parseInt(binaryString,2);\nint foo = Integer.parseInt(\"1001\", 2); // 2 is the radix\n",
    "reg_date": "2021-10-12T12:01:46.000Z"
  },
  {
    "id": 798,
    "keyword": null,
    "link": null,
    "title": " binary to decimal in java program",
    "description": "System.out.println(Integer.parseInt(\"1010\",2));  \nimport java.util.Scanner; public class BinaryToDecimalDemo  {    public static void main(String[] args)     {       int number, decimal = 0, a = 0;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter binary number: \");       String strBinary = sc.nextLine();       number = Integer.parseInt(strBinary);       while(number != 0){          decimal += (number % 10) * Math.pow(2, a);          number = number / 10;          a++;       }       System.out.println(\"Decimal number: \" + decimal);       sc.close();    } }\npublic class Details {     public int BinaryToDecimal(int binaryNumber){       int decimal = 0;     int p = 0;     while(true){       if(binaryNumber == 0){         break;       } else {           int temp = binaryNumber\u0010;           decimal += temp*Math.pow(2, p);           binaryNumber = binaryNumber/10;           p++;        }     }     return decimal;   }     public static void main(String args[]){     Details obj = new Details();     System.out.println(\"110 --> \"+obj.BinaryToDecimal(110));     System.out.println(\"1101 --> \"+obj.BinaryToDecimal(1101));     System.out.println(\"100 --> \"+obj.BinaryToDecimal(100));     System.out.println(\"110111 --> \"+obj.BinaryToDecimal(110111));   } }\nint foo = Integer.parseInt(\"1001\", 2); // 2 is the radix\nimport java.util.Scanner; class BinaryToDecimal {     public static void main(String args[]){        Scanner input = new Scanner( System.in );        System.out.print(\"Enter a binary number: \");        String binaryString =input.nextLine();        System.out.println(\"Output: \"+Integer.parseInt(binaryString,2));     } }\n",
    "reg_date": "2021-10-12T12:01:46.000Z"
  },
  {
    "id": 799,
    "keyword": null,
    "link": null,
    "title": " binary to hexadecimal in java",
    "description": "import java.util.Scanner; public class BinaryToHexadecimalJava {    public static void main(String[] args)    {       int[] hexaDecimal = new int[1000];       int a = 1, b = 0, r, decimal = 0, binary;       Scanner sc = new Scanner(System.in);       System.out.print(\"Please enter binary number: \");       binary = sc.nextInt();       while(binary > 0)       {          r = binary % 2;          decimal = decimal + r * a;          a = a * 2;          binary = binary / 10;       }       a = 0;       while(decimal != 0)       {          hexaDecimal[a] = decimal % 16;          decimal = decimal / 16;          a++;       }       System.out.print(\"Equivalent hexadecimal value is: \");       for(b = a - 1; b >= 0; b--)       {          if(hexaDecimal[b] > 9)          {             System.out.print((char)(hexaDecimal[b] + 55) + \"\\n\");          }          else          {             System.out.print(hexaDecimal[b] + \"\\n\");          }       }       sc.close();    } }\nint foo = Integer.parseInt(\"1001\", 2); // 2 is the radix\n",
    "reg_date": "2021-10-12T12:01:46.000Z"
  },
  {
    "id": 800,
    "keyword": null,
    "link": null,
    "title": " binary to int java",
    "description": "System.out.println(Integer.parseInt(\"1010\",2));  \nint decimal=Integer.parseInt(binaryString,2);\nimport java.util.Scanner; public class BinaryToDecimalDemo  {    public static void main(String[] args)     {       int number, decimal = 0, a = 0;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter binary number: \");       String strBinary = sc.nextLine();       number = Integer.parseInt(strBinary);       while(number != 0){          decimal += (number % 10) * Math.pow(2, a);          number = number / 10;          a++;       }       System.out.println(\"Decimal number: \" + decimal);       sc.close();    } }\npublic class Details {     public int BinaryToDecimal(int binaryNumber){       int decimal = 0;     int p = 0;     while(true){       if(binaryNumber == 0){         break;       } else {           int temp = binaryNumber\u0010;           decimal += temp*Math.pow(2, p);           binaryNumber = binaryNumber/10;           p++;        }     }     return decimal;   }     public static void main(String args[]){     Details obj = new Details();     System.out.println(\"110 --> \"+obj.BinaryToDecimal(110));     System.out.println(\"1101 --> \"+obj.BinaryToDecimal(1101));     System.out.println(\"100 --> \"+obj.BinaryToDecimal(100));     System.out.println(\"110111 --> \"+obj.BinaryToDecimal(110111));   } }\nint foo = Integer.parseInt(\"1001\", 2); // 2 is the radix\nimport java.util.Scanner; class BinaryToDecimal {     public static void main(String args[]){        Scanner input = new Scanner( System.in );        System.out.print(\"Enter a binary number: \");        String binaryString =input.nextLine();        System.out.println(\"Output: \"+Integer.parseInt(binaryString,2));     } }\n",
    "reg_date": "2021-10-12T12:01:46.000Z"
  },
  {
    "id": 801,
    "keyword": null,
    "link": null,
    "title": " binary to integer in java",
    "description": "System.out.println(Integer.parseInt(\"1010\",2));  \nint decimal=Integer.parseInt(binaryString,2);\nimport java.util.Scanner; public class BinaryToDecimalDemo  {    public static void main(String[] args)     {       int number, decimal = 0, a = 0;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter binary number: \");       String strBinary = sc.nextLine();       number = Integer.parseInt(strBinary);       while(number != 0){          decimal += (number % 10) * Math.pow(2, a);          number = number / 10;          a++;       }       System.out.println(\"Decimal number: \" + decimal);       sc.close();    } }\npublic class Details {     public int BinaryToDecimal(int binaryNumber){       int decimal = 0;     int p = 0;     while(true){       if(binaryNumber == 0){         break;       } else {           int temp = binaryNumber\u0010;           decimal += temp*Math.pow(2, p);           binaryNumber = binaryNumber/10;           p++;        }     }     return decimal;   }     public static void main(String args[]){     Details obj = new Details();     System.out.println(\"110 --> \"+obj.BinaryToDecimal(110));     System.out.println(\"1101 --> \"+obj.BinaryToDecimal(1101));     System.out.println(\"100 --> \"+obj.BinaryToDecimal(100));     System.out.println(\"110111 --> \"+obj.BinaryToDecimal(110111));   } }\nint foo = Integer.parseInt(\"1001\", 2); // 2 is the radix\nimport java.util.Scanner; class BinaryToDecimal {     public static void main(String args[]){        Scanner input = new Scanner( System.in );        System.out.print(\"Enter a binary number: \");        String binaryString =input.nextLine();        System.out.println(\"Output: \"+Integer.parseInt(binaryString,2));     } }\n",
    "reg_date": "2021-10-12T12:01:46.000Z"
  },
  {
    "id": 802,
    "keyword": null,
    "link": null,
    "title": " binary to octal in java",
    "description": "public class UsingtoOctalStringMethod {    public static void main(String[] args)    {       String strNumber = \"100101\";       int binary = Integer.parseInt(strNumber, 2);       String strOctal = Integer.toOctalString(binary);       System.out.println(\"Octal value is: \" + strOctal);    } }\nimport java.util.Scanner; public class OctalToBinaryJava {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter octal number: \");       int octal = Integer.parseInt(sc.nextLine(), 8);       String strBinary = Integer.toBinaryString(octal);       System.out.println(\"Binary value is: \" + strBinary);       sc.close();    } }\npublic class BinaryToOctal {    public static void main(String[] args)    {       long binaryNumber = 1010111;       int octalNumber = convertToOctal(binaryNumber);       System.out.println(binaryNumber + \" in binary is equal to \" + octalNumber + \" in octal.\");    }    public static int convertToOctal(long binaryNumber)    {       int octal = 0, decimal = 0, a = 0;       while(binaryNumber != 0)       {          decimal += (binaryNumber % 10) * Math.pow(2, a);          ++a;          binaryNumber /= 10;       }       a = 1;       while(decimal != 0)       {          octal += (decimal % 8) * a;          decimal /= 8;          a *= 10;       }       return octal;    } }\n// conversion of binary to octal in java.. public class Main{     public static void main(String args[]) throws Exception{         String binary = \"1100100\";                // binary number..          int decimal = Integer.parseInt(binary,2); // converting binary to decimal         System.out.println(Integer.toOctalString(decimal)); // 144 <= octal output..       } }\n",
    "reg_date": "2021-10-12T12:01:47.000Z"
  },
  {
    "id": 803,
    "keyword": null,
    "link": null,
    "title": " binding fragment android",
    "description": "example:  public View onCreateView(LayoutInflater inflater,                           @Nullable ViewGroup container,                           @Nullable Bundle savedInstanceState) {     MartianDataBinding binding = DataBindingUtil.inflate(             inflater, R.layout.martian_data, container, false);     View view = binding.getRoot();     //here data must be an instance of the class MarsDataProvider     binding.setMarsdata(data);     return view; } \n",
    "reg_date": "2021-10-12T12:01:47.000Z"
  },
  {
    "id": 804,
    "keyword": null,
    "link": null,
    "title": " blurview android github",
    "description": "implementation 'com.eightbitlab:blurview:1.6.3'\n",
    "reg_date": "2021-10-12T12:01:47.000Z"
  },
  {
    "id": 805,
    "keyword": null,
    "link": null,
    "title": " bool in java",
    "description": "class App {  public static void main(String[] args) {   // The boolean keyword is for creating a variable with boolean data type.    boolean result = true;    System.out.println(result);  } }\n javaCopypublic class booleanMethod {        public static boolean isEven(int mynumber)     {         return (mynumber % 2 == 0);     }      public static void main(String[] args)     {         int mynumber = 130;         if(isEven(mynumber) == true)             System.out.print(\"Even Number\");         else             System.out.print(\"Odd Number\");     } } \n",
    "reg_date": "2021-10-12T12:01:47.000Z"
  },
  {
    "id": 806,
    "keyword": null,
    "link": null,
    "title": " boootstrap alerts",
    "description": "<div class=\"alert alert-primary\" role=\"alert\">   This is a primary alert&mdash;check it out! </div> <div class=\"alert alert-secondary\" role=\"alert\">   This is a secondary alert&mdash;check it out! </div> <div class=\"alert alert-success\" role=\"alert\">   This is a success alert&mdash;check it out! </div> <div class=\"alert alert-danger\" role=\"alert\">   This is a danger alert&mdash;check it out! </div> <div class=\"alert alert-warning\" role=\"alert\">   This is a warning alert&mdash;check it out! </div> <div class=\"alert alert-info\" role=\"alert\">   This is a info alert&mdash;check it out! </div> <div class=\"alert alert-light\" role=\"alert\">   This is a light alert&mdash;check it out! </div> <div class=\"alert alert-dark\" role=\"alert\">   This is a dark alert&mdash;check it out! </div>\nAlerts are available for any length of text, as well as an optional dismiss button. For proper styling, use one of the eight required contextual classes (e.g., .alert-success). For inline dismissal, use the alerts jQuery plugin.  <div class=\"alert alert-primary\" role=\"alert\">   A simple primary alert&mdash;check it out! </div> <div class=\"alert alert-secondary\" role=\"alert\">   A simple secondary alert&mdash;check it out! </div> <div class=\"alert alert-success\" role=\"alert\">   A simple success alert&mdash;check it out! </div> <div class=\"alert alert-danger\" role=\"alert\">   A simple danger alert&mdash;check it out! </div> <div class=\"alert alert-warning\" role=\"alert\">   A simple warning alert&mdash;check it out! </div> <div class=\"alert alert-info\" role=\"alert\">   A simple info alert&mdash;check it out! </div> <div class=\"alert alert-light\" role=\"alert\">   A simple light alert&mdash;check it out! </div> <div class=\"alert alert-dark\" role=\"alert\">   A simple dark alert&mdash;check it out! </div>  <div class=\"alert alert-primary\" role=\"alert\">   A simple primary alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div> <div class=\"alert alert-secondary\" role=\"alert\">   A simple secondary alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div> <div class=\"alert alert-success\" role=\"alert\">   A simple success alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div> <div class=\"alert alert-danger\" role=\"alert\">   A simple danger alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div> <div class=\"alert alert-warning\" role=\"alert\">   A simple warning alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div> <div class=\"alert alert-info\" role=\"alert\">   A simple info alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div> <div class=\"alert alert-light\" role=\"alert\">   A simple light alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div> <div class=\"alert alert-dark\" role=\"alert\">   A simple dark alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div>\n",
    "reg_date": "2021-10-12T12:01:48.000Z"
  },
  {
    "id": 807,
    "keyword": null,
    "link": null,
    "title": " bootstrap alert",
    "description": "<div class=\"alert alert-primary\" role=\"alert\">   This is a primary alert&mdash;check it out! </div> <div class=\"alert alert-secondary\" role=\"alert\">   This is a secondary alert&mdash;check it out! </div> <div class=\"alert alert-success\" role=\"alert\">   This is a success alert&mdash;check it out! </div> <div class=\"alert alert-danger\" role=\"alert\">   This is a danger alert&mdash;check it out! </div> <div class=\"alert alert-warning\" role=\"alert\">   This is a warning alert&mdash;check it out! </div> <div class=\"alert alert-info\" role=\"alert\">   This is a info alert&mdash;check it out! </div> <div class=\"alert alert-light\" role=\"alert\">   This is a light alert&mdash;check it out! </div> <div class=\"alert alert-dark\" role=\"alert\">   This is a dark alert&mdash;check it out! </div>\n<div class=\"alert alert-primary\" role=\"alert\">   This is a primary alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div> <div class=\"alert alert-secondary\" role=\"alert\">   This is a secondary alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div> <div class=\"alert alert-success\" role=\"alert\">   This is a success alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div> <div class=\"alert alert-danger\" role=\"alert\">   This is a danger alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div> <div class=\"alert alert-warning\" role=\"alert\">   This is a warning alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div> <div class=\"alert alert-info\" role=\"alert\">   This is a info alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div> <div class=\"alert alert-light\" role=\"alert\">   This is a light alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div> <div class=\"alert alert-dark\" role=\"alert\">   This is a dark alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div>\n<div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">   <strong>Holy guacamole!</strong> You should check in on some of those fields below.   <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">     <span aria-hidden=\"true\">&times;</span>   </button> </div>\n<div class=\"alert alert-primary\" role=\"alert\">   A simple primary alert&mdash;check it out! </div> <div class=\"alert alert-secondary\" role=\"alert\">   A simple secondary alert&mdash;check it out! </div> <div class=\"alert alert-success\" role=\"alert\">   A simple success alert&mdash;check it out! </div> <div class=\"alert alert-danger\" role=\"alert\">   A simple danger alert&mdash;check it out! </div> <div class=\"alert alert-warning\" role=\"alert\">   A simple warning alert&mdash;check it out! </div> <div class=\"alert alert-info\" role=\"alert\">   A simple info alert&mdash;check it out! </div> <div class=\"alert alert-light\" role=\"alert\">   A simple light alert&mdash;check it out! </div> <div class=\"alert alert-dark\" role=\"alert\">   A simple dark alert&mdash;check it out! </div>\n<div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">   <strong>Holy guacamole!</strong> You should check in on some of those fields below.   <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">     <span aria-hidden=\"true\">&times;</span>   </button> </div>\n  <div class=\"alert alert-success\">   <strong>Success!</strong> You should <a href=\"#\" class=\"alert-link\">read this message</a>. </div>  \n",
    "reg_date": "2021-10-12T12:01:48.000Z"
  },
  {
    "id": 808,
    "keyword": null,
    "link": null,
    "title": " bootstrap button bigger",
    "description": "Fancy larger or smaller buttons? Add .btn-lg or .btn-sm for additional sizes. <button type=\"button\" class=\"btn btn-primary btn-lg\">Large button</button> <button type=\"button\" class=\"btn btn-secondary btn-lg\">Large button</button>  <button type=\"button\" class=\"btn btn-primary btn-sm\">Small button</button> <button type=\"button\" class=\"btn btn-secondary btn-sm\">Small button</button>  <button type=\"button\" class=\"btn btn-primary btn-lg btn-block\">Block level button</button> <button type=\"button\" class=\"btn btn-secondary btn-lg btn-block\">Block level button</button>  <a href=\"#\" class=\"btn btn-primary btn-lg active\" role=\"button\" aria-pressed=\"true\">Primary link</a> <a href=\"#\" class=\"btn btn-secondary btn-lg active\" role=\"button\" aria-pressed=\"true\">Link</a>\n<button type=\"button\" class=\"btn btn-primary btn-lg\">Large button</button> <button type=\"button\" class=\"btn btn-secondary btn-lg\">Large button</button>\n",
    "reg_date": "2021-10-12T12:01:48.000Z"
  },
  {
    "id": 809,
    "keyword": null,
    "link": null,
    "title": " bootstrap center text vertically",
    "description": "<div class=&rdquo;row&rdquo;> \t<div class=&rdquo;col-6 align-self-center&rdquo;>     \t<div class=&rdquo;card card-block&rdquo;>     \t\tCenter         </div>     </div> </div>\n<div class=\"jumbotron d-flex align-items-center min-vh-100\">   <div class=\"container text-center\">     I am centered vertically   </div> </div> \n<div class=\"my-auto\">   ...inner divs and content... </div>\n<div class=\"container h-100\">     <div class=\"row align-items-center h-100\">         <div class=\"col-6 mx-auto\">             <div class=\"jumbotron\">                 I'm vertically centered             </div>         </div>     </div> </div> \n",
    "reg_date": "2021-10-12T12:01:48.000Z"
  },
  {
    "id": 810,
    "keyword": null,
    "link": null,
    "title": " bootstrap errors",
    "description": "<div class=\"alert alert-primary\" role=\"alert\">   This is a primary alert&mdash;check it out! </div> <div class=\"alert alert-secondary\" role=\"alert\">   This is a secondary alert&mdash;check it out! </div> <div class=\"alert alert-success\" role=\"alert\">   This is a success alert&mdash;check it out! </div> <div class=\"alert alert-danger\" role=\"alert\">   This is a danger alert&mdash;check it out! </div> <div class=\"alert alert-warning\" role=\"alert\">   This is a warning alert&mdash;check it out! </div> <div class=\"alert alert-info\" role=\"alert\">   This is a info alert&mdash;check it out! </div> <div class=\"alert alert-light\" role=\"alert\">   This is a light alert&mdash;check it out! </div> <div class=\"alert alert-dark\" role=\"alert\">   This is a dark alert&mdash;check it out! </div>\n<div class=\"alert alert-primary\" role=\"alert\">   This is a primary alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div> <div class=\"alert alert-secondary\" role=\"alert\">   This is a secondary alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div> <div class=\"alert alert-success\" role=\"alert\">   This is a success alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div> <div class=\"alert alert-danger\" role=\"alert\">   This is a danger alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div> <div class=\"alert alert-warning\" role=\"alert\">   This is a warning alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div> <div class=\"alert alert-info\" role=\"alert\">   This is a info alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div> <div class=\"alert alert-light\" role=\"alert\">   This is a light alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div> <div class=\"alert alert-dark\" role=\"alert\">   This is a dark alert with <a href=\"#\" class=\"alert-link\">an example link</a>. Give it a click if you like. </div>\n<div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">   <strong>Holy guacamole!</strong> You should check in on some of those fields below.   <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">     <span aria-hidden=\"true\">&times;</span>   </button> </div>\n",
    "reg_date": "2021-10-12T12:01:49.000Z"
  },
  {
    "id": 811,
    "keyword": null,
    "link": null,
    "title": " bootstrap messages red",
    "description": "<div class=\"alert alert-primary\" role=\"alert\">   This is a primary alert&mdash;check it out! </div> <div class=\"alert alert-secondary\" role=\"alert\">   This is a secondary alert&mdash;check it out! </div> <div class=\"alert alert-success\" role=\"alert\">   This is a success alert&mdash;check it out! </div> <div class=\"alert alert-danger\" role=\"alert\">   This is a danger alert&mdash;check it out! </div> <div class=\"alert alert-warning\" role=\"alert\">   This is a warning alert&mdash;check it out! </div> <div class=\"alert alert-info\" role=\"alert\">   This is a info alert&mdash;check it out! </div> <div class=\"alert alert-light\" role=\"alert\">   This is a light alert&mdash;check it out! </div> <div class=\"alert alert-dark\" role=\"alert\">   This is a dark alert&mdash;check it out! </div>\n",
    "reg_date": "2021-10-12T12:01:49.000Z"
  },
  {
    "id": 812,
    "keyword": null,
    "link": null,
    "title": " bouble to bytes[] java",
    "description": "double num; byte[] bytes = String.valueOf(num).getBytes();\n",
    "reg_date": "2021-10-12T12:01:49.000Z"
  },
  {
    "id": 813,
    "keyword": null,
    "link": null,
    "title": " boucles java",
    "description": "while(/*condition*/){  //action  }  do{  //action   }while(/*condition*/);  for(int i = 0; /*condition*/; i++){    }  String[] array = new String[]{\"1\",\"2\",\"3\"}; for(String value:array){   //action }\n",
    "reg_date": "2021-10-12T12:01:49.000Z"
  },
  {
    "id": 814,
    "keyword": null,
    "link": null,
    "title": " boxing and unboxing in java",
    "description": "Autoboxing is the automatic conversion that the Java compiler makes between the primitive types and their corresponding object wrapper classes. For example, converting an int to an Integer, a double to a Double, and so on. If the conversion goes the other way, this is called unboxing.\n",
    "reg_date": "2021-10-12T12:01:49.000Z"
  },
  {
    "id": 815,
    "keyword": null,
    "link": null,
    "title": " bracket balance java",
    "description": "/* PARENTHESE MATCHING AUTHOR: UTKARSH SINHA */ bool correct_paranthesis(string str){ \tstack<char> stk; \tmap<char,char> bracket_map; \tbracket_map[')'] = '('; \tbracket_map['}'] = '{'; \tbracket_map[']'] = '['; \t \tfor(int i=0; i<str.size(); i++){ \t\tif(str[i] == '(' || str[i] == '{' || str[i] == '[') \t\t\tstk.push(str[i]); \t\tif(str[i] == ')' || str[i] == '}' || str[i] == ']'){ \t\t\tif(stk.empty()) \t\t\t\treturn false; \t\t\tif(stk.top() == bracket_map[str[i]] ) \t\t\t\tstk.pop(); \t\t} \t} \t \treturn (stk.empty() == true); }\nimport java.util.Scanner; import java.util.ArrayList; public class BalanceBracket { public static void main(String[] args) { \tScanner sc = new Scanner(System.in); \tSystem.out.println(\"enter a string with '(', '{' or '['\"); \tString s = sc.nextLine(); \tString y = isBalanced(s); \tSystem.out.println(y); } static String isBalanced(String s) { \tString result = \"NO\"; \tArrayList<String> al = new ArrayList<String>(); \t \tfor(int i = 0; i < s.length(); i++) \t{ \t\tif(s.charAt(i) == '(' || s.charAt(i) == '{' || s.charAt(i) == '[')         { \t\t\tal.add(Character.toString(s.charAt(i))); \t\t} \t\t \t\telse if(s.charAt(i) == ')' || s.charAt(i) == '}' || s.charAt(i) == ']') \t\t{ \t\t\tif(al.size() != 0 && al.get(al.size()-1).equals(\"(\") && s.charAt(i) == ')') \t\t\t{ \t\t\t\tal.remove(al.size()-1); \t\t\t} \t\t\telse if(al.size() != 0 && al.get(al.size()-1).equals(\"{\") && s.charAt(i) == '}') \t\t\t{ \t\t\t\tal.remove(al.size()-1); \t\t\t} \t\t\telse if(al.size() != 0 && al.get(al.size()-1).equals(\"[\") && s.charAt(i) == ']') \t\t\t{ \t\t\t\tal.remove(al.size()-1); \t\t\t} \t\t\telse \t\t\t{ \t\t\t\treturn result = \"NO\"; \t\t\t} \t\t} \t\t \t} \tif(al.isEmpty() == true) \t{ \t\treturn result = \"YES\"; \t} \treturn result; } }\n// for Java  class Parser{     static HashMap<Character,Character> bracket_map = new HashMap<>();      static {         bracket_map.put(')', '(');         bracket_map.put('}','{');         bracket_map.put(']','[');     }          boolean isBalanced(String s){                      Stack<Character> stack = new Stack<>();         char temp;         for (int i = 0; i < s.length(); i++) {             temp = s.charAt(i);             if(temp == '{' || temp == '[' || temp == '('){                 stack.push(temp);             }else {                 if(stack.isEmpty() || stack.peek() != bracket_map.get(temp)) return false;                 stack.pop();             }         }         return stack.isEmpty();     } }\n",
    "reg_date": "2021-10-12T12:01:49.000Z"
  },
  {
    "id": 816,
    "keyword": null,
    "link": null,
    "title": " bracket balancing program in java",
    "description": "import java.util.Scanner; import java.util.ArrayList; public class BalanceBracket { public static void main(String[] args) { \tScanner sc = new Scanner(System.in); \tSystem.out.println(\"enter a string with '(', '{' or '['\"); \tString s = sc.nextLine(); \tString y = isBalanced(s); \tSystem.out.println(y); } static String isBalanced(String s) { \tString result = \"NO\"; \tArrayList<String> al = new ArrayList<String>(); \t \tfor(int i = 0; i < s.length(); i++) \t{ \t\tif(s.charAt(i) == '(' || s.charAt(i) == '{' || s.charAt(i) == '[')         { \t\t\tal.add(Character.toString(s.charAt(i))); \t\t} \t\t \t\telse if(s.charAt(i) == ')' || s.charAt(i) == '}' || s.charAt(i) == ']') \t\t{ \t\t\tif(al.size() != 0 && al.get(al.size()-1).equals(\"(\") && s.charAt(i) == ')') \t\t\t{ \t\t\t\tal.remove(al.size()-1); \t\t\t} \t\t\telse if(al.size() != 0 && al.get(al.size()-1).equals(\"{\") && s.charAt(i) == '}') \t\t\t{ \t\t\t\tal.remove(al.size()-1); \t\t\t} \t\t\telse if(al.size() != 0 && al.get(al.size()-1).equals(\"[\") && s.charAt(i) == ']') \t\t\t{ \t\t\t\tal.remove(al.size()-1); \t\t\t} \t\t\telse \t\t\t{ \t\t\t\treturn result = \"NO\"; \t\t\t} \t\t} \t\t \t} \tif(al.isEmpty() == true) \t{ \t\treturn result = \"YES\"; \t} \treturn result; } }\n",
    "reg_date": "2021-10-12T12:01:49.000Z"
  },
  {
    "id": 817,
    "keyword": null,
    "link": null,
    "title": " break a java stream foreach",
    "description": "Stream.of(\"cat\", \"dog\", \"elephant\", \"fox\", \"rabbit\", \"duck\")   \t.takeWhile(n -> n.length() % 2 != 0)   \t.forEach(System.out::println);  //sysout -> cat //sysout -> dog  //Same code, no streams  List<String> list = asList(\"cat\", \"dog\", \"elephant\", \"fox\", \"rabbit\", \"duck\"); for (int i = 0; i < list.size(); i++) {     String item = list.get(i);     if (item.length() % 2 == 0) {         break;     }     System.out.println(item); }\nfor(String str : strArr) { \tcontinue; //Skips current iteration and moves onto the following  }\n",
    "reg_date": "2021-10-12T12:01:49.000Z"
  },
  {
    "id": 818,
    "keyword": null,
    "link": null,
    "title": " break for loop java",
    "description": "//Conclusion         break == jump out side the loop         continue == next loop cycle         return == return the method/end the method.              for(int i = 0; i < 5; i++) {       System.out.println(i +\"\");       if(i == 3){         break;                }     }   System.out.println(\"finish!\"); /* Output 0 1 2 3 finish! */\npublic class Test {     public static void main(String args[]) {       int [] numbers = {10, 20, 30, 40, 50};        for(int x : numbers ) {          if( x == 30 ) {             break;          }          System.out.print( x );          System.out.print(\"\\n\");       }    } } \n",
    "reg_date": "2021-10-12T12:01:49.000Z"
  },
  {
    "id": 819,
    "keyword": null,
    "link": null,
    "title": " break java",
    "description": "//Conclusion         break == jump out side the loop         continue == next loop cycle         return == return the method/end the method.              for(int i = 0; i < 5; i++) {       System.out.println(i +\"\");       if(i == 3){         break;                }     }   System.out.println(\"finish!\"); /* Output 0 1 2 3 finish! */\n//Java Program to demonstrate the use of break statement     //inside the for loop.   public class BreakExample {   public static void main(String[] args) {       //using for loop       for(int i=1;i<=10;i++){           if(i==5){               //breaking the loop               break;           }           System.out.println(i);       }   }   } \npublic class Test {     public static void main(String args[]) {       int [] numbers = {10, 20, 30, 40, 50};        for(int x : numbers ) {          if( x == 30 ) {             break;          }          System.out.print( x );          System.out.print(\"\\n\");       }    } }\n// break statement in java public class BreakStatementExample {    public static void main(String[] args)     {       for(int a = 1; a <= 10; a++)       {          if(a == 3)          {               // breaking loop               break;            }            System.out.println(a);         }    } }\npublic class Test {     public static void main(String args[]) {       int [] numbers = {10, 20, 30, 40, 50};        for(int x : numbers ) {          if( x == 30 ) {             break;          }          System.out.print( x );          System.out.print(\"\\n\");       }    } } \nint i = 0; while (i < 10) {   if (i == 4) {     i++;  //why do I need this line ?     continue;   }   System.out.println(i);   i++; }\n",
    "reg_date": "2021-10-12T12:01:50.000Z"
  },
  {
    "id": 820,
    "keyword": null,
    "link": null,
    "title": " break statement in java",
    "description": "//Conclusion         break == jump out side the loop         continue == next loop cycle         return == return the method/end the method.              for(int i = 0; i < 5; i++) {       System.out.println(i +\"\");       if(i == 3){         break;                }     }   System.out.println(\"finish!\"); /* Output 0 1 2 3 finish! */\n//Java Program to demonstrate the use of break statement     //inside the for loop.   public class BreakExample {   public static void main(String[] args) {       //using for loop       for(int i=1;i<=10;i++){           if(i==5){               //breaking the loop               break;           }           System.out.println(i);       }   }   } \npublic class Test {     public static void main(String args[]) {       int [] numbers = {10, 20, 30, 40, 50};        for(int x : numbers ) {          if( x == 30 ) {             break;          }          System.out.print( x );          System.out.print(\"\\n\");       }    } }\n// break statement in java public class BreakStatementExample {    public static void main(String[] args)     {       for(int a = 1; a <= 10; a++)       {          if(a == 3)          {               // breaking loop               break;            }            System.out.println(a);         }    } }\npublic class Test {     public static void main(String args[]) {       int [] numbers = {10, 20, 30, 40, 50};        for(int x : numbers ) {          if( x == 30 ) {             break;          }          System.out.print( x );          System.out.print(\"\\n\");       }    } } \nwhile (true) {     ....     if (obj == null) {         break;     }     .... }\n",
    "reg_date": "2021-10-12T12:01:50.000Z"
  },
  {
    "id": 821,
    "keyword": null,
    "link": null,
    "title": " bubble sort in java",
    "description": "public class BubbleSortExample {       static void bubbleSort(int[] arr) {           int n = arr.length;           int temp = 0;            for(int i=0; i < n; i++){                    for(int j=1; j < (n-i); j++){                             if(arr[j-1] > arr[j]){                                    //swap elements                                    temp = arr[j-1];                                    arr[j-1] = arr[j];                                    arr[j] = temp;                            }                                               }            }      }  \npublic static void bubbleSort(int arr[]) { \tfor (int i = 0; i < arr.length; i++) //number of passes     { \t\t//keeps track of positions per pass           \tfor (int j = 0; j < (arr.length - 1 - i); j++) //Think you can add a -i to remove uneeded comparisons          {           \t//if left value is great than right value          \tif (arr[j] > arr[j + 1])             {               \t//swap values             \tint temp = arr[j];               \tarr[j] = arr[j + 1];               \tarr[j + 1] = temp;              }         }     } }\npublic class DemoBubbleSort {    void bubbleSort(int[] arrNum)    {       int num = arrNum.length;       for(int a = 0; a < num - 1; a++)       {          for(int b = 0; b < num - a - 1; b++)          {             if(arrNum[b] > arrNum[b + 1])             {                int temp = arrNum[b];                arrNum[b] = arrNum[b + 1];                arrNum[b + 1] = temp;             }          }       }    }    void printingArray(int[] arrNum)    {       int number = arrNum.length;       for(int a = 0; a < number; ++a)       {          System.out.print(arrNum[a] + \" \");          System.out.println();       }    }    public static void main(String[] args)    {       DemoBubbleSort bs = new DemoBubbleSort();       int[] arrSort = {65, 35, 25, 15, 23, 14, 95};       bs.bubbleSort(arrSort);       System.out.println(\"After sorting array: \");       bs.printingArray(arrSort);    } }\nfunc Sort(arr []int) []int { \tfor i := 0; i < len(arr)-1; i++ { \t\tfor j := 0; j < len(arr)-i-1; j++ { \t\t\tif arr[j] > arr[j+1] { \t\t\t\ttemp := arr[j] \t\t\t\tarr[j] = arr[j+1] \t\t\t\tarr[j+1] = temp \t\t\t} \t\t} \t} \treturn arr }\npublic static void BubbleSortShortSC(int[] array)     {         for(int i = 0; i < array.length - 1; i++)         {             boolean sorted = true;             for (int j = 0; j < array.length - i - 1; j++)             {                 if(array[j] < array[j+1])                 {                     int temp = array[j];                     array[j] = array[j+1];                     array[j+1] = temp;                     sorted = false;                 }             }             if (sorted)             \tbreak;         }     }\nfor (int i = 0; i < n-1; i++)              for (int j = 0; j < n-i-1; j++)                  if (arr[j] > arr[j+1])                  {                      // swap arr[j+1] and arr[i]                      int temp = arr[j];                      arr[j] = arr[j+1];                      arr[j+1] = temp;                  } \n",
    "reg_date": "2021-10-12T12:01:50.000Z"
  },
  {
    "id": 822,
    "keyword": null,
    "link": null,
    "title": " bubble sort java",
    "description": "public class BubbleSortExample {       static void bubbleSort(int[] arr) {           int n = arr.length;           int temp = 0;            for(int i=0; i < n; i++){                    for(int j=1; j < (n-i); j++){                             if(arr[j-1] > arr[j]){                                    //swap elements                                    temp = arr[j-1];                                    arr[j-1] = arr[j];                                    arr[j] = temp;                            }                                               }            }      }  \npublic static void bubbleSort(int arr[]) { \tfor (int i = 0; i < arr.length; i++) //number of passes     { \t\t//keeps track of positions per pass           \tfor (int j = 0; j < (arr.length - 1 - i); j++) //Think you can add a -i to remove uneeded comparisons          {           \t//if left value is great than right value          \tif (arr[j] > arr[j + 1])             {               \t//swap values             \tint temp = arr[j];               \tarr[j] = arr[j + 1];               \tarr[j + 1] = temp;              }         }     } }\npublic class DemoBubbleSort {    void bubbleSort(int[] arrNum)    {       int num = arrNum.length;       for(int a = 0; a < num - 1; a++)       {          for(int b = 0; b < num - a - 1; b++)          {             if(arrNum[b] > arrNum[b + 1])             {                int temp = arrNum[b];                arrNum[b] = arrNum[b + 1];                arrNum[b + 1] = temp;             }          }       }    }    void printingArray(int[] arrNum)    {       int number = arrNum.length;       for(int a = 0; a < number; ++a)       {          System.out.print(arrNum[a] + \" \");          System.out.println();       }    }    public static void main(String[] args)    {       DemoBubbleSort bs = new DemoBubbleSort();       int[] arrSort = {65, 35, 25, 15, 23, 14, 95};       bs.bubbleSort(arrSort);       System.out.println(\"After sorting array: \");       bs.printingArray(arrSort);    } }\nfunc Sort(arr []int) []int { \tfor i := 0; i < len(arr)-1; i++ { \t\tfor j := 0; j < len(arr)-i-1; j++ { \t\t\tif arr[j] > arr[j+1] { \t\t\t\ttemp := arr[j] \t\t\t\tarr[j] = arr[j+1] \t\t\t\tarr[j+1] = temp \t\t\t} \t\t} \t} \treturn arr }\npublic static void BubbleSortShortSC(int[] array)     {         for(int i = 0; i < array.length - 1; i++)         {             boolean sorted = true;             for (int j = 0; j < array.length - i - 1; j++)             {                 if(array[j] < array[j+1])                 {                     int temp = array[j];                     array[j] = array[j+1];                     array[j+1] = temp;                     sorted = false;                 }             }             if (sorted)             \tbreak;         }     }\nfor (int i = 0; i < n-1; i++)              for (int j = 0; j < n-i-1; j++)                  if (arr[j] > arr[j+1])                  {                      // swap arr[j+1] and arr[i]                      int temp = arr[j];                      arr[j] = arr[j+1];                      arr[j+1] = temp;                  } \n",
    "reg_date": "2021-10-12T12:01:50.000Z"
  },
  {
    "id": 823,
    "keyword": null,
    "link": null,
    "title": " bucket sort algorithm java",
    "description": "// Bucket sort in Java  import java.util.ArrayList; import java.util.Collections;  public class BucketSort {   public void bucketSort(float[] arr, int n) {     if (n <= 0)       return;     @SuppressWarnings(\"unchecked\")     ArrayList<Float>[] bucket = new ArrayList[n];      // Create empty buckets     for (int i = 0; i < n; i++)       bucket[i] = new ArrayList<Float>();      // Add elements into the buckets     for (int i = 0; i < n; i++) {       int bucketIndex = (int) arr[i] * n;       bucket[bucketIndex].add(arr[i]);     }      // Sort the elements of each bucket     for (int i = 0; i < n; i++) {       Collections.sort((bucket[i]));     }      // Get the sorted array     int index = 0;     for (int i = 0; i < n; i++) {       for (int j = 0, size = bucket[i].size(); j < size; j++) {         arr[index++] = bucket[i].get(j);       }     }   }    // Driver code   public static void main(String[] args) {     BucketSort b = new BucketSort();     float[] arr = { (float) 0.42, (float) 0.32, (float) 0.33, (float) 0.52, (float) 0.37, (float) 0.47,         (float) 0.51 };     b.bucketSort(arr, 7);      for (float i : arr)       System.out.print(i + \"  \");   } }\n",
    "reg_date": "2021-10-12T12:01:50.000Z"
  },
  {
    "id": 824,
    "keyword": null,
    "link": null,
    "title": " bucket sort java",
    "description": "public class Main  {    public static int[] bucket_sort(int[] arr, int max_value)      {         int[] bucket = new int[max_value + 1];         int[] sorted_arr = new int[arr.length];           for (int i= 0; i <arr.length; i++)             bucket[arr[i]]++;           int pos = 0;         for (int i = 0; i < bucket.length; i++)             for (int j = 0; j < bucket[i]; j++)                 sorted_arr[pos++] = i;           return sorted_arr;     }         static int maxValue(int[] arr)      {         int max_value = 0;         for (int i = 0; i < arr.length; i++)             if (arr[i] > max_value)                 max_value = arr[i];         return max_value;     }       public static void main(String args[])      {         int[] arr ={80, 50, 30, 10, 90, 60, 0, 70, 40, 20, 50};         int max_value = maxValue(arr);           System.out.print(\"\\nOriginal : \");         System.out.println(Arrays.toString(arr));           System.out.print(\"\\nSorted : \");         System.out.println(Arrays.toString(bucket_sort(arr,max_value)));      } }\npublic static int[] bucketSort(int[] a) {   Queue<Integer>[] buckets = fillBuckets(a);   int[] sorted = readBuckets(buckets);   return sorted; }  public static Queue<Integer>[] fillBuckets(int[] array) {   if(array.length == 0){     Queue<Integer>[] r = new Queue[0];     return r;   }   int vmin = array[0];   int vmax = array[0];   for(int i = 0; i < array.length; i++){     if(array[i] > vmax){       vmax = array[i];     }     if(array[i] < vmin){       vmin = array[i];     }   }   Queue<Integer>[] buckets = new Queue[vmax - vmin + 1];   for(int i = 0; i < buckets.length; i++){     buckets[i] = new LinkedList<Integer>();   }   for(int i = 0; i < array.length; i++){     buckets[array[i] - vmin].add(array[i]);   }   return buckets; }  public static int[] readBuckets(Queue<Integer>[] buckets) {   if(buckets.length == 0){     int[] e = new int[0];     return e;   }   ArrayList<Integer> a = new ArrayList<Integer>();   for(int i = 0 ; i < buckets.length; i++){     while(buckets[i].peek() != null){       a.add(buckets[i].remove());     }   }   int[] result = new int[a.size()];   for(int i = 0; i < a.size(); i++){     result[i] = a.get(i);   }   return result; }\n// Bucket sort in Java  import java.util.ArrayList; import java.util.Collections;  public class BucketSort {   public void bucketSort(float[] arr, int n) {     if (n <= 0)       return;     @SuppressWarnings(\"unchecked\")     ArrayList<Float>[] bucket = new ArrayList[n];      // Create empty buckets     for (int i = 0; i < n; i++)       bucket[i] = new ArrayList<Float>();      // Add elements into the buckets     for (int i = 0; i < n; i++) {       int bucketIndex = (int) arr[i] * n;       bucket[bucketIndex].add(arr[i]);     }      // Sort the elements of each bucket     for (int i = 0; i < n; i++) {       Collections.sort((bucket[i]));     }      // Get the sorted array     int index = 0;     for (int i = 0; i < n; i++) {       for (int j = 0, size = bucket[i].size(); j < size; j++) {         arr[index++] = bucket[i].get(j);       }     }   }    // Driver code   public static void main(String[] args) {     BucketSort b = new BucketSort();     float[] arr = { (float) 0.42, (float) 0.32, (float) 0.33, (float) 0.52, (float) 0.37, (float) 0.47,         (float) 0.51 };     b.bucketSort(arr, 7);      for (float i : arr)       System.out.print(i + \"  \");   } }\n",
    "reg_date": "2021-10-12T12:01:51.000Z"
  },
  {
    "id": 825,
    "keyword": null,
    "link": null,
    "title": " bufferedreader in java",
    "description": "try { \tFile file = new File(\"data.txt\"); \tBufferedReader reader = new BufferedReader(new FileReader(file)); \tString line;  \twhile((line = reader.readLine()) != null) { \t \t System.out.println(line); \t} } catch(IOException e) {   \te.printStackTrace(); }\nimport java.io.BufferedReader; // BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(reader.readLine());\nclass Main { \tpublic static void main (String[] args) throws IOException{                        \t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in)); \t\tString[] str = br.readLine().split(\" \");      // 6 2 \t\tString[] input = br.readLine().split(\" \");   // 1 2 3 4 5 6   \t\tint n = Integer.parseInt(str[0]);  // 6 \t\tint k = Integer.parseInt(str[1]);  // 2  \t\t       \tint [] arr = new int [n]; \t\t       \tfor(int i=0; i<n; i++)  \t\t{          arr[i] = Integer.parseInt(input[i]);  // 1 2 3 4 5 6         } \t   \t   \t} } \nBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\npackage com.javatpoint;   import java.io.*;   public class BufferedReaderExample {       public static void main(String args[])throws Exception{               FileReader fr=new FileReader(\"D:\\\\testout.txt\");               BufferedReader br=new BufferedReader(fr);                  int i;               while((i=br.read())!=-1){             System.out.print((char)i);             }             br.close();               fr.close();         }     }    \npackage com.javatpoint;   import java.io.*;   public class BufferedReaderExample{     public static void main(String args[])throws Exception{                  InputStreamReader r=new InputStreamReader(System.in);         BufferedReader br=new BufferedReader(r);                 System.out.println(\"Enter your name\");         String name=br.readLine();         System.out.println(\"Welcome \"+name);     }     }  \n",
    "reg_date": "2021-10-12T12:01:51.000Z"
  },
  {
    "id": 826,
    "keyword": null,
    "link": null,
    "title": " bufferedreader java",
    "description": "try { \tFile file = new File(\"data.txt\"); \tBufferedReader reader = new BufferedReader(new FileReader(file)); \tString line;  \twhile((line = reader.readLine()) != null) { \t \t System.out.println(line); \t} } catch(IOException e) {   \te.printStackTrace(); }\nimport java.io.BufferedReader; // BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(reader.readLine());\nclass Main { \tpublic static void main (String[] args) throws IOException{                        \t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in)); \t\tString[] str = br.readLine().split(\" \");      // 6 2 \t\tString[] input = br.readLine().split(\" \");   // 1 2 3 4 5 6   \t\tint n = Integer.parseInt(str[0]);  // 6 \t\tint k = Integer.parseInt(str[1]);  // 2  \t\t       \tint [] arr = new int [n]; \t\t       \tfor(int i=0; i<n; i++)  \t\t{          arr[i] = Integer.parseInt(input[i]);  // 1 2 3 4 5 6         } \t   \t   \t} } \nBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\npackage com.javatpoint;   import java.io.*;   public class BufferedReaderExample {       public static void main(String args[])throws Exception{               FileReader fr=new FileReader(\"D:\\\\testout.txt\");               BufferedReader br=new BufferedReader(fr);                  int i;               while((i=br.read())!=-1){             System.out.print((char)i);             }             br.close();               fr.close();         }     }    \nprivate static BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); private static StringTokenizer st; static String next() throws IOException {     while (st==null||!st.hasMoreTokens()) {         st = new StringTokenizer(br.readLine().trim());     }     return st.nextToken(); } static long readLong() throws IOException {     return Long.parseLong(next()); } static int readInt() throws IOException {     return Integer.parseInt(next()); } static double readDouble() throws IOException {     return Double.parseDouble(next()); } static String readLine() throws IOException {     return br.readLine().trim(); }\n",
    "reg_date": "2021-10-12T12:01:51.000Z"
  },
  {
    "id": 827,
    "keyword": null,
    "link": null,
    "title": " bufferedwriter doesn't write to file",
    "description": "// Make sure you close your writer like this: myWriter.close();\n",
    "reg_date": "2021-10-12T12:01:51.000Z"
  },
  {
    "id": 828,
    "keyword": null,
    "link": null,
    "title": " build.plugins.plugin.version",
    "description": "<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin --> <dependency>   <groupId>org.apache.maven.plugins</groupId>   <artifactId>maven-compiler-plugin</artifactId>   <version>3.8.1</version> </dependency>\n",
    "reg_date": "2021-10-12T12:01:51.000Z"
  },
  {
    "id": 829,
    "keyword": null,
    "link": null,
    "title": " built dictionary in java",
    "description": "import java.util.*;  class My_Dictionary  { \tpublic static void main(String[] args) \t{ \t\t// creating a My HashTable Dictionary \t\tHashtable<String, String> my_dict = new Hashtable<String, String>();      // Using a few dictionary Class methods \t\t// using put method \t\tmy_dict.put(\"01\", \"Apple\"); \t\tmy_dict.put(\"10\", \"Banana\"); \t\t \t\t// using get() method     System.out.println(\"\\nValue at key = 10 : \" + my_dict.get(\"10\"));      System.out.println(\"Value at key = 11 : \" + my_dict.get(\"11\")); \t\t \t\t// using isEmpty() method     System.out.println(\"\\nIs my dictionary empty? : \" + my_dict.isEmpty() + \"\\n\"); \t\t \t\t// using remove() method  \t\t// remove value at key 10     my_dict.remove(\"10\");     System.out.println(\"Checking if the removed value exists: \" + my_dict.get(\"10\"));      System.out.println(\"\\nSize of my_dict : \" + my_dict.size());  \t} } \nMap<String, String> map = new HashMap<String, String>(); map.put(\"dog\", \"type of animal\"); System.out.println(map.get(\"dog\"));\n",
    "reg_date": "2021-10-12T12:01:51.000Z"
  },
  {
    "id": 830,
    "keyword": null,
    "link": null,
    "title": " bukkit  for every player",
    "description": "for(Player all : Bukkit.getServer().getOnlinePlayers()) {     all.something(something) }\n",
    "reg_date": "2021-10-12T12:01:52.000Z"
  },
  {
    "id": 831,
    "keyword": null,
    "link": null,
    "title": " bukkit command sender is player",
    "description": "if(sender instanceof Player) {   Player player = (Player) sender;   // stuff here that requires the player object }\n",
    "reg_date": "2021-10-12T12:01:52.000Z"
  },
  {
    "id": 832,
    "keyword": null,
    "link": null,
    "title": " bukkit creating an inventory window",
    "description": "        IconMenu menu = new IconMenu(\"My Fancy Menu\", 9, new IconMenu.OptionClickEventHandler() {             @Override             public void onOptionClick(IconMenu.OptionClickEvent event) {                 event.getPlayer().sendMessage(\"You have chosen \" + event.getName());                 event.setWillClose(true);             }         }, plugin)         .setOption(3, new ItemStack(Material.APPLE, 1), \"Food\", \"The food is delicious\")         .setOption(4, new ItemStack(Material.IRON_SWORD, 1), \"Weapon\", \"Weapons are for awesome people\")         .setOption(5, new ItemStack(Material.EMERALD, 1), \"Money\", \"Money brings happiness\"); \nimport java.util.Arrays;  import org.bukkit.Bukkit; import org.bukkit.entity.Player; import org.bukkit.event.EventHandler; import org.bukkit.event.EventPriority; import org.bukkit.event.HandlerList; import org.bukkit.event.Listener; import org.bukkit.event.inventory.InventoryClickEvent; import org.bukkit.inventory.Inventory; import org.bukkit.inventory.ItemStack; import org.bukkit.inventory.meta.ItemMeta; import org.bukkit.plugin.Plugin;   public class IconMenu implements Listener {       private String name;     private int size;     private OptionClickEventHandler handler;     private Plugin plugin;         private String[] optionNames;     private ItemStack[] optionIcons;         public IconMenu(String name, int size, OptionClickEventHandler handler, Plugin plugin) {         this.name = name;         this.size = size;         this.handler = handler;         this.plugin = plugin;         this.optionNames = new String[size];         this.optionIcons = new ItemStack[size];         plugin.getServer().getPluginManager().registerEvents(this, plugin);     }         public IconMenu setOption(int position, ItemStack icon, String name, String... info) {         optionNames[position] = name;         optionIcons[position] = setItemNameAndLore(icon, name, info);         return this;     }         public void open(Player player) {         Inventory inventory = Bukkit.createInventory(player, size, name);         for (int i = 0; i < optionIcons.length; i++) {             if (optionIcons[i] != null) {                 inventory.setItem(i, optionIcons[i]);             }         }         player.openInventory(inventory);     }         public void destroy() {         HandlerList.unregisterAll(this);         handler = null;         plugin = null;         optionNames = null;         optionIcons = null;     }         @EventHandler(priority=EventPriority.MONITOR)     void onInventoryClick(InventoryClickEvent event) {         if (event.getInventory().getTitle().equals(name)) {             event.setCancelled(true);             int slot = event.getRawSlot();             if (slot >= 0 && slot < size && optionNames[slot] != null) {                 Plugin plugin = this.plugin;                 OptionClickEvent e = new OptionClickEvent((Player)event.getWhoClicked(), slot, optionNames[slot]);                 handler.onOptionClick(e);                 if (e.willClose()) {                     final Player p = (Player)event.getWhoClicked();                     Bukkit.getScheduler().scheduleSyncDelayedTask(plugin, new Runnable() {                         public void run() {                             p.closeInventory();                         }                     }, 1);                 }                 if (e.willDestroy()) {                     destroy();                 }             }         }     }          public interface OptionClickEventHandler {         public void onOptionClick(OptionClickEvent event);            }          public class OptionClickEvent {         private Player player;         private int position;         private String name;         private boolean close;         private boolean destroy;                 public OptionClickEvent(Player player, int position, String name) {             this.player = player;             this.position = position;             this.name = name;             this.close = true;             this.destroy = false;         }                 public Player getPlayer() {             return player;         }                 public int getPosition() {             return position;         }                 public String getName() {             return name;         }                 public boolean willClose() {             return close;         }                 public boolean willDestroy() {             return destroy;         }                 public void setWillClose(boolean close) {             this.close = close;         }                 public void setWillDestroy(boolean destroy) {             this.destroy = destroy;         }     }         private ItemStack setItemNameAndLore(ItemStack item, String name, String[] lore) {         ItemMeta im = item.getItemMeta();             im.setDisplayName(name);             im.setLore(Arrays.asList(lore));         item.setItemMeta(im);         return item;     }     }\nmenu.open(player); \n",
    "reg_date": "2021-10-12T12:01:52.000Z"
  },
  {
    "id": 833,
    "keyword": null,
    "link": null,
    "title": " bukkit delayed task",
    "description": "Bukkit.getScheduler().scheduleSyncDelayedTask(plugin, new Runnable() {     @Override     public void run() {         Bukkit.broadcastMessage(\"This message is shown after one second\");     } }, 20L); //20 Tick (1 Second) delay before run() is called\n",
    "reg_date": "2021-10-12T12:01:52.000Z"
  },
  {
    "id": 834,
    "keyword": null,
    "link": null,
    "title": " bukkit for every player",
    "description": "for(Player all : Bukkit.getServer().getOnlinePlayers()) {     all.something(something) }\n",
    "reg_date": "2021-10-12T12:01:52.000Z"
  },
  {
    "id": 835,
    "keyword": null,
    "link": null,
    "title": " bukkit give Player effect",
    "description": "<player>.addPotionEffect(new PotionEffect(PotionEffectType.HARM, <duration>, <amplifier>));\n",
    "reg_date": "2021-10-12T12:01:52.000Z"
  },
  {
    "id": 836,
    "keyword": null,
    "link": null,
    "title": " bukkit inventory set name",
    "description": "public static void setPlayerInventory(Player p) { \t\tInventory teamselector = Bukkit.createInventory(null, 9*1, \"Teamselector\");  //Teamselector will be the name of the inventory. }\n",
    "reg_date": "2021-10-12T12:01:52.000Z"
  },
  {
    "id": 837,
    "keyword": null,
    "link": null,
    "title": " bukkit java connect player to another server in bungeecord",
    "description": "//onEnable in Main class getServer().getMessenger().registerOutgoingPluginChannel(this, \"BungeeCord\");  //When you want to connect the player //\"server\" is the server name the player should connect to //the variable \"player\" is the player you want to connect ByteArrayDataOutput out = ByteStreams.newDataOutput(); out.writeUTF(\"Connect\"); out.writeUTF(\"server\"); player.sendPluginMessage(main, \"BungeeCord\", out.toByteArray());\n",
    "reg_date": "2021-10-12T12:01:53.000Z"
  },
  {
    "id": 838,
    "keyword": null,
    "link": null,
    "title": " bukkit java get player count",
    "description": "Bukkit.getOnlinePlayers().size();\n",
    "reg_date": "2021-10-12T12:01:53.000Z"
  },
  {
    "id": 839,
    "keyword": null,
    "link": null,
    "title": " bukkit register commands",
    "description": "public class main {   @Override   public void onEnable() {       this.getCommand(\"heal\").setExecuter(new health(this));       //E.g a heal command in class health       // this.getCommand(\"heal\").setExecture(new health(this))        //If command in main class replace new <class>() with this.       // this.getCommand(\"heal\").setExecuter(this)   } }  //If in external class a constructor has to be made. public class health {   private main plugin;   //Have to create constructor in external class   public health(main plugin) { this.plugin = plugin; }        public boolean onCommand(CommandSender sender, Command cmd, String Label, String[] args) {    \t//Do stuff   }    }\n",
    "reg_date": "2021-10-12T12:01:53.000Z"
  },
  {
    "id": 840,
    "keyword": null,
    "link": null,
    "title": " bukkit scheduled task",
    "description": "Bukkit.getScheduler().scheduleSyncRepeatingTask(instance, new Runnable() {   @Override   public void run() {     //Your Code Here   } }, 0L, 20L);\n",
    "reg_date": "2021-10-12T12:01:53.000Z"
  },
  {
    "id": 841,
    "keyword": null,
    "link": null,
    "title": " bukkit scheduler",
    "description": "Bukkit.getScheduler().scheduleSyncRepeatingTask(this, new Runnable() {     public void run() {              } }, 20, 20);  \n// 20L = 1 Second Bukkit.getScheduler().runTaskLater(main, new Runnable() { \tpublic void run() { \t\tSystem.out.println(\"Plugin has been enabled for 5 seconds!\"); \t} }, 100L);\nBukkit.getScheduler().scheduleSyncRepeatingTask(instance, new Runnable() {   @Override   public void run() {     //Your Code Here   } }, 0L, 20L);\n",
    "reg_date": "2021-10-12T12:01:53.000Z"
  },
  {
    "id": 842,
    "keyword": null,
    "link": null,
    "title": " bukkit scheduler delay task",
    "description": "Bukkit.getScheduler().scheduleSyncDelayedTask(plugin, new Runnable() {     @Override     public void run() {         Bukkit.broadcastMessage(\"This message is shown after one second\");     } }, 20L); //20 Tick (1 Second) delay before run() is called\n",
    "reg_date": "2021-10-12T12:01:53.000Z"
  },
  {
    "id": 843,
    "keyword": null,
    "link": null,
    "title": " bukkit scoreboard",
    "description": "ScoreboardManager manager = Bukkit.getScoreboardManager(); Scoreboard board = manager.getNewScoreboard(); Objective objective = board.registerNewObjective(\"test\", \"dummy\");      //Setting where to display the scoreboard/objective (either SIDEBAR, PLAYER_LIST or BELOW_NAME)     objective.setDisplaySlot(DisplaySlot.SIDEBAR);           //Setting the display name of the scoreboard/objective     objective.setDisplayName(\"Display Name\");      Score score = objective.getScore(ChatColor.GREEN + \"Kills:\"); //Get a fake offline player     score.setScore(1);\n",
    "reg_date": "2021-10-12T12:01:54.000Z"
  },
  {
    "id": 844,
    "keyword": null,
    "link": null,
    "title": " bungeecord plugin add configs",
    "description": "// Load config Configuration config = ConfigurationProvider.getProvider(YamlConfiguration.class).load(new File(getDataFolder(), \"config.yml\"));  // Sets a string config.set('test', 'This is a test'); // Loads a string config.getString('test'); // test  // Save config ConfigurationProvider.getProvider(YamlConfiguration.class).save(config, new File(getDataFolder(), \"config.yml\"));\n",
    "reg_date": "2021-10-12T12:01:54.000Z"
  },
  {
    "id": 845,
    "keyword": null,
    "link": null,
    "title": " button background color not changing android",
    "description": "app:backgroundTint=\"@color/green\" \n<androidx.appcompat.widget.AppCompatButton \n",
    "reg_date": "2021-10-12T12:01:54.000Z"
  },
  {
    "id": 846,
    "keyword": null,
    "link": null,
    "title": " button listener android",
    "description": "public class MyActivity extends Activity {       protected void onCreate(Bundle icicle) {          super.onCreate(icicle);          setContentView(R.layout.my_layout_id);           final Button button = (Button) findViewById(R.id.my_cool_button);          button.setOnClickListener(new View.OnClickListener() {              public void onClick(View v) {                  // your handler code here              }          });      }  } \n",
    "reg_date": "2021-10-12T12:01:54.000Z"
  },
  {
    "id": 847,
    "keyword": null,
    "link": null,
    "title": " byte array to file java",
    "description": "try (FileOutputStream fos = new FileOutputStream(\"pathname\")) {    fos.write(myByteArray);    //fos.close(); There is no more need for this line since you had created the instance of \"fos\" inside the try. And this will automatically close the OutputStream }\n",
    "reg_date": "2021-10-12T12:01:54.000Z"
  },
  {
    "id": 848,
    "keyword": null,
    "link": null,
    "title": " byte java",
    "description": "byte numberMin = -128; byte numberMax = 127;\n",
    "reg_date": "2021-10-12T12:01:54.000Z"
  },
  {
    "id": 849,
    "keyword": null,
    "link": null,
    "title": " byte to bufferedimage java",
    "description": "InputStream is = new ByteArrayInputStream(bytes); BufferedImage bi = ImageIO.read(is);\n",
    "reg_date": "2021-10-12T12:01:54.000Z"
  },
  {
    "id": 850,
    "keyword": null,
    "link": null,
    "title": " c# create new object",
    "description": "Car mycar = new Car();\npublic class Person {     public string Name { get; set; }     public int Age { get; set; }     public Person(string name, int age)     {         Name = name;         Age = age;     }     // Other properties, methods, events... }  class Program {     static void Main()     {         Person person1 = new Person(\"Leopold\", 6);         Console.WriteLine(\"person1 Name = {0} Age = {1}\", person1.Name, person1.Age);          // Declare new person, assign person1 to it.         Person person2 = person1;          // Change the name of person2, and person1 also changes.         person2.Name = \"Molly\";         person2.Age = 16;          Console.WriteLine(\"person2 Name = {0} Age = {1}\", person2.Name, person2.Age);         Console.WriteLine(\"person1 Name = {0} Age = {1}\", person1.Name, person1.Age);          // Keep the console open in debug mode.         Console.WriteLine(\"Press any key to exit.\");         Console.ReadKey();     } } /*     Output:     person1 Name = Leopold Age = 6     person2 Name = Molly Age = 16     person1 Name = Molly Age = 16 */ \n//Declaring a new object of type Galaxy. Galaxy aGalaxy = new Galaxy();\n",
    "reg_date": "2021-10-12T12:01:54.000Z"
  },
  {
    "id": 851,
    "keyword": null,
    "link": null,
    "title": " calculate average java",
    "description": "Just some minor modification to your code will do (with some var renaming for clarity) :  double sum = 0; //average will have decimal point  for(int i=0; i < args.length; i++){    //parse string to double, note that this might fail if you encounter a non-numeric string    //Note that we could also do Integer.valueOf( args[i] ) but this is more flexible    sum += Double.valueOf( args[i] );  }  double average = sum/args.length;  System.out.println(average );\n",
    "reg_date": "2021-10-12T12:01:54.000Z"
  },
  {
    "id": 852,
    "keyword": null,
    "link": null,
    "title": " calculate days between two dates in java",
    "description": "LocalDate start = LocalDate.parse(\"2020-11-03\"); LocalDate end = LocalDate.parse(\"2020-12-15\");  long diff = DAYS.between(start, end);\nString dateStart = \"01/14/2015 08:29:58\"; String dateStop = \"01/15/2015 11:31:48\";  //HH converts hour in 24 hours format (0-23), day calculation SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy HH:mm:ss\");  Date d1 = null; Date d2 = null;  d1 = format.parse(dateStart); d2 = format.parse(dateStop);  //in milliseconds long diff = d2.getTime() - d1.getTime();  long diffSeconds = diff / 1000 % 60; long diffMinutes = diff / (60 * 1000) % 60; long diffHours = diff / (60 * 60 * 1000) % 24; long diffDays = diff / (24 * 60 * 60 * 1000);  System.out.print(diffDays + \" days, \"); System.out.print(diffHours + \" hours, \"); System.out.print(diffMinutes + \" minutes, \"); System.out.print(diffSeconds + \" seconds.\"); \nSimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\"); \t\t Date birth = sdf.parse(\"2000-01-01\"); Date now = new Date(System.currentTimeMillis()); \t\t Calendar c = Calendar.getInstance(); c.setTimeInMillis(now.getTime() - birth.getTime()); int y = c.get(Calendar.YEAR)-1970; int m = c.get(Calendar.MONTH); int d = c.get(Calendar.DAY_OF_MONTH)-1;\nimport java.util.Date; import java.text.SimpleDateFormat; class Example{    public static void main(String args[]){ \t SimpleDateFormat myFormat = new SimpleDateFormat(\"dd MM yyyy\"); \t String dateBeforeString = \"31 01 2014\"; \t String dateAfterString = \"02 02 2014\";  \t try { \t       Date dateBefore = myFormat.parse(dateBeforeString); \t       Date dateAfter = myFormat.parse(dateAfterString); \t       long difference = dateAfter.getTime() - dateBefore.getTime(); \t       float daysBetween = (difference / (1000*60*60*24));                /* You can also convert the milliseconds to days using this method                 * float daysBetween =                  *         TimeUnit.DAYS.convert(difference, TimeUnit.MILLISECONDS)                 */ \t       System.out.println(\"Number of Days between dates: \"+daysBetween); \t } catch (Exception e) { \t       e.printStackTrace(); \t }    } }\n",
    "reg_date": "2021-10-12T12:01:55.000Z"
  },
  {
    "id": 853,
    "keyword": null,
    "link": null,
    "title": " calculate mean from arraylist jaca",
    "description": "for(int i = 0; i<sum.size(); i++)     total = total+sum.get(i); avg = total / sum.size(); System.out.println(\"The Average IS:\" + avg); \n",
    "reg_date": "2021-10-12T12:01:55.000Z"
  },
  {
    "id": 854,
    "keyword": null,
    "link": null,
    "title": " calculate number of years months and days between two dates in java",
    "description": "LocalDate start = LocalDate.parse(\"2020-11-03\"); LocalDate end = LocalDate.parse(\"2020-12-15\");  long diff = DAYS.between(start, end);\nSimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\"); \t\t Date birth = sdf.parse(\"2000-01-01\"); Date now = new Date(System.currentTimeMillis()); \t\t Calendar c = Calendar.getInstance(); c.setTimeInMillis(now.getTime() - birth.getTime()); int y = c.get(Calendar.YEAR)-1970; int m = c.get(Calendar.MONTH); int d = c.get(Calendar.DAY_OF_MONTH)-1;\nimport java.util.Date; import java.text.SimpleDateFormat; class Example{    public static void main(String args[]){ \t SimpleDateFormat myFormat = new SimpleDateFormat(\"dd MM yyyy\"); \t String dateBeforeString = \"31 01 2014\"; \t String dateAfterString = \"02 02 2014\";  \t try { \t       Date dateBefore = myFormat.parse(dateBeforeString); \t       Date dateAfter = myFormat.parse(dateAfterString); \t       long difference = dateAfter.getTime() - dateBefore.getTime(); \t       float daysBetween = (difference / (1000*60*60*24));                /* You can also convert the milliseconds to days using this method                 * float daysBetween =                  *         TimeUnit.DAYS.convert(difference, TimeUnit.MILLISECONDS)                 */ \t       System.out.println(\"Number of Days between dates: \"+daysBetween); \t } catch (Exception e) { \t       e.printStackTrace(); \t }    } }\nLocalDate jamesBirthDay = new LocalDate(1955, 5, 19); LocalDate now = new LocalDate(2015, 7, 30);          int monthsBetween = Months.monthsBetween(jamesBirthDay, now).getMonths(); int yearsBetween = Years.yearsBetween(jamesBirthDay, now).getYears();          System.out.println(\"Month since father of Java born : \"                      + monthsBetween); System.out.println(\"Number of years since father of Java born : \"                      + yearsBetween);\n",
    "reg_date": "2021-10-12T12:01:55.000Z"
  },
  {
    "id": 855,
    "keyword": null,
    "link": null,
    "title": " calculate pi in java",
    "description": "    private static double calcPi(final int iterations){         double x;         double y;         int successCount = 0;         for (int i = 0; i <= iterations; i++){             x = Math.random();             y = Math.random();             if ((Math.pow(x, 2) + Math.pow(y, 2)) <= 1){                 successCount++;             }         } \t    return (double) (4 * successCount) / iterations;     }\n",
    "reg_date": "2021-10-12T12:01:55.000Z"
  },
  {
    "id": 856,
    "keyword": null,
    "link": null,
    "title": " calculate prime factors of a number java",
    "description": "public static void main(String[] args) {    \tint n=12;     for(int i=2; i<=n; i++){         while(n%i==0){          n=n/i;          System.out.println(i); //prints 2 2 3        }    } }\nimport java.util.Scanner;  public class PrimeFactors {    public static void main(String args[]){       int number;       Scanner sc = new Scanner(System.in);       System.out.println(\"Enter a number ::\");       number = sc.nextInt();             for(int i = 2; i< number; i++) {          while(number%i == 0) {             System.out.println(i+\" \");             number = number/i;          }       }       if(number >2) {          System.out.println(number);       }    } }\n",
    "reg_date": "2021-10-12T12:01:55.000Z"
  },
  {
    "id": 857,
    "keyword": null,
    "link": null,
    "title": " calculate smallest angle difference",
    "description": "public static double angleDiff(double a, double b) {     return ((((a - b) % 360F) + 540F) % 360F) - 180F; }\nvar x = Math.PI * 1.9; var y = Math.PI * 0.1; Math.atan2(Math.sin(x-y), Math.cos(x-y)); // -Math.PI * 0.2\n",
    "reg_date": "2021-10-12T12:01:55.000Z"
  },
  {
    "id": 858,
    "keyword": null,
    "link": null,
    "title": " calculate time java",
    "description": "// get current time in java using LocalTime.now() method  import java.time.LocalTime; public class UsingLocalDate {    public static void main(String[] args)    {       System.out.println(LocalTime.now());      // hr : min : sec.fimto sec    } }\nSystem.out.println(LocalTime.now());\n",
    "reg_date": "2021-10-12T12:01:56.000Z"
  },
  {
    "id": 859,
    "keyword": null,
    "link": null,
    "title": " calculator program in java",
    "description": "import java.util.Scanner; public class Calculator {    public static void main(String[] args) {       double num1;       double num2;       double ans;       char op;       Scanner reader = new Scanner(System.in);       System.out.print(\"Enter two numbers: \");       num1 = reader.nextDouble();       num2 = reader.nextDouble();       System.out.print(\"\\nEnter an operator (+, -, *, /): \");       op = reader.next().charAt(0);       switch(op) {          case '+': ans = num1 + num2;             break;          case '-': ans = num1 - num2;             break;          case '*': ans = num1 * num2;             break;          case '/': ans = num1 / num2;             break;       default: System.out.printf(\"Error! Enter correct operator\");          return;       }       System.out.print(\"\\nThe result is given as follows:\\n\");       System.out.printf(num1 + \" \" + op + \" \" + num2 + \" = \" + ans);    } }\n// this was all coded by me, to use it get Eclipse, or IntelliJ and make a new // Java Project  package javaCode;  import java.util.Scanner;  public class testCode {  \tpublic static void main(String[] args) { \t\t \t\tScanner scan = new Scanner(System.in); \t\t \t\tSystem.out.println(\"Would you like to Add, Subtract, Divide, or Multiply?\"); \t\t \t\tString mathType = scan.next(); \t\t \t\tif (mathType.equalsIgnoreCase(\"add\")) { \t\t\tSystem.out.println(\"Whats the first number you want to add?\"); \t\t\t \t\t\tint firstNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" + \"); \t\t\tSystem.out.println(\"Enter your second number\"); \t\t\t \t\t\tint secondNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" + \" + secondNumber + \" =\"); \t\t\tSystem.out.println(firstNumber + secondNumber); \t\t\t \t\t} else if (mathType.equalsIgnoreCase(\"subtract\")) { \t\t\tSystem.out.println(\"Whats the first number you want to subtract?\"); \t\t\t \t\t\tint firstNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" - \"); \t\t\tSystem.out.println(\"Enter your second number\"); \t\t\t \t\t\tint secondNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" - \" + secondNumber + \" =\"); \t\t\tSystem.out.println(firstNumber - secondNumber); \t\t} else if (mathType.equalsIgnoreCase(\"divide\")) { \t\t\tSystem.out.println(\"Whats the first number you want to divide?\"); \t\t\t \t\t\tint firstNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" % \"); \t\t\tSystem.out.println(\"Enter your second number\"); \t\t\t \t\t\tint secondNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" % \" + secondNumber + \" =\"); \t\t\tSystem.out.println(firstNumber / secondNumber); \t\t} else if (mathType.equalsIgnoreCase(\"multiply\")){ \t\t\tSystem.out.println(\"Whats the first number you want to multiply?\"); \t\t\t \t\t\tint firstNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" x \"); \t\t\tSystem.out.println(\"Enter your second number\"); \t\t\t \t\t\tint secondNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" x \" + secondNumber + \" =\"); \t\t\tSystem.out.println(firstNumber * secondNumber); \t\t} \t\t \t}  }\nSave this file as MyCalculator.java  to compile it use      javac MyCalculator.java  to use the calcuator do this      java MyCalculator    **********************************************/   import java.awt.*;   import java.awt.event.*;   /*********************************************/      public class MyCalculator extends Frame   {      public boolean setClear=true;   double number, memValue;   char op;      String digitButtonText[] = {\"7\", \"8\", \"9\", \"4\", \"5\", \"6\", \"1\", \"2\", \"3\", \"0\", \"+/-\", \".\" };   String operatorButtonText[] = {\"/\", \"sqrt\", \"*\", \"%\", \"-\", \"1/X\", \"+\", \"=\" };   String memoryButtonText[] = {\"MC\", \"MR\", \"MS\", \"M+\" };   String specialButtonText[] = {\"Backspc\", \"C\", \"CE\" };      MyDigitButton digitButton[]=new MyDigitButton[digitButtonText.length];   MyOperatorButton operatorButton[]=new MyOperatorButton[operatorButtonText.length];   MyMemoryButton memoryButton[]=new MyMemoryButton[memoryButtonText.length];   MySpecialButton specialButton[]=new MySpecialButton[specialButtonText.length];      Label displayLabel=new Label(\"0\",Label.RIGHT);   Label memLabel=new Label(\" \",Label.RIGHT);      final int FRAME_WIDTH=325,FRAME_HEIGHT=325;   final int HEIGHT=30, WIDTH=30, H_SPACE=10,V_SPACE=10;   final int TOPX=30, TOPY=50;   ///////////////////////////   MyCalculator(String frameText)//constructor   {   super(frameText);      int tempX=TOPX, y=TOPY;   displayLabel.setBounds(tempX,y,240,HEIGHT);   displayLabel.setBackground(Color.BLUE);   displayLabel.setForeground(Color.WHITE);   add(displayLabel);      memLabel.setBounds(TOPX,  TOPY+HEIGHT+ V_SPACE,WIDTH, HEIGHT);   add(memLabel);      // set Co-ordinates for Memory Buttons   tempX=TOPX;    y=TOPY+2*(HEIGHT+V_SPACE);   for(int i=0; i<memoryButton.length; i++)   {   memoryButton[i]=new MyMemoryButton(tempX,y,WIDTH,HEIGHT,memoryButtonText[i], this);   memoryButton[i].setForeground(Color.RED);   y+=HEIGHT+V_SPACE;   }      //set Co-ordinates for Special Buttons   tempX=TOPX+1*(WIDTH+H_SPACE); y=TOPY+1*(HEIGHT+V_SPACE);   for(int i=0;i<specialButton.length;i++)   {   specialButton[i]=new MySpecialButton(tempX,y,WIDTH*2,HEIGHT,specialButtonText[i], this);   specialButton[i].setForeground(Color.RED);   tempX=tempX+2*WIDTH+H_SPACE;   }      //set Co-ordinates for Digit Buttons   int digitX=TOPX+WIDTH+H_SPACE;   int digitY=TOPY+2*(HEIGHT+V_SPACE);   tempX=digitX;  y=digitY;   for(int i=0;i<digitButton.length;i++)   {   digitButton[i]=new MyDigitButton(tempX,y,WIDTH,HEIGHT,digitButtonText[i], this);   digitButton[i].setForeground(Color.BLUE);   tempX+=WIDTH+H_SPACE;   if((i+1)%3==0){tempX=digitX; y+=HEIGHT+V_SPACE;}   }      //set Co-ordinates for Operator Buttons   int opsX=digitX+2*(WIDTH+H_SPACE)+H_SPACE;   int opsY=digitY;   tempX=opsX;  y=opsY;   for(int i=0;i<operatorButton.length;i++)   {   tempX+=WIDTH+H_SPACE;   operatorButton[i]=new MyOperatorButton(tempX,y,WIDTH,HEIGHT,operatorButtonText[i], this);   operatorButton[i].setForeground(Color.RED);   if((i+1)%2==0){tempX=opsX; y+=HEIGHT+V_SPACE;}   }      addWindowListener(new WindowAdapter()   {   public void windowClosing(WindowEvent ev)   {System.exit(0);}   });      setLayout(null);   setSize(FRAME_WIDTH,FRAME_HEIGHT);   setVisible(true);   }   //////////////////////////////////   static String getFormattedText(double temp)   {   String resText=\"\"+temp;   if(resText.lastIndexOf(\".0\")>0)       resText=resText.substring(0,resText.length()-2);   return resText;  \n/* Create Switch cases */ Scanner sc= new Scanner(System.in); int firstNum= sc.nextInt(); int secondNum= sc.nextInt(); System.out.println(\"Enter an operator (+, -, *, /):\"); char operator= sc.next().chartAt(0); double result=0; switch(operator){   case \"+\":     result+= firstNum+ secondNum;     break;   case \"-\":     result+= firstNum-secondNum;     break;   case \"*\":     result+= firstNum*secondNum;     break;   case \"/\":     result+= firstNum/secondNum;     break; }\npackage main;  import java.util.Scanner;  public class calculator {      public static void greetings(){         System.out.println(\"Hi welcome to the calculator made by Pepa pig made in java! :D\");     }      public static void instruction(){         System.out.println(\"Hi welcome to the calculator made by Pepa pig made in java! :D\");     }      public static void calculator(){         Scanner keyboardInput = new Scanner(System.in);         String calculator;          do {             System.out.print(\"Enter your first digit: \");             double num1 = keyboardInput.nextDouble();              System.out.print(\"Enter your operator: \");             String op = keyboardInput.next();              System.out.print(\"Enter your second digit: \");             double num2 = keyboardInput.nextDouble();              System.out.print(\"= \");              if (op.equals(\"+\")){                 System.out.print(num1 + num2);                 System.out.println(\"\\nYou were adding\");                 System.out.println(\"How I know that cause I have big brain and a smart programmer ;)\");             }else if (op.equals(\"-\")){                 System.out.print(num1 - num2);                 System.out.println(\"\\nYou were subtracting\");                 System.out.println(\"How I know that cause I have big brain and a smart programmer ;)\");             }else if (op.equals(\"*\")){                 System.out.print(num1 * num2);                 System.out.println(\"\\nYou were multiplying\");                 System.out.println(\"How I know that cause I have big brain and a smart programmer ;)\");             }else if (op.equals(\"/\")){                 System.out.print(num1 / num2);                 System.out.println(\"\\nYou were dividing\");                 System.out.println(\"How I know that cause I have big brain and a smart programmer ;)\");             }else if (op.equals(\"%\")){                 System.out.print(num1 % num2);                 System.out.println(\"\\nYou were remanding\");                 System.out.println(\"How I know that cause I have big brain and a smart programmer ;)\");             }else{                 System.out.println(\"Invalid operator\");             }             System.out.print(\"Would you like to restart the calculator? (y or n): \");             calculator = keyboardInput.next();         }         while (calculator.equals(\"y\"));          if (calculator.equals(\"n\")){             System.out.println(\"Leave then kiddo ;-;\");         }     }       public static void main(String[] args) {         greetings();         instruction();         calculator();     } }\nimport java.util.Scanner;  public class Calculator {      public static void main(String[] args) {          Scanner reader = new Scanner(System.in);         System.out.print(\"Enter two numbers: \");          // nextDouble() reads the next double from the keyboard         double first = reader.nextDouble();         double second = reader.nextDouble();          System.out.print(\"Enter an operator (+, -, *, /): \");         char operator = reader.next().charAt(0);          double result;          switch(operator)         {             case '+':                 result = first + second;                 break;              case '-':                 result = first - second;                 break;              case '*':                 result = first * second;                 break;              case '/':                 result = first / second;                 break;              // operator doesn't match any case constant (+, -, *, /)             default:                 System.out.printf(\"Error! operator is not correct\");                 return;         }          System.out.printf(\"%.1f %c %.1f = %.1f\", first, operator, second, result);     } }\n",
    "reg_date": "2021-10-12T12:01:56.000Z"
  },
  {
    "id": 860,
    "keyword": null,
    "link": null,
    "title": " calendar.year java",
    "description": "import java.time.LocalDate;   import java.time.Year;   public class YearExample{     public static void main(String[] args) {       Year y = Year.of(2017);       LocalDate l = y.atDay(123);       System.out.println(l);     }   }  \n",
    "reg_date": "2021-10-12T12:01:56.000Z"
  },
  {
    "id": 861,
    "keyword": null,
    "link": null,
    "title": " calendar java add 1 day",
    "description": "Calendar c = Calendar.getInstance(TimeZone.getDefault()); c.add( Calendar.DATE, 1 );\n",
    "reg_date": "2021-10-12T12:01:56.000Z"
  },
  {
    "id": 862,
    "keyword": null,
    "link": null,
    "title": " calling a void method java",
    "description": "public class MyClass {       void myMethod() {         System.out.println(\"You have called me! My name is: myMethod!\");     }       public static void main(String[] args) {         new MyClass().myMethod();     } } \nint a = 20; int b = 20; public static void sum(){ // Void Method   System.out.println(a + b); } public static int sum(){ // Return Function   return a + b; }\npublic class methods{   public static void main(String[] args){     printSum(5, 15); // Print 20   }   public static void printSum(int a, int b){     System.out.println(a + b);   }   // Our method should be outside the main methods bounds   // Call your function inside the main method. }\npublic class Main {   public static void main(String args[]) {     SayHi();          int sum = AddNums(5, 6);     System.out.println(sum);   }      public static void SayHi() { //This method has no return value     System.out.println(\"Hi!\");   }      public static int AddNums(int a, int b) { //This method has a return value     return a + b; }\n",
    "reg_date": "2021-10-12T12:01:56.000Z"
  },
  {
    "id": 863,
    "keyword": null,
    "link": null,
    "title": " calling method in java",
    "description": "public class MyClass {       void myMethod() {         System.out.println(\"You have called me! My name is: myMethod!\");     }       public static void main(String[] args) {         new MyClass().myMethod();     } } \npublic class methods{   public static void main(String[] args){     printSum(5, 15); // Print 20   }   public static void printSum(int a, int b){     System.out.println(a + b);   }   // Our method should be outside the main methods bounds   // Call your function inside the main method. }\npublic class MyClass {       static void myMethod() {         System.out.println(\"You have called me! My name is: myMethod!\");     }       public static void main(String[] args) {         myMethod();     } }\npublic class MyClass {   static int myMethod(int x) {     return 5 + x;   }    public static void main(String[] args) {     System.out.println(myMethod(3));   } } // Returns 8\n",
    "reg_date": "2021-10-12T12:01:56.000Z"
  },
  {
    "id": 864,
    "keyword": null,
    "link": null,
    "title": " camel java",
    "description": "Apache Camel is a rule-based routing and mediation engine which provides a Java object based implementation of the Enterprise Integration\nimport java.util.Arrays;  class Solution {   public static String camelCase(String input) {     return input.replaceAll(\"([A-Z])\", \" $1\");   } }\n",
    "reg_date": "2021-10-12T12:01:56.000Z"
  },
  {
    "id": 865,
    "keyword": null,
    "link": null,
    "title": " can't convert bytebuffer to string in java",
    "description": "String s = StandardCharsets.UTF_8.decode(byteBuffer).toString();\nString s = StandardCharsets.UTF_8.decode(byteBuffer).toString(); \n// ...populate the buffer... buffer.flip(); // flip the buffer for reading byte[] bytes = new byte[buffer.remaining()]; // create a byte array the length of the number of bytes written to the buffer buffer.get(bytes); // read the bytes that were written String packet = new String(bytes); \nstr.toString();\n",
    "reg_date": "2021-10-12T12:01:57.000Z"
  },
  {
    "id": 866,
    "keyword": null,
    "link": null,
    "title": " can abstract method be protected, default, private",
    "description": " In abstract classes, abstract methods can be public, protected, or default.   It cannot be private.\n",
    "reg_date": "2021-10-12T12:01:57.000Z"
  },
  {
    "id": 867,
    "keyword": null,
    "link": null,
    "title": " can i call another function from main hava",
    "description": "package learningjava;  public class helloworld {     public static void main(String[] args) {         new helloworld().go();         // OR         helloworld.get();     }      public void go(){         System.out.println(\"Hello World\");     }     public static void get(){         System.out.println(\"Hello World, Again\");     } } \n",
    "reg_date": "2021-10-12T12:01:57.000Z"
  },
  {
    "id": 868,
    "keyword": null,
    "link": null,
    "title": " can i run script in ubuntu using java",
    "description": "    String[] cmd = { \"sh\", \"MyFile.sh\", \"\\pathOfTheFile\"};     Runtime.getRuntime().exec(cmd);\n",
    "reg_date": "2021-10-12T12:01:57.000Z"
  },
  {
    "id": 869,
    "keyword": null,
    "link": null,
    "title": " can strings be used in a 2 dimensional array in java",
    "description": "String myTwoDimensionalStringArray[][] = new String[2][2]; myTwoDimensionalStringArray[0][0] = \"Apple\"; myTwoDimensionalStringArray[0][1] = \"Banana\"; myTwoDimensionalStringArray[1][0] = \"Pork\"; myTwoDimensionalStringArray[1][1] = \"Beef\";\n",
    "reg_date": "2021-10-12T12:01:57.000Z"
  },
  {
    "id": 870,
    "keyword": null,
    "link": null,
    "title": " can we create a class inside a class in java",
    "description": "Yes you can  class OuterClass {    class InnerClass {    } }\n",
    "reg_date": "2021-10-12T12:01:57.000Z"
  },
  {
    "id": 871,
    "keyword": null,
    "link": null,
    "title": " cannot find symbol class Context",
    "description": "import android.content.Context;\n",
    "reg_date": "2021-10-12T12:01:57.000Z"
  },
  {
    "id": 872,
    "keyword": null,
    "link": null,
    "title": " cannot find symbol java",
    "description": "The \"Cannot find symbol\" errors generally occur when you try to reference an undeclared variable in your code. A \"Cannot find symbol\" error means that the compiler cannot do this. Your code appears to be referring to something that the compiler doesn't understand. When your code is compiled, the compiler needs to work out what each and every identifier in your code means. As the compiler is going through the code it will find something and know what to do with it or not. Your Cannot find symbol error relates to the identifiers and means that Java cannot figure out what the \"symbol\" means. The general causes for a Cannot find symbol error are things like: - Incorrect spelling. - Wrong case. Halo is different from halo. - Improper use of acceptable identifier values (letters, numbers, underscore, dollar sign), my-class is not the same as myclass. - No variable declaration or variable is outside of the scope you are referencing it in.\n",
    "reg_date": "2021-10-12T12:01:57.000Z"
  },
  {
    "id": 873,
    "keyword": null,
    "link": null,
    "title": " cannot fit requested classes in a single dex file",
    "description": "//Add the library in app gradle implementation 'com.android.support:multidex:1.0.3'  //Add this to the default config in the app gradle multiDexEnabled true    //If this still doesn't work, consider adding this name into the android manifesto android:name=\".MyApplication\"\ndefaultConfig {     ...      multiDexEnabled true }   //In dependencies dependencies { \timplementation 'androidx.multidex:multidex:2.0.1'\nandroid {     defaultConfig {         ...         minSdkVersion 21 <----- *here         targetSdkVersion 26         multiDexEnabled true <------ *here     }     ... } \n def multidex_version = \"2.0.1\"  implementation 'androidx.multidex:multidex:$multidex_version' \n",
    "reg_date": "2021-10-12T12:01:57.000Z"
  },
  {
    "id": 874,
    "keyword": null,
    "link": null,
    "title": " cannot lock java compile cache as it has already been locked by this process",
    "description": "    find ~/.gradle -type f -name \"*.lock\" -delete \n",
    "reg_date": "2021-10-12T12:01:57.000Z"
  },
  {
    "id": 875,
    "keyword": null,
    "link": null,
    "title": " cannot set char field to null value java",
    "description": "//The primitive datatype int isn't nullable.  //What you can do is set its value to 0 char [] c= {'a','b','c','d'}; c[2] = 0; //now c becomes {'a','b',0,'d'} \n",
    "reg_date": "2021-10-12T12:01:58.000Z"
  },
  {
    "id": 876,
    "keyword": null,
    "link": null,
    "title": " capacitor-android. Unfortunately you can't have non-Gradle Java modules and Android-Gradle modules in one project",
    "description": "1- close the project  2- close Android Studio IDE  3- delete the .idea directory  4- delete all .iml files  5- open Android Studio IDE and import the project  Answer from here\n",
    "reg_date": "2021-10-12T12:01:58.000Z"
  },
  {
    "id": 877,
    "keyword": null,
    "link": null,
    "title": " capcitor FERR CLEARTEXT NOT PERMITTED",
    "description": "Just add this to your AndroidManifest.xml in the tag like  <application android:usesCleartextTraffic=\"true\">\n",
    "reg_date": "2021-10-12T12:01:58.000Z"
  },
  {
    "id": 878,
    "keyword": null,
    "link": null,
    "title": " capitalize each word in string java",
    "description": "String str = \"hello world!\";  // capitalize first letter String output = str.substring(0, 1).toUpperCase() + str.substring(1);  // print the string System.out.println(output); // Hello world! \n//You can user the WordUtils class from apache commons-text library WordUtils.capitalize(str) \nString str = \"java\"; String cap = str.substring(0, 1).toUpperCase() + str.substring(1);\nimport org.apache.commons.text.WordUtils;  public class WordUtilsCapitalizeFullyExample {     public static void main(String[] args) {         String result1 = WordUtils.capitalizeFully(\"how to CAPITALIZE first letter words\");         System.out.println(result1);     } }\n",
    "reg_date": "2021-10-12T12:01:58.000Z"
  },
  {
    "id": 879,
    "keyword": null,
    "link": null,
    "title": " capitalize string java",
    "description": "char q = Character.toUpperCase('d');\nString str = \"java\"; String cap = str.substring(0, 1).toUpperCase() + str.substring(1); // cap = \"Java\"\nString str = \"hello world!\";  // capitalize first letter String output = str.substring(0, 1).toUpperCase() + str.substring(1);  // print the string System.out.println(output); // Hello world! \n//You can user the WordUtils class from apache commons-text library WordUtils.capitalize(str) \nclass Main {   public static void main(String[] args) {      // create a string     String message = \"everyone loves java\";      // stores each characters to a char array     char[] charArray = message.toCharArray();     boolean foundSpace = true;      for(int i = 0; i < charArray.length; i++) {        // if the array element is a letter       if(Character.isLetter(charArray[i])) {          // check space is present before the letter         if(foundSpace) {            // change the letter into uppercase           charArray[i] = Character.toUpperCase(charArray[i]);           foundSpace = false;         }       }        else {         // if the new character is not character         foundSpace = true;       }     }      // convert the char array to the string     message = String.valueOf(charArray);     System.out.println(\"Message: \" + message);   } }\nString str = \"java\"; String cap = str.substring(0, 1).toUpperCase() + str.substring(1);\n",
    "reg_date": "2021-10-12T12:01:58.000Z"
  },
  {
    "id": 880,
    "keyword": null,
    "link": null,
    "title": " cast double to string java",
    "description": "double total = 44; String total2 = Double.toString(total);\ndouble number = -895.25; String numberAsString = String.valueOf(number);\n",
    "reg_date": "2021-10-12T12:01:58.000Z"
  },
  {
    "id": 881,
    "keyword": null,
    "link": null,
    "title": " cast java",
    "description": "Primitive Type casting and Reference Type casting  PRIMITIVE CASTING: implicit casting (casting smaller type to larger int a = 100; double c = a;)  explicit casting (casting larger to smaller   byte b = (byte) a;  REFERENCE CASTING:  upcasting - implicitly done (casting smaller type to larger) Collection<Integer> collection = new ArrayList<>();  downcasting (cast larger type to smaller one ) List <Integer> list = ( ArrayList ) collection; FRAMEWORK EXAMPLE: Up Casting, Down Casting in Multi Browser testing.  WebDriver, Chrome Driver, Firefox Driver object  I casted to WebDriver to making reference type.  Whenever you taking Screenshots,  whenever executing Java script command. \n// You can typecast to convert a variable of one data type to another. // Wide Casting converts small data types to larger ones. // Narrow Casting converts large data types to smaller ones. // Java can automatically Wide Cast. // Java will throw an error when trying to automatically Narrow Cast. // This is because data is often lost when Narrow Casting. // Narrow Casting must be done manually.  //Wide Cast: int SomeNumber = 5; double WideCastedNumber = (double)SomeNumber;  //Narrow Cast: double SomeNumber = 5.39; int NarrowCastedNumber = (int)SomeNumber; //Note: The data that holds the decimal places will be lost!\nJAVA: Example of cast:  int SomeNumber = 5; //int  double WideCastedNumber = (double)SomeNumber; //from int to double  double myDouble = 9.78; int myInt = (int) myDouble; // from double to int\nByte-->short-->char-->Int-->long-->float-->double\n",
    "reg_date": "2021-10-12T12:01:58.000Z"
  },
  {
    "id": 882,
    "keyword": null,
    "link": null,
    "title": " cast long to string java",
    "description": "long longV = 1L; System.out.println(String.valueOf(longV));\n",
    "reg_date": "2021-10-12T12:01:58.000Z"
  },
  {
    "id": 883,
    "keyword": null,
    "link": null,
    "title": " catch array out of bounds exception java",
    "description": "try {     array[index] = someValue; } catch(ArrayIndexOutOfBoundsException exception) {     handleTheExceptionSomehow(exception); }\n",
    "reg_date": "2021-10-12T12:01:58.000Z"
  },
  {
    "id": 884,
    "keyword": null,
    "link": null,
    "title": " celsius to fahrenheit in java",
    "description": "import java.util.Scanner;  public class Main {      public static void main(String[] args) {          // celsius -----> fahrenheit          Scanner scanner = new Scanner(System.in);          System.out.print(\"Enter temperature in degree celsius: \");         float temperatureCelsius = scanner.nextFloat();          float temperatureFahrenheit = (temperatureCelsius * 9/5) + 32;          System.out.printf(\"\\n%.2f C = %.2f F\\n\",temperatureCelsius, temperatureFahrenheit);     } }\ncelsius = ((Fahrenheit - 32)*5)/9;\n",
    "reg_date": "2021-10-12T12:01:58.000Z"
  },
  {
    "id": 885,
    "keyword": null,
    "link": null,
    "title": " center justify jlabel",
    "description": "import javax.swing.SwingConstants; import javax.swing.JLabel;  Jlabel label1 = new Jlabel(\"Test\"); label1.setHorizontalAlignment(SwingConstants.CENTER); //Can also use SwingConstants.LEFT & .RIGHT\n",
    "reg_date": "2021-10-12T12:01:59.000Z"
  },
  {
    "id": 886,
    "keyword": null,
    "link": null,
    "title": " centre button android",
    "description": " Center using a LinearLayout XML:  <LinearLayout     android:id=\"@+id/LinearLayout1\"     android:layout_width=\"match_parent\"     android:layout_height=\"match_parent\"     android:gravity=\"center\"     android:orientation=\"vertical\" >      <ImageButton         android:id=\"@+id/btnFindMe\"         android:layout_width=\"wrap_content\"         android:layout_height=\"wrap_content\"         android:background=\"@drawable/findme\" /> </LinearLayout>\n",
    "reg_date": "2021-10-12T12:01:59.000Z"
  },
  {
    "id": 887,
    "keyword": null,
    "link": null,
    "title": " change button color java swing",
    "description": "botton.SetBackground(Color.red);\n",
    "reg_date": "2021-10-12T12:01:59.000Z"
  },
  {
    "id": 888,
    "keyword": null,
    "link": null,
    "title": " change color of action bar android studio",
    "description": "getSherlockActivity().getSupportActionBar().setBackgroundDrawable(new ColorDrawable(0xff00ACED)); mActionBar.setBackgroundDrawable(new ColorDrawable(0xff00DDED)); mActionBar.setDisplayShowTitleEnabled(false); mActionBar.setDisplayShowTitleEnabled(true);\ngetSupportActionBar().setBackgroundDrawable(new ColorDrawable(getResources().getColor(R.color.red))); \ngetActionBar()/* or getSupportActionBar() */.setTitle(Html.fromHtml(\"<font color=\\\"red\\\">\" + getString(R.string.app_name) + \"</font>\")); \n",
    "reg_date": "2021-10-12T12:01:59.000Z"
  },
  {
    "id": 889,
    "keyword": null,
    "link": null,
    "title": " change color of eclipse editor",
    "description": "Go to Window > Preferences, then navigate to General  > Editors > Text Editors. In the panel on the right, from the Appearance color options list select Background  color, then use the color picker to choose the desired  color (the System default checkbox must be unchecked).\n",
    "reg_date": "2021-10-12T12:01:59.000Z"
  },
  {
    "id": 890,
    "keyword": null,
    "link": null,
    "title": " change color of particular row in jtable",
    "description": "import javax.swing.table.*; import java.awt.event.*; import javax.swing.*; import java.util.*; import java.awt.*;    public class Main extends JFrame {    public Main() {       super(\"TableModel Demonstration\");           // create our own custom TableModel       WineTableModel wineModel = new WineTableModel();       JTable table = new JTable(wineModel);          // since we&rsquo;re using values of floats and boolean here, we need       // to set the cell renderer for every column.        for (int i =0; i<wineModel.getColumnCount();i++) {          table.setDefaultRenderer(table.getColumnClass(i), new WineCellRenderer());       }                // add rows to our TableModel, each row is represented as a Wine object       wineModel.addWine(new Wine(\"Chateau Meyney, St. Estephe\", \"1994\", 18.75f, true));       wineModel.addWine(new Wine(\"Chateau Montrose, St. Estephe\", \"1975\", 54.25f, true));       wineModel.addWine(new Wine(\"Chateau Gloria, St. Julien\", \"1993\", 22.99f, false));       wineModel.addWine(new Wine(\"Chateau Beychevelle, St. Julien\", \"1970\", 61.63f, false));       wineModel.addWine(new Wine(\"Chateau La Tour de Mons, Margeaux\", \"1975\", 57.03f, true));       wineModel.addWine(new Wine(\"Chateau Brane-Cantenac, Margeaux\", \"1978\", 49.92f, false));          // create the scroll pane and add the table to it.        JScrollPane scrollPane = new JScrollPane(table);          // add the scroll pane to this window.       getContentPane().add(scrollPane, BorderLayout.CENTER);          addWindowListener(new WindowAdapter() {          public void windowClosing(WindowEvent e) {             System.exit(0);          }       });    }       public static void main(String[] args) {       Main main = new Main();       main.pack();       main.setVisible(true);    } }    // a simple object that holds data about a particular wine class Wine {    private String  name;    private String  vintage;    private float   price;    private boolean inStock;       public Wine(String name, String vintage, float price, boolean inStock) {       this.name = name;       this.vintage = vintage;       this.price = price;       this.inStock = inStock;    }       public String getName()     { return name; }    public String getVintage()  { return vintage; }    public float  getPrice()    { return price; }     public boolean getInStock() { return inStock; }       public String toString() {        return \"[\" + name + \", \" + vintage + \", \" + price + \", \" + inStock + \"]\"; } }    class WineTableModel extends AbstractTableModel {    // holds the strings to be displayed in the column headers of our table    final String[] columnNames = {\"Name\", \"Vintage\", \"Price\", \"In stock?\"};       // holds the data types for all our columns    final Class[] columnClasses = {String.class, String.class, Float.class, Boolean.class};       // holds our data    final Vector data = new Vector();        // adds a row    public void addWine(Wine w) {       data.addElement(w);       fireTableRowsInserted(data.size()-1, data.size()-1);    }       public int getColumnCount() {       return columnNames.length;    }               public int getRowCount() {       return data.size();    }       public String getColumnName(int col) {       return columnNames[col];    }       public Class getColumnClass(int c) {       return columnClasses1;    }       public Object getValueAt(int row, int col) {       Wine wine = (Wine) data.elementAt(row);       if (col == 0)      return wine.getName();       else if (col == 1) return wine.getVintage();       else if (col == 2) return new Float(wine.getPrice());       else if (col == 3) return new Boolean(wine.getInStock());       else return null;    }       public Object getValueAtRow(int row) {       Wine wine = (Wine) data.elementAt(row);       return wine;    }       public boolean isCellEditable(int row, int col) {       return false;    } }    class WineCellRenderer extends DefaultTableCellRenderer {    public Component getTableCellRendererComponent(             JTable table, Object value, boolean isSelected,             boolean hasFocus, int row, int column)    {       WineTableModel wtm = (WineTableModel) table.getModel();       Wine wine = (Wine) wtm.getValueAtRow(row);          if (wine.getPrice() < 55) {          setBackground(Color.green);       }       else {          setBackground(Color.red);       }          return super.getTableCellRendererComponent(table, value, isSelected,                                                   hasFocus, row, column);    } } \n",
    "reg_date": "2021-10-12T12:01:59.000Z"
  },
  {
    "id": 891,
    "keyword": null,
    "link": null,
    "title": " change color of text in textview android",
    "description": "TextView text = (TextView) findViewById(R.id.text); text.setTextColor(Color.parseColor(\"#FFFFFF\"));\n",
    "reg_date": "2021-10-12T12:01:59.000Z"
  },
  {
    "id": 892,
    "keyword": null,
    "link": null,
    "title": " change date JDatePicker java",
    "description": "//I also had the same issue. But this solved my issue //set \"setSelected(true)\" after you set the date  jDatePanelImpl.getModel().setDate(getYear(utilDate),getMonth(utilDate),getDay(utilDate)); jDatePanelImpl.getModel().setSelected(true);\n",
    "reg_date": "2021-10-12T12:01:59.000Z"
  },
  {
    "id": 893,
    "keyword": null,
    "link": null,
    "title": " change default java version mac",
    "description": "/usr/libexec/java_home -V # Matching Java Virtual Machines (2): #    16.0.1, x86_64:     \"Java SE 16.0.1\" #    11.0.11.1, x86_64:  \"Amazon Corretto 11\" #    \t ^ #        | #     VERSION export JAVA_HOME=`/usr/libexec/java_home -v [VERSION]`\nnano ~/.zshrc  export JAVA_HOME=$(/usr/libexec/java_home -v 1.8.0) \n/usr/libexec/java_home -V   export JAVA_HOME=`/usr/libexec/java_home -v 1.6.0_65-b14-462` //java 8\n",
    "reg_date": "2021-10-12T12:01:59.000Z"
  },
  {
    "id": 894,
    "keyword": null,
    "link": null,
    "title": " change drawable color programmatically android",
    "description": " //resource Drawable unwrappedDrawable = AppCompatResources.getDrawable(context, R.drawable.my_drawable);  Drawable wrappedDrawable = DrawableCompat.wrap(unwrappedDrawable); DrawableCompat.setTint(wrappedDrawable, Color.RED);      //activity Drawable unwrappedDrawable = tvContinue.getBackground(); Drawable wrappedDrawable = DrawableCompat.wrap(unwrappedDrawable); DrawableCompat.setTint(wrappedDrawable, (Color.parseColor(getPreferences().getString(Constant.SECOND_COLOR, Constant.SECONDARY_COLOR))));  //adapter Drawable unwrappedDrawable = holder.tvOff.getBackground();  Drawable wrappedDrawable = DrawableCompat.wrap(unwrappedDrawable);  DrawableCompat.setTint(wrappedDrawable, (Color.parseColor(((BaseActivity) activity).getPreferences().getString(Constant.SECOND_COLOR, Constant.SECONDARY_COLOR))));   //  \nDrawable unwrappedDrawable = AppCompatResources.getDrawable(context, R.drawable.my_drawable);  Drawable wrappedDrawable = DrawableCompat.wrap(unwrappedDrawable); DrawableCompat.setTint(wrappedDrawable, Color.RED);  \n Drawable unwrappedDrawable = tvContinueShopping.getBackground();         Drawable wrappedDrawable = DrawableCompat.wrap(unwrappedDrawable);         DrawableCompat.setTint(wrappedDrawable, (Color.parseColor(getPreferences().getString(Constant.SECOND_COLOR, Constant.SECONDARY_COLOR)))); \n",
    "reg_date": "2021-10-12T12:02:00.000Z"
  },
  {
    "id": 895,
    "keyword": null,
    "link": null,
    "title": " change font size java swing",
    "description": "// make sure the new size is a float, not an int (add f at the end of the number) label.setFont(label.getFont().deriveFont(newSize));\n",
    "reg_date": "2021-10-12T12:02:00.000Z"
  },
  {
    "id": 896,
    "keyword": null,
    "link": null,
    "title": " change fragment in android studio",
    "description": "// put the following code in onClickListner // public void onClickListner(View view){ Navigation.findNavController(view).navigate(R.id.action_fromFragment_toFragment); // action_fromFragment_toFragment is the id of transformatino, look in fragment map. // }\n",
    "reg_date": "2021-10-12T12:02:00.000Z"
  },
  {
    "id": 897,
    "keyword": null,
    "link": null,
    "title": " change height of row at JTable",
    "description": "table.setRowHeight(20);\n",
    "reg_date": "2021-10-12T12:02:00.000Z"
  },
  {
    "id": 898,
    "keyword": null,
    "link": null,
    "title": " change java version",
    "description": "# on linux sudo update-alternatives --config java # then just input the number of the jdk you # want to use as default and hit Enter\n/usr/libexec/java_home -V   export JAVA_HOME=`/usr/libexec/java_home -v 1.6.0_65-b14-462` //java 8\n export JAVA_HOME=`/usr/libexec/java_home -v 1.8` \n",
    "reg_date": "2021-10-12T12:02:00.000Z"
  },
  {
    "id": 899,
    "keyword": null,
    "link": null,
    "title": " change java version command line debian",
    "description": "sudo update-alternatives --config java\n",
    "reg_date": "2021-10-12T12:02:00.000Z"
  },
  {
    "id": 900,
    "keyword": null,
    "link": null,
    "title": " change javahome cmd",
    "description": "echo %JAVA_HOME% \nsetx JAVA_HOME -m \"Path\"\n",
    "reg_date": "2021-10-12T12:02:00.000Z"
  },
  {
    "id": 901,
    "keyword": null,
    "link": null,
    "title": " change kotlin to java in android studio",
    "description": "Android studio 4.2.2 Tools > Kotlin > Show Kotlin bytecode\n",
    "reg_date": "2021-10-12T12:02:00.000Z"
  },
  {
    "id": 902,
    "keyword": null,
    "link": null,
    "title": " change number into array in java",
    "description": "String temp = Integer.toString(guess); int[] newGuess = new int[temp.length()]; for (int i = 0; i < temp.length(); i++) {     newGuess[i] = temp.charAt(i) - '0'; }\n",
    "reg_date": "2021-10-12T12:02:00.000Z"
  },
  {
    "id": 903,
    "keyword": null,
    "link": null,
    "title": " change port in spring boot",
    "description": "server.port=8081\nserver.port=8081 \n",
    "reg_date": "2021-10-12T12:02:00.000Z"
  },
  {
    "id": 904,
    "keyword": null,
    "link": null,
    "title": " change spring port",
    "description": "server.port=8081\nserver.port=8081 \n",
    "reg_date": "2021-10-12T12:02:01.000Z"
  },
  {
    "id": 905,
    "keyword": null,
    "link": null,
    "title": " change status bar color android",
    "description": " public void statuscolor(){         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {             Window window = getWindow();             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);             window.setStatusBarColor(Color.parseColor(getPreferences().getString(Constant.SECONDARY_COLOR, Constant.SECONDARY_COLOR)));         }     }\n// for my fellow react-native developers // add this in styles.xml <resources>     <!-- Base application theme. -->     <style name=\"AppTheme\" parent=\"Theme.AppCompat.DayNight.NoActionBar\">         <!-- Customize your theme here. -->         <item name=\"android:textColor\">#000000</item>         <item name=\"android:windowDisablePreview\">true</item>         <item name=\"android:windowBackground\">#000000</item>         <item name=\"android:colorBackground\">#000000</item>         <item name=\"android:statusBarColor\">#000000</item>//<--add_this     </style>  </resources>\nWindow window = activity.getWindow();  // clear FLAG_TRANSLUCENT_STATUS flag: window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);  // add FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS flag to the window window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);  // finally change the color window.setStatusBarColor(ContextCompat.getColor(activity,R.color.my_statusbar_color));\nWindowInsetsControllerCompat(<window>, <view>).isAppearanceLightStatusBars = Boolean Window window = Activity.getWindow(); View view = window.getDecorView();  // You need androidx.core for this\nif (Build.VERSION.SDK_INT >= 21) {             Window window = this.getWindow();             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);             window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);             window.setStatusBarColor(this.getResources().getColor(R.color.colorPrimaryDark));         } \n",
    "reg_date": "2021-10-12T12:02:01.000Z"
  },
  {
    "id": 906,
    "keyword": null,
    "link": null,
    "title": " change status bar color android programmatically",
    "description": " public void statuscolor(){         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {             Window window = getWindow();             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);             window.setStatusBarColor(Color.parseColor(getPreferences().getString(Constant.SECONDARY_COLOR, Constant.SECONDARY_COLOR)));         }     }\n// for my fellow react-native developers // add this in styles.xml <resources>     <!-- Base application theme. -->     <style name=\"AppTheme\" parent=\"Theme.AppCompat.DayNight.NoActionBar\">         <!-- Customize your theme here. -->         <item name=\"android:textColor\">#000000</item>         <item name=\"android:windowDisablePreview\">true</item>         <item name=\"android:windowBackground\">#000000</item>         <item name=\"android:colorBackground\">#000000</item>         <item name=\"android:statusBarColor\">#000000</item>//<--add_this     </style>  </resources>\nWindowInsetsControllerCompat(<window>, <view>).isAppearanceLightStatusBars = Boolean Window window = Activity.getWindow(); View view = window.getDecorView();  // You need androidx.core for this\ngetSherlockActivity().getSupportActionBar().setBackgroundDrawable(new ColorDrawable(0xff00ACED)); mActionBar.setBackgroundDrawable(new ColorDrawable(0xff00DDED)); mActionBar.setDisplayShowTitleEnabled(false); mActionBar.setDisplayShowTitleEnabled(true);\n",
    "reg_date": "2021-10-12T12:02:01.000Z"
  },
  {
    "id": 907,
    "keyword": null,
    "link": null,
    "title": " change status bar color in android studio",
    "description": "if (Build.VERSION.SDK_INT >= 21) {             Window window = this.getWindow();             window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);             window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);             window.setStatusBarColor(this.getResources().getColor(R.color.colorPrimaryDark));         } \n",
    "reg_date": "2021-10-12T12:02:01.000Z"
  },
  {
    "id": 908,
    "keyword": null,
    "link": null,
    "title": " change string to char array",
    "description": "String str = \"example\"; char[] ch = str.toCharArray(); \nString myString = \"Hello, world!\"; char[] myCharArray = myString.toCharArray();\nString s=\"Welcome to Java Programming\"; char arr[]=s.toCharArray(); for(int i=0;i<arr.length;i++){     System.out.println(\"Data at [\"+i+\"]=\"+arr[i]); } \n",
    "reg_date": "2021-10-12T12:02:01.000Z"
  },
  {
    "id": 909,
    "keyword": null,
    "link": null,
    "title": " change the value in a hashtable java",
    "description": "map.replace(key, newValue);\n",
    "reg_date": "2021-10-12T12:02:01.000Z"
  },
  {
    "id": 910,
    "keyword": null,
    "link": null,
    "title": " change url by jquery without refresh page",
    "description": "// Current URL: https://my-website.com/page_a const nextURL = 'https://my-website.com/page_b'; const nextTitle = 'My new page title'; const nextState = { additionalInformation: 'Updated the URL with JS' };  // This will create a new entry in the browser's history, without reloading window.history.pushState(nextState, nextTitle, nextURL);  // This will replace the current entry in the browser's history, without reloading window.history.replaceState(nextState, nextTitle, nextURL);\n// Current URL: https://my-website.com/page_a const nextURL = 'https://my-website.com/page_b'; const nextTitle = 'My new page title'; const nextState = { additionalInformation: 'Updated the URL with JS' };  // This will create a new entry in the browser's history, without reloading window.history.pushState(nextState, nextTitle, nextURL);  // This will replace the current entry in the browser's history, without reloading window.history.replaceState(nextState, nextTitle, nextURL);\n",
    "reg_date": "2021-10-12T12:02:01.000Z"
  },
  {
    "id": 911,
    "keyword": null,
    "link": null,
    "title": " change visibility of textview andoird",
    "description": "textView.setVisibility(TextView.INVISIBLE); textView.setVisibility(TextView.VISIBLE);\n",
    "reg_date": "2021-10-12T12:02:01.000Z"
  },
  {
    "id": 912,
    "keyword": null,
    "link": null,
    "title": " changer version java terminal",
    "description": "/usr/libexec/java_home -V   export JAVA_HOME=`/usr/libexec/java_home -v 1.6.0_65-b14-462` //java 8\n export JAVA_HOME=`/usr/libexec/java_home -v 1.8` \n",
    "reg_date": "2021-10-12T12:02:01.000Z"
  },
  {
    "id": 913,
    "keyword": null,
    "link": null,
    "title": " char array in java",
    "description": "String str = \"example\"; char[] ch = str.toCharArray(); \nchar[] JavaCharArray = new char[5]; JavaCharArray[0] = 'r'; JavaCharArray[1] = 's'; JavaCharArray[2] = 't'; JavaCharArray[3] = 'u'; \n",
    "reg_date": "2021-10-12T12:02:02.000Z"
  },
  {
    "id": 914,
    "keyword": null,
    "link": null,
    "title": " char array to arraylist java",
    "description": "import java.util.ArrayList; import java.util.List;  // Convert a String to a List of Characters class Util { \tpublic static void main(String[] args) \t{ \t\tString string = \"Techie Delight\"; \t\tList<Character> chars = new ArrayList<>();  \t\tfor (char ch: string.toCharArray()) { \t\t\tchars.add(ch); \t\t}  \t\tSystem.out.println(chars); \t} }\nmyString.chars().mapToObj(c -> (char) c).collect(Collectors.toList());\npublic char[] toArray(List<Character> list){     char[] toReturn = new char[list.size()];     int i = 0;     for(char c : list)         toReturn[i ++] = c;     return toReturn; } \n",
    "reg_date": "2021-10-12T12:02:02.000Z"
  },
  {
    "id": 915,
    "keyword": null,
    "link": null,
    "title": " char array to string in java",
    "description": "String str = \"example\"; char[] ch = str.toCharArray(); \nchar[] a = {'h', 'e', 'l', 'l', 'o', ' ', 'w', 'o', 'r', 'l', 'd'}; String str = new String(a);\nchar[] arr = { 'p',\" \",'q', 'r', 's' };       String str = String.valueOf(arr);       System.out.println(str);//\"p qrs\"\n// java convert array of char to string public class CharArrayToString {    public static void main(String[] args)    {       char[] charArray = new char[]{'F','l','o','w','e','r','B','r','a','c','k','e','t','s'};       String str = new String(charArray);       System.out.println(str);    } }\nString string = String.valueOf(a); \n       // Method 1: Using String object       char[] ch = {'g', 'o', 'o', 'd', ' ', 'm', 'o', 'r', 'n', 'i', 'n', 'g'};       String str = new String(ch);       System.out.println(str);  \n",
    "reg_date": "2021-10-12T12:02:02.000Z"
  },
  {
    "id": 916,
    "keyword": null,
    "link": null,
    "title": " char array to string java",
    "description": "String str = \"example\"; char[] ch = str.toCharArray(); \nchar[] a = {'h', 'e', 'l', 'l', 'o', ' ', 'w', 'o', 'r', 'l', 'd'}; String str = new String(a);\nchar[] arr = { 'p',\" \",'q', 'r', 's' };       String str = String.valueOf(arr);       System.out.println(str);//\"p qrs\"\n// java convert array of char to string public class CharArrayToString {    public static void main(String[] args)    {       char[] charArray = new char[]{'F','l','o','w','e','r','B','r','a','c','k','e','t','s'};       String str = new String(charArray);       System.out.println(str);    } }\nString string = String.valueOf(a); \n    final char[] charArray = { 'g','e','e','k','s','f','o','r','g','e','e','k','s' };     String string = new String(charArray);  \tSystem.out.println(string);  \t// -> \"geeksforgeeks\"\n",
    "reg_date": "2021-10-12T12:02:02.000Z"
  },
  {
    "id": 917,
    "keyword": null,
    "link": null,
    "title": " char arraylist java",
    "description": "  import java.util.ArrayList;    public class Test{         String words = new String(\"HELLO GOODBYE!\");        ArrayList<Character> sample = new ArrayList<Character>();         for(int i = 0; i<words.length(); i++){            sample.add(words.charAt(i));        }   }\nArrayList<Character> operations = new ArrayList<Character>();\n",
    "reg_date": "2021-10-12T12:02:02.000Z"
  },
  {
    "id": 918,
    "keyword": null,
    "link": null,
    "title": " char cannot be converted to string",
    "description": "//As the compiler said, you can't convert a char to a String.  //If you have a char and you really want to convert it to a String of length 1,  //this will work:  String s = String.valueOf(c); //Or String s = Character.toString(c); \n",
    "reg_date": "2021-10-12T12:02:02.000Z"
  },
  {
    "id": 919,
    "keyword": null,
    "link": null,
    "title": " char to int",
    "description": "public class JavaExample{      public static void main(String args[]){   \tchar ch = '9'; \t\t \t/* Since parseInt() method of Integer class accepts    \t * String argument only, we must need to convert \t * the char to String first using the String.valueOf() \t * method and then we pass the String to the parseInt() \t * method to convert the char to int \t */ \tint num = Integer.parseInt(String.valueOf(ch)); \t\t \tSystem.out.println(num);    } }\nint n = Character.getNumericValue(char);\nint i = (int)(c - '0'); \nchar something = '1'; int value = Integer.parseInt(something + \"\"); System.out.println(value);  // prints 1\n",
    "reg_date": "2021-10-12T12:02:02.000Z"
  },
  {
    "id": 920,
    "keyword": null,
    "link": null,
    "title": " char to string jva",
    "description": "char c = 'a'; String s = Character.toString(c); //s == \"a\"\n// Convert char to string java public class CharToStringJava {    public static void main(String[] args)    {       char ch ='G';       String str = Character.toString(ch);       System.out.println(\"char to string is: \" + str);    } }\nfrom character to string:  \tchar c = 'a'; \tString s = Character.toString(c); \t//s == \"a\"\nchar ch = 'a'; String.valueOf(ch);\n",
    "reg_date": "2021-10-12T12:02:02.000Z"
  },
  {
    "id": 921,
    "keyword": null,
    "link": null,
    "title": " char variable java",
    "description": "char inital = 'N'; // IT IS IMPORTANT TO REMEMBER TO USE SINGLE QUOTES WHEN WRITING CHAR OR IT WON'T WORK\n",
    "reg_date": "2021-10-12T12:02:02.000Z"
  },
  {
    "id": 922,
    "keyword": null,
    "link": null,
    "title": " character.isalphanumeric java",
    "description": "!Character.isLetterOrDigit(char) \n",
    "reg_date": "2021-10-12T12:02:02.000Z"
  },
  {
    "id": 923,
    "keyword": null,
    "link": null,
    "title": " character at index of string java",
    "description": "String str = \"Grepper\"; char ch = str.charAt(0); //ch is assigned the value of G\n",
    "reg_date": "2021-10-12T12:02:03.000Z"
  },
  {
    "id": 924,
    "keyword": null,
    "link": null,
    "title": " character is alphabet or not in java",
    "description": "class Main {   public static void main(String[] args) {      // declare a variable     char c = 'a';      // checks if c is an alphabet     if (Character.isAlphabetic(c)) {       System.out.println(c + \" is an alphabet.\");     }     else {       System.out.println(c + \" is not an alphabet.\");     }   } }\n",
    "reg_date": "2021-10-12T12:02:03.000Z"
  },
  {
    "id": 925,
    "keyword": null,
    "link": null,
    "title": " character to lower java",
    "description": "string.toLowerCase();  \nCharacter.toLowerCase(char ch) \nCharacter.toLowerCasr(<char need to lower>)\n",
    "reg_date": "2021-10-12T12:02:03.000Z"
  },
  {
    "id": 926,
    "keyword": null,
    "link": null,
    "title": " character types java",
    "description": "Character in Java is a primitive data type whose default size is 2. It ranges from 0 to 65,535 (inclusive).\n",
    "reg_date": "2021-10-12T12:02:03.000Z"
  },
  {
    "id": 927,
    "keyword": null,
    "link": null,
    "title": " charat(0).touppercase() java",
    "description": "string s=\"hello\"; s = Character.toUpperCase(s.charAt(0)) + s.substring(1); The output will be: Hello\n",
    "reg_date": "2021-10-12T12:02:03.000Z"
  },
  {
    "id": 928,
    "keyword": null,
    "link": null,
    "title": " charcodeat java",
    "description": "String str = \"Hello World\"; int codePointAt0 = Character.codePointAt(str, 0); \n",
    "reg_date": "2021-10-12T12:02:03.000Z"
  },
  {
    "id": 929,
    "keyword": null,
    "link": null,
    "title": " check character is alphanumeric java",
    "description": " javaCopypublic class CheckCharAlpha {     public static void main(String[] args) {          boolean letterOrDigit = isAlphaNumeric('k');         System.out.println(letterOrDigit);     }      public static boolean isAlphaNumeric(char char1) {         return (char1 >= 'a' && char1 <= 'z') || (char1 >= 'A' && char1 <= 'Z') || (char1 >= '0' && char1 <= '9');     } } \n",
    "reg_date": "2021-10-12T12:02:03.000Z"
  },
  {
    "id": 930,
    "keyword": null,
    "link": null,
    "title": " check curl version",
    "description": "in CMD curl --version\n",
    "reg_date": "2021-10-12T12:02:03.000Z"
  },
  {
    "id": 931,
    "keyword": null,
    "link": null,
    "title": " check element is alphabet java",
    "description": "class Main {   public static void main(String[] args) {      // declare a variable     char c = 'a';      // checks if c is an alphabet     if (Character.isAlphabetic(c)) {       System.out.println(c + \" is an alphabet.\");     }     else {       System.out.println(c + \" is not an alphabet.\");     }   } }\n",
    "reg_date": "2021-10-12T12:02:04.000Z"
  },
  {
    "id": 932,
    "keyword": null,
    "link": null,
    "title": " check folder for files java",
    "description": "public void listFilesForFolder(final File folder) {     for (final File fileEntry : folder.listFiles()) {         if (fileEntry.isDirectory()) {             listFilesForFolder(fileEntry);         } else {             System.out.println(fileEntry.getName());         }     } }  final File folder = new File(\"/home/you/Desktop\"); listFilesForFolder(folder);\n",
    "reg_date": "2021-10-12T12:02:04.000Z"
  },
  {
    "id": 933,
    "keyword": null,
    "link": null,
    "title": " check how many times a character appears in a string java",
    "description": "str.chars().filter(num -> num == '$').count()\n",
    "reg_date": "2021-10-12T12:02:04.000Z"
  },
  {
    "id": 934,
    "keyword": null,
    "link": null,
    "title": " check if a char is a space java",
    "description": "if (c == ' ')\n",
    "reg_date": "2021-10-12T12:02:04.000Z"
  },
  {
    "id": 935,
    "keyword": null,
    "link": null,
    "title": " check if a list contains a string java",
    "description": "String search = \"A\"; for(String str: myList) {     if(str.trim().contains(search))        return true; } return false;\n",
    "reg_date": "2021-10-12T12:02:04.000Z"
  },
  {
    "id": 936,
    "keyword": null,
    "link": null,
    "title": " check if a string contains a character java",
    "description": "str_Sample.contains(\"Example\"));\nif (string.contains(character)\nString.contains() \nstring.indexOf('a')\n javaCopyimport java.util.*; import java.lang.*; import java.io.*;  public class Example1 {     public static void main(String[] args) {         String str = \"Character\";         System.out.println(str.contains(\"h\"));         System.out.println(str.contains(\"Char\"));         System.out.println(str.contains(\"ac\"));         System.out.println(str.contains(\"v\"));         System.out.println(str.contains(\"vl\"));      } }   \n /*     This method returns true if the given string contains     the char n. It is necessary due to the     obsolescence of some compilers, which requires us     to write our own contains method.     */     public static boolean contains_char (String main, char secondary)     {         boolean contains_result = false;         for (int i = 0 ; i < input.length () ; i++)         {             if (input.charAt (i) == secondary)             {                 contains_result = true;                 break;             }         }         return contains_result;     }  /* for two chars: */ public static boolean contains_dualchar (String main, String secondary)     {         boolean contains_result = false;         for (int i = 0 ; i < input.length () ; i++)         {             if (input.charAt (i) == secondary.charAt (0))             {                 if (input.charAt (i + 1) == secondary.charAt (1))                 {                     contains_result = true;                     break;                 }             }         }         return contains_result;     } \n",
    "reg_date": "2021-10-12T12:02:04.000Z"
  },
  {
    "id": 937,
    "keyword": null,
    "link": null,
    "title": " check if a string contains a charater java",
    "description": " javaCopyimport java.util.*; import java.lang.*; import java.io.*;  public class Example1 {     public static void main(String[] args) {         String str = \"Character\";         System.out.println(str.contains(\"h\"));         System.out.println(str.contains(\"Char\"));         System.out.println(str.contains(\"ac\"));         System.out.println(str.contains(\"v\"));         System.out.println(str.contains(\"vl\"));      } }   \n",
    "reg_date": "2021-10-12T12:02:04.000Z"
  },
  {
    "id": 938,
    "keyword": null,
    "link": null,
    "title": " check if a string is empty java",
    "description": "if(str != null && !str.isEmpty()) { /* do your stuffs here */ }\npublic class Null {   \tpublic static boolean isNullOrEmpty(String str) {         if(str != null && !str.isEmpty())             return false;         return true;     } }\nif(str != null && !str.isEmpty()) Be sure to use the parts of && in this order, because java will not proceed to evaluate the second part if the first part of && fails, thus ensuring you will not get a null pointer exception from str.isEmpty() if str is null.\nif (myString == null || myString.equals(\"\")) \t\t\tthrow new IllegalArgumentException(\"empty string\");\n",
    "reg_date": "2021-10-12T12:02:04.000Z"
  },
  {
    "id": 939,
    "keyword": null,
    "link": null,
    "title": " check if all values are same in list java",
    "description": "boolean allEqual = list.stream().distinct().limit(2).count() <= 1 \n",
    "reg_date": "2021-10-12T12:02:05.000Z"
  },
  {
    "id": 940,
    "keyword": null,
    "link": null,
    "title": " check if array is empty java",
    "description": "if (list != null && !list.isEmpty()) { do something }\nif (myArray == null || myArray.length == 0) { }\narr = new int[0]; if (arr.length == 0) {   System.out.println(\"array is empty\"); } \nObject arr[] = new Object[10]; boolean empty = true; for (Object ob : arr) {   if (ob != null) {     empty = false;     break;   } } \npublic class test {      public static void main(String[] args) {         Object[][] someArray = new Object[5][];         someArray[0] = new Object[10];         someArray[1] = null;         someArray[2] = new Object[1];         someArray[3] = null;         someArray[4] = new Object[5];          for (int i=0; i<=someArray.length-1; i++) {             if (someArray[i] != null) {                 System.out.println(\"not null\");             } else {                 System.out.println(\"null\");             }         }     } }  $ /cygdrive/c/Program\\ Files/Java/jdk1.6.0_03/bin/java -cp . test not null null not null null not null \nObject arr[] = new Object[10]; boolean empty = true; for (int i=0; i<arr.length; i++) {   if (arr[i] != null) {     empty = false;     break;   } } \n",
    "reg_date": "2021-10-12T12:02:05.000Z"
  },
  {
    "id": 941,
    "keyword": null,
    "link": null,
    "title": " check if char equals java",
    "description": "//Method 1 if (CHAR == VALUE) {   System.out.println(\"CHAR matches with VALUE\"); }  //Method 2 if (CHAR.equals(VALUE)) {   System.out.println(\"CHAR matches with VALUE\"); }\n",
    "reg_date": "2021-10-12T12:02:05.000Z"
  },
  {
    "id": 942,
    "keyword": null,
    "link": null,
    "title": " check if char is a space java",
    "description": "if (myChar == ' '){  //do something if the char is a space  }\nif (c == ' ')\n",
    "reg_date": "2021-10-12T12:02:05.000Z"
  },
  {
    "id": 943,
    "keyword": null,
    "link": null,
    "title": " check if char is number java",
    "description": "Character.isDigit(str.charAt(i));\nCharacter.isDigit(string.charAt(index)) //(JavaDoc) will return true if it's a digit Character.isLetter(string.charAt(index)) //(JavaDoc) will return true if it's a letter\n",
    "reg_date": "2021-10-12T12:02:05.000Z"
  },
  {
    "id": 944,
    "keyword": null,
    "link": null,
    "title": " check if java is installed windows",
    "description": "type in cmd \"java\"\nOn Windows 10: Start > Control Panel > Program > Java  If you can't see a Java option then you don't have Java installed. Otherwise, this should open the Java Control Panel. Click the 'About'  button to view version information.\nOpen cmd and write \"java -version\" if there is intalled, the details will be displayed\n",
    "reg_date": "2021-10-12T12:02:05.000Z"
  },
  {
    "id": 945,
    "keyword": null,
    "link": null,
    "title": " check if jcheckbox is checked java",
    "description": "jcheckbox.isSelected()\nboolean checked = c1.getState(); if(c1.getState()) {   //c1 is checked } else if (c2.getState()) {   // }\n",
    "reg_date": "2021-10-12T12:02:05.000Z"
  },
  {
    "id": 946,
    "keyword": null,
    "link": null,
    "title": " check if map contains key java",
    "description": "  if (map.containsKey(key)) {        // Okay, there's a key but the value is null     } else {        // Definitely no such key     }\n",
    "reg_date": "2021-10-12T12:02:05.000Z"
  },
  {
    "id": 947,
    "keyword": null,
    "link": null,
    "title": " check if object in array java",
    "description": "Arrays.asList(yourArray).contains(yourValue)\n",
    "reg_date": "2021-10-12T12:02:06.000Z"
  },
  {
    "id": 948,
    "keyword": null,
    "link": null,
    "title": " check if object is equal to another object java in hashest",
    "description": " public class EqualsAndHashCodeExample {      public static void main(String... equalsExplanation) {         System.out.println(new Simpson(\"Homer\", 35, 120)                  .equals(new Simpson(\"Homer\",35,120)));                  System.out.println(new Simpson(\"Bart\", 10, 120)                  .equals(new Simpson(\"El Barto\", 10, 45)));                  System.out.println(new Simpson(\"Lisa\", 54, 60)                  .equals(new Object()));     } \t     static class Simpson {          private String name;         private int age;         private int weight;          public Simpson(String name, int age, int weight) {             this.name = name;             this.age = age;             this.weight = weight;         }          @Override         public boolean equals(Object o) {             if (this == o) {                 return true;             }             if (o == null || getClass() != o.getClass()) {                 return false;             }             Simpson simpson = (Simpson) o;             return age == simpson.age &&                     weight == simpson.weight &&                     name.equals(simpson.name);         }     }  }\n",
    "reg_date": "2021-10-12T12:02:06.000Z"
  },
  {
    "id": 949,
    "keyword": null,
    "link": null,
    "title": " check if sqlexception is duplicate entry java",
    "description": "try{ ... }catch(SQLException e){ \tif(e.getErrorCode() == 1062 ){ \t//duplicate primary key     } }\n",
    "reg_date": "2021-10-12T12:02:06.000Z"
  },
  {
    "id": 950,
    "keyword": null,
    "link": null,
    "title": " check if string contains numbers",
    "description": "str.matches(\".*\\\\d.*\"); \nTo find whether a given string contains a number, convert it to a character array and find whether  each character in the array is a digit using the isDigit()  method of the Character class\n",
    "reg_date": "2021-10-12T12:02:06.000Z"
  },
  {
    "id": 951,
    "keyword": null,
    "link": null,
    "title": " check if string has special characters java",
    "description": " //1. Using Regex  import java.util.regex.Matcher;  import java.util.regex.Pattern;  public class JavaHungry {     public static void main(String args[]) {         String inputString = \"Alive*is*Awesome$\";         Pattern pattern = Pattern.compile(\"[^a-zA-Z0-9]\");         Matcher matcher = pattern.matcher(inputString);         boolean isStringContainsSpecialCharacter = matcher.find();         if(isStringContainsSpecialCharacter)             System.out.println(inputString+ \" contains special character\");         else                 System.out.println(inputString+ \" does NOT contain special character\");     } }  //Output: //Alive*is*Awesome$ contains special character   //2. Without Using Regex   public class JavaHungry {     public static void main(String args[]) {         String inputString = \"Alive*is*Awesome$\";         String specialCharactersString = \"!@#$%&*()'+,-./:;<=>?[]^_`{|}\";         for (int i=0; i < inputString.length() ; i++)         {             char ch = inputString.charAt(i);             if(specialCharactersString.contains(Character.toString(ch))) {                 System.out.println(inputString+ \" contains special character\");                 break;             }                 else if(i == inputString.length()-1)                      System.out.println(inputString+ \" does NOT contain special character\");         }     } }\n",
    "reg_date": "2021-10-12T12:02:06.000Z"
  },
  {
    "id": 952,
    "keyword": null,
    "link": null,
    "title": " check if string is decimal java",
    "description": "Scanner in = new Scanner(System.in); \t\t \t\tString ip1 = in.nextLine(); \t\t \t\tif( ip1.matches(\"^\\\\d+\\\\.\\\\d+\") )  \t\t\tSystem.out.println(ip1+\"----is a decimal number\"); \t\telse \t\t\tSystem.out.println(ip1+\"----is a not decimal number\"); \t\t\n",
    "reg_date": "2021-10-12T12:02:06.000Z"
  },
  {
    "id": 953,
    "keyword": null,
    "link": null,
    "title": " check if string is null or empty java",
    "description": "if(str != null && !str.isEmpty()) { /* do your stuffs here */ }\npublic class Null {   \tpublic static boolean isNullOrEmpty(String str) {         if(str != null && !str.isEmpty())             return false;         return true;     } }\nif(str != null && !str.isEmpty()) Be sure to use the parts of && in this order, because java will not proceed to evaluate the second part if the first part of && fails, thus ensuring you will not get a null pointer exception from str.isEmpty() if str is null.\nif (myString == null || myString.equals(\"\")) \t\t\tthrow new IllegalArgumentException(\"empty string\");\n",
    "reg_date": "2021-10-12T12:02:06.000Z"
  },
  {
    "id": 954,
    "keyword": null,
    "link": null,
    "title": " check if the given string is a number",
    "description": "//Add this to your code and call static private boolean isMyNumber(String s){         try{             Integer.parseInt(s);             return true;         }catch (Exception e){             return false;         }     }\n",
    "reg_date": "2021-10-12T12:02:06.000Z"
  },
  {
    "id": 955,
    "keyword": null,
    "link": null,
    "title": " check if user has internet connection in kotlin",
    "description": "InternetCheck(object : InternetCheck.Consumer {   override fun accept(internet: Boolean?) {     Log.d(\"test\", \"asdasdas\")     } })\n",
    "reg_date": "2021-10-12T12:02:06.000Z"
  },
  {
    "id": 956,
    "keyword": null,
    "link": null,
    "title": " check if value exists in hashset java",
    "description": " hSet.contains(new Integer(\"3\"));\n",
    "reg_date": "2021-10-12T12:02:06.000Z"
  },
  {
    "id": 957,
    "keyword": null,
    "link": null,
    "title": " check java version",
    "description": "/usr/libexec/java_home -V\njava -version  #for jre version javac -version  # for java compiler version  \njava --version\njava -version\n$ java -version java version \"1.8.0_121\" \n",
    "reg_date": "2021-10-12T12:02:07.000Z"
  },
  {
    "id": 958,
    "keyword": null,
    "link": null,
    "title": " check java version linux",
    "description": "//1.6 and higher versions java -version \nsudo update-alternatives --display java \njava -version\nsudo update-alternatives --config java \n",
    "reg_date": "2021-10-12T12:02:07.000Z"
  },
  {
    "id": 959,
    "keyword": null,
    "link": null,
    "title": " check jdk version",
    "description": "java -version  #for jre version javac -version  # for java compiler version  \njava -version\n",
    "reg_date": "2021-10-12T12:02:07.000Z"
  },
  {
    "id": 960,
    "keyword": null,
    "link": null,
    "title": " check jdk version windows 10 cmd",
    "description": "java -version  #for jre version javac -version  # for java compiler version  \njava -version\n",
    "reg_date": "2021-10-12T12:02:07.000Z"
  },
  {
    "id": 961,
    "keyword": null,
    "link": null,
    "title": " check key is pressed java",
    "description": "if (evt. getKeyCode() == KeyEvent. VK_SHIFT)\n",
    "reg_date": "2021-10-12T12:02:07.000Z"
  },
  {
    "id": 962,
    "keyword": null,
    "link": null,
    "title": " check last character of string java",
    "description": "String str = \"India\"; System.out.println(\"last char = \" + str.charAt(str.length() - 1));\npublic class Test {     public static void main(String args[]) {         String string = args[0];         System.out.println(\"last character: \" +                            string.substring(string.length() - 1));      } }\n",
    "reg_date": "2021-10-12T12:02:07.000Z"
  },
  {
    "id": 963,
    "keyword": null,
    "link": null,
    "title": " check leap year in java",
    "description": "import java.util.Scanner; public class LeapYear {    public static void main(String[] args){       int year;       System.out.println(\"Enter an Year :: \");       Scanner sc = new Scanner(System.in);       year = sc.nextInt();        if (((year % 4 == 0) && (year % 100!= 0)) || (year@0 == 0))          System.out.println(\"Specified year is a leap year\");       else          System.out.println(\"Specified year is not a leap year\");    } }\npublic static boolean isLeapYear(int year) {   if (year % 4 != 0) {     return false;   } else if (year % 400 == 0) {     return true;   } else if (year % 100 == 0) {     return false;   } else {     return true;   } }\n(year % 4 == 0) && ((year % 100 != 0) || (year % 400 == 0))\npublic class LeapYear {      public static void main(String[] args) {          int year = 1900;         boolean leap = false;          if(year % 4 == 0)         {             if( year % 100 == 0)             {                 // year is divisible by 400, hence the year is a leap year                 if ( year % 400 == 0)                     leap = true;                 else                     leap = false;             }             else                 leap = true;         }         else             leap = false;          if(leap)             System.out.println(year + \" is a leap year.\");         else             System.out.println(year + \" is not a leap year.\");     } }\nimport java.util.Scanner; public class leapyear {     public static void main(String[] args)     {         Scanner myScanner = new Scanner(System.in);         System.out.println(\"Enter in the year \");         int year=myScanner.nextInt();          if(year%4==0)             if(year\u00100==0)                 if(year@0==0)                     System.out.println(\"It is a leap year\");                 else                     System.out.println(\"it is not a leap year\");             else System.out.println(\"It is a leap year\");         else             System.out.println(\"Is not a leap year\");\nimport java.util.Scanner; public class LeapYearDemo {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter any year: \");       int year = sc.nextInt();       boolean temp = false;       if(year % 400 == 0)       {          temp = true;       }       else if(year % 100 == 0)       {          temp = false;       }       else if(year % 4 == 0)       {          temp = true;       }       else       {          temp = false;       }       if(temp)       {          System.out.println(\"Year \" + year + \" is a Leap Year\");       }       else       {          System.out.println(\"Year \" + year + \" is not a Leap Year\");       }       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:02:07.000Z"
  },
  {
    "id": 964,
    "keyword": null,
    "link": null,
    "title": " check list for empty and null java",
    "description": "if (list != null && !list.isEmpty()) { do something }\n/*  \tIf you use the Apache Commons Collections library in your project,  \tyou may use  */ CollectionUtils.isEmpty(MyList) or MapUtils.isEmpty(MyList)   /*  \twhich respectively check  \tif a collection or a map is empty or null  \t(i.e. they are \"null-safe\").  */  /*  Small tip:  remember that the less code you write,   the less code you need to test as the complexity of your code decreases. */\n",
    "reg_date": "2021-10-12T12:02:07.000Z"
  },
  {
    "id": 965,
    "keyword": null,
    "link": null,
    "title": " check self permission android write external storage",
    "description": "private void checkDiskPermission () {     if (ActivityCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {         Toast.makeText(this, \"No Permissions\" , Toast.LENGTH_LONG).show();         ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE}, 0);     }     else     {         Toast.makeText(this, \"Has Permissions\" , Toast.LENGTH_LONG).show();     } }\n",
    "reg_date": "2021-10-12T12:02:07.000Z"
  },
  {
    "id": 966,
    "keyword": null,
    "link": null,
    "title": " checking if a given integer is a prime number java",
    "description": "public class Prime {      public static void main(String[] args) {          int num = 29;         boolean flag = false;         for(int i = 2; i <= num/2; ++i)         {             // condition for nonprime number             if(num % i == 0)             {                 flag = true;                 break;             }         }          if (!flag)             System.out.println(num + \" is a prime number.\");         else             System.out.println(num + \" is not a prime number.\");     } }\n",
    "reg_date": "2021-10-12T12:02:07.000Z"
  },
  {
    "id": 967,
    "keyword": null,
    "link": null,
    "title": " chenge font android studio",
    "description": "change font Family in java App (android studio).    <?xml version=\"1.0\" encoding=\"utf-8\"?> <resources>    <style name=\"AppTheme\" perent=\"Theme.AppCompat.Light.DarkActionBar\">        <item name=\"android:fontFamily\">@font/font_name</item> // fontFamily    </style> </resources>\n",
    "reg_date": "2021-10-12T12:02:08.000Z"
  },
  {
    "id": 968,
    "keyword": null,
    "link": null,
    "title": " circle line intersection java",
    "description": "import java.util.Arrays; import java.util.Collections; import java.util.List;  public class CircleLine {      public static List<Point> getCircleLineIntersectionPoint(Point pointA,             Point pointB, Point center, double radius) {         double baX = pointB.x - pointA.x;         double baY = pointB.y - pointA.y;         double caX = center.x - pointA.x;         double caY = center.y - pointA.y;          double a = baX * baX + baY * baY;         double bBy2 = baX * caX + baY * caY;         double c = caX * caX + caY * caY - radius * radius;          double pBy2 = bBy2 / a;         double q = c / a;          double disc = pBy2 * pBy2 - q;         if (disc < 0) {             return Collections.emptyList();         }         // if disc == 0 ... dealt with later         double tmpSqrt = Math.sqrt(disc);         double abScalingFactor1 = -pBy2 + tmpSqrt;         double abScalingFactor2 = -pBy2 - tmpSqrt;          Point p1 = new Point(pointA.x - baX * abScalingFactor1, pointA.y                 - baY * abScalingFactor1);         if (disc == 0) { // abScalingFactor1 == abScalingFactor2             return Collections.singletonList(p1);         }         Point p2 = new Point(pointA.x - baX * abScalingFactor2, pointA.y                 - baY * abScalingFactor2);         return Arrays.asList(p1, p2);     }      static class Point {         double x, y;          public Point(double x, double y) { this.x = x; this.y = y; }          @Override         public String toString() {             return \"Point [x=\" + x + \", y=\" + y + \"]\";         }     }       public static void main(String[] args) {         System.out.println(getCircleLineIntersectionPoint(new Point(-3, -3),                 new Point(-3, 3), new Point(0, 0), 5));         System.out.println(getCircleLineIntersectionPoint(new Point(0, -2),                 new Point(1, -2), new Point(1, 1), 5));         System.out.println(getCircleLineIntersectionPoint(new Point(1, -1),                 new Point(-1, 0), new Point(-1, 1), 5));         System.out.println(getCircleLineIntersectionPoint(new Point(-3, -3),                 new Point(-2, -2), new Point(0, 0), Math.sqrt(2)));     } \n",
    "reg_date": "2021-10-12T12:02:08.000Z"
  },
  {
    "id": 969,
    "keyword": null,
    "link": null,
    "title": " circleimageview github",
    "description": "implementation 'de.hdodenhof:circleimageview:3.1.0'\n//Build.Gradle (app level)    dependencies {     ...     implementation 'de.hdodenhof:circleimageview:3.1.0'     //make sure use latest version of this. currently latest version is 3.1.0     //in 25-05-2021;          //Edited     //still no changes in version -today date - 12.08.2021 }  Usage  <de.hdodenhof.circleimageview.CircleImageView     xmlns:app=\"http://schemas.android.com/apk/res-auto\"     android:id=\"@+id/profile_image\"     android:layout_width=\"96dp\"     android:layout_height=\"96dp\"     android:src=\"@drawable/profile\"     app:civ_border_width=\"2dp\"     app:civ_border_color=\"#FF000000\"/>            \n",
    "reg_date": "2021-10-12T12:02:08.000Z"
  },
  {
    "id": 970,
    "keyword": null,
    "link": null,
    "title": " circular imageview android",
    "description": "implementation 'de.hdodenhof:circleimageview:3.1.0'\nimplementation 'de.hdodenhof:circleimageview:3.1.0'  <de.hdodenhof.circleimageview.CircleImageView     xmlns:app=\"http://schemas.android.com/apk/res-auto\"     android:id=\"@+id/profile_image\"     android:layout_width=\"96dp\"     android:layout_height=\"96dp\"     android:src=\"@drawable/profile\"     app:civ_border_width=\"2dp\"     app:civ_border_color=\"#FF000000\"/>\n",
    "reg_date": "2021-10-12T12:02:08.000Z"
  },
  {
    "id": 971,
    "keyword": null,
    "link": null,
    "title": " class Main { public static void main(String args[]) { int t; System. out. println(t) ;",
    "description": "public class Frazione {   public static void main(String[] args) { \tFrazione a = new Frazione(3, 4); \tFrazione b = new Frazione(5, 4);     System.out.println(getAddizione(a + b));   } }\nclass TestClass {     static void Main(string[] args)     {         // Display the number of command line arguments.         Console.WriteLine(args.Length);     } } \n",
    "reg_date": "2021-10-12T12:02:08.000Z"
  },
  {
    "id": 972,
    "keyword": null,
    "link": null,
    "title": " class java.lang.Integer cannot be cast to class java.lang.Long (java.lang.Integer and java.lang.Long are in module java.base of loader 'bootstrap')",
    "description": "// on my case, instead of casting I did:  Long variable = Long.valueOf(variable.get(\"Attribute\").toString());\n",
    "reg_date": "2021-10-12T12:02:08.000Z"
  },
  {
    "id": 973,
    "keyword": null,
    "link": null,
    "title": " class list contains class java",
    "description": "List<Card> hand = ...; for(Card card : hand){   if (card instanceof AceOfDiamonds) return true; }\n",
    "reg_date": "2021-10-12T12:02:09.000Z"
  },
  {
    "id": 974,
    "keyword": null,
    "link": null,
    "title": " class vs interface",
    "description": "A class describes the attributes and behaviors of an object . An interface contains behaviors that a class implements. \nA class can be instantiated by  creating its objects. An interface is never instantiated as the methods  declared inside an interface are abstract and does not perform any action,    so there is no use of instantiating any interface. A class is declared using a keyword class.  In the same way, an interface is  created using a keyword interface. The members of a class can have  access modifier like public, private, protected. But the members of an interface are always public as they have to be accessed  by the classes implementing them. The methods inside a class are    defined to perform an action on the fields declared in the class.  The methods inside an interface are purely abstract. A class can implement any number  of interfaces but can extend only one  super class. An interface can extend any number of interfaces but cannot implement any interface. A class has constructors defined inside it to get the variable initialized. But, an interface does not have any constructors as there are no fields  to be initialized. The fields of an interface are initialized  at the time of their declaration only.\n",
    "reg_date": "2021-10-12T12:02:09.000Z"
  },
  {
    "id": 975,
    "keyword": null,
    "link": null,
    "title": " classcastexception in java",
    "description": "Object someStringAsObject=\"Hello\"; String asString=(String)someStringAsObject;//works Integer asInteger=(Integer)someStringAsObject;//throws ClassCastException because it is a String and not an Integer\n",
    "reg_date": "2021-10-12T12:02:09.000Z"
  },
  {
    "id": 976,
    "keyword": null,
    "link": null,
    "title": " classnames javascri+t",
    "description": "Installation: yarn add classnames or npm i classnames  Usage: classNames('foo', 'bar'); // => 'foo bar' classNames('foo', { bar: true }); // => 'foo bar' classNames({ 'foo-bar': true }); // => 'foo-bar' classNames({ 'foo-bar': false }); // => '' classNames({ foo: true }, { bar: true }); // => 'foo bar' classNames({ foo: true, bar: true }); // => 'foo bar'   // lots of arguments of various types classNames('foo', { bar: true, duck: false }, 'baz', { quux: true }); // => 'foo bar baz quux'   // other falsy values are just ignored classNames(null, false, 'bar', undefined, 0, 1, { baz: null }, ''); // => 'bar 1'  TypeInstallation: yarn add @types/classnames\n",
    "reg_date": "2021-10-12T12:02:09.000Z"
  },
  {
    "id": 977,
    "keyword": null,
    "link": null,
    "title": " clear array java",
    "description": "Arrays.fill(myArray, null); \n",
    "reg_date": "2021-10-12T12:02:09.000Z"
  },
  {
    "id": 978,
    "keyword": null,
    "link": null,
    "title": " clear edittext android",
    "description": "editText.getText().clear(); \n",
    "reg_date": "2021-10-12T12:02:09.000Z"
  },
  {
    "id": 979,
    "keyword": null,
    "link": null,
    "title": " clear hashmap java",
    "description": "Hash_Map.clear()\n",
    "reg_date": "2021-10-12T12:02:09.000Z"
  },
  {
    "id": 980,
    "keyword": null,
    "link": null,
    "title": " clear text field in java",
    "description": "btnClear.addSelectionListener(new SelectionAdapter()   {     @Override     public void widgetSelected(SelectionEvent e)     {       textBox1.setText(\"\");       textBox2.setText(\"\");      }   }); \nJButton b = new JButton(\"Clear\"); b.addActionListener(new ActionListener(){     public void actionPerformed(ActionEvent e){         textfield.setText(\"\");         //textfield.setText(null); //or use this     } });\n",
    "reg_date": "2021-10-12T12:02:09.000Z"
  },
  {
    "id": 981,
    "keyword": null,
    "link": null,
    "title": " close keyboard android",
    "description": "public static void hideSoftKeyboard(Activity activity) {     InputMethodManager inputMethodManager =          (InputMethodManager) activity.getSystemService(             Activity.INPUT_METHOD_SERVICE);     inputMethodManager.hideSoftInputFromWindow(         activity.getCurrentFocus().getWindowToken(), 0); }\n",
    "reg_date": "2021-10-12T12:02:09.000Z"
  },
  {
    "id": 982,
    "keyword": null,
    "link": null,
    "title": " close scanner java",
    "description": "Scanner scanner = new Scanner(\"Hello world\");  //do something with scanner  scanner.close(); \n     Scanner sc = new Scanner(System.in);      int i = sc.nextInt();  \n",
    "reg_date": "2021-10-12T12:02:10.000Z"
  },
  {
    "id": 983,
    "keyword": null,
    "link": null,
    "title": " close searchview android java",
    "description": "if (!searchView.isIconified()) {   searchView.setIconified(true); }\n",
    "reg_date": "2021-10-12T12:02:10.000Z"
  },
  {
    "id": 984,
    "keyword": null,
    "link": null,
    "title": " cmd java compile",
    "description": "javac MyFisrtProgam.java // enter to compile    java MyfirstProgram // run program  \n// Assuming that you have an executable jar java -jar myJavaProject.jar  // Assuming that you have packaged jar java -jar target/myJavaProject.jar\n",
    "reg_date": "2021-10-12T12:02:10.000Z"
  },
  {
    "id": 985,
    "keyword": null,
    "link": null,
    "title": " code for login page in java",
    "description": "import java.awt.*; import java.awt.event.*; import javax.swing.*; public class LoginDemo extends JFrame implements ActionListener {    JPanel panel;    JLabel user_label, password_label, message;    JTextField userName_text;    JPasswordField password_text;    JButton submit, cancel;    LoginDemo() {       // Username Label       user_label = new JLabel();       user_label.setText(\"User Name :\");       userName_text = new JTextField();       // Password Label       password_label = new JLabel();       password_label.setText(\"Password :\");       password_text = new JPasswordField();       // Submit       submit = new JButton(\"SUBMIT\");       panel = new JPanel(new GridLayout(3, 1));       panel.add(user_label);       panel.add(userName_text);       panel.add(password_label);       panel.add(password_text);       message = new JLabel();       panel.add(message);       panel.add(submit);       setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);       // Adding the listeners to components..       submit.addActionListener(this);       add(panel, BorderLayout.CENTER);       setTitle(\"Please Login Here !\");       setSize(450,350);       setVisible(true);    }    public static void main(String[] args) {       new LoginDemo();    }    @Override    public void actionPerformed(ActionEvent ae) {       String userName = userName_text.getText();       String password = password_text.getText();       if (userName.trim().equals(\"admin\") && password.trim().equals(\"admin\")) {          message.setText(\" Hello \" + userName + \"\");       } else {          message.setText(\" Invalid user.. \");       }    } }\n",
    "reg_date": "2021-10-12T12:02:10.000Z"
  },
  {
    "id": 986,
    "keyword": null,
    "link": null,
    "title": " code to include layout from java in android",
    "description": "<ViewStub     android:id=\"@+id/layout_stub\"     android:inflatedId=\"@+id/message_layout\"     android:layout_width=\"match_parent\"     android:layout_height=\"match_parent\"     android:layout_weight=\"0.75\" />\nViewStub stub = (ViewStub) findViewById(R.id.layout_stub); stub.setLayoutResource(R.layout.whatever_layout_you_want); View inflated = stub.inflate();\n",
    "reg_date": "2021-10-12T12:02:10.000Z"
  },
  {
    "id": 987,
    "keyword": null,
    "link": null,
    "title": " collect as arr java 8",
    "description": " String[] myNewArray3 = myNewStream.toArray(String[]::new); \n",
    "reg_date": "2021-10-12T12:02:10.000Z"
  },
  {
    "id": 988,
    "keyword": null,
    "link": null,
    "title": " collection vs collections",
    "description": "Collection is an interface in Java. But Collections is a class in Java. Collection is a base interface.  Collections is a utility class in Java. Collection defines methods that are used for data structures that contain the objects.  Collections define the methods that are used  for operations like access, find, etc. on a Collection. Collection Interface has only abstract methods but Collections consists of  only static methods that are used to operate on objects of type Collection.\n",
    "reg_date": "2021-10-12T12:02:10.000Z"
  },
  {
    "id": 989,
    "keyword": null,
    "link": null,
    "title": " collections.sort descending order in java",
    "description": "Collections.sort(arraylist, Collections.reverseOrder());\n",
    "reg_date": "2021-10-12T12:02:10.000Z"
  },
  {
    "id": 990,
    "keyword": null,
    "link": null,
    "title": " collections",
    "description": "from collections import OrderedDict  # Remembers the order the keys are added! x = OrderedDict(a=1, b=2, c=3)\nLIST: Can store duplicate values,Keeps the insertion order. - ArrayList not syncronized, array based class  - LinkedList not synchronized, doubly linked - Vector is synchronized, thread safe SET: Can only store unique values,And does not maintain order - HashSet can have null, order is not guaranteed - LinkedHashSet can have null and keeps the order  - TreeSet sorts the order and don't accept null  QUQUE :Accepts duplicates, Doesn't have index num, First in first our order.         MAP:is a (key-value format)  and keys are always unique,  and value can be duplicated.  - HashTable don't have null key, sychronized(thread-safe) - LinkedHashMap can have null key, keeps order - HasHMap can have null key, order is not guaranteed - TreeMap doesn't have null key and keys are sorted Examples  ■ I have used TreeSet to print dropdown list in for   non duplicate values and ascending order  ■ I have used HashMaps to compare values from  a database with expected values \n>>> # regular unsorted dictionary >>> d = {'banana': 3, 'apple': 4, 'pear': 1, 'orange': 2}  >>> # dictionary sorted by key >>> OrderedDict(sorted(d.items(), key=lambda t: t[0])) OrderedDict([('apple', 4), ('banana', 3), ('orange', 2), ('pear', 1)])  >>> # dictionary sorted by value >>> OrderedDict(sorted(d.items(), key=lambda t: t[1])) OrderedDict([('pear', 1), ('orange', 2), ('banana', 3), ('apple', 4)])  >>> # dictionary sorted by length of the key string >>> OrderedDict(sorted(d.items(), key=lambda t: len(t[0]))) OrderedDict([('pear', 1), ('apple', 4), ('orange', 2), ('banana', 3)]) \nmost_common([n])&para; Return a list of the n most common elements and their counts from the most common to the least. If n is omitted or None, most_common() returns all elements in the counter. Elements with equal counts are ordered arbitrarily:  >>> Counter('abracadabra').most_common(3) [('a', 5), ('r', 2), ('b', 2)] \nDepending on the data that I am working with, I use Arrays, Lists, Sets, Maps. \nimport collections  numShoes = int(raw_input()) shoes = collections.Counter(map(int, raw_input().split())) numCust = int(raw_input())  income = 0  for i in range(numCust):     size, price = map(int, raw_input().split())     if shoes[size]:          income += price         shoes[size] -= 1  print income \n",
    "reg_date": "2021-10-12T12:02:10.000Z"
  },
  {
    "id": 991,
    "keyword": null,
    "link": null,
    "title": " collision java",
    "description": "// AABB collision  if(player1.x < player2.x + player2.width &&     player1.x + player1.width > player2.x &&     player1.y < player2.y + player2.height &&     player1.y + player1.height > player2.y) {   // detected }\n",
    "reg_date": "2021-10-12T12:02:11.000Z"
  },
  {
    "id": 992,
    "keyword": null,
    "link": null,
    "title": " color from hex code flutter",
    "description": "Color c = const Color(0xFF42A5F5); Color c = const Color.fromARGB(0xFF, 0x42, 0xA5, 0xF5); Color c = const Color.fromARGB(255, 66, 165, 245); Color c = const Color.fromRGBO(66, 165, 245, 1.0);\n",
    "reg_date": "2021-10-12T12:02:11.000Z"
  },
  {
    "id": 993,
    "keyword": null,
    "link": null,
    "title": " com.android.builder.dexing.DexArchiveMergerException:",
    "description": "// go to android/app/build.gradle  // Add the following command inside defaultConfig:  multiDexEnabled true\n",
    "reg_date": "2021-10-12T12:02:11.000Z"
  },
  {
    "id": 994,
    "keyword": null,
    "link": null,
    "title": " combinations in java",
    "description": "private void helper(List<int[]> combinations, int data[], int start, int end, int index) {       if (index == data.length) {             int[] combination = data.clone();             combinations.add(combination);       }    else if (start <= end) {             data[index] = start;             helper(combinations, data, start + 1, end, index + 1);             helper(combinations, data, start + 1, end, index);       } }\n",
    "reg_date": "2021-10-12T12:02:11.000Z"
  },
  {
    "id": 995,
    "keyword": null,
    "link": null,
    "title": " combine multiple list array",
    "description": "List<Integer> joinedList = new ArrayList<>(); Stream.of(list1, list2, list3, list4).forEach(joinedList::addAll);\n",
    "reg_date": "2021-10-12T12:02:11.000Z"
  },
  {
    "id": 996,
    "keyword": null,
    "link": null,
    "title": " comment in java",
    "description": "//This is single line comment    /*  This is   multi line comment  */  \n//Single line System.out.println(\"Hello world\"/*+\"This is code commented out inline.\"*/); //You can also put comments at the end /* Multi Line comment */\n/** * Returns an Image object that can then be painted on the screen.  * The url argument must specify an absolute <a href=\"#{@link}\">{@link URL}</a>. The name * argument is a specifier that is relative to the url argument.  * <p> * This method always returns immediately, whether or not the  * image exists. When this applet attempts to draw the image on * the screen, the data will be loaded. The graphics primitives  * that draw the image will incrementally paint on the screen.  * * @param  url  an absolute URL giving the base location of the image * @param  name the location of the image, relative to the url argument * @return      the image at the specified URL * @see         Image */ public Image getImage(URL url, String name) { try { return getImage(new URL(url, name)); } catch (MalformedURLException e) { return null; } }\n// single line comment example // integer variable 'a' is assigned value 5 int a = 5;  /* This is an example for java multiline comment */  // Documentation comments example /** * <h1>Area of Square</h1> * Area of Square java program calculates area * using given side value and prints the area. * <p> * <b>Note: Adding comments in a java program makes it more * user friendly and is presumed as good quality code *  * @author Sachin * @version 1.0 * @since 2015-04-12 * </b> * </p> */\n// This is how you comment in java /* You can also do it like this */\n// this is a comment  /* this is     a multiline    comment */\n",
    "reg_date": "2021-10-12T12:02:11.000Z"
  },
  {
    "id": 997,
    "keyword": null,
    "link": null,
    "title": " comments in java",
    "description": "//This is single line comment    /*  This is   multi line comment  */  \n//Single line System.out.println(\"Hello world\"/*+\"This is code commented out inline.\"*/); //You can also put comments at the end /* Multi Line comment */\n/** * Returns an Image object that can then be painted on the screen.  * The url argument must specify an absolute <a href=\"#{@link}\">{@link URL}</a>. The name * argument is a specifier that is relative to the url argument.  * <p> * This method always returns immediately, whether or not the  * image exists. When this applet attempts to draw the image on * the screen, the data will be loaded. The graphics primitives  * that draw the image will incrementally paint on the screen.  * * @param  url  an absolute URL giving the base location of the image * @param  name the location of the image, relative to the url argument * @return      the image at the specified URL * @see         Image */ public Image getImage(URL url, String name) { try { return getImage(new URL(url, name)); } catch (MalformedURLException e) { return null; } }\n// single line comment example // integer variable 'a' is assigned value 5 int a = 5;  /* This is an example for java multiline comment */  // Documentation comments example /** * <h1>Area of Square</h1> * Area of Square java program calculates area * using given side value and prints the area. * <p> * <b>Note: Adding comments in a java program makes it more * user friendly and is presumed as good quality code *  * @author Sachin * @version 1.0 * @since 2015-04-12 * </b> * </p> */\n// This is how you comment in java /* You can also do it like this */\n// this is a comment  /* this is     a multiline    comment */\n",
    "reg_date": "2021-10-12T12:02:11.000Z"
  },
  {
    "id": 998,
    "keyword": null,
    "link": null,
    "title": " common greatest divisor java",
    "description": "int gcdByBruteForce(int n1, int n2) {     int gcd = 1;     for (int i = 1; i <= n1 && i <= n2; i++) {         if (n1 % i == 0 && n2 % i == 0) {             gcd = i;         }     }     return gcd; }\nimport java.util.Scanner; public class GCDExample3 {      public static void main(String[] args) {          int num1, num2;                  //Reading the input numbers         Scanner scanner = new Scanner(System.in);         System.out.print(\"Enter first number:\");         num1 = (int)scanner.nextInt();                  System.out.print(\"Enter second number:\");         num2 = (int)scanner.nextInt();                  //closing the scanner to avoid memory leaks         scanner.close();         while (num1 != num2) {         \tif(num1 > num2)                 num1 = num1 - num2;             else                 num2 = num2 - num1;         }          //displaying the result         System.out.printf(\"GCD of given numbers is: %d\", num2);     }\n",
    "reg_date": "2021-10-12T12:02:11.000Z"
  },
  {
    "id": 999,
    "keyword": null,
    "link": null,
    "title": " como calcular a raiz quadrada em java",
    "description": "Math.sqrt(x);\n",
    "reg_date": "2021-10-12T12:02:11.000Z"
  },
  {
    "id": 1000,
    "keyword": null,
    "link": null,
    "title": " como crear un array en java",
    "description": " int[] intArray = new int[]{ 1,2,3,4,5,6,7,8,9,10 };   // Declarando un array literal\n",
    "reg_date": "2021-10-12T12:02:11.000Z"
  },
  {
    "id": 1001,
    "keyword": null,
    "link": null,
    "title": " como printar o valor de um campo em um jtextfield",
    "description": "private JTextArea cracha= new JTextArea();  public void imprimirCracha(){  cracha.setText(\"seu texto aqui\");  }\n",
    "reg_date": "2021-10-12T12:02:12.000Z"
  },
  {
    "id": 1002,
    "keyword": null,
    "link": null,
    "title": " como utilizar random en java",
    "description": "int numero = (int)(Math.random()*10+1);\n",
    "reg_date": "2021-10-12T12:02:12.000Z"
  },
  {
    "id": 1003,
    "keyword": null,
    "link": null,
    "title": " comparable interfacee",
    "description": "class Student implements Comparable<Student>{   int rollno;   String name;   int age;   Student(int rollno,String name,int age){   this.rollno=rollno;   this.name=name;   this.age=age;   }      public int compareTo(Student st){   if(age==st.age)   return 0;   else if(age>st.age)   return 1;   else   return -1;   }   }  \n",
    "reg_date": "2021-10-12T12:02:12.000Z"
  },
  {
    "id": 1004,
    "keyword": null,
    "link": null,
    "title": " comparable on a generic class java",
    "description": "    public class DoubleKey<K extends Comparable<K>, J extends Comparable<J>>         implements Comparable<DoubleKey<K, J>> {      private K key1;     private J key2;      public DoubleKey(K key1, J key2) {         this.key1 = key1;         this.key2 = key2;     }      public K getFirstKey() {         return this.key1;     }      public J getSecondKey() {         return this.key2;     }      public int compareTo(DoubleKey<K, J> that) {          int cmp = this.getFirstKey().compareTo(that.getFirstKey());         if (cmp == 0)             cmp = this.getSecondKey().compareTo(that.getSecondKey());         return cmp;     } }\n",
    "reg_date": "2021-10-12T12:02:12.000Z"
  },
  {
    "id": 1005,
    "keyword": null,
    "link": null,
    "title": " compare 2 characters in java",
    "description": "public class JavaCharacterCompareExample1 {   public static void main(String[] args) {   char firstValue = 'A';   char secondValue = 'B';   // compare the first char to the second       int compareOneTwo = Character.compare(firstValue, secondValue);       if (compareOneTwo> 0) {       System.out.println(\"First value is greater than second value\");       }       else {   System.err.println(\"First value is less than second value.\");       }      }   }  // OUT:  First value is less than the second value. \nIf your input is a character and the characters you are checking against are mostly consecutive you could try this:  if ((symbol >= 'A' && symbol <= 'Z') || symbol == '?') {     // ... } \n",
    "reg_date": "2021-10-12T12:02:12.000Z"
  },
  {
    "id": 1006,
    "keyword": null,
    "link": null,
    "title": " compare 2 strings kotlin",
    "description": "string1 == string2 //returns true if they are equal and false if they are not\nval hello = \"Hello\"     val world = \"World\"      // equals() returns true or false     val equals = hello.equals(world)      // compareTo() will return 0 if true     // Any non zero value is false     val compare = hello.compareTo(world)\n",
    "reg_date": "2021-10-12T12:02:12.000Z"
  },
  {
    "id": 1007,
    "keyword": null,
    "link": null,
    "title": " compare arrays java",
    "description": "import java.util.Arrays;  class Test  {      public static void main (String[] args)       {          // inarr1 and inarr2 have same values          int inarr1[] = {1, 2, 3};          int inarr2[] = {1, 2, 3};             Object[] arr1 = {inarr1};  // arr1 contains only one element          Object[] arr2 = {inarr2};  // arr2 also contains only one element          if (Arrays.equals(arr1, arr2))              System.out.println(\"Same\");          else             System.out.println(\"Not same\");      }  } \n",
    "reg_date": "2021-10-12T12:02:12.000Z"
  },
  {
    "id": 1008,
    "keyword": null,
    "link": null,
    "title": " compare numbers in array in java",
    "description": "for (int i = 0; i < a.length; i++)  {     for (int k = i+1; k < a.length; k++)      {         if (a[i] != a[k])           {             System.out.println(a[i]+\"not the same with\"+a[k]+\"\\n\");         }     } }\n",
    "reg_date": "2021-10-12T12:02:12.000Z"
  },
  {
    "id": 1009,
    "keyword": null,
    "link": null,
    "title": " compare string integer java",
    "description": "/**     * Similar to compareTo method But compareTo doesn't return correct result for string+integer strings something like `A11` and `A9` */  private int newCompareTo(String comp1, String comp2) {   // If any value has 0 length it means other value is bigger   if (comp1.length() == 0) {     if (comp2.length() == 0) {       return 0;     }     return -1;   } else if (comp2.length() == 0) {     return 1;   }   if (TextUtils.isDigitsOnly(comp1)) {     int val1 = Integer.parseInt(comp1);     if (TextUtils.isDigitsOnly(comp2)) {       int val2 = Integer.parseInt(comp2);       return Integer.compare(val1, val2);     } else {       return comp1.compareTo(comp2);     }    } else {      int minVal = Math.min(comp1.length(), comp2.length()), sameCount = 0;      // Loop through two strings and check how many strings are same     for (int i = 0;i < minVal;i++) {       char leftVal = comp1.charAt(i), rightVal = comp2.charAt(i);       if (leftVal == rightVal) {         sameCount++;       } else {         break;       }     }     if (sameCount == 0) {       return comp1.compareTo(comp2);     } else {       String newStr1 = comp1.substring(sameCount), newStr2 = comp2.substring(sameCount);       if (TextUtils.isDigitsOnly(newStr1) && TextUtils.isDigitsOnly(newStr2)) {         return Integer.compare(Integer.parseInt(newStr1), Integer.parseInt(newStr2));       } else {         return comp1.compareTo(comp2);       }     }   } }\n",
    "reg_date": "2021-10-12T12:02:12.000Z"
  },
  {
    "id": 1010,
    "keyword": null,
    "link": null,
    "title": " compare to arraylist java",
    "description": "import java.util.*;   public class ComapreArraylistExample1   {   \tpublic static void main(String args[])       {         //first array list         ArrayList<String> firstList=new ArrayList<String>();         //adds elements to the arraylist         firstList.add(\"Apple\");         firstList.add(\"Pears\");         firstList.add(\"Guava\");         firstList.add(\"Mango\");       //second array list       List<String> secondList=new ArrayList<String>();         //adds elements to the arraylist         secondList.add(\"Apple\");         secondList.add(\"Pears\");         secondList.add(\"Guava\");         secondList.add(\"Mango\");         //comparing both lists         boolean boolval = firstList.equals(secondList);        //returns true because lists are equal     \t}   }  \n",
    "reg_date": "2021-10-12T12:02:12.000Z"
  },
  {
    "id": 1011,
    "keyword": null,
    "link": null,
    "title": " compare two strings java",
    "description": "System.out.println(\"hey\".equals(\"hey\")); //prints true  /* \talways use .equals() instead of ==,     because == does the compare the string content but     loosely where the string is stored in. */\n// compare two strings in java using String.equals() method in java public class EqualsMethodDemo {    public static void main(String[] args)    {       String str1 = new String(\"HelloWorld\");       String str2 = new String(\"Flower\");       String str3 = new String(\"Hello\");       String str4 = new String(\"Hello\");       String str5 = new String(\"hello\");       // compare str1 != str2       System.out.println(\"Compare \" + str1 + \" and \" + str2 + \": \" + str1.equals(str2));       // compare str3 = str4       System.out.println(\"Compare \" + str3 + \" and \" + str4 + \": \" + str3.equals(str4));       // compare str4 != str5       System.out.println(\"Compare \" + str4 + \" and \" + str5 + \": \" + str4.equals(str5));       // compare str1 != str4       System.out.println(\"Compare \" + str1 + \" and \" + str4 + \": \" + str1.equals(str4));    } }\n******Java String compareTo()******    The Java String class compareTo() method compares the given    string with the current string lexicographically.    It returns a positive number, negative number, or 0.   ___________________________________________   \tif s1 > s2, it returns positive number   \tif s1 < s2, it returns negative number   \tif s1 == s2, it returns 0     ___________________________________________      \nif (aName.equals(anotherName))         {              System.out.println(aName + \" equals \" + anotherName);         }         else              {                  System.out.println(aName + \" does not equal \" +anotherName );                                         }\n// These two have the same value new String(\"test\").equals(\"test\") // --> true   // ... but they are not the same object new String(\"test\") == \"test\" // --> false   // ... neither are these new String(\"test\") == new String(\"test\") // --> false  \nString string1 = \"using equals method\";String string2 = \"using equals method\";        String string3 = \"using EQUALS method\";String string4 = new String(\"using equals method\"); assertThat(string1.equals(string2)).isTrue();assertThat(string1.equals(string4)).isTrue(); assertThat(string1.equals(null)).isFalse();assertThat(string1.equals(string3)).isFalse();\n",
    "reg_date": "2021-10-12T12:02:13.000Z"
  },
  {
    "id": 1012,
    "keyword": null,
    "link": null,
    "title": " compareto in java string",
    "description": "System.out.println(\"hey\".equals(\"hey\")); //prints true  /* \talways use .equals() instead of ==,     because == does the compare the string content but     loosely where the string is stored in. */\n******Java String compareTo()******    The Java String class compareTo() method compares the given    string with the current string lexicographically.    It returns a positive number, negative number, or 0.   ___________________________________________   \tif s1 > s2, it returns positive number   \tif s1 < s2, it returns negative number   \tif s1 == s2, it returns 0     ___________________________________________      \nif (aName.equals(anotherName))         {              System.out.println(aName + \" equals \" + anotherName);         }         else              {                  System.out.println(aName + \" does not equal \" +anotherName );                                         }\n// These two have the same value new String(\"test\").equals(\"test\") // --> true   // ... but they are not the same object new String(\"test\") == \"test\" // --> false   // ... neither are these new String(\"test\") == new String(\"test\") // --> false  \nclass scratch{     public static void main(String[] args) {         String str1 = \"Nyello\";         String str2 = \"Hello\";         String str3 = \"Hello\";          System.out.println( str1.equals(str2) ); //prints false         System.out.println( str2.equals(str3) ); //prints true     } }\nString string1 = \"using equals method\";String string2 = \"using equals method\";        String string3 = \"using EQUALS method\";String string4 = new String(\"using equals method\"); assertThat(string1.equals(string2)).isTrue();assertThat(string1.equals(string4)).isTrue(); assertThat(string1.equals(null)).isFalse();assertThat(string1.equals(string3)).isFalse();\n",
    "reg_date": "2021-10-12T12:02:13.000Z"
  },
  {
    "id": 1013,
    "keyword": null,
    "link": null,
    "title": " compareto method java",
    "description": "public int compareTo(Jedi jedi){     return this.age > jedi.age ? 1 : this.age < jedi.age ? -1 : 0; } \n******Java String compareTo()******    The Java String class compareTo() method compares the given    string with the current string lexicographically.    It returns a positive number, negative number, or 0.   ___________________________________________   \tif s1 > s2, it returns positive number   \tif s1 < s2, it returns negative number   \tif s1 == s2, it returns 0     ___________________________________________      \nString myStr1 = \"Hello\"; String myStr2 = \"Hello\"; System.out.println(myStr1.compareTo(myStr2)); // Returns 0 because they are equal\n",
    "reg_date": "2021-10-12T12:02:13.000Z"
  },
  {
    "id": 1014,
    "keyword": null,
    "link": null,
    "title": " compile java",
    "description": "// compile > javac myCode.java // run > java myCode\njavac MyFisrtProgam.java // enter to compile    java MyfirstProgram // run program  \n",
    "reg_date": "2021-10-12T12:02:13.000Z"
  },
  {
    "id": 1015,
    "keyword": null,
    "link": null,
    "title": " composition java",
    "description": "public class motherboard{ \tprivate CPU cpu; } public class CPU{ \tprivate int amtOfCores; \tprivate String brand; }\n",
    "reg_date": "2021-10-12T12:02:13.000Z"
  },
  {
    "id": 1016,
    "keyword": null,
    "link": null,
    "title": " concatenate two arrays in java",
    "description": "import java.util.Arrays;  public class Concat {      public static void main(String[] args) {         int[] array1 = {1, 2, 3};         int[] array2 = {4, 5, 6};          int aLen = array1.length;         int bLen = array2.length;         int[] result = new int[aLen + bLen];          System.arraycopy(array1, 0, result, 0, aLen);         System.arraycopy(array2, 0, result, aLen, bLen);          System.out.println(Arrays.toString(result));     } }\npublic static void main(String[] args) {  // for each ile cozumu         String[] arr3 = {\"A\", \"B\", \"C\",\"Z\",\"N\"};         String[] arr4 = {\"D\", \"E\", \"F\",\"G\",\"U\"};  ArrayList<String> list1 = new ArrayList<>(); //[A, B, C, Z, N, D, E, F, G, U]          for( String each: arr3 ){             list1.add( each );         }         for(String each1 : arr4  ){             list1.add(each1);         }         System.out.println(list1); // [A, B, C, Z, N, D, E, F, G, U]     } \npublic static void main(String[] args) {  // for each ile cozumu         String[] arr3 = {\"A\", \"B\", \"C\",\"Z\",\"N\"};         String[] arr4 = {\"D\", \"E\", \"F\",\"G\",\"U\"};  ArrayList<String> list1 = new ArrayList<>();    //[A, B, C, Z, N, D, E, F, G, U]          for( String each: arr3 ){             list1.add( each );         }         for(String each1 : arr4  ){             list1.add(each1);         }         System.out.println(list1); // [A, B, C, Z, N, D, E, F, G, U]     }\n",
    "reg_date": "2021-10-12T12:02:13.000Z"
  },
  {
    "id": 1017,
    "keyword": null,
    "link": null,
    "title": " condition operator in java",
    "description": " b = (a == 1) ? 20: 30;\n",
    "reg_date": "2021-10-12T12:02:13.000Z"
  },
  {
    "id": 1018,
    "keyword": null,
    "link": null,
    "title": " configure basic auth spring boot",
    "description": "@EnableWebSecurity @Configuration public class WebSecurityConfig extends WebSecurityConfigurerAdapter {      @Value(\"${app.basicAuthUserName}\")     private String basicAuthUserName;      @Value(\"${app.basicAuthPassword}\")     private String basicAuthPassword;    // add endpoint you want to protect to this list     private String[] basicAuthEndpoints = {\"/mytendpoint/path\"};      @Override     protected void configure(HttpSecurity http) throws Exception {         http.csrf().disable();         http.authorizeRequests().antMatchers(basicAuthEndpoints).fullyAuthenticated()                 .and().httpBasic().and().sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS);      }      @Autowired     public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {         auth.inMemoryAuthentication().withUser(basicAuthUserName)                 .password(\"{noop}\" + basicAuthPassword).roles(\"USER\");     }  }\n",
    "reg_date": "2021-10-12T12:02:13.000Z"
  },
  {
    "id": 1019,
    "keyword": null,
    "link": null,
    "title": " console java",
    "description": "try(Scanner scan=new Scanner(System.in)){ \t//read from console \tString textRead=scan.nextLine(); \t//write to console   \tSystem.out.println(textRead); }\n# comile Java class javac YourClass.java # run compiled Java class java YourClass # run Java class directly java YourClass.java # run JAR java -jar YourJar.jar\n",
    "reg_date": "2021-10-12T12:02:13.000Z"
  },
  {
    "id": 1020,
    "keyword": null,
    "link": null,
    "title": " console log java",
    "description": "System.out.println(String msg)\ntry(Scanner scan=new Scanner(System.in)){ \t//read from console \tString textRead=scan.nextLine(); \t//write to console   \tSystem.out.println(textRead); }\n# comile Java class javac YourClass.java # run compiled Java class java YourClass # run Java class directly java YourClass.java # run JAR java -jar YourJar.jar\n",
    "reg_date": "2021-10-12T12:02:14.000Z"
  },
  {
    "id": 1021,
    "keyword": null,
    "link": null,
    "title": " console printing in java",
    "description": "//This is for printing in columns System.out.println(\"Hello World!\");  //This is for printing in rows System.out.print(\"Hello World\");  //When im using the double slash its to comment, also remember that you dont need to type Hello World! you can type everything you want //By the way, you can also do:  int a = 1; System.out.println(a);  //the result of this is \"1\" because a is equal to 1 so the programm whill get the data stored in \"a\" and print it, remember that you can also use \"print\" instead of \"println\" it works whit \"vairables\" too! (oh, the: int a  = 1; is a variable)\npublic class writingInTheConsole {   public static void main(String[] args) { System.out.println(\"Hello Java! I made Minecraft: Java Edition!\");   } }\npublic class ConsoleTest {     public static void main(String[] args) {         System.out.println(\"Console is: \" + System.console());     } }\n",
    "reg_date": "2021-10-12T12:02:14.000Z"
  },
  {
    "id": 1022,
    "keyword": null,
    "link": null,
    "title": " consolenausgabe java",
    "description": "        System.out.println(\"Dein Text\");\n",
    "reg_date": "2021-10-12T12:02:14.000Z"
  },
  {
    "id": 1023,
    "keyword": null,
    "link": null,
    "title": " constants in Java",
    "description": "//A constant is a variable whose value won't change after it's been defined.  private static final int OUR_CONSTANT = 1;  //We make our constants static and final and give them an appropriate type,  //whether that's a Java primitive, a class, or an enum.  //The name should be all capital letters with the words separated by underscores,  //sometimes known as screaming snake case.\npublic final class MyValues {   public static final String VALUE1 = \"foo\";   public static final String VALUE2 = \"bar\"; }\nfinal double Pi = 3.1415926536; \n",
    "reg_date": "2021-10-12T12:02:14.000Z"
  },
  {
    "id": 1024,
    "keyword": null,
    "link": null,
    "title": " constructor",
    "description": "class Other{     public Other(String message){         System.out.println(message);     } }  class scratch{     public static void main(String[] args) {         Other method = new Other(\"Hey\");         //prints Hey to the console     } }\nclass MyClass {   public MyClass () {     //constructor code   } }\npublic class ConsDemo {    public static void main(String args[]) {       MyClass t1 = new MyClass();       MyClass t2 = new MyClass();       System.out.println(t1.num + \" \" + t2.num);    } }\nA constructor is a special method used to initialize objects in java. we use constructors to initialize all variables in the class  when an object is created. As and when an object is created it is initialized automatically with the help of  constructor in java.    We have two types of constructors: Default Constructor Parameterized Constructor  public classname(){ } public classname(parameters list){ }\nA constructor is a special method used to initialize objects in java. we use constructors to initialize all variables in the class  when an object is created. As and when an object is created it is initialized automatically with the help of  constructor in java.    We have two types of constructors: Default Constructor Parameterized Constructor  public classname(){ } public classname(parameters list){ } constructor calls: 1. only constructor can call other constructor 2. constructor cannot be called by its name, this() is used for calling 3. constructor call needs to be at the first step 4. One constructor can only call one constructor 5. Contractor cannot call itself or contain itself \nConstructors are the special methods without any return type.  Constructors have the same name with the className Constructors are special methods, which are called  whenever the new keyword is used to create an object of a class By default every class always has a default constructor  with no parameters. This default constructor is no longer there if a  constructor is created manually Constructors usually act to initialize instance variables or perform  actions that need to be taken whenever an object of a class is created. Like methods, constructors can also be overloaded.  The same rules apply. This is done by providing a constructor with  with a different parameters this() can be used to call the overloaded constructors with other parameters \n",
    "reg_date": "2021-10-12T12:02:14.000Z"
  },
  {
    "id": 1025,
    "keyword": null,
    "link": null,
    "title": " contains example in java",
    "description": "String s1 = \"My name is GFG\";     // prints true  System.out.println(s1.contains(\"GFG\"));     // prints false  System.out.println(s1.contains(\"geeks\"));      \n",
    "reg_date": "2021-10-12T12:02:14.000Z"
  },
  {
    "id": 1026,
    "keyword": null,
    "link": null,
    "title": " context error in android studio",
    "description": "//You can try this  Context context = this;  //or  File f = File(UploadToServer.this.getCacheDir(), \"filename\");  \n",
    "reg_date": "2021-10-12T12:02:14.000Z"
  },
  {
    "id": 1027,
    "keyword": null,
    "link": null,
    "title": " context path spring boot",
    "description": "server.servlet.context-path=/baeldung \nserver.servlet.context-path=/SOMETHING\n",
    "reg_date": "2021-10-12T12:02:14.000Z"
  },
  {
    "id": 1028,
    "keyword": null,
    "link": null,
    "title": " conversion of string to integer in java",
    "description": "\tString number = \"10\"; \tint result = Integer.parseInt(number);\t\t\t \tSystem.out.println(result); Copy\nInteger.parseInt(str);\n9.546235904E9\n",
    "reg_date": "2021-10-12T12:02:14.000Z"
  },
  {
    "id": 1029,
    "keyword": null,
    "link": null,
    "title": " convert a int to string in java",
    "description": "String s = String.ValueOf(10); // will return \"10\"\n",
    "reg_date": "2021-10-12T12:02:14.000Z"
  },
  {
    "id": 1030,
    "keyword": null,
    "link": null,
    "title": " convert a string to int in java",
    "description": "String myString = \"1234\"; int foo = Integer.parseInt(myString);\nint result = Integer.parseInt(number);\n\tString number = \"10\"; \tint result = Integer.parseInt(number);\t\t\t \tSystem.out.println(result); Copy\n// You will receive an error if there are non-numeric characters in the String. String num = \"5\"; int i = Integer.parseInt(num);\nint sample2 = Integer.parseInt(\"47\");   // returns 47 int sample3 = Integer.parseInt(\"+4\");   // returns 4\nclass scalerAcademy {     public static void main ( String args [] ) {         String str = \"789\"; // creating a string         Integer ans = Integer.valueOf(str); // passing the value to an Integer class         Integer ans1 = Integer.valueOf(str,16); // passing radix value as int                 System.out.println(ans); //outputs 789         System.out.println(ans1); // outputs 1929     } }\n",
    "reg_date": "2021-10-12T12:02:15.000Z"
  },
  {
    "id": 1031,
    "keyword": null,
    "link": null,
    "title": " convert array list to Hashset",
    "description": "   Set<Integer> set = new HashSet<Integer>(arrayList);\n",
    "reg_date": "2021-10-12T12:02:15.000Z"
  },
  {
    "id": 1032,
    "keyword": null,
    "link": null,
    "title": " convert array of int to arraylist java",
    "description": "int[] arr = {1,2,3}; IntStream.of(arr).boxed().collect(Collectors.toList());\nint[] ints = {1, 2, 3}; List<Integer> intList = new ArrayList<Integer>(ints.length); for (int i : ints) {     intList.add(i); }\n",
    "reg_date": "2021-10-12T12:02:15.000Z"
  },
  {
    "id": 1033,
    "keyword": null,
    "link": null,
    "title": " convert array to list java",
    "description": "String[] arr = list.toArray(new String[list.size()]);\nInteger[] spam = new Integer[] { 1, 2, 3 }; List<Integer> list = Arrays.asList(spam);\nArrays.asList(array);\n/* Get the Array to be converted. Create the List by passing the Array as parameter in the constructor of the List with the help of Arrays. asList() method. Return the formed List. */  String[] namedata = { \"ram\", \"shyam\", \"balram\" };   List<String> list = Arrays.asList(namedata);\nString[] myArray = new String[] { \"I\", \"like\", \"eating\", \"pizza\" }; List<String> myList = Arrays.asList(myArray);  myList.forEach(string -> System.out.println(string));  // -output- // I // like // eating // pizza // -output-\nCollections.addAll(list, array);\n",
    "reg_date": "2021-10-12T12:02:15.000Z"
  },
  {
    "id": 1034,
    "keyword": null,
    "link": null,
    "title": " convert arraylist to array in java",
    "description": "new ArrayList<>(Arrays.asList(array));\nList<Element> list = Arrays.asList(array);\nList<String> list = new ArrayList<>(); list.add(\"a\"); list.add(\"ab\"); list.add(\"abc\"); list.add(\"abcd\"); // convert String[] array = list.toArray();\nimport java.util.ArrayList; public class ListToArray {    public static void main(String args[]){       ArrayList<String> list = new ArrayList<String>();       list.add(\"Apple\");       list.add(\"Orange\");       list.add(\"Banana\");        System.out.println(\"Contents of list ::\"+list);       String[] myArray = new String[list.size()];       list.toArray(myArray);        for(int i=0; i<myArray.length; i++){          System.out.println(\"Element at the index \"+i+\" is ::\"+myArray[i]);       }    } }\nInteger[] arr = new Integer[al.size()];             // ArrayList to Array Conversion          for (int i = 0; i < al.size(); i++)              arr[i] = al.get(i); \nInteger[] arr = new Integer[al.size()];  for (int i = 0; i < al.size(); i++)       arr[i] = al.get(i); \n",
    "reg_date": "2021-10-12T12:02:15.000Z"
  },
  {
    "id": 1035,
    "keyword": null,
    "link": null,
    "title": " convert arraylist to array int",
    "description": "//only works in java 8 or later list.stream().mapToInt(i -> i).toArray();\nint[] arr = {1,2,3}; IntStream.of(arr).boxed().collect(Collectors.toList());\ntemplist.stream().mapToInt(i->i).toArray();\n",
    "reg_date": "2021-10-12T12:02:15.000Z"
  },
  {
    "id": 1036,
    "keyword": null,
    "link": null,
    "title": " convert base64 to bitmap android",
    "description": "byte[] decodedString = Base64.decode(encodedImage, Base64.DEFAULT); Bitmap decodedByte = BitmapFactory.decodeByteArray(decodedString, 0, decodedString.length); \n",
    "reg_date": "2021-10-12T12:02:15.000Z"
  },
  {
    "id": 1037,
    "keyword": null,
    "link": null,
    "title": " convert base64 to pdf in android studio",
    "description": "import java.io.File; import java.io.FileOutputStream; import java.util.Base64;  class Base64DecodePdf {   public static void main(String[] args) {     File file = new File(\"./test.pdf\");      try ( FileOutputStream fos = new FileOutputStream(file); ) {       // To be short I use a corrupted PDF string, so make sure to use a valid one if you want to preview the PDF file       String b64 = \"JVBERi0xLjUKJYCBgoMKMSAwIG9iago8PC9GaWx0ZXIvRmxhdGVEZWNvZGUvRmlyc3QgMTQxL04gMjAvTGVuZ3==\";       byte[] decoder = Base64.getDecoder().decode(b64);        fos.write(decoder);       System.out.println(\"PDF File Saved\");     } catch (Exception e) {       e.printStackTrace();     }   } }\n",
    "reg_date": "2021-10-12T12:02:15.000Z"
  },
  {
    "id": 1038,
    "keyword": null,
    "link": null,
    "title": " convert base64 to pdf in java",
    "description": "import java.io.File; import java.io.FileOutputStream; import java.util.Base64;  class Base64DecodePdf {   public static void main(String[] args) {     File file = new File(\"./test.pdf\");      try ( FileOutputStream fos = new FileOutputStream(file); ) {       // To be short I use a corrupted PDF string, so make sure to use a valid one if you want to preview the PDF file       String b64 = \"JVBERi0xLjUKJYCBgoMKMSAwIG9iago8PC9GaWx0ZXIvRmxhdGVEZWNvZGUvRmlyc3QgMTQxL04gMjAvTGVuZ3==\";       byte[] decoder = Base64.getDecoder().decode(b64);        fos.write(decoder);       System.out.println(\"PDF File Saved\");     } catch (Exception e) {       e.printStackTrace();     }   } }\n",
    "reg_date": "2021-10-12T12:02:15.000Z"
  },
  {
    "id": 1039,
    "keyword": null,
    "link": null,
    "title": " convert biginteger to string java",
    "description": " // create 2 String objects       String s1, s2;        bi1 = new BigInteger(\"1234\");       bi2 = new BigInteger(\"-1234\");        // assign String value of bi1, bi2 to s1, s2       s1 = bi1.toString();       s2 = bi2.toString(); \n",
    "reg_date": "2021-10-12T12:02:15.000Z"
  },
  {
    "id": 1040,
    "keyword": null,
    "link": null,
    "title": " convert bytebuffer to string",
    "description": "String s = StandardCharsets.UTF_8.decode(byteBuffer).toString();\nString s = StandardCharsets.UTF_8.decode(byteBuffer).toString(); \nstr.toString();\n",
    "reg_date": "2021-10-12T12:02:16.000Z"
  },
  {
    "id": 1041,
    "keyword": null,
    "link": null,
    "title": " convert char to string",
    "description": "char c = 'a'; String s = Character.toString(c); //s == \"a\"\n// Convert char to string java public class CharToStringJava {    public static void main(String[] args)    {       char ch ='G';       String str = Character.toString(ch);       System.out.println(\"char to string is: \" + str);    } }\nchar c = 'a'; String s = Character.toString(c);\nchar[] chars = { 'A', 'B', 'C', 'D', 'E', 'F' };  String str1 = String.valueOf(chars); //\"ABCDEF\" String str2 = new String(chars);// \"ABCDEF\"  System.out.println(str1.equals(str2)); //\"true\"\nfrom character to string:  \tchar c = 'a'; \tString s = Character.toString(c); \t//s == \"a\"\nchar[] chars = {'a','b','c','d','e'}; string s = new string(chars);\n",
    "reg_date": "2021-10-12T12:02:16.000Z"
  },
  {
    "id": 1042,
    "keyword": null,
    "link": null,
    "title": " convert char to string java",
    "description": "char c = 'a'; String s = Character.toString(c); //s == \"a\"\nString string =  \"ABCDEF\" ;   char[] charsFromString = string.toCharArray(); // { 'A', 'B', 'C', 'D', 'E', 'F' }\n// Convert char to string java public class CharToStringJava {    public static void main(String[] args)    {       char ch ='G';       String str = Character.toString(ch);       System.out.println(\"char to string is: \" + str);    } }\n// getting single character from string.. String str=\"abcd\";  char c=str.toChar(0);   System.out.println(\"output is \"+c); // output is a\nchar c = 'a'; String s = Character.toString(c);\nCharacter.toString('c');\n",
    "reg_date": "2021-10-12T12:02:16.000Z"
  },
  {
    "id": 1043,
    "keyword": null,
    "link": null,
    "title": " convert class to xml string",
    "description": "public string ToXML()     {         using(var stringwriter = new System.IO.StringWriter())         {              var serializer = new XmlSerializer(this.GetType());             serializer.Serialize(stringwriter, this);             return stringwriter.ToString();         }     }   public static YourClass LoadFromXMLString(string xmlText)     {         using(var stringReader = new System.IO.StringReader(xmlText))         {             var serializer = new XmlSerializer(typeof(YourClass ));             return serializer.Deserialize(stringReader) as YourClass ;         }     }\n",
    "reg_date": "2021-10-12T12:02:16.000Z"
  },
  {
    "id": 1044,
    "keyword": null,
    "link": null,
    "title": " convert date to calendar java",
    "description": "public static Calendar toCalendar(Date date){    Calendar cal = Calendar.getInstance();   cal.setTime(date);   return cal; }\n",
    "reg_date": "2021-10-12T12:02:16.000Z"
  },
  {
    "id": 1045,
    "keyword": null,
    "link": null,
    "title": " convert date to datetime java",
    "description": "Fixed it using this:  public DateTime dateAndTimeToDateTime(java.sql.Date date, java.sql.Time time) {     String myDate = date + \" \" + time;     SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");     java.util.Date utilDate = new java.util.Date();     try {         utilDate = sdf.parse(myDate);     } catch (ParseException pe){         pe.printStackTrace();     }     DateTime dateTime = new DateTime(utilDate);      return dateTime; }\n",
    "reg_date": "2021-10-12T12:02:16.000Z"
  },
  {
    "id": 1046,
    "keyword": null,
    "link": null,
    "title": " convert datetime to custom format in java 8",
    "description": "DateTimeFormatter oldPattern = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"); DateTimeFormatter newPattern = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");  LocalDateTime datetime = LocalDateTime.parse(input, oldPattern);  String output = datetime.format(newPattern);\n",
    "reg_date": "2021-10-12T12:02:16.000Z"
  },
  {
    "id": 1047,
    "keyword": null,
    "link": null,
    "title": " convert decimal to binary in java",
    "description": "public class DecimalToBinaryWithoutArray {    static void toBinary(int num)    {        StringBuilder sb = new StringBuilder();        int a = 0;       while(num > 0)       {          sb.append(num % 2);          a++;          num = num / 2;       }       System.out.println(sb.reverse());     }    public static void main(String[] args)     {       int number = 20;        toBinary(number);    } }\nint n = 1000; String s = Integer.toBinaryString(n);\nString binary = Integer.toBinaryString(num);\npublic class DecimalToBinaryExample2{     public static void toBinary(int decimal){          int binary[] = new int[40];          int index = 0;          while(decimal > 0){            binary[index++] = decimal%2;            decimal = decimal/2;          }          for(int i = index-1;i >= 0;i--){            System.out.print(binary[i]);          }     System.out.println();//new line   }     public static void main(String args[]){       System.out.println(\"Decimal of 10 is: \");   toBinary(10);     System.out.println(\"Decimal of 21 is: \");   toBinary(21);     System.out.println(\"Decimal of 31 is: \");     toBinary(31);   }}    \nConvert decimal to binary using toBinaryString() method public class DecimalToBinary {    public static void main(String[] args)    {       System.out.println(\"decimal to binary using toBinaryString() 104: \");       // to binary string java       System.out.println(Integer.toBinaryString(104));       System.out.println(\"\\ndecimal to binary using toBinaryString() 554: \");       // tobinarystring       System.out.println(Integer.toBinaryString(554));       System.out.println(\"\\ndecimal to binary using toBinaryString() 644: \");       System.out.println(Integer.toBinaryString(644));    } }\npublic static String makeBinaryString(int n) { \tStringBuilder sb = new StringBuilder(); \twhile (n > 0) {     sb.append(n % 2); \t\tn /= 2; \t}   \tsb.reverse();  \t   \treturn sb.toString(); }\n",
    "reg_date": "2021-10-12T12:02:16.000Z"
  },
  {
    "id": 1048,
    "keyword": null,
    "link": null,
    "title": " convert decimal to hexadecimal in java",
    "description": "Integer.toHexString()\npublic class DecimalToHexExample2{     public static String toHex(int decimal){          int rem;        String hex=\"\";         char hexchars[]={'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};       while(decimal>0)        {          rem=decimal\u0016;           hex=hexchars[rem]+hex;           decimal=decimal/16;        }       return hex;   }     public static void main(String args[]){            System.out.println(\"Hexadecimal of 10 is: \"+toHex(10));        System.out.println(\"Hexadecimal of 15 is: \"+toHex(15));        System.out.println(\"Hexadecimal of 289 is: \"+toHex(289));   }} \nint integer = 18;  String hexString = Integer.toHexString(integer);\nimport java.util.Scanner; public class DecimalToHexaExample  {    public static void main(String[] args)     {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter decimal number: \");       int decimal = sc.nextInt();       String strHexadecimal = \"\";       while(decimal != 0)       {          int hexNumber = decimal % 16;          char charHex;          if(hexNumber <= 9 && hexNumber >= 0)          {             charHex = (char)(hexNumber + '0');          }          else          {             charHex = (char)(hexNumber - 10 + 'A');          }          strHexadecimal = charHex + strHexadecimal;          decimal = decimal / 16;       }       System.out.println(\"Hexadecimal number: \" + strHexadecimal);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:02:16.000Z"
  },
  {
    "id": 1049,
    "keyword": null,
    "link": null,
    "title": " convert every character in string to arraylist jva",
    "description": "import java.util.ArrayList; import java.util.List;  // Convert a String to a List of Characters class Util { \tpublic static void main(String[] args) \t{ \t\tString string = \"Techie Delight\"; \t\tList<Character> chars = new ArrayList<>();  \t\tfor (char ch: string.toCharArray()) { \t\t\tchars.add(ch); \t\t}  \t\tSystem.out.println(chars); \t} }\n",
    "reg_date": "2021-10-12T12:02:16.000Z"
  },
  {
    "id": 1050,
    "keyword": null,
    "link": null,
    "title": " convert fahrenheit to celsius",
    "description": "import java.util.Scanner;  public class Main {      public static void main(String args[]) {         Scanner sc = new Scanner(System.in);         int far = sc.nextInt();         int cel = (far - 32) * 5/9;         System.out.printf(\"%d Fahrenheit is %d Celsius\", far, cel);     } }\n",
    "reg_date": "2021-10-12T12:02:17.000Z"
  },
  {
    "id": 1051,
    "keyword": null,
    "link": null,
    "title": " convert hashset to array",
    "description": "//\tFirst of all, you shouldn't use raw types. //\tUse : \tSet<Integer> set = new HashSet<>(); \tset.add(4); \tset.add(1); //\tThen convert to array : \tInteger[] arr = x.toArray(new Integer[set.size()]); //\tUsing x.toArray() would give you an Object[].\n",
    "reg_date": "2021-10-12T12:02:17.000Z"
  },
  {
    "id": 1052,
    "keyword": null,
    "link": null,
    "title": " convert hashset to int array java",
    "description": "import java.util.Arrays; import java.util.Set; import java.util.HashSet; class Main {     // Program to convert set of integer to array of int in Java     public static void main(String args[])     {         Set<Integer> ints = new HashSet<>(Arrays.asList(1, 2, 3, 4, 5));         int[] primitive = ints.stream()                             .mapToInt(Integer::intValue)                             .toArray();         System.out.println(Arrays.toString(primitive));     } }\nimport java.util.HashSet; import java.util.Set; public class SetExample {    public static void main(String args[]) {       //Instantiating the HashSet       Set<Integer> hashSet = new HashSet<Integer>();       //Populating the HashSet       hashSet.add(1124);       hashSet.add(3654);       hashSet.add(7854);       hashSet.add(9945);       //Creating an empty integer array       Integer[] array = new Integer[hashSet.size()];       //Converting Set object to integer array       hashSet.toArray(array);       System.out.println(Arrays.toString(array));    } }\nimport java.util.Arrays; import java.util.HashSet; import java.util.Set; public class SetExample {    public static void main(String args[]) {       //Instantiating the HashSet       Set<Integer> hashSet = new HashSet<Integer>();       //Populating the HashSet       hashSet.add(1124);       hashSet.add(3654);       hashSet.add(7854);       hashSet.add(9945);       System.out.println(hashSet);       //Creating an empty integer array       Integer[] array = hashSet.stream().toArray(Integer[]::new);       System.out.println(Arrays.toString(array));    } }\n",
    "reg_date": "2021-10-12T12:02:17.000Z"
  },
  {
    "id": 1053,
    "keyword": null,
    "link": null,
    "title": " convert input stream to string java",
    "description": " String result = IOUtils.toString(inputStream, StandardCharsets.UTF_8); \n",
    "reg_date": "2021-10-12T12:02:17.000Z"
  },
  {
    "id": 1054,
    "keyword": null,
    "link": null,
    "title": " convert int[] to list java",
    "description": "int[] arr = {1,2,3}; IntStream.of(arr).boxed().collect(Collectors.toList());\nList<Integer> al = new ArrayList<Integer>();  Integer[] arr = new Integer[al.size()];  arr = al.toArray(arr); \nint arr[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }; List lst = Arrays.asList(arr); System.out.println(lst.size()); \n",
    "reg_date": "2021-10-12T12:02:17.000Z"
  },
  {
    "id": 1055,
    "keyword": null,
    "link": null,
    "title": " convert int array to integer list java",
    "description": "int[] arr = {1,2,3}; IntStream.of(arr).boxed().collect(Collectors.toList());\nint[] ints = {1, 2, 3}; List<Integer> intList = new ArrayList<Integer>(ints.length); for (int i : ints) {     intList.add(i); }\n",
    "reg_date": "2021-10-12T12:02:17.000Z"
  },
  {
    "id": 1056,
    "keyword": null,
    "link": null,
    "title": " convert int to ascii java",
    "description": "int yourInt = 33; char ch = (char) yourInt; System.out.println(yourInt); // 33 System.out.println(ch); // !\n       char a ='7';//Convert your number to character        System.out.println((int)a);//Convert your character to int and ASCII code will be printed\n",
    "reg_date": "2021-10-12T12:02:17.000Z"
  },
  {
    "id": 1057,
    "keyword": null,
    "link": null,
    "title": " convert int to double with 2 decimal places java",
    "description": "double angle = 20.3034; DecimalFormat df = new DecimalFormat(\"#.00\"); String angleFormated = df.format(angle); System.out.println(angleFormated); //output 20.30\n",
    "reg_date": "2021-10-12T12:02:17.000Z"
  },
  {
    "id": 1058,
    "keyword": null,
    "link": null,
    "title": " convert int to hex java",
    "description": "public class DecimalToHexExample2{     public static String toHex(int decimal){          int rem;        String hex=\"\";         char hexchars[]={'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};       while(decimal>0)        {          rem=decimal\u0016;           hex=hexchars[rem]+hex;           decimal=decimal/16;        }       return hex;   }     public static void main(String args[]){            System.out.println(\"Hexadecimal of 10 is: \"+toHex(10));        System.out.println(\"Hexadecimal of 15 is: \"+toHex(15));        System.out.println(\"Hexadecimal of 289 is: \"+toHex(289));   }} \nint integer = 18;  String hexString = Integer.toHexString(integer);\n",
    "reg_date": "2021-10-12T12:02:17.000Z"
  },
  {
    "id": 1059,
    "keyword": null,
    "link": null,
    "title": " convert integer array to string array",
    "description": "int[] array = { 1, 2, 3, 4, 5 }; String s = String.join(\"\", IntStream.of(array).mapToObj(String::valueOf).toArray(String[]::new)); System.out.println(s); // 12345\nint[] nums = {5,1,2,11,3}; //List or Vector Arrays.sort(nums); //Collections.sort() for List,Vector String a=Arrays.toString(nums); //toString the List or Vector String ar[]=a.substring(1,a.length()-1).split(\", \"); System.out.println(Arrays.toString(ar));\n",
    "reg_date": "2021-10-12T12:02:17.000Z"
  },
  {
    "id": 1060,
    "keyword": null,
    "link": null,
    "title": " convert java date to sql date",
    "description": "public class MainClass {    public static void main(String[] args) {     java.util.Date utilDate = new java.util.Date();     java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());     System.out.println(\"utilDate:\" + utilDate);     System.out.println(\"sqlDate:\" + sqlDate);    }  } \n",
    "reg_date": "2021-10-12T12:02:18.000Z"
  },
  {
    "id": 1061,
    "keyword": null,
    "link": null,
    "title": " convert javascritp getTime() to datetime",
    "description": "var time = new Date().getTime(); // get your number var date = new Date(time); // create Date object  console.log(date.toString()); // result: Wed Jan 12 2011 12:42:46 GMT-0800 (PST)\n",
    "reg_date": "2021-10-12T12:02:18.000Z"
  },
  {
    "id": 1062,
    "keyword": null,
    "link": null,
    "title": " convert list of integer to array in java",
    "description": "int[] array = list.stream().mapToInt(i->i).toArray();\nint[] arr = {1,2,3}; IntStream.of(arr).boxed().collect(Collectors.toList());\nList<Integer> al = new ArrayList<Integer>();  Integer[] arr = new Integer[al.size()];  arr = al.toArray(arr); \n",
    "reg_date": "2021-10-12T12:02:18.000Z"
  },
  {
    "id": 1063,
    "keyword": null,
    "link": null,
    "title": " convert list to array in java",
    "description": "String[] arr = list.toArray(new String[list.size()]);\nInteger[] spam = new Integer[] { 1, 2, 3 }; List<Integer> list = Arrays.asList(spam);\nArrays.asList(array);\n/* Get the Array to be converted. Create the List by passing the Array as parameter in the constructor of the List with the help of Arrays. asList() method. Return the formed List. */  String[] namedata = { \"ram\", \"shyam\", \"balram\" };   List<String> list = Arrays.asList(namedata);\nList<String> stockList = new ArrayList<String>(); stockList.add(\"stock1\"); stockList.add(\"stock2\");  String[] stockArr = new String[stockList.size()]; stockArr = stockList.toArray(stockArr);  for(String s : stockArr)     System.out.println(s);\nInteger[] arr = new Integer[al.size()];  arr = al.toArray(arr); \n",
    "reg_date": "2021-10-12T12:02:18.000Z"
  },
  {
    "id": 1064,
    "keyword": null,
    "link": null,
    "title": " convert local datetime to instant java",
    "description": "covert localdatetime to Instant object  LocalDateTime().now().toInstant(ZoneOffset.UTC)\nimport java.time.Instant; import java.time.LocalDateTime; import java.time.ZoneOffset;  // ...  //Convert instant to LocalDateTime, no timezone, add a zero offset / UTC+0 LocalDateTime ldt = LocalDateTime.ofInstant(instant, ZoneOffset.UTC); \n",
    "reg_date": "2021-10-12T12:02:18.000Z"
  },
  {
    "id": 1065,
    "keyword": null,
    "link": null,
    "title": " convert localdatetime to localdate",
    "description": "dateToConvert.toInstant()       .atZone(ZoneId.systemDefault())       .toLocalDate();\nimport java.time.LocalDate; import java.time.LocalDateTime;   public class Main {     public static void main(String[] args) {           LocalDateTime localDateTime = LocalDateTime.now();                   LocalDate localDate = localDateTime.toLocalDate();                   System.out.println(localDate);     } } \n",
    "reg_date": "2021-10-12T12:02:18.000Z"
  },
  {
    "id": 1066,
    "keyword": null,
    "link": null,
    "title": " convert long to date in java",
    "description": "//The Date constructor (click the link!) accepts the time as long in milliseconds, not seconds. long currentDateTime = System.currentTimeMillis(); //creating Date from millisecond Date currentDate = new Date(currentDateTime);\n",
    "reg_date": "2021-10-12T12:02:18.000Z"
  },
  {
    "id": 1067,
    "keyword": null,
    "link": null,
    "title": " convert object array to list java 8",
    "description": "Integer[] spam = new Integer[] { 1, 2, 3 }; List<Integer> list = Arrays.asList(spam);\n",
    "reg_date": "2021-10-12T12:02:18.000Z"
  },
  {
    "id": 1068,
    "keyword": null,
    "link": null,
    "title": " convert set to list java",
    "description": "public void givenUsingCoreJava_whenSetConvertedToList_thenCorrect() {    Set<Integer> sourceSet = Sets.newHashSet(0, 1, 2, 3, 4, 5);    List<Integer> targetList = new ArrayList<>(sourceSet); }\n",
    "reg_date": "2021-10-12T12:02:18.000Z"
  },
  {
    "id": 1069,
    "keyword": null,
    "link": null,
    "title": " convert string into time in java",
    "description": "java.sql.Time timeValue = new java.sql.Time(formatter.parse(fajr_prayertime).getTime()); \n",
    "reg_date": "2021-10-12T12:02:18.000Z"
  },
  {
    "id": 1070,
    "keyword": null,
    "link": null,
    "title": " convert string into unicode java",
    "description": "System.out.println( \"\\\\u\" + Integer.toHexString('&divide;' | 0x10000).substring(1) );\n",
    "reg_date": "2021-10-12T12:02:19.000Z"
  },
  {
    "id": 1071,
    "keyword": null,
    "link": null,
    "title": " convert string to byte java",
    "description": "  String example = \"Convert Java String\";   byte[] bytes = example.getBytes();\n",
    "reg_date": "2021-10-12T12:02:19.000Z"
  },
  {
    "id": 1072,
    "keyword": null,
    "link": null,
    "title": " convert string to char array in java",
    "description": "String str = \"example\"; char[] ch = str.toCharArray(); \nchar[] a = {'h', 'e', 'l', 'l', 'o', ' ', 'w', 'o', 'r', 'l', 'd'}; String str = new String(a);\n// java convert array of char to string public class CharArrayToString {    public static void main(String[] args)    {       char[] charArray = new char[]{'F','l','o','w','e','r','B','r','a','c','k','e','t','s'};       String str = new String(charArray);       System.out.println(str);    } }\nHow to convert string to array  import java.util.*;     public class GFG {         public static void main(String args[])      {             String str = \"GeeksForGeeks\";             // Creating array and Storing the array          // returned by toCharArray()          char[] ch = str.toCharArray();             // Printing array          for (char c : ch) {              System.out.println(c);          }      }  }  \nString myString = \"Hello, world!\"; char[] myCharArray = myString.toCharArray();\n       // Method 1: Using String object       char[] ch = {'g', 'o', 'o', 'd', ' ', 'm', 'o', 'r', 'n', 'i', 'n', 'g'};       String str = new String(ch);       System.out.println(str);  \n",
    "reg_date": "2021-10-12T12:02:19.000Z"
  },
  {
    "id": 1073,
    "keyword": null,
    "link": null,
    "title": " convert string to double android studio",
    "description": "String s; DecimalFormat dF = new DecimalFormat(\"0.00\"); Number num = dF.parse(s); double final = num.doubleValue();\n",
    "reg_date": "2021-10-12T12:02:19.000Z"
  },
  {
    "id": 1074,
    "keyword": null,
    "link": null,
    "title": " convert string to float java",
    "description": "String yourString = \"23.7\"; float yourFloat = Float.parseFloat(yourString);\nString output = Float.parseFloat(floatNum); /** convert float to string using objName.parse(ObjName) <--capitalized usually. */\nFloat myFloat = Float.parseFloat(\"23.5\")\n",
    "reg_date": "2021-10-12T12:02:19.000Z"
  },
  {
    "id": 1075,
    "keyword": null,
    "link": null,
    "title": " convert string to int java",
    "description": "String myString = \"1234\"; int foo = Integer.parseInt(myString);\nint result = Integer.parseInt(number);\nint result = Integer.parseInt(\"500\"); System.out.println(result) // prints 500 as int\n\tString number = \"10\"; \tint result = Integer.parseInt(number);\t\t\t \tSystem.out.println(result); Copy\nint i = Integer.parseInt(myString);\nString str = \"oopsies\" int myInt = int(str)\n",
    "reg_date": "2021-10-12T12:02:19.000Z"
  },
  {
    "id": 1076,
    "keyword": null,
    "link": null,
    "title": " convert string to list java 8",
    "description": "String txt=\"Hello World I am a text\"; List<String> seperated=Arrays.asList(txt.split(\" \")); System.out.println(seperated);//[Hello, World, I, am, a, text]\n",
    "reg_date": "2021-10-12T12:02:19.000Z"
  },
  {
    "id": 1077,
    "keyword": null,
    "link": null,
    "title": " convert string to localdatetime",
    "description": "//convert String to LocalDateTime String str = \"2016-03-04 11:30\"; DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"); LocalDateTime dateTime = LocalDateTime.parse(str, formatter);\n",
    "reg_date": "2021-10-12T12:02:19.000Z"
  },
  {
    "id": 1078,
    "keyword": null,
    "link": null,
    "title": " convert stringbuffer to string in java",
    "description": "String s = StandardCharsets.UTF_8.decode(byteBuffer).toString(); \nstr.toString();\n",
    "reg_date": "2021-10-12T12:02:19.000Z"
  },
  {
    "id": 1079,
    "keyword": null,
    "link": null,
    "title": " convert two bytes to int java",
    "description": "int val = ((bytes[2] & 0xff) << 8) | (bytes[3] & 0xff);\n",
    "reg_date": "2021-10-12T12:02:19.000Z"
  },
  {
    "id": 1080,
    "keyword": null,
    "link": null,
    "title": " converter float para string em java",
    "description": " float numero = 2.3F;   String s = Float.toString(numero); \n",
    "reg_date": "2021-10-12T12:02:20.000Z"
  },
  {
    "id": 1081,
    "keyword": null,
    "link": null,
    "title": " converter int array para string java",
    "description": "int[] array = { 1, 2, 3, 4, 5 }; String s = String.join(\"\", IntStream.of(array).mapToObj(String::valueOf).toArray(String[]::new)); System.out.println(s); // 12345\nint[] nums = {5,1,2,11,3}; //List or Vector Arrays.sort(nums); //Collections.sort() for List,Vector String a=Arrays.toString(nums); //toString the List or Vector String ar[]=a.substring(1,a.length()-1).split(\", \"); System.out.println(Arrays.toString(ar));\n",
    "reg_date": "2021-10-12T12:02:20.000Z"
  },
  {
    "id": 1082,
    "keyword": null,
    "link": null,
    "title": " converter string para int java",
    "description": "String myString = \"1234\"; int foo = Integer.parseInt(myString);\nint result = Integer.parseInt(\"500\"); System.out.println(result) // prints 500 as int\npackage br.com.dicasdejava.fundamentos;  public class ConverterStringParaInt {      public static void main(String[] args) {          String numero = \"25\";          int numeroConvertido = Integer.parseInt(numero);          int numeroVezes2 = numeroConvertido * 2;          System.out.println(\"Resultado: \" + numeroVezes2);      }  } \nclass scratch{     public static void main(String[] args) {         String str = \"54\";         int num = Integer.parseInt(\"54\");         double doub = Double.parseDouble(\"54\");     } }\n",
    "reg_date": "2021-10-12T12:02:20.000Z"
  },
  {
    "id": 1083,
    "keyword": null,
    "link": null,
    "title": " converting char to int in java",
    "description": "char charValue = '2'; int intValue = Character.getNumericValue(charValue); // 2\npublic class JavaExample{      public static void main(String args[]){   \tchar ch = '9'; \t\t \t/* Since parseInt() method of Integer class accepts    \t * String argument only, we must need to convert \t * the char to String first using the String.valueOf() \t * method and then we pass the String to the parseInt() \t * method to convert the char to int \t */ \tint num = Integer.parseInt(String.valueOf(ch)); \t\t \tSystem.out.println(num);    } }\nint n = Character.getNumericValue(char);\nchar something = '1'; int value = Integer.parseInt(something + \"\"); System.out.println(value);  // prints 1\n",
    "reg_date": "2021-10-12T12:02:20.000Z"
  },
  {
    "id": 1084,
    "keyword": null,
    "link": null,
    "title": " converting excel to csv in java",
    "description": "import java.io.File; import java.io.FileInputStream; import java.io.FileOutputStream; import java.util.Iterator;  import org.apache.commons.io.FilenameUtils; import org.apache.poi.hssf.usermodel.HSSFWorkbook; import org.apache.poi.ss.usermodel.Cell; import org.apache.poi.ss.usermodel.Row; import org.apache.poi.ss.usermodel.Sheet; import org.apache.poi.ss.usermodel.Workbook; import org.apache.poi.xssf.usermodel.XSSFWorkbook;  public class XlsxtoCSV {      static void xlsx(File inputFile, File outputFile) {         // For storing data into CSV files         StringBuffer data = new StringBuffer();          try {             FileOutputStream fos = new FileOutputStream(outputFile);             // Get the workbook object for XLSX file             FileInputStream fis = new FileInputStream(inputFile);             Workbook workbook = null;              String ext = FilenameUtils.getExtension(inputFile.toString());              if (ext.equalsIgnoreCase(\"xlsx\")) {                 workbook = new XSSFWorkbook(fis);             } else if (ext.equalsIgnoreCase(\"xls\")) {                 workbook = new HSSFWorkbook(fis);             }              // Get first sheet from the workbook              int numberOfSheets = workbook.getNumberOfSheets();             Row row;             Cell cell;             // Iterate through each rows from first sheet              for (int i = 0; i < numberOfSheets; i++) {                 Sheet sheet = workbook.getSheetAt(0);                 Iterator<Row> rowIterator = sheet.iterator();                  while (rowIterator.hasNext()) {                     row = rowIterator.next();                     // For each row, iterate through each columns                     Iterator<Cell> cellIterator = row.cellIterator();                     while (cellIterator.hasNext()) {                          cell = cellIterator.next();                          switch (cell.getCellType()) {                         case Cell.CELL_TYPE_BOOLEAN:                             data.append(cell.getBooleanCellValue() + \",\");                              break;                         case Cell.CELL_TYPE_NUMERIC:                             data.append(cell.getNumericCellValue() + \",\");                              break;                         case Cell.CELL_TYPE_STRING:                             data.append(cell.getStringCellValue() + \",\");                             break;                          case Cell.CELL_TYPE_BLANK:                             data.append(\"\" + \",\");                             break;                         default:                             data.append(cell + \",\");                          }                     }                     data.append('\\n'); // appending new line after each row                 }              }             fos.write(data.toString().getBytes());             fos.close();          } catch (Exception ioe) {             ioe.printStackTrace();         }     }      // testing the application      public static void main(String[] args) {         // int i=0;         // reading file from desktop         File inputFile = new File(\".//src//test//resources//yourExcel.xls\"); //provide your path         // writing excel data to csv         File outputFile = new File(\".//src//test//resources//yourCSV.csv\");  //provide your path         xlsx(inputFile, outputFile);         System.out.println(\"Conversion of \" + inputFile + \" to flat file: \"                 + outputFile + \" is completed\");     } } \n",
    "reg_date": "2021-10-12T12:02:20.000Z"
  },
  {
    "id": 1085,
    "keyword": null,
    "link": null,
    "title": " converting string to int in java",
    "description": "String myString = \"1234\"; int foo = Integer.parseInt(myString);\nint result = Integer.parseInt(number);\nint result = Integer.parseInt(\"500\"); System.out.println(result) // prints 500 as int\n\tString number = \"10\"; \tint result = Integer.parseInt(number);\t\t\t \tSystem.out.println(result); Copy\nString myString = \"1234\"; int number = Integer.parseInt(myString);\nThere are two methods available in java to convert string to integer. One is Integer.parseInt() method and another one is Integer.valueOf() method. Both these methods are static methods of java.lang.Integer class. Both these methods throw NumberFormatException if input string is not a valid integer.\n",
    "reg_date": "2021-10-12T12:02:20.000Z"
  },
  {
    "id": 1086,
    "keyword": null,
    "link": null,
    "title": " converting string to int java",
    "description": "String myString = \"1234\"; int foo = Integer.parseInt(myString);\nint result = Integer.parseInt(number);\nint result = Integer.parseInt(\"500\"); System.out.println(result) // prints 500 as int\nint i = Integer.parseInt(myString);\n\tString number = \"10\"; \tint result = Integer.parseInt(number);\t\t\t \tSystem.out.println(result); \npackage br.com.dicasdejava.fundamentos;  public class ConverterStringParaInt {      public static void main(String[] args) {          String numero = \"25\";          int numeroConvertido = Integer.parseInt(numero);          int numeroVezes2 = numeroConvertido * 2;          System.out.println(\"Resultado: \" + numeroVezes2);      }  } \n",
    "reg_date": "2021-10-12T12:02:20.000Z"
  },
  {
    "id": 1087,
    "keyword": null,
    "link": null,
    "title": " conway's game of life code java",
    "description": "   /**   * Java class for simulation of Conway's Game of Life.    * @author G. Cope   *   */  public class Conway2D {    \tprivate final int width;    \tprivate final int height;  \t  \tprivate final int size;  \t  \tprivate int seedCount = 9500;  \t/*  \t * Data representing the grid in 1d format. Specified as byte to allow for multiple  \t * phases.   \t */  \tbyte[] data;  \t  \tpublic Conway2D(){  \t\tthis(100, 100);  \t}  \t/**  \t * Constructs a new Game of Life with the specified dimensions.   \t * @param width  \t * @param height  \t */  \tpublic Conway2D(int width, int height){  \t\tthis.width = width;  \t\tthis.height = height;  \t\tthis.size = width * height;  \t\tdata = new byte[size];  \t}        /**  \t * Iterates the game one step forward  \t */  \tpublic void iterate(){  \t\tbyte[] prev = new byte[size];  \t\tSystem.arraycopy(data, 0, prev, 0, size);    \t\tbyte[] next = new byte[size];  \t\tfor ( int i = 0; i < width; i++ ){  \t\t\tfor ( int j = 0; j < height; j++ ){  \t\t\t\tint type = isAlive(i, j, prev);  \t\t\t\t  \t\t\t\tif ( type > 0 ){  \t\t\t\t\tnext[j * width + i] = 1;  \t\t\t\t}else{  \t\t\t\t\tnext[j * width + i] = 0;  \t\t\t\t}  \t\t\t\t  \t\t\t}  \t\t}  \t\t  \t\tSystem.arraycopy(next, 0, data, 0, size);  \t\t  \t}  \t  \t/**  \t * Checks if the cell is alive  \t * @param x The x position  \t * @param y The y position  \t * @param d The grid data.  \t * @return  \t */  \tprotected int isAlive(int x, int y, byte[] d){  \t\tint count = 0;  \t\tint pos1 = y * width + x;  \t\tfor ( int i = x-1; i <= x + 1; i++ ){  \t\t\tfor ( int j = y - 1; j <= y + 1; j++ ){  \t\t\t\tint pos = j * width + i;  \t\t\t\tif ( pos >= 0 && pos < size - 1 && pos != pos1){  \t\t\t\t\tif ( d[pos] == 1 ){  \t\t\t\t\t\tcount++;  \t\t\t\t\t}  \t\t\t\t}  \t\t\t}  \t\t}  \t\t//dead  \t\tif ( d[pos1] == 0 ){  \t\t\tif ( count == 3 ){//becomes alive.  \t\t\t\treturn 1;  \t\t\t}  \t\t\treturn 0;//still dead  \t\t}else{//live  \t\t\tif ( count < 2 || count > 3 ){//Dies  \t\t\t\treturn 0;  \t\t\t}  \t\t\treturn 1;//lives  \t\t}    \t}  \t  \t  \t/**  \t * Randomly seeds the grid.   \t */  \tpublic void randomSeed(){  \t\tfor ( int i = 0; i < seedCount; i++ ){  \t\t\tint x = (int)(Math.random() * width);  \t\t\tint y = (int)(Math.random() * height);  \t\t\tdata[y * width + x] = 1;    \t\t}  \t}  \t  \t/**  \t * Retrieves the grid data.   \t * @return  \t */  \tpublic byte[] getData(){  \t\treturn data;  \t}  }  \n",
    "reg_date": "2021-10-12T12:02:20.000Z"
  },
  {
    "id": 1088,
    "keyword": null,
    "link": null,
    "title": " copy array in java",
    "description": "// Shallow copy int[] src = {1,2,3,4,5}; int[] dst = Arrays.copyOf(src, src.length);  // Deep copy int[] dst2 = new int[src.length]; for(int i = 0; i < src.length; i++){ \tdst2[i] = src[i]; }\nint[] src  = new int[]{1,2,3,4,5}; int[] dest = new int[5];  System.arraycopy( src, 0, dest, 0, src.length );\nint a[] = {1, 8, 3};     // Copy elements of a[] to b[]  int b[] = a.clone();\nint[] a = {1,2,3,4,5}; int[] b = Arrays.copyOf(a, a.length);\nint[] a = {1, 2, 3};       int[] b = a.clone();\n// method  public static int [] copyArray(int [] arr){       int [] copyArr = new int[arr.length];       for (int i = 0; i < copyArr.length; i++){             copyArr[i] = arr[i];        }       return copyArr; }  // Arrays. method  int[] copyCat = Arrays.copyOf(arr, arr.length);  // System  System.arraycopy(x,0,y,0,5); // 5 is array's length   // clone  y = x.clone(); \n",
    "reg_date": "2021-10-12T12:02:20.000Z"
  },
  {
    "id": 1089,
    "keyword": null,
    "link": null,
    "title": " copy array in java 2d",
    "description": "int[][] copy = Arrays.stream(matrix).map(int[]::clone).toArray(int[][]::new);\n",
    "reg_date": "2021-10-12T12:02:20.000Z"
  },
  {
    "id": 1090,
    "keyword": null,
    "link": null,
    "title": " copy arraylist java",
    "description": "List<Something> original=new ArrayList<>(); //insert elements List<Something> copy=new ArrayList<>(original);//create copy here System.out.println(copy.equals(original));//true because the copy has the same elements System.out.println(copy==original);//false because it is another List\n",
    "reg_date": "2021-10-12T12:02:21.000Z"
  },
  {
    "id": 1091,
    "keyword": null,
    "link": null,
    "title": " copy arraylist to another arraylist java",
    "description": "You can use such trick:  myObject = new ArrayList<Object>(myTempObject); or use  myObject = (ArrayList<Object>)myTempObject.clone(); You can get some information about clone() method here  But you should remember, that all these ways will give you a copy of your List, not all of its elements. So if you change one of the elements in your copied List, it will also be changed in your original List.\n",
    "reg_date": "2021-10-12T12:02:21.000Z"
  },
  {
    "id": 1092,
    "keyword": null,
    "link": null,
    "title": " copy collection java",
    "description": "Collections.copy(List destination, List source);\n",
    "reg_date": "2021-10-12T12:02:21.000Z"
  },
  {
    "id": 1093,
    "keyword": null,
    "link": null,
    "title": " copy constructor in java",
    "description": "public class CopyConstructorExample {    \tprivate int someInt;   \tprivate String someString; \tprivate Date someDate;      \tpublic CopyConstructorExample(CopyConstructorExample example) {     \tthis.someInt = example.getSomeInt();     \tthis.someString = example.getSomeString();       \tthis.someDate = new Date(example.getSomeDate().getTime());        \t// We need to construct a new Date object, else we would have the same date object     }      // Other Constructors here   // Getters and Setters here } public class UsageExample { \tpublic static void main(String[] args) {     \tCopyConstructorExample example = new CopyConstructorExample(5, \"Test\");       \t// Copy example using the Constructor       \tCopyConstructorExample copy = new CopyConstructorExample(example);       \t     } }\n",
    "reg_date": "2021-10-12T12:02:21.000Z"
  },
  {
    "id": 1094,
    "keyword": null,
    "link": null,
    "title": " copy file with byte java",
    "description": "var source = new File(\"src/resources/bugs.txt\"); var dest = new File(\"src/resources/bugs2.txt\");  Files.copy(source.toPath(), dest.toPath(),             StandardCopyOption.REPLACE_EXISTING);  //Source: http://zetcode.com/java/copyfile/\nimport java.io.FileInputStream; import java.io.FileOutputStream;  public class Main {     public static void main(String[] args) {         FileInputStream in =null;         FileOutputStream out=null;         try {             in=new FileInputStream(args[0]);             out=new FileOutputStream(args[1]);              int c;             while ((c=in.read())!=-1){                 out.write(c);             }         }         catch (Exception e){             System.out.println(\"Error Copping File\");         }     } }\n",
    "reg_date": "2021-10-12T12:02:21.000Z"
  },
  {
    "id": 1095,
    "keyword": null,
    "link": null,
    "title": " copy to clipboard android studio",
    "description": "ClipboardManager clipboard = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);   ClipData clip = ClipData.newPlainText(label, text);  clipboard.setPrimaryClip(clip);\n",
    "reg_date": "2021-10-12T12:02:21.000Z"
  },
  {
    "id": 1096,
    "keyword": null,
    "link": null,
    "title": " copy to clipboard java",
    "description": "import java.awt.datatransfer.StringSelection; import java.awt.Toolkit; import java.awt.datatransfer.Clipboard;   String myString = \"This text will be copied into clipboard\"; StringSelection stringSelection = new StringSelection(myString); Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard(); clipboard.setContents(stringSelection, null);\n import java.awt.Toolkit; import java.awt.datatransfer.Clipboard; import java.awt.datatransfer.DataFlavor; import java.awt.datatransfer.StringSelection; import java.awt.datatransfer.UnsupportedFlavorException; import java.io.IOException;  public class Main {   public static void main(String[] args) {   }    private void copy() {     Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();     String text = \"value\";     StringSelection selection = new StringSelection(text);     clipboard.setContents(selection, null);   }    private void paste() {     Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();     DataFlavor flavor = DataFlavor.stringFlavor;     if (clipboard.isDataFlavorAvailable(flavor)) {       try {         String text = (String) clipboard.getData(flavor);         System.out.println(text);       } catch (UnsupportedFlavorException e) {         System.out.println(e);       } catch (IOException e) {         System.out.println(e);       }     }   }  } \n",
    "reg_date": "2021-10-12T12:02:21.000Z"
  },
  {
    "id": 1097,
    "keyword": null,
    "link": null,
    "title": " cordova cannot find symbol import com.google.firebase.iid.FirebaseMessagingService;",
    "description": "// override the file: // platforms/android/app/src/main/java/com/adobe/phonegap/push/PushInstanceIDListenerService.java // by this content package com.adobe.phonegap.push;  import android.content.Intent; import android.content.Context; import android.content.SharedPreferences; import android.util.Log;  import com.google.firebase.iid.FirebaseInstanceId; import com.google.firebase.messaging.FirebaseMessagingService;  import org.json.JSONException;  import java.io.IOException;  public class PushInstanceIDListenerService extends FirebaseMessagingService implements PushConstants {     public static final String LOG_TAG = \"Push_InsIdService\";      @Override     public void onNewToken(String token) {         // Get updated InstanceID token.         String refreshedToken = FirebaseInstanceId.getInstance().getToken();         Log.d(LOG_TAG, \"Refreshed token: \" + refreshedToken);         // TODO: Implement this method to send any registration to your app's servers.         //sendRegistrationToServer(refreshedToken);     } }\n",
    "reg_date": "2021-10-12T12:02:21.000Z"
  },
  {
    "id": 1098,
    "keyword": null,
    "link": null,
    "title": " cotangent in java",
    "description": "          strictfp class TrigFun {   public static void main(String[] args) {     double rads, degs, tanA, coTanA;      // Obtain angle in degrees from user     degs = 120d;     // Convert degrees to radian     rads = Math.toRadians(degs);      // Calculate tangent     tanA = Math.tan(rads);     System.out.println(\"Tangent = \" + tanA);      // Calculate cotangent     coTanA = 1.0 / Math.tan(rads);     System.out.println(\"Cotangent = \" + coTanA);      // Calculate arc-tangent     rads = Math.atan(tanA);     degs = Math.toDegrees(rads);     System.out.println(\"Arc tangent: \" + degs);      // Calculate arc-cotangent     rads = Math.atan(1 / coTanA);     degs = Math.toDegrees(rads);     System.out.println(\"Arc cotangent: \" + degs);   } }                                                                     \n",
    "reg_date": "2021-10-12T12:02:21.000Z"
  },
  {
    "id": 1099,
    "keyword": null,
    "link": null,
    "title": " could not find driver (SQL: select * from information schema.tables where table schema = blog and table name = migrations and table type = 'BASE TABLE')",
    "description": "just uncomment ;extension=pdo_mysql.dll in the php.ini file\nif you've installed php and mysql in your linux machine,  php needs php-mysql extention to communicate with mysql.  so make sure you've also installed this extention using:  sudo yum install php-mysql in redhat based machines.  and  sudo apt-get install php-mysql in debian machines.\n",
    "reg_date": "2021-10-12T12:02:21.000Z"
  },
  {
    "id": 1100,
    "keyword": null,
    "link": null,
    "title": " could not find java; set JAVA HOME or ensure java is in PATH",
    "description": "After reading the docs from ElasticSearch, I found that if you're running on Ubuntu or Debian, the package only ships with the OpenJDK because of licensing issues. To fix this Java path problem, I installed the following after installing ElasticSearch (as directed by the docs):  \tsudo add-apt-repository ppa:webupd8team/java \tsudo apt-get update \tsudo apt-get install oracle-java8-installer \tjava -version Then upon running sudo service elasticsearch start everything worked and I had no more Java path issues.\n",
    "reg_date": "2021-10-12T12:02:22.000Z"
  },
  {
    "id": 1101,
    "keyword": null,
    "link": null,
    "title": " count number of even and odd elements in an array in java",
    "description": "// count number of even and odd elements in an array in java import java.util.Scanner; public class CountEvenOddNumbersInArray {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       int arrSize, a, countEven = 0, countOdd = 0;       System.out.println(\"Please enter number of elements of an array: \");       arrSize = sc.nextInt();       int[] arrNumbers = new int[arrSize];       System.out.println(\"Please enter \" + arrSize + \" elements of an array: \");       for(a = 0; a < arrSize; a++)       {          arrNumbers[a] = sc.nextInt();       }       for(a = 0; a < arrNumbers.length; a++)       {          if(arrNumbers[a] % 2 == 0)          {             countEven++;          }          else          {             countOdd++;          }       }       System.out.println(\"Total number of even numbers in an array java: \" + countEven);       System.out.println(\"Total number of odd numbers in an array java: \" + countOdd);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:02:22.000Z"
  },
  {
    "id": 1102,
    "keyword": null,
    "link": null,
    "title": " count occurrences in seven integers using java single dimension arrays",
    "description": "import java.util.Scanner;  public class SevenNumbersCount {      public static int count(int[] arr, int num) {         int count = 0;         for(int i = 0; i < arr.length; ++i) {   // go through all elements in array             if(arr[i] == num) { // if num is found, increase count                 count++;    // increment count             }         }         return count;   // return the count of number of occurrences of num in array     }      public static boolean checkIfElementAlreadyExists(int[] arr, int index) {         for(int i = 0; i < index; ++i) {    // go through all elements in array             if(arr[i] == arr[index]) {  // if item in index already exists in the array                 return true;    // then return true             }         }         return false;   // if element at index does not previously occur, then return false     }      public static void main(String[] args) {         Scanner in = new Scanner(System.in);         int[] arr = new int[7];         System.out.print(\"Enter seven numbers: \");         for(int i = 0; i < arr.length; ++i) {             arr[i] = in.nextInt();  // read 7 numbers into array         }         for(int i = 0; i < arr.length; ++i) {   // go through all elements             if(!checkIfElementAlreadyExists(arr, i)) {  // if this element did not already appear before in the array                 System.out.printf(\"Number %d occurs %d times.\\n\", arr[i], count(arr, arr[i]));  // then print the number and the number of time it occurs in the array             }         }     } }  \npublic static int count(int[] arr, int num) {         int count = 0;         for(int i = 0; i < arr.length; ++i) {   // go through all elements in array             if(arr[i] == num) { // if num is found, increase count                 count++;    // increment count             }         }         return count;   // return the count of number of occurrences of num in array     }      public static boolean checkIfElementAlreadyExists(int[] arr, int index) {         for(int i = 0; i < index; ++i) {    // go through all elements in array             if(arr[i] == arr[index]) {  // if item in index already exists in the array                 return true;    // then return true             }         }         return false;   // if element at index does not previously occur, then return false     }      public static void main(String[] args) {         Scanner in = new Scanner(System.in);         int[] arr = new int[7];         System.out.print(\"Enter seven numbers: \");         for(int i = 0; i < arr.length; ++i) {             arr[i] = in.nextInt();  // read 7 numbers into array         }         for(int i = 0; i < arr.length; ++i) {   // go through all elements             if(!checkIfElementAlreadyExists(arr, i)) {  // if this element did not already appear before in the array                 System.out.printf(\"Number %d occurs %d times.\\n\", arr[i], count(arr, arr[i]));  // then print the number and the number of time it occurs in the array             }         }     } } \n",
    "reg_date": "2021-10-12T12:02:22.000Z"
  },
  {
    "id": 1103,
    "keyword": null,
    "link": null,
    "title": " count occurrences of character in string java 8",
    "description": "String someString = \"elephant\"; long count = someString.chars().filter(ch -> ch == 'e').count(); assertEquals(2, count);   long count2 = someString.codePoints().filter(ch -> ch == 'e').count(); assertEquals(2, count2); \npublic class StringNumberOfOccurenceLetter {      private static int countOccurences(String word, char character){          int count = 0;         for (int i = 0; i < word.length() ; i++) {             if (word.charAt(i)==character){                 count++;             }         }         return count;      }          public static void main(String[] args) {           int count = countOccurences(\"dddssad\", 'a');     }   }\nString line = \"apples.oranges.bananas\"; int count = line.length() - line.replace(\".\", \"\").length(); System.out.println(count);//displays 2\n",
    "reg_date": "2021-10-12T12:02:22.000Z"
  },
  {
    "id": 1104,
    "keyword": null,
    "link": null,
    "title": " count the number of words in a string java",
    "description": " public static void main(String[] args)     {          //return the number of words in a string                  String example = \"This is a good exercise\";                 int length = example.split(\" \").length;                System.out.println(\"The string is \" + length + \" words long.\");                       }\npublic class Frequency    {        public static void main(String[] args) {           String str = \"picture perfect\";           int[] freq = new int[str.length()];           int i, j;                      //Converts given string into character array           char string[] = str.toCharArray();                      for(i = 0; i <str.length(); i++) {               freq[i] = 1;               for(j = i+1; j <str.length(); j++) {                   if(string[i] == string[j]) {                       freq[i]++;                                  //Set string[j] to 0 to avoid printing visited character                       string[j] = '0';                   }               }           }           //Displays the each character and their corresponding frequency           System.out.println(\"Characters and their corresponding frequencies\");           for(i = 0; i <freq.length; i++) {               if(string[i] != ' ' && string[i] != '0')                   System.out.println(string[i] + \"-\" + freq[i]);           }       }   }  \n String name = \"Carmen is a fantastic play\"; //arbitrary sentence                  int numWords = (name.split(\"\\\\s+\")).length; //split string based on whitespace                                                 //split returns array - find legth of array                  System.out.println(numWords);\n",
    "reg_date": "2021-10-12T12:02:22.000Z"
  },
  {
    "id": 1105,
    "keyword": null,
    "link": null,
    "title": " count vowels in a string java",
    "description": "// There are many ways to do it the one i came up with is this:   int count = 0; String sentence = \"My name is DEATHVADER, Hello World!!! XD\"; char[] vowels = {'a', 'e', 'i', 'o', 'u'}; for (char vowel : vowels)    for (char letter : sentence.toLowerCase().toCharArray())      if (letter == vowel) count++; System.out.println(\"Number of vowels in the given sentence is \" + count);  // I have found another easier method if you guyz don't understand this // but this is also easy xD. // here you can see another method: // https://www.tutorialspoint.com/Java-program-to-count-the-number-of-vowels-in-a-given-sentence\n",
    "reg_date": "2021-10-12T12:02:22.000Z"
  },
  {
    "id": 1106,
    "keyword": null,
    "link": null,
    "title": " counter in java",
    "description": "HashMap<String, MutableInteger> efficientCounter = new HashMap<String, MutableInteger>();   for (String a : sArr) { \tMutableInteger initValue = new MutableInteger(1); \tMutableInteger oldValue = efficientCounter.put(a, initValue);   \tif(oldValue != null){ \t\tinitValue.set(oldValue.get() + 1); \t} }\n",
    "reg_date": "2021-10-12T12:02:22.000Z"
  },
  {
    "id": 1107,
    "keyword": null,
    "link": null,
    "title": " counting repeated characters in a string in java",
    "description": " void Findrepeter(){     String s=\"mmababctamantlslmag\";     int distinct = 0 ;      for (int i = 0; i < s.length(); i++) {          for (int j = 0; j < s.length(); j++) {              if(s.charAt(i)==s.charAt(j))             {                 distinct++;              }         }            System.out.println(s.charAt(i)+\"--\"+distinct);         String d=String.valueOf(s.charAt(i)).trim();         s=s.replaceAll(d,\"\");         distinct = 0;      }  }\nimport java.io.*; public class CountChar  {      public static void main(String[] args) throws IOException     {       String ch;       BufferedReader br=new BufferedReader(new InputStreamReader(System.in));       System.out.print(\"Enter the Statement:\");       ch=br.readLine();       int count=0,len=0;         do         {             try           {           char name[]=ch.toCharArray();               len=name.length;               count=0;               for(int j=0;j<len;j++)                {                   if((name[0]==name[j])&&((name[0]>=65&&name[0]<=91)||(name[0]>=97&&name[0]<=123)))                        count++;                }               if(count!=0)                 System.out.println(name[0]+\" \"+count+\" Times\");               ch=ch.replace(\"\"+name[0],\"\");                     }           catch(Exception ex){}         }         while(len!=1);    }  }\n",
    "reg_date": "2021-10-12T12:02:22.000Z"
  },
  {
    "id": 1108,
    "keyword": null,
    "link": null,
    "title": " counting the number of characters in a string java",
    "description": "public static void main(String[] args) { \t\tint wordCount = 0; \t\tString word = \"hill\"; \t\tfor (char letter = 'a'; letter <= 'z'; letter++) { \t\t\tfor (int i = 0; i < word.length(); i++) { \t\t\t\tif (word.charAt(i) == letter) { \t\t\t\t\twordCount++; \t\t\t\t} \t\t\t} \t\t\tif (wordCount > 0) { \t\t\t\tSystem.out.println(letter + \"=\" + wordCount); \t\t\t\twordCount = 0; \t\t\t} \t\t} \t}\n",
    "reg_date": "2021-10-12T12:02:22.000Z"
  },
  {
    "id": 1109,
    "keyword": null,
    "link": null,
    "title": " crear objetos automaticamente java",
    "description": "public ArrayList crearColegio(int numeroAlumnos ) { ArrayList al = new ArrayList();  for ( int i=0; i < numeroAlumnos; i++) { Alumno alumno = new Alumno(); al.add( alumno ); } return al; }\n",
    "reg_date": "2021-10-12T12:02:22.000Z"
  },
  {
    "id": 1110,
    "keyword": null,
    "link": null,
    "title": " create Source from Uri java",
    "description": "// depricated getBitmap(resolver, uri)  public class BitmapResolver {     private final static String TAG = \"BitmapResolver\";      @SuppressWarnings(\"deprecation\")     private static Bitmap getBitmapLegacy(@NonNull ContentResolver contentResolver, @NonNull Uri fileUri){         Bitmap bitmap = null;          try {             bitmap = MediaStore.Images.Media.getBitmap(contentResolver, fileUri);         } catch (IOException e) {             e.printStackTrace();         }          return bitmap;     }      @TargetApi(Build.VERSION_CODES.P)     private static Bitmap getBitmapImageDecoder(@NonNull ContentResolver contentResolver, @NonNull Uri fileUri){         Bitmap bitmap = null;          try {             bitmap = ImageDecoder.decodeBitmap(ImageDecoder.createSource(contentResolver, fileUri));         } catch (IOException e) {             e.printStackTrace();         }          return bitmap;     }      public static Bitmap getBitmap(@NonNull ContentResolver contentResolver, Uri fileUri){         if (fileUri == null){             Log.i(TAG, \"returning null because URI was null\");             return null;         }          if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P){             return getBitmapImageDecoder(contentResolver, fileUri);         } else{             return getBitmapLegacy(contentResolver, fileUri);         }     }    } // https://stackoverflow.com/questions/56651444/deprecated-getbitmap-with-api-29-any-alternative-codes\n",
    "reg_date": "2021-10-12T12:02:22.000Z"
  },
  {
    "id": 1111,
    "keyword": null,
    "link": null,
    "title": " create a JAR file containing the class file",
    "description": "jar cvf jar_name.jar class_you_want_in_jar.class\n",
    "reg_date": "2021-10-12T12:02:23.000Z"
  },
  {
    "id": 1112,
    "keyword": null,
    "link": null,
    "title": " create a list java",
    "description": "import java.util.ArrayList; import java.util.LinkedList; import java.util.List;  class scratch{     public static void main(String[] args) {         List<Integer> aList = new ArrayList<>();         List<Integer> lList = new LinkedList<>();     } }\nList list = Arrays.asList(\"Hello\", \"World!\", \"How\", \"Are\", \"You\"); \n//Creating arraylist example  ArrayList<String> list = new ArrayList<String>();     //Adding objects in arraylist  list.add(\"Mango\");     list.add(\"Banana\");     //Change the element (index,\"new value\") list.set(1,\"Dates\");   //Return the 2nd element, because index starts from 0 System.out.println(\"Returning element: \" + list.get(1)); \n for(int i = 0; i < models.size(); i++) {     System.out.println(models.get(i).getName()); \n",
    "reg_date": "2021-10-12T12:02:23.000Z"
  },
  {
    "id": 1113,
    "keyword": null,
    "link": null,
    "title": " create a min heap in java using priority queue",
    "description": "int arr[]={1,2,1,3,3,5,7};         PriorityQueue<Integer> a=new PriorityQueue<>();         for(int i:arr){             a.add(i);         }         while(!a.isEmpty())             System.out.println(a.poll());\n",
    "reg_date": "2021-10-12T12:02:23.000Z"
  },
  {
    "id": 1114,
    "keyword": null,
    "link": null,
    "title": " create a random char java",
    "description": "import java.util.Random;  public class RandomChar {     public static void main(String[] args) {         Random random = new Random();          char randomizedCharacter = (char) (random.nextInt(26) + 'a');         System.out.println(\"Generated Random Character: \" + randomizedCharacter);      }  } \nimport java.util.*; class randomChar { public static void main(String str[]) { Random r=new Random(); int count=r.nextInt(26); char ch=(char)(count+'a'); if((char)count+'a'==ch) { System.out.println(ch); } } }\n",
    "reg_date": "2021-10-12T12:02:23.000Z"
  },
  {
    "id": 1115,
    "keyword": null,
    "link": null,
    "title": " create a singleton list in java",
    "description": "List<String> list = Collections.singletonList(\"E\"); \n",
    "reg_date": "2021-10-12T12:02:23.000Z"
  },
  {
    "id": 1116,
    "keyword": null,
    "link": null,
    "title": " create an empty array in java",
    "description": "public static void main(String args[]) {     int array[] = new int[4];     int number = 5, i = 0,j = 0;     while (i<4){         array[i]=number;         i=i+1;     }     while (j<4){         System.out.println(array[j]);         j++;     } }\n",
    "reg_date": "2021-10-12T12:02:23.000Z"
  },
  {
    "id": 1117,
    "keyword": null,
    "link": null,
    "title": " create color object java",
    "description": "//Color using RGB Color col = Color(r, g, b); //Color using RGBA Color col = Color(r, g, b, a);  //r, g, b and a can be a float between 0.0 and 1 or  //an int between 0 and 255 //The format must be consistant across all values\n",
    "reg_date": "2021-10-12T12:02:23.000Z"
  },
  {
    "id": 1118,
    "keyword": null,
    "link": null,
    "title": " create connection in jdbc",
    "description": "package com.java2novice.jdbc;   import java.sql.Connection; import java.sql.DriverManager; import java.sql.SQLException; import java.sql.Statement;   public class JdbcConnection {       public static void main(String a[]){                   try {             Class.forName(\"oracle.jdbc.driver.OracleDriver\");             Connection con = DriverManager.                 getConnection(\"jdbc:oracle:thin:@<hostname>:<port num>:<DB name>\"                     ,\"user\",\"password\");             Statement stmt = con.createStatement();             System.out.println(\"Created DB Connection....\");         } catch (ClassNotFoundException e) {             // TODO Auto-generated catch block             e.printStackTrace();         } catch (SQLException e) {             // TODO Auto-generated catch block             e.printStackTrace();         }     } }\nConnection =    Helps our java project connect to database Statement =    Helps to write and execute SQL query ResultSet =    A DataStructure where the data from query result stored +++++++++++++++++++++++++++++++++++++++++++++++++++++++++         After succesfully created the connect next step is STATEMENT  Statement statement = connection.createStatement(); We use createStatement() method to create the statement from our connection. -The result we get from this type of statement can only move from top to bottom, not other way around  Statement statement = connection. createStatement(ResultSet TYPE_SCROLL_INSENSITIVE ,ResultSet CONCUR_READ_ONLY);  -The result we get from this type of statement can freely move between rows  Once we have statement we can run the query and get the result to ResultSet format  \t\timport java.sql.ResultSet;          We use the method executeQuery() to execute our queries  ResultSet result = statement.               executeQuery(\"Select * from employees\");\n",
    "reg_date": "2021-10-12T12:02:23.000Z"
  },
  {
    "id": 1119,
    "keyword": null,
    "link": null,
    "title": " create embeds jda discord",
    "description": "// Create the EmbedBuilder instance EmbedBuilder eb = new EmbedBuilder();  /*     Set the title:     1. Arg: title as string     2. Arg: URL as string or could also be null  */ eb.setTitle(\"Title\", null);  /*     Set the color  */ eb.setColor(Color.red); eb.setColor(new Color(0xF40C0C)); eb.setColor(new Color(255, 0, 54));  /*     Set the text of the Embed:     Arg: text as string  */ eb.setDescription(\"Text\");  /*     Add fields to embed:     1. Arg: title as string     2. Arg: text as string     3. Arg: inline mode true / false  */ eb.addField(\"Title of field\", \"test of field\", false);  /*     Add spacer like field     Arg: inline mode true / false  */ eb.addBlankField(false);  /*     Add embed author:     1. Arg: name as string     2. Arg: url as string (can be null)     3. Arg: icon url as string (can be null)  */ eb.setAuthor(\"name\", null, \"https://github.com/zekroTJA/DiscordBot/blob/master/.websrc/zekroBot_Logo_-_round_small.png\");  /*     Set footer:     1. Arg: text as string     2. icon url as string (can be null)  */ eb.setFooter(\"Text\", \"https://github.com/zekroTJA/DiscordBot/blob/master/.websrc/zekroBot_Logo_-_round_small.png\");  /*     Set image:     Arg: image url as string  */ eb.setImage(\"https://github.com/zekroTJA/DiscordBot/blob/master/.websrc/logo - title.png\");  /*     Set thumbnail image:     Arg: image url as string  */ eb.setThumbnail(\"https://github.com/zekroTJA/DiscordBot/blob/master/.websrc/logo - title.png\");\n",
    "reg_date": "2021-10-12T12:02:24.000Z"
  },
  {
    "id": 1120,
    "keyword": null,
    "link": null,
    "title": " create file android java specific folder",
    "description": "try {         String rootPath = Environment.getExternalStorageDirectory()                 .getAbsolutePath() + \"/MyFolder/\";         File root = new File(rootPath);         if (!root.exists()) {             root.mkdirs();         }         File f = new File(rootPath + \"mttext.txt\");         if (f.exists()) {             f.delete();         }         f.createNewFile();          FileOutputStream out = new FileOutputStream(f);          out.flush();         out.close();     } catch (Exception e) {         e.printStackTrace();     } \n",
    "reg_date": "2021-10-12T12:02:24.000Z"
  },
  {
    "id": 1121,
    "keyword": null,
    "link": null,
    "title": " create instance object java",
    "description": "myCar = new Car();\n",
    "reg_date": "2021-10-12T12:02:24.000Z"
  },
  {
    "id": 1122,
    "keyword": null,
    "link": null,
    "title": " create java windows application",
    "description": "yourFrame yourvariable = new yourFrame(); yourvariable.setVisible(true);\n",
    "reg_date": "2021-10-12T12:02:24.000Z"
  },
  {
    "id": 1123,
    "keyword": null,
    "link": null,
    "title": " create jdbc connection in java",
    "description": "package com.java2novice.jdbc;   import java.sql.Connection; import java.sql.DriverManager; import java.sql.SQLException; import java.sql.Statement;   public class JdbcConnection {       public static void main(String a[]){                   try {             Class.forName(\"oracle.jdbc.driver.OracleDriver\");             Connection con = DriverManager.                 getConnection(\"jdbc:oracle:thin:@<hostname>:<port num>:<DB name>\"                     ,\"user\",\"password\");             Statement stmt = con.createStatement();             System.out.println(\"Created DB Connection....\");         } catch (ClassNotFoundException e) {             // TODO Auto-generated catch block             e.printStackTrace();         } catch (SQLException e) {             // TODO Auto-generated catch block             e.printStackTrace();         }     } }\nConnection =    Helps our java project connect to database Statement =    Helps to write and execute SQL query ResultSet =    A DataStructure where the data from query result stored +++++++++++++++++++++++++++++++++++++++++++++++++++++++++         After succesfully created the connect next step is STATEMENT  Statement statement = connection.createStatement(); We use createStatement() method to create the statement from our connection. -The result we get from this type of statement can only move from top to bottom, not other way around  Statement statement = connection. createStatement(ResultSet TYPE_SCROLL_INSENSITIVE ,ResultSet CONCUR_READ_ONLY);  -The result we get from this type of statement can freely move between rows  Once we have statement we can run the query and get the result to ResultSet format  \t\timport java.sql.ResultSet;          We use the method executeQuery() to execute our queries  ResultSet result = statement.               executeQuery(\"Select * from employees\");\n",
    "reg_date": "2021-10-12T12:02:24.000Z"
  },
  {
    "id": 1124,
    "keyword": null,
    "link": null,
    "title": " create jframe java",
    "description": "import javax.swing.*; import java.awt.FlowLayout; import java.awt.GridBagConstraints; import java.awt.GridBagLayout; import java.awt.Insets; import java.awt.event.*;   public class JFrameExample{           public static void main(String[] args){         // Create frame with title Registration Demo         JFrame frame= new JFrame();          frame.setTitle(\"JFrame Demo\");         frame.pack();         frame.setExtendedState(JFrame.MAXIMIZED_BOTH);         frame.setLocationRelativeTo(null);         frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);         frame.setVisible(true);     } } \npublic JFrame frame = new JFrame();//creating jframe  Class main(){ public static void main(String[] args){   frame.setSize(200,200); //setting size   frame.setVisable(true); //sets visability    frame.setDefaultCloseOperation.(JFrame.EXIT_ON_CLOSE); //allow jframe to close when clicked  }   }\n",
    "reg_date": "2021-10-12T12:02:24.000Z"
  },
  {
    "id": 1125,
    "keyword": null,
    "link": null,
    "title": " create jlabel",
    "description": "JLabel label = new JLabel(\"Click ME\");\n",
    "reg_date": "2021-10-12T12:02:24.000Z"
  },
  {
    "id": 1126,
    "keyword": null,
    "link": null,
    "title": " create map java",
    "description": "Map<String, String> map = new HashMap<>();  for(Entry<String, String> entry:map.entrySet()) {   System.out.println(\"key: \"+entry.getKey()+\" value: \"+entry.getValue()); }\nMap<String, Integer> map = new HashMap<>();\nMap <Integer, Point2D.Double> hm = new HashMap<Integer, Point2D>(); hm.put(1, new Point2D.Double(50, 50));\nMap< String,Integer> hm =                           new HashMap< String,Integer>();         hm.put(\"a\", new Integer(100));         hm.put(\"b\", new Integer(200));         hm.put(\"c\", new Integer(300));         hm.put(\"d\", new Integer(400)); \n/**  * @author Jack Waller <jw309@st-andrews.ac.uk>  * @version 1.1  * @since 2020-03-28  * A implementation of Map.Entry.  */ public final class Pair<K, V> implements Map.Entry<K, V> {      //variables     private final K key;     private V value;      //constructor     public Pair(K key, V value) {         this.key = key;         this.value = value;     }      //methods      /**      * Returns the key.      * @return K      */     @Override     public K getKey() {         return key;     }      /**      * Returns the value.      * @return V      */     @Override     public V getValue() {         return value;     }      /**      * Sets the value, returns the old value      * @param v value to set      * @return V      */     @Override     public V setValue(V v) {         V old = this.value;         this.value = v;         return old;     } }\n",
    "reg_date": "2021-10-12T12:02:24.000Z"
  },
  {
    "id": 1127,
    "keyword": null,
    "link": null,
    "title": " create method setsupportactionbar",
    "description": "import android.app.ActionBar; import android.support.v7.app.AppCompatActivity; import android.os.Bundle; import android.view.Menu; import android.view.MenuItem; import android.support.v7.widget.Toolbar;   public class rutaActivity extends AppCompactActivity {  private Toolbar toolbar; @Override protected void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);     setContentView(R.layout.activity_ruta);      getSupportActionBar().hide();//Ocultar ActivityBar anterior      toolbar = (Toolbar) findViewById(R.id.app_bar);     setSupportActionBar(toolbar); //NO PROBLEM !!!!\n",
    "reg_date": "2021-10-12T12:02:24.000Z"
  },
  {
    "id": 1128,
    "keyword": null,
    "link": null,
    "title": " create notification android",
    "description": "NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(yourContext.getApplicationContext(), \"notify_001\"); Intent ii = new Intent(yourContext.getApplicationContext(), YourMainActivty.class); PendingIntent pendingIntent = PendingIntent.getActivity(yourContext, 0, ii, 0);  NotificationCompat.BigTextStyle bigText = new NotificationCompat.BigTextStyle(); bigText.bigText(notificationsTextDetailMode); //detail mode is the \"expanded\" notification bigText.setBigContentTitle(notificationTitleDetailMode); bigText.setSummaryText(usuallyAppVersionOrNumberOfNotifications); //small text under notification  mBuilder.setContentIntent(pendingIntent); mBuilder.setSmallIcon(R.mipmap.ic_launcher); //notification icon mBuilder.setContentTitle(notificationTitle); //main title mBuilder.setContentText(notificationText); //main text when you \"haven't expanded\" the notification yet mBuilder.setPriority(Notification.PRIORITY_MAX); mBuilder.setStyle(bigText);  NotificationManager mNotificationManager = (NotificationManager) yourContext.getSystemService(Context.NOTIFICATION_SERVICE);  NotificationChannel channel = new NotificationChannel(\"notify_001\",                                                       \"Channel human readable title\",                                                       NotificationManager.IMPORTANCE_DEFAULT); if (mNotificationManager != null) {   mNotificationManager.createNotificationChannel(channel); }  if (mNotificationManager != null) {   mNotificationManager.notify(0, mBuilder.build()); }\npackage com.example.notificationdemo;  import android.app.Activity; import android.app.NotificationManager; import android.app.PendingIntent; import android.content.Context; import android.content.Intent; import android.support.v4.app.NotificationCompat; import android.os.Bundle; import android.view.View; import android.widget.Button;  public class MainActivity extends Activity {    Button b1;    @Override    protected void onCreate(Bundle savedInstanceState) {       super.onCreate(savedInstanceState);       setContentView(R.layout.activity_main);        b1 = (Button)findViewById(R.id.button);       b1.setOnClickListener(new View.OnClickListener() {          @Override          public void onClick(View v) {             addNotification();          }       });    }     private void addNotification() {       NotificationCompat.Builder builder =          new NotificationCompat.Builder(this)          .setSmallIcon(R.drawable.abc)          .setContentTitle(\"Notifications Example\")          .setContentText(\"This is a test notification\");        Intent notificationIntent = new Intent(this, MainActivity.class);       PendingIntent contentIntent = PendingIntent.getActivity(this, 0, notificationIntent,          PendingIntent.FLAG_UPDATE_CURRENT);       builder.setContentIntent(contentIntent);        // Add as notification       NotificationManager manager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);       manager.notify(0, builder.build());    } }\n",
    "reg_date": "2021-10-12T12:02:25.000Z"
  },
  {
    "id": 1129,
    "keyword": null,
    "link": null,
    "title": " create statement in jdbc",
    "description": "Connection =    Helps our java project connect to database Statement =    Helps to write and execute SQL query ResultSet =    A DataStructure where the data from query result stored +++++++++++++++++++++++++++++++++++++++++++++++++++++++++         After succesfully created the connect next step is STATEMENT  Statement statement = connection.createStatement(); We use createStatement() method to create the statement from our connection. -The result we get from this type of statement can only move from top to bottom, not other way around  Statement statement = connection. createStatement(ResultSet TYPE_SCROLL_INSENSITIVE ,ResultSet CONCUR_READ_ONLY);  -The result we get from this type of statement can freely move between rows  Once we have statement we can run the query and get the result to ResultSet format  \t\timport java.sql.ResultSet;          We use the method executeQuery() to execute our queries  ResultSet result = statement.               executeQuery(\"Select * from employees\");\n",
    "reg_date": "2021-10-12T12:02:25.000Z"
  },
  {
    "id": 1130,
    "keyword": null,
    "link": null,
    "title": " create stream from array java",
    "description": "// import java.util.Arrays; // import java.util.stream.Stream;  String[] array = {\"a\", \"b\", \"c\", \"d\", \"e\"};  //Arrays.stream Stream<String> stream1 = Arrays.stream(array); stream1.forEach(x -> System.out.println(x));  //Stream.of Stream<String> stream2 = Stream.of(array); stream2.forEach(x -> System.out.println(x)); \n// creating stream from array int[] arr = {1, 2, 3, 4};  Arrays.stream(arr); Stream.of(arr); // same as above\n",
    "reg_date": "2021-10-12T12:02:25.000Z"
  },
  {
    "id": 1131,
    "keyword": null,
    "link": null,
    "title": " creating a 2d arraylist in java",
    "description": "int vertexCount = 3; ArrayList<ArrayList<Integer>> graph = new ArrayList<>(vertexCount); //Next, we'll initialize each element of ArrayList with another ArrayList:  for(int i=0; i < vertexCount; i++) {     graph.add(new ArrayList()); }\nList<List<String>> listOfLists = new ArrayList<List<String>>(size);  for(int i=0; i<size; i++) { \tlistOfLists.add(new ArrayList<String>()); }\nArrayList<ArrayList<Object>> a = new ArrayList<ArrayList<Object>>();\n",
    "reg_date": "2021-10-12T12:02:25.000Z"
  },
  {
    "id": 1132,
    "keyword": null,
    "link": null,
    "title": " creating array java",
    "description": "int[] array = new int[/*size*/]; // Works for double, char, etc.\nint[] intArray = new int[]{ 1,2,3,4,5,6,7,8,9,10 }\nint intArray[];    //declaring array intArray = new int[20];  // allocating memory to array //OR int[] intArray = new int[20]; // combining both statements in one\nint[] array1 = new int[5]; //int array length 5 String[] array2 = new String[5] //String array length 5 double[] array3 = new double[5] // Double array length 5 \n",
    "reg_date": "2021-10-12T12:02:25.000Z"
  },
  {
    "id": 1133,
    "keyword": null,
    "link": null,
    "title": " creating random color in java",
    "description": "Random rand = new Random();     // Java 'Color' class takes 3 floats, from 0 to 1.     float r = rand.nextFloat();     float g = rand.nextFloat();     float b = rand.nextFloat();     Color randomColor = new Color(r, g, b);\n",
    "reg_date": "2021-10-12T12:02:25.000Z"
  },
  {
    "id": 1134,
    "keyword": null,
    "link": null,
    "title": " css svg data uri",
    "description": ".bg {   background: url('data:image/svg+xml;utf8,<svg ...> ... </svg>'); }\n",
    "reg_date": "2021-10-12T12:02:25.000Z"
  },
  {
    "id": 1135,
    "keyword": null,
    "link": null,
    "title": " current app version check in android",
    "description": "String versionName = context.getPackageManager()     .getPackageInfo(context.getPackageName(), 0).versionName;\nPackageManager manager = this.getPackageManager(); PackageInfo info = manager.getPackageInfo(this.getPackageName(), PackageManager.GET_ACTIVITIES); Toast.makeText(this,      \"PackageName = \" + info.packageName + \"\\nVersionCode = \"        + info.versionCode + \"\\nVersionName = \"        + info.versionName + \"\\nPermissions = \" + info.permissions, Toast.LENGTH_SHORT).show();\nprivate String getCurrentVersion(){ PackageManager pm = this.getPackageManager(); PackageInfo pInfo = null;          try {             pInfo =  pm.getPackageInfo(this.getPackageName(),0);          } catch (PackageManager.NameNotFoundException e1) {             e1.printStackTrace();         }         String currentVersion = pInfo.versionName;          return currentVersion;     }\n",
    "reg_date": "2021-10-12T12:02:25.000Z"
  },
  {
    "id": 1136,
    "keyword": null,
    "link": null,
    "title": " dagger dependency maven dependency",
    "description": "// https://mvnrepository.com/artifact/com.google.dagger/dagger compile group: 'com.google.dagger', name: 'dagger', version: '2.0' \n",
    "reg_date": "2021-10-12T12:02:25.000Z"
  },
  {
    "id": 1137,
    "keyword": null,
    "link": null,
    "title": " dagger kapt dependency and plugin",
    "description": "#Plugin apply plugin: 'kotlin-kapt'  #dependencies implementation 'com.google.dagger:dagger:2.11' kapt 'com.google.dagger:dagger-compiler:2.11'  #Plugin for android apply plugin: 'com.android.application' apply plugin: 'kotlin-android'  #dependencies provided 'javax.annotation:jsr250-api:1.0'\n",
    "reg_date": "2021-10-12T12:02:25.000Z"
  },
  {
    "id": 1138,
    "keyword": null,
    "link": null,
    "title": " database connection",
    "description": "<?php $servername = \"localhost\"; $username = \"username\"; $password = \"password\"; $dbname = \"myDB\";  // Create connection $conn= mysqli_connect($servername,$username,$password,$dbname); // Check connection if (!$conn) {   die(\"Connection failed: \" . mysqli_connect_error()); } echo \"Connected Successfully.\"; ?>\n$servername = \"localhost\"; $username = \"username\"; $password = \"password\";  // Create connection $conn = new mysqli($servername, $username, $password);  // Check connection if ($conn->connect_error) {     die(\"Connection failed: \" . $conn->connect_error); } echo \"Connected successfully\";   Simplified  $conn = mysqli_connect('localhost', 'username', 'password'); $database = mysqli_select_db($conn, 'database');\nI USE JDCB I use CONNECTION database to make connection I create STATEMENT than I use statement to create query  And run the query and get the RESULT SET   Connection = import java.sql.Connection; Driver manager = import java.sql.DriverManager; Connection connection = DriverManager.getConnection(url, userName, passWord);  Connection String Syntax: jdbc:DataBaseType\"subprotocal:Host:port:SID  After succesfully created the connect next step is STATEMENT  import java.sql.Statement; Statement statement = connection.createStatement();  -We use createStatement() method to create the statement from our connection. -The result we get from this type of statement can only move from top to bottom, not other way around  Once we have statement we can run the query and get the result to ResultSet format  \t\timport java.sql.ResultSet;          We use the method executeQuery() to execute our queries  ResultSet result = statement.executeQuery(\"Select * from employees\");\nConnection =    Helps our java project connect to database Statement =    Helps to write and execute SQL query ResultSet =    A DataStructure where the data from query result stored +++++++++++++++++++++++++++++++++++++++++++++++++++++++++         After succesfully created the connect next step is STATEMENT  Statement statement = connection.createStatement(); We use createStatement() method to create the statement from our connection. -The result we get from this type of statement can only move from top to bottom, not other way around  Statement statement = connection. createStatement(ResultSet TYPE_SCROLL_INSENSITIVE ,ResultSet CONCUR_READ_ONLY);  -The result we get from this type of statement can freely move between rows  Once we have statement we can run the query and get the result to ResultSet format  \t\timport java.sql.ResultSet;          We use the method executeQuery() to execute our queries  ResultSet result = statement.               executeQuery(\"Select * from employees\");\n",
    "reg_date": "2021-10-12T12:02:26.000Z"
  },
  {
    "id": 1139,
    "keyword": null,
    "link": null,
    "title": " database interface",
    "description": "Connection =    Helps our java project connect to database Statement =    Helps to write and execute SQL query ResultSet =    A DataStructure where the data from query result stored +++++++++++++++++++++++++++++++++++++++++++++++++++++++++         After succesfully created the connect next step is STATEMENT  Statement statement = connection.createStatement(); We use createStatement() method to create the statement from our connection. -The result we get from this type of statement can only move from top to bottom, not other way around  Statement statement = connection. createStatement(ResultSet TYPE_SCROLL_INSENSITIVE ,ResultSet CONCUR_READ_ONLY);  -The result we get from this type of statement can freely move between rows  Once we have statement we can run the query and get the result to ResultSet format  \t\timport java.sql.ResultSet;          We use the method executeQuery() to execute our queries  ResultSet result = statement.               executeQuery(\"Select * from employees\");\n",
    "reg_date": "2021-10-12T12:02:26.000Z"
  },
  {
    "id": 1140,
    "keyword": null,
    "link": null,
    "title": " databinding in android",
    "description": "Step 1 : Enable dataninding in build.gradle(app)  android{ ...   buildFeatures{         dataBinding true     } }  or  android { ...     dataBinding {        enabled true     } }  Step 2 : Add kapt dependency and apply kapt plugin dependencies { \t... \tkapt \"com.android.databinding:compiler:3.1.4\" (use the version suitable      for you) }  and  plugins { \t...     id 'kotlin-kapt' }  or  apply plugin: 'kotlin-kapt'  step 3 : Convert the fragment or activity to databinding form by adding  <layout> tag and move the namespaces to the <layout> tag as following  <layout xmlns:android=\"http://schemas.android.com/apk/res/android\"     xmlns:app=\"http://schemas.android.com/apk/res-auto\"     xmlns:tools=\"http://schemas.android.com/tools\">           <data>      </data>     ... </layout>  step 4 : remove setContentView(R.layout.activity) and add the following line in your fragment or activity class    val binding:ActivityMainBinding = DataBindingUtil \t\t\t.setContentView(this,R.layout.activity)     \nbuildFeatures {         dataBinding true     }\n",
    "reg_date": "2021-10-12T12:02:26.000Z"
  },
  {
    "id": 1141,
    "keyword": null,
    "link": null,
    "title": " date difference in minutes java",
    "description": "long diff = d2.getTime() - d1.getTime();//as given  long seconds = TimeUnit.MILLISECONDS.toSeconds(diff); long minutes = TimeUnit.MILLISECONDS.toMinutes(diff);\n",
    "reg_date": "2021-10-12T12:02:26.000Z"
  },
  {
    "id": 1142,
    "keyword": null,
    "link": null,
    "title": " date format in java",
    "description": "String pattern = \"yyyy-MM-dd\"; SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);  String date = simpleDateFormat.format(new Date()); System.out.println(date); \nString pattern = \"yyyy-MM-dd\"; SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);  Date date = simpleDateFormat.parse(\"2018-09-09\"); \nString pattern = \"EEEEE dd MMMMM yyyy HH:mm:ss.SSSZ\"; SimpleDateFormat simpleDateFormat =         new SimpleDateFormat(pattern, new Locale(\"da\", \"DK\"));  String date = simpleDateFormat.format(new Date()); System.out.println(date); \nLocale locale = new Locale(\"en\", \"UK\"); DateFormatSymbols dateFormatSymbols = new DateFormatSymbols(locale); dateFormatSymbols.setWeekdays(new String[]{         \"Unused\",         \"Sad Sunday\",         \"Manic Monday\",         \"Thriving Tuesday\",         \"Wet Wednesday\",         \"Total Thursday\",         \"Fat Friday\",         \"Super Saturday\", });  String pattern = \"EEEEE MMMMM yyyy\"; SimpleDateFormat simpleDateFormat =         new SimpleDateFormat(pattern, dateFormatSymbols);  String date = simpleDateFormat.format(new Date()); System.out.println(date); \nDateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");  try {     LocalDate date = formatter.parse(text, LocalDate::from); } catch (DateTimeParseException e) {     // Thrown if text could not be parsed in the specified format } \n",
    "reg_date": "2021-10-12T12:02:26.000Z"
  },
  {
    "id": 1143,
    "keyword": null,
    "link": null,
    "title": " date to localdate",
    "description": "dateToConvert.toInstant()       .atZone(ZoneId.systemDefault())       .toLocalDate();\nimport java.time.LocalDate; import java.time.LocalDateTime;   public class Main {     public static void main(String[] args) {           LocalDateTime localDateTime = LocalDateTime.now();                   LocalDate localDate = localDateTime.toLocalDate();                   System.out.println(localDate);     } } \npublic LocalDate convertToLocalDateViaInstant(Date dateToConvert) {     return dateToConvert.toInstant()       .atZone(ZoneId.systemDefault())       .toLocalDate(); }\n",
    "reg_date": "2021-10-12T12:02:26.000Z"
  },
  {
    "id": 1144,
    "keyword": null,
    "link": null,
    "title": " date to milliseconds java",
    "description": "public String getCurrentTimeStamp() {     return new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss.SSS\").format(new Date()); }\nimport java.time.LocalDateTime; import java.time.ZoneId; import java.time.format.DateTimeFormatter; import java.text.DateFormat; import java.text.SimpleDateFormat; import java.util.*;  public class HelloWorld{       public static void main(String []args){  \t\tString myDate = \"2020-02-26 03:57:35\"; \t\tLocalDateTime localDateTime = LocalDateTime.parse(myDate, \t\t    DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\") ); \t\t     \t\t    long millis = localDateTime \t\t    .atZone(ZoneId.of(\"America/Chicago\")) //optional \t\t    .toInstant().toEpochMilli();      \t\tSystem.out.println(millis);      } }\n",
    "reg_date": "2021-10-12T12:02:26.000Z"
  },
  {
    "id": 1145,
    "keyword": null,
    "link": null,
    "title": " date to string java",
    "description": "    Date date = Calendar.getInstance().getTime();       DateFormat dateFormat = new SimpleDateFormat(\"yyyy-mm-dd hh:mm:ss\");       String strDate = dateFormat.format(date);  \n// java convert date to string import java.util.Date; import java.text.SimpleDateFormat; public class DateToStringDemo {    public static void main(String[] args)    {       Date dt = new Date();       SimpleDateFormat sdf = new SimpleDateFormat(\"MM/dd/yyyy\");       String strDate = sdf.format(dt);       System.out.println(\"Date format - MM/dd/yyyy to string is : \" + strDate);       sdf = new SimpleDateFormat(\"dd-M-yyyy hh:mm:ss\");       strDate = sdf.format(dt);       System.out.println(\"Date format - dd-M-yyyy hh:mm:ss to string is : \" + strDate);       sdf = new SimpleDateFormat(\"dd MMMM yyyy\");       strDate = sdf.format(dt);       System.out.println(\"Date format - dd MMMM yyyy to string is : \" + strDate);       sdf = new SimpleDateFormat(\"dd MMMM yyyy zzzz\");       strDate = sdf.format(dt);       System.out.println(\"Date format - dd MMMM yyyy zzzz to string is : \" + strDate);       sdf = new SimpleDateFormat(\"E, dd MMM yyyy HH:mm:ss z\");       strDate = sdf.format(dt);       System.out.println(\"Date format - E, dd MMM yyyy HH:mm:ss z to string is : \" + strDate);    } }\nFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\"); String s = formatter.format(date);\nSimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");   try {       Date date = new Date();       String dateTime = dateFormat.format(date);     System.out.println(\"Current Date Time : \" + dateTime);  } catch (ParseException e) {     e.printStackTrace();   } \n",
    "reg_date": "2021-10-12T12:02:26.000Z"
  },
  {
    "id": 1146,
    "keyword": null,
    "link": null,
    "title": " debounec in javavscript",
    "description": "<script> var button = document.getElementById(\"debounce\"); const debounce = (func, delay) => {     let debounceTimer     return function() {         const context = this         const args = arguments             clearTimeout(debounceTimer)                 debounceTimer             = setTimeout(() => func.apply(context, args), delay)     } }  button.addEventListener('click', debounce(function() {         alert(\"Hello\\nNo matter how many times you\" +             \"click the debounce button, I get \" +             \"executed once every 3 seconds!!\")                         }, 3000)); </script>\n",
    "reg_date": "2021-10-12T12:02:26.000Z"
  },
  {
    "id": 1147,
    "keyword": null,
    "link": null,
    "title": " debug keystore",
    "description": "$ keytool -list -v -keystore debug.keystore -alias androiddebugkey -storepass android -keypass android \nkeytool -genkey -v -keystore ~/.android/debug.keystore -storepass android -alias androiddebugkey -keypass android -dname \"CN=Android Debug,O=Android,C=US\"\n",
    "reg_date": "2021-10-12T12:02:26.000Z"
  },
  {
    "id": 1148,
    "keyword": null,
    "link": null,
    "title": " decimal up to 6 places in java",
    "description": "double num = 1.34567; System.out.format(\"%.4f\", num);\n",
    "reg_date": "2021-10-12T12:02:26.000Z"
  },
  {
    "id": 1149,
    "keyword": null,
    "link": null,
    "title": " declaração de matriz em java",
    "description": "// apenas declarando int matriz1[][] = new int[2][4]; // matriz com 2 linhas X 4 colunas  // declarando e inicializando int matriz2[][] = { {1, 2, 3}, {4, 5, 6}, {7, 8, 9} };\n",
    "reg_date": "2021-10-12T12:02:27.000Z"
  },
  {
    "id": 1150,
    "keyword": null,
    "link": null,
    "title": " declaration of list in java",
    "description": "ArrayList<String> list=new ArrayList<String>();//Creating arraylist           list.add(\"Mango\");//Adding object in arraylist           list.add(\"Apple\");           list.add(\"Banana\");           list.add(\"Grapes\");           //Printing the arraylist object          System.out.println(list);  \n",
    "reg_date": "2021-10-12T12:02:27.000Z"
  },
  {
    "id": 1151,
    "keyword": null,
    "link": null,
    "title": " declare String in java",
    "description": "String newString = \"Hello World\";\nString stringName = \"your string content\";\n//In Javascript, a string is declared using double quotes \"\". It is made up by character values. //For eg: string = \"hello\".\n",
    "reg_date": "2021-10-12T12:02:27.000Z"
  },
  {
    "id": 1152,
    "keyword": null,
    "link": null,
    "title": " declare a hashmap in java",
    "description": "Map<String, String> myMap = new HashMap<String, String>() {{         put(\"a\", \"b\");         put(\"c\", \"d\");     }};\n//remember to first import java.util.*; first  //you can swap out string or integer for other data types Map<String, Integer> d = new HashMap<>(); \n   HashMap<Integer,String> map=new HashMap<Integer,String>();//Creating HashMap     \nHashMap<Integer,String> map=new HashMap<Integer,String>();//key is integer, value is String\n",
    "reg_date": "2021-10-12T12:02:27.000Z"
  },
  {
    "id": 1153,
    "keyword": null,
    "link": null,
    "title": " declare array java inline",
    "description": "new String[]{\"blah\", \"hey\", \"yo\"};\nString[] strs = {\"blah\", \"hey\", \"yo\"};\n",
    "reg_date": "2021-10-12T12:02:27.000Z"
  },
  {
    "id": 1154,
    "keyword": null,
    "link": null,
    "title": " declare array with values java",
    "description": "int intArray[];    //declaring array intArray = new int[20];  // allocating memory to array //OR int[] intArray = new int[20]; // combining both statements in one\nint[] array = new int[/*size*/]; // Works for double, char, etc.\nint[] myIntArray = new int[3]; int[] myIntArray = {1, 2, 3}; int[] myIntArray = new int[]{1, 2, 3};\n//Given values must match array type int[] myIntArray = {1, 2, 3}; \nint[] arr = new int[n];\n",
    "reg_date": "2021-10-12T12:02:27.000Z"
  },
  {
    "id": 1155,
    "keyword": null,
    "link": null,
    "title": " declare bufferedreader java",
    "description": "import java.io.BufferedReader; // BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(reader.readLine());\nclass Main { \tpublic static void main (String[] args) throws IOException{                        \t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in)); \t\tString[] str = br.readLine().split(\" \");      // 6 2 \t\tString[] input = br.readLine().split(\" \");   // 1 2 3 4 5 6   \t\tint n = Integer.parseInt(str[0]);  // 6 \t\tint k = Integer.parseInt(str[1]);  // 2  \t\t       \tint [] arr = new int [n]; \t\t       \tfor(int i=0; i<n; i++)  \t\t{          arr[i] = Integer.parseInt(input[i]);  // 1 2 3 4 5 6         } \t   \t   \t} } \nBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n",
    "reg_date": "2021-10-12T12:02:27.000Z"
  },
  {
    "id": 1156,
    "keyword": null,
    "link": null,
    "title": " declare function in java",
    "description": "package com.company;  public class Main {     static void one(){ // youCanPutWhatEverNameYouLikeInThePlaceOf\"One\"         System.out.println(\"HELLO\");     }     public static void main(String[] args) {         one(); //theTerminalShouldSay\"HELLO\"     } } \npublic class Main {   public static void main(String args[]) {     SayHi();          int sum = AddNums(5, 6);     System.out.println(sum);   }      public static void SayHi() { //This method has no return value     System.out.println(\"Hi!\");   }      public static int AddNums(int a, int b) { //This method has a return value     return a + b; }\npublic class Main {     static void function(){         System.out.println(\"I am a function!\");     } \tpublic static void main(String[] args) { \t\tfunction(); \t} }\n//declare a function like this: void function(int parameter1) { \t//function body } //call the function like this: function(1);\n  static void myMethod() {     //LINES OF CODE   }\npublic int addNum(int num1, int num2) {   total = num1 + num2;   System.out.println(\"Total: \" + total); }\n",
    "reg_date": "2021-10-12T12:02:27.000Z"
  },
  {
    "id": 1157,
    "keyword": null,
    "link": null,
    "title": " declare hashmap java",
    "description": "Map<String, String> myMap = new HashMap<String, String>() {{         put(\"a\", \"b\");         put(\"c\", \"d\");     }};\n// Import the HashMap class import java.util.HashMap;  \t// First Example     // Create a HashMap object called capitalCities     HashMap<String, String> capitalCities = new HashMap<String, String>();      // Add keys and values (Country, City)     \tcapitalCities.put(\"England\", \"London\");     \tcapitalCities.put(\"Germany\", \"Berlin\");     \tcapitalCities.put(\"Norway\", \"Oslo\");     \tcapitalCities.put(\"USA\", \"Washington DC\");     \tSystem.out.println(capitalCities);  \t//Second Example \t// Create a HashMap object called stGrade \tMap<String, Integer> stGrade = new HashMap<String, Integer>();   \t// Insert elements         \tstGrade.put(\"aaron\", new Integer(90));         \tstGrade.put(\"isaac\", new Integer(100));         \tstGrade.put(\"john\", new Integer(35));         \tstGrade.put(\"mohammad\", new Integer(100));   \t// Get value \t   \tstGrade.get(\"mohammad\"); \t// returns 100 \t\tstGrade.get(\"aaron\"); \t\t// returns 90 \t\tstGrade.get(\"john\");\t \t// returns 35 \t\tstGrade.get(\"isaac\"); \t\t// returns 100 \t\t\n//remember to first import java.util.*; first  //you can swap out string or integer for other data types Map<String, Integer> d = new HashMap<>(); \n   HashMap<Integer,String> map=new HashMap<Integer,String>();//Creating HashMap     \nHashMap<Integer,String> map=new HashMap<Integer,String>();//key is integer, value is String\n",
    "reg_date": "2021-10-12T12:02:27.000Z"
  },
  {
    "id": 1158,
    "keyword": null,
    "link": null,
    "title": " declare matrix in java",
    "description": "int[][] multi = new int[5][]; multi[0] = new int[10]; multi[1] = new int[10]; multi[2] = new int[10]; multi[3] = new int[10]; multi[4] = new int[10]; \n int[][] arr = new int[m][n]; \n",
    "reg_date": "2021-10-12T12:02:27.000Z"
  },
  {
    "id": 1159,
    "keyword": null,
    "link": null,
    "title": " declare variables java",
    "description": "/* Depending on what variables you want to declare */ String hello = \"hello\"; //characters short one = 12;//shorter integers int two = 2000; //complete integer up too 32 bits long number = 2000000; //complete integer up to 64 bits float decimal = 1.512 //up to 7 decimal digits double million = 1.387892847395 //up tp 16 decmial digits Bool condition = true; // true or false char a = \"a\"; // unicode character\njava decleration  float simpleInterest; //Declaring float variable\n/* ##\tVariable - Container which holds the value while the Java program is executed.  - Assigned with a data type.  - Name of memory location.   ##\tThere are three types of variables in java:  1) Local variable  2) Static (or class) variable  3) Instance variable */\ncommand for building docker  char var = 'h'; // Declaring and Initializing character variable\nint number = 10;\n",
    "reg_date": "2021-10-12T12:02:28.000Z"
  },
  {
    "id": 1160,
    "keyword": null,
    "link": null,
    "title": " declaring collection java",
    "description": "import java.util.Collection; import java.util.ArrayList; Collection<Integer> fibonacci = new Arraylist<Integer>();\n List<String> list = Arrays.asList(\"Lars\", \"Simon\");\n",
    "reg_date": "2021-10-12T12:02:28.000Z"
  },
  {
    "id": 1161,
    "keyword": null,
    "link": null,
    "title": " decomposer chaine de caractère java",
    "description": "// Decomposer aStr avec le delimiteur \":\" String[] tabAStr = aStr.split(\":\");\n",
    "reg_date": "2021-10-12T12:02:28.000Z"
  },
  {
    "id": 1162,
    "keyword": null,
    "link": null,
    "title": " default argument in java",
    "description": "Short answer: No.  Fortunately, you can simulate them.    -  use method overloading -  allow nulls as an input -  declare a method with Java Varargs  To know how to do those, check :  \thttp://dolszewski.com/java/java-default-parameters/\n",
    "reg_date": "2021-10-12T12:02:28.000Z"
  },
  {
    "id": 1163,
    "keyword": null,
    "link": null,
    "title": " default boolean value java",
    "description": "Default values for variable types:  Object = null int, double, long, (etc) = 0 boolean = false char = '\\u0000'\nThe default value for a boolean is false.\n",
    "reg_date": "2021-10-12T12:02:28.000Z"
  },
  {
    "id": 1164,
    "keyword": null,
    "link": null,
    "title": " default method in java",
    "description": "public interface SomeInterface(){ \tdefault void test(){     \t//this will be done when the method is called by default     } } public class SomeInterfaceImpl implements SomeInterface{ \t//has test method from SomeInterface, can be overwritten } public class SomeClass{ \tpublic void test(){     \t//do something else     } } public class SomeOtherClass extends SomeClass implements SomeInterface{ \t//uses the test method from SomeClass } \n",
    "reg_date": "2021-10-12T12:02:28.000Z"
  },
  {
    "id": 1165,
    "keyword": null,
    "link": null,
    "title": " default value boolean array java",
    "description": "// The default value of booleans in a boolean array is false  boolean[] boolArray = new boolean[5];\nimport java.util.Arrays; public class BooleanArrayTest {    public static void main(String[] args) {       Boolean[] boolArray = new Boolean[5]; // initialize a boolean array       for(int i = 0; i < boolArray.length; i++) {          System.out.println(boolArray[i]);       }       Arrays.fill(boolArray, Boolean.FALSE);       // all the values will be false       for(int i = 0; i < boolArray.length; i++) {          System.out.println(boolArray[i]);       }       Arrays.fill(boolArray, Boolean.TRUE);       // all the values will be true       for (int i = 0; i < boolArray.length; i++) {          System.out.println(boolArray[i]);       }    } }\n",
    "reg_date": "2021-10-12T12:02:28.000Z"
  },
  {
    "id": 1166,
    "keyword": null,
    "link": null,
    "title": " default values primitive types java",
    "description": "boolean\t\tfalse\t\t1 bit char\t\t'\\u0000'\t2 byte byte\t\t0\t\t\t1 byte short\t\t0\t\t\t2 byte int\t\t\t0\t\t\t4 byte long\t\t0L\t\t\t8 byte float\t\t0.0f\t\t4 byte double\t\t0.0d\t\t8 byte\n",
    "reg_date": "2021-10-12T12:02:28.000Z"
  },
  {
    "id": 1167,
    "keyword": null,
    "link": null,
    "title": " define a custom interface jav",
    "description": "// Assume we have the simple interface: interface Appendable { \tvoid append(string content); } // We can implement it like that: class SimplePrinter implements Appendable {  \tpublic void append(string content) {    \t\tSystem.out.println(content);      } } // ... and maybe like that: class FileWriter implements Appendable {  \tpublic void append(string content) {    \t\t// Appends content into a file      } } // Both classes are Appendable.\ninterface methods{  public static hey();  }  class scratch implements methods{   // Required to implement all methods declared in an interface    // Or else the class becomes abstract   public static hey(){    System.out.println(\"Hey\");    } }\n",
    "reg_date": "2021-10-12T12:02:28.000Z"
  },
  {
    "id": 1168,
    "keyword": null,
    "link": null,
    "title": " define an array of size n in java",
    "description": "int[] myIntArray = new int[3]; int[] myIntArray = {1, 2, 3}; int[] myIntArray = new int[]{1, 2, 3};  // Since Java 8. Doc of IntStream: https://docs.oracle.com/javase/8/docs/api/java/util/stream/IntStream.html  int [] myIntArray = IntStream.range(0, 100).toArray(); // From 0 to 99 int [] myIntArray = IntStream.rangeClosed(0, 100).toArray(); // From 0 to 100 int [] myIntArray = IntStream.of(12,25,36,85,28,96,47).toArray(); // The order is preserved. int [] myIntArray = IntStream.of(12,25,36,85,28,96,47).sorted().toArray(); // Sort \n",
    "reg_date": "2021-10-12T12:02:28.000Z"
  },
  {
    "id": 1169,
    "keyword": null,
    "link": null,
    "title": " define more dimensional array of type double in java",
    "description": "int[][] multiples = new int[4][2];     // 2D integer array with 4 rows                                            and 2 columns String[][] cities = new String[3][3];  // 2D String array with 3 rows                                            and 3 columns\n",
    "reg_date": "2021-10-12T12:02:28.000Z"
  },
  {
    "id": 1170,
    "keyword": null,
    "link": null,
    "title": " degrees to radians",
    "description": "radians = degrees * pi / 180;\ndouble radians = Math.toRadians(degrees);\n// Math is in the System namespace. double radians = degrees * Math.PI / 180;\n// Math is in the System namespace. double degrees = radians * 180 / Math.PI;\n",
    "reg_date": "2021-10-12T12:02:29.000Z"
  },
  {
    "id": 1171,
    "keyword": null,
    "link": null,
    "title": " delay a function call in java",
    "description": "Syntax : ========================================================= \tThread.sleep(1000); // 1000 milliseconds..          | ========================================================= int i=0; for(;;){ \tThread.sleep(2000); // set time delay to 2 seconds..    \tSystem.out.println(i++); // output : every output will display after 2 seconds..   \t }\nnew java.util.Timer().schedule(          new java.util.TimerTask() {             @Override             public void run() {                 // your code here             }         },          5000  );\n",
    "reg_date": "2021-10-12T12:02:29.000Z"
  },
  {
    "id": 1172,
    "keyword": null,
    "link": null,
    "title": " delay a method in android",
    "description": "final Handler handler = new Handler(Looper.getMainLooper());     handler.postDelayed(new Runnable() {       @Override       public void run() {         //Do something after 100ms       }     }, 100);\n",
    "reg_date": "2021-10-12T12:02:29.000Z"
  },
  {
    "id": 1173,
    "keyword": null,
    "link": null,
    "title": " delete ending part of the string java",
    "description": "//To delete starting from \"opened\" String str =\"13 opened by someone\";  String result = str.substring(0,str.lastIndexOf(\" opened\"));\n// Works only if you have a certain character at which you want to cut String text = \"Image.png\";  String[] cutText = text.split(\"\\\\.\");  // cutText[0] has value \"Image\" // cutText[1] has value \"png\"\n",
    "reg_date": "2021-10-12T12:02:29.000Z"
  },
  {
    "id": 1174,
    "keyword": null,
    "link": null,
    "title": " delete object java",
    "description": "Object a = new Object();a = null;// after this,if there is no reference to the object, // it will be deleted by the garbage collector\n",
    "reg_date": "2021-10-12T12:02:29.000Z"
  },
  {
    "id": 1175,
    "keyword": null,
    "link": null,
    "title": " demo java file",
    "description": "// importing the File class import java.io.File;  class Main {   public static void main(String[] args) {      // create a file object for the current location     File file = new File(\"newFile.txt\");      try {        // trying to create a file based on the object       boolean value = file.createNewFile();       if (value) {         System.out.println(\"The new file is created.\");       }       else {         System.out.println(\"The file already exists.\");       }     }     catch(Exception e) {       e.getStackTrace();     }   } } \n",
    "reg_date": "2021-10-12T12:02:29.000Z"
  },
  {
    "id": 1176,
    "keyword": null,
    "link": null,
    "title": " dependency for spring security",
    "description": "\t\t<dependency> \t\t\t<groupId>org.springframework.boot</groupId> \t\t\t<artifactId>spring-boot-starter-security</artifactId> \t\t</dependency> \t\t<dependency> \t\t\t<groupId>org.springframework.security</groupId> \t\t\t<artifactId>spring-security-test</artifactId> \t\t\t<scope>test</scope> \t\t</dependency>\n",
    "reg_date": "2021-10-12T12:02:29.000Z"
  },
  {
    "id": 1177,
    "keyword": null,
    "link": null,
    "title": " destory fragment",
    "description": "getSupportFragmentManager().beginTransaction().remove(yourFragment).commitAllowingStateLoss(); \n",
    "reg_date": "2021-10-12T12:02:29.000Z"
  },
  {
    "id": 1178,
    "keyword": null,
    "link": null,
    "title": " dexter android",
    "description": "dependencies{     implementation 'com.karumi:dexter:6.2.2' }\n",
    "reg_date": "2021-10-12T12:02:29.000Z"
  },
  {
    "id": 1179,
    "keyword": null,
    "link": null,
    "title": " dexter dependency",
    "description": "dependencies{     implementation 'com.karumi:dexter:6.2.2' }\n",
    "reg_date": "2021-10-12T12:02:29.000Z"
  },
  {
    "id": 1180,
    "keyword": null,
    "link": null,
    "title": " dfhgodjfgiojdfiojgjkdhjbsdv JKNJZXcnmvmcvbpdfh",
    "description": "if u find this doom\njgftgthggygt\n",
    "reg_date": "2021-10-12T12:02:30.000Z"
  },
  {
    "id": 1181,
    "keyword": null,
    "link": null,
    "title": " diagonal difference hackerrank solution in java 8 using list",
    "description": "prim =0     sec=0     length = len(arr[0])     for count in range(length):         prim += arr[count][count]         sec += arr[count][(length-count-1)]     return abs(prim-sec)     \n public static int diagonalDifference(List<List<Integer>> arr) {     // Write your code here     int leftd=0;     int rightd=0;     int n=arr.size();     for(int i=0;i<n;i++)     {         leftd+=arr.get(i).get(i);         rightd+=arr.get(i).get(n-i-1);     }     int absd=Math.abs(leftd-rightd);     return absd;      }\n",
    "reg_date": "2021-10-12T12:02:30.000Z"
  },
  {
    "id": 1182,
    "keyword": null,
    "link": null,
    "title": " dialog box in java swing",
    "description": "import javax.swing.JOptionPane;  public class Main {   public static void main(String[] argv) throws Exception {      JOptionPane.showMessageDialog(null, \"I am happy.\");    } } \nJOptionPane.showMessageDialog(null, \"java is fun\");\n",
    "reg_date": "2021-10-12T12:02:30.000Z"
  },
  {
    "id": 1183,
    "keyword": null,
    "link": null,
    "title": " dialog getWindow().setBackgroundDrawable transparent",
    "description": " dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT)); \nthis.window?.setBackgroundDrawableResource(android.R.color.transparent)\n",
    "reg_date": "2021-10-12T12:02:30.000Z"
  },
  {
    "id": 1184,
    "keyword": null,
    "link": null,
    "title": " dialog with edittext android",
    "description": " AlertDialog.Builder alertDialog = new AlertDialog.Builder(MainActivity.this);  alertDialog.setTitle(\"PASSWORD\");  alertDialog.setMessage(\"Enter Password\");   final EditText input = new EditText(MainActivity.this);  LinearLayout.LayoutParams lp = new LinearLayout.LayoutParams(      LinearLayout.LayoutParams.MATCH_PARENT,      LinearLayout.LayoutParams.MATCH_PARENT);  input.setLayoutParams(lp);  alertDialog.setView(input);  alertDialog.setIcon(R.drawable.key);   alertDialog.setPositiveButton(\"YES\",      new DialogInterface.OnClickListener() {          public void onClick(DialogInterface dialog, int which) {              password = input.getText().toString();              if (password.compareTo(\"\") == 0) {                  if (pass.equals(password)) {                      Toast.makeText(getApplicationContext(),                          \"Password Matched\", Toast.LENGTH_SHORT).show();                      Intent myIntent1 = new Intent(view.getContext(),                          Show.class);                      startActivityForResult(myIntent1, 0);                  } else {                      Toast.makeText(getApplicationContext(),                          \"Wrong Password!\", Toast.LENGTH_SHORT).show();                  }              }          }      });   alertDialog.setNegativeButton(\"NO\",      new DialogInterface.OnClickListener() {          public void onClick(DialogInterface dialog, int which) {              dialog.cancel();          }      });   alertDialog.show();  }   }); \nfinal View view = layoutInflater.inflate(R.layout.xml_file_created_above, null); AlertDialog alertDialog = new AlertDialog.Builder(ct).create(); alertDialog.setTitle(\"Your Title Here\"); alertDialog.setIcon(\"Icon id here\"); alertDialog.setCancelable(false); Constant.alertDialog.setMessage(\"Your Message Here\");   final EditText etComments = (EditText) view.findViewById(R.id.etComments);  alertDialog.setButton(AlertDialog.BUTTON_POSITIVE, \"OK\", new OnClickListener() {     @Override     public void onClick(DialogInterface dialog, int which) {      } });   alertDialog.setButton(AlertDialog.BUTTON_NEGATIVE, \"Cancel\", new OnClickListener() {     @Override     public void onClick(DialogInterface dialog, int which) {         alertDialog.dismiss()     } });   alertDialog.setView(view); alertDialog.show();\n",
    "reg_date": "2021-10-12T12:02:30.000Z"
  },
  {
    "id": 1185,
    "keyword": null,
    "link": null,
    "title": " dibujar un cuadrado con las esquinas redodndeadas java",
    "description": "/* public abstract void drawRoundRect(int x,                  int y,                  int width,                  int height,                  int arcWidth,                  int arcHeight); x - the x coordinate of the rectangle to be drawn. y - the y coordinate of the rectangle to be drawn. width - the width of the rectangle to be drawn. height - the height of the rectangle to be drawn. arcWidth - the horizontal diameter of the arc at the four corners. arcHeight - the vertical diameter of the arc at the four corners. */ //Codigo de ejemplo: Graphics g; g.drawRoundRect(0,0,200,100,10,10);\n",
    "reg_date": "2021-10-12T12:02:30.000Z"
  },
  {
    "id": 1186,
    "keyword": null,
    "link": null,
    "title": " dice in java",
    "description": "/* Author: Jeffrey Huang jeffreyhuang9999@gmail.com This is a simple code that uses math.random  to generate a number from 1-6, inclusive. */ import java.util.Random; public class Main { \tpublic static void main(String[] args) { \t    int i; \t    i = (int)(6*Math.random()+1); \t\tSystem.out.println(i); \t} } \n",
    "reg_date": "2021-10-12T12:02:30.000Z"
  },
  {
    "id": 1187,
    "keyword": null,
    "link": null,
    "title": " dictionary in java",
    "description": "Map<String, String> dictionary = new HashMap<String, String>();  dictionary.put(\"key\", \"value\"); String value = dictionary.get(\"key\");\nimport java.util.*;  class My_Dictionary  { \tpublic static void main(String[] args) \t{ \t\t// creating a My HashTable Dictionary \t\tHashtable<String, String> my_dict = new Hashtable<String, String>();      // Using a few dictionary Class methods \t\t// using put method \t\tmy_dict.put(\"01\", \"Apple\"); \t\tmy_dict.put(\"10\", \"Banana\"); \t\t \t\t// using get() method     System.out.println(\"\\nValue at key = 10 : \" + my_dict.get(\"10\"));      System.out.println(\"Value at key = 11 : \" + my_dict.get(\"11\")); \t\t \t\t// using isEmpty() method     System.out.println(\"\\nIs my dictionary empty? : \" + my_dict.isEmpty() + \"\\n\"); \t\t \t\t// using remove() method  \t\t// remove value at key 10     my_dict.remove(\"10\");     System.out.println(\"Checking if the removed value exists: \" + my_dict.get(\"10\"));      System.out.println(\"\\nSize of my_dict : \" + my_dict.size());  \t} } \nMap<String, String> map = new HashMap<String, String>(); map.put(\"dog\", \"type of animal\"); System.out.println(map.get(\"dog\"));\n",
    "reg_date": "2021-10-12T12:02:30.000Z"
  },
  {
    "id": 1188,
    "keyword": null,
    "link": null,
    "title": " difference betweeen == and .equals() in java",
    "description": "// Java program to understand  // the concept of == operator and .equals() method public class Test {     public static void main(String[] args)     {         String s1 = new String(\"HELLO\");         String s2 = new String(\"HELLO\");         System.out.println(s1 == s2);         System.out.println(s1.equals(s2));     } }  Output: false true  Explanation: We can use == operators for reference comparison (address comparison) and  .equals() method for content comparison. In simple words, == checks if both  objects point to the same memory location whereas .equals() evaluates to the  comparison of values in the objects.\n",
    "reg_date": "2021-10-12T12:02:30.000Z"
  },
  {
    "id": 1189,
    "keyword": null,
    "link": null,
    "title": " difference between abstract class and final",
    "description": "1-Abstract method should be overriden  -Final method can't be overriden 2-Abstract method can be inherited  -Final can't be inherited 3-Abstract can be w/o implementation  -Final must have implemetation 4-Abstract we can't create objects  -Final we can create objects(string) 5-Abstract can't be instantiated  -Final can be instantiated\n",
    "reg_date": "2021-10-12T12:02:30.000Z"
  },
  {
    "id": 1190,
    "keyword": null,
    "link": null,
    "title": " difference between class and interface in java",
    "description": "A class describes the attributes and behaviors of an object . An interface contains behaviors that a class implements. \nA class can be instantiated by  creating its objects. An interface is never instantiated as the methods  declared inside an interface are abstract and does not perform any action,    so there is no use of instantiating any interface. A class is declared using a keyword class.  In the same way, an interface is  created using a keyword interface. The members of a class can have  access modifier like public, private, protected. But the members of an interface are always public as they have to be accessed  by the classes implementing them. The methods inside a class are    defined to perform an action on the fields declared in the class.  The methods inside an interface are purely abstract. A class can implement any number  of interfaces but can extend only one  super class. An interface can extend any number of interfaces but cannot implement any interface. A class has constructors defined inside it to get the variable initialized. But, an interface does not have any constructors as there are no fields  to be initialized. The fields of an interface are initialized  at the time of their declaration only.\n",
    "reg_date": "2021-10-12T12:02:30.000Z"
  },
  {
    "id": 1191,
    "keyword": null,
    "link": null,
    "title": " difference between class and object in java",
    "description": "Class is a blueprint or template which you can create as many objects  as you like. Object is a member or instance of a class. Class is declared using class keyword, Object is created through new keyword mainly. A class is a template for objects.   A class defines object properties  including a valid range of values, and  a default value.  A class also describes object behavior.    An object is a member or   an \"instance\" of a class and has states    and behaviors in which all of its properties have values that you either    explicitly define or that are defined     by default settings.  \n",
    "reg_date": "2021-10-12T12:02:31.000Z"
  },
  {
    "id": 1192,
    "keyword": null,
    "link": null,
    "title": " difference between hashmap and map java",
    "description": "Hash map:   \t-> It is the implementation of map interface. \t-> It can contain null values and keys. \t-> It doesn't maintain input order.  Map:   \t-> It is an interface \t-> Map has two implementation \t-> Tree Map \t-> Hash Map \t-> Tree Map maintains the input order . \t-> It will not allow any null values. \t-> Duplicate keys are not allowed in the map \n",
    "reg_date": "2021-10-12T12:02:31.000Z"
  },
  {
    "id": 1193,
    "keyword": null,
    "link": null,
    "title": " difference between integer and int",
    "description": "int is a primitive type. Variables of type int store the actual binary value for the integer you want to represent. int.parseInt(\"1\") doesn't make sense because int is not a class and therefore doesn't have any methods.  Integer is a class, no different from any other in the Java language. Variables of type Integer store references to Integer objects, just as with any other reference (object) type. Integer.parseInt(\"1\") is a call to the static method parseInt from class Integer (note that this method actually returns an int and not an Integer).  To be more specific, Integer is a class with a single field of type int. This class is used where you need an int to be treated like any other object, such as in generic types or situations where you need nullability.  Note that every primitive type in Java has an equivalent wrapper class:      byte has Byte     short has Short     int has Integer     long has Long     boolean has Boolean     char has Character     float has Float     double has Double  Wrapper classes inherit from Object class, and primitive don't. So it can be used in collections with Object reference or with Generics.  Since java 5 we have autoboxing, and the conversion between primitive and wrapper class is done automatically. Beware, however, as this can introduce subtle bugs and performance problems; being explicit about conversions never hurts. \nInt is a primitive data type On the other hand Integer is a wrapper class that wraps a primitive type int into an object Int provides less flexibility as compare to Integer as it only allows the binary value of an integer in it. The Intege on the other hand is more flexible in storing and manupulating in data since wrapper class inherit object class.\n",
    "reg_date": "2021-10-12T12:02:31.000Z"
  },
  {
    "id": 1194,
    "keyword": null,
    "link": null,
    "title": " difference between java and javax",
    "description": "javax is extension from java \n",
    "reg_date": "2021-10-12T12:02:31.000Z"
  },
  {
    "id": 1195,
    "keyword": null,
    "link": null,
    "title": " difference between static and final in java",
    "description": "The two really aren't similar.  \"STATIC\" fields are fields that do not  belong to any particular instance of a class. and there is only one copy of the variable in memory shared by all instances of the class. On the other hand \"FINAL\" The final keyword just means the value can't be changed. Without final, any object can  change the value of the variable\n",
    "reg_date": "2021-10-12T12:02:31.000Z"
  },
  {
    "id": 1196,
    "keyword": null,
    "link": null,
    "title": " difference between try catch and try with resources",
    "description": "// It was introduced because of some resources used in Java  // (like SQL connections or streams being difficult to be handled  // properly; as an example, in java 6 to handle a InputStream  // properly you had to do something like:  InputStream stream = new MyInputStream(...); try {     // ... use stream } catch(IOException e) {    // handle exception } finally {     try {         if(stream != null) {             stream.close();         }     } catch(IOException e) {         // handle yet another possible exception     } } // Do you notice that ugly double try? now with try-with-resources  // you can do this:  try (InputStream stream = new MyInputStream(...)){     // ... use stream } catch(IOException e) {    // handle exception }  // and close() is automatically called, if it throws an IOException,  // it will be supressed (as specified in the Java Language  // Specification 14.20.3). Same happens for java.sql.Connection\n",
    "reg_date": "2021-10-12T12:02:31.000Z"
  },
  {
    "id": 1197,
    "keyword": null,
    "link": null,
    "title": " directory size java",
    "description": " FileUtils.sizeOfDirectory(File file); //apache commons-io\n",
    "reg_date": "2021-10-12T12:02:31.000Z"
  },
  {
    "id": 1198,
    "keyword": null,
    "link": null,
    "title": " discord failed to install mac",
    "description": "This happens because it requires admin permission to connect.    1- Go and open finder folder 2- In top bar click go > go to folder 3- Type this: ~/Library/Application Support 4- Delete discord folder Then 5- go and find Discord inside applications folder. 6- Click right-> show packages contents-> Contents-> MacOS 7- And open the program from there!  ~Lunox\n",
    "reg_date": "2021-10-12T12:02:31.000Z"
  },
  {
    "id": 1199,
    "keyword": null,
    "link": null,
    "title": " discord jda get message by id",
    "description": "Message message = channel.retrieveMessageById(id).complete();\n",
    "reg_date": "2021-10-12T12:02:31.000Z"
  },
  {
    "id": 1200,
    "keyword": null,
    "link": null,
    "title": " discord jda remove @everyone from channel",
    "description": "channel.createPermissionOverride(guild.getPublicRole()) \t.setAllow(Permission.EMPTY_PERMISSIONS) \t.reason(\"Remove @everyone from the channel\") \t.queue();\n",
    "reg_date": "2021-10-12T12:02:31.000Z"
  },
  {
    "id": 1201,
    "keyword": null,
    "link": null,
    "title": " displaying an arraylist in java",
    "description": "Arrays.toString(list.toArray())\n",
    "reg_date": "2021-10-12T12:02:32.000Z"
  },
  {
    "id": 1202,
    "keyword": null,
    "link": null,
    "title": " distance between your location to destination android",
    "description": "import com.google.maps.android.SphericalUtil;   private FusedLocationProviderClient fusedLocationClient;     LatLng yourLocation;     LatLng Destination=new LatLng(15.389230635580095, 73.92281848312571);     Double distance;       //inside oncreate    btn.setOnClickListener(new View.OnClickListener() {             @Override             public void onClick(View view) {                      if (ActivityCompat.checkSelfPermission(MainActivity.this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(MainActivity.this, Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {                     return;         }                 fusedLocationClient.getLastLocation()                 .addOnSuccessListener(MainActivity.this, new OnSuccessListener<Location>() {                     @Override                     public void onSuccess(Location location) {                         // Got last known location. In some rare situations this can be null.                         if (location != null) {                                                         Double lat =location.getLatitude();                             Double longi = location.getLongitude();                              yourLocationPlz(lat,longi);                                                           distance = SphericalUtil.computeDistanceBetween(yourLocation,Destination);                             Toast.makeText(MainActivity.this, \"Distance between Your Location and Destination is \\n \" + String.format(\"%.2f\", distance / 1000) + \"km\", Toast.LENGTH_SHORT).show();                         }                     }                 });              }         });                public void  yourLocationPlz(Double Latitude,Double Longitude){           yourLocation=new LatLng(Latitude,Longitude);   }         \n",
    "reg_date": "2021-10-12T12:02:32.000Z"
  },
  {
    "id": 1203,
    "keyword": null,
    "link": null,
    "title": " distance point to line java",
    "description": "//returns the distance between the infinite line(x1,y1)(x2,y2) and a point(x,y) public float pDistance(float x, float y, float x1, float y1, float x2, float y2) {        float A = x - x1; // position of point rel one end of line       float B = y - y1;       float C = x2 - x1; // vector along line       float D = y2 - y1;       float E = -D; // orthogonal vector       float F = C;        float dot = A * E + B * F;       float len_sq = E * E + F * F;        return (float) Math.abs(dot) / Math.sqrt(len_sq);     }\n",
    "reg_date": "2021-10-12T12:02:32.000Z"
  },
  {
    "id": 1204,
    "keyword": null,
    "link": null,
    "title": " do i have to use static methods in java main",
    "description": "Use a static method  when you want to be able to access the method  without an instance of the class\n",
    "reg_date": "2021-10-12T12:02:32.000Z"
  },
  {
    "id": 1205,
    "keyword": null,
    "link": null,
    "title": " do statement java",
    "description": "class DoWhileLoopExample {     public static void main(String args[]){          int i=10;          do{               System.out.println(i);               i--;          }while(i>1);     } }\ndo {    statement(s); } while(condition);\n10 9 8 7 6 5 4 3 2\nclass DoWhileLoopExample2 {     public static void main(String args[]){          int arr[]={2,11,45,9};          //i starts with 0 as array index starts with 0          int i=0;          do{               System.out.println(arr[i]);               i++;          }while(i<4);     } }\n",
    "reg_date": "2021-10-12T12:02:32.000Z"
  },
  {
    "id": 1206,
    "keyword": null,
    "link": null,
    "title": " do while loop c++",
    "description": "do {    // codes; } while (testExpression);\nwhile (test_expression) {    // statements     update_expression; }\nwhile (x != 0){ ... }\ndo {    statement(s); } while(condition);\n// Executes a statement repeatedly until the value of the condition expression //becomes false. The test takes place after each iteration. do {    //statement } while(condition);\ndescending 25to 30 \n",
    "reg_date": "2021-10-12T12:02:32.000Z"
  },
  {
    "id": 1207,
    "keyword": null,
    "link": null,
    "title": " do while loop in java",
    "description": "do { \t... } while(condition);\ndo { \t// loop content } while (/* condition */);\n// Java infinite while loop import java.util.*; public class WhileLoopExample {    public static void main(String[] args)    {       boolean value = true;       while(value)       {          System.out.println(\"Infinite loop\");       }    } }\npublic class WhileLoopDemo {    public static void main(String args[])    {       int a = 1;       while(a < 10)       {          System.out.println(a);          a++;          System.out.print(\"\\n\");       }    } }\nint number = 1;  while(number < 10){   System.out.println(number);   number += 1; }  \ndo {   //something you want to execute at least once } while (someBooleanCondition); \n",
    "reg_date": "2021-10-12T12:02:32.000Z"
  },
  {
    "id": 1208,
    "keyword": null,
    "link": null,
    "title": " does java sort list after removing an item from a list",
    "description": "//yes //if you remove an item from the list, //the list will stay sorted  //example :  for(int i = 0;i < 10;i++)     myList.add(\"\"+i);  System.out.println(myList); //Before removal: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] //myList[3] = 3 //myList.size() = 10 myList.remove(3); myList.remove(4); myList.remove(5);  System.out.println(myList); //After removal: [0, 1, 2, 4, 6, 8, 9] //myList[3] = 4 ////myList.size() = 7\n",
    "reg_date": "2021-10-12T12:02:32.000Z"
  },
  {
    "id": 1209,
    "keyword": null,
    "link": null,
    "title": " double linked list java",
    "description": "class doublelinkedlist{       Node head;     Node tail;      static class Node{         int data;         Node previous;         Node next;          Node(int data) { this.data = data; }     }      public void addLink(int data) {         Node node = new Node(data);          if(head == null) {             head = tail = node;             head.previous = null;         } else {             tail.next = node;             node.previous = tail;             tail = node;         }         tail.next = null;     } }\n",
    "reg_date": "2021-10-12T12:02:32.000Z"
  },
  {
    "id": 1210,
    "keyword": null,
    "link": null,
    "title": " double max value java",
    "description": "System.out.println(Double.MAX_VALUE);//(2-2^52)^21023, maximum value < Infinity System.out.println(Double.POSITIVE_INFINITY);//Infinity\n",
    "reg_date": "2021-10-12T12:02:32.000Z"
  },
  {
    "id": 1211,
    "keyword": null,
    "link": null,
    "title": " double min value java",
    "description": "System.out.println(Double.MIN_VALUE);//2^1074, minimum value > 0 System.out.println(-Double.MAX_VALUE);//-(2-2^52)^21023, smallest double value System.out.println(Double.NEGATIVE_INFINITY);//-Infinity \n",
    "reg_date": "2021-10-12T12:02:33.000Z"
  },
  {
    "id": 1212,
    "keyword": null,
    "link": null,
    "title": " double parse jtextfield",
    "description": "public static void main(String[] args) {     double amount=0.0;     try {          amount = Double.parseDouble(txtMonth.getText());     } catch (Exception e) {         System.err.println(\"ups, this was not castable to double\");           amount=-10.0;     }     System.out.println(\"Here is the double: \"+ amount); }\n double Amount = Double.parseDouble(txtMonth.getText());\nDouble Amount = Double.valueOf(txtMonth.getText());\n",
    "reg_date": "2021-10-12T12:02:33.000Z"
  },
  {
    "id": 1213,
    "keyword": null,
    "link": null,
    "title": " double round java integer",
    "description": "int a = (int) Math.round(doubleVar);\n",
    "reg_date": "2021-10-12T12:02:33.000Z"
  },
  {
    "id": 1214,
    "keyword": null,
    "link": null,
    "title": " double to int",
    "description": "class DoubleToInt {     public static void main( String args[] ) {         double DoubleValue = 3.6987;         int IntValue = (int) DoubleValue;         System.out.println(DoubleValue + \" is now \" + IntValue);     } }\nclass Scratch{     public static void main(String[] args){         double decimal = 5.7;         System.out.println( (int) decimal );\t//casting         System.out.println( Math.round(decimal * 10) / (double) 10);\t//Math.round()         System.out.println( decimal % 1);\t// modulus         System.out.println( Integer.parseInt( String.valueOf(decimal).substring(0, String.valueOf(decimal).indexOf(\".\")))); // .substring()     } }\ndouble value = 4.3; int convertedValue = value % 1;\n@SuppressWarnings(\"deprecation\") int Entero=new Double(345.8).intValue();\n//In java, you can cast to any primitive type by putting (primitiveType) //before whatever you're casting to.  private static int myInt = (int)myDouble;\ndouble data = 3452.345 int value = (int)data; \n",
    "reg_date": "2021-10-12T12:02:33.000Z"
  },
  {
    "id": 1215,
    "keyword": null,
    "link": null,
    "title": " double to string java",
    "description": "double total = 44; String total2 = Double.toString(total);\ndouble number = -895.25; String numberAsString = String.valueOf(number);\n",
    "reg_date": "2021-10-12T12:02:33.000Z"
  },
  {
    "id": 1216,
    "keyword": null,
    "link": null,
    "title": " doubly linked list implementation java",
    "description": "class DoublyLinkedList {         //A node class for doubly linked list     class Node{           int item;           Node previous;           Node next;               public Node(int item) {               this.item = item;           }       }       //Initially, heade and tail is set to null     Node head, tail = null;           //add a node to the list       public void addNode(int item) {           //Create a new node           Node newNode = new Node(item);               //if list is empty, head and tail points to newNode           if(head == null) {               head = tail = newNode;               //head's previous will be null               head.previous = null;               //tail's next will be null               tail.next = null;           }           else {               //add newNode to the end of list. tail->next set to newNode               tail.next = newNode;               //newNode->previous set to tail               newNode.previous = tail;               //newNode becomes new tail               tail = newNode;               //tail's next point to null               tail.next = null;           }       }       //print all the nodes of doubly linked list       public void printNodes() {           //Node current will point to head           Node current = head;           if(head == null) {               System.out.println(\"Doubly linked list is empty\");               return;           }           System.out.println(\"Nodes of doubly linked list: \");           while(current != null) {               //Print each node and then go to next.               System.out.print(current.item + \" \");               current = current.next;           }       }   } class Main{     public static void main(String[] args) {           //create a DoublyLinkedList object         DoublyLinkedList dl_List = new DoublyLinkedList();           //Add nodes to the list           dl_List.addNode(10);           dl_List.addNode(20);           dl_List.addNode(30);           dl_List.addNode(40);           dl_List.addNode(50);               //print the nodes of DoublyLinkedList           dl_List.printNodes();       }   }   \n//insert link at the first location void insertFirst(int key, int data) {     //create a link    struct node *link = (struct node*) malloc(sizeof(struct node));    link->key = key;    link->data = data; \t    if(isEmpty()) {       //make it the last link       last = link;    } else {       //update first prev link       head->prev = link;    }     //point it to old first link    link->next = head; \t    //point first to new first link    head = link; }\n",
    "reg_date": "2021-10-12T12:02:33.000Z"
  },
  {
    "id": 1217,
    "keyword": null,
    "link": null,
    "title": " download csv file spring boot",
    "description": "package net.codejava;   import java.io.IOException; import java.text.DateFormat; import java.text.SimpleDateFormat; import java.util.Date; import java.util.List;   import javax.servlet.http.HttpServletResponse; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.stereotype.Controller; import org.springframework.web.bind.annotation.GetMapping;   import org.supercsv.io.CsvBeanWriter; import org.supercsv.io.ICsvBeanWriter; import org.supercsv.prefs.CsvPreference;   @Controller public class UserController {       @Autowired     private UserServices service;                 @GetMapping(\"/users/export\")     public void exportToCSV(HttpServletResponse response) throws IOException {         response.setContentType(\"text/csv\");         DateFormat dateFormatter = new SimpleDateFormat(\"yyyy-MM-dd_HH-mm-ss\");         String currentDateTime = dateFormatter.format(new Date());                   String headerKey = \"Content-Disposition\";         String headerValue = \"attachment; filename=users_\" + currentDateTime + \".csv\";         response.setHeader(headerKey, headerValue);                   /*This is where you receive the data which you wanna export to csv*/          List<User> listUsers = service.listAll();           ICsvBeanWriter csvWriter = new CsvBeanWriter(response.getWriter(), CsvPreference.STANDARD_PREFERENCE);         String[] csvHeader = {\"User ID\", \"E-mail\", \"Full Name\", \"Roles\", \"Enabled\"};         String[] nameMapping = {\"id\", \"email\", \"fullName\", \"roles\", \"enabled\"};                   csvWriter.writeHeader(csvHeader);                   for (User user : listUsers) {             csvWriter.write(user, nameMapping);         }                   csvWriter.close();               }       }\n",
    "reg_date": "2021-10-12T12:02:33.000Z"
  },
  {
    "id": 1218,
    "keyword": null,
    "link": null,
    "title": " draw circle in java",
    "description": "public void drawCenteredCircle(Graphics2D g, int x, int y, int r) {   x = x-(r/2);   y = y-(r/2);   g.fillOval(x,y,r,r); } \n// x position, y position, x size, y size. ellipse(0, 0, 100, 100);\npublic class scratch {     public static void main(String[] args) {         JFrame window = new JFrame();         window.setTitle(\"Christmas Tree\");         window.setSize(700, 600);         window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);         window.setVisible(true);         DrawingComponent DC = new DrawingComponent();         window.add(DC);     } } class DrawingComponent extends JComponent{       public void paint(Graphics graph0){         Graphics2D graph = (Graphics2D) graph0;         Ellipse2D.Double circle = new Ellipse.Double(5, 5, 25, 25);         graph.fill(circle);       } }\nimport java.awt.*; import java.awt.event.*; import java.awt.geom.*;  public class DrawCircle extends Frame  { \t// input the value for circle and square. \tShape circle=new Ellipse2D.Float(100.0f,100.0f,100.0f,100.0f); \t \t// class paint to fill color in circle. \tpublic void paint(Graphics g) \t{ \t\tGraphics2D ga=(Graphics2D)g; \t\tga.draw(circle); \t\tga.setPaint(Color.blue); \t\tga.fill(circle); \t} \t\t \tpublic static void main(String args[]) \t{ \t\t// create a frame object for circle. \t\tFrame frame=new DrawCircle(); \t\tframe.addWindowListener(new WindowAdapter() \t\t{ \t\t\tpublic void windowClosing(WindowEvent we) \t\t\t{ \t\t\t\tSystem.exit(0); \t\t    } \t\t}); \t\t// circle coordinates. \t\tframe.setSize(300, 250); \t\tframe.setVisible(true);\t \t} } \ng.drawOval(50,50,100,100);\n",
    "reg_date": "2021-10-12T12:02:33.000Z"
  },
  {
    "id": 1219,
    "keyword": null,
    "link": null,
    "title": " dreamworks studio recent movies",
    "description": "System.out.println(\"bossbb\");\n",
    "reg_date": "2021-10-12T12:02:33.000Z"
  },
  {
    "id": 1220,
    "keyword": null,
    "link": null,
    "title": " dynamic array in java",
    "description": "import java.util.ArrayList;  public class Main {      public static void main(String[] args) {         ArrayList<Integer> arr=new ArrayList<Integer>(10);          for(int i =0;i<12;i++){             arr.add(i);             System.out.println(\"VAlUE\" + arr.get(i));             System.out.println(\"SIZE\" + arr.size());         }     } }  // Dynamic nature means even if we initialize the array with // a lesser size but at run time we need a greater size.\nArrayList<String> mylist = new ArrayList<String>(); mylist.add(mystring); //this adds an element to the list.\nimport java.util.Arrays; public class DynamicArray{     private int array[];     // holds the current size of array     private int size;     // holds the total capacity of array     private int capacity;           // default constructor to initialize the array and values     public DynamicArray(){         array = new int[2];         size=0;         capacity=2;     }           // to add an element at the end     public void addElement(int element){         // double the capacity if all the allocated space is utilized         if (size == capacity){             ensureCapacity(2);          }         array[size] = element;         size++;     }\n",
    "reg_date": "2021-10-12T12:02:33.000Z"
  },
  {
    "id": 1221,
    "keyword": null,
    "link": null,
    "title": " e",
    "description": "ea sports\nn public void add(String word) { \t\t  list.insert(list.size()+1, word); \t\t for (int i = 0; i < list.size(); i++)  { \t\t\t   \t            for (int j = i + 1; j < list.size(); j++)  { \t            \t \t                if (list.get(i).compareTo(list.get(j))>0) {     \t                \ttemp = list.get(i); \t                \tString temp1 = list.get(j); \t                \ttemp = temp1; \t                \ttemp = list.get(j); \t              } \t          } \t    } }\ne = lim x->Inf (1+1/n)^n\n<h1><b>E</b></hi>\ne ~ 2.71828182845904523536028747135266249775724709369995\npublic static void main(String[] args) {  \tSystem.out.println(\"E\");     System.out.println(\"E moment.exe\"); }\nEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE\n",
    "reg_date": "2021-10-12T12:02:33.000Z"
  },
  {
    "id": 1222,
    "keyword": null,
    "link": null,
    "title": " easy palindrome program in java",
    "description": "import java.util.*;    class PalindromeExample2   {      public static void main(String args[])      {         String original, reverse = \"\"; // Objects of String class         Scanner in = new Scanner(System.in);          System.out.println(\"Enter a string/number to check if it is a palindrome\");         original = in.nextLine();          int length = original.length();          for ( int i = length - 1; i >= 0; i-- )            reverse = reverse + original.charAt(i);         if (original.equals(reverse))            System.out.println(\"Entered string/number is a palindrome.\");         else            System.out.println(\"Entered string/number isn't a palindrome.\");       }   }  \nimport java.util.Scanner;  public class Palindrome {   public static void main(String args[])   {     int num,temp,reverse=0;     Scanner input=new Scanner(System.in);     num=in.nextInt();     temp=num;     //code to reverse the number     while(temp!=0)     {       int d=temp\u0010; //extracts digit at the end       reverse=reverse*10+d;       temp/=10; //removes the digit at the end     }     // 'reverse' has the reverse version of the actual input, so we check     if(reverse==num)     {       System.out.println(\"Number is palindrome\");     }     else     {       System.out.println(\"Number is not palindrome\");     }   } }\n",
    "reg_date": "2021-10-12T12:02:34.000Z"
  },
  {
    "id": 1223,
    "keyword": null,
    "link": null,
    "title": " eclips downolad",
    "description": "good choice\n",
    "reg_date": "2021-10-12T12:02:34.000Z"
  },
  {
    "id": 1224,
    "keyword": null,
    "link": null,
    "title": " eclipse java content assist",
    "description": " If you would like to use autocomplete all the time without having to worry about hitting Ctrl + Spacebar or your own keyboard shortcut, you can make the following adjustment in the Eclipse preferences to trigger autocomplete simply by typing several different characters:      Eclipse > Preferences > Java > Editor > Content Assist     Auto Activation > Auto activation triggers for Java     Enter all the characters you want to trigger autocomplete, such as the following:  abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ._  Now any time that you type any of these characters, Eclipse will trigger autocomplete suggestions based on the context.\n",
    "reg_date": "2021-10-12T12:02:34.000Z"
  },
  {
    "id": 1225,
    "keyword": null,
    "link": null,
    "title": " edit a txt file using java",
    "description": "FileWriter fw = new FileWriter (\"file.txt\", true); PrintWriter pw = new PrintWriter (fw); /* filewriter creates the file that printwriter can edit. */\n",
    "reg_date": "2021-10-12T12:02:34.000Z"
  },
  {
    "id": 1226,
    "keyword": null,
    "link": null,
    "title": " edittext color",
    "description": "<EditText         android:layout_width=\"match_parent\"         android:layout_height=\"wrap_content\"         android:hint=\"Underline color change\"         android:backgroundTint=\"@android:color/holo_red_light\" />  -this line-\n",
    "reg_date": "2021-10-12T12:02:34.000Z"
  },
  {
    "id": 1227,
    "keyword": null,
    "link": null,
    "title": " edittext hint color",
    "description": "<android.support.design.widget.TextInputLayout                 android:layout_width=\"match_parent\"                 android:layout_height=\"wrap_content\"                 android:layout_marginTop=\"@dimen/dp_10\"                 android:textColorHint=\"@color/color_black\" -this line-                 app:hintTextAppearance=\"@style/TextLabel\">                  <EditText                     android:id=\"@+id/et_state\"                     style=\"@style/profile_editTextStyle\"                      android:layout_width=\"match_parent\"                     android:layout_height=\"wrap_content\"                     android:hint=\"@string/billingState\"                     android:text=\"@string/billingState\"                      />             </android.support.design.widget.TextInputLayout>\n",
    "reg_date": "2021-10-12T12:02:34.000Z"
  },
  {
    "id": 1228,
    "keyword": null,
    "link": null,
    "title": " efficient way to sort an array in java",
    "description": "enum Code {     Str1(1), Str2(2), Str3(3), Str4(4), Str5(5));      int sortNumber;      Code(int sortNumber) {         this.sortNumber = sortNumber;     }      int returnNumber() {         return sortNumber;     } };  public static void main(String[] args) {     List<Object> obj = new ArrayList<Object>();      Collections.sort(obj, new Comparator<Object>() {         @Override         public int compare(Object object1, Object object2) {             return Code.valueOf(object1.getStr()).returnNumber() > Code.valueOf(object2.getStr()).returnNumber() ? 1 : -1;         }     }); }\n",
    "reg_date": "2021-10-12T12:02:34.000Z"
  },
  {
    "id": 1229,
    "keyword": null,
    "link": null,
    "title": " elasticsearch api code call using highlevelrestclient",
    "description": "Request request = new Request(\"GET\", \"/_cluster/health\"); request.addParameter(\"wait_for_status\", \"green\");  Response response = client.getLowLevelClient().performRequest(request);   ClusterHealthStatus healthStatus; try (InputStream is = response.getEntity().getContent()) {      Map<String, Object> map = XContentHelper.convertToMap(XContentType.JSON.xContent(), is, true);      healthStatus = ClusterHealthStatus.fromStringString) map.get(\"status\";  }  if (healthStatus != ClusterHealthStatus.GREEN) {      }\n",
    "reg_date": "2021-10-12T12:02:34.000Z"
  },
  {
    "id": 1230,
    "keyword": null,
    "link": null,
    "title": " elif java",
    "description": "int time = 22; if (time < 10) {   System.out.println(\"Good morning.\"); } else if (time < 20) {   System.out.println(\"Good day.\"); } else {   System.out.println(\"Good evening.\"); } // Outputs \"Good evening.\"\nif(x == 1 && y == 2){   println(\"x = 1 and y = 2\"); }\nint x = 3;  if (x == 3) {   // block of code to be executed if the condition is true } else {   // block of code to be executed if the condition is false }\nint x = 3;  if (x == 3) {   // block of code to be executed if the condition is true }\n",
    "reg_date": "2021-10-12T12:02:34.000Z"
  },
  {
    "id": 1231,
    "keyword": null,
    "link": null,
    "title": " eliminar fila jtable java",
    "description": "/*  *Se puede usar sin el try-cacth.  *No importa que anteriormente se haya declarado  *otro DefaultTableModel  */ public void limpiarTabla(JTable tabla){         try {             DefaultTableModel modelo=(DefaultTableModel) tabla.getModel();             int filas=tabla.getRowCount();             for (int i = 0;filas>i; i++) {                 modelo.removeRow(0);             }         } catch (Exception e) {             System.out.println(\"Error al limpiar la tabla: \"+ e);         }     } \n",
    "reg_date": "2021-10-12T12:02:34.000Z"
  },
  {
    "id": 1232,
    "keyword": null,
    "link": null,
    "title": " else if java",
    "description": "System.out.println(\"How many sattelites does JUPITER have ??\"); \t\tC = scan.nextInt(); \t\t \t\tif (C == 79) \t\t{ \t\t\tSystem.out.println(\"Congrats ! You got the Third  Question Right :)\"); \t\t\tpoints = points + 1; \t\t} \t\t \t\telse if (C != 79) \t\t{ \t\t\tSystem.out.println(\"Sorry but your answer is wrong :(\"); \t\t}\nlet let x: number = 10, y = 20;  if (x > y)  {     console.log('x is greater than y.'); }  else {     console.log('x is less than or equal to y.'); //This will be executed } \nelse if statement is used to specify new condition if first condition is false. Syntax:  if(condition1) {    // execute if condition1 is true } else if (condition2) {    // execute if condition2 is true } else if (condition3) {    // execute if condition3 is true } else {    // execute if conditions 1, 2 and 3 becomes false }\nimport java.io.*; public class JavaIfElse {    public static void main(String[] args)    {       int number = 15;       // check if number is divisible by 2       if(number%2 == 0)       {          System.out.println(number + \" is even number\");       }       else       {          System.out.println(number + \" is odd number\");       }    } }\nif(a<b){ \t//if a<b you are here \t//do something }else if(a==b){ \t//if a==b you are here \t//do something }else{ \t//if none above conditions are matched you are here   \t//do something }\nif(x == 1 && y == 2){   println(\"x = 1 and y = 2\"); }\n",
    "reg_date": "2021-10-12T12:02:35.000Z"
  },
  {
    "id": 1233,
    "keyword": null,
    "link": null,
    "title": " else if javascrit",
    "description": "if (condition1) {   //  block of code to be executed if condition1 is true  } else if (condition2) {   //  block of code to be executed if the condition1 is false and    //  condition2 is true } else {   //  block of code to be executed if the condition1 is false and    //  condition2 is false  }\nvar age=20; if (age < 18) { \tconsole.log(\"underage\"); } else { \tconsole.log(\"let em in!\"); }\n",
    "reg_date": "2021-10-12T12:02:35.000Z"
  },
  {
    "id": 1234,
    "keyword": null,
    "link": null,
    "title": " else statement java",
    "description": "System.out.println(\"How many sattelites does JUPITER have ??\"); \t\tC = scan.nextInt(); \t\t \t\tif (C == 79) \t\t{ \t\t\tSystem.out.println(\"Congrats ! You got the Third  Question Right :)\"); \t\t\tpoints = points + 1; \t\t} \t\t \t\telse if (C != 79) \t\t{ \t\t\tSystem.out.println(\"Sorry but your answer is wrong :(\"); \t\t}\nelse if statement is used to specify new condition if first condition is false. Syntax:  if(condition1) {    // execute if condition1 is true } else if (condition2) {    // execute if condition2 is true } else if (condition3) {    // execute if condition3 is true } else {    // execute if conditions 1, 2 and 3 becomes false }\nimport java.io.*; public class JavaIfElse {    public static void main(String[] args)    {       int number = 15;       // check if number is divisible by 2       if(number%2 == 0)       {          System.out.println(number + \" is even number\");       }       else       {          System.out.println(number + \" is odd number\");       }    } }\nif(a<b){ \t//if a<b you are here \t//do something }else if(a==b){ \t//if a==b you are here \t//do something }else{ \t//if none above conditions are matched you are here   \t//do something }\nint x = 3;  if (x == 3) {   // block of code to be executed if the condition is true } else {   // block of code to be executed if the condition is false }\nint x = 3;  if (x == 3) {   // block of code to be executed if the condition is true }\n",
    "reg_date": "2021-10-12T12:02:35.000Z"
  },
  {
    "id": 1235,
    "keyword": null,
    "link": null,
    "title": " empty array java",
    "description": "int[] numbers = new int[5]; /* Empty array of type int and size 5 */ String[] names = new String[10]; /* Empty array of type string and size 10 */\n//where n is the length you want the array to be // for integer array int[] intArray = new int[n]; // for String array String[] strArray = new String[n];\nString [] names = new String[0];  // or   int [] ages = {} \npublic static void main(String args[]) {     int array[] = new int[4];     int number = 5, i = 0,j = 0;     while (i<4){         array[i]=number;         i=i+1;     }     while (j<4){         System.out.println(array[j]);         j++;     } }\n",
    "reg_date": "2021-10-12T12:02:35.000Z"
  },
  {
    "id": 1236,
    "keyword": null,
    "link": null,
    "title": " encapsulation",
    "description": "In object-oriented programming, encapsulation refers to the bundling  of data with the methods that operate on that data, or the restricting of direct access to some of an object's components\nEncapsulation:  Encapsulation is the mechanism of hiding of data implementation by  restricting access to public methods. Instance variables are kept  private and accessor methods are made public to achieve this.\nEncapsulation focus on Private Data Encapsulation allows the programmer to hide  and restrict access to data.  To achieve encapsulation: 1.Declare the variables with the private access modifier 2.Create public getters and setters that allow indirect  access to those variables   Framework Example: In my project I created multiple POJO/BEAN classes in order  to manage test data and actual data.  I take JSON from API response and convert  to object of my POJO class.  All the variables are private with getters and setter.  Also in order to store credentials or sensitive data  in my framework I have use encapsulation, configuration reader  also known as property file or excel sheet to hide data  from the outside. I use Apache POI if the data is stored in Excel  in order to extract/read and modify data. Partial Encapsulation Usage / getters and setters have to be Public We can provide only getters in a class to make the class immutable.  (Read only) returning private instance variable that&rsquo;s all We provide setters in a class to make the class attribute write-only, and return type is void just initialize the given argument \nEncapsulation focus on Private Data Encapsulation allows the programmer to hide  and restrict access to data.  To achieve encapsulation: 1.Declare the variables with the private access modifier 2.Create public getters and setters that allow indirect  access to those variables   Framework Example: In my project I created multiple POJO/BEAN classes in order  to manage test data and actual data.  I take JSON from API response and convert  to object of my POJO class.  All the variables are private with getters and setter.  Also in order to store credentials or sensitive data  in my framework I have use encapsulation, configuration reader  also known as property file or excel sheet to hide data  from the outside. I use Apache POI if the data is stored in Excel  in order to extract/read and modify data. Partial Encapsulation Usage / getters and setters have to be Public We can provide only getters in a class to make the class immutable.  (Read only) returning private instance variable that&rsquo;s all We provide setters in a class to make the class attribute write-only, and return type is void just initialize the given argument\n#include<iostream> using namespace std; class ExampleEncap{ private:    /* Since we have marked these data members private,     * any entity outside this class cannot access these     * data members directly, they have to use getter and     * setter functions.     */    int num;    char ch; public:    /* Getter functions to get the value of data members.     * Since these functions are public, they can be accessed     * outside the class, thus provide the access to data members     * through them     */    int getNum() const {       return num;    }    char getCh() const {       return ch;    }    /* Setter functions, they are called for assigning the values     * to the private data members.     */    void setNum(int num) {       this->num = num;    }    void setCh(char ch) {       this->ch = ch;    } }; int main(){    ExampleEncap obj;    obj.setNum(100);    obj.setCh('A');    cout<<obj.getNum()<<endl;    cout<<obj.getCh()<<endl;    return 0; }\nIn object-oriented programming, encapsulation refers to the bundling of data with the methods that operate on that data, or the restricting of direct access to some of an object's components\n",
    "reg_date": "2021-10-12T12:02:35.000Z"
  },
  {
    "id": 1237,
    "keyword": null,
    "link": null,
    "title": " encapsulation in java programs",
    "description": "// java program on encapsulation class EncapsulationExample {    private int ID;    private String stuName;    private int stuAge;    // getter and setter methods    public int getStudentID()    {       return ID;    }    public String getStudentName()    {       return stuName;    }    public int getStudentAge()    {       return stuAge;    }    public void setStudentAge(int number)    {       stuAge = number;    }    public void setStudentName(String number)    {       stuName = number;    }    public void setStudentID(int number)    {       ID = number;    } } public class ExampleForEncapsulation {    public static void main(String[] args)    {       EncapsulationExample student = new EncapsulationExample();       student.setStudentName(\"Virat\");       student.setStudentAge(5);       student.setStudentID(2353);       System.out.println(\"Student Name: \" + student.getStudentName());       System.out.println(\"Student ID: \" + student.getStudentID());       System.out.println(\"Student Age: \" + student.getStudentAge());    } }\n1-ENCAPSULATION: We can hide direct access to data by using private key and we can access private data by using getter and setter method.\n",
    "reg_date": "2021-10-12T12:02:35.000Z"
  },
  {
    "id": 1238,
    "keyword": null,
    "link": null,
    "title": " enhanced for loop java",
    "description": "class AssignmentOperator {    public static void main(String[] args) {              char[] vowels = {'a', 'e', 'i', 'o', 'u'};       // foreach loop       for (char item: vowels) {          System.out.println(item);       }    } }\n for(int name: array)         {             System.out.print(name + \" \");         }\nfor (String element : array) {    System.out.println(\"Element: \" + element);}\nAs of Java 5, the enhanced for loop was introduced. This is mainly used to traverse collection of elements including arrays.   Syntax :  for(declaration : expression) {    // Statements } Declaration &minus; The newly declared block variable, is of a type compatible with the elements of the array you are accessing. The variable will be available within the for block and its value would be the same as the current array element. Expression &minus; This evaluates to the array you need to loop through. The expression can be an array variable or method call that returns an array.\nString[] myArray = {\"Enhanced for loops\", \"are cool\", \"and save time!\"};  for (String myValue : myArray) {     System.out.println(myValue); }  /*Result: Enhanced for loops are cool and save time! */\nfor (int i=0; i < array.length; i++) {    System.out.println(\"Element: \" + array[i]);}\n",
    "reg_date": "2021-10-12T12:02:35.000Z"
  },
  {
    "id": 1239,
    "keyword": null,
    "link": null,
    "title": " enter character vovel or not java",
    "description": "/* Java Program Example - Check for Vowel */ \t\t import java.util.Scanner;  public class JavaProgram {     public static void main(String args[])     {         char ch;         Scanner scan = new Scanner(System.in); \t\t         System.out.print(\"Enter an Alphabet : \");         ch = scan.next().charAt(0); \t\t         if(ch=='a' || ch=='A' || ch=='e' || ch=='E' ||         ch=='i' || ch=='I' || ch=='o' || ch=='O' ||         ch=='u' || ch=='U')         {             System.out.print(\"This is a Vowel\");         }         else         {             System.out.print(\"This is not a Vowel\");         }     } }\n",
    "reg_date": "2021-10-12T12:02:35.000Z"
  },
  {
    "id": 1240,
    "keyword": null,
    "link": null,
    "title": " entre clavier java",
    "description": "Scanner sc = new Scanner(System.in); \n",
    "reg_date": "2021-10-12T12:02:35.000Z"
  },
  {
    "id": 1241,
    "keyword": null,
    "link": null,
    "title": " entryset in java loop",
    "description": "for (Map.Entry<String,String> entry : gfg.entrySet())             System.out.println(\"Key = \" + entry.getKey() +                              \", Value = \" + entry.getValue());\n",
    "reg_date": "2021-10-12T12:02:35.000Z"
  },
  {
    "id": 1242,
    "keyword": null,
    "link": null,
    "title": " enum java",
    "description": "public enum AlertLevel { \tUndefined(0), \tOk(1), \tWarning(2), \tAlarm(3); }\npublic class DaysOfTheWeek {      public enum Days {m, t, w, r, f, sat, s};   \t    public static void main(String[] args) {           Days d = Days.t;            System.out.println(d);           //the output would be t         } }\nprivate enum VarState { \tINIT,  \tTRUE,    \tFALSE, \tUNSATISFIABLE  }\npublic enum Level {     HIGH{         @Override         public String asLowerCase() {             return HIGH.toString().toLowerCase();         }     },     MEDIUM{         @Override         public String asLowerCase() {             return MEDIUM.toString().toLowerCase();         }     },     LOW{         @Override         public String asLowerCase() {             return LOW.toString().toLowerCase();         }     };      public abstract String asLowerCase(); } \nEnum in Java\nenum Level {   LOW,   MEDIUM,   HIGH } \n",
    "reg_date": "2021-10-12T12:02:35.000Z"
  },
  {
    "id": 1243,
    "keyword": null,
    "link": null,
    "title": " enum set in java",
    "description": "  EnumSet<Gfg> set1, set2, set3, set4;             // Adding elements         set1 = EnumSet.of(Gfg.QUIZ, Gfg.CONTRIBUTE,                           Gfg.LEARN, Gfg.CODE);         set2 = EnumSet.complementOf(set1);         set3 = EnumSet.allOf(Gfg.class);         set4 = EnumSet.range(Gfg.CODE, Gfg.CONTRIBUTE);         System.out.println(\"Set 1: \" + set1);         System.out.println(\"Set 2: \" + set2);         System.out.println(\"Set 3: \" + set3);         System.out.println(\"Set 4: \" + set4);\n",
    "reg_date": "2021-10-12T12:02:36.000Z"
  },
  {
    "id": 1244,
    "keyword": null,
    "link": null,
    "title": " enum with numbers java",
    "description": "public enum EXIT_CODE {     A(104), B(203);      private int numVal;      EXIT_CODE(int numVal) {         this.numVal = numVal;     }      public int getNumVal() {         return numVal;     } }\n",
    "reg_date": "2021-10-12T12:02:36.000Z"
  },
  {
    "id": 1245,
    "keyword": null,
    "link": null,
    "title": " equals example java",
    "description": "import java.util.Scanner;  public class YourProjectName {  \tpublic static void main(String[] args) { \t\tScanner keyboard = new Scanner(System.in); \t\t \t\t//D \t\t \t\tString password1; \t\tString password2; \t\tString msg; \t\t \t\t//E \t\t \t\tSystem.out.println(\"Enter password: \"); \t\t\tpassword1 = keyboard.nextLine(); \t\t \t\tSystem.out.println(\"Repeat password: \"); \t\t\tpassword2 = keyboard.nextLine(); \t\t \t\t//P \t\t \t\tif (password1.equals(password2)) { \t\t\tmsg = \"Password matching!\"; \t\t} else { \t\t\tmsg = \"Password not match\"; \t\t} \t\t \t\t//S \t\t \t\tSystem.out.println(msg); \t\t \t}  }\n",
    "reg_date": "2021-10-12T12:02:36.000Z"
  },
  {
    "id": 1246,
    "keyword": null,
    "link": null,
    "title": " error: cannot find symbol@javax.annotation.Generated(",
    "description": "dependencies {     compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2' }\n",
    "reg_date": "2021-10-12T12:02:36.000Z"
  },
  {
    "id": 1247,
    "keyword": null,
    "link": null,
    "title": " error: package android.support.v4.content does not exist import android.support.v4.content.FileProvider; ^",
    "description": "import androidx.core.content.FileProvider; \n",
    "reg_date": "2021-10-12T12:02:36.000Z"
  },
  {
    "id": 1248,
    "keyword": null,
    "link": null,
    "title": " error could not create the java virtual machine ubuntu 20.04",
    "description": "java -version\n",
    "reg_date": "2021-10-12T12:02:36.000Z"
  },
  {
    "id": 1249,
    "keyword": null,
    "link": null,
    "title": " error java home is set to an invalid directory",
    "description": "// Don't include /bin in path variable // It should be only  JAVA_HOME=D:\\Setup\\Open_JDK\\openjdk\\jdk-11.0.2    // If still no luck then add JRE_HOME also  JRE_HOME=D:\\Setup\\Open_JDK\\openjdk\\jdk-11.0.2      // Make sure your System variable is not  // overiding your User variable.   // If so then remove user JAVA_HOME or JRE_HOME from User variable  // and add only one JAVA_HOME in System variables\n",
    "reg_date": "2021-10-12T12:02:36.000Z"
  },
  {
    "id": 1250,
    "keyword": null,
    "link": null,
    "title": " error vs exception",
    "description": "Both Error and Exception are derived from Throwable in Java. Error represents errors which are generally cannot be handled. For examples: OutOfMemoryError, NoClassDefFoundError Exception represents errors which can be caught and handled. For examples: IOException, NullPointerException Exception is divided in two categories; checked and unchecked Exception.  Checked Exception require a mandatory try-catch code block to handle it. Unchecked Exception mostly represent programming errors (NullPointerException  or RuntimeException) Errors are unchecked exception and the developer is not required  to do anything with these. All the Errors are Exceptions, but the reverse is not true. In general Errors are which nobody can control or guess when it happened, on the other hand Exception can be guessed and can be handled. \n",
    "reg_date": "2021-10-12T12:02:36.000Z"
  },
  {
    "id": 1251,
    "keyword": null,
    "link": null,
    "title": " esponente in java",
    "description": "Math.pow(base, esponente)\n",
    "reg_date": "2021-10-12T12:02:36.000Z"
  },
  {
    "id": 1252,
    "keyword": null,
    "link": null,
    "title": " euclids algoritm java gcd",
    "description": "//Calculating GCD with euclid's algorithm using recursion  public static int calcGCD(int num1, int num2) { \t\tif (num2 == 0) { \t\t\treturn num1; \t\t} else { \t\t\treturn calcGCD(num2, num1 % num2); \t\t} \t}\n",
    "reg_date": "2021-10-12T12:02:36.000Z"
  },
  {
    "id": 1253,
    "keyword": null,
    "link": null,
    "title": " even or odd in java",
    "description": "import java.util.Scanner;  class CheckEvenOdd {   public static void main(String args[])   {     int num;     System.out.println(\"Enter an Integer number:\");      //The input provided by user is stored in num     Scanner input = new Scanner(System.in);     num = input.nextInt();      /* If number is divisible by 2 then it's an even number      * else odd number*/     if ( num % 2 == 0 )         System.out.println(\"Entered number is even\");      else         System.out.println(\"Entered number is odd\");   } }\nimport java.util.Scanner; public class FindEvenOrOdd {    public static void main(String[] args)    {       int a;       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter a number to check even or odd: \");       a = sc.nextInt();       if(a % 2 == 0)       {          System.out.println(\"Entered number is an even number.\");       }       else       {          System.out.println(\"Entered number is an odd number.\");       }       sc.close();    } }\nimport java.util.Scanner; public class evenOrOdd{      public static void main(String[] args){     Scanner in = new Scanner(System.in);     System.out.println(\"Please enter a non-negative number: \");     int x = in.nextInt();     if (x % 2 == 0)     {       System.out.println(\"The number is even\");     }     else {       System.out.println(\"The number is odd\");     }   } }        \n",
    "reg_date": "2021-10-12T12:02:37.000Z"
  },
  {
    "id": 1254,
    "keyword": null,
    "link": null,
    "title": " events that people think are unlikely but actually have high probability",
    "description": "f = input(\"hello\");  println(f); \n",
    "reg_date": "2021-10-12T12:02:37.000Z"
  },
  {
    "id": 1255,
    "keyword": null,
    "link": null,
    "title": " example patch request java",
    "description": "@PatchMapping(path = \"/{id}\", consumes = \"application/json-patch+json\")public ResponseEntity<Customer> updateCustomer(@PathVariable String id, @RequestBody JsonPatch patch) {    try {        Customer customer = customerService.findCustomer(id).orElseThrow(CustomerNotFoundException::new);        Customer customerPatched = applyPatchToCustomer(patch, customer);        customerService.updateCustomer(customerPatched);        return ResponseEntity.ok(customerPatched);    } catch (JsonPatchException | JsonProcessingException e) {        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();    } catch (CustomerNotFoundException e) {        return ResponseEntity.status(HttpStatus.NOT_FOUND).build();    }}\n",
    "reg_date": "2021-10-12T12:02:37.000Z"
  },
  {
    "id": 1256,
    "keyword": null,
    "link": null,
    "title": " example to check two integer array are equal in java?",
    "description": "import java.util.Arrays;  public class JavaArrayConceptsConitnue { \tpublic static void main(String[] args) \t{ \t\tint[] x = {10,12,20,30,25}; \t\tint[] subx = new int[]{10,12,20,30,26}; \t\t \t\tif(Arrays.equals(x, subx) == true) \t\t{ \t\t\tSystem.out.println(\"Both the arrays are equal\"); \t\t} \t\telse \t\t{ \t\t\tSystem.out.println(\"Arrays are not equal\"); \t\t} \t} }\n",
    "reg_date": "2021-10-12T12:02:37.000Z"
  },
  {
    "id": 1257,
    "keyword": null,
    "link": null,
    "title": " examples of java programs that read files and put them into arrays",
    "description": "Scanner scanner = new Scanner(new File(\"input.txt\")); int [] tall = new int [100]; int i = 0; while(scanner.hasNextInt()) {      tall[i++] = scanner.nextInt(); }\n",
    "reg_date": "2021-10-12T12:02:37.000Z"
  },
  {
    "id": 1258,
    "keyword": null,
    "link": null,
    "title": " exception",
    "description": "In java exception is an object. Exceptions are created when an abnormal  situations are arised in our program. Exceptions can be created by JVM or  by our application code. All Exception classes are defined in java.lang.  In otherwords we can say Exception as run time error. I use try & catch blocks  to handle any exceptions in my code.    I am familiar with major checked and unchecked exceptions and    handle it accordingly to make my code execution smooth\n1.Unchecked: occurs during run time 2.Checked Exceptions:occurs during the compile time.  needs to be handled IMMEDIATELY Exception handling: try & catch: blocks, used for handling the exception    throws keyword is used within the method signature  disadvantage is: throws keyword whoever calls the method  will have to handle the exception again but with  try/catch you handle once. Try/catch is better way to handle it  in utility class. Next time you call method you don&rsquo;t get any exceptions   most common Exception like NullPointerExceptio,  ArrayIndexOutOfBound, ClassNotFoundException, IOException. are unchecked and they are descended from java.lang.RuntimeException In Selenium: nosuchelement, nostaleexception, nosuchaframe  In SQL: SQL exception \nstatic void f2() {     try {             } catch(IndexOutOfRangeException) {         Console.Write(\"B\");     }      }  answer:  Console.Write(\"B\"); \nCaused by: java.lang.NullPointerException: Location is required.\n",
    "reg_date": "2021-10-12T12:02:37.000Z"
  },
  {
    "id": 1259,
    "keyword": null,
    "link": null,
    "title": " exception handling in java example",
    "description": "In java exception is an object. Exceptions are created when an abnormal  situations are arised in our program. Exceptions can be created by JVM or  by our application code. All Exception classes are defined in java.lang.  In otherwords we can say Exception as run time error. \nAn exception is an event, which occurs during the execution of a  program, that disrupts the normal flow of the program's instructions.\nIn java exception is an object. Exceptions are created when an abnormal  situations are arised in our program. Exceptions can be created by JVM or  by our application code. All Exception classes are defined in java.lang.  In otherwords we can say Exception as run time error. I use try & catch blocks  to handle any exceptions in my code.    I am familiar with major checked and unchecked exceptions and    handle it accordingly to make my code execution smooth\n public class Exception8 { public static void main(String[]args) {    fun1();    fun2(); } static void fun1() {    \tfun3(); } static void fun2() {      \tfun3(); } static void fun3() { \ttry { \tSystem.out.println(20/0); \t} \tcatch(ArithmeticException e) \t{ \t\tSystem.out.println(\"Zero divison \"); \t} } } \nWe can handle exceptions in either of the two ways : 1) By specifying try catch block where we can catch the exception. 2) Declaring a method with throws clause \n",
    "reg_date": "2021-10-12T12:02:37.000Z"
  },
  {
    "id": 1260,
    "keyword": null,
    "link": null,
    "title": " exception in java",
    "description": "I use try & catch blocks to handle any exceptions in my code.    I am familiar with major checked and unchecked exceptions and    handle it accordingly to make my code execution smooth\nIn java exception is an object. Exceptions are created when an abnormal  situations are arised in our program. Exceptions can be created by JVM or  by our application code. All Exception classes are defined in java.lang.  In otherwords we can say Exception as run time error. \nAn exception is an event, which occurs during the execution of a  program, that disrupts the normal flow of the program's instructions.\nIn java exception is an object. Exceptions are created when an abnormal  situations are arised in our program. Exceptions can be created by JVM or  by our application code. All Exception classes are defined in java.lang.  In otherwords we can say Exception as run time error. I use try & catch blocks  to handle any exceptions in my code.    I am familiar with major checked and unchecked exceptions and    handle it accordingly to make my code execution smooth\n1.Unchecked: occurs during run time 2.Checked Exceptions:occurs during the compile time.  needs to be handled IMMEDIATELY Exception handling: try & catch: blocks, used for handling the exception    throws keyword is used within the method signature  disadvantage is: throws keyword whoever calls the method  will have to handle the exception again but with  try/catch you handle once. Try/catch is better way to handle it  in utility class. Next time you call method you don&rsquo;t get any exceptions   most common Exception like NullPointerExceptio,  ArrayIndexOutOfBound, ClassNotFoundException, IOException. are unchecked and they are descended from java.lang.RuntimeException In Selenium: nosuchelement, nostaleexception, nosuchaframe  In SQL: SQL exception \n public class Exception8 { public static void main(String[]args) {    fun1();    fun2(); } static void fun1() {    \tfun3(); } static void fun2() {      \tfun3(); } static void fun3() { \ttry { \tSystem.out.println(20/0); \t} \tcatch(ArithmeticException e) \t{ \t\tSystem.out.println(\"Zero divison \"); \t} } } \n",
    "reg_date": "2021-10-12T12:02:37.000Z"
  },
  {
    "id": 1261,
    "keyword": null,
    "link": null,
    "title": " exception in thread \"main\" java.lang.indexoutofboundsexception: index 1 out of bounds for length 1",
    "description": " 0 means you are trying to access index 0 which is invalid, which in turn means the array is empty.  String[] names = new String[0]; // thats the problem  String[] names = new String[somelength];//this is true usage \n",
    "reg_date": "2021-10-12T12:02:37.000Z"
  },
  {
    "id": 1262,
    "keyword": null,
    "link": null,
    "title": " exception in thread \"main\" java.lang.numberformatexception: for input string: \"\"",
    "description": "int number = 0; // or any application default value try { \tnumber = Integer.parseInt(input); } catch (NumberFormatException nfe) { \t// do whatever you need to do if you get an invalid number \t// you can put the try catch in a loop and keep asking for a      // value until you don't get a valid one        \t// If you want to use the default value in case of an     // invalid number you can do nothing in here }\n",
    "reg_date": "2021-10-12T12:02:37.000Z"
  },
  {
    "id": 1263,
    "keyword": null,
    "link": null,
    "title": " exception in thread \"main\" java.util.nosuchelementexception",
    "description": "//broken: public static void main(String[] args){ \tString firstLine=readLine();   \tString secondLine=readLine();//will not work }  public static String readLine(){ \tScanner scan=new Scanner(System.in); \tString line=scan.nextLine();//throws a NoSuchElementException the second time the method is called \tscan.close();//this also closes System.in   \treturn line; } //working: reuse the Scanner: public static void main(String[] args){   \tScanner scan=new Scanner(System.in); \tString firstLine=readLine(scan);   \tString secondLine=readLine(scan);//will not work  \tscan.close();//this also closes System.in\t }  public static String readLine(Scanner scan){ \tString line=scan.nextLine();//throws a NoSuchElementException the second time the method is called   \treturn line; } \n",
    "reg_date": "2021-10-12T12:02:37.000Z"
  },
  {
    "id": 1264,
    "keyword": null,
    "link": null,
    "title": " exception java",
    "description": "public static void foo() throws IOException {     // some code here, when something goes wrong, you might do:     throw new IOException(\"error message\"); }  public static void main(String[] args) {     try {         foo();     } catch (IOException e) {         System.out.println(e.getMessage());     } }\ntry:   # code block except ValueError as ve:   print(ve)\npublic static void main(String[] args) { \tScanner kb = new Scanner(System.in);     System.out.println(\"Enter a number\");     try {     \tdouble nb1 = kb.nextDouble();     \tif(nb1<0)         \tthrow new ArithmeticException();         else System.out.println( \"result : \" + Math.sqrt(nb1) );     } catch (ArithmeticException e) {         System.out.println(\"You tried an impossible sqrt\");     } }\nIn java exception is an object. Exceptions are created when an abnormal  situations are arised in our program. Exceptions can be created by JVM or  by our application code. All Exception classes are defined in java.lang.  In otherwords we can say Exception as run time error. \nAn exception is an event, which occurs during the execution of a  program, that disrupts the normal flow of the program's instructions.\n1.Unchecked: occurs during run time 2.Checked Exceptions:occurs during the compile time.  needs to be handled IMMEDIATELY Exception handling: try & catch: blocks, used for handling the exception    throws keyword is used within the method signature  disadvantage is: throws keyword whoever calls the method  will have to handle the exception again but with  try/catch you handle once. Try/catch is better way to handle it  in utility class. Next time you call method you don&rsquo;t get any exceptions   most common Exception like NullPointerExceptio,  ArrayIndexOutOfBound, ClassNotFoundException, IOException. are unchecked and they are descended from java.lang.RuntimeException In Selenium: nosuchelement, nostaleexception, nosuchaframe  In SQL: SQL exception \n",
    "reg_date": "2021-10-12T12:02:38.000Z"
  },
  {
    "id": 1265,
    "keyword": null,
    "link": null,
    "title": " execute application jar",
    "description": "java -jar target/key-concepts-0.0.1-SNAPSHOT.jar \n",
    "reg_date": "2021-10-12T12:02:38.000Z"
  },
  {
    "id": 1266,
    "keyword": null,
    "link": null,
    "title": " exit app android",
    "description": " @Override     public void onBackPressed() {         AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(this);         alertDialogBuilder.setTitle(\"Exit Application?\");         alertDialogBuilder                 .setMessage(\"Click yes to exit!\")                 .setCancelable(false)                 .setPositiveButton(\"Yes\",                         new DialogInterface.OnClickListener() {                             public void onClick(DialogInterface dialog, int id) {                                 moveTaskToBack(true);                                 android.os.Process.killProcess(android.os.Process.myPid());                                 System.exit(1);                             }                         })                  .setNegativeButton(\"No\", new DialogInterface.OnClickListener() {                     public void onClick(DialogInterface dialog, int id) {                          dialog.cancel();                     }                 });          AlertDialog alertDialog = alertDialogBuilder.create();         alertDialog.show();     } \nActivityName.this.finish(); android.os.Process.killProcess(android.os.Process.myPid()); System.exit(0);\npublic void onBackPressed() {   moveTaskToBack(true);   android.os.Process.killProcess(android.os.Process.myPid());   System.exit(1); }\n",
    "reg_date": "2021-10-12T12:02:38.000Z"
  },
  {
    "id": 1267,
    "keyword": null,
    "link": null,
    "title": " exit from jshell",
    "description": "/exit\n",
    "reg_date": "2021-10-12T12:02:38.000Z"
  },
  {
    "id": 1268,
    "keyword": null,
    "link": null,
    "title": " expandable list view in android",
    "description": " <RelativeLayout xmlns:android=\"https://schemas.android.com/apk/res/android\"     xmlns:tools=\"https://schemas.android.com/tools\"     android:layout_width=\"match_parent\"     android:layout_height=\"match_parent\"     android:paddingLeft=\"@dimen/activity_horizontal_margin\"     android:paddingRight=\"@dimen/activity_horizontal_margin\"     android:paddingTop=\"@dimen/activity_vertical_margin\"     android:paddingBottom=\"@dimen/activity_vertical_margin\"     tools:context=\".MainActivity\">      <ExpandableListView         android:id=\"@+id/expandableListView\"         android:layout_height=\"match_parent\"         android:layout_width=\"match_parent\"         android:indicatorLeft=\"?android:attr/expandableListPreferredItemIndicatorLeft\"         android:divider=\"@android:color/darker_gray\"         android:dividerHeight=\"0.5dp\" />  </RelativeLayout> \n",
    "reg_date": "2021-10-12T12:02:38.000Z"
  },
  {
    "id": 1269,
    "keyword": null,
    "link": null,
    "title": " expected exception junit",
    "description": "@Test void testExpectedException() {     Assertions.assertThrows(NumberFormatException.class, () -> {     Integer.parseInt(\"One\");   });   }\n@Test(expected = SomeException.class) public void testName() { \t//some code }\n",
    "reg_date": "2021-10-12T12:02:38.000Z"
  },
  {
    "id": 1270,
    "keyword": null,
    "link": null,
    "title": " exponential in java",
    "description": "import java.lang.Math;     class Gfg {         // driver code      public static void main(String args[])      {          double a = 30;          double b = 2;          System.out.println(Math.pow(a, b));             a = 3;          b = 4;          System.out.println(Math.pow(a, b));             a = 2;          b = 6;          System.out.println(Math.pow(a, b));      }  \nThere is no exponential operator in Java, you will have to use Math.pow \n(int) Math.pow(first, second));\n",
    "reg_date": "2021-10-12T12:02:38.000Z"
  },
  {
    "id": 1271,
    "keyword": null,
    "link": null,
    "title": " exponents java",
    "description": "Math.pow(number, exponent)\nmath.pow(number, power);\n(int) Math.pow(first, second));\n",
    "reg_date": "2021-10-12T12:02:38.000Z"
  },
  {
    "id": 1272,
    "keyword": null,
    "link": null,
    "title": " export java home",
    "description": "export JAVA_HOME_BIN=`which java` export JAVA_HOME_DIR=`dirname $JAVA_HOME_BIN` export JAVA_HOME=`dirname $JAVA_HOME_DIR`\nexport JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64  # Add JAVA bin directory to the PATH variable export PATH=$PATH:$JAVA_HOME/bin \n",
    "reg_date": "2021-10-12T12:02:38.000Z"
  },
  {
    "id": 1273,
    "keyword": null,
    "link": null,
    "title": " extract one string java",
    "description": "int pos = 0; //Arbitrary position, can be any number \"String\".substring(pos, pos+1);\n",
    "reg_date": "2021-10-12T12:02:38.000Z"
  },
  {
    "id": 1274,
    "keyword": null,
    "link": null,
    "title": " fabric8 create namespace",
    "description": "KubernetesClient client = new DefaultKubernetesClient() Namespace ns = new NamespaceBuilder().withNewMetadata().withName(\"my_namespace\").endMetadata().build(); client.namespaces().create(ns)\n",
    "reg_date": "2021-10-12T12:02:39.000Z"
  },
  {
    "id": 1275,
    "keyword": null,
    "link": null,
    "title": " fabric how to generate ores",
    "description": "public class ExampleMod implements ModInitializer {   private static ConfiguredFeature<?, ?> ORE_WOOL_OVERWORLD = Feature.ORE     .configure(new OreFeatureConfig(       OreFeatureConfig.Rules.BASE_STONE_OVERWORLD,       Blocks.WHITE_WOOL.getDefaultState(),       9)) // vein size     .decorate(Decorator.RANGE.configure(new RangeDecoratorConfig(       0,       0,       64)))     .spreadHorizontally()     .repeat(20); // number of veins per chunk     @Override   public void onInitialize() {     RegistryKey<ConfiguredFeature<?, ?>> oreWoolOverworld = RegistryKey.of(Registry.CONFIGURED_FEATURE_WORLDGEN,         new Identifier(\"tutorial\", \"ore_wool_overworld\"));     Registry.register(BuiltinRegistries.CONFIGURED_FEATURE, oreWoolOverworld.getValue(), ORE_WOOL_OVERWORLD);     BiomeModifications.addFeature(BiomeSelectors.foundInOverworld(), GenerationStep.Feature.UNDERGROUND_ORES, oreWoolOverworld);   } }\n",
    "reg_date": "2021-10-12T12:02:39.000Z"
  },
  {
    "id": 1276,
    "keyword": null,
    "link": null,
    "title": " fabricmc spawn item",
    "description": "// Spawn an ItemEntity (dropped item) at the specified position in the specified world. //\tWorld\t\t\t            \t World  Double Double Double ItemStack\t\t\t\t \tworld.spawnEntity(new ItemEntity(world, x,     y,     z,     stack))\n",
    "reg_date": "2021-10-12T12:02:39.000Z"
  },
  {
    "id": 1277,
    "keyword": null,
    "link": null,
    "title": " factorial calculator without recursion java",
    "description": "public class Tester {    static int factorial(int n) {       if (n == 0)          return 1;       else          return (n * factorial(n - 1));    }    public static void main(String args[]) {       int i, fact = 1;       int number = 5;       fact = factorial(number);       System.out.println(number + \"! = \" + fact);    } }\n",
    "reg_date": "2021-10-12T12:02:39.000Z"
  },
  {
    "id": 1278,
    "keyword": null,
    "link": null,
    "title": " factorial java",
    "description": " int num1 = 6;   int num2 = 1;     for(int a = 1; a<=num1; a++) {         num2 = num2 * a;     }         System.out.println(num2);\n// Factorial program using recursion public class FactorialRecursion {    public static void main(String[] args)    {       int factorial = 1;       int number = 6;       factorial = factorialFunction(number);       System.out.println(\"Factorial of \" + number + \" is : \" + factorial);    }    static int factorialFunction(int num)    {       if(num == 0)       {          return 1;       }       else       {          return(num * factorialFunction(num - 1));       }    } }\npublic class FactorialDemo {    public static void main(String[] args)    {       int number = 6, factorial = 1;       for(int a = 1; a <= number; a++)       {          factorial = factorial * a;       }       System.out.println(\"Factorial of \" + number + \" is : \" + factorial);    } }\ndouble factorial = 1; double number=30;  while ( numero!=0) {   factorial=factorial*number;   number--; }\n",
    "reg_date": "2021-10-12T12:02:39.000Z"
  },
  {
    "id": 1279,
    "keyword": null,
    "link": null,
    "title": " factorial number in java",
    "description": " int num1 = 6;   int num2 = 1;     for(int a = 1; a<=num1; a++) {         num2 = num2 * a;     }         System.out.println(num2);\n// Factorial program using recursion public class FactorialRecursion {    public static void main(String[] args)    {       int factorial = 1;       int number = 6;       factorial = factorialFunction(number);       System.out.println(\"Factorial of \" + number + \" is : \" + factorial);    }    static int factorialFunction(int num)    {       if(num == 0)       {          return 1;       }       else       {          return(num * factorialFunction(num - 1));       }    } }\npublic class FactorialDemo {    public static void main(String[] args)    {       int number = 6, factorial = 1;       for(int a = 1; a <= number; a++)       {          factorial = factorial * a;       }       System.out.println(\"Factorial of \" + number + \" is : \" + factorial);    } }\ndouble factorial = 1; double number=30;  while ( numero!=0) {   factorial=factorial*number;   number--; }\n",
    "reg_date": "2021-10-12T12:02:39.000Z"
  },
  {
    "id": 1280,
    "keyword": null,
    "link": null,
    "title": " factorial program in java",
    "description": " int num1 = 6;   int num2 = 1;     for(int a = 1; a<=num1; a++) {         num2 = num2 * a;     }         System.out.println(num2);\n// Factorial program using recursion public class FactorialRecursion {    public static void main(String[] args)    {       int factorial = 1;       int number = 6;       factorial = factorialFunction(number);       System.out.println(\"Factorial of \" + number + \" is : \" + factorial);    }    static int factorialFunction(int num)    {       if(num == 0)       {          return 1;       }       else       {          return(num * factorialFunction(num - 1));       }    } }\npublic class FactorialDemo {    public static void main(String[] args)    {       int number = 6, factorial = 1;       for(int a = 1; a <= number; a++)       {          factorial = factorial * a;       }       System.out.println(\"Factorial of \" + number + \" is : \" + factorial);    } }\ndouble factorial = 1; double number=30;  while ( numero!=0) {   factorial=factorial*number;   number--; }\npublic class Factorial {      public static void main(String[] args) {         int num = 6;         long factorial = multiplyNumbers(num);         System.out.println(\"Factorial of \" + num + \" = \" + factorial);     }     public static long multiplyNumbers(int num)     {         if (num >= 1)             return num * multiplyNumbers(num - 1);         else             return 1;     } }\n",
    "reg_date": "2021-10-12T12:02:39.000Z"
  },
  {
    "id": 1281,
    "keyword": null,
    "link": null,
    "title": " factorial program in java without recursion",
    "description": "public class Tester {    static int factorial(int n) {       if (n == 0)          return 1;       else          return (n * factorial(n - 1));    }    public static void main(String args[]) {       int i, fact = 1;       int number = 5;       fact = factorial(number);       System.out.println(number + \"! = \" + fact);    } }\n",
    "reg_date": "2021-10-12T12:02:39.000Z"
  },
  {
    "id": 1282,
    "keyword": null,
    "link": null,
    "title": " failed to determine a suitable driver class",
    "description": "@SpringBootApplication(exclude={DataSourceAutoConfiguration.class})\nspring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration\n",
    "reg_date": "2021-10-12T12:02:40.000Z"
  },
  {
    "id": 1283,
    "keyword": null,
    "link": null,
    "title": " feignException byteBuffer to string",
    "description": "String s = StandardCharsets.UTF_8.decode(byteBuffer).toString();\n",
    "reg_date": "2021-10-12T12:02:40.000Z"
  },
  {
    "id": 1284,
    "keyword": null,
    "link": null,
    "title": " fibonacci java",
    "description": "// WARNING: The function assumes that 'fib(0)=0' and 'fib(1)=1' // Returns the number of the fibonacci sequence at index 'n' public static int fib(int n) { \tif (n < 2) // No difference if '<' or '<=', because 'fib(2)=2'. \t\treturn n; \treturn fib(n-1) + fib(n-2); // Uses the recursion method for solving }\n// java program to display fibonacci series using for loop public class FibonacciSeriesForLoop {    public static void main(String[] args)    {       int f = 10, num1 = 0, num2 = 1;       System.out.print(\"First \" + f + \" fibonacci sequence: \");       for(int a = 1; a <= f; ++a)       {          System.out.print(num1 + \" + \");          int total = num1 + num2;          num1 = num2;          num2 = total;       }    } }\npublic class Fibonacci {      public static void main(String[] args) {          int n = 10, t1 = 0, t2 = 1;         System.out.print(\"First \" + n + \" terms: \");          for (int i = 1; i <= n; ++i)         {             System.out.print(t1 + \" + \");              int sum = t1 + t2;             t1 = t2;             t2 = sum;         }     } }\nimport info1.*;  public class FibonacciDemo1{    public static void main(String[] args){      System.out.print(\"Geben Sie ein Zahl an: \");      int a = Console.in.readInt();      System.out.println(\"fib(\"+a+\") = \" + fibonacci(a));    }    private static int fibonacci(int a){      if (a==1||a==2) return 1;      else return fibonacci(a-1)+fibonacci(a-2);    }  }  \n// fibonacci series in java using while loop public class FibonacciSeriesWhileLoop {    public static void main(String[] args)    {       int a = 1, num = 15, num1 = 0, num2 = 1;       System.out.print(\"First \" + num + \" fibonacci sequence: \");       while(a <= num)       {          System.out.print(num1 + \" , \");          int total = num1 + num2;          num1 = num2;          num2 = total;          a++;       }    } }\n// 1 2 3 5 8 13 21 34  public class Fibonacci {      public static void main(String[] args) {          int n = 10, t1 = 0, t2 = 1;         System.out.print(\"First \" + n + \" terms: \");          for (int i = 1; i <= n; ++i)         {             System.out.print(t1 + \" + \");              int sum = t1 + t2;             t1 = t2;             t2 = sum;         }     } }\n",
    "reg_date": "2021-10-12T12:02:40.000Z"
  },
  {
    "id": 1285,
    "keyword": null,
    "link": null,
    "title": " fibonacci sequence algorithm in java",
    "description": "public class Fibonacci_sequence { \t \tstatic int fib(int n) { \t\tif( n <= 0 ) { \t\t\treturn 0; \t\t}else if( n == 1 ) { \t\t\treturn 1; \t\t}else { \t\t\treturn ( fib( n - 1 )+ fib( n - 2 )); \t\t} \t\t \t} \t \tpublic static void main(String[] args) { \t\t \t\tint n = 9; \t\tSystem.out.println(fib(n)); \t\t \t\t// TODO Auto-generated method stub  \t}  } \n",
    "reg_date": "2021-10-12T12:02:40.000Z"
  },
  {
    "id": 1286,
    "keyword": null,
    "link": null,
    "title": " fibonacci series in java",
    "description": "// java program to display fibonacci series using for loop public class FibonacciSeriesForLoop {    public static void main(String[] args)    {       int f = 10, num1 = 0, num2 = 1;       System.out.print(\"First \" + f + \" fibonacci sequence: \");       for(int a = 1; a <= f; ++a)       {          System.out.print(num1 + \" + \");          int total = num1 + num2;          num1 = num2;          num2 = total;       }    } }\npublic class Fibonacci {      public static void main(String[] args) {          int n = 10, t1 = 0, t2 = 1;         System.out.print(\"First \" + n + \" terms: \");          for (int i = 1; i <= n; ++i)         {             System.out.print(t1 + \" + \");              int sum = t1 + t2;             t1 = t2;             t2 = sum;         }     } }\nimport info1.*;  public class FibonacciDemo1{    public static void main(String[] args){      System.out.print(\"Geben Sie ein Zahl an: \");      int a = Console.in.readInt();      System.out.println(\"fib(\"+a+\") = \" + fibonacci(a));    }    private static int fibonacci(int a){      if (a==1||a==2) return 1;      else return fibonacci(a-1)+fibonacci(a-2);    }  }  \n// fibonacci series in java using while loop public class FibonacciSeriesWhileLoop {    public static void main(String[] args)    {       int a = 1, num = 15, num1 = 0, num2 = 1;       System.out.print(\"First \" + num + \" fibonacci sequence: \");       while(a <= num)       {          System.out.print(num1 + \" , \");          int total = num1 + num2;          num1 = num2;          num2 = total;          a++;       }    } }\npublic class Fibonacci {      public static void main(String[] args) {          int i = 1, n = 10, t1 = 0, t2 = 1;         System.out.print(\"First \" + n + \" terms: \");          while (i <= n)         {             System.out.print(t1 + \" + \");              int sum = t1 + t2;             t1 = t2;             t2 = sum;              i++;         }     } }\n// 1 2 3 5 8 13 21 34  public class Fibonacci {      public static void main(String[] args) {          int n = 10, t1 = 0, t2 = 1;         System.out.print(\"First \" + n + \" terms: \");          for (int i = 1; i <= n; ++i)         {             System.out.print(t1 + \" + \");              int sum = t1 + t2;             t1 = t2;             t2 = sum;         }     } }\n",
    "reg_date": "2021-10-12T12:02:40.000Z"
  },
  {
    "id": 1287,
    "keyword": null,
    "link": null,
    "title": " fibonacci series java",
    "description": "// java program to display fibonacci series using for loop public class FibonacciSeriesForLoop {    public static void main(String[] args)    {       int f = 10, num1 = 0, num2 = 1;       System.out.print(\"First \" + f + \" fibonacci sequence: \");       for(int a = 1; a <= f; ++a)       {          System.out.print(num1 + \" + \");          int total = num1 + num2;          num1 = num2;          num2 = total;       }    } }\npublic class Fibonacci {      public static void main(String[] args) {          int n = 10, t1 = 0, t2 = 1;         System.out.print(\"First \" + n + \" terms: \");          for (int i = 1; i <= n; ++i)         {             System.out.print(t1 + \" + \");              int sum = t1 + t2;             t1 = t2;             t2 = sum;         }     } }\nimport info1.*;  public class FibonacciDemo1{    public static void main(String[] args){      System.out.print(\"Geben Sie ein Zahl an: \");      int a = Console.in.readInt();      System.out.println(\"fib(\"+a+\") = \" + fibonacci(a));    }    private static int fibonacci(int a){      if (a==1||a==2) return 1;      else return fibonacci(a-1)+fibonacci(a-2);    }  }  \n// fibonacci series in java using while loop public class FibonacciSeriesWhileLoop {    public static void main(String[] args)    {       int a = 1, num = 15, num1 = 0, num2 = 1;       System.out.print(\"First \" + num + \" fibonacci sequence: \");       while(a <= num)       {          System.out.print(num1 + \" , \");          int total = num1 + num2;          num1 = num2;          num2 = total;          a++;       }    } }\npublic class Fibonacci {      public static void main(String[] args) {          int i = 1, n = 10, t1 = 0, t2 = 1;         System.out.print(\"First \" + n + \" terms: \");          while (i <= n)         {             System.out.print(t1 + \" + \");              int sum = t1 + t2;             t1 = t2;             t2 = sum;              i++;         }     } }\n// 1 2 3 5 8 13 21 34  public class Fibonacci {      public static void main(String[] args) {          int n = 10, t1 = 0, t2 = 1;         System.out.print(\"First \" + n + \" terms: \");          for (int i = 1; i <= n; ++i)         {             System.out.print(t1 + \" + \");              int sum = t1 + t2;             t1 = t2;             t2 = sum;         }     } }\n",
    "reg_date": "2021-10-12T12:02:40.000Z"
  },
  {
    "id": 1288,
    "keyword": null,
    "link": null,
    "title": " fibunacci java",
    "description": "// WARNING: The function assumes that 'fib(0)=0' and 'fib(1)=1' // Returns the number of the fibonacci sequence at index 'n' public static int fib(int n) { \tif (n < 2) // No difference if '<' or '<=', because 'fib(2)=2'. \t\treturn n; \treturn fib(n-1) + fib(n-2); // Uses the recursion method for solving }\n",
    "reg_date": "2021-10-12T12:02:40.000Z"
  },
  {
    "id": 1289,
    "keyword": null,
    "link": null,
    "title": " file append in java",
    "description": " File file = new File(\"append.txt\"); FileWriter fr = new FileWriter(file, true); BufferedWriter br = new BufferedWriter(fr); PrintWriter pr = new PrintWriter(br); pr.println(\"data\"); pr.close(); br.close(); fr.close(); \n File file = new File(\"append.txt\"); FileWriter fr = new FileWriter(file, true); BufferedWriter br = new BufferedWriter(fr); br.write(\"data\");  br.close(); fr.close(); \n File file = new File(\"append.txt\"); FileWriter fr = new FileWriter(file, true); // parameter 'true' is for append mode fr.write(\"data\"); fr.close(); \n File file = new File(\"append.txt\"); FileWriter fr = new FileWriter(file, true); fr.write(\"data\"); fr.close(); \n",
    "reg_date": "2021-10-12T12:02:40.000Z"
  },
  {
    "id": 1290,
    "keyword": null,
    "link": null,
    "title": " file handling in java",
    "description": "import java.io.*; public class CopyFile {     public static void main(String args[]) throws IOException {         FileInputStream in = null;       FileOutputStream out = null;        try {          in = new FileInputStream(\"input.txt\");          out = new FileOutputStream(\"output.txt\");                    int c;          while ((c = in.read()) != -1) {             out.write(c);          }       }finally {          if (in != null) {             in.close();          }          if (out != null) {             out.close();          }       }    } }\nimport java.io.File;  // Import the File class  File myObj = new File(\"filename.txt\"); // Specify the filename \n",
    "reg_date": "2021-10-12T12:02:40.000Z"
  },
  {
    "id": 1291,
    "keyword": null,
    "link": null,
    "title": " file java class",
    "description": "//when creating a new File(path) the path //will be from the src folder of the proj File path = new File(\"world\"); //this will give the path src/world  //also dont forget that // => /\nimport java.io.File;\n",
    "reg_date": "2021-10-12T12:02:40.000Z"
  },
  {
    "id": 1292,
    "keyword": null,
    "link": null,
    "title": " file to image javafx",
    "description": "Image image = new Image(\"file:\" + path); // \"file:src/resource/photo.jpg\"\n  Image image = new Image(new FileInputStream(selectedFile));   previewPicture.setImage(image);\n",
    "reg_date": "2021-10-12T12:02:41.000Z"
  },
  {
    "id": 1293,
    "keyword": null,
    "link": null,
    "title": " file to multipartfile in java",
    "description": "File file = new File(\"src/test/resources/input.txt\"); FileInputStream input = new FileInputStream(file); MultipartFile multipartFile = new MockMultipartFile(\"file\",             file.getName(), \"text/plain\", IOUtils.toByteArray(input)); \n",
    "reg_date": "2021-10-12T12:02:41.000Z"
  },
  {
    "id": 1294,
    "keyword": null,
    "link": null,
    "title": " filesaver javafx",
    "description": "FileChooser fileChooser = new FileChooser();   //Set extension filter for text files FileChooser.ExtensionFilter extFilter = new FileChooser.ExtensionFilter(\"TXT files (*.txt)\", \"*.txt\"); fileChooser.getExtensionFilters().add(extFilter);  //Show save file dialog File file = fileChooser.showSaveDialog(primaryStage); //Its important towrite showSaveDialog!!!\n",
    "reg_date": "2021-10-12T12:02:41.000Z"
  },
  {
    "id": 1295,
    "keyword": null,
    "link": null,
    "title": " filter and map multiple fields from java stream",
    "description": "// Note that you shouldn't normally use == on objects Predicate<Detail> itemPredicate = d-> item.equals(d.getItem()); Predicate<Detail> namePredicate = d-> name.equals(d.getName());  details.stream()     .filter(itemPredicate.and(namePredicate))     .collect(Collectors.toList());\n",
    "reg_date": "2021-10-12T12:02:41.000Z"
  },
  {
    "id": 1296,
    "keyword": null,
    "link": null,
    "title": " final double in java",
    "description": "Eg. final double PI = 3.14159\n",
    "reg_date": "2021-10-12T12:02:41.000Z"
  },
  {
    "id": 1297,
    "keyword": null,
    "link": null,
    "title": " final finally finalize in java",
    "description": "Final is used to apply restrictions on class, method, and variable. The final class can't be inherited, final method can't be overridden, and final variable value can't be changed. Final is a keyword  On the other hand Finally is used to place important code, it will be executed whether an exception is handled or not. Finally is a block  Lastly Finalize is used to perform clean up processing just before an object is garbage collected. Finalize is a method.  \nFinal is used to apply restrictions on class, method, and variable. The final class can't be inherited, final method can't be overridden, and final variable value can't be changed. Final is a keyword  On the other hand Finally is used to place important code, it will be executed whether an exception is handled or not. Finally is a block  Lastly Finalize is used to perform clean up processing just before an object is garbage collected. Finalize is a method. \nFinal is used to apply restrictions on class, method, and variable. The final class can't be inherited, final method can't be overridden, and final variable value can't be changed. Final is a keyword  On the other hand Finally is used to place important code, it will be executed whether an exception is handled or not. Finally is a block If you have a try/catch block you use otherwise, you cannot use it.  Lastly Finalize is used to perform clean up processing just before an object is garbage collected. Finalize is a method. Garbage Collector use it implicitly\n",
    "reg_date": "2021-10-12T12:02:41.000Z"
  },
  {
    "id": 1298,
    "keyword": null,
    "link": null,
    "title": " final method meaning",
    "description": "When a METHOD is declared with final keyword, it is called a final method.  A final method cannot be OVERRIDEN. when a CLASS is declared final then it cant be INHERITED. when a VARIABLE is declared final its value cant be CHANGED.\n",
    "reg_date": "2021-10-12T12:02:41.000Z"
  },
  {
    "id": 1299,
    "keyword": null,
    "link": null,
    "title": " find a substring in a string java",
    "description": "package hello;  public class SubStringProblem {    public static void main(String[] args) {      // 1st example - You can use the indexOf() method to check if     // a String contains another substring in Java     // if it does then indexOf() will return the starting index of     // that substring, otherwise it will return -1      System.out         .println(\"Checking if one String contains another String using indexOf() in Java\");     String input = \"Java is the best programming language\";     boolean isPresent = input.indexOf(\"Java\") != -1 ? true : false;      if (isPresent) {       System.out.println(\"input string: \" + input);       System.out.println(\"search string: \" + \"Java\");       System.out.println(\"does String contains substring? \" + \"YES\");     }      // indexOf is case-sensitive so if you pass wrong case, you will get wrong     // result     System.out.println(\"Doing search with different case\");     isPresent = input.indexOf(\"java\") != -1 ? true : false;     System.out.println(\"isPresent: \" + isPresent); // false because indeOf() is                                                    // case-sensitive      // 2nd example - You can also use the contains() method to check if     // a String contains another String in Java or not. This method     // returns a boolean, true if substring is found on String, or false     // otherwise.     // if you need boolean use this method rather than indexOf()     System.out         .println(\"Checking if one String contains another String using contains() in Java\");     input = \"C++ is predecessor of Java\";     boolean isFound = input.contains(\"Java\");     if (isFound) {       System.out.println(\"input string: \" + input);       System.out.println(\"search string: \" + \"Java\");       System.out.println(\"does substring is found inside String? \" + \"YES\");     }      // contains is also case-sensitive     System.out.println(\"Searching with different case\");     isFound = input.contains(\"java\");     System.out.println(\"isFound: \" + isFound); // false because indeOf() is                                                // case-sensitive    } }  Output Checking if one String contains another String using indexOf() in Java input string: Java is the best programming language search string: Java does String contain substring? YES Doing search with different case isPresent: false Checking if one String contains another String using contains() in Java input string: C++ is the predecessor of Java search string: Java does substring is found inside String? YES Searching for different case isFound: false\n",
    "reg_date": "2021-10-12T12:02:41.000Z"
  },
  {
    "id": 1300,
    "keyword": null,
    "link": null,
    "title": " find a value in hashmap",
    "description": "if(hashMap.containsKey(key)) {     Object o = hashMap.get(key);  }\n",
    "reg_date": "2021-10-12T12:02:41.000Z"
  },
  {
    "id": 1301,
    "keyword": null,
    "link": null,
    "title": " find all possible substrings of a string java",
    "description": "for (int i = 0; i < A.length(); i++) {     for (int j = i+1; j <= A.length(); j++) {         System.out.println(A.substring(i,j));     } } \n",
    "reg_date": "2021-10-12T12:02:42.000Z"
  },
  {
    "id": 1302,
    "keyword": null,
    "link": null,
    "title": " find average of numbers in array java",
    "description": "public class JavaExample {      public static void main(String[] args) {         double[] arr = {19, 12.89, 16.5, 200, 13.7};         double total = 0;          for(int i=0; i<arr.length; i++){         \ttotal = total + arr[i];         }           /* arr.length returns the number of elements           * present in the array          */         double average = total / arr.length;                  /* This is used for displaying the formatted output          * if you give %.4f then the output would have 4 digits          * after decimal point.          */         System.out.format(\"The average is: %.3f\", average);     } }\njava code to calculate average of array \n",
    "reg_date": "2021-10-12T12:02:42.000Z"
  },
  {
    "id": 1303,
    "keyword": null,
    "link": null,
    "title": " find difference in days between two dates java",
    "description": "String dateStart = \"01/14/2015 08:29:58\"; String dateStop = \"01/15/2015 11:31:48\";  //HH converts hour in 24 hours format (0-23), day calculation SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy HH:mm:ss\");  Date d1 = null; Date d2 = null;  d1 = format.parse(dateStart); d2 = format.parse(dateStop);  //in milliseconds long diff = d2.getTime() - d1.getTime();  long diffSeconds = diff / 1000 % 60; long diffMinutes = diff / (60 * 1000) % 60; long diffHours = diff / (60 * 60 * 1000) % 24; long diffDays = diff / (24 * 60 * 60 * 1000);  System.out.print(diffDays + \" days, \"); System.out.print(diffHours + \" hours, \"); System.out.print(diffMinutes + \" minutes, \"); System.out.print(diffSeconds + \" seconds.\"); \nimport java.util.Date; import java.text.SimpleDateFormat; class Example{    public static void main(String args[]){ \t SimpleDateFormat myFormat = new SimpleDateFormat(\"dd MM yyyy\"); \t String dateBeforeString = \"31 01 2014\"; \t String dateAfterString = \"02 02 2014\";  \t try { \t       Date dateBefore = myFormat.parse(dateBeforeString); \t       Date dateAfter = myFormat.parse(dateAfterString); \t       long difference = dateAfter.getTime() - dateBefore.getTime(); \t       float daysBetween = (difference / (1000*60*60*24));                /* You can also convert the milliseconds to days using this method                 * float daysBetween =                  *         TimeUnit.DAYS.convert(difference, TimeUnit.MILLISECONDS)                 */ \t       System.out.println(\"Number of Days between dates: \"+daysBetween); \t } catch (Exception e) { \t       e.printStackTrace(); \t }    } }\n",
    "reg_date": "2021-10-12T12:02:42.000Z"
  },
  {
    "id": 1304,
    "keyword": null,
    "link": null,
    "title": " find elements in selenium",
    "description": "from selenium import webdriver  chrome_driver_path = 'C:\\Development\\chromedriver.exe' driver = webdriver.Chrome(executable_path=chrome_driver_path)  driver.get('https://www.python.org')  name = driver.find_element_by_name('q') print(name.get_attribute('placeholder'))  python_logo = driver.find_element_by_class_name('python-logo') print(python_logo.size)  documentation_link = driver.find_element_by_css_selector('.documentation-widget a') print(documentation_link.text)  anchor_xpath = driver.find_element_by_xpath('//*[@id=\"search\"]/div[2]/div[6]/div[1]/div/div')) print(anchor_xpath.text) # you can get xpath by right click and inspect > right click on element >  #  >> copy >>> XPath  # you can also search by class selector # id_selector = driver.find_element_by_id('#id')  driver.quit()\n#In Python  #Let's say that we want to locate the h1 tag in this HTML: #<html> #    <head> #        ... some stuff #    </head> #    <body> #        <h1 class=\"someclass\" id=\"greatID\">Super title</h1> #    </body> #</html>  h1 = driver.find_element_by_name('h1') h1 = driver.find_element_by_class_name('someclass') h1 = driver.find_element_by_xpath('//h1') h1 = driver.find_element_by_id('greatID') \n//required imports  WebDriver driver = new ChromeDriver(); WebElement objWE; //There are many way most common are id and xpath objWE = driver.findElement(By.id(\"String of id attribute\")); //To find the xpath easily hit F12 and right click the element you want //and copy xpath then paste it objWE = driver.findElement(By.xpath(\"//*[@id=\"search\"]/div[2]/div[6]/div[1]/div/div\"));\nList<WebElement> elementName = driver.findElements(By.LocatorStrategy(\"LocatorValue\"));\nelementcss= driver.findElement(By.cssSelector('div.nav-search-input'))\nList<WebElement> listOfElements = driver.findElements(By.xpath(\"//div\"));\n",
    "reg_date": "2021-10-12T12:02:42.000Z"
  },
  {
    "id": 1305,
    "keyword": null,
    "link": null,
    "title": " find first element of list java",
    "description": "final Object firstElement = list.stream()   .findFirst()   .orElse(new Object()) //Give a default value if there are no elements    final Object firstElement = list.stream()   .findFirst()   .orElseThrow(() -> new Exception()) //Throw an exception if there are no elements  \n",
    "reg_date": "2021-10-12T12:02:42.000Z"
  },
  {
    "id": 1306,
    "keyword": null,
    "link": null,
    "title": " find highest and lowest of five integers using java loops",
    "description": "//Declare max as Minimum and min as Maximum  int max = Integer.MIN_VALUE, min = Integer.MAX_VALUE;  //Declare Scanner to take input from user  Scanner sc = new Scanner(System.in);  System.out.print(\"Enter 5 integers: \");  //for loop that runs 5 times to take input from user  for (int i = 0; i < 5; ++i) {  int num = sc.nextInt();  //Check if the number is greater than max  if (max < num)  max = num;  //Check if the number is smaller than min  if (min > num)  min = num;  }  //Print the Highest number which is stored in max  System.out.println(\"Highest integer is \" + max); //Print the Lowest number which is stored in min  System.out.println(\"Lowest integer is \" + min);\n",
    "reg_date": "2021-10-12T12:02:42.000Z"
  },
  {
    "id": 1307,
    "keyword": null,
    "link": null,
    "title": " find highest value in keyset java",
    "description": "public class NewClass4 {     public static void main(String[] args)     {         HashMap<Integer,Integer>map=new HashMap<Integer, Integer>();         map.put(1, 50);         map.put(2, 60);         map.put(3, 30);         map.put(4, 60);         map.put(5, 60);         int maxValueInMap=(Collections.max(map.values()));  // This will return max value in the Hashmap         for (Entry<Integer, Integer> entry : map.entrySet()) {  // Itrate through hashmap             if (entry.getValue()==maxValueInMap) {                 System.out.println(entry.getKey());     // Print the key with max value             }         }      } }\ncountMap.entrySet().stream().max((entry1, entry2) -> entry1.getValue() > entry2.getValue() ? 1 : -1).get().getKey();\n",
    "reg_date": "2021-10-12T12:02:42.000Z"
  },
  {
    "id": 1308,
    "keyword": null,
    "link": null,
    "title": " find in line java",
    "description": "// Java program to illustrate the  // findInLine() method of Scanner class in Java   import java.util.*;  import java.util.regex.Pattern;   public class GFG1 {  \tpublic static void main(String[] argv)  \t\tthrows Exception  \t{   \t\ttry {   \t\t\t// Get the string to be searched  \t\t\tString s = \"Geeksforgeeks has Scanner Class Methods\";   \t\t\t// Print the string  \t\t\tSystem.out.println(\"Target String:\\n\" + s);   \t\t\t// create a new scanner  \t\t\t// with the specified String Object  \t\t\tScanner scanner = new Scanner(s);   \t\t\t// finds a pattern of any 5 letter plus \"for\"  \t\t\tSystem.out.println(\"\\nAny 5 letter plus for : \" \t\t\t\t\t\t\t+ scanner.findInLine(  \t\t\t\t\t\t\t\t\tPattern.compile(\".....for\")));   \t\t\t// close the scanner  \t\t\tscanner.close();  \t\t}  \t\tcatch (IllegalStateException e) {  \t\t\tSystem.out.println(\"Exception thrown : \" + e);  \t\t}  \t}  }  \n",
    "reg_date": "2021-10-12T12:02:42.000Z"
  },
  {
    "id": 1309,
    "keyword": null,
    "link": null,
    "title": " find java home path in cmd",
    "description": "Verify JAVA_HOME Open a Command Prompt window (Win⊞ + R, type cmd, hit Enter). Enter the command echo %JAVA_HOME% . This should output the path to your Java installation folder. If it doesn't, your JAVA_HOME variable was not set correctly.\n",
    "reg_date": "2021-10-12T12:02:42.000Z"
  },
  {
    "id": 1310,
    "keyword": null,
    "link": null,
    "title": " find last element in array in java",
    "description": "firstNum = numbers[0]; lastNum = numbers[numbers.length-1];\nfirstNum = numbers.get(0); lastNum = numbers.get(numbers.size() - 1); \n",
    "reg_date": "2021-10-12T12:02:42.000Z"
  },
  {
    "id": 1311,
    "keyword": null,
    "link": null,
    "title": " find length of array java",
    "description": "/** * An Example to get the Array Length is Java */ public class ArrayLengthJava { public static void main(String[] args) { String[] myArray = { \"I\", \"Love\", \"Music\" }; int arrayLength = myArray.length; //array length attribute System.out.println(\"The length of the array is: \" + arrayLength); } } \nInt[] array = {1,2,3}; int lengthOfArray = array.length; /** Finding the length of the array and storing it */ System.out.println(String.valueOf(lengthOfArray)); /** Should print out 3, String.value Of() is optional as printLn does this automatically. */\nlet coolCars = ['ford', 'chevy']; //to find length, use the array's built in method let length = coolCars.length; //length == 2.\narr.length;\nclass Main {   public static void main(String[] args) {     // Creating an array called x.     String[] x = new String[]{\"This\", \"Should\", \"return\", \"4\"};     // \"x.length\" finds the length of the array \"x\".     System.out.println(x.length);     // returns 4   } }\narrayname.length\n",
    "reg_date": "2021-10-12T12:02:43.000Z"
  },
  {
    "id": 1312,
    "keyword": null,
    "link": null,
    "title": " find maven version",
    "description": "mvn --version\n",
    "reg_date": "2021-10-12T12:02:43.000Z"
  },
  {
    "id": 1313,
    "keyword": null,
    "link": null,
    "title": " find max in java",
    "description": "int[] arr = {2, 3, 4, 5, 6, 7, 8, 9,};         int max = arr[0]; // max tanimliyorsun         int min = arr[0];  // min tanimliyorsun          for (int i = 0; i < arr.length; i++) {             if (arr[i] > max){  // array's index are compared with each other, // whichever is greater will be assigned to max                 max = arr[i];             }             if(arr[i] < min){  //array's index are compared with each other, // whichever is smaller will be assigned to min                 min = arr[i];             }         }         System.out.println(max); // 9         System.out.println(min);  // 2\npublic class Test {      public static void main(String args[]) {       System.out.println(Math.max(12.123, 12.456));             System.out.println(Math.max(23.12, 23.0));      } }\n        int[] arr = {2, 3, 4, 5, 6, 7, 8, 9,};         int max = arr[0]; // max tanimliyorsun         int min = arr[0];  // min tanimliyorsun          for (int i = 0; i < arr.length; i++) {             if (arr[i] > max){  // array's index are compared with each other, // whichever is greater will be assigned to max                 max = arr[i];             }             if(arr[i] < min){  //array's index are compared with each other, // whichever is smaller will be assigned to min                 min = arr[i];             }         }         System.out.println(max); // 9         System.out.println(min);  // 2\n",
    "reg_date": "2021-10-12T12:02:43.000Z"
  },
  {
    "id": 1314,
    "keyword": null,
    "link": null,
    "title": " find max in stream java",
    "description": "employees.stream().max(comparator).get();\n",
    "reg_date": "2021-10-12T12:02:43.000Z"
  },
  {
    "id": 1315,
    "keyword": null,
    "link": null,
    "title": " find max integer in arraylist java",
    "description": " List<Integer> list = new ArrayList<Integer>(); Collections.max(list)\n",
    "reg_date": "2021-10-12T12:02:43.000Z"
  },
  {
    "id": 1316,
    "keyword": null,
    "link": null,
    "title": " find maximum number in java",
    "description": "int[] arr = {2, 3, 4, 5, 6, 7, 8, 9,};         int max = arr[0]; // max tanimliyorsun         int min = arr[0];  // min tanimliyorsun          for (int i = 0; i < arr.length; i++) {             if (arr[i] > max){  // array's index are compared with each other, // whichever is greater will be assigned to max                 max = arr[i];             }             if(arr[i] < min){  //array's index are compared with each other, // whichever is smaller will be assigned to min                 min = arr[i];             }         }         System.out.println(max); // 9         System.out.println(min);  // 2\n        int[] arr = {2, 3, 4, 5, 6, 7, 8, 9,};         int max = arr[0]; // max tanimliyorsun         int min = arr[0];  // min tanimliyorsun          for (int i = 0; i < arr.length; i++) {             if (arr[i] > max){  // array's index are compared with each other, // whichever is greater will be assigned to max                 max = arr[i];             }             if(arr[i] < min){  //array's index are compared with each other, // whichever is smaller will be assigned to min                 min = arr[i];             }         }         System.out.println(max); // 9         System.out.println(min);  // 2\n",
    "reg_date": "2021-10-12T12:02:43.000Z"
  },
  {
    "id": 1317,
    "keyword": null,
    "link": null,
    "title": " find min in array java",
    "description": "private static int findMin(int[] array) { \t\tint min = array[0]; \t\tfor(int i=1;i<array.length;i++) { \t\t\tif(min > array[i]) { \t\t\t\tmin = array[i]; \t\t\t} \t\t} \t\treturn min; \t}\npublic static double arrayMax(double[] arr) {     double max = Double.NEGATIVE_INFINITY;      for(double cur: arr)         max = Math.max(max, cur);      return max; }\npackage com.concerned.crossbill;  import java.util.Arrays;  public class Foo {    public int getMin(int[] numbers) { \treturn Arrays.stream(numbers).min().getAsInt();   } } // test class import org.junit.Test; import static org.junit.Assert.assertEquals; import com.concerned.crossbill.Foo;  public class FooTest {    public void testGetMin() {     int[] numbers =  new int[]{12, 10, 31, 30, 23, 4, 5, 5, 5, 5, 10, 40};          Foo foo = new Foo();     int result  = foo.getMin(numbers);     int expResult  = 4;          assertEquals(expResult, result);   } }\nimport java.util.Random;  public class Main {  public static void main(String[] args) {    int a[] = new int [100];    Random rnd = new Random ();      for (int i = 0; i< a.length; i++) {         a[i] = rnd.nextInt(99-0)+0;         System.out.println(a[i]);     }      int max = 0;                for (int i = 0; i < a.length; i++) {         a[i] = max;           for (int j = i+1; j<a.length; j++) {             if (a[j] > max) {                max = a[j];             }          }     }      System.out.println(\"Max element: \" + max); } }\nInteger[] num = { 2, 4, 7, 5, 9 };         // using Collections.min() to find minimum element         // using only 1 line.         int min1 = Collections.min(Arrays.asList(num));          // using Collections.max() to find maximum element         // using only 1 line.         int max1 = Collections.max(Arrays.asList(num));         System.out.println(min1); // 2          System.out.println(max1); // 9\n Scanner input = new Scanner(System.in);         // Minimum And Maximum          int count = 0;         int min = 0;         int max = 0;         boolean bugSolved = true; \t\t/* or we can use :         int min = Integer.MAX_VALUE;         int max = Integer.MIN_VALUE;         */ \t\t         while (true){             int cnt = count++;             System.out.print(\"Enter Number #\"+(cnt+1)+\": \");             boolean isValid = input.hasNextInt();             if(isValid){                int num = input.nextInt();                /* if (bugSolved){                    bugSolved = false;                    min = num;                    max = num;                }  # Just remove this condition and                 \tboolean (bugSolved) at the top, if you use                 \tint min = Integer.MAX_VALUE and int max =                  Integer.MIN_VALUE */                 if (num < min) {                     min = num;                 }else if (num > max){                     max = num;                 }             }else{                 System.out.println(\"Invalid input..\");                 break;             }             input.nextLine();         }         System.out.println(\"Min Number : \" + min);         System.out.println(\"Max Number : \" + max);\n",
    "reg_date": "2021-10-12T12:02:43.000Z"
  },
  {
    "id": 1318,
    "keyword": null,
    "link": null,
    "title": " find minimum number in array java",
    "description": "private static int findMin(int[] array) { \t\tint min = array[0]; \t\tfor(int i=1;i<array.length;i++) { \t\t\tif(min > array[i]) { \t\t\t\tmin = array[i]; \t\t\t} \t\t} \t\treturn min; \t}\n// Find minimum and maximum values in a java array public class MaxMinValueInArray {    public static void main(String[] args)     {       int[] arrNumber = new int[]{50, 150, 250, 500, 160, 530};       int maximum = maxNumber(arrNumber);       System.out.println(\"Maximum value : \" + maximum);       // calling min function java       int minimum = minNumber(arrNumber);       System.out.println(\"Minimum value : \" + minimum);    }    // java find max in array    public static int maxNumber(int[] arr)    {       int maximumValue = arr[0];       for(int a = 1; a < arr.length; a++)       {          if(arr[a] > maximumValue)          {             maximumValue = arr[a];          }       }       return maximumValue;    }    // java min of array    public static int minNumber(int[] arr)    {       int minimumValue = arr[0];       // find minimum value in array java       for(int a = 1; a < arr.length; a++)       {          if(arr[a] < minimumValue)          {             minimumValue = arr[a];          }       }       return minimumValue;    } }\npublic class MinimumNumber{   public static void main(String[] args){     int[] arr=new int[]{2,3,4,1};     int min=arr[0];     for(int i=0;i<arr.length;i++){       if(arr[i]<min){         min=arr[i];       }     }     System.out.println(\"Minimum Number in array:\"+min);   } }\nInteger[] num = { 2, 4, 7, 5, 9 };         // using Collections.min() to find minimum element         // using only 1 line.         int min1 = Collections.min(Arrays.asList(num));          // using Collections.max() to find maximum element         // using only 1 line.         int max1 = Collections.max(Arrays.asList(num));         System.out.println(min1); // 2          System.out.println(max1); // 9\n",
    "reg_date": "2021-10-12T12:02:43.000Z"
  },
  {
    "id": 1319,
    "keyword": null,
    "link": null,
    "title": " find minimum number in java",
    "description": "int[] arr = {2, 3, 4, 5, 6, 7, 8, 9,};         int max = arr[0]; // max tanimliyorsun         int min = arr[0];  // min tanimliyorsun          for (int i = 0; i < arr.length; i++) {             if (arr[i] > max){  // array's index are compared with each other, // whichever is greater will be assigned to max                 max = arr[i];             }             if(arr[i] < min){  //array's index are compared with each other, // whichever is smaller will be assigned to min                 min = arr[i];             }         }         System.out.println(max); // 9         System.out.println(min);  // 2\n Scanner input = new Scanner(System.in);         // Minimum And Maximum          int count = 0;         int min = 0;         int max = 0;         boolean bugSolved = true; \t\t/* or we can use :         int min = Integer.MAX_VALUE;         int max = Integer.MIN_VALUE;         */ \t\t         while (true){             int cnt = count++;             System.out.print(\"Enter Number #\"+(cnt+1)+\": \");             boolean isValid = input.hasNextInt();             if(isValid){                int num = input.nextInt();                /* if (bugSolved){                    bugSolved = false;                    min = num;                    max = num;                }  # Just remove this condition and                 \tboolean (bugSolved) at the top, if you use                 \tint min = Integer.MAX_VALUE and int max =                  Integer.MIN_VALUE */                 if (num < min) {                     min = num;                 }else if (num > max){                     max = num;                 }             }else{                 System.out.println(\"Invalid input..\");                 break;             }             input.nextLine();         }         System.out.println(\"Min Number : \" + min);         System.out.println(\"Max Number : \" + max);\n",
    "reg_date": "2021-10-12T12:02:43.000Z"
  },
  {
    "id": 1320,
    "keyword": null,
    "link": null,
    "title": " find minimum value in list java",
    "description": "import java.util.ArrayList; import java.util.Collections; import java.util.List;  public static Integer findMin(List<Integer> list)     {            // check list is empty or not         if (list == null || list.size() == 0) {             return Integer.MAX_VALUE;         }            // create a new list to avoid modification          // in the original list         List<Integer> sortedlist = new ArrayList<>(list);            // sort list in natural order         Collections.sort(sortedlist);            // first element in the sorted list         // would be minimum         return sortedlist.get(0);     }\n",
    "reg_date": "2021-10-12T12:02:44.000Z"
  },
  {
    "id": 1321,
    "keyword": null,
    "link": null,
    "title": " find number of digits in a number java",
    "description": "(int)Math.floor(Math.log10(Your_number_name_goes_here) + 1); \nimport java.util.Scanner; public class CountingDigitsInInteger {    public static void main(String args[]){       Scanner sc = new Scanner(System.in);       int count = 0;       System.out.println(\"Enter a number ::\");       int num = sc.nextInt();       while(num!=0){          num = num/10;          count++;       }       System.out.println(\"Number of digits in the entered integer are :: \"+count);    } }\n",
    "reg_date": "2021-10-12T12:02:44.000Z"
  },
  {
    "id": 1322,
    "keyword": null,
    "link": null,
    "title": " find number of occurrences of a substring in a string java",
    "description": "public class StringNumberOfOccurenceLetter {      private static int countOccurences(String word, char character){          int count = 0;         for (int i = 0; i < word.length() ; i++) {             if (word.charAt(i)==character){                 count++;             }         }         return count;      }          public static void main(String[] args) {           int count = countOccurences(\"dddssad\", 'a');     }   }\npublic static int count(String str, String target) {     return (str.length() - str.replace(target, \"\").length()) / target.length(); } \n",
    "reg_date": "2021-10-12T12:02:44.000Z"
  },
  {
    "id": 1323,
    "keyword": null,
    "link": null,
    "title": " find object with same attribute java stream",
    "description": "Optional<Person> matchingObject = objects.stream().     filter(p -> p.email().equals(\"testemail\")).     findFirst(); \n",
    "reg_date": "2021-10-12T12:02:44.000Z"
  },
  {
    "id": 1324,
    "keyword": null,
    "link": null,
    "title": " find shortest string in array java",
    "description": "public static String smallest(String words[]) {     if (words == null || words.length < 1) {         return \"\";     }     String smallest = words[0];     for (int i = 1; i < words.length; i++) {         if (words[i].length() < smallest.length()) {             smallest = words[i];         }     }     return smallest; }// smallest\n",
    "reg_date": "2021-10-12T12:02:44.000Z"
  },
  {
    "id": 1325,
    "keyword": null,
    "link": null,
    "title": " find sum of first and last digits in java",
    "description": " public class Main {      public static void main(String[] args) {         System.out.println(sumFirstAndLastDigit(1221));         System.out.println(sumFirstAndLastDigit(2342));         System.out.println(sumFirstAndLastDigit(10));         System.out.println(sumFirstAndLastDigit(-123)); \t// write your code here     }     public static int sumFirstAndLastDigit(int number){         if (number<0){             return -1;  //checking boundary conditions         }         else if(number==0){             return 0;         }         else{             int lastDigit=number\u0010; // to extract last significant digit             while(number>=10){                 number=number/10;             }             int firstDigit=number;             return (lastDigit+firstDigit);         }     }\n",
    "reg_date": "2021-10-12T12:02:44.000Z"
  },
  {
    "id": 1326,
    "keyword": null,
    "link": null,
    "title": " find the frequency of characters in a string in java",
    "description": "+++METHOD WITH NONDUP+++ public static String FrequencyOfChars(String str) {  String nonDup = \"\";  for(int i=0; i < str.length(); i++)  if(!nonDup.contains(\"\"+str.charAt(i)))  nonDup+= \"\"+str.charAt(i);   String expectedResult = \"\";  for( int j=0;j < nonDup.length(); j++) {  int count = 0;  for(int i=0; i < str.length(); i++) {  if(str.charAt(i) == nonDup.charAt(j))  count++; }  expectedResult +=nonDup.charAt(j)+\"\" + count; }  return expectedResult; }    +++METHOD WITH REPLACE METHOD+++    public  static  String  FrequencyOfChars(String str) {  String expectedResult = \"\";  for( int j=0; j < str.length(); j++) {  int count = 0;  for(int i=0; i < str.length(); i++) {  if(str.charAt(i) == str.charAt(j)) {  count++; } }  expectedResult +=str.charAt(j)+\"\" + count;  str = str.replace(\"\"+str.charAt(j) ,  \"\" );  }  return expectedResult;  }  +++WITH LINKED HASH SET+++   public  static  String  FrequencyOfChars(String str) {  String b=new LinkedHashSet<>(Arrays.asList(str.split(\"\"))).toString();    b = b.replace(\", \",\"\").replace(\"[\",\"\").replace(\"]\",\"\");  String result=\"\";  for(int j=0; j<b.length();j++) {  int count=0;  for(int i=0; i<str.length(); i++){  if(str.substring(i, i+1).equals(\"\"+str.charAt(j)))  count++;  }  result+=b.substring(j, j+1)+count;  }  return result;  }  ++++LAST METHOD USING COLLECTIONS+++   public static String frequency(String str) {  String nonDup=\"\", result=\"\";  for(int i=0; i < str.length(); i++)  if(! nonDup.contains(\"\"+str.charAt(i)))  nonDup += \"\"+str.charAt(i);     for(int i=0; i < nonDup.length(); i++) {  int num = Collections.frequency( Arrays.asList(str.split(\"\") ) ,    \"\"+nonDup.charAt( i ) );  result += \"\"+nonDup.charAt(i) + num;  }     return result;  }\npublic class Frequency    {        public static void main(String[] args) {           String str = \"picture perfect\";           int[] freq = new int[str.length()];           int i, j;                      //Converts given string into character array           char string[] = str.toCharArray();                      for(i = 0; i <str.length(); i++) {               freq[i] = 1;               for(j = i+1; j <str.length(); j++) {                   if(string[i] == string[j]) {                       freq[i]++;                                  //Set string[j] to 0 to avoid printing visited character                       string[j] = '0';                   }               }           }           //Displays the each character and their corresponding frequency           System.out.println(\"Characters and their corresponding frequencies\");           for(i = 0; i <freq.length; i++) {               if(string[i] != ' ' && string[i] != '0')                   System.out.println(string[i] + \"-\" + freq[i]);           }       }   }  \nHashMap<Character, Integer> map = new HashMap<Character, Integer>(); String s = \"aasjjikkk\"; for (int i = 0; i < s.length(); i++) {     char c = s.charAt(i);     Integer val = map.get(c);     if (val != null) {         map.put(c, new Integer(val + 1));     }     else {        map.put(c, 1);    } }\n",
    "reg_date": "2021-10-12T12:02:44.000Z"
  },
  {
    "id": 1327,
    "keyword": null,
    "link": null,
    "title": " find the greatest number in hashmap",
    "description": "public class NewClass4 {     public static void main(String[] args)     {         HashMap<Integer,Integer>map=new HashMap<Integer, Integer>();         map.put(1, 50);         map.put(2, 60);         map.put(3, 30);         map.put(4, 60);         map.put(5, 60);         int maxValueInMap=(Collections.max(map.values()));  // This will return max value in the Hashmap         for (Entry<Integer, Integer> entry : map.entrySet()) {  // Itrate through hashmap             if (entry.getValue()==maxValueInMap) {                 System.out.println(entry.getKey());     // Print the key with max value             }         }      } }\n",
    "reg_date": "2021-10-12T12:02:44.000Z"
  },
  {
    "id": 1328,
    "keyword": null,
    "link": null,
    "title": " find the maximum number from an int Array",
    "description": "def return_largest_element(array):     largest = 0     for x in range(0, len(array)):         if(array[x] > largest):             largest = array[x]     return largest\n---without sort method--- public static int maxValue( int[]  n ) {  int max = Integer.MIN_VALUE;  for(int each: n)  if(each > max)  max = each;    return max;    ---with sort method--- public static int maxValue( int[]  n ) {  Arrays.sort( n );  return  n [ n.lenth-1 ];  }\nint max; max=INT_MIN;  for(int i=0;i<ar.length();i++){ \tif(ar[i]>max){     \tmax=ar[i];     }         \n",
    "reg_date": "2021-10-12T12:02:44.000Z"
  },
  {
    "id": 1329,
    "keyword": null,
    "link": null,
    "title": " find where JAVA HOME is set",
    "description": "grep JAVA_HOME /etc/environment /etc/bash.bashrc /etc/profile.d/* /etc/profile \n/usr/libexec/java_home\n",
    "reg_date": "2021-10-12T12:02:44.000Z"
  },
  {
    "id": 1330,
    "keyword": null,
    "link": null,
    "title": " findby in grails",
    "description": "def b = Book.findByTitle(\"The Shining\")      b = Book.findByTitleAndAuthor(\"The Sum of All Fears\", \"Tom Clancy\")     b = Book.findByReleaseDateBetween(firstDate, new Date())     b = Book.findByReleaseDateGreaterThanEquals(firstDate)     b = Book.findByReleaseDateLessThanEquals(firstDate)     b = Book.findByTitleLike(\"%Hard work%\")     b = Book.findByTitleIlike(\"%Hard work%\") // ignores case     b = Book.findByTitleNotEqual(\"Harry Potter\")     b = Book.findByReleaseDateIsNull()     b = Book.findByReleaseDateIsNotNull()     b = Book.findPaperbackByAuthor(\"Douglas Adams\")     b = Book.findNotPaperbackByAuthor(\"Douglas Adams\")     b = Book.findByAuthorInList([\"Douglas Adams\", \"Hunter S. Thompson\"])\n",
    "reg_date": "2021-10-12T12:02:45.000Z"
  },
  {
    "id": 1331,
    "keyword": null,
    "link": null,
    "title": " finding absolute value in java",
    "description": "import java.lang.Math; int sum,x=-5; sum = Math.abs(x);\npublic class Test {      public static void main(String args[]) {       Integer a = -8;       double d = -100;       float f = -90;        System.out.println(Math.abs(a));       System.out.println(Math.abs(d));            System.out.println(Math.abs(f));        } }\nabs(intx);\n",
    "reg_date": "2021-10-12T12:02:45.000Z"
  },
  {
    "id": 1332,
    "keyword": null,
    "link": null,
    "title": " firebase auth dependency",
    "description": "implementation 'com.google.firebase:firebase-auth:20.0.2'\n//Firebase Auth      implementation 'com.google.firebase:firebase-auth:20.0.2'     //Firebase Auth Ui     implementation 'com.firebaseui:firebase-ui-auth:5.0.0'\n",
    "reg_date": "2021-10-12T12:02:45.000Z"
  },
  {
    "id": 1333,
    "keyword": null,
    "link": null,
    "title": " firebase connecten",
    "description": "package com.example.phonechat;  import androidx.annotation.NonNull; import androidx.appcompat.app.AppCompatActivity;  import android.content.Intent; import android.os.Bundle; import android.view.View; import android.widget.Button; import android.widget.EditText; import android.widget.Toast;  import com.google.android.gms.tasks.OnCompleteListener; import com.google.android.gms.tasks.Task; import com.google.firebase.auth.AuthResult; import com.google.firebase.auth.FirebaseAuth; import com.google.firebase.auth.FirebaseUser;  import java.util.HashMap; import java.util.Map; import java.util.concurrent.Executor;  public class RegistrationActivity extends AppCompatActivity {       private Button mRegistration;     private EditText mEmail, mPassowrd, mName;      private FirebaseAuth mAuth;     private FirebaseAuth.AuthStateListener firebaseAuthStateListener;      @Override     protected void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         setContentView(R.layout.activity_login);          firebaseAuthStateListener = new FirebaseAuth.AuthStateListener() {             @Override             public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {                 FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();                 if (user!=null) {                     Intent intent = new Intent(getApplication(), MainActivity.class);                     intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);                     startActivity(intent);                     finish();                     return;                 }              }         };         mAuth = FirebaseAuth.getInstance();          mRegistration = findViewById(R.id.registration);         mEmail = findViewById(R.id.gmail);         mName = findViewById(R.id.name);         mPassowrd = findViewById(R.id.password);           mRegistration.setOnClickListener(new View.OnClickListener() {             @Override             public void onClick(View v) {                 final String name = mName.getText().toString();                 final String email = mEmail.getText().toString();                 final String password = mPassowrd.getText().toString();                 mAuth.createUserWithEmailAndPassword(email, password).addOnCompleteListener(activity: getApplication(), new OnCompleteListener<AuthResult>() {                     @Override                     public void onComplete(@NonNull Task<AuthResult> task) {                         if (!task.isSuccessful()) {                             Toast.makeText(getApplicationContext(), \"Sign in ERROR\", Toast.LENGTH_SHORT).show();                          }else{                             String userId = mAuth.getCurrentUser().getUid();                             DatabaseRefere currentUSerDb = FirebaseDatabase.getInstace().getRefernce().child(\"users\").child(userId);                              Map userinfo = new HashMap<>();                             userInfo.put( k: \"email\", email);                             userInfo.put( k: \"name\", name);                             userInfo.put( k: \"profileImageErl\", v: \"default\");                              currentUSerDb.updateChilderen(userInfo);                          }                     }                 });             }         });      }     @Override     protected void  onStart() {         super.onStart();         mAuth.addAuthStateListener(firebaseAuthStateListener);       }     @Override     protected void onStop() {         super.onStop();         mAuth.removeAuthStateListener(firebaseAuthStateListener);      } } \n",
    "reg_date": "2021-10-12T12:02:45.000Z"
  },
  {
    "id": 1334,
    "keyword": null,
    "link": null,
    "title": " firebase firestore dependency",
    "description": "if you are using firebase bom then don't mention version (x.y.z) highly recomended to use firebase bom   dependencies {     // Import the BoM for the Firebase platform     implementation platform('com.google.firebase:firebase-bom:28.2.0')      // Declare the dependency for the Cloud Firestore library     // When using the BoM, you don't specify versions in Firebase library dependencies     implementation 'com.google.firebase:firebase-firestore' }  \n",
    "reg_date": "2021-10-12T12:02:45.000Z"
  },
  {
    "id": 1335,
    "keyword": null,
    "link": null,
    "title": " firebase storage dependency",
    "description": "dependencies {     // Import the BoM for the Firebase platform     implementation platform('com.google.firebase:firebase-bom:28.2.0')      // Declare the dependency for the Cloud Storage library     // When using the BoM, you don't specify versions in Firebase library dependencies     implementation 'com.google.firebase:firebase-storage' } \n",
    "reg_date": "2021-10-12T12:02:45.000Z"
  },
  {
    "id": 1336,
    "keyword": null,
    "link": null,
    "title": " firebase user name java",
    "description": "FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser(); if (user != null) {     // Name, email address, and profile photo Url     String name = user.getDisplayName();     String email = user.getEmail();     Uri photoUrl = user.getPhotoUrl();      // Check if user's email is verified     boolean emailVerified = user.isEmailVerified();      // The user's ID, unique to the Firebase project. Do NOT use this value to     // authenticate with your backend server, if you have one. Use     // FirebaseUser.getIdToken() instead.     String uid = user.getUid(); }\n",
    "reg_date": "2021-10-12T12:02:45.000Z"
  },
  {
    "id": 1337,
    "keyword": null,
    "link": null,
    "title": " firestore add to field array",
    "description": "DocumentReference washingtonRef = db.collection(\"cities\").document(\"DC\");  // Atomically add a new region to the \"regions\" array field. washingtonRef.update(\"regions\", FieldValue.arrayUnion(\"greater_virginia\"));  // Atomically remove a region from the \"regions\" array field. washingtonRef.update(\"regions\", FieldValue.arrayRemove(\"east_coast\"));\n",
    "reg_date": "2021-10-12T12:02:45.000Z"
  },
  {
    "id": 1338,
    "keyword": null,
    "link": null,
    "title": " fizzbuzz java",
    "description": "public static String fizzBuzz(int number) {         if (number % 3 == 0) {             if (number % 5 == 0) {                 return \"fizzbuzz\";             } else {                 return \"fizz\";             }         } else if (number % 5 == 0) {             return \"buzz\";         }         return String.valueOf(number);     }\nclass FizzBuzz {   public static void main(String[] args) {     for (int i=1; i<=100; i++) {       if (i\u0015==0) {         System.out.println(\"FizzBuzz\");       } else if (i%5==0) {         System.out.println(\"Buzz\");       } else if (i%3==0) {         System.out.println(\"Fizz\");       } else {         System.out.println(i);       }     }   } }\n",
    "reg_date": "2021-10-12T12:02:45.000Z"
  },
  {
    "id": 1339,
    "keyword": null,
    "link": null,
    "title": " flink prometheus alert on failed jobs",
    "description": "absent(flink_jobmanager_job_uptime) == 1 \n",
    "reg_date": "2021-10-12T12:02:45.000Z"
  },
  {
    "id": 1340,
    "keyword": null,
    "link": null,
    "title": " float array example",
    "description": "//To declare and initialize array of float in Java use following float array[] = new float[]{1,2,3};\n",
    "reg_date": "2021-10-12T12:02:46.000Z"
  },
  {
    "id": 1341,
    "keyword": null,
    "link": null,
    "title": " float random class java",
    "description": "import java.util.Random; public class Example {    public static void main(String[] args) {       Random rd = new Random(); // creating Random object       System.out.println(rd.nextFloat()); // displaying a random float value between 0.0 and 1.0    } }\n",
    "reg_date": "2021-10-12T12:02:46.000Z"
  },
  {
    "id": 1342,
    "keyword": null,
    "link": null,
    "title": " float to string java",
    "description": "String.valueOf(float floatNum); /**use String.valueOf to convert num to string */\n",
    "reg_date": "2021-10-12T12:02:46.000Z"
  },
  {
    "id": 1343,
    "keyword": null,
    "link": null,
    "title": " floatingactionbutton image color",
    "description": "app:tint=\"@android:color/white\" \n",
    "reg_date": "2021-10-12T12:02:46.000Z"
  },
  {
    "id": 1344,
    "keyword": null,
    "link": null,
    "title": " floor in java",
    "description": "Math.floor(value);\nThe floor of a floating point number is the largest integer that is <= to the number.\n",
    "reg_date": "2021-10-12T12:02:46.000Z"
  },
  {
    "id": 1345,
    "keyword": null,
    "link": null,
    "title": " flutter",
    "description": "Flutter is an open-source UI software development kit created by Google.  It is used to develop applications for Android, iOS, Linux, Mac,  Windows, Google Fuchsia,[4] and the web from a single codebase.\nLets gooooo! https://www.youtube.com/watch?v=x0uinJvhNxI\nmedium has the best documentation for flutter rather then flutter.dev\nC:\\src>git clone https://github.com/flutter/flutter.git -b stable \nFlutter  $ flutter channel beta $ flutter upgrade $ flutter config --enable-web    \n$ export PATH=\"$PATH:[PATH_OF_FLUTTER_GIT_DIRECTORY]/bin\" \nfinal inputImage = InputImage.fromFilePath(filePath); \nIt is a mobile development framework. Made by Google. You can visit flutter.dev for more info. Happy coding\n// Google owns Flutter. // Google usually quits such projects after a few years.\n",
    "reg_date": "2021-10-12T12:02:46.000Z"
  },
  {
    "id": 1346,
    "keyword": null,
    "link": null,
    "title": " flutter Exception in thread \"main\" java.lang.NoClassDefFoundError: javax/xml/bind/annotation/XmlSchema at",
    "description": "#Installing Android SDK Command-line tools from Android SDK Manager 1- Open Tools > SDK Manager 2-From the left choose, Appearance & Behavior > System Settings > Android SDK 3-Select SDK Tools from the top menu 4- Check Android SDK Command-line tools and click 'apply'.\n",
    "reg_date": "2021-10-12T12:02:46.000Z"
  },
  {
    "id": 1347,
    "keyword": null,
    "link": null,
    "title": " flutter doctor –android-licenses gives a java error",
    "description": "[Solved] flutter doctor &ndash;android-licenses gives a java error \n",
    "reg_date": "2021-10-12T12:02:46.000Z"
  },
  {
    "id": 1348,
    "keyword": null,
    "link": null,
    "title": " flutter doctor --android-licenses java error",
    "description": "# ANdroid Studio: Install Android SDK Command-line Tools: > Tools > SDK Manager > Appareance & Behavior > System Setting> Android SDK \t> SDK Tools > Android SDK Command-line Tools (apply)  flutter doctor --android-licenses flutter doctor -v\nInstalling Android SDK Command-line tools from Android SDK Manager did the job for me.  Open Tools > SDK Manager From the left choose, Appearance & Behavior > System Settings > Android SDK Select SDK Tools from the top menu Check Android SDK Command-line tools and click 'apply'.\n[Solved] flutter doctor &ndash;android-licenses gives a java error \n",
    "reg_date": "2021-10-12T12:02:46.000Z"
  },
  {
    "id": 1349,
    "keyword": null,
    "link": null,
    "title": " flutter remove last caracter from string",
    "description": "public static String removeLastCharacter(String str) {    \tString result = null;        if ((str != null) && (str.length() > 0)) {           \tresult = str.substring(0, str.length() - 1);        }             return result; }\n",
    "reg_date": "2021-10-12T12:02:46.000Z"
  },
  {
    "id": 1350,
    "keyword": null,
    "link": null,
    "title": " flutterwave bvn api",
    "description": "var request = require('request'); var options = {   'method': 'POST',   'url': 'https://rave-api-v2.herokuapp.com/v3/kyc/bvns/12345678019',   'headers': {     'Authorization': 'Bearer {{SEC_KEY}}'   } }; request(options, function (error, response) {    if (error) throw new Error(error);   console.log(response.body); }); \n",
    "reg_date": "2021-10-12T12:02:47.000Z"
  },
  {
    "id": 1351,
    "keyword": null,
    "link": null,
    "title": " font parameters java",
    "description": "Font smallFont = new Font(\"Monospaced\", Font.PLAIN, 10);   Font bigFont = new Font(\"Serif\", Font.BOLD, 18);\npublic Font (java.lang.String name, int style, int size)\npublic class UseSample {     public static void main(String [] args) {         Sample s1 = new Sample(1, 2);         Sample s2 = new Sample(3, 4);                         Sample.ourData = Sample.method1(s2) * s2.method3(s1);                          s1.myData = this.ourData + counter;                          s2.myInfo = s1.method2(s1) * s2.ourData;                          Sample.counter += Sample.method4(s1) + 7;     } } \n",
    "reg_date": "2021-10-12T12:02:47.000Z"
  },
  {
    "id": 1352,
    "keyword": null,
    "link": null,
    "title": " for-each loop in java",
    "description": "int [] intArray = { 10, 20, 30, 40, 50 };          for( int value : intArray ) {    System.out.println( value ); }\n//itemset contains variables of type <Data Type> for(<Data Type> item : itemset) {   //loop }\nList<String> someList = new ArrayList<String>(); // add \"monkey\", \"donkey\", \"skeleton key\" to someList for (String item : someList) {     System.out.println(item); }\n// definition eine Datenstruktur, hier ein Array mit 9 Werten int[] array = new int[]{4, 8, 4, 2, 2, 1, 1, 5, 9};  // ForEach Schleife for( int k: array ) { \tSystem.out.println(\"k = \"+k); } \n// for each loop in java example import java.util.*; public class ForEachLoopExample {    public static void main(String[] args)    {       int[] numbers = {2, 4, 6, 8, 10};       // for each loop       for(int n : numbers)       {          System.out.println(n);       }    } }\n// syntax for(<DataType of array><variablename> : <Array to be iterated>) {    // code }\n",
    "reg_date": "2021-10-12T12:02:47.000Z"
  },
  {
    "id": 1353,
    "keyword": null,
    "link": null,
    "title": " for each java",
    "description": "list.forEach((MyType myObject) -> {/* code */});\nconst fruits = ['mango', 'papaya', 'pineapple', 'apple'];  // Iterate over fruits below  // Normal way fruits.forEach(function(fruit){   console.log('I want to eat a ' + fruit) });\nint [] intArray = { 10, 20, 30, 40, 50 };          for( int value : intArray ) {    System.out.println( value ); }\n//itemset contains variables of type <Data Type> for(<Data Type> item : itemset) {   //loop }\npublic class ForEachLoopExample {    public static void main(String[] args)    {       int[] numbers = {2, 4, 6, 8, 10};       // for each loop       for(int n : numbers)       {          System.out.println(n);       }    } }\npublic class JavaArray {      public static void main(String[] s) {         int[] age = new int[5];         age[0] = 21;         age[1] = 23;         age[2] = 45;         age[3] = 31;         age[4] = 33;         for (int a : age) {             System.out.println(\"age= \" + a);         }      } } \n",
    "reg_date": "2021-10-12T12:02:47.000Z"
  },
  {
    "id": 1354,
    "keyword": null,
    "link": null,
    "title": " for each loop java string array",
    "description": "//iteration by using the enhanced for loop provided by Java 5 or later for (String str : strArray3) { System.out.print(str); } \n",
    "reg_date": "2021-10-12T12:02:47.000Z"
  },
  {
    "id": 1355,
    "keyword": null,
    "link": null,
    "title": " for each loop string java",
    "description": "for (char ch: \"xyz\".toCharArray()) {   System.out.println(ch);  }\nString s = \"xyz\" for (char ch: s.toCharArray()) {   System.out.println(ch); }\n// definition eine Datenstruktur, hier ein Array mit 9 Werten int[] array = new int[]{4, 8, 4, 2, 2, 1, 1, 5, 9};  // ForEach Schleife for( int k: array ) { \tSystem.out.println(\"k = \"+k); } \n// for each loop in java example import java.util.*; public class ForEachLoopExample {    public static void main(String[] args)    {       int[] numbers = {2, 4, 6, 8, 10};       // for each loop       for(int n : numbers)       {          System.out.println(n);       }    } }\n",
    "reg_date": "2021-10-12T12:02:47.000Z"
  },
  {
    "id": 1356,
    "keyword": null,
    "link": null,
    "title": " for javascipt",
    "description": "var colors=[\"red\",\"blue\",\"green\"]; for (let i = 0; i < colors.length; i++) {    console.log(colors[i]); }\nconst array = ['hello', 'world', 'of', 'Corona'];  for (const item of array) {   console.log(item); }\nfor (let i = 0; i < 9; i++) {   str = str + i; }\n",
    "reg_date": "2021-10-12T12:02:47.000Z"
  },
  {
    "id": 1357,
    "keyword": null,
    "link": null,
    "title": " for loop in java",
    "description": "for(int i = 0; i < 10; i++) {   //do something      //NOTE: the integer name does not need to be i, and the loop   //doesn't need to start at 0. In addition, the 10 can be replaced   //with any value. In this case, the loop will run 10 times.   //Finally, the incrementation of i can be any value, in this case,   //i increments by one. To increment by 2, for example, you would   //use \"i += 2\", or \"i = i+2\" }\n// Starting on 0: for(int i = 0; i < 5; i++) {   System.out.println(i + 1); }  // Starting on 1: for(int i = 1; i <= 5; i++) {   System.out.println(i); }   // Both for loops will iterate 5 times, // printing the numbers 1 - 5.\nint values[] = {1,2,3,4}; for(int i = 0; i < values.length; i++) {  \tSystem.out.println(values[i]);  }\nString[] cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"}; for (String i : cars) {   System.out.println(i); }\nfor(int i=0; i<10; i++){\t//creates a counting vatiable i set to 0   \t\t\t\t\t\t\t//as long as i is < 10 (as long the condition is true)   \t\t\t\t\t\t\t// i is increased by one every cycle //do some stuff }\n// for loop in java public class ForLoop {    public static void main(String[] args)    {       for(int x = 1; x <= 5; x++)       {          System.out.println(x);       }    } }\n",
    "reg_date": "2021-10-12T12:02:47.000Z"
  },
  {
    "id": 1358,
    "keyword": null,
    "link": null,
    "title": " for loop in java as long as array",
    "description": "// Java program to iterate over an array  // using for loop  import java.io.*;  class GFG {         public static void main(String args[]) throws IOException      {          int ar[] = { 1, 2, 3, 4, 5, 6, 7, 8 };          int i, x;             // iterating over an array          for (i = 0; i < ar.length; i++) {                 // accessing each element of array              x = ar[i];              System.out.print(x + \" \");          }      }  } \nfor(i = 0; i < arrayName.length; i++{   \t//print statement will output current index's value  \tSystem.out.println(arrayName[i]);  }\n",
    "reg_date": "2021-10-12T12:02:47.000Z"
  },
  {
    "id": 1359,
    "keyword": null,
    "link": null,
    "title": " for loop in multidimensional array java",
    "description": "public class ForLoopExample {     public static void main(String[] args) {         int[][] values = { { 1, 2, 3 }, { 4, 5, 6 }, { 7, 8, 9 } };                   System.out.println(\"Elements are :\");         for(int i=0; i< values.length; i++) {             for(int j=0; j< values[i].length; j++) {                 System.out.print(values[i][j] + \"\\t\");             }             System.out.println(\"\");         }     } }\n",
    "reg_date": "2021-10-12T12:02:48.000Z"
  },
  {
    "id": 1360,
    "keyword": null,
    "link": null,
    "title": " for loop java",
    "description": "for(int i = 0; i < 10; i++) {   //do something      //NOTE: the integer name does not need to be i, and the loop   //doesn't need to start at 0. In addition, the 10 can be replaced   //with any value. In this case, the loop will run 10 times.   //Finally, the incrementation of i can be any value, in this case,   //i increments by one. To increment by 2, for example, you would   //use \"i += 2\", or \"i = i+2\" }\n// Starting on 0: for(int i = 0; i < 5; i++) {   System.out.println(i + 1); }  // Starting on 1: for(int i = 1; i <= 5; i++) {   System.out.println(i); }   // Both for loops will iterate 5 times, // printing the numbers 1 - 5.\nfor (int i = 0; i < 5; i++) {   System.out.println(i); } \nfor(/*index declaration*/int i=0; /*runs as long as this is true*/    i<=5; /*change number at end of loop*/i++){ doStuff();  }\nfor(int i = 0; i < 10; i++){   System.out.println(i);   //this will print out every number for 0 to 9. }\npublic class ForLoop {   public static void main(String[] args) {     for (int i = 0; i < 5; i++) {       // Will do this 5 times.       System.out.println(\"Iteration #: \" + i);     }   } }\n",
    "reg_date": "2021-10-12T12:02:48.000Z"
  },
  {
    "id": 1361,
    "keyword": null,
    "link": null,
    "title": " for loop javasctip",
    "description": "var colors=[\"red\",\"blue\",\"green\"]; for (let i = 0; i < colors.length; i++) {    console.log(colors[i]); }\nlet array = ['Item 1', 'Item 2', 'Item 3'];  array.forEach(item => { \tconsole.log(item); // Logs each 'Item #' });\nconst Color = [\"Red\", \"Blue\", \"Green\"]; for (i = 0; i < Color.length; i++) {    console.log(Color[i]); }\nfor(let i = 0; i < 5; i++) { \tconsole.log(\"loop\", i); }\nvar colors=[\"red\",\"blue\",\"green\"]; for(let color of colors){   console.log(color) }\n",
    "reg_date": "2021-10-12T12:02:48.000Z"
  },
  {
    "id": 1362,
    "keyword": null,
    "link": null,
    "title": " for loop vs for each loop",
    "description": "1-   For Loop: -It is flexible to iterate array both ascending and descending order.   For Each: -It iterates from initial to end  2-   For Loop: -It runs until given condition become false   For Each:  -Keeps execution until last element get executed  3-   For Loop: -It use index   For Each: -It use iteration  4-   For Loop: -Accepts both object collections and non object collections   For Each: -Accepts only object collections \n1-   For Loop: -It is flexible to iterate array both ascending and descending order.   For Each: -It iterates from initial to end  2-   For Loop: -It runs until given condition become false   For Each:  -Keeps execution until last element get executed  3-   For Loop: -It use index   For Each: -It use iteration  4-   For Loop: -Accepts both object collections and non object collections   For Each: -Accepts only object collections\n",
    "reg_date": "2021-10-12T12:02:48.000Z"
  },
  {
    "id": 1363,
    "keyword": null,
    "link": null,
    "title": " for next loop javasxcrop",
    "description": "for (i = 0; i < 5; i++) {}\n",
    "reg_date": "2021-10-12T12:02:48.000Z"
  },
  {
    "id": 1364,
    "keyword": null,
    "link": null,
    "title": " for with two values java",
    "description": "public class forloop {     public static void main(String[] args) {         // for loop with two variable i & j         // i will start with 0 and keep on incrementing till 10         // j will start with 10 and keep on decrementing till 0         for (int i = 0, j = 10; i < 10 && j > 0; i++, j--) {             System.out.println(\"i = \" + i + \" :: \" + \"j = \" + j);         }     } }\n",
    "reg_date": "2021-10-12T12:02:48.000Z"
  },
  {
    "id": 1365,
    "keyword": null,
    "link": null,
    "title": " foreach java",
    "description": "int [] intArray = { 10, 20, 30, 40, 50 };          for( int value : intArray ) {    System.out.println( value ); }\nList<String> items = new ArrayList<>(); items.add(\"A\"); items.add(\"B\"); items.add(\"C\"); items.add(\"D\"); items.add(\"E\");  //lambda //Output : A,B,C,D,E items.forEach(item->System.out.println(item));  //Output : C items.forEach(item->{ \tif(\"C\".equals(item)){ \t\tSystem.out.println(item); \t} });  //method reference //Output : A,B,C,D,E items.forEach(System.out::println);  //Stream and filter //Output : B items.stream() \t.filter(s->s.contains(\"B\")) \t.forEach(System.out::println);\n//itemset contains variables of type <Data Type> for(<Data Type> item : itemset) {   //loop }\nfor (String name : names) {     System.out.println(name); }\nList<String> someList = new ArrayList<String>(); // add \"monkey\", \"donkey\", \"skeleton key\" to someList for (String item : someList) {     System.out.println(item); }\nnames.forEach(name -> System.out.println(name));\n",
    "reg_date": "2021-10-12T12:02:48.000Z"
  },
  {
    "id": 1366,
    "keyword": null,
    "link": null,
    "title": " foreach loop java values hashmap",
    "description": "public static void printMap(Map mp) {     Iterator it = mp.entrySet().iterator();     while (it.hasNext()) {         Map.Entry pair = (Map.Entry)it.next();         System.out.println(pair.getKey() + \" = \" + pair.getValue());         it.remove(); // avoids a ConcurrentModificationException     } }\nfor (V valuesName : arbitraryHashMap.values()) { \t//Do Stuff with valuesName }\nhashmap.forEach(BiConsumer<K, V> action)\n",
    "reg_date": "2021-10-12T12:02:48.000Z"
  },
  {
    "id": 1367,
    "keyword": null,
    "link": null,
    "title": " foreach map java",
    "description": "// 1. for-each with Entry Map<Integer, Integer> map = new HashMap<Integer, Integer>(); for (Map.Entry<Integer, Integer> entry : map.entrySet()) {     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); }   // 2. for-each with key or value each (faster) Map<Integer, Integer> map = new HashMap<Integer, Integer>(); //iterating over keys only for (Integer key : map.keySet()) {     System.out.println(\"Key = \" + key); }   //iterating over values only for (Integer value : map.values()) {     System.out.println(\"Value = \" + value); }   // 3. Using Iterator Map<Integer, Integer> map = new HashMap<Integer, Integer>(); // With Generic Iterator<Map.Entry<Integer, Integer>> entries = map.entrySet().iterator(); while (entries.hasNext()) {     Map.Entry<Integer, Integer> entry = entries.next();     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); }  // No Generic Map map = new HashMap(); Iterator entries = map.entrySet().iterator(); while (entries.hasNext()) {     Map.Entry entry = (Map.Entry) entries.next();     Integer key = (Integer)entry.getKey();     Integer value = (Integer)entry.getValue();     System.out.println(\"Key = \" + key + \", Value = \" + value); } \nMap<String, String> map = ... for (Map.Entry<String, String> entry : map.entrySet()) {     System.out.println(entry.getKey() + \"/\" + entry.getValue()); }\nmap.forEach((k, v) -> System.out.printf( \" %s : %d \\n\" , k,v) );\npublic void iterateUsingLambda(Map<String, Integer> map) {     map.forEach((k, v) -> System.out.println((k + \":\" + v))); } \npublic void iterateUsingEntrySet(Map<String, Integer> map) {     for (Map.Entry<String, Integer> entry : map.entrySet()) {         System.out.println(entry.getKey() + \":\" + entry.getValue());     } } \npublic void iterateUsingIteratorAndEntry(Map<String, Integer> map) {     Iterator<Map.Entry<String, Integer>> iterator = map.entrySet().iterator();     while (iterator.hasNext()) {         Map.Entry<String, Integer> entry = iterator.next();         System.out.println(entry.getKey() + \":\" + entry.getValue());     } } \n",
    "reg_date": "2021-10-12T12:02:48.000Z"
  },
  {
    "id": 1368,
    "keyword": null,
    "link": null,
    "title": " foreach not applicable to type - binary tree sort",
    "description": "private static void iterateall(BinaryTree foo) {     Stack<BinaryTree> nodes = new Stack<BinaryTree>();     nodes.push(foo);     while (!nodes.isEmpty()) {         BinaryTree node = nodes.pop();         if (node == null)             continue;         System.out.println(node.node);         nodes.push(node.right);         nodes.push(node.left);     } }\n",
    "reg_date": "2021-10-12T12:02:49.000Z"
  },
  {
    "id": 1369,
    "keyword": null,
    "link": null,
    "title": " formartted string java",
    "description": "String str = String.format( \"Hello \\n World \\n my name is %s and i'm %d years old\" , \"Paul\", 27);  \n",
    "reg_date": "2021-10-12T12:02:49.000Z"
  },
  {
    "id": 1370,
    "keyword": null,
    "link": null,
    "title": " format localdate java",
    "description": "LocalDate today = LocalDate.now();   String formattedDate = today.format(DateTimeFormatter.ofPattern(\"dd-MMM-yy\"));   System.out.println(formattedDate);\nFormat LocalDate in Java to required string\n",
    "reg_date": "2021-10-12T12:02:49.000Z"
  },
  {
    "id": 1371,
    "keyword": null,
    "link": null,
    "title": " format localdatetime",
    "description": "String str = \"1986-04-08 12:30\"; DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"); LocalDateTime dateTime = LocalDateTime.parse(str, formatter); \nString dateTime = \"1995-07-25 15:03:45\"; DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\"); LocalDateTime date = LocalDateTime.parse(dateTime, dateTimeFormatter);\n",
    "reg_date": "2021-10-12T12:02:49.000Z"
  },
  {
    "id": 1372,
    "keyword": null,
    "link": null,
    "title": " fragment to fragment",
    "description": "public void onClick2(View view) {     Fragment2 fragment2 = new Fragment2();     FragmentManager fragmentManager = getFragmentManager();     FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();     fragmentTransaction.replace(R.id.fragment1, fragment2);     fragmentTransaction.commit(); }\n",
    "reg_date": "2021-10-12T12:02:49.000Z"
  },
  {
    "id": 1373,
    "keyword": null,
    "link": null,
    "title": " frequency of number in java using hashmap using getordefault",
    "description": "Map<Character,Integer> frequencies = new HashMap<>(); for (char ch : input.toCharArray())     frequencies.put(ch, frequencies.getOrDefault(ch, 0) + 1); \n",
    "reg_date": "2021-10-12T12:02:49.000Z"
  },
  {
    "id": 1374,
    "keyword": null,
    "link": null,
    "title": " from date to string",
    "description": "    Date date = Calendar.getInstance().getTime();       DateFormat dateFormat = new SimpleDateFormat(\"yyyy-mm-dd hh:mm:ss\");       String strDate = dateFormat.format(date);  \nFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\"); String s = formatter.format(date);\nSimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");   try {       Date date = new Date();       String dateTime = dateFormat.format(date);     System.out.println(\"Current Date Time : \" + dateTime);  } catch (ParseException e) {     e.printStackTrace();   } \n",
    "reg_date": "2021-10-12T12:02:49.000Z"
  },
  {
    "id": 1375,
    "keyword": null,
    "link": null,
    "title": " from file to array java",
    "description": "BufferedReader bufferedReader = new BufferedReader(new FileReader(myfile)); String []data; data = new String[10]; // <= how can I do that? data = new String[lines.size]  for (int i=0; i<lines.size(); i++) {     data[i] = abc.readLine();     System.out.println(data[i]); } abc.close();\nArrayList<String> result = new ArrayList<>();   try (BufferedReader br = new BufferedReader(new FileReader(filename))) {     while (br.ready()) {         result.add(br.readLine());     } } \nBufferedReader abc = new BufferedReader(new FileReader(myfile)); List<String> lines = new ArrayList<String>();  while((String line = abc.readLine()) != null) {     lines.add(line);     System.out.println(data); } abc.close();  // If you want to convert to a String[] String[] data = lines.toArray(new String[]{});\n",
    "reg_date": "2021-10-12T12:02:49.000Z"
  },
  {
    "id": 1376,
    "keyword": null,
    "link": null,
    "title": " from string to date",
    "description": "string iDate = \"05/05/2005\"; DateTime oDate = Convert.ToDateTime(iDate); MessageBox.Show(oDate.Day + \" \" + oDate.Month + \"  \" + oDate.Year ); \nimport java.text.SimpleDateFormat;   import java.util.Date;   public class StringToDateExample1 {   public static void main(String[] args)throws Exception {       String sDate1=\"31/12/1998\";       Date date1=new SimpleDateFormat(\"dd/MM/yyyy\").parse(sDate1);       System.out.println(sDate1+\"\\t\"+date1);   }   }  \nString dtStart = \"2010-10-15T09:27:37Z\";   SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");   try {       Date date = format.parse(dtStart);       System.out.println(date);   } catch (ParseException e) {     e.printStackTrace();   } \n",
    "reg_date": "2021-10-12T12:02:50.000Z"
  },
  {
    "id": 1377,
    "keyword": null,
    "link": null,
    "title": " from string to double andoird studio",
    "description": "String s; DecimalFormat dF = new DecimalFormat(\"0.00\"); Number num = dF.parse(s); double final = num.doubleValue();\n",
    "reg_date": "2021-10-12T12:02:50.000Z"
  },
  {
    "id": 1378,
    "keyword": null,
    "link": null,
    "title": " from string to double java",
    "description": "public class stringtodouble { \tpublic static void main(String args) {     \tString string = \"1.23\";       \tdouble decimal = Double.parseDouble(string);     } }\nString str=\"122.202\"; double dnum = Double.parseDouble(str);\nDouble d = Double.valueOf(String str);\nDouble myDouble = Double.parseDouble(\"23.5\");\nString text = \"12.34\"; double value = Double.parseDouble(text);\n",
    "reg_date": "2021-10-12T12:02:50.000Z"
  },
  {
    "id": 1379,
    "keyword": null,
    "link": null,
    "title": " from string to int android studio",
    "description": "String s; int myNum = Integer.parseInt(s);\npublic class JavaStringToIntExample {   public static void main (String[] args)   {     // String s = \"fred\";  // use this if you want to test the exception below     String s = \"100\";       try     {       // the String to int conversion happens here       int i = Integer.parseInt(s.trim());         // print out the value after the conversion       System.out.println(\"int i = \" + i);     }     catch (NumberFormatException nfe)     {       System.out.println(\"NumberFormatException: \" + nfe.getMessage());     }   } }\n",
    "reg_date": "2021-10-12T12:02:50.000Z"
  },
  {
    "id": 1380,
    "keyword": null,
    "link": null,
    "title": " full screen in jframe",
    "description": "// Getting fullscreen **effect** by extending the frame either direction. frame.setExtendedState(JFrame.MAXIMIZED_BOTH);  frame.setUndecorated(true);\n",
    "reg_date": "2021-10-12T12:02:50.000Z"
  },
  {
    "id": 1381,
    "keyword": null,
    "link": null,
    "title": " full shutdown windows 10 cmd",
    "description": "shutdown /s /f /t 0\n",
    "reg_date": "2021-10-12T12:02:50.000Z"
  },
  {
    "id": 1382,
    "keyword": null,
    "link": null,
    "title": " fullscreen activity android",
    "description": "public class ActivityName extends Activity {     @Override     public void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         // remove title         requestWindowFeature(Window.FEATURE_NO_TITLE);         getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,             WindowManager.LayoutParams.FLAG_FULLSCREEN);         setContentView(R.layout.main);     } }\nres -> values -> styles.xml <resources> \t<style name ...>     \t.     \t.     \t.     \t<item name=\"android:windowFullscreen\">true</item>     </style> </resources>\n",
    "reg_date": "2021-10-12T12:02:50.000Z"
  },
  {
    "id": 1383,
    "keyword": null,
    "link": null,
    "title": " function in java",
    "description": "package com.company;  public class Main {     static void one(){ // youCanPutWhatEverNameYouLikeInThePlaceOf\"One\"         System.out.println(\"HELLO\");     }     public static void main(String[] args) {         one(); //theTerminalShouldSay\"HELLO\"     } } \npublic class MyClass {       static void myMethod() {         System.out.println(\"You have called me! My name is: myMethod!\");     }       public static void main(String[] args) {         myMethod();     } }\npublic class Main {     static void function(){         System.out.println(\"I am a function!\");     } \tpublic static void main(String[] args) { \t\tfunction(); \t} }\n//declare a function like this: void function(int parameter1) { \t//function body } //call the function like this: function(1);\n  static void myMethod() {     //LINES OF CODE   }\nMethod is a collection of statements which returns a value upon its execution.   Method have a return and the method's name may or not be same as the class name. Method is invoked explicitly. Method is not provided by compiler in any case. Methods are inherited by child classes.\n",
    "reg_date": "2021-10-12T12:02:50.000Z"
  },
  {
    "id": 1384,
    "keyword": null,
    "link": null,
    "title": " funzione random in java",
    "description": "int n = (int) (Math.random() * 51);\n",
    "reg_date": "2021-10-12T12:02:50.000Z"
  },
  {
    "id": 1385,
    "keyword": null,
    "link": null,
    "title": " garbage collection in java",
    "description": "System.runFinalization(); Runtime.getRuntime().gc(); System.gc();\nGarbage collection means destroying or de-allocating unused objects in memory.\n",
    "reg_date": "2021-10-12T12:02:51.000Z"
  },
  {
    "id": 1386,
    "keyword": null,
    "link": null,
    "title": " gat environment variables java",
    "description": "String environmentVariable = System.getEnv(\"environment_variable_name\");  //You can create environment variables on your computer manually //and then you must put the environment variable in the parantheses as a String\n",
    "reg_date": "2021-10-12T12:02:51.000Z"
  },
  {
    "id": 1387,
    "keyword": null,
    "link": null,
    "title": " gcd in java",
    "description": "public class GCD {      public static void main(String[] args) {          int n1 = 81, n2 = 153, gcd = 1;          for(int i = 1; i <= n1 && i <= n2; ++i)         {             // Checks if i is factor of both integers             if(n1 % i==0 && n2 % i==0)                 gcd = i;         }          System.out.printf(\"G.C.D of %d and %d is %d\", n1, n2, gcd);     } }\nimport java.util.Scanner; public class GCDExample3 {      public static void main(String[] args) {          int num1, num2;                  //Reading the input numbers         Scanner scanner = new Scanner(System.in);         System.out.print(\"Enter first number:\");         num1 = (int)scanner.nextInt();                  System.out.print(\"Enter second number:\");         num2 = (int)scanner.nextInt();                  //closing the scanner to avoid memory leaks         scanner.close();         while (num1 != num2) {         \tif(num1 > num2)                 num1 = num1 - num2;             else                 num2 = num2 - num1;         }          //displaying the result         System.out.printf(\"GCD of given numbers is: %d\", num2);     }\n",
    "reg_date": "2021-10-12T12:02:51.000Z"
  },
  {
    "id": 1388,
    "keyword": null,
    "link": null,
    "title": " gcd of two numbers in java",
    "description": "// gcd of two numbers in java import java.util.Scanner; public class GCDOfTwoNumbers  {    public static void main(String[] args)     {       int a, b;       Scanner sc = new Scanner(System.in);       System.out.print(\"Please enter first number: \");       a = sc.nextInt();       System.out.print(\"Please enter second number: \");       b = sc.nextInt();       while(a != b)        {          if(a > b)          {             a = a - b;          }          else          {             b = b - a;          }       }       System.out.println(\"GCD of two numbers in java: \" + b);       sc.close();    } }\npublic class GCD {      public static void main(String[] args) {          int n1 = 81, n2 = 153, gcd = 1;          for(int i = 1; i <= n1 && i <= n2; ++i)         {             // Checks if i is factor of both integers             if(n1 % i==0 && n2 % i==0)                 gcd = i;         }          System.out.printf(\"G.C.D of %d and %d is %d\", n1, n2, gcd);     } }\n",
    "reg_date": "2021-10-12T12:02:51.000Z"
  },
  {
    "id": 1389,
    "keyword": null,
    "link": null,
    "title": " generate 5 digit random string in java",
    "description": "import java.util.Random;  public class Generator { \tpublic static String generateRandomPassword(int len) { \t\tString chars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijk\"           +\"lmnopqrstuvwxyz!@#$%&\"; \t\tRandom rnd = new Random(); \t\tStringBuilder sb = new StringBuilder(len); \t\tfor (int i = 0; i < len; i++) \t\t\tsb.append(chars.charAt(rnd.nextInt(chars.length()))); \t\treturn sb.toString(); \t} }\nRandomStringUtils.randomAlphanumeric(17).toUpperCase()\n",
    "reg_date": "2021-10-12T12:02:51.000Z"
  },
  {
    "id": 1390,
    "keyword": null,
    "link": null,
    "title": " generate all prime number less than n java",
    "description": "/** Author: Jeffrey Huang As far as I know this is almost the fastest method in java for generating prime numbers less than n. A way to make it faster would be to implement Math.sqrt(i) instead of i/2.  I don't know if you could implement sieve of eratosthenes in  this, but if you could, then it would be even faster.  If you have any improvements please email me at jeffreyhuang9999@gmail.com.  */   import java.util.*;   public class Primecounter {          public static void main(String[] args) {     Scanner scanner = new Scanner(System.in);       //int i =0;       int num =0;       //Empty String       String  primeNumbers = \"\";       boolean isPrime = true;       System.out.print(\"Enter the value of n: \");       System.out.println();       int n = scanner.nextInt();        for (int i = 2; i < n; i++) {          isPrime = true;          for (int j = 2; j <= i/2; j++) {             if (i%j == 0) {                isPrime = false;              }          }          if (isPrime)          System.out.print(\" \" + i);       }\t      } }\n",
    "reg_date": "2021-10-12T12:02:51.000Z"
  },
  {
    "id": 1391,
    "keyword": null,
    "link": null,
    "title": " generate an array with random numbers in a range java",
    "description": "import java.util.concurrent.ThreadLocalRandom;  // nextInt is normally exclusive of the top value, // so add 1 to make it inclusive int randomNum = ThreadLocalRandom.current().nextInt(min, max + 1); \n",
    "reg_date": "2021-10-12T12:02:51.000Z"
  },
  {
    "id": 1392,
    "keyword": null,
    "link": null,
    "title": " generate jwt token java example",
    "description": "public String createToken(String username, List<Role> roles, String country) {      Claims claims = Jwts.claims().setSubject(username);     claims.put(\"auth\", roles.stream().map(s -> new SimpleGrantedAuthority(s.getAuthority())).filter(Objects::nonNull).collect(Collectors.toList()));     claims.put(\"Country\", country);          Date now = new Date();     Date validity = new Date(now.getTime() + validityInMilliseconds);      return Jwts.builder()//         .setClaims(claims)//         .setIssuedAt(now)//         .setExpiration(validity)//         .signWith(SignatureAlgorithm.HS256, secretKey)//         .compact();   } \n",
    "reg_date": "2021-10-12T12:02:51.000Z"
  },
  {
    "id": 1393,
    "keyword": null,
    "link": null,
    "title": " generate random number in java within a range without repeating with android studio",
    "description": " public void NextRandom(View view) // button clicked function     {         int previousIndex = index;         index = rand.nextInt(array.size());          while (index == previousIndex)         {             index = rand.nextInt(array.size());         }     }\n",
    "reg_date": "2021-10-12T12:02:51.000Z"
  },
  {
    "id": 1394,
    "keyword": null,
    "link": null,
    "title": " generate random number java",
    "description": "import java.util.Random;  Random rand = new Random();  // Obtain a number between [0 - 49]. int n = rand.nextInt(50);  // Add 1 to the result to get a number from the required range // (i.e., [1 - 50]). n += 1;\nimport java.util.Random;  Random rand = new Random(); int random_integer = rand.nextInt(upperbound-lowerbound) + lowerbound;\nimport java.util.Random;  Random rand = new Random(); int maxNumber = 10;  int randomNumber = rand.nextInt(maxNumber) + 1;  System.out.println(randomNumber);\nimport java.util.Random;  class scratch{     public static void main(String[] args) {         Random rand = new Random();         System.out.println( rand.nextInt(5) );         //prints a random Int between 0 - 4 (including 0 & 4);     } }\nimport java.lang.Math;  int randomNumber;  int minimum = 1; int maximum = 10 - minimum;  randomNumber = (int)((Math.random()*maximum) + minimum);  System.out.println(\"Random Number (Between 1-10): \" + randomNumber);\n// JAVA - WITH A RANGE (Math.random() * ((max - min) + 1)) + min\n",
    "reg_date": "2021-10-12T12:02:52.000Z"
  },
  {
    "id": 1395,
    "keyword": null,
    "link": null,
    "title": " generate random password in java",
    "description": "import java.util.Random;  public class PasswordGenerator { \tpublic static String generateRandomPassword(int len) { \t\tString chars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghi\"           +\"jklmnopqrstuvwxyz!@#$%&\"; \t\tRandom rnd = new Random(); \t\tStringBuilder sb = new StringBuilder(len); \t\tfor (int i = 0; i < len; i++) \t\t\tsb.append(chars.charAt(rnd.nextInt(chars.length()))); \t\treturn sb.toString(); \t} }\n",
    "reg_date": "2021-10-12T12:02:52.000Z"
  },
  {
    "id": 1396,
    "keyword": null,
    "link": null,
    "title": " generate random string in java",
    "description": "import java.util.Random;  public class Generator { \tpublic static String generateRandomPassword(int len) { \t\tString chars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijk\"           +\"lmnopqrstuvwxyz!@#$%&\"; \t\tRandom rnd = new Random(); \t\tStringBuilder sb = new StringBuilder(len); \t\tfor (int i = 0; i < len; i++) \t\t\tsb.append(chars.charAt(rnd.nextInt(chars.length()))); \t\treturn sb.toString(); \t} }\n@Test public void givenUsingJava8_whenGeneratingRandomAlphanumericString_thenCorrect() {     int leftLimit = 48; // numeral '0'     int rightLimit = 122; // letter 'z'     int targetStringLength = 10;     Random random = new Random();       String generatedString = random.ints(leftLimit, rightLimit + 1)       .filter(i -> (i <= 57 || i >= 65) && (i <= 90 || i >= 97))       .limit(targetStringLength)       .collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append)       .toString();       System.out.println(generatedString); } \n",
    "reg_date": "2021-10-12T12:02:52.000Z"
  },
  {
    "id": 1397,
    "keyword": null,
    "link": null,
    "title": " generate uuid from string",
    "description": " // You can use UUID this way to get always the same UUID for your input String:  String aString=\"JUST_A_TEST_STRING\";  String result = UUID.nameUUIDFromBytes(aString.getBytes()).toString();\n",
    "reg_date": "2021-10-12T12:02:52.000Z"
  },
  {
    "id": 1398,
    "keyword": null,
    "link": null,
    "title": " generta epassword java",
    "description": "import java.util.Random;  public class PasswordGenerator { \tpublic static String generateRandomPassword(int len) { \t\tString chars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghi\"           +\"jklmnopqrstuvwxyz!@#$%&\"; \t\tRandom rnd = new Random(); \t\tStringBuilder sb = new StringBuilder(len); \t\tfor (int i = 0; i < len; i++) \t\t\tsb.append(chars.charAt(rnd.nextInt(chars.length()))); \t\treturn sb.toString(); \t} }\n public static String generateRandomPassword(int length) {         Object[][] characterSets = {                 {'1', '2', '3', '4', '5', '6', '7', '8', '9', '0'},                 {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'},                 {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'}         };         List<Character> passwordCharacters = new ArrayList<>();         ThreadLocalRandom random = ThreadLocalRandom.current();         for (Object[] characters : characterSets){             for (int i = 0; i < length / 3; i++){                 passwordCharacters.add((Character) characters[random.nextInt(0, characters.length)]);             }         }         for (int i =0; i < length % 3; i++){             Object[] characters = characterSets[random.nextInt(0, characterSets.length)];             passwordCharacters.add((Character) characters[random.nextInt(0, characters.length)]);         }         Collections.shuffle(passwordCharacters);         StringBuilder stringBuilder = new StringBuilder(length);         passwordCharacters.forEach(stringBuilder::append);         return stringBuilder.toString();     }\n",
    "reg_date": "2021-10-12T12:02:52.000Z"
  },
  {
    "id": 1399,
    "keyword": null,
    "link": null,
    "title": " get Player by name spigot",
    "description": "String playerName = \"Name\" Player player = Bukkit.getPlayer(playerName);\n",
    "reg_date": "2021-10-12T12:02:52.000Z"
  },
  {
    "id": 1400,
    "keyword": null,
    "link": null,
    "title": " get a random value in hasmap java",
    "description": "package com.crunchify.tutorials;   import java.util.ArrayList; import java.util.Collections; import java.util.HashMap; import java.util.List; import java.util.Map; import java.util.Random;   /**  * @author Crunchify.com  *   */   public class CrunchifyGetRandomKeyValueFromHashMap { \tpublic static void main(String[] args) { \t\t// \t\t// Create a hashtable and put some key-value pair. \t\t// \t\tHashMap<String, String> companies = new HashMap<String, String>(); \t\tcompanies.put(\"eBay\", \"South San Jose\"); \t\tcompanies.put(\"Paypal\", \"North San Jose\"); \t\tcompanies.put(\"Google\", \"Mountain View\"); \t\tcompanies.put(\"Yahoo\", \"Santa Clara\"); \t\tcompanies.put(\"Twitter\", \"San Francisco\");   \t\t// Get a random entry from the HashMap. \t\tObject[] crunchifyKeys = companies.keySet().toArray(); \t\tObject key = crunchifyKeys[new Random().nextInt(crunchifyKeys.length)]; \t\tSystem.out.println(\"************ Random Value ************ \\n\" + key + \" :: \" + companies.get(key));   \t\tList<Map.Entry<String, String>> list = new ArrayList<Map.Entry<String, String>>(companies.entrySet());   \t\t// Bonus Crunchify Tips: How to Shuffle a List?? \t\t// Each time you get a different order... \t\tSystem.out.println(\"\\n************ Now Let's start shuffling list ************\"); \t\tCollections.shuffle(list); \t\tfor (Map.Entry<String, String> entry : list) { \t\t\tSystem.out.println(entry.getKey() + \" :: \" + entry.getValue()); \t\t} \t} } \n",
    "reg_date": "2021-10-12T12:02:52.000Z"
  },
  {
    "id": 1401,
    "keyword": null,
    "link": null,
    "title": " get all keys from pbject javascirpt",
    "description": "const object1 = {   a: 'somestring',   b: 42,   c: false };  console.log(Object.keys(object1)); // expected output: Array [\"a\", \"b\", \"c\"]  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n",
    "reg_date": "2021-10-12T12:02:52.000Z"
  },
  {
    "id": 1402,
    "keyword": null,
    "link": null,
    "title": " get app version android",
    "description": "val versionName = requireContext().packageManager.getPackageInfo(requireContext().packageName, 0).versionName\nString versionName = context.getPackageManager()     .getPackageInfo(context.getPackageName(), 0).versionName;\nPackageManager manager = this.getPackageManager(); PackageInfo info = manager.getPackageInfo(this.getPackageName(), PackageManager.GET_ACTIVITIES); Toast.makeText(this,      \"PackageName = \" + info.packageName + \"\\nVersionCode = \"        + info.versionCode + \"\\nVersionName = \"        + info.versionName + \"\\nPermissions = \" + info.permissions, Toast.LENGTH_SHORT).show();\nprivate String getCurrentVersion(){ PackageManager pm = this.getPackageManager(); PackageInfo pInfo = null;          try {             pInfo =  pm.getPackageInfo(this.getPackageName(),0);          } catch (PackageManager.NameNotFoundException e1) {             e1.printStackTrace();         }         String currentVersion = pInfo.versionName;          return currentVersion;     }\n",
    "reg_date": "2021-10-12T12:02:52.000Z"
  },
  {
    "id": 1403,
    "keyword": null,
    "link": null,
    "title": " get block player is looking at bukkit",
    "description": "Player player = (Player) sender; Block block = player.getTargetBlock(null, 100); Location bl = block.getLocation();\n",
    "reg_date": "2021-10-12T12:02:52.000Z"
  },
  {
    "id": 1404,
    "keyword": null,
    "link": null,
    "title": " get boolean from string java",
    "description": "String str = \"true\"; boolean boolean = Boolean.parseBoolean(str); \n",
    "reg_date": "2021-10-12T12:02:52.000Z"
  },
  {
    "id": 1405,
    "keyword": null,
    "link": null,
    "title": " get certain character from string java",
    "description": "String words = \"Hi There\"; //creating a string var named 'words' char index = words.charAt(0); /* setting a variable 'index' to letter '0' of variable 'words'. In this case, index = 'H'.*/ System.out.println(index); //print var 'index' which will print \"H\"\n",
    "reg_date": "2021-10-12T12:02:53.000Z"
  },
  {
    "id": 1406,
    "keyword": null,
    "link": null,
    "title": " get class from generic type java",
    "description": "class Foo<T> {     final Class<T> typeParameterClass;      public Foo(Class<T> typeParameterClass) {         this.typeParameterClass = typeParameterClass;     }      public void bar() {         // you can access the typeParameterClass here and do whatever you like     }\n",
    "reg_date": "2021-10-12T12:02:53.000Z"
  },
  {
    "id": 1407,
    "keyword": null,
    "link": null,
    "title": " get columns number sql",
    "description": "#With SQL  SELECT count(*) FROM information_schema.columns WHERE table_name = 'Your_table_name'; \n//With JAVA  String quer=\"SELECT * FROM sample2 where 1=2\";  Statement st=con.createStatement(); ResultSet rs=st.executeQuery(quer); ResultSetMetaData rsmd = rs.getMetaData(); int NumOfCol=0; NumOfCol=rsmd.getColumnCount(); System.out.println(\"Query Executed!! No of Colm=\"+NumOfCol);\nSELECT TABLE_NAME , count(COLUMN_NAME) FROM information_schema.columns GROUP BY TABLE_NAME;  -- Oracle (depending on schema grants): SELECT count(*) FROM USER_TAB_COLS WHERE TABLE_NAME = 'my_table'; SELECT count(*) FROM ALL_TAB_COLS WHERE TABLE_NAME = 'my_table'; SELECT count(*) FROM DBA_TAB_COLS WHERE TABLE_NAME = 'my_table';\n",
    "reg_date": "2021-10-12T12:02:53.000Z"
  },
  {
    "id": 1408,
    "keyword": null,
    "link": null,
    "title": " get current date time timestamp java",
    "description": "   // 2021-03-24 16:48:05.591   Timestamp timestamp = new Timestamp(System.currentTimeMillis());    // 2021-03-24 16:48:05.591   Date date = new Date();   Timestamp timestamp2 = new Timestamp(date.getTime());    // convert Instant to Timestamp   Timestamp ts = Timestamp.from(Instant.now())    // convert ZonedDateTime to Instant to Timestamp   Timestamp ts = Timestamp.from(ZonedDateTime.now().toInstant()));    // convert Timestamp to Instant   Instant instant = ts.toInstant();\n",
    "reg_date": "2021-10-12T12:02:53.000Z"
  },
  {
    "id": 1409,
    "keyword": null,
    "link": null,
    "title": " get current system time in nanoseconds java",
    "description": "package com.tutorialspoint;  import java.lang.*;  public class SystemDemo {     public static void main(String[] args) {        // returns the current value of the system timer, in nanoseconds       System.out.print(\"time in nanoseconds = \");       System.out.println(System.nanoTime());        // returns the current value of the system timer, in milliseconds       System.out.print(\"time in milliseconds = \");       System.out.println(System.currentTimeMillis());    } }  \n",
    "reg_date": "2021-10-12T12:02:53.000Z"
  },
  {
    "id": 1410,
    "keyword": null,
    "link": null,
    "title": " get current timestamp in java",
    "description": "Timestamp timestamp = new Timestamp(System.currentTimeMillis()); //2016-11-16 06:43:19.77 Copy\n   // 2021-03-24 16:48:05.591   Timestamp timestamp = new Timestamp(System.currentTimeMillis());    // 2021-03-24 16:48:05.591   Date date = new Date();   Timestamp timestamp2 = new Timestamp(date.getTime());    // convert Instant to Timestamp   Timestamp ts = Timestamp.from(Instant.now())    // convert ZonedDateTime to Instant to Timestamp   Timestamp ts = Timestamp.from(ZonedDateTime.now().toInstant()));    // convert Timestamp to Instant   Instant instant = ts.toInstant(); \npackage com.mkyong.date;  import java.sql.Timestamp; import java.text.SimpleDateFormat; import java.util.Date;  public class TimeStampExample {      private static final SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy.MM.dd.HH.mm.ss\");      public static void main(String[] args) {          //method 1         Timestamp timestamp = new Timestamp(System.currentTimeMillis());         System.out.println(timestamp);          //method 2 - via Date         Date date = new Date();         System.out.println(new Timestamp(date.getTime()));          //return number of milliseconds since January 1, 1970, 00:00:00 GMT         System.out.println(timestamp.getTime());          //format timestamp         System.out.println(sdf.format(timestamp));              }  } Copy\n   // 2021-03-24 16:48:05.591   Timestamp timestamp = new Timestamp(System.currentTimeMillis());    // 2021-03-24 16:48:05.591   Date date = new Date();   Timestamp timestamp2 = new Timestamp(date.getTime());    // convert Instant to Timestamp   Timestamp ts = Timestamp.from(Instant.now())    // convert ZonedDateTime to Instant to Timestamp   Timestamp ts = Timestamp.from(ZonedDateTime.now().toInstant()));    // convert Timestamp to Instant   Instant instant = ts.toInstant();\n package com.mkyong.app;  import java.sql.Timestamp; import java.text.SimpleDateFormat; import java.util.Date;  public class TimeStampExample {      // 2021.03.24.16.34.26     private static final SimpleDateFormat sdf1 = new SimpleDateFormat(\"yyyy.MM.dd.HH.mm.ss\");      // 2021-03-24T16:44:39.083+08:00     private static final SimpleDateFormat sdf2 = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\");      // 2021-03-24 16:48:05     private static final SimpleDateFormat sdf3 = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");      public static void main(String[] args) {          // method 1         Timestamp timestamp = new Timestamp(System.currentTimeMillis());         System.out.println(timestamp);                      // 2021-03-24 16:34:26.666          // method 2 - via Date         Date date = new Date();         System.out.println(new Timestamp(date.getTime()));  // 2021-03-24 16:34:26.666                                                             // number of milliseconds since January 1, 1970, 00:00:00 GMT         System.out.println(timestamp.getTime());            // 1616574866666          System.out.println(sdf1.format(timestamp));         // 2021.03.24.16.34.26          System.out.println(sdf2.format(timestamp));         // 2021-03-24T16:48:05.591+08:00          System.out.println(sdf3.format(timestamp));         // 2021-03-24 16:48:05      } } \n",
    "reg_date": "2021-10-12T12:02:53.000Z"
  },
  {
    "id": 1411,
    "keyword": null,
    "link": null,
    "title": " get current unix timestamp java",
    "description": "System.currentTimeMillis() / 1000L;\n",
    "reg_date": "2021-10-12T12:02:53.000Z"
  },
  {
    "id": 1412,
    "keyword": null,
    "link": null,
    "title": " get date by timezone java",
    "description": "Date date = new Date(); DateFormat df = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");  // Use Madrid's time zone to format the date in df.setTimeZone(TimeZone.getTimeZone(\"Europe/Madrid\"));  System.out.println(\"Date and time in Madrid: \" + df.format(date));\n",
    "reg_date": "2021-10-12T12:02:53.000Z"
  },
  {
    "id": 1413,
    "keyword": null,
    "link": null,
    "title": " get day from date month year java",
    "description": "Calendar cal = Calendar.getInstance(); cal.set(year,month-1,day); int nd = cal.get(Calendar.DAY_OF_WEEK);\nimport java.util.*; import java.text.SimpleDateFormat; import java.text.DateFormat;   public class GetDayName {      public static void main(String[] args) {       Date date1 =         (new GregorianCalendar           (1989, Calendar.OCTOBER, 17)).getTime();       Date date2 = new Date();       System.out.println         (\"1989-10-17 was a \" + sayDayName(date1));       System.out.println(\"Today is a \" + sayDayName(date2));     }      public static String sayDayName(Date d) {       DateFormat f = new SimpleDateFormat(\"EEEE\");       try {         return f.format(d);       }       catch(Exception e) {         e.printStackTrace();         return \"\";       }     } }\nCalendar cal = Calendar.getInstance(); cal.set(Calendar.DATE, cal.getActualMaximum(Calendar.DATE)); Date lastDayOfMonth = cal.getTime();\n",
    "reg_date": "2021-10-12T12:02:53.000Z"
  },
  {
    "id": 1414,
    "keyword": null,
    "link": null,
    "title": " get day name from date in java",
    "description": "import java.util.*; import java.text.SimpleDateFormat; import java.text.DateFormat;   public class GetDayName {      public static void main(String[] args) {       Date date1 =         (new GregorianCalendar           (1989, Calendar.OCTOBER, 17)).getTime();       Date date2 = new Date();       System.out.println         (\"1989-10-17 was a \" + sayDayName(date1));       System.out.println(\"Today is a \" + sayDayName(date2));     }      public static String sayDayName(Date d) {       DateFormat f = new SimpleDateFormat(\"EEEE\");       try {         return f.format(d);       }       catch(Exception e) {         e.printStackTrace();         return \"\";       }     } }\n",
    "reg_date": "2021-10-12T12:02:54.000Z"
  },
  {
    "id": 1415,
    "keyword": null,
    "link": null,
    "title": " get day of week java",
    "description": "public static String getDayStringNew(LocalDate date, Locale locale) {     DayOfWeek day = date.getDayOfWeek();     return day.getDisplayName(TextStyle.FULL, locale); }\n",
    "reg_date": "2021-10-12T12:02:54.000Z"
  },
  {
    "id": 1416,
    "keyword": null,
    "link": null,
    "title": " get device id programmatically android",
    "description": "//first add this to mainfirst <uses-permission android:name=\"android.permission.READ_PHONE_STATE\"/>  //and this in java TelephonyManager telephonyManager = (TelephonyManager)getSystemService(Context.TELEPHONY_SERVICE); telephonyManager.getDeviceId();\n",
    "reg_date": "2021-10-12T12:02:54.000Z"
  },
  {
    "id": 1417,
    "keyword": null,
    "link": null,
    "title": " get distance from latitude and longitude code android",
    "description": "private double distance(double lat1, double lon1, double lat2, double lon2) {     double theta = lon1 - lon2;     double dist = Math.sin(deg2rad(lat1))                      * Math.sin(deg2rad(lat2))                     + Math.cos(deg2rad(lat1))                     * Math.cos(deg2rad(lat2))                     * Math.cos(deg2rad(theta));     dist = Math.acos(dist);     dist = rad2deg(dist);     dist = dist * 60 * 1.1515;     return (dist); }  private double deg2rad(double deg) {     return (deg * Math.PI / 180.0); }  private double rad2deg(double rad) {     return (rad * 180.0 / Math.PI); } \n",
    "reg_date": "2021-10-12T12:02:54.000Z"
  },
  {
    "id": 1418,
    "keyword": null,
    "link": null,
    "title": " get drawable with string android java",
    "description": "Context context = imageView.getContext(); int id = context.getResources().getIdentifier(\"picture0001\", \"drawable\", context.getPackageName()); imageView.setImageResource(id); \n",
    "reg_date": "2021-10-12T12:02:54.000Z"
  },
  {
    "id": 1419,
    "keyword": null,
    "link": null,
    "title": " get epoch time in java",
    "description": "long epochTime=System.currentTimeMillis();\n",
    "reg_date": "2021-10-12T12:02:54.000Z"
  },
  {
    "id": 1420,
    "keyword": null,
    "link": null,
    "title": " get file path java",
    "description": "File file = new File(\"yourfileName\"); String path = file.getAbsolutePath();\n",
    "reg_date": "2021-10-12T12:02:54.000Z"
  },
  {
    "id": 1421,
    "keyword": null,
    "link": null,
    "title": " get first 5 characters of string java",
    "description": "firstFourChars = input.substring(0, 4);\nvar string = \"freeCodecamp\";  string.charAt(0); // Returns \"f\"\n",
    "reg_date": "2021-10-12T12:02:54.000Z"
  },
  {
    "id": 1422,
    "keyword": null,
    "link": null,
    "title": " get first character of string java",
    "description": "firstFourChars = input.substring(0, 4);\nvar string = \"freeCodecamp\";  string.charAt(0); // Returns \"f\"\nString words = \"Hi There\"; //creating a string var named 'words' char index = words.charAt(0); /* setting a variable 'index' to letter '0' of variable 'words'. In this case, index = 'H'.*/ System.out.println(index); //print var 'index' which will print \"H\"\nString str = \"Grepper\"; char ch = str.charAt(0); //ch is assigned the value of G\nchar fourth = \"Banana\".charAt(3);\n",
    "reg_date": "2021-10-12T12:02:54.000Z"
  },
  {
    "id": 1423,
    "keyword": null,
    "link": null,
    "title": " get first entry in set java",
    "description": "Set<Long> set = new LinkedHashSet<>(); set.iterator().next(); // LinkedHashSet guarantees insertion order\nset.iterator().next();\n",
    "reg_date": "2021-10-12T12:02:54.000Z"
  },
  {
    "id": 1424,
    "keyword": null,
    "link": null,
    "title": " get frequency of letters java",
    "description": "public class Frequency    {        public static void main(String[] args) {           String str = \"picture perfect\";           int[] freq = new int[str.length()];           int i, j;                      //Converts given string into character array           char string[] = str.toCharArray();                      for(i = 0; i <str.length(); i++) {               freq[i] = 1;               for(j = i+1; j <str.length(); j++) {                   if(string[i] == string[j]) {                       freq[i]++;                                  //Set string[j] to 0 to avoid printing visited character                       string[j] = '0';                   }               }           }           //Displays the each character and their corresponding frequency           System.out.println(\"Characters and their corresponding frequencies\");           for(i = 0; i <freq.length; i++) {               if(string[i] != ' ' && string[i] != '0')                   System.out.println(string[i] + \"-\" + freq[i]);           }       }   }  \nHashMap<Character, Integer> map = new HashMap<Character, Integer>(); String s = \"aasjjikkk\"; for (int i = 0; i < s.length(); i++) {     char c = s.charAt(i);     Integer val = map.get(c);     if (val != null) {         map.put(c, new Integer(val + 1));     }     else {        map.put(c, 1);    } }\nMap<Character, Long> frequency =             str.chars()                .mapToObj(c -> (char)c)                .collect(Collectors.groupingBy(Function.identity(), Collectors.counting()));\n",
    "reg_date": "2021-10-12T12:02:55.000Z"
  },
  {
    "id": 1425,
    "keyword": null,
    "link": null,
    "title": " get image to imageview from sqlite database android studio",
    "description": "<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" /> <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\n",
    "reg_date": "2021-10-12T12:02:55.000Z"
  },
  {
    "id": 1426,
    "keyword": null,
    "link": null,
    "title": " get index of element in array java",
    "description": "java.util.Arrays.asList(theArray).indexOf(o)\nSystem.out.println(new String(list).indexOf(\"e\"));  \n public int getArrayIndex(int[] arr,int value) {          int k=0;         for(int i=0;i<arr.length;i++){              if(arr[i]==value){                 k=i;                 break;             }         }     return k; } \npublic class Exercise6 {        public static int  findIndex (int[] my_array, int t) {         if (my_array == null) return -1;         int len = my_array.length;         int i = 0;         while (i < len) {             if (my_array[i] == t) return i;             else i=i+1;         }         return -1;     }     public static void main(String[] args) {       int[] my_array = {25, 14, 56, 15, 36, 56, 77, 18, 29, 49};       System.out.println(\"Index position of 25 is: \" + findIndex(my_array, 25));       System.out.println(\"Index position of 77 is: \" + findIndex(my_array, 77));        } }  \npublic class compareArray{   public static void main(String[] args){          int[a] = {1,4,5,7};     int[b] = {6,4,3,7};               int[] ab = new int[4];               for(int i = 0; i<a.length; i++; )     {          if(a[i] == b[i])        {          int[] ab = new int[4];                  Arraylist<Integer> al = new Arraylist<Integer>();                  for(int i = 0; i < a.length; i++; )                      if(a[i] == b[i])                        {               al.add(a[i]);                               }                                      }       \t\tObject[] c= al.toArray();       \t\t\t       for(Object ob : c)       {         System.out.println(obj);       }\n",
    "reg_date": "2021-10-12T12:02:55.000Z"
  },
  {
    "id": 1427,
    "keyword": null,
    "link": null,
    "title": " get instance of object java",
    "description": "OBJECT.getClass()\n",
    "reg_date": "2021-10-12T12:02:55.000Z"
  },
  {
    "id": 1428,
    "keyword": null,
    "link": null,
    "title": " get intent not working in fragment",
    "description": "// add the getActivity() before getIntent and it should work perfectly  // inside your fragment Bundle bundle = getActivity().getIntent().getExtras();\n",
    "reg_date": "2021-10-12T12:02:55.000Z"
  },
  {
    "id": 1429,
    "keyword": null,
    "link": null,
    "title": " get intersection of two lists java",
    "description": "Set<String> result = list.stream()  .distinct()  .filter(otherList::contains)  .collect(Collectors.toSet()); Set<String> commonElements = new HashSet(Arrays.asList(\"red\", \"green\")); Assert.assertEquals(commonElements, result);\n",
    "reg_date": "2021-10-12T12:02:55.000Z"
  },
  {
    "id": 1430,
    "keyword": null,
    "link": null,
    "title": " get last element of array java",
    "description": "firstNum = numbers[0]; lastNum = numbers[numbers.length-1];\n arrayName[arrayName.length() - 1];\nArrayList<Integer> list = new ArrayList<Integer>(5);  int last = list.get(list.size() - 1); \nint [] numbers = {1, 2, 3, 4, 5};  firstElement = numbers[0]; lastElement = numbers[numbers.length-1];\nint[] someArray = {1,2,3,4,5}; int first = someArray[0]; int last = someArray[someArray.length - 1]; System.out.println(\"First: \" + first + \"\\n\" + \"Last: \" + last);\nint[] arr = new int[5]; //length of the array is 5 int val = arr[arr.length - 1]; //here variable val stores the last element of arr\n",
    "reg_date": "2021-10-12T12:02:55.000Z"
  },
  {
    "id": 1431,
    "keyword": null,
    "link": null,
    "title": " get last index of array java",
    "description": "firstNum = numbers[0]; lastNum = numbers[numbers.length-1];\n arrayName[arrayName.length() - 1];\nint[] someArray = {1,2,3,4,5}; int first = someArray[0]; int last = someArray[someArray.length - 1]; System.out.println(\"First: \" + first + \"\\n\" + \"Last: \" + last);\nint[] arr = new int[5]; //length of the array is 5 int val = arr[arr.length - 1]; //here variable val stores the last element of arr\nfirstNum = numbers.get(0); lastNum = numbers.get(numbers.size() - 1); \nint last = list.get(list.size() - 1); \n",
    "reg_date": "2021-10-12T12:02:55.000Z"
  },
  {
    "id": 1432,
    "keyword": null,
    "link": null,
    "title": " get long from date java",
    "description": "String string_date = \"12-December-2012\";  SimpleDateFormat f = new SimpleDateFormat(\"dd-MMM-yyyy\"); try {     Date d = f.parse(string_date);     long milliseconds = d.getTime(); } catch (ParseException e) {     e.printStackTrace(); }\n",
    "reg_date": "2021-10-12T12:02:55.000Z"
  },
  {
    "id": 1433,
    "keyword": null,
    "link": null,
    "title": " get method of a class which I only have  string to",
    "description": "String className = \"my.class.name\"; //Class name  Object classObj = null; try {   classObj = Class.forName(className); } catch (ClassNotFoundException e) {   e.printStackTrace(); }  Method classMethod = null; try {   classMethod = classObj.getClass().getMethod(\"method\", param1.class, param2.class, ..); } catch (SecurityException | NoSuchMethodException e) {   e.printStackTrace(); }  try {   classMethod.invoke(classObj, arg1, args2, ..); } catch (IllegalArgumentException | IllegalAccessException | InvocationTargetException) {   e.printStackTrace(); } \n",
    "reg_date": "2021-10-12T12:02:55.000Z"
  },
  {
    "id": 1434,
    "keyword": null,
    "link": null,
    "title": " get number of items in arraylist java",
    "description": "import java.util.ArrayList;  /*  * Java Program to find the length of ArrayList. *  */  public class ArrayListDemo{    public static void main(String[] args) {     System.out.println(\"Welcome to Java Program to find the length of array list\");      ArrayList<String> listOfBanks = new ArrayList<>();     int size = listOfBanks.size();     System.out.println(\"size of array list after creating: \" + size);      listOfBanks.add(\"Citibank\");     listOfBanks.add(\"Chase\");     listOfBanks.add(\"Bank of America\");     size = listOfBanks.size();      System.out.println(\"length of ArrayList after adding elements: \" + size);      listOfBanks.clear();     size = listOfBanks.size();     System.out.println(\"size of ArrayList after clearing elements: \" + size);   }  } Output Welcome to Java Program to find length of array list the size of array list after creating: 0 the length of ArrayList after adding elements: 3 the length of ArrayList after clearing elements: 0\n",
    "reg_date": "2021-10-12T12:02:55.000Z"
  },
  {
    "id": 1435,
    "keyword": null,
    "link": null,
    "title": " get number of items in combobox java",
    "description": " int size = jComboBox.getItemCount();\n",
    "reg_date": "2021-10-12T12:02:56.000Z"
  },
  {
    "id": 1436,
    "keyword": null,
    "link": null,
    "title": " get number of lines in a file java",
    "description": "BufferedReader reader = new BufferedReader(new FileReader(\"file.txt\")); int lines = 0; while (reader.readLine() != null) lines++; reader.close(); \n",
    "reg_date": "2021-10-12T12:02:56.000Z"
  },
  {
    "id": 1437,
    "keyword": null,
    "link": null,
    "title": " get preference value android",
    "description": "boolean mBoolean = PreferenceManager.getDefaultSharedPreferences(yourContext).getBoolean(key, defaultValue); //getBoolean will return defaultValue is key isn't found //you can also use getInt, getFloat, getLong, getString, getStringSet and change the variable type, of course \nboolean committed = PreferenceManager.getDefaultSharedPreferences(yourContext).edit().putBoolean(key, mValue).commit(); //you can also use putInt, putFloat, putLong, putString, putStringSet and change the value of mValue //committed is true if everything went alright, false if there was an error\n",
    "reg_date": "2021-10-12T12:02:56.000Z"
  },
  {
    "id": 1438,
    "keyword": null,
    "link": null,
    "title": " get random String from array list",
    "description": "    Random r = new Random();      int randomitem = r.nextInt(myList.size());     String randomElement = myList.get(randomitem); \n",
    "reg_date": "2021-10-12T12:02:56.000Z"
  },
  {
    "id": 1439,
    "keyword": null,
    "link": null,
    "title": " get raondom from array java",
    "description": "import java.util.Random;  public class RandomStringFromArray {       \tpublic static void main(String[] args)         {               \tString[] arr={\"1\", \"2\", \"3\", \"4\", \"5\"};       \tRandom r=new Random();               \tint randomNumber=r.nextInt(arr.length);       \tSystem.out.println(arr[randomNumber]);     } }\npublic static int getRandom(int[] array) {     int rnd = new Random().nextInt(array.length);     return array[rnd]; }\n",
    "reg_date": "2021-10-12T12:02:56.000Z"
  },
  {
    "id": 1440,
    "keyword": null,
    "link": null,
    "title": " get sha key android",
    "description": "keytool -list -v -keystore \"%USERPROFILE%\\.android\\debug.keystore\" -alias androiddebugkey -storepass android -keypass android\nexpo fetch:android:keystore  keytool -list -v -keystore {path_to_your_.jks_file} -alias {alias_name}  keytool -list -v -keystore myapp.jks -alias QHN1cmVwbHVzL3N1cmV  \nkeytool -list -v -keystore \"C:\\Users\\yourusernamehere\\.android\\debug.keystore\" -alias androiddebugkey -storepass android -keypass android \n",
    "reg_date": "2021-10-12T12:02:56.000Z"
  },
  {
    "id": 1441,
    "keyword": null,
    "link": null,
    "title": " get spring application context",
    "description": "public class SpringBean {   @Autowired   private ApplicationContext appContext; }\nserver.servlet.context-path=/SOMETHING\n<?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns=\"http://www.springframework.org/schema/beans\"        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"        xsi:schemaLocation=\"http://www.springframework.org/schema/beans            http://www.springframework.org/schema/beans/spring-beans.xsd\">    <bean id=\"...\" class=\"...\">     <!-- collaborators and configuration for this bean go here -->   </bean>    <bean id=\"...\" class=\"...\">     <!-- collaborators and configuration for this bean go here -->   </bean>    <!-- more bean definitions go here -->  </beans>\n",
    "reg_date": "2021-10-12T12:02:56.000Z"
  },
  {
    "id": 1442,
    "keyword": null,
    "link": null,
    "title": " get string of radio button in android",
    "description": "import android.app.Activity; import android.os.Bundle; import android.view.View; import android.view.View.OnClickListener; import android.widget.Button; import android.widget.RadioButton; import android.widget.RadioGroup; import android.widget.Toast;  public class MyAndroidAppActivity extends Activity {    private RadioGroup radioGroup;   private RadioButton radioButton;   private Button btnDisplay;    @Override   public void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);     setContentView(R.layout.main);      addListenerOnButton();    }    public void addListenerOnButton() {      radioGroup = (RadioGroup) findViewById(R.id.radio);     btnDisplay = (Button) findViewById(R.id.btnDisplay);      btnDisplay.setOnClickListener(new OnClickListener() {          @Override         public void onClick(View v) {                  // get selected radio button from radioGroup             int selectedId = radioGroup.getCheckedRadioButtonId();              // find the radiobutton by returned id             radioButton = (RadioButton) findViewById(selectedId);              Toast.makeText(MyAndroidAppActivity.this,                 radioButton.getText(), Toast.LENGTH_SHORT).show();          }      });    } }\n",
    "reg_date": "2021-10-12T12:02:56.000Z"
  },
  {
    "id": 1443,
    "keyword": null,
    "link": null,
    "title": " get text from a jtextfield",
    "description": "JTextField yourInpuFieldt = new JTextField(16); yourInputField.setText(\"put your text here\");   String x = yourInputField.getText();\n",
    "reg_date": "2021-10-12T12:02:56.000Z"
  },
  {
    "id": 1444,
    "keyword": null,
    "link": null,
    "title": " get text from edittext android",
    "description": "EditText myEditText =  (EditText) findViewById(R.id.vnosEmaila);  String text = myEditText.getText().toString(); \nEditText editText = (EditText)findViewById(R.id.edit_text); editText.setText(\"This sets the text.\", TextView.BufferType.EDITABLE); \n",
    "reg_date": "2021-10-12T12:02:57.000Z"
  },
  {
    "id": 1445,
    "keyword": null,
    "link": null,
    "title": " get tfidf score for a sentence",
    "description": ">>> from sklearn.feature_extraction.text import TfidfVectorizer >>> corpus = [ ...     'This is the first document.', ...     'This document is the second document.', ...     'And this is the third one.', ...     'Is this the first document?', ... ] >>> vectorizer = TfidfVectorizer() >>> X = vectorizer.fit_transform(corpus) >>> print(vectorizer.get_feature_names()) ['and', 'document', 'first', 'is', 'one', 'second', 'the', 'third', 'this'] >>> print(X.shape) (4, 9)\n",
    "reg_date": "2021-10-12T12:02:57.000Z"
  },
  {
    "id": 1446,
    "keyword": null,
    "link": null,
    "title": " get the image from camera click in android",
    "description": "package edu.gvsu.cis.masl.camerademo;  import android.app.Activity; import android.content.Intent; import android.graphics.Bitmap; import android.os.Bundle; import android.view.View; import android.widget.Button; import android.widget.ImageView;  public class MyCameraActivity extends Activity {     private static final int CAMERA_REQUEST = 1888;      private ImageView imageView;     private static final int MY_CAMERA_PERMISSION_CODE = 100;      @Override     public void onCreate(Bundle savedInstanceState)     {         super.onCreate(savedInstanceState);         setContentView(R.layout.main);         this.imageView = (ImageView)this.findViewById(R.id.imageView1);         Button photoButton = (Button) this.findViewById(R.id.button1);         photoButton.setOnClickListener(new View.OnClickListener()         {             @Override             public void onClick(View v)             {                 if (checkSelfPermission(Manifest.permission.CAMERA) != PackageManager.PERMISSION_GRANTED)                 {                     requestPermissions(new String[]{Manifest.permission.CAMERA}, MY_CAMERA_PERMISSION_CODE);                 }                 else                 {                     Intent cameraIntent = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);                      startActivityForResult(cameraIntent, CAMERA_REQUEST);                 }              }         });     }      @Override     public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults)     {         super.onRequestPermissionsResult(requestCode, permissions, grantResults);         if (requestCode == MY_CAMERA_PERMISSION_CODE)         {             if (grantResults[0] == PackageManager.PERMISSION_GRANTED)             {                 Toast.makeText(this, \"camera permission granted\", Toast.LENGTH_LONG).show();                 Intent cameraIntent = new Intent(android.provider.MediaStore.ACTION_IMAGE_CAPTURE);                  startActivityForResult(cameraIntent, CAMERA_REQUEST);             }             else             {                 Toast.makeText(this, \"camera permission denied\", Toast.LENGTH_LONG).show();             }         }     }      @Override     protected void onActivityResult(int requestCode, int resultCode, Intent data)     {           if (requestCode == CAMERA_REQUEST && resultCode == Activity.RESULT_OK)         {               Bitmap photo = (Bitmap) data.getExtras().get(\"data\");              imageView.setImageBitmap(photo);         }       }  }\n",
    "reg_date": "2021-10-12T12:02:57.000Z"
  },
  {
    "id": 1447,
    "keyword": null,
    "link": null,
    "title": " get today date in java 8",
    "description": "LocalDate localDate = LocalDate.now(); \n",
    "reg_date": "2021-10-12T12:02:57.000Z"
  },
  {
    "id": 1448,
    "keyword": null,
    "link": null,
    "title": " get type java",
    "description": "a.getClass().getName()\n((Object) myVar).getClass().getName() //OR ((Object) myInt).getClass().getSimpleName()\n",
    "reg_date": "2021-10-12T12:02:57.000Z"
  },
  {
    "id": 1449,
    "keyword": null,
    "link": null,
    "title": " get type of variable java",
    "description": "a.getClass().getName()\n//Example: Integer number = 15; System.out.println(number.getClass().getName());  //This print to console the fully qualified name of the class, which for the example is: java.lang.Integer  //If you want a more concise output, you can use instead: System.out.println(number.getClass().getSimpleName());  //getSimpleName() give you only the name of the class: Integer  //Printing the type of primitive variables is a bit more complex: see this  //https://stackoverflow.com/questions/180097/dynamically-find-the-class-that-represents-a-primitive-java-type //for details.\n((Object) myVar).getClass().getName() //OR ((Object) myInt).getClass().getSimpleName()\n",
    "reg_date": "2021-10-12T12:02:57.000Z"
  },
  {
    "id": 1450,
    "keyword": null,
    "link": null,
    "title": " get und set methoden java",
    "description": "this.getLukas();  public int getLukas() { return this.lukas }\n",
    "reg_date": "2021-10-12T12:02:57.000Z"
  },
  {
    "id": 1451,
    "keyword": null,
    "link": null,
    "title": " get username from jwt token request spring boot",
    "description": "UserDetails userDetails = (UserDetails) SecurityContextHolder.getContext().getAuthentication()                         .getPrincipal(); String username = userDetails.getUsername();\n",
    "reg_date": "2021-10-12T12:02:57.000Z"
  },
  {
    "id": 1452,
    "keyword": null,
    "link": null,
    "title": " get value google sheet with app script",
    "description": "var value = SpreadsheetApp.getActiveSheet().getRange('B12').getValue(); \n",
    "reg_date": "2021-10-12T12:02:57.000Z"
  },
  {
    "id": 1453,
    "keyword": null,
    "link": null,
    "title": " get value textfield java",
    "description": "button.addActionListener(new ActionListener(){    public void actionPerformed(ActionEvent ae){       String textFieldValue = testField.getText();       // .... do some operation on value ...    } })\n",
    "reg_date": "2021-10-12T12:02:57.000Z"
  },
  {
    "id": 1454,
    "keyword": null,
    "link": null,
    "title": " get world by name bukkit",
    "description": "Bukkit.getServer().getWorld(\"WorldName\");\n",
    "reg_date": "2021-10-12T12:02:57.000Z"
  },
  {
    "id": 1455,
    "keyword": null,
    "link": null,
    "title": " getcolor deprecated",
    "description": "ContextCompat.getColor(context, R.color.color_name)\nllMain.setBackgroundColor(ContextCompat.getColor(context, R.color.color_name));\n",
    "reg_date": "2021-10-12T12:02:58.000Z"
  },
  {
    "id": 1456,
    "keyword": null,
    "link": null,
    "title": " geting max value in priority queue java",
    "description": "PriorityQueue<Integer> maxPQ = new PriorityQueue<>((a,b) -> b - a);  \nPriorityQueue<Integer> maxPriorityQ = new PriorityQueue<Integer>(Collections.reverseOrder());\n",
    "reg_date": "2021-10-12T12:02:58.000Z"
  },
  {
    "id": 1457,
    "keyword": null,
    "link": null,
    "title": " getordefault java",
    "description": "    Map<String, String> map = new HashMap<>();      map.put(\"1\", \"Foo\");     //search for the entry with key==1, since present, returns foo     System.out.println(map.getOrDefault(\"1\", \"dumnba\"));     //search for the entry with key==2, since not present, returns dumnba     System.out.println(map.getOrDefault(\"2\", \"dumnba\"));\n",
    "reg_date": "2021-10-12T12:02:58.000Z"
  },
  {
    "id": 1458,
    "keyword": null,
    "link": null,
    "title": " getsupportactionbar activity",
    "description": "ActionBar mActionBar = ((AppCompatActivity) getActivity()).getSupportActionBar(); \n",
    "reg_date": "2021-10-12T12:02:58.000Z"
  },
  {
    "id": 1459,
    "keyword": null,
    "link": null,
    "title": " getting class name in java",
    "description": "a.getClass().getName();\n",
    "reg_date": "2021-10-12T12:02:58.000Z"
  },
  {
    "id": 1460,
    "keyword": null,
    "link": null,
    "title": " getting the last value of an integer in java",
    "description": "int lastDigit = number % 10\n",
    "reg_date": "2021-10-12T12:02:58.000Z"
  },
  {
    "id": 1461,
    "keyword": null,
    "link": null,
    "title": " git check who created branch",
    "description": "git for-each-ref --format='%(color:cyan)%(authordate:format:%m/%d/%Y %I:%M %p)    %(align:25,left)%(color:yellow)%(authorname)%(end) %(color:reset)%(refname:strip=3)' --sort=authordate refs/remotes\n",
    "reg_date": "2021-10-12T12:02:58.000Z"
  },
  {
    "id": 1462,
    "keyword": null,
    "link": null,
    "title": " git who created branch",
    "description": "git for-each-ref --format='%(color:cyan)%(authordate:format:%m/%d/%Y %I:%M %p)    %(align:25,left)%(color:yellow)%(authorname)%(end) %(color:reset)%(refname:strip=3)' --sort=authordate refs/remotes\n",
    "reg_date": "2021-10-12T12:02:58.000Z"
  },
  {
    "id": 1463,
    "keyword": null,
    "link": null,
    "title": " give a code for fibonacci numbers",
    "description": "import java.util.Scanner;  public class fibonaci {     public static void main(String[] args) {         System.out.println (\"Enter number of terms in the Series\");         Scanner sc = new Scanner (System.in);         int n = sc.nextInt ();          for (int i = 0; i < n; i++) {             System.out.print (fibo (i) + \" \");         }     }      public static int fibo(int i) {         if (i == 0) {              return 0;         } else if (i == 1) {             return 1;         } else {             return fibo (i - 1) + fibo (i - 2);         }     } } \n",
    "reg_date": "2021-10-12T12:02:58.000Z"
  },
  {
    "id": 1464,
    "keyword": null,
    "link": null,
    "title": " given a string s, return the first non-repeating character in it and return its index. if it does not exist, return -1.",
    "description": "import java.util.Scanner;          public class FirstRepeatedCharacter { \tScanner in = new Scanner( System.in);      \tpublic static void main(String[] args)  { \t\tFirstRepeatedCharacter frc = new FirstRepeatedCharacter(); \t\tfrc.mainLoop(); \t}     void mainLoop() {         String str = \" \";         System.out.println(\"Please enter a string: \");         str = in.next();         str = str.toLowerCase();         for(int i = 0; i < str.length(); i++) {             char character = str.charAt(i);             int firstIndex = str.indexOf(character);             int lastIndex = str.lastIndexOf(character);             if(firstIndex != lastIndex) {                 System.out.println(\"The character '\"+character+\"' is repeated\");                 break;              }         }     } }\n",
    "reg_date": "2021-10-12T12:02:59.000Z"
  },
  {
    "id": 1465,
    "keyword": null,
    "link": null,
    "title": " glide latest version android",
    "description": "implementation 'com.github.bumptech.glide:glide:4.12.0'   annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'\n",
    "reg_date": "2021-10-12T12:02:59.000Z"
  },
  {
    "id": 1466,
    "keyword": null,
    "link": null,
    "title": " global variable in java",
    "description": "public class Example {     public static int a;     public static int b; } \npublic class Example {     public static int a;     public static int b; }\n",
    "reg_date": "2021-10-12T12:02:59.000Z"
  },
  {
    "id": 1467,
    "keyword": null,
    "link": null,
    "title": " go from string to int java",
    "description": "String myString = \"1234\"; int foo = Integer.parseInt(myString);\nint result = Integer.parseInt(\"500\"); System.out.println(result) // prints 500 as int\nString myString = \"1234\"; int number = Integer.parseInt(myString);\nclass scratch{     public static void main(String[] args) {         String str = \"54\";         int num = Integer.parseInt(\"54\");         double doub = Double.parseDouble(\"54\");     } }\n",
    "reg_date": "2021-10-12T12:02:59.000Z"
  },
  {
    "id": 1468,
    "keyword": null,
    "link": null,
    "title": " go to activity android",
    "description": "Intent intent = new Intent(this, DisplayMessageActivity.class);         intent.putExtra(key:,value:);         startActivity(intent);\n//going to another activity while ending the  //previous one so that users cannot go back btListe = (ImageButton)findViewById(R.id.Button_Liste);     btListe.setOnClickListener(new OnClickListener()     {    public void onClick(View v)         {             intent = new Intent(main.this, ListViewImage.class);             startActivity(intent);             finish();         }     });\nOnClickListener onClickListener = new OnClickListener() {     @Override     public void onClick(View v) {         startActivity(new Intent(action));     } };  Button button = (Button) findViewById(id); button.setOnClickListener(onClickListener);\n",
    "reg_date": "2021-10-12T12:02:59.000Z"
  },
  {
    "id": 1469,
    "keyword": null,
    "link": null,
    "title": " google map set default zoom android studio",
    "description": "LatLng loc = new LatLng(33.8688, 151.2093); mMap.addMarker(new MarkerOptions().position(loc).title(\"Sydney\")); mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(loc, 18), 5000, null);\n",
    "reg_date": "2021-10-12T12:02:59.000Z"
  },
  {
    "id": 1470,
    "keyword": null,
    "link": null,
    "title": " google translate",
    "description": "upvote if you feel terrible\nlife is easier with google translate ;)\nnot cheating on spanish hell yea\n$after = preg_replace('/[^\\w\\s]+/u','' , $before);   // remove حرکت php word حذف حرکات و اعراب در پی اچ پی\nwhat are you doing here?\nAls je vertalen opzoekt kan je woorden en zinnen vertalen. Maar let op!!!! Google vertaler is niet zuiver onhou dat goed!!\nGlad to hear that I'm not the only german, having english problems ;)\nno cheating guys\nuse deepl.com instead\nCheating in french?\n",
    "reg_date": "2021-10-12T12:02:59.000Z"
  },
  {
    "id": 1471,
    "keyword": null,
    "link": null,
    "title": " gradle build skip test command",
    "description": "gradle build -x test  \ngradle build -x test \n",
    "reg_date": "2021-10-12T12:02:59.000Z"
  },
  {
    "id": 1472,
    "keyword": null,
    "link": null,
    "title": " gradle fatjar",
    "description": "//create a single Jar with all dependencies task fatJar(type: Jar) { \tmanifest {         attributes 'Implementation-Title': 'Gradle Jar File Example',         \t'Implementation-Version': version,         \t'Main-Class': 'com.mkyong.DateUtils'     }     baseName = project.name + '-all'     from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }     with jar }\n",
    "reg_date": "2021-10-12T12:02:59.000Z"
  },
  {
    "id": 1473,
    "keyword": null,
    "link": null,
    "title": " gradle javafx runtime components are missing and are required to run this application",
    "description": "/*  For example, you can have a main class that is not extending javafx.application.Application, and that main class can then call the main(String[]) method on your real main class (that way, the Java launcher doesn't require the javafx libraries to be available as named modules).  */  // Like this: // Your JavaFX Class public class YourJavaFXApplication extends Application {     public static void main(String[] args) {         launch(args);     }      @Override     public void start(Stage primaryStage) {         // Your JavaFx stuff     } }  // Your Main class which only purpose is to start your JavaFX class public class Main {     public static void main(String[] args) {         YourJavaFXApplication.main(args);     } }\n",
    "reg_date": "2021-10-12T12:02:59.000Z"
  },
  {
    "id": 1474,
    "keyword": null,
    "link": null,
    "title": " gradle reflections",
    "description": "implementation 'org.reflections:reflections:0.9.12'\n",
    "reg_date": "2021-10-12T12:03:00.000Z"
  },
  {
    "id": 1475,
    "keyword": null,
    "link": null,
    "title": " gradle require java version",
    "description": "// build.gradle apply plugin: 'java' sourceCompatibility = 1.8 targetCompatibility = 1.8\n",
    "reg_date": "2021-10-12T12:03:00.000Z"
  },
  {
    "id": 1476,
    "keyword": null,
    "link": null,
    "title": " gradle springboot run",
    "description": "./gradlew bootRun\n./mvnw spring-boot:run\n",
    "reg_date": "2021-10-12T12:03:00.000Z"
  },
  {
    "id": 1477,
    "keyword": null,
    "link": null,
    "title": " graphql java print schema",
    "description": "SchemaPrinter schemaPrinter = new SchemaPrinter(); schemaPrinter.print(schema);\n",
    "reg_date": "2021-10-12T12:03:00.000Z"
  },
  {
    "id": 1478,
    "keyword": null,
    "link": null,
    "title": " gravatar default",
    "description": "Gravatar Default https://www.gravatar.com/avatar/00000000000000000000000000000000?d=mp&f=y\n",
    "reg_date": "2021-10-12T12:03:00.000Z"
  },
  {
    "id": 1479,
    "keyword": null,
    "link": null,
    "title": " gravity in java",
    "description": "    GRAVITY = 10;     TERMINAL_VELOCITY = 300;     vertical_speed = 0;      public void fall(){      this.vertical_speed = this.vertical_speed + GRAVITY;     if(this.vertical_speed > TERMINAL_VELOCITY){         this.vertical_speed = TERMINAL_VELOCITY;     }     this.y = this.y - this.vertical_speed; }\nconst GRAVITY = 10; const TERMINAL_VELOCITY = 300;  object Player  {     int vertical_speed = 0;     int vertical_position;        function fall ()     {         this.vertical_speed = this.vertical_speed + GRAVITY;         if (this.vertical_speed > TERMINAL_VELOCITY)         {             this.vertical_speed = TERMINAL_VELOCITY;         }         this.vertical_position = this.vertical_position - this.vertical_speed;     } }\n",
    "reg_date": "2021-10-12T12:03:00.000Z"
  },
  {
    "id": 1480,
    "keyword": null,
    "link": null,
    "title": " greater than sign in java",
    "description": "== (equal to)\t != (not equal to)\t > (greater than)\t < (less than)\t >= (greater than or equal to)\t <= (less than or equal to)\t\n",
    "reg_date": "2021-10-12T12:03:00.000Z"
  },
  {
    "id": 1481,
    "keyword": null,
    "link": null,
    "title": " greatest common divisor java",
    "description": "int gcdByBruteForce(int n1, int n2) {     int gcd = 1;     for (int i = 1; i <= n1 && i <= n2; i++) {         if (n1 % i == 0 && n2 % i == 0) {             gcd = i;         }     }     return gcd; }\npublic class GCD {      public static void main(String[] args) {          int n1 = 81, n2 = 153, gcd = 1;          for(int i = 1; i <= n1 && i <= n2; ++i)         {             // Checks if i is factor of both integers             if(n1 % i==0 && n2 % i==0)                 gcd = i;         }          System.out.printf(\"G.C.D of %d and %d is %d\", n1, n2, gcd);     } }\nimport java.util.Scanner; public class GCDExample3 {      public static void main(String[] args) {          int num1, num2;                  //Reading the input numbers         Scanner scanner = new Scanner(System.in);         System.out.print(\"Enter first number:\");         num1 = (int)scanner.nextInt();                  System.out.print(\"Enter second number:\");         num2 = (int)scanner.nextInt();                  //closing the scanner to avoid memory leaks         scanner.close();         while (num1 != num2) {         \tif(num1 > num2)                 num1 = num1 - num2;             else                 num2 = num2 - num1;         }          //displaying the result         System.out.printf(\"GCD of given numbers is: %d\", num2);     }\n",
    "reg_date": "2021-10-12T12:03:00.000Z"
  },
  {
    "id": 1482,
    "keyword": null,
    "link": null,
    "title": " greatest element in array in java",
    "description": "private static int largest(int[] arr) {  \tint i = 0; \tint index = 0; \tfor(int c = 0;c < arr.length;c++){ \t\tif(i < arr[c]){ \t\t\ti = arr[c]; \t\t\tindex = c; \t\t} \t} \treturn i;   }\n",
    "reg_date": "2021-10-12T12:03:00.000Z"
  },
  {
    "id": 1483,
    "keyword": null,
    "link": null,
    "title": " grepper",
    "description": "one Like For Grepper Community\nGrepper's cool\nfact = \"Grepper's good stuff!\" print(fact)\nbest tool forever!\nIlikethisbecauseitmakesmylifeabiteasier.\nGrepper is perfect dictonary for helping codes you are looking around\nGrepper is a cool tool\nGrepper is amazing, I highly recommend it!!\nLove Grepper\nGREPPER IS THE BEST!\n",
    "reg_date": "2021-10-12T12:03:00.000Z"
  },
  {
    "id": 1484,
    "keyword": null,
    "link": null,
    "title": " gridpane javafx example",
    "description": "Button button1 = new Button(\"Button 1\"); Button button2 = new Button(\"Button 2\"); Button button3 = new Button(\"Button 3\"); Button button4 = new Button(\"Button 4\"); Button button5 = new Button(\"Button 5\"); Button button6 = new Button(\"Button 6\");  GridPane gridPane = new GridPane();  gridPane.add(button1, 0, 0, 1, 1); gridPane.add(button2, 1, 0, 1, 1); gridPane.add(button3, 2, 0, 1, 1); gridPane.add(button4, 0, 1, 1, 1); gridPane.add(button5, 1, 1, 1, 1); gridPane.add(button6, 2, 1, 1, 1); \n",
    "reg_date": "2021-10-12T12:03:01.000Z"
  },
  {
    "id": 1485,
    "keyword": null,
    "link": null,
    "title": " groovy ternary operator short form",
    "description": "something ?: 'default-value-if-false'\n",
    "reg_date": "2021-10-12T12:03:01.000Z"
  },
  {
    "id": 1486,
    "keyword": null,
    "link": null,
    "title": " groupie android",
    "description": "implementation \"com.xwray:groupie:$groupie_version\"\n",
    "reg_date": "2021-10-12T12:03:01.000Z"
  },
  {
    "id": 1487,
    "keyword": null,
    "link": null,
    "title": " guess the number java",
    "description": "import java.util.Scanner; import java.util.Random;  public class GuessingGame{      public static void main(String[] args) {          int random, guess, attempts;         Scanner keyboard = new Scanner(System.in);         Random generator = new Random();         random = generator.nextInt(100) + 1;         attempts = 1;           System.out.print(\"I am thinking of a number between 0 and 100, what do you think it is?\");          guess = keyboard.nextInt();          while (guess != random) {             if (guess > random) {                 System.out.print(\"Lower!\");                 attempts += 1;              }             else {                 System.out.print(\"Higher!\");                 attempts +=1;             }          }          System.out.print(random + \"is the correct answer and it took you\" + attempts + \"attempts to guess it!\");      }         }\n",
    "reg_date": "2021-10-12T12:03:01.000Z"
  },
  {
    "id": 1488,
    "keyword": null,
    "link": null,
    "title": " h2 database spring boot",
    "description": "spring.datasource.url=jdbc:h2:mem:testdb spring.datasource.driverClassName=org.h2.Driver spring.datasource.username=sa spring.datasource.password=password spring.jpa.database-platform=org.hibernate.dialect.H2Dialect \n<dependency>     <groupId>org.springframework.boot</groupId>     <artifactId>spring-boot-starter-data-jpa</artifactId>     <version>2.1.4.RELEASE</version> </dependency> <dependency>     <groupId>com.h2database</groupId>     <artifactId>h2</artifactId>     <scope>runtime</scope>     <version>1.4.199</version> </dependency> \nspring.datasource.url=jdbc:h2:mem:testdb spring.datasource.driverClassName=org.h2.Driver spring.datasource.username=sa spring.datasource.password=password spring.jpa.database-platform=org.hibernate.dialect.H2Dialect\n",
    "reg_date": "2021-10-12T12:03:01.000Z"
  },
  {
    "id": 1489,
    "keyword": null,
    "link": null,
    "title": " hadoop-master error java home is not set and could not be found",
    "description": "export JAVA_HOME=/usr/lib/jvm/java-1.6.0-openjdk \n",
    "reg_date": "2021-10-12T12:03:01.000Z"
  },
  {
    "id": 1490,
    "keyword": null,
    "link": null,
    "title": " handler delay android",
    "description": "final Handler handler = new Handler(); handler.postDelayed(new Runnable() {   @Override   public void run() {     //Do something after 100ms   } }, 100);\nHandler().postDelayed({   //Do something after 100ms }, 100) \n",
    "reg_date": "2021-10-12T12:03:01.000Z"
  },
  {
    "id": 1491,
    "keyword": null,
    "link": null,
    "title": " has a relationship in java",
    "description": "&lsquo;Has a &lsquo; relationship is also known as &ldquo;composition or Aggregation&rdquo;.  As in inheritance we have &lsquo;extends&rsquo; keyword we don&rsquo;t have any keyword to  implement &lsquo;Has a&rsquo; relationship in java. The main advantage of &lsquo;Has-A&lsquo;  relationship in java code reusability. For has a relationship we use new keyword  Ex: Car has an engine. We cannot say Car in an engine.\n&lsquo;is a&rsquo; relationship is also known as inheritance. We can implement  &lsquo;is a&rsquo; relationship or inheritance in java using extends keyword.  The advantage of inheritance or is a relationship is reusability of code  instead of duplicating the code.    Ex :  Motor cycle is a vehicle Car is a vehicle  Both, car and motorcycle extends vehicle.\nclass Apple extends Fruit {  } \npublic class Actress extends Person {        public String readScript(String movie) {        return \"Reading the script of \" + movie;    }         // additional methods/constructors}\nclass Room {      Table table = new Table();  } \n",
    "reg_date": "2021-10-12T12:03:01.000Z"
  },
  {
    "id": 1492,
    "keyword": null,
    "link": null,
    "title": " has been compiled by a more recent version of the Java Runtime (class file version ), this version of the Java Runtime only recognizes class file versions up to",
    "description": "Java version names in error messages: 49 = Java 5 50 = Java 6 51 = Java 7 52 = Java 8\t\t(or 1.8) 53 = Java 9 54 = Java 10 55 = Java 11 56 = Java 12 57 = Java 13 58 = Java 14  Solutions: 1. Update your JRE to the same version as your JDK If done manually in cmd: 2. javac --release 8 yourClass.java\t\t\t(of course insert wanted version number here) 3. javac -source 1.8 -target 1.8  *.java\t(Shows warning)\n",
    "reg_date": "2021-10-12T12:03:01.000Z"
  },
  {
    "id": 1493,
    "keyword": null,
    "link": null,
    "title": " has been compiled by a more recent version of the Java Runtime (class file version 55.0)",
    "description": "add env in manifest.yml  applications:  env:             JBP_CONFIG_OPEN_JDK_JRE: \"{jre: { version: 11.+ }}\"\nJava version names in error messages: 49 = Java 5 50 = Java 6 51 = Java 7 52 = Java 8\t\t(or 1.8) 53 = Java 9 54 = Java 10 55 = Java 11 56 = Java 12 57 = Java 13 58 = Java 14  Solutions: 1. Update your JRE to the same version as your JDK If done manually in cmd: 2. javac --release 8 yourClass.java\t\t\t(of course insert wanted version number here) 3. javac -source 1.8 -target 1.8  *.java\t(Shows warning)\n",
    "reg_date": "2021-10-12T12:03:01.000Z"
  },
  {
    "id": 1494,
    "keyword": null,
    "link": null,
    "title": " has integer java",
    "description": "// To Check The Given Number is Integer Or Not In Java import java.util.Scanner; public class Main { \tpublic static void main(String[] args) { \t\tScanner sc = new Scanner(System.in); \t\tSystem.out.println(\"Enter The Number\"); \t\tSystem.out.println(sc.hasNextInt()); \t} }\n",
    "reg_date": "2021-10-12T12:03:01.000Z"
  },
  {
    "id": 1495,
    "keyword": null,
    "link": null,
    "title": " hash hmac sha256 in java",
    "description": "import javax.crypto.Mac; import javax.crypto.spec.SecretKeySpec; import org.apache.commons.codec.binary.Base64;  public class ApiSecurityExample {   public static void main(String[] args) {     try {      String secret = \"secret\";      String message = \"Message\";       Mac sha256_HMAC = Mac.getInstance(\"HmacSHA256\");      SecretKeySpec secret_key = new SecretKeySpec(secret.getBytes(), \"HmacSHA256\");      sha256_HMAC.init(secret_key);       String hash = Base64.encodeBase64String(sha256_HMAC.doFinal(message.getBytes()));      System.out.println(hash);     }     catch (Exception e){      System.out.println(\"Error\");     }    } } \n",
    "reg_date": "2021-10-12T12:03:02.000Z"
  },
  {
    "id": 1496,
    "keyword": null,
    "link": null,
    "title": " hash of string java",
    "description": "// Needed imports import java.security.MessageDigest; import java.security.NoSuchAlgorithmException;  // Return the hash for the given string using the specified hashing algorithm (hashType) // Usable algorithms include: \"MD5\", \"SHA-256\", \"SHA3-256\" public static String getStringHash(String str, String hashType) throws NoSuchAlgorithmException { \t// hash string into byte array \tMessageDigest md = MessageDigest.getInstance(hashType); \tbyte[] hashbytes = md.digest(str.getBytes());  \t// convert byte array into hex string and return \tStringBuffer stringBuffer = new StringBuffer(); \tfor (int i = 0; i < hashbytes.length; i++) { \t\tstringBuffer.append(Integer.toString((hashbytes[i] & 0xff) + 0x100, 16) \t\t\t.substring(1)); \t} \treturn stringBuffer.toString(); }\n",
    "reg_date": "2021-10-12T12:03:02.000Z"
  },
  {
    "id": 1497,
    "keyword": null,
    "link": null,
    "title": " hashcode comparison in java",
    "description": " public class EqualsAndHashCodeExample {      public static void main(String... equalsExplanation) {         System.out.println(new Simpson(\"Homer\", 35, 120)                  .equals(new Simpson(\"Homer\",35,120)));                  System.out.println(new Simpson(\"Bart\", 10, 120)                  .equals(new Simpson(\"El Barto\", 10, 45)));                  System.out.println(new Simpson(\"Lisa\", 54, 60)                  .equals(new Object()));     } \t     static class Simpson {          private String name;         private int age;         private int weight;          public Simpson(String name, int age, int weight) {             this.name = name;             this.age = age;             this.weight = weight;         }          @Override         public boolean equals(Object o) {             if (this == o) {                 return true;             }             if (o == null || getClass() != o.getClass()) {                 return false;             }             Simpson simpson = (Simpson) o;             return age == simpson.age &&                     weight == simpson.weight &&                     name.equals(simpson.name);         }     }  }\npublic class EqualsAndHashCodeExample {      public static void main(String... equalsExplanation) {         System.out.println(new Simpson(\"Homer\", 35, 120)                  .equals(new Simpson(\"Homer\",35,120)));                  System.out.println(new Simpson(\"Bart\", 10, 120)                  .equals(new Simpson(\"El Barto\", 10, 45)));                  System.out.println(new Simpson(\"Lisa\", 54, 60)                  .equals(new Object()));     } \t     static class Simpson {          private String name;         private int age;         private int weight;          public Simpson(String name, int age, int weight) {             this.name = name;             this.age = age;             this.weight = weight;         }          @Override         public boolean equals(Object o) {             if (this == o) {                 return true;             }             if (o == null || getClass() != o.getClass()) {                 return false;             }             Simpson simpson = (Simpson) o;             return age == simpson.age &&                     weight == simpson.weight &&                     name.equals(simpson.name);         }     }  }\n",
    "reg_date": "2021-10-12T12:03:02.000Z"
  },
  {
    "id": 1498,
    "keyword": null,
    "link": null,
    "title": " hashmap get value by key java",
    "description": " //Import Hashmap import java.util.HashMap;         HashMap<String, String> dir = new HashMap<String, String>(); //Add key, values       dir.put(\"hi\", \"hello\"); \tdir.put(\"wow\", \"amazing\"); //print value for hi.     System.out.println(dir.get(\"hi\");\nimport java.util.HashMap; //Within a class //You can do new HashMap<Key Type, Value Type>();, but you don't need to HashMap<Int, String> examplehashmap=new HashMap<>(); { //put in values  examplehashmap.put(5, \"example\"); }; //get value examplehashmap.get(5); //returns \"example\"\n    Map<String, String> map = new HashMap<String, String>();          map.put(\"abc\", \"123\");     map.put(\"xyz\", \"456\");          for(Entry<String, String> entry : map.entrySet()) {         if(entry.getValue().equalsIgnoreCase(\"456\")) {             System.out.println(entry.getKey());         }     } \n",
    "reg_date": "2021-10-12T12:03:02.000Z"
  },
  {
    "id": 1499,
    "keyword": null,
    "link": null,
    "title": " hashmap get value java",
    "description": " //Import Hashmap import java.util.HashMap;         HashMap<String, String> dir = new HashMap<String, String>(); //Add key, values       dir.put(\"hi\", \"hello\"); \tdir.put(\"wow\", \"amazing\"); //print value for hi.     System.out.println(dir.get(\"hi\");\nimport java.util.HashMap; //Within a class //You can do new HashMap<Key Type, Value Type>();, but you don't need to HashMap<Int, String> examplehashmap=new HashMap<>(); { //put in values  examplehashmap.put(5, \"example\"); }; //get value examplehashmap.get(5); //returns \"example\"\npackage com.tutorialspoint;  import java.util.*;  public class HashMapDemo {    public static void main(String args[]) {              // create hash map       HashMap newmap = new HashMap();        // populate hash map       newmap.put(1, \"tutorials\");       newmap.put(2, \"point\");       newmap.put(3, \"is best\");        // get value of key 3       String val = (String)newmap.get(3);        // check the value       System.out.println(\"Value for key 3 is: \" + val);    }     }\n",
    "reg_date": "2021-10-12T12:03:02.000Z"
  },
  {
    "id": 1500,
    "keyword": null,
    "link": null,
    "title": " hashmap sort ascending",
    "description": "LinkedHashMap<String, Integer> sortedMap = new LinkedHashMap<>();   unSortedMap.entrySet()     .stream()     .sorted(Map.Entry.comparingByKey())     .forEachOrdered(x -> sortedMap.put(x.getKey(), x.getValue()));\n",
    "reg_date": "2021-10-12T12:03:02.000Z"
  },
  {
    "id": 1501,
    "keyword": null,
    "link": null,
    "title": " hashmaps java",
    "description": "// Import the HashMap class import java.util.HashMap;  \t// First Example     // Create a HashMap object called capitalCities     HashMap<String, String> capitalCities = new HashMap<String, String>();      // Add keys and values (Country, City)     \tcapitalCities.put(\"England\", \"London\");     \tcapitalCities.put(\"Germany\", \"Berlin\");     \tcapitalCities.put(\"Norway\", \"Oslo\");     \tcapitalCities.put(\"USA\", \"Washington DC\");     \tSystem.out.println(capitalCities);  \t//Second Example \t// Create a HashMap object called stGrade \tMap<String, Integer> stGrade = new HashMap<String, Integer>();   \t// Insert elements         \tstGrade.put(\"aaron\", new Integer(90));         \tstGrade.put(\"isaac\", new Integer(100));         \tstGrade.put(\"john\", new Integer(35));         \tstGrade.put(\"mohammad\", new Integer(100));   \t// Get value \t   \tstGrade.get(\"mohammad\"); \t// returns 100 \t\tstGrade.get(\"aaron\"); \t\t// returns 90 \t\tstGrade.get(\"john\");\t \t// returns 35 \t\tstGrade.get(\"isaac\"); \t\t// returns 100 \t\t\nimport java.util.HashMap; // import the HashMap class  // instantiate a HashMap instance HashMap<String, String> capitalCities = new HashMap<String, String>();  // SCROLL DOWN FOR LIST OF ALL METHODS -------------------------------------- // to use any methods below add the function name to the instance name // General Form: HashMapInstanceName.{functionName}({parameter list}); // Specific Example Using the Put Method:  capitalCities.put(\"California\", \"Sacramento\");  // SCROLL DOWN FOR LIST OF ALL METHODS --------------------------------------  1. void\tclear()    \t- Removes all of the mappings from this map.  2. Object clone()      - Returns a shallow copy of this HashMap instance: the keys and values themselves are not cloned.  3. boolean\tcontainsKey(Object key) \t- Returns true if this map contains a mapping for the specified key.  4. boolean\tcontainsValue(Object value) \t- Returns true if this map maps one or more keys to the specified value.  5. V\tget(Object key) \t- Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.  6. V\tgetOrDefault(Object key, V defaultValue) \t- Returns the value to which the specified key is mapped, or defaultValue if this map contains no mapping for the key.  7. boolean\tisEmpty() \t- Returns true if this map contains no key-value mappings.  8. Set<K>\tkeySet() \t- Returns a Set view of the keys contained in this map.        9. V\tput(K key, V value) \t- Associates the specified value with the specified key in this map.   10. V\tremove(Object key) \t- Removes the mapping for the specified key from this map if present.        11. boolean\tremove(Object key, Object value) \t- Removes the entry for the specified key only if it is currently mapped to the specified value.  12. V\treplace(K key, V value) \t- Replaces the entry for the specified key only if it is currently mapped to some value.  13. boolean\treplace(K key, V oldValue, V newValue) \t- Replaces the entry for the specified key only if currently mapped to the specified value.  14. int\tsize() \t- Returns the number of key-value mappings in this map.        15. Collection<V>\tvalues() \t- Returns a Collection view of the values contained in this map.\n//Hash map creation Map< String,Integer> hm =                           new HashMap< String,Integer>();  //inserting elements into hashmap        hm.put(\"a\", new Integer(100));         hm.put(\"b\", new Integer(200));         hm.put(\"c\", new Integer(300));         hm.put(\"d\", new Integer(400)); \nimport java.util.HashMap; //Within a class //You can do new HashMap<Key Type, Value Type>();, but you don't need to HashMap<Int, String> examplehashmap=new HashMap<>(); { //put in values  examplehashmap.put(5, \"example\"); }; //get value examplehashmap.get(5); //returns \"example\"\n",
    "reg_date": "2021-10-12T12:03:02.000Z"
  },
  {
    "id": 1502,
    "keyword": null,
    "link": null,
    "title": " hashset contains java",
    "description": "import java.util.HashSet; public class HashSetContainsObjectMethodExample {    public static void main(String[] args)    {       HashSet<String> hs = new HashSet<String>();       hs.add(\"hello\");       hs.add(\"world\");       hs.add(\"java\");       // check if element exists       boolean bool = hs.contains(\"world\");       System.out.println(\"Is element 'world' exists: \" + bool);    } }\n HashSet<Integer> set = new HashSet<Integer>();       set.contains(110)//public boolean contains(Object o)  \n",
    "reg_date": "2021-10-12T12:03:02.000Z"
  },
  {
    "id": 1503,
    "keyword": null,
    "link": null,
    "title": " hashtable contains key java",
    "description": "Hash_table.containsKey(key_element)\n",
    "reg_date": "2021-10-12T12:03:02.000Z"
  },
  {
    "id": 1504,
    "keyword": null,
    "link": null,
    "title": " hasnext in java",
    "description": "import java.util.*; import java.util.regex.Pattern;  public class ScannerDemo {    public static void main(String[] args) {        String s = \"Hello World! 3 + 3.0 = 6\";        // create a new scanner with the specified String Object       Scanner scanner = new Scanner(s);        // check if the scanner has a token       System.out.println(\"\" + scanner.hasNext());        // print the rest of the string       System.out.println(\"\" + scanner.nextLine());        // check if the scanner has a token after printing the line       System.out.println(\"\" + scanner.hasNext());        // close the scanner       scanner.close();    } }\n",
    "reg_date": "2021-10-12T12:03:02.000Z"
  },
  {
    "id": 1505,
    "keyword": null,
    "link": null,
    "title": " hdfs read file java",
    "description": "Configuration conf = new Configuration(); conf.addResource(new Path(\"C:\\\\hadoop-3.1.0\\\\etc\\\\hadoop\\\\core-site.xml\")); conf.addResource(new Path(\"C:\\\\hadoop-3.1.0\\\\etc\\\\hadoop\\\\hdfs-site.xml\"));  BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String filePath = \"hdfs://localhost:9000/directory/file.txt\";  Path path = new Path(filePath); FileSystem fs = path.getFileSystem(conf); FSDataInputStream inputStream = fs.open(path); System.out.println(inputStream.available()); String line = null; while((line = inputStream.readLine()) != null) {   System.out.println(line); } fs.close();\nConfiguration conf = new Configuration(); Path path = new Path(\"hdfs file path\"); FileSystem fs = FileSystem.get(path.toUri(), conf); BufferedReader br=new BufferedReader(new InputStreamReader(fs.open(path))); try {   String line;   line=br.readLine();   while (line != null){     System.out.println(line);      // be sure to read the next line otherwise you'll get an infinite loop     line = br.readLine();   } } finally {   // you should close out the BufferedReader   br.close(); }\n",
    "reg_date": "2021-10-12T12:03:03.000Z"
  },
  {
    "id": 1506,
    "keyword": null,
    "link": null,
    "title": " heap in java",
    "description": "import java.util.PriorityQueue;  public class MaxHeapWithPriorityQueue {      public static void main(String args[]) {         // create priority queue         PriorityQueue<Integer> prq = new PriorityQueue<>(Comparator.reverseOrder());          // insert values in the queue         prq.add(6);         prq.add(9);         prq.add(5);         prq.add(64);         prq.add(6);          //print values         while (!prq.isEmpty()) {             System.out.print(prq.poll()+\" \");         }     }  }\n In Java PriorityQueue can be used as a Heap.  Min Heap PriorityQueue<Integer> minHeap = new PriorityQueue<>();   Max Heap: PriorityQueue<Integer> maxHeap = new PriorityQueue<>(Comparator.reverseOrder());\npublic class BinaryHeap {           private static final int d= 2;     private int[] heap;     private int heapSize;           /**      * This will initialize our heap with default size.       */     public BinaryHeap(int capacity){         heapSize = 0;         heap = new int[ capacity+1];         Arrays.fill(heap, -1);               }           /**      *  This will check if the heap is empty or not      *  Complexity: O(1)      */     public boolean isEmpty(){         return heapSize==0;     }           /**      *  This will check if the heap is full or not      *  Complexity: O(1)      */     public boolean isFull(){         return heapSize == heap.length;     }                 private int parent(int i){         return (i-1)/d;     }           private int kthChild(int i,int k){         return d*i  +k;     }           /**      *  This will insert new element in to heap      *  Complexity: O(log N)      *  As worst case scenario, we need to traverse till the root      */     public void insert(int x){         if(isFull())             throw new NoSuchElementException(\"Heap is full, No space to insert new element\");         heap[heapSize++] = x;         heapifyUp(heapSize-1);     }           /**      *  This will delete element at index x      *  Complexity: O(log N)      *       */     public int delete(int x){         if(isEmpty())             throw new NoSuchElementException(\"Heap is empty, No element to delete\");         int key = heap[x];         heap[x] = heap[heapSize -1];         heapSize--;         heapifyDown(x);         return key;     }       /**      *  This method used to maintain the heap property while inserting an element.      *        */     private void heapifyUp(int i) {         int temp = heap[i];         while(i>0 && temp > heap[parent(i)]){             heap[i] = heap[parent(i)];             i = parent(i);         }         heap[i] = temp;     }           /**      *  This method used to maintain the heap property while deleting an element.      *        */     private void heapifyDown(int i){         int child;         int temp = heap[i];         while(kthChild(i, 1) < heapSize){             child = maxChild(i);             if(temp < heap[child]){ heap[i] = heap[child]; }else break; i = child; } heap[i] = temp; } private int maxChild(int i) { int leftChild = kthChild(i, 1); int rightChild = kthChild(i, 2); return heap[leftChild]>heap[rightChild]?leftChild:rightChild;     }           /**      *  This method used to print all element of the heap      *        */     public void printHeap()         {             System.out.print(\"nHeap = \");             for (int i = 0; i < heapSize; i++)                 System.out.print(heap[i] +\" \");             System.out.println();         }     /**      *  This method returns the max element of the heap.      *  complexity: O(1)      */      public int findMax(){          if(isEmpty())              throw new NoSuchElementException(\"Heap is empty.\");          return heap[0];      }             public static void main(String[] args){          BinaryHeap maxHeap = new BinaryHeap(10);          maxHeap.insert(10);          maxHeap.insert(4);          maxHeap.insert(9);          maxHeap.insert(1);          maxHeap.insert(7);          maxHeap.insert(5);          maxHeap.insert(3);                     maxHeap.printHeap();          maxHeap.delete(5);          maxHeap.printHeap();                 } } \nWhenever an object is created, it&rsquo;s always stored in the Heap space, and stack memory contains the reference to it. Stack memory only contains local primitive variables and reference variables to objects in heap space. Objects stored in the heap are globally accessible whereas stack memory can&rsquo;t  be accessed by other threads. Memory management in stack is done in LIFO manner whereas it&rsquo;s more complex in Heap memory because it&rsquo;s used globally. Stack memory is short-lived whereas heap memory lives from the start till the end of application execution. Heap memory is used by all the parts of the application, stack memory is used only by one thread of execution. When stack memory is full, Java runtime throws java.lang.StackOverFlowError When heap memory is full, it throws java.lang.OutOfMemoryError: Java Heap Space error. Stack memory is faster than heap memory.\n",
    "reg_date": "2021-10-12T12:03:03.000Z"
  },
  {
    "id": 1507,
    "keyword": null,
    "link": null,
    "title": " heap memory vs string pool",
    "description": "String uses a special memory location to reuse of String objects called String Constant Pool. String objects created without the use of new keyword are stored in the String Constant Pool part of the heap. It doesn't create the same string object if there is already string constant in the pool.   String str = new String(\"\"); String str2 = \"\";  Str goes to heap memory str2 goes to string pool location  They both immutable and they save in different  memory location. \n",
    "reg_date": "2021-10-12T12:03:03.000Z"
  },
  {
    "id": 1508,
    "keyword": null,
    "link": null,
    "title": " height constraint layout guideline",
    "description": "<android.support.constraint.ConstraintLayout     xmlns:android=\"http://schemas.android.com/apk/res/android\"     xmlns:app=\"http://schemas.android.com/apk/res-auto\"     android:layout_width=\"match_parent\"     android:layout_height=\"match_parent\">      <ImageView         android:id=\"@+id/img_icon\"         android:layout_width=\"0dp\"         android:layout_height=\"0dp\"         android:background=\"@color/dark_red\"         app:layout_constraintBottom_toBottomOf=\"parent\"         app:layout_constraintDimensionRatio=\"1:1\"         app:layout_constraintEnd_toEndOf=\"parent\"         app:layout_constraintStart_toStartOf=\"parent\"         app:layout_constraintTop_toTopOf=\"parent\"         app:layout_constraintWidth_percent=\"0.5\" />  </android.support.constraint.ConstraintLayout>\n",
    "reg_date": "2021-10-12T12:03:03.000Z"
  },
  {
    "id": 1509,
    "keyword": null,
    "link": null,
    "title": " hello word java",
    "description": "public class HelloWorld {     public static void main(String []args) {       /* println() function to write Hello, World! */       System.out.println(\"Hello, World!\");         } }\npublic class HelloWorld{      public static void main(String []args){         System.out.println(\"Hello World\");      } }\nclass main {     public static void main(String[] args) {         System.out.println(\"Hello World!\");     } } \nclass HelloWorld {     public static void main(String[] args) {         System.out.println(\"shart\");      } }\n// This is just a line of code, but publilc class.... is needed!         System.out.println(\"This will be printed\");\n",
    "reg_date": "2021-10-12T12:03:03.000Z"
  },
  {
    "id": 1510,
    "keyword": null,
    "link": null,
    "title": " hello world",
    "description": "class HelloWorld {     public static void main(String[] args) {         System.out.println(\"Hello, World!\");     } }\nprint(\"Hello World\")\n// Objective-C hello world  #import <Foundation/Foundation.h>  int main(int argc, char * argv[]) {   @autoreleasepool {     NSLog (@\"Hello, World\");   } }\n// I can't believe there is no grepper answer here!  // Here is Java hello world:  public class HelloWorld {     public static void main(String[] args) {         System.out.println(\"Hello, World!\");     } }\n#include <iostream> int main(){ cout << \"Hello World!\"; return 0; }\necho(\"hello world\");\n#include <iostream> std::cout << \"Hello, World!\";\nHello World!\n<p>Hello World </p>\n//This is a simple Hello World program.  public class hello world { \tpublic static void main(Strin[] args) {      \tSystem.out.println(\"Hello World\");      } }\n",
    "reg_date": "2021-10-12T12:03:03.000Z"
  },
  {
    "id": 1511,
    "keyword": null,
    "link": null,
    "title": " hello world in java",
    "description": "public class Main {    public static void main(String[] args) {   \tSystem.out.println(\"Hello, World!\");    }    }\npublic static void main(String[] args){   System.out.println(\"Hello World\"); }\npublic class className{   public static void main(String[] args){     System.out.println(\"Hello World\"); // println brings into a new line and print doen't   } }\nclass HelloWorld {   public static void main(string[] args) {     System.out.println(\"Hello World!\");   } }\nimport javax.swing.JFrame;  //Importing class JFrame import javax.swing.JLabel;  //Importing class JLabel public class HelloWorld {     public static void main(String[] args) {         JFrame frame = new JFrame();           //Creating frame         frame.setTitle(\"Hi!\");                 //Setting title frame         frame.add(new JLabel(\"Hello, world!\"));//Adding text to frame         frame.pack();                          //Setting size to smallest         frame.setLocationRelativeTo(null);     //Centering frame         frame.setVisible(true);                //Showing frame     } }\n//Print Hello World in Java  public class HelloWorld {     public static void main(String[] args) {         System.out.println(\"Hello, World!\");      } }\n",
    "reg_date": "2021-10-12T12:03:03.000Z"
  },
  {
    "id": 1512,
    "keyword": null,
    "link": null,
    "title": " hello world java",
    "description": "public class Main {    public static void main(String[] args) {   \tSystem.out.println(\"Hello, World!\");    }    }\nclass main {     public static void main(String[] args) {         System.out.println(\"Hello World!\");     } } \n// This is just a line of code, but publilc class.... is needed!         System.out.println(\"This will be printed\");\npublic class Main {    public static void main(String[] args) {     HelloWorld helloworld = new HelloWorld(\"Hello World\");     helloworld.Print()   }   static class HelloWorld{     String sentence;     HelloWorld(String sentence){       this.sentence = sentence;     }     static void Print(){       System.out.println(sentence)       } }\nclass HelloWorld {     public static void main(String[] args) {         System.out.println(\"Hello, World!\");      } }\npublic class FirstProgram  {     public static void main(String[] args)     {         System.out.println(\"Hello World.\");     } }\nclass App {  public static void main(String[] args)  {   // Make sure to save the file with the .java extension and the program   // name should mark the class name, in this case, App    System.out.println(\"Hello World\");   } }\n",
    "reg_date": "2021-10-12T12:03:03.000Z"
  },
  {
    "id": 1513,
    "keyword": null,
    "link": null,
    "title": " hello world program i n java",
    "description": "public class HelloWorld {     public static void main(String []args) {       /* println() function to write Hello, World! */       System.out.println(\"Hello, World!\");         } }\n// Your First Program  class HelloWorld {     public static void main(String[] args) {         System.out.println(\"Hello, World!\");      } }\n",
    "reg_date": "2021-10-12T12:03:03.000Z"
  },
  {
    "id": 1514,
    "keyword": null,
    "link": null,
    "title": " hellow world java code",
    "description": "//simple hello world code for Java class HelloWorld {     public static void main(String[] args) {         System.out.println(\"Hello, World!\");      } }\n",
    "reg_date": "2021-10-12T12:03:03.000Z"
  },
  {
    "id": 1515,
    "keyword": null,
    "link": null,
    "title": " hexadecimal to octal in java",
    "description": "import java.util.Scanner; public class OctalToHexadecimal {    public static void main(String[] args)    {       String strOctalNumber, strHexNumber;       Scanner sc = new Scanner(System.in);       System.out.print(\"Please enter octal number: \");       strOctalNumber = sc.nextLine();       int decimalNumber = Integer.parseInt(strOctalNumber, 8);       strHexNumber = Integer.toHexString(decimalNumber);       System.out.print(\"Hexadecimal value of \" + strOctalNumber + \" is: \\n\");       System.out.print(strHexNumber);       sc.close();    } }\nimport java.util.Scanner; public class HexadecimalToOctal {    public static void main(String[] args)    {       int decimalNumber, a = 1, b;       int[] octalNumber = new int[100];       Scanner sc = new Scanner(System.in);       System.out.print(\"Please enter a hexadecimal number: \");       String strHexNumber = sc.nextLine();       // converting hexadecimal number to decimal number       decimalNumber = hexToDecimal(strHexNumber);       // converting decimal to octal       while(decimalNumber != 0)       {          octalNumber[a++] = decimalNumber % 8;          decimalNumber = decimalNumber / 8;       }       System.out.print(\"Octal number is: \");       for(b = a - 1; b > 0; b--)       {          System.out.print(octalNumber[b]);       }       System.out.print(\"\\n\");       sc.close();    }    public static int hexToDecimal(String str)    {       String strDigits = \"0123456789ABCDEF\";       str = str.toUpperCase();       int value = 0;       for(int a = 0; a < str.length(); a++)       {          char ch = str.charAt(a);          int deci = strDigits.indexOf(ch);          value = 16 * value + deci;       }       return value;    } }\n",
    "reg_date": "2021-10-12T12:03:04.000Z"
  },
  {
    "id": 1516,
    "keyword": null,
    "link": null,
    "title": " hibernate.cfg.xml",
    "description": "<?xml version = \"1.0\" encoding = \"utf-8\"?> <!DOCTYPE hibernate-configuration SYSTEM  \"http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd\"> <hibernate-configuration>    <session-factory>           <property name = \"hibernate.dialect\">          org.hibernate.dialect.MySQLDialect       </property>              <property name = \"hibernate.connection.driver_class\">          com.mysql.jdbc.Driver       </property>              <!-- Assume test is the database name -->              <property name = \"hibernate.connection.url\">          jdbc:mysql://localhost/test       </property>              <property name = \"hibernate.connection.username\">          root       </property>              <property name = \"hibernate.connection.password\">          root123       </property>              <!-- List of XML mapping files -->       <mapping resource = \"Employee.hbm.xml\"/>           </session-factory> </hibernate-configuration>\n<?xml version='1.0' encoding='UTF-8'?>   <!DOCTYPE hibernate-configuration PUBLIC             \"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"             \"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd\">      <hibernate-configuration>          <session-factory>           <property name=\"hbm2ddl.auto\">update</property>           <property name=\"dialect\">org.hibernate.dialect.Oracle9Dialect</property>           <property name=\"connection.url\">jdbc:oracle:thin:@localhost:1521:xe</property>           <property name=\"connection.username\">system</property>           <property name=\"connection.password\">oracle</property>           <property name=\"connection.driver_class\">oracle.jdbc.driver.OracleDriver</property>       <mapping resource=\"employee.hbm.xml\"/>       </session-factory>      </hibernate-configuration>  \n<property name=\"connection.driver_class\">com.mysql.cj.jdbc.Driver</property>\n",
    "reg_date": "2021-10-12T12:03:04.000Z"
  },
  {
    "id": 1517,
    "keyword": null,
    "link": null,
    "title": " hibernate configuration file",
    "description": "<?xml version='1.0' encoding='UTF-8'?>   <!DOCTYPE hibernate-configuration PUBLIC             \"-//Hibernate/Hibernate Configuration DTD 3.0//EN\"             \"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd\">      <hibernate-configuration>          <session-factory>           <property name=\"hbm2ddl.auto\">update</property>           <property name=\"dialect\">org.hibernate.dialect.Oracle9Dialect</property>           <property name=\"connection.url\">jdbc:oracle:thin:@localhost:1521:xe</property>           <property name=\"connection.username\">system</property>           <property name=\"connection.password\">oracle</property>           <property name=\"connection.driver_class\">oracle.jdbc.driver.OracleDriver</property>       <mapping resource=\"employee.hbm.xml\"/>       </session-factory>      </hibernate-configuration>  \n",
    "reg_date": "2021-10-12T12:03:04.000Z"
  },
  {
    "id": 1518,
    "keyword": null,
    "link": null,
    "title": " hibernate create query count return",
    "description": "// All entries Long count = (Long) session.createQuery(\"select count(ALL YourTable) from YourTable yourTable\").getSingleResult();  // filtered entries Long count = (Long) session.createQuery(\"select count(yourTable) from YourTable yourTable where yourTable.whatever = whatever\").setParameter(\"whatever\", yourParam).getSingleResult();\n",
    "reg_date": "2021-10-12T12:03:04.000Z"
  },
  {
    "id": 1519,
    "keyword": null,
    "link": null,
    "title": " hibernate select count",
    "description": "// All entries Long count = (Long) session.createQuery(\"select count(ALL YourTable) from YourTable yourTable\").getSingleResult();  // filtered entries Long count = (Long) session.createQuery(\"select count(yourTable) from YourTable yourTable where yourTable.whatever = whatever\").setParameter(\"whatever\", yourParam).getSingleResult();\n",
    "reg_date": "2021-10-12T12:03:04.000Z"
  },
  {
    "id": 1520,
    "keyword": null,
    "link": null,
    "title": " hide back button flutter",
    "description": "appBar: AppBar(   title: Text(\"App Bar without Back Button\"),   automaticallyImplyLeading: false, ),\n",
    "reg_date": "2021-10-12T12:03:04.000Z"
  },
  {
    "id": 1521,
    "keyword": null,
    "link": null,
    "title": " hide elements android",
    "description": "//in your XML file: android:visibility=\"gone\" <-- hides  android:visibility=\"visible\" <-- makes it visible  //or in java file: textView.setVisibility(View.GONE);//makes it disappear  textView.setVisibility(View.VISIBLE);//makes it visible again\n",
    "reg_date": "2021-10-12T12:03:04.000Z"
  },
  {
    "id": 1522,
    "keyword": null,
    "link": null,
    "title": " hide the title bar android studio",
    "description": "<style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\" />\ngetSupportActionBar().hide(); \nIf you are using Android Studio, go to the .xml located below: res/values/themes/themes.xml You will find two themes.xml, the one of those will be the night setting Open those .xml files and in the node named style change the value of the  parent attribute to: \"Theme.MaterialComponents.DayNight.NoActionBar\"\n",
    "reg_date": "2021-10-12T12:03:04.000Z"
  },
  {
    "id": 1523,
    "keyword": null,
    "link": null,
    "title": " highlight selected item in recyclerview android",
    "description": "holder.itemView.setBackgroundColor(Color.parseColor(\"#000000\")); \n",
    "reg_date": "2021-10-12T12:03:04.000Z"
  },
  {
    "id": 1524,
    "keyword": null,
    "link": null,
    "title": " his version of the Android Support plugin for IntelliJ IDEA (or Android Studio) cannot open this project, please retry with version 4.2 or newer.",
    "description": "classpath 'com.android.tools.build:gradle:4.0.1' \ndistributionUrl=https\\://services.gradle.org/distributions/gradle-6.1.1-all.zip \n",
    "reg_date": "2021-10-12T12:03:04.000Z"
  },
  {
    "id": 1525,
    "keyword": null,
    "link": null,
    "title": " how-to-check-internet-connection-in-android",
    "description": "public static boolean isNetworkConnected(Context context) {         ConnectivityManager cm = (ConnectivityManager) context                 .getSystemService(Context.CONNECTIVITY_SERVICE);         NetworkInfo ni = cm.getActiveNetworkInfo();         if (ni == null) {             // There are no active networks.             return false;         } else {             return true;         }      }\n",
    "reg_date": "2021-10-12T12:03:04.000Z"
  },
  {
    "id": 1526,
    "keyword": null,
    "link": null,
    "title": " how add strings together",
    "description": "//Java String firstName = \"BarackObama\"; String lastName = \" Care\"; //First way System.out.println(firstName + lastName); //Second way String name = firstName + lastName; System.out.println(name); //Third way System.out.println(\"BarackObama\" + \" Care\");\n",
    "reg_date": "2021-10-12T12:03:05.000Z"
  },
  {
    "id": 1527,
    "keyword": null,
    "link": null,
    "title": " how are tectonic plates formed",
    "description": "public class idk {     public static void main(String[] args) {          System.out.println(\"I suck at tectonic plates! Help pls...\");          } }\n",
    "reg_date": "2021-10-12T12:03:05.000Z"
  },
  {
    "id": 1528,
    "keyword": null,
    "link": null,
    "title": " how can I do tf idf weighting in scikit learn?",
    "description": ">>> from sklearn.feature_extraction.text import TfidfVectorizer >>> corpus = [ ...     'This is the first document.', ...     'This document is the second document.', ...     'And this is the third one.', ...     'Is this the first document?', ... ] >>> vectorizer = TfidfVectorizer() >>> X = vectorizer.fit_transform(corpus) >>> print(vectorizer.get_feature_names()) ['and', 'document', 'first', 'is', 'one', 'second', 'the', 'third', 'this'] >>> print(X.shape) (4, 9)\n>>> from sklearn.feature_extraction.text import TfidfTransformer >>> from sklearn.feature_extraction.text import CountVectorizer >>> from sklearn.pipeline import Pipeline >>> import numpy as np >>> corpus = ['this is the first document', ...           'this document is the second document', ...           'and this is the third one', ...           'is this the first document'] >>> vocabulary = ['this', 'document', 'first', 'is', 'second', 'the', ...               'and', 'one'] >>> pipe = Pipeline([('count', CountVectorizer(vocabulary=vocabulary)), ...                  ('tfid', TfidfTransformer())]).fit(corpus) >>> pipe['count'].transform(corpus).toarray() array([[1, 1, 1, 1, 0, 1, 0, 0],        [1, 2, 0, 1, 1, 1, 0, 0],        [1, 0, 0, 1, 0, 1, 1, 1],        [1, 1, 1, 1, 0, 1, 0, 0]]) >>> pipe['tfid'].idf_ array([1.        , 1.22314355, 1.51082562, 1.        , 1.91629073,        1.        , 1.91629073, 1.91629073]) >>> pipe.transform(corpus).shape (4, 8)\n",
    "reg_date": "2021-10-12T12:03:05.000Z"
  },
  {
    "id": 1529,
    "keyword": null,
    "link": null,
    "title": " how can I split string according to space in java?",
    "description": "str = \"Hello I'm your String\"; String[] splited = str.split(\"\\\\s+\"); \nString[] splitted = \"peter,james,thomas\".split(\",\");\nString lineOfCurrencies = \"USD JPY AUD SGD HKD CAD CHF GBP EURO INR\"; String[] currencies = lineOfCurrencies.split(\" \");\n",
    "reg_date": "2021-10-12T12:03:05.000Z"
  },
  {
    "id": 1530,
    "keyword": null,
    "link": null,
    "title": " how do i print text in java",
    "description": "System.out.println(\"your text\" ); /* this will print your message and then move your cursor to the next line */ /* or */ System.out.print(\"your text\"); /* this will print your message and keep it on the same line */ /* to print multiple items in one statement us a + between them */ System.out.println(\"age: \" + age);\n",
    "reg_date": "2021-10-12T12:03:05.000Z"
  },
  {
    "id": 1531,
    "keyword": null,
    "link": null,
    "title": " how do i scan for n times in java",
    "description": "//Link: https://www.quora.com/How-do-I-can-get-n-lines-of-text-as-input-from-the-user-in-java  //using Scanner  import java.util.Scanner;  public class ScannerDemo  {    public static void main(String args[])    {       Scanner sc = new Scanner(System.in);       int n;       n=Integer.parseInt(sc.nextLine());      for(int i=1; i<=n; i++)      {         System.out.print(\"Enter input:\");       String input = sc.nextLine();       System.out.println(input);      }    }  }  \n",
    "reg_date": "2021-10-12T12:03:05.000Z"
  },
  {
    "id": 1532,
    "keyword": null,
    "link": null,
    "title": " how do you change from string to integer in java",
    "description": "String myString = \"1234\"; int foo = Integer.parseInt(myString);\n",
    "reg_date": "2021-10-12T12:03:05.000Z"
  },
  {
    "id": 1533,
    "keyword": null,
    "link": null,
    "title": " how do you handle exceptions in java",
    "description": "I use try & catch blocks to handle any exceptions in my code.    I am familiar with major checked and unchecked exceptions and    handle it accordingly to make my code execution smooth\nI use try & catch & finally block to handle exception if I will use the method in different class.  Or If I will use it only once and if it is checked exception then I use THROWS keyword on method signature\n",
    "reg_date": "2021-10-12T12:03:05.000Z"
  },
  {
    "id": 1534,
    "keyword": null,
    "link": null,
    "title": " how do you make a method that returns an array java",
    "description": "public static int[] numbers()   {   int[] arr={5,6,7,8,9};  //initializing array   return arr;   }  \n",
    "reg_date": "2021-10-12T12:03:05.000Z"
  },
  {
    "id": 1535,
    "keyword": null,
    "link": null,
    "title": " how do you print code in java",
    "description": "System.out.print(46); // prints on the same line System.out.println(\"Tree\"); // prints code on a new line\n",
    "reg_date": "2021-10-12T12:03:05.000Z"
  },
  {
    "id": 1536,
    "keyword": null,
    "link": null,
    "title": " how does multiplication works in Java",
    "description": "Java provides several arithmetic operations that you can use in your programs.   In order to multiply numbers in Java, we will use the asterisk (*) between each number or variable\npublic class SumOfElements {      public static void main(String[] args){          int[] a = {1,2,3,4,5};               int sum = sumArray(a);         int result = multiply(5,10);   }      private static int multiply(int i , int j) {          int k = 1;     int sum = 0;          while(k <= j)     {       sum = sum + i;       k++;     }          \n",
    "reg_date": "2021-10-12T12:03:06.000Z"
  },
  {
    "id": 1537,
    "keyword": null,
    "link": null,
    "title": " how java programm actually run",
    "description": "At compile time, java file is compiled by Java Compiler (It does not interact with OS) and converts the java code into bytecode\n",
    "reg_date": "2021-10-12T12:03:06.000Z"
  },
  {
    "id": 1538,
    "keyword": null,
    "link": null,
    "title": " how to add a character to a string java",
    "description": "char ch='A'; String str=\"pple\"; str= ch+str;   // str will change to \"Apple\"\n1. String otherString = \"helen\" + character;  2. otherString +=  character;\n// Define a character char ch='A'; // Define a string String str=\"pple\"; str= ch+str;   // str will change to \"Apple\"\n",
    "reg_date": "2021-10-12T12:03:06.000Z"
  },
  {
    "id": 1539,
    "keyword": null,
    "link": null,
    "title": " how to add a keylistener to a jframe",
    "description": "System.out.println(\"test\"); frame.addKeyListener(new KeyListener() {     public void keyPressed(KeyEvent e) { System.out.println( \"tester\"); }      public void keyReleased(KeyEvent e) { System.out.println(\"2test2\"); }      public void keyTyped(KeyEvent e) { System.out.println(\"3test3\"); } });\n",
    "reg_date": "2021-10-12T12:03:06.000Z"
  },
  {
    "id": 1540,
    "keyword": null,
    "link": null,
    "title": " how to add a list in a list java",
    "description": "List<SomePojo> list = new ArrayList<SomePojo>();  List<SomePojo> anotherList = new ArrayList<SomePojo>(); anotherList.add(list);\n",
    "reg_date": "2021-10-12T12:03:06.000Z"
  },
  {
    "id": 1541,
    "keyword": null,
    "link": null,
    "title": " how to add a listener to a toggle group radio buttons javafx",
    "description": "ToggleGroup genderGroup = new ToggleGroup(); male.setToggleGroup(genderGroup); female.setToggleGroup(genderGroup); genderGroup.selectedToggleProperty().addListener(    (observable, oldToggle, newToggle) -> {        if (newToggle == male) {            gender = 'm';        } else if (newToggle == female) {            gender = 'f';        } else {            gender = '?';        }     } ); \n",
    "reg_date": "2021-10-12T12:03:06.000Z"
  },
  {
    "id": 1542,
    "keyword": null,
    "link": null,
    "title": " how to add a number to an array in java",
    "description": "List<Integer> myList = new ArrayList<Integer>(); myList.add(5); myList.add(7);\n",
    "reg_date": "2021-10-12T12:03:06.000Z"
  },
  {
    "id": 1543,
    "keyword": null,
    "link": null,
    "title": " how to add arms to armor stands 1.16 Java Edition",
    "description": "/data merge entity @e[type=armor_stand,<selector>] {ShowArms:<value>}\n",
    "reg_date": "2021-10-12T12:03:06.000Z"
  },
  {
    "id": 1544,
    "keyword": null,
    "link": null,
    "title": " how to add cardview in android studio",
    "description": "dependencies {     implementation 'com.android.support:cardview-v7:28.0.0' }\n",
    "reg_date": "2021-10-12T12:03:06.000Z"
  },
  {
    "id": 1545,
    "keyword": null,
    "link": null,
    "title": " how to add cardview support in android studio",
    "description": "dependencies {     implementation 'com.android.support:cardview-v7:28.0.0' }\n",
    "reg_date": "2021-10-12T12:03:06.000Z"
  },
  {
    "id": 1546,
    "keyword": null,
    "link": null,
    "title": " how to add chips dynamically android",
    "description": "ChipGroup chipGroup = new ChipGroup(parentView.getContext());  String[] genres = {\"Thriller\", \"Comedy\", \"Adventure\"}; for(String genre : genres) {  Chip chip = new Chip(parentView.getContext());  chip.setText(genre);  chipGroup.addView(chip); }  \n",
    "reg_date": "2021-10-12T12:03:07.000Z"
  },
  {
    "id": 1547,
    "keyword": null,
    "link": null,
    "title": " how to add comments in java",
    "description": "//This is single line comment    /*  This is   multi line comment  */  \n//Single line System.out.println(\"Hello world\"/*+\"This is code commented out inline.\"*/); //You can also put comments at the end /* Multi Line comment */\n/** * Returns an Image object that can then be painted on the screen.  * The url argument must specify an absolute <a href=\"#{@link}\">{@link URL}</a>. The name * argument is a specifier that is relative to the url argument.  * <p> * This method always returns immediately, whether or not the  * image exists. When this applet attempts to draw the image on * the screen, the data will be loaded. The graphics primitives  * that draw the image will incrementally paint on the screen.  * * @param  url  an absolute URL giving the base location of the image * @param  name the location of the image, relative to the url argument * @return      the image at the specified URL * @see         Image */ public Image getImage(URL url, String name) { try { return getImage(new URL(url, name)); } catch (MalformedURLException e) { return null; } }\n// single line comment example // integer variable 'a' is assigned value 5 int a = 5;  /* This is an example for java multiline comment */  // Documentation comments example /** * <h1>Area of Square</h1> * Area of Square java program calculates area * using given side value and prints the area. * <p> * <b>Note: Adding comments in a java program makes it more * user friendly and is presumed as good quality code *  * @author Sachin * @version 1.0 * @since 2015-04-12 * </b> * </p> */\n// Demo types of comments  /* This shows    that the comment    can be muilti line */ System.out.println(\"Hello\"); // Inline comment // This is a single line comment\n",
    "reg_date": "2021-10-12T12:03:07.000Z"
  },
  {
    "id": 1548,
    "keyword": null,
    "link": null,
    "title": " how to add element to list java",
    "description": "package com.journaldev.examples;  import java.util.ArrayList; import java.util.List;  public class ListAddExamples {  \tpublic static void main(String[] args) {  \t\tList<String> vowels = new ArrayList<>();  \t\tvowels.add(\"A\"); // [A] \t\tvowels.add(\"E\"); // [A, E] \t\tvowels.add(\"U\"); // [A, E, U]  \t\tSystem.out.println(vowels); // [A, E, U]  \t\tvowels.add(2, \"I\"); // [A, E, I, U] \t\tvowels.add(3, \"O\"); // [A, E, I, O, U]  \t\tSystem.out.println(vowels); // [A, E, I, O, U] \t} }\nmyList.add(item)\nList mylist.addAll(secondList);\n",
    "reg_date": "2021-10-12T12:03:07.000Z"
  },
  {
    "id": 1549,
    "keyword": null,
    "link": null,
    "title": " how to add elements in array in java using for loop",
    "description": "int[] nums = new int[5]; for(int i = 0; i < nums.length; i++){   nums[i] = i + 2;   System.out.println(nums[i]); } /*   OUTPUT:   2 3 4 5 6   each time i is increased by 2 */\n// A better solution would be to use an ArrayList which can grow as you need it.  // The method ArrayList.toArray( T[] a )  // gives you back your array if you need it in this form.  List<String> where = new ArrayList<String>(); where.add(element); where.add(element);  // If you need to convert it to a simple array...  String[] simpleArray = new String[ where.size() ]; where.toArray( simpleArray );\ncar redCar = new Car(\"Red\"); car Garage [] = new Car [100]; Garage[0] = redCar;\n",
    "reg_date": "2021-10-12T12:03:07.000Z"
  },
  {
    "id": 1550,
    "keyword": null,
    "link": null,
    "title": " how to add elements to an array in java dynamically",
    "description": "int[] nums = new int[5]; for(int i = 0; i < nums.length; i++){   nums[i] = i + 2;   System.out.println(nums[i]); } /*   OUTPUT:   2 3 4 5 6   each time i is increased by 2 */\n",
    "reg_date": "2021-10-12T12:03:07.000Z"
  },
  {
    "id": 1551,
    "keyword": null,
    "link": null,
    "title": " how to add elements to an empty array in java",
    "description": "int[] nums = new int[5]; for(int i = 0; i < nums.length; i++){   nums[i] = i + 2;   System.out.println(nums[i]); } /*   OUTPUT:   2 3 4 5 6   each time i is increased by 2 */\n",
    "reg_date": "2021-10-12T12:03:07.000Z"
  },
  {
    "id": 1552,
    "keyword": null,
    "link": null,
    "title": " how to add java home in mac",
    "description": "Step-1: open terminal and type ls -al if you did not find the .bash_profile proceed with Step-2 else continue with Step-3 Step-2: touch .bash_profile Step-3: open -e .bash_profile Step-4: export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_281.jdk/Contents/Home Step-5: save it and close it Step-6: source ~/.bash_profile Step-7: echo $JAVA_HOME\n1. Open terminal window 2. Type command: $ vim ~/.bash_profile and Hit Enter 3. Type command: $ export JAVA_HOME=$(/usr/libexec/java_home) and press Escape key for Save changes. 4. Type command: :(colon)wq, It will Save and close .bash_profile file. 5. Type command: source ~/.bash_profile and hit Enter 6. Now we can check the value of the JAVA_HOME variable: 7. Type Command: echo $JAVA_HOME  The result should be the path to the JDK installation:  /Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home\n",
    "reg_date": "2021-10-12T12:03:07.000Z"
  },
  {
    "id": 1553,
    "keyword": null,
    "link": null,
    "title": " how to add minutes in date in java",
    "description": "// Adding 10 mins using Date constructor. Calendar date = Calendar.getInstance(); System.out.println(\"Current Date and TIme : \" + date.getTime()); long timeInSecs = date.getTimeInMillis(); Date afterAdding10Mins = new Date(timeInSecs + (10 * 60 * 1000)); System.out.println(\"After adding 10 mins : \" + afterAdding10Mins);\n",
    "reg_date": "2021-10-12T12:03:07.000Z"
  },
  {
    "id": 1554,
    "keyword": null,
    "link": null,
    "title": " how to add multiple filter condition in Java stream filter chain",
    "description": "import java.util.ArrayList; import java.util.List; import java.util.function.Predicate; import java.util.stream.Collectors;   public class Main  {     public static void main(String[] args)      {         List<Employee> employeeList = getEmployeesFromDataSource();                   //filter 1         Predicate<Employee> isEmployeeActive = e -> e.getStatus() == EmployeeStatus.ACTIVE;           //filter2         Predicate<Employee> isAccountActive = e -> e.getAccount().getStatus() == AccountStatus.ACTIVE;                   //Active employees         String result = employeeList.stream()                 .filter(isEmployeeActive)                 .map(e -> e.getId().toString())                 .collect(Collectors.joining(\",\", \"[\", \"]\"));                   System.out.println(\"Active employees = \" + result);                   //Active employees with active accounts         result = employeeList.stream()                 .filter(isEmployeeActive.and(isAccountActive))                 .map(e -> e.getId().toString())                 .collect(Collectors.joining(\",\", \"[\", \"]\"));                   System.out.println(\"Active employees with active accounts = \" + result);                   //Active employees with inactive accounts         result = employeeList.stream()                 .filter(isEmployeeActive.and(isAccountActive.negate()))                 .map(e -> e.getId().toString())                 .collect(Collectors.joining(\",\", \"[\", \"]\"));                   System.out.println(\"Active employees with inactive accounts = \" + result);                   //Inactive employees with inactive accounts         result = employeeList.stream()                 .filter(isEmployeeActive.negate().and(isAccountActive.negate()))                 .map(e -> e.getId().toString())                 .collect(Collectors.joining(\",\", \"[\", \"]\"));                   System.out.println(\"Inactive employees with inactive accounts = \" + result);     }           private static List<Employee> getEmployeesFromDataSource() {         List<Employee> employeeList = new ArrayList<>();                   employeeList.add(new Employee(1L, \"A\", \"AA\", EmployeeStatus.ACTIVE,                  new Account(1001L, \"Saving - 1001\", \"Saving\", AccountStatus.ACTIVE)));         employeeList.add(new Employee(2L, \"B\", \"BB\", EmployeeStatus.ACTIVE,                  new Account(1002L, \"Checking - 1002\", \"Checking\", AccountStatus.ACTIVE)));         employeeList.add(new Employee(3L, \"C\", \"CC\", EmployeeStatus.ACTIVE,                  new Account(1003L, \"Deposit - 1003\", \"Deposit\", AccountStatus.ACTIVE)));         employeeList.add(new Employee(4L, \"D\", \"DD\", EmployeeStatus.ACTIVE,                  new Account(1004L, \"Saving - 1004\", \"Saving\", AccountStatus.INACTIVE)));         employeeList.add(new Employee(5L, \"E\", \"EE\", EmployeeStatus.ACTIVE,                  new Account(1005L, \"Checking - 1005\", \"Checking\", AccountStatus.INACTIVE)));         employeeList.add(new Employee(6L, \"F\", \"FF\", EmployeeStatus.ACTIVE,                  new Account(1006L, \"Deposit - 1006\", \"Deposit\", AccountStatus.BLOCKED)));                   return employeeList;     } } \n",
    "reg_date": "2021-10-12T12:03:07.000Z"
  },
  {
    "id": 1555,
    "keyword": null,
    "link": null,
    "title": " how to add spaces before string in java",
    "description": "    String s = \"%s Hellow World!\";     StringBuilder builder = new StringBuilder();     for(int i=0;i<10;i++){         builder.append(\" \");     }      System.out.println(s.format(s,builder.toString())); \n",
    "reg_date": "2021-10-12T12:03:07.000Z"
  },
  {
    "id": 1556,
    "keyword": null,
    "link": null,
    "title": " how to add string to array in java",
    "description": "ArrayList<String> ar = new ArrayList<String>(); String s1 =\"Test1\"; String s2 =\"Test2\"; String s3 =\"Test3\"; ar.add(s1); ar.add(s2); ar.add(s3);  String s4 =\"Test4\"; ar.add(s4); \nArrays in Java have a defined size, you cannot change it later by adding or removing elements (you can read some basics here). Instead, use a List : ArrayList<String> mylist = new ArrayList<String>(); mylist. add(mystring); //this adds an element to the list. \nArrayList<String> ar = new ArrayList<String>(); String s1 =\"Test1\"; String s2 =\"Test2\"; String s3 =\"Test3\"; ar.add(s1); ar.add(s2); ar.add(s3);  String s4 =\"Test4\"; ar.add(s4);\nin java, once you declared an array you cannot change its size. so that adding an element to the array is not possible. you can declare an arraylist, which is the same as array but its resizable. meaning that you can add or remove at any time and as much you want. for example: ArrayList<String> languages = new ArrayList<String>();  languages.add(\"PHP\"); languages.add(\"JAVA\"); languages.add(\"C#\"); ArrayList<int> numbers = new ArrayList<int>();  numbers.add(9); numbers.add(14); numbers.add(2);\n",
    "reg_date": "2021-10-12T12:03:08.000Z"
  },
  {
    "id": 1557,
    "keyword": null,
    "link": null,
    "title": " how to add the last area of an array in java",
    "description": "//original array String[] rgb = new String[] {\"red\", \"green\"}; //new array with one more length String[] rgb2 = new String[rgb.length + 1]; //copy the old in the new array System.arraycopy(rgb, 0, rgb2, 0, rgb.length); //add element to new array rgb2[rgb.length] = \"blue\"; //optional: set old array to new array rgb = rgb2;\ncar redCar = new Car(\"Red\"); car Garage [] = new Car [100]; Garage[0] = redCar;\n-- how to add objects using an array car redCar = new Car(\"Red\"); car Garage [] = new Car [100]; Garage[0] = redCar;\n",
    "reg_date": "2021-10-12T12:03:08.000Z"
  },
  {
    "id": 1558,
    "keyword": null,
    "link": null,
    "title": " how to add to a file in java",
    "description": " File file = new File(\"append.txt\"); FileWriter fr = new FileWriter(file, true); BufferedWriter br = new BufferedWriter(fr); PrintWriter pr = new PrintWriter(br); pr.println(\"data\"); pr.close(); br.close(); fr.close(); \n",
    "reg_date": "2021-10-12T12:03:08.000Z"
  },
  {
    "id": 1559,
    "keyword": null,
    "link": null,
    "title": " how to add to an arraylist java",
    "description": "import java.util.ArrayList; public class Details {     public static void main(String[] args) {          //ArrayList<String> Declaration         ArrayList<String> al= new ArrayList<String>();         //add method for String ArrayList         al.add(\"Ram\");         al.add(\"Shyam\");         al.add(\"CPS\");         al.add(\"John\");         al.add(\"Steve\");         System.out.println(\"Elements of ArrayList of String Type: \"+al);\npublic void add(int index, E element)\t// no return value\n",
    "reg_date": "2021-10-12T12:03:08.000Z"
  },
  {
    "id": 1560,
    "keyword": null,
    "link": null,
    "title": " how to add two map values in java",
    "description": "//map 1 HashMap<Integer, String> map1 = new HashMap<>();   map1.put(1, \"A\"); map1.put(2, \"B\"); map1.put(3, \"C\"); map1.put(5, \"E\");   //map 2 HashMap<Integer, String> map2 = new HashMap<>();   map2.put(1, \"G\");   //It will replace the value 'A' map2.put(2, \"B\"); map2.put(3, \"C\"); map2.put(4, \"D\");   //A new pair to be added   //Merge maps map1.putAll(map2);   System.out.println(map1); \n",
    "reg_date": "2021-10-12T12:03:08.000Z"
  },
  {
    "id": 1561,
    "keyword": null,
    "link": null,
    "title": " how to add values in float array in java",
    "description": "//To declare and initialize array of float in Java use following float array[] = new float[]{1,2,3};\n",
    "reg_date": "2021-10-12T12:03:08.000Z"
  },
  {
    "id": 1562,
    "keyword": null,
    "link": null,
    "title": " how to add video in java swing",
    "description": "    public class mediaPlayer extends JFrame     {         public mediaPlayer()         {             setLayout(new BorderLayout());              //file you want to play             URL mediaURL = Player mediaPlayer = Manager.createRealizedPlayer(mediaURL);             //get components for video and playback controls             Component video = mediaPlayer.getVisualComponent();             Component controls = mediaPlayer.getControlPanelComponent();             add(video,BorderLayout.CENTER);             add(controls,BorderLayout.SOUTH);         }     }\n",
    "reg_date": "2021-10-12T12:03:08.000Z"
  },
  {
    "id": 1563,
    "keyword": null,
    "link": null,
    "title": " how to addin java",
    "description": "int x = 20; // makes x = to 20, while making 20 an integer instead of a string int y = 21; // same as x System.out.println(\"Addition =\" x + y);\n",
    "reg_date": "2021-10-12T12:03:08.000Z"
  },
  {
    "id": 1564,
    "keyword": null,
    "link": null,
    "title": " how to append character at first position in stringbuilder java",
    "description": "StringBuilder sb = new StringBuilder(); for(int i=0;i<100;i++){     sb.insert(0, Integer.toString(i)); }\n",
    "reg_date": "2021-10-12T12:03:08.000Z"
  },
  {
    "id": 1565,
    "keyword": null,
    "link": null,
    "title": " how to append to an array in java",
    "description": "import java.util.Arrays;  class ArrayAppend {     public static void main( String args[] ) {       int[] arr = { 10, 20, 30 };       System.out.println(Arrays.toString(arr));        arr = Arrays.copyOf(arr, arr.length + 1);       arr[arr.length - 1] = 40; // Assign 40 to the last element       System.out.println(Arrays.toString(arr));     } }\nList<Integer> myList = new ArrayList<Integer>(); myList.add(5); myList.add(7);\n// A better solution would be to use an ArrayList which can grow as you need it.  // The method ArrayList.toArray( T[] a )  // gives you back your array if you need it in this form.  List<String> where = new ArrayList<String>(); where.add(element); where.add(element);  // If you need to convert it to a simple array...  String[] simpleArray = new String[ where.size() ]; where.toArray( simpleArray );\n//original array String[] rgb = new String[] {\"red\", \"green\"}; //new array with one more length String[] rgb2 = new String[rgb.length + 1]; //copy the old in the new array System.arraycopy(rgb, 0, rgb2, 0, rgb.length); //add element to new array rgb2[rgb.length] = \"blue\"; //optional: set old array to new array rgb = rgb2;\n",
    "reg_date": "2021-10-12T12:03:08.000Z"
  },
  {
    "id": 1566,
    "keyword": null,
    "link": null,
    "title": " how to append values in integer array in java",
    "description": "import java.util.ArrayList; import java.util.Arrays; import java.util.List;   class Main {     private static Integer[] append(Integer[] arr, int element) {         List<Integer> list = new ArrayList<>(Arrays.asList(arr));         list.add(element);           return list.toArray(new Integer[0]);     }       public static void main(String[] args) {           Integer[] nums = { 1, 2, 3, 4 };           nums = append(nums, 5);     // add 5 to nums[]         System.out.println(Arrays.toString(nums));     } } \n",
    "reg_date": "2021-10-12T12:03:09.000Z"
  },
  {
    "id": 1567,
    "keyword": null,
    "link": null,
    "title": " how to ask user for his location in android",
    "description": "",
    "reg_date": "2021-10-12T12:03:09.000Z"
  },
  {
    "id": 1568,
    "keyword": null,
    "link": null,
    "title": " how to assert that an exception is thrown java",
    "description": "@Test public void whenExceptionThrown_thenAssertionSucceeds() {     Exception exception = assertThrows(NumberFormatException.class, () -> {         Integer.parseInt(\"1a\");     });      String expectedMessage = \"For input string\";     String actualMessage = exception.getMessage();      assertTrue(actualMessage.contains(expectedMessage)); }\n",
    "reg_date": "2021-10-12T12:03:09.000Z"
  },
  {
    "id": 1569,
    "keyword": null,
    "link": null,
    "title": " how to break from a loop in java",
    "description": "public class Test {     public static void main(String args[]) {       int [] numbers = {10, 20, 30, 40, 50};        for(int x : numbers ) {          if( x == 30 ) {             break;          }          System.out.print( x );          System.out.print(\"\\n\");       }    } }\n",
    "reg_date": "2021-10-12T12:03:09.000Z"
  },
  {
    "id": 1570,
    "keyword": null,
    "link": null,
    "title": " how to break out for loop java",
    "description": "//Java Program to demonstrate the use of break statement     //inside the for loop.   public class BreakExample {   public static void main(String[] args) {       //using for loop       for(int i=1;i<=10;i++){           if(i==5){               //breaking the loop               break;           }           System.out.println(i);       }   }   } \n",
    "reg_date": "2021-10-12T12:03:09.000Z"
  },
  {
    "id": 1571,
    "keyword": null,
    "link": null,
    "title": " how to break outer loop in java",
    "description": "public class Test {     public static void main(String[] args) {         outerloop:         for (int i=0; i < 5; i++) {             for (int j=0; j < 5; j++) {                 if (i * j > 6) {                     System.out.println(\"Breaking\");                     break outerloop;                 }                 System.out.println(i + \" \" + j);             }         }         System.out.println(\"Done\");     } } \n",
    "reg_date": "2021-10-12T12:03:09.000Z"
  },
  {
    "id": 1572,
    "keyword": null,
    "link": null,
    "title": " how to break two loop in java",
    "description": "import java.io.IOException;  /**  * How to break from nested loop in Java. You can use labeled  * statement with break statement to break from nested loop.  *   * @author WINDOWS 8  */  public class BreakingFromNestedLoop{      public static void main(String args[]) throws IOException {          // this is our outer loop         outer: for (int i = 0; i < 4; i++) {              // this is the inner loop             for (int j = 0; j < 4; j++) {                  // condition to break from nested loop                 if (i * j > 5) {                     System.out.println(\"Breaking from nested loop\");                     break outer;                 }                  System.out.println(i + \" \" + j);             }          }         System.out.println(\"exited\");                                    // better way is to encapsulate nested loop in a method         // and use return to break from outer loop         breakFromNestedLoop();              }          /**      * You can use return statement to return at any point from a method.      * This will help you to break from nested loop as well      */     public static void breakFromNestedLoop(){         for(int i=0; i<6; i++){                          for(int j=0; j<3; j++){                                 int product = i*j;                                  if(product > 4){                     System.out.println(\"breaking from nested loop using return\");                     return;                 }                             }         }         System.out.println(\"Done\");     }  }  Output 0 0 0 1 0 2 0 3 1 0 1 1 1 2 1 3 2 0 2 1 2 2 Breaking from nested loop exited breaking from nested loop using return\n",
    "reg_date": "2021-10-12T12:03:09.000Z"
  },
  {
    "id": 1573,
    "keyword": null,
    "link": null,
    "title": " how to bubblesort a string array in java",
    "description": "public class BubbleSort {  \t \tstatic int MAX = 100; \t \tpublic static void sortStrings (String[] arr, int n) { \t\t \t\tString temp; \t\t \t\t//Sorting strings using bubble sort \t\tfor (int j = 0; j < n; j++) { \t\t\tfor (int i = j + 1; i < n; i++) { \t\t\t\tif (arr[j].compareTo(arr[i]) > 0) { \t\t\t\t\ttemp = arr[j]; \t\t\t\t\tarr[j] = arr[i]; \t\t\t\t\tarr[i] = temp; \t\t\t\t} \t\t\t} \t\t} \t} \t \tpublic static void main(String[] args) { \t\t \t\tString[] arr = { \"right\",\"subdued\",\"trick\",\"crayon\",\"punishment\",\"silk\",\"describe\",\"royal\",\"prevent\",\"slope\" }; \t\t \t\tint n = arr.length; \t\tsortStrings(arr, n); \t\tSystem.out.println(\"Strings in sorted are: \"); \t\tfor (int i = 0; i < n; i++) \t\t\tSystem.out.println(\"String \" + (i + 1) + \" is \" + arr[i]); \t}   }\n",
    "reg_date": "2021-10-12T12:03:09.000Z"
  },
  {
    "id": 1574,
    "keyword": null,
    "link": null,
    "title": " how to build a gui in java",
    "description": "import java.awt.BorderLayout; import java.awt.event.ActionEvent; import java.awt.event.ActionListener;  import javax.swing.JButton; import javax.swing.JFrame; import javax.swing.JTextArea;  public class Foo{    public static void main(String[] args) {      JFrame f = new JFrame(\"A JFrame\");     f.setSize(250, 250);     f.setLocation(300,200);     final JTextArea textArea = new JTextArea(10, 40);     f.getContentPane().add(BorderLayout.CENTER, textArea);     final JButton button = new JButton(\"Click Me\");     f.getContentPane().add(BorderLayout.SOUTH, button);     button.addActionListener(new ActionListener() {          @Override         public void actionPerformed(ActionEvent e) {             textArea.append(\"Button was clicked\\n\");          }     });      f.setVisible(true);    }  }\nimport java.awt.BorderLayout;//Just some imports that are needed import java.awt.GridLayout;//Just some imports that are needed import java.awt.event.ActionEvent;//Just some imports that are needed import java.awt.event.ActionListener;//Just some imports that are needed  import javax.swing.BorderFactory;//Just some imports that are needed import javax.swing.JButton;//Just some imports that are needed import javax.swing.JFrame;//Just some imports that are needed import javax.swing.JLabel;//Just some imports that are needed import javax.swing.JPanel;//Just some imports that are needed  public class GUI implements ActionListener{//If there is a red line after writing GUI its cause you have no code for the bit that's after implements so just hover over gui and just press \"add unimplemented methods\" \t \tint count = 0;//a VAR for the function of the button for the number of clicks \tprivate JLabel label; \tprivate JPanel panel; \tprivate JFrame frame; \t \t \tpublic GUI(){//This implements for the constructor that is being create in the void main, Here you can make frames for the gooooooey and define its characteristics :P \t\t \t\t//JFrame - we have removed this from the line below to make a var that we can use in multiple methods {a} \t\tframe = new JFrame();//This sets the frame for the goooooooooey so the user can customise it to their needs \t\t \t\tJButton button = new JButton(\"Howdy\");//This is used to make a button \t\tbutton.addActionListener(this);//This refers to the class that we are using like GUI implements Action listener \t\t \t\t//JLabel {a} \t\tlabel = new JLabel(\"Number of clicks: 0\"); //This is used to add a label to our program \t\t \t\t//JPanel {a} \t\tpanel = new JPanel();//This sets the panel for the gooey for the user so that they can add elements, delete import etc etc \t\tpanel.setBorder(BorderFactory.createEmptyBorder(30,30,10,30));//This makes a border object for the goooey and the number in the field describes the distance it should be from the borders of the gui \t\tpanel.setLayout(new GridLayout(0,1));// This is the default constructor for the borders/grids \t\tpanel.add(button);//This adds the button ( basically packing like btn.pack()) \t\tpanel.add(label);//This adds the button (packs) \t\t \t\tframe.add(panel, BorderLayout.CENTER); \t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); \t\tframe.setTitle(\"Our GOOEY\");//sets the title \t\tframe.pack();//like py \t\tframe.setVisible(true);//kinda literal this just lets the dev choose if the user can see this or not \t} \t \tpublic static void main(String[] args) { \t\tnew GUI();//Creates a constructor but this needs to be implemented to actually show us the gui window  \t}  \t@Override \tpublic void actionPerformed(ActionEvent e) {//After implementing the unimplemented methods this autogenerated method is initiated to help us write our code in for the action we need to perform \t\tcount++;//Increases the count by 1 \t\tlabel.setText(\"Number of clicks: \" + count);//This just changes the text of the label like lable.config(\"Hey\") and then adds the number of clicks to the string \t\t \t}  } \n",
    "reg_date": "2021-10-12T12:03:09.000Z"
  },
  {
    "id": 1575,
    "keyword": null,
    "link": null,
    "title": " how to byheart faster",
    "description": "System.out.println(\"why are you searching this learning is much better\"); \n",
    "reg_date": "2021-10-12T12:03:09.000Z"
  },
  {
    "id": 1576,
    "keyword": null,
    "link": null,
    "title": " how to calculate age from date of birth in java using calendar",
    "description": "package com.candidjava.time;  import java.text.ParseException; import java.text.SimpleDateFormat; import java.time.LocalDate; import java.time.Period; import java.util.Calendar; import java.util.Date;  public class DobConversion {  public static void main(String[] args) throws ParseException {   //direct age calculation    LocalDate l = LocalDate.of(1998, 04, 23); //specify year, month, date directly   LocalDate now = LocalDate.now(); //gets localDate   Period diff = Period.between(l, now); //difference between the dates is calculated   System.out.println(diff.getYears() + \"years\" + diff.getMonths() + \"months\" + diff.getDays() + \"days\");    //using Calendar Object   String s = \"1994/06/23\";   SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy/MM/dd\");   Date d = sdf.parse(s);   Calendar c = Calendar.getInstance();   c.setTime(d);   int year = c.get(Calendar.YEAR);   int month = c.get(Calendar.MONTH) + 1;   int date = c.get(Calendar.DATE);   LocalDate l1 = LocalDate.of(year, month, date);   LocalDate now1 = LocalDate.now();   Period diff1 = Period.between(l1, now1);   System.out.println(\"age:\" + diff1.getYears() + \"years\");  } }  \n",
    "reg_date": "2021-10-12T12:03:10.000Z"
  },
  {
    "id": 1577,
    "keyword": null,
    "link": null,
    "title": " how to calculate age on entry of dob in java",
    "description": "LocalDate today = LocalDate.now(); LocalDate birthday = LocalDate.of(1987, 09, 24);  Period period = Period.between(birthday, today);  //Now access the values as below System.out.println(period.getDays()); System.out.println(period.getMonths()); System.out.println(period.getYears());\nimport java.text.ParseException; import java.text.SimpleDateFormat; import java.util.Calendar; import java.util.Date;   public class AgeCalculator {    private static Age calculateAge(Date birthDate)    {       int years = 0;       int months = 0;       int days = 0;         //create calendar object for birth day       Calendar birthDay = Calendar.getInstance();       birthDay.setTimeInMillis(birthDate.getTime());         //create calendar object for current day       long currentTime = System.currentTimeMillis();       Calendar now = Calendar.getInstance();       now.setTimeInMillis(currentTime);         //Get difference between years       years = now.get(Calendar.YEAR) - birthDay.get(Calendar.YEAR);       int currMonth = now.get(Calendar.MONTH) + 1;       int birthMonth = birthDay.get(Calendar.MONTH) + 1;         //Get difference between months       months = currMonth - birthMonth;         //if month difference is in negative then reduce years by one        //and calculate the number of months.       if (months < 0)       {          years--;          months = 12 - birthMonth + currMonth;          if (now.get(Calendar.DATE) < birthDay.get(Calendar.DATE))             months--;       } else if (months == 0 && now.get(Calendar.DATE) < birthDay.get(Calendar.DATE))       {          years--;          months = 11;       }         //Calculate the days       if (now.get(Calendar.DATE) > birthDay.get(Calendar.DATE))          days = now.get(Calendar.DATE) - birthDay.get(Calendar.DATE);       else if (now.get(Calendar.DATE) < birthDay.get(Calendar.DATE))       {          int today = now.get(Calendar.DAY_OF_MONTH);          now.add(Calendar.MONTH, -1);          days = now.getActualMaximum(Calendar.DAY_OF_MONTH) - birthDay.get(Calendar.DAY_OF_MONTH) + today;       }        else       {          days = 0;          if (months == 12)          {             years++;             months = 0;          }       }       //Create new Age object        return new Age(days, months, years);    }      public static void main(String[] args) throws ParseException    {       SimpleDateFormat sdf = new SimpleDateFormat(\"dd/MM/yyyy\");       Date birthDate = sdf.parse(\"29/11/1981\");            Age age = calculateAge(birthDate);       System.out.println(age);    } } \n",
    "reg_date": "2021-10-12T12:03:10.000Z"
  },
  {
    "id": 1578,
    "keyword": null,
    "link": null,
    "title": " how to calculate angle difference",
    "description": "public static double angleDiff(double a, double b) {     return ((((a - b) % 360F) + 540F) % 360F) - 180F; }\n",
    "reg_date": "2021-10-12T12:03:10.000Z"
  },
  {
    "id": 1579,
    "keyword": null,
    "link": null,
    "title": " how to calculate exponential in java",
    "description": "import java.util.Math;  Math.pow(number, power);\n",
    "reg_date": "2021-10-12T12:03:10.000Z"
  },
  {
    "id": 1580,
    "keyword": null,
    "link": null,
    "title": " how to calculate the amount of months between two dates java",
    "description": "LocalDate jamesBirthDay = new LocalDate(1955, 5, 19); LocalDate now = new LocalDate(2015, 7, 30);          int monthsBetween = Months.monthsBetween(jamesBirthDay, now).getMonths(); int yearsBetween = Years.yearsBetween(jamesBirthDay, now).getYears();          System.out.println(\"Month since father of Java born : \"                      + monthsBetween); System.out.println(\"Number of years since father of Java born : \"                      + yearsBetween);\n",
    "reg_date": "2021-10-12T12:03:10.000Z"
  },
  {
    "id": 1581,
    "keyword": null,
    "link": null,
    "title": " how to call a function from a class java",
    "description": "public class Classroom { \t private String teacherName; \t   \t public Classroom(String teacherName){        this.teacherName = teacherName;      }      \t public String getTeacherName() {         return teacherName;      }  }  public static void main(String[] args){ \tClassroom firstGrade = new Classroom(\"John\");     /*Once you type the 'firstGrade.' your IDE most likely  \twill show all the functions it can acess*/     firstGrade.getTeacherName(); }\n",
    "reg_date": "2021-10-12T12:03:10.000Z"
  },
  {
    "id": 1582,
    "keyword": null,
    "link": null,
    "title": " how to call a function in java",
    "description": "public class MyClass {       void myMethod() {         System.out.println(\"You have called me! My name is: myMethod!\");     }       public static void main(String[] args) {         new MyClass().myMethod();     } } \npublic class MyClass {       static void myMethod() {         System.out.println(\"You have called me! My name is: myMethod!\");     }       public static void main(String[] args) {         myMethod();     } }\npublic class Main {   public static void main(String args[]) {     SayHi();          int sum = AddNums(5, 6);     System.out.println(sum);   }      public static void SayHi() { //This method has no return value     System.out.println(\"Hi!\");   }      public static int AddNums(int a, int b) { //This method has a return value     return a + b; }\n//declare a function like this: void function(int parameter1) { \t//function body } //call the function like this: function(1);\nA method in java is a group of statements to carry out some operation also  known as functions.\npublic int addNum(int num1, int num2) {   total = num1 + num2;   System.out.println(\"Total: \" + total); }\n",
    "reg_date": "2021-10-12T12:03:10.000Z"
  },
  {
    "id": 1583,
    "keyword": null,
    "link": null,
    "title": " how to call a static method in java",
    "description": "class scratch{ \tpublic static hey(){ \t\tSystem.out.println(\"Hey\");     } \tpublic static void main(String[] args){ \t\they();         //print Hey to the console     }\nUse a static method  when you want to be able to access the method  without an instance of the class\nWe can declare a method as static by adding keyword &ldquo;static&rdquo; before method name. Let&rsquo;s see example on static method in java.  public class StaticMethodExample {    static void print()    {       System.out.println(\"in static method.\");    }    public static void main(String[] args)    {       StaticMethodExample.print();    } }\nClass.staticMethod();\n",
    "reg_date": "2021-10-12T12:03:10.000Z"
  },
  {
    "id": 1584,
    "keyword": null,
    "link": null,
    "title": " how to call a void method from another class in java",
    "description": "1_ you should first create an instance from this class. 2_ once you create one, you use it for calling the class methods.\n",
    "reg_date": "2021-10-12T12:03:11.000Z"
  },
  {
    "id": 1585,
    "keyword": null,
    "link": null,
    "title": " how to call a void method with parameters in java",
    "description": "public class methods{   public static void main(String[] args){     printSum(5, 15); // Print 20   }   public static void printSum(int a, int b){     System.out.println(a + b);   }   // Our method should be outside the main methods bounds   // Call your function inside the main method. }\n",
    "reg_date": "2021-10-12T12:03:11.000Z"
  },
  {
    "id": 1586,
    "keyword": null,
    "link": null,
    "title": " how to call intent in adapter class in android",
    "description": "  Intent intent = new Intent(activity, CategoryListActivity.class);            // intent.putExtra(RequestParamUtils.FEATURE, true);             activity.startActivity(intent);\n holder.fab.setOnClickListener(new View.OnClickListener() {             @Override             public void onClick(View v) {                 Intent intent = new Intent(series.getApplicationContext(),VideoActivity.class);                 String url = response.get(position).getUrl();                 Bundle bundle = new Bundle();                 bundle.putString(\"key_1\",url);                 intent.putExtras(bundle);                 mContext.startActivity(intent);             }         });\n",
    "reg_date": "2021-10-12T12:03:11.000Z"
  },
  {
    "id": 1587,
    "keyword": null,
    "link": null,
    "title": " how to capitalize first letter in java",
    "description": "String str = \"java\"; str = str.substring(0, 1).toUpperCase() + str.substring(1); // str = \"Java\"\nString str = \"java\"; String cap = str.substring(0, 1).toUpperCase() + str.substring(1); // cap = \"Java\" \nString str = \"java\"; String cap = str.substring(0, 1).toUpperCase() + str.substring(1); // cap = \"Java\"\nString str = \"hello world!\";  // capitalize first letter String output = str.substring(0, 1).toUpperCase() + str.substring(1);  // print the string System.out.println(output); // Hello world! \nStringUtils.capitalize(..)\nclass Main {   public static void main(String[] args) {      // create a string     String message = \"everyone loves java\";      // stores each characters to a char array     char[] charArray = message.toCharArray();     boolean foundSpace = true;      for(int i = 0; i < charArray.length; i++) {        // if the array element is a letter       if(Character.isLetter(charArray[i])) {          // check space is present before the letter         if(foundSpace) {            // change the letter into uppercase           charArray[i] = Character.toUpperCase(charArray[i]);           foundSpace = false;         }       }        else {         // if the new character is not character         foundSpace = true;       }     }      // convert the char array to the string     message = String.valueOf(charArray);     System.out.println(\"Message: \" + message);   } }\n",
    "reg_date": "2021-10-12T12:03:11.000Z"
  },
  {
    "id": 1588,
    "keyword": null,
    "link": null,
    "title": " how to cast arraylist to array in java",
    "description": "import java.util.ArrayList; public class ListToArray {    public static void main(String args[]){       ArrayList<String> list = new ArrayList<String>();       list.add(\"Apple\");       list.add(\"Orange\");       list.add(\"Banana\");        System.out.println(\"Contents of list ::\"+list);       String[] myArray = new String[list.size()];       list.toArray(myArray);        for(int i=0; i<myArray.length; i++){          System.out.println(\"Element at the index \"+i+\" is ::\"+myArray[i]);       }    } }\n",
    "reg_date": "2021-10-12T12:03:11.000Z"
  },
  {
    "id": 1589,
    "keyword": null,
    "link": null,
    "title": " how to cast from int to string java",
    "description": "int x = 3;  Integer.toString(int) \nint i=10;   String s=String.valueOf(i);//Now it will return \"10\"  \nInteger.toString(n) // converts n to String\nint x = 5; String s = Integer.toString(n);\nStringBuilder sb = new StringBuilder(); sb.append(\"\"); sb.append(number); return sb.toString();\n",
    "reg_date": "2021-10-12T12:03:11.000Z"
  },
  {
    "id": 1590,
    "keyword": null,
    "link": null,
    "title": " how to change a character in a string in java with ascii",
    "description": "// From Char to Ascii char character = 'a';     int ascii = (int) character;  // From Ascii to Char int ascii = 65; char character = (char) ascii;\n// Very simple. Just cast your char as an int.  char character = 'a';     int ascii = (int) character;  //In your case, you need to get the specific Character from the String first and then cast it.  char character = name.charAt(0); // This gives the character 'a' int ascii = (int) character; // ascii is now 97.  //Though cast is not required explicitly, but its improves readability.  int ascii = character; // Even this will do the trick.\nimport java.text.ParseException; import java.util.Arrays;  /**  * How to convert a String to ASCII bytes in Java  *   * @author WINDOWS 8  */  public class StringToASCII {      public static void main(String args[]) throws ParseException {                  // converting character to ASCII value in Java         char A = 'A';         int ascii = A;         System.out.println(\"ASCII value of 'A' is  : \" + ascii);                  // you can explicitly cast also         char a = 'a';         int value = (int) a;         System.out.println(\"ASCII value of 'a' is  : \" + value);                                             // converting String to ASCII value in Java         try {             String text = \"ABCDEFGHIJKLMNOP\";              // translating text String to 7 bit ASCII encoding             byte[] bytes = text.getBytes(\"US-ASCII\");                          System.out.println(\"ASCII value of \" + text + \" is following\");             System.out.println(Arrays.toString(bytes));                      } catch (java.io.UnsupportedEncodingException e) {             e.printStackTrace();         }     }  }  Output ASCII value of 'A' is  : 65 ASCII value of 'a' is  : 97 ASCII value of ABCDEFGHIJKLMNOP is following [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80]   Read more: https://javarevisited.blogspot.com/2015/07/how-to-convert-string-or-char-to-ascii-example.html#ixzz6k2vn7o4y\n",
    "reg_date": "2021-10-12T12:03:11.000Z"
  },
  {
    "id": 1591,
    "keyword": null,
    "link": null,
    "title": " how to change a string array in integer array",
    "description": "import java.util.Arrays; public class StringToIntegerArray {    public static void main(String args[]) {       String [] str = {\"123\", \"345\", \"437\", \"894\"};       int size = str.length;       int [] arr = new int [size];       for(int i=0; i<size; i++) {          arr[i] = Integer.parseInt(str[i]);       }       System.out.println(Arrays.toString(arr));    } }\n",
    "reg_date": "2021-10-12T12:03:11.000Z"
  },
  {
    "id": 1592,
    "keyword": null,
    "link": null,
    "title": " how to change actionbar color in android programmatically",
    "description": "getSherlockActivity().getSupportActionBar().setBackgroundDrawable(new ColorDrawable(0xff00ACED)); mActionBar.setBackgroundDrawable(new ColorDrawable(0xff00DDED)); mActionBar.setDisplayShowTitleEnabled(false); mActionBar.setDisplayShowTitleEnabled(true);\n",
    "reg_date": "2021-10-12T12:03:11.000Z"
  },
  {
    "id": 1593,
    "keyword": null,
    "link": null,
    "title": " how to change background tint color programmatically android",
    "description": "    Drawable buttonDrawable = button.getBackground();     buttonDrawable = DrawableCompat.wrap(buttonDrawable);     //the color is a direct color int and not a color resource     DrawableCompat.setTint(buttonDrawable, Color.RED);     button.setBackground(buttonDrawable); \n",
    "reg_date": "2021-10-12T12:03:11.000Z"
  },
  {
    "id": 1594,
    "keyword": null,
    "link": null,
    "title": " how to change checkbox color in android",
    "description": "<android.support.v7.widget.AppCompatCheckBox      android:layout_width=\"wrap_content\"      android:layout_height=\"wrap_content\"      app:buttonTint=\"@color/COLOR_HERE\" /> \n<CheckBox   ...   android:buttonTint=\"@color/tint_color\" />\n<android.support.v7.widget.AppCompatCheckBox                 android:id=\"@+id/check\"                 android:layout_width=\"wrap_content\"                 android:layout_height=\"wrap_content\"                 app:buttonTint=\"@color/checkbox_filter_tint\"                 tools:targetApi=\"21\"/> \n<?xml version=\"1.0\" encoding=\"utf-8\"?> <selector xmlns:android=\"http://schemas.android.com/apk/res/android\">     <item android:color=\"@color/light_gray_checkbox\"           android:state_checked=\"false\"/>     <item android:color=\"@color/common_red\"           android:state_checked=\"true\"/> </selector> \n",
    "reg_date": "2021-10-12T12:03:12.000Z"
  },
  {
    "id": 1595,
    "keyword": null,
    "link": null,
    "title": " how to change color page in latex",
    "description": "\\documentclass{article} \\usepackage{lipsum}% for auto generating text \\usepackage{afterpage} \\usepackage{xcolor} \\begin{document} \\lipsum[1-12] \\pagecolor{yellow}\\afterpage{\\nopagecolor} \\lipsum[22-30] \\end{document} \n",
    "reg_date": "2021-10-12T12:03:12.000Z"
  },
  {
    "id": 1596,
    "keyword": null,
    "link": null,
    "title": " how to change double to int in java",
    "description": "class Scratch{     public static void main(String[] args){         double decimal = 5.7;         System.out.println( (int) decimal );\t//casting         System.out.println( Math.round(decimal * 10) / (double) 10);\t//Math.round()         System.out.println( decimal % 1);\t// modulus         System.out.println( Integer.parseInt( String.valueOf(decimal).substring(0, String.valueOf(decimal).indexOf(\".\")))); // .substring()     } }\n@SuppressWarnings(\"deprecation\") int Entero=new Double(345.8).intValue();\ndouble data = 3452.345 int value = (int)data; \n",
    "reg_date": "2021-10-12T12:03:12.000Z"
  },
  {
    "id": 1597,
    "keyword": null,
    "link": null,
    "title": " how to change font in javafx",
    "description": "t.setText(\"This is a text sample\"); t.setFont(Font.font (\"Verdana\", 20)); t.setFill(Color.RED);\ntext.setFont(Font.font (\"arial\", 24)); or text.setStyle(\"-fx-font: 24 arial;\");\n",
    "reg_date": "2021-10-12T12:03:12.000Z"
  },
  {
    "id": 1598,
    "keyword": null,
    "link": null,
    "title": " how to change font size in JLabel",
    "description": "label = new JLabel(\"A label\"); label.setFont(new Font(\"Serif\", Font.PLAIN, 14));\n",
    "reg_date": "2021-10-12T12:03:12.000Z"
  },
  {
    "id": 1599,
    "keyword": null,
    "link": null,
    "title": " how to change java version in pom.xml",
    "description": "<project> ...  <properties>     <maven.compiler.source>1.8</maven.compiler.source>     <maven.compiler.target>1.8</maven.compiler.target>   </properties> ... </project>\n<properties>    <maven.compiler.target>1.8</maven.compiler.target>    <maven.compiler.source>1.8</maven.compiler.source></properties>\n",
    "reg_date": "2021-10-12T12:03:12.000Z"
  },
  {
    "id": 1600,
    "keyword": null,
    "link": null,
    "title": " how to change maven java version in po,",
    "description": "<project> ...  <properties>     <maven.compiler.source>1.8</maven.compiler.source>     <maven.compiler.target>1.8</maven.compiler.target>   </properties> ... </project>\n",
    "reg_date": "2021-10-12T12:03:12.000Z"
  },
  {
    "id": 1601,
    "keyword": null,
    "link": null,
    "title": " how to change resource color to int color in android",
    "description": "val color = ContextCompat.getColor(   closestView.context,   R.color.name.color ) \n",
    "reg_date": "2021-10-12T12:03:12.000Z"
  },
  {
    "id": 1602,
    "keyword": null,
    "link": null,
    "title": " how to change single character of a string in java",
    "description": "//short answer: you cannot individually change any specific character //of a String in java. You can however do this:  String s1 = \"This is a String\"; String s2 = s1.substring(0, 8) + \"o\" + s1.substring(9); System.out.println(s2); //Prints \"This is o String\", replaced the 8th character with an o\n",
    "reg_date": "2021-10-12T12:03:12.000Z"
  },
  {
    "id": 1603,
    "keyword": null,
    "link": null,
    "title": " how to change size of the window in processing",
    "description": "size(800, 600);  // (must be first line inside void setup())\n",
    "reg_date": "2021-10-12T12:03:12.000Z"
  },
  {
    "id": 1604,
    "keyword": null,
    "link": null,
    "title": " how to change tablayout current view position in android",
    "description": "void selectPage(int pageIndex){     tabLayout.setScrollPosition(pageIndex,0f,true);     viewPager.setCurrentItem(pageIndex); }\n",
    "reg_date": "2021-10-12T12:03:13.000Z"
  },
  {
    "id": 1605,
    "keyword": null,
    "link": null,
    "title": " how to change the colours of a printed line in java",
    "description": "COLOURED LETTERS: public static final String ANSI_RESET = \"\\u001B[0m\"; public static final String ANSI_BLACK = \"\\u001B[30m\"; public static final String ANSI_RED = \"\\u001B[31m\"; public static final String ANSI_GREEN = \"\\u001B[32m\"; public static final String ANSI_YELLOW = \"\\u001B[33m\"; public static final String ANSI_BLUE = \"\\u001B[34m\"; public static final String ANSI_PURPLE = \"\\u001B[35m\"; public static final String ANSI_CYAN = \"\\u001B[36m\"; public static final String ANSI_WHITE = \"\\u001B[37m\";  COLOURED BACKGROUND: public static final String ANSI_BLACK_BACKGROUND = \"\\u001B[40m\"; public static final String ANSI_RED_BACKGROUND = \"\\u001B[41m\"; public static final String ANSI_GREEN_BACKGROUND = \"\\u001B[42m\"; public static final String ANSI_YELLOW_BACKGROUND = \"\\u001B[43m\"; public static final String ANSI_BLUE_BACKGROUND = \"\\u001B[44m\"; public static final String ANSI_PURPLE_BACKGROUND = \"\\u001B[45m\"; public static final String ANSI_CYAN_BACKGROUND = \"\\u001B[46m\"; public static final String ANSI_WHITE_BACKGROUND = \"\\u001B[47m\"; \n",
    "reg_date": "2021-10-12T12:03:13.000Z"
  },
  {
    "id": 1606,
    "keyword": null,
    "link": null,
    "title": " how to change the icon of a jframe",
    "description": "frame.setIconImage(img);\n",
    "reg_date": "2021-10-12T12:03:13.000Z"
  },
  {
    "id": 1607,
    "keyword": null,
    "link": null,
    "title": " how to change the value of an arraylist in java",
    "description": "list.set(4, \"element at index 4 is replaced by this string\");\nclass array{   public static void main(String[] args){     int arr[] = {1,2,3,4};     System.out.println(\"Before update\" + arr[2]);     arr[2] = 9;//updating the value     System.out.println(\"After update\" + arr[2]);   } } \nclass array{   public static void main(String[] args){     int arr[] = {1,2,3,8};     System.out.println(\"Before update\" + arr[2]);     arr[2] = 9;//updating the value     System.out.println(\"After update\" + arr[2]);   } } \nclass array{   public static void main(String[] args){     int arr[] = {1,2,3,4};     System.out.println(\"Before update\" + arr[2]);     arr[2] = 9;//updating the value     System.out.println(\"After update\" + arr[2]);   } } \nclass array{   public static void main(String[] args){     int arr[] = {1,2,3,4};     System.out.println(\"Before update\" + arr[2]);     arr[2] = 9;//updating the value     System.out.println(\"After update\" + arr[2]);   } } \nclass array{   public static void main(String[] args){     int arr[] = {1,2,3,8};     System.out.println(\"Before update\" + arr[2]);     arr[2] = 9;//updating the value     System.out.println(\"After update\" + arr[2]);   } } \n",
    "reg_date": "2021-10-12T12:03:13.000Z"
  },
  {
    "id": 1608,
    "keyword": null,
    "link": null,
    "title": " how to change top of window in java",
    "description": "UIDefaults uiDefaults = UIManager.getDefaults(); uiDefaults.put(\"activeCaption\", new javax.swing.plaf.ColorUIResource(Color.gray)); uiDefaults.put(\"activeCaptionText\", new javax.swing.plaf.ColorUIResource(Color.white)); JFrame.setDefaultLookAndFeelDecorated(true);\n",
    "reg_date": "2021-10-12T12:03:13.000Z"
  },
  {
    "id": 1609,
    "keyword": null,
    "link": null,
    "title": " how to check for a decimal point in java",
    "description": "d % 1 == 0 //THIS CHECKS IF VARIABLE D IS A WHOLE NUMBER\n",
    "reg_date": "2021-10-12T12:03:13.000Z"
  },
  {
    "id": 1610,
    "keyword": null,
    "link": null,
    "title": " how to check grant permissions in android",
    "description": "   if (ContextCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION)                 == PackageManager.PERMISSION_GRANTED) {            // Do something ...         } \n",
    "reg_date": "2021-10-12T12:03:13.000Z"
  },
  {
    "id": 1611,
    "keyword": null,
    "link": null,
    "title": " how to check if a char is a letter java",
    "description": "Character.isDigit(string.charAt(index)) //(JavaDoc) will return true if it's a digit Character.isLetter(string.charAt(index)) //(JavaDoc) will return true if it's a letter\n",
    "reg_date": "2021-10-12T12:03:13.000Z"
  },
  {
    "id": 1612,
    "keyword": null,
    "link": null,
    "title": " how to check if a list is empty java",
    "description": "if (list != null && !list.isEmpty()) { do something }\n",
    "reg_date": "2021-10-12T12:03:13.000Z"
  },
  {
    "id": 1613,
    "keyword": null,
    "link": null,
    "title": " how to check if a number is a power of 2 java",
    "description": " //create a boolean method that checks if number is a power of 2 by using modulus public static boolean powerOfTwoGeneral(int n)  {  while(n%2==0)  {  n=n/2;  }  if(n==1)  {  return true;  }  else  {  return false;  }  }   \nboolean result = number > 0 && ((number & (number - 1)) == 0);\n",
    "reg_date": "2021-10-12T12:03:13.000Z"
  },
  {
    "id": 1614,
    "keyword": null,
    "link": null,
    "title": " how to check if a string has only numbers in java",
    "description": "Character.isDigit(str.charAt(i));\n// Java program for the above approach // contains only digits class GFG {  \t// Function to check if a string \t// contains only digits \tpublic static boolean \tonlyDigits(String str, int n) \t{ \t\t// Traverse the string from \t\t// start to end \t\tfor (int i = 0; i < n; i++) {  \t\t\t// Check if character is \t\t\t// digit from 0-9 \t\t\t// then return true \t\t\t// else false \t\t\tif (str.charAt(i) >= '0' \t\t\t\t&& str.charAt(i) <= '9') { \t\t\t\treturn true; \t\t\t} \t\t\telse { \t\t\t\treturn false; \t\t\t} \t\t} \t\treturn false; \t}  \t// Driver Code \tpublic static void main(String args[]) \t{ \t\t// Given string str \t\tString str = \"1234\"; \t\tint len = str.length();  \t\t// Function Call \t\tSystem.out.println(onlyDigits(str, len)); \t} } \n",
    "reg_date": "2021-10-12T12:03:13.000Z"
  },
  {
    "id": 1615,
    "keyword": null,
    "link": null,
    "title": " how to check if an element is in arraylist java",
    "description": "// creating an Empty Integer ArrayList         ArrayList<Integer> arr = new ArrayList<Integer>(4); // using add() to initialize values // [1, 2, 3, 4]         arr.add(1);         arr.add(2);         arr.add(3);         arr.add(4);  // use contains() to check if the element // 2 exits or not         boolean ans = arr.contains(2);\n",
    "reg_date": "2021-10-12T12:03:14.000Z"
  },
  {
    "id": 1616,
    "keyword": null,
    "link": null,
    "title": " how to check if an input is an integer java",
    "description": "import java.util.InputMismatchException; import java.util.Scanner;  public class Number { \t \tpublic static void main(String[] args) { \t\t \t\tint yourNumber; \t\t \t\twhile(true) {\t \t\t\t \t\t\t// to read inputs from user \t\t\tScanner scan = new Scanner(System.in); \t\t\t \t\t\ttry { \t\t\t\tSystem.out.print(\"ayy bruh enter you age : \"); \t\t\t\t \t\t\t\t// throws InputMismatchException if it's not a number \t\t\t\tyourNumber = scan.nextInt();  \t\t\t\t \t\t\t\tscan.close(); \t\t\t\tbreak; \t\t\t}catch(InputMismatchException notNumber) { // << catch the exception and print the error message \t\t\t\tSystem.err.println(\"huh I can understand numbers,\" \t\t\t\t\t\t+ \"ENTER A NUMBER !\"); \t\t\t} \t\t} \t\t \t\t// print the result :)) \t\tSystem.out.printf(\"so your age is %d, ..AWESOME !! :))\", yourNumber); \t\t \t} \t } \n",
    "reg_date": "2021-10-12T12:03:14.000Z"
  },
  {
    "id": 1617,
    "keyword": null,
    "link": null,
    "title": " how to check if array is full java",
    "description": "     int[] candy = new int[10];  //Array size is 10      //first array: Index 0, last array index: 9.       for (int x=0; x < candy.length; x++)            if (x == candy.length - 1)                 //Reached last element of array \n",
    "reg_date": "2021-10-12T12:03:14.000Z"
  },
  {
    "id": 1618,
    "keyword": null,
    "link": null,
    "title": " how to check if location is enabled android",
    "description": "LocationManager lm = (LocationManager)context.getSystemService(Context.LOCATION_SERVICE); boolean gps_enabled = false; boolean network_enabled = false;  try {     gps_enabled = lm.isProviderEnabled(LocationManager.GPS_PROVIDER); } catch(Exception ex) {}  try {     network_enabled = lm.isProviderEnabled(LocationManager.NETWORK_PROVIDER); } catch(Exception ex) {}  if(!gps_enabled && !network_enabled) {     // notify user     new AlertDialog.Builder(context)         .setMessage(R.string.gps_network_not_enabled)         .setPositiveButton(R.string.open_location_settings, new DialogInterface.OnClickListener() {             @Override             public void onClick(DialogInterface paramDialogInterface, int paramInt) {                 context.startActivity(new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS));             }         }         .setNegativeButton(R.string.Cancel,null)         .show();     }\n",
    "reg_date": "2021-10-12T12:03:14.000Z"
  },
  {
    "id": 1619,
    "keyword": null,
    "link": null,
    "title": " how to check if number is integer in java",
    "description": "if(x == (int)x){  println(\"x is an integer\"); }\n//\"% (modulo)\" calulates the remainder when the value on the left is divided by the value on the right  float number = 20;  if(number%1 == 0){ \tprintln(\"It is an integer\"); } else { \tprintln(\"It is not an integer\"); }\n",
    "reg_date": "2021-10-12T12:03:14.000Z"
  },
  {
    "id": 1620,
    "keyword": null,
    "link": null,
    "title": " how to check if recyclerview is empty",
    "description": "// siyanda zama if (recyclerview.getItemCount() == 0)   {     Toast.makeText(getActivity(), \"No records to show!\", Toast.LENGTH_SHORT).show();   }\n",
    "reg_date": "2021-10-12T12:03:14.000Z"
  },
  {
    "id": 1621,
    "keyword": null,
    "link": null,
    "title": " how to check if the file has remaining without reading from it java",
    "description": "Scanner scanner = new Scanner(new File(\"filename\")); while (scanner.hasNextLine()) {    String line = scanner.nextLine();    // process the line } \n",
    "reg_date": "2021-10-12T12:03:14.000Z"
  },
  {
    "id": 1622,
    "keyword": null,
    "link": null,
    "title": " how to check if there is a character in a string java",
    "description": "String.contains() \nstring.indexOf('a')\n",
    "reg_date": "2021-10-12T12:03:14.000Z"
  },
  {
    "id": 1623,
    "keyword": null,
    "link": null,
    "title": " how to check if user is logged in firebase android and then load another activity",
    "description": " private FirebaseAuth firebaseAuth;  FirebaseAuth.AuthStateListener mAuthListener;     firebaseAuth = FirebaseAuth.getInstance();        mAuthListener = new FirebaseAuth.AuthStateListener(){                 @Override                 public  void  onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth){             FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();         if(user!=null){         Intent intent = new Intent(LoginActivity.this, MainActivity.class);         startActivity(intent);         finish(); }                 }               };\n",
    "reg_date": "2021-10-12T12:03:14.000Z"
  },
  {
    "id": 1624,
    "keyword": null,
    "link": null,
    "title": " how to check java path in mac",
    "description": "1. Open terminal window 2. Type command: $ vim ~/.bash_profile and Hit Enter 3. Type command: $ export JAVA_HOME=$(/usr/libexec/java_home) and press Escape key for Save changes. 4. Type command: :(colon)wq, It will Save and close .bash_profile file. 5. Type command: source ~/.bash_profile and hit Enter 6. Now we can check the value of the JAVA_HOME variable: 7. Type Command: echo $JAVA_HOME  The result should be the path to the JDK installation:  /Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home\n",
    "reg_date": "2021-10-12T12:03:14.000Z"
  },
  {
    "id": 1625,
    "keyword": null,
    "link": null,
    "title": " how to check keyboard is open or not in android",
    "description": "KeyboardUtils.addKeyboardToggleListener(this, new KeyboardUtils.SoftKeyboardToggleListener() {     @Override     public void onToggleSoftKeyboard(boolean isVisible)     {         Log.d(\"keyboard\", \"keyboard visible: \"+isVisible);     } }); \n",
    "reg_date": "2021-10-12T12:03:15.000Z"
  },
  {
    "id": 1626,
    "keyword": null,
    "link": null,
    "title": " how to check null and empty string in java",
    "description": "if(str != null && !str.isEmpty()) { /* do your stuffs here */ }\npublic class Null {   \tpublic static boolean isNullOrEmpty(String str) {         if(str != null && !str.isEmpty())             return false;         return true;     } }\nif(str != null && !str.isEmpty()) Be sure to use the parts of && in this order, because java will not proceed to evaluate the second part if the first part of && fails, thus ensuring you will not get a null pointer exception from str.isEmpty() if str is null.\nif (myString == null || myString.equals(\"\")) \t\t\tthrow new IllegalArgumentException(\"empty string\");\n",
    "reg_date": "2021-10-12T12:03:15.000Z"
  },
  {
    "id": 1627,
    "keyword": null,
    "link": null,
    "title": " how to check number of messages in kafka topic",
    "description": "brokers=\"<broker1:port>\" topic=<topic-name> sum_1=$(/usr/hdp/current/kafka-broker/bin/kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list $brokers --topic $topic --time -1 | grep -e ':[[:digit:]]*:' | awk -F  \":\" '{sum += $3} END {print sum}') sum_2=$(/usr/hdp/current/kafka-broker/bin/kafka-run-class.sh kafka.tools.GetOffsetShell --broker-list $brokers --topic $topic --time -2 | grep -e ':[[:digit:]]*:' | awk -F  \":\" '{sum += $3} END {print sum}') echo \"Number of records in topic ${topic}: \"$((sum_1 - sum_2)) \n",
    "reg_date": "2021-10-12T12:03:15.000Z"
  },
  {
    "id": 1628,
    "keyword": null,
    "link": null,
    "title": " how to check object type in java",
    "description": "// obj instanceof Class  /*example*/  String str = \"a String made by the String class\";  if(str instanceof String) System.out.println(\"This is True\"); if(str instanceof float) System.out.println(\"This will never be on your screen\");  // You can do this with any type of class you want!\n",
    "reg_date": "2021-10-12T12:03:15.000Z"
  },
  {
    "id": 1629,
    "keyword": null,
    "link": null,
    "title": " how to check the current user in firebase android",
    "description": "@Override public void onStart() {     super.onStart();     FirebaseUser currentUser = mAuth.getCurrentUser();     if (currentUser == null) {         // No user is signed in     } else {         // User logged in     } }\n",
    "reg_date": "2021-10-12T12:03:15.000Z"
  },
  {
    "id": 1630,
    "keyword": null,
    "link": null,
    "title": " how to check the end of a string java",
    "description": "public class Demo {     public static void main(String[] args) {        String str = \"demo\";        if(str.endsWith(\"mo\")) {           System.out.println(\"The string ends with the word mo\");        } else {           System.out.println(\"The string does not end with the word mo\");        }     } }\n",
    "reg_date": "2021-10-12T12:03:15.000Z"
  },
  {
    "id": 1631,
    "keyword": null,
    "link": null,
    "title": " how to check the lines in a file java scanner",
    "description": "int count = 0; while (scanner.hasNextLine()) {     count++;     scanner.nextLine(); }\n",
    "reg_date": "2021-10-12T12:03:15.000Z"
  },
  {
    "id": 1632,
    "keyword": null,
    "link": null,
    "title": " how to check type of primitive value in java",
    "description": "int i = 20; float f = 20.2f; System.out.println(((Object)i).getClass().getName()); System.out.println(((Object)f).getClass().getName());\n",
    "reg_date": "2021-10-12T12:03:15.000Z"
  },
  {
    "id": 1633,
    "keyword": null,
    "link": null,
    "title": " how to check which java version i have",
    "description": "java -version  #for jre version javac -version  # for java compiler version  \njava --version\njava -version\n",
    "reg_date": "2021-10-12T12:03:15.000Z"
  },
  {
    "id": 1634,
    "keyword": null,
    "link": null,
    "title": " how to circular a bitmap android",
    "description": "public Bitmap getCroppedBitmap(Bitmap bitmap) {     Bitmap output = Bitmap.createBitmap(bitmap.getWidth(),             bitmap.getHeight(), Config.ARGB_8888);     Canvas canvas = new Canvas(output);      final int color = 0xff424242;     final Paint paint = new Paint();     final Rect rect = new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight());      paint.setAntiAlias(true);     canvas.drawARGB(0, 0, 0, 0);     paint.setColor(color);     // canvas.drawRoundRect(rectF, roundPx, roundPx, paint);     canvas.drawCircle(bitmap.getWidth() / 2, bitmap.getHeight() / 2,             bitmap.getWidth() / 2, paint);     paint.setXfermode(new PorterDuffXfermode(Mode.SRC_IN));     canvas.drawBitmap(bitmap, rect, rect, paint);     //Bitmap _bmp = Bitmap.createScaledBitmap(output, 60, 60, false);     //return _bmp;     return output; }\n",
    "reg_date": "2021-10-12T12:03:15.000Z"
  },
  {
    "id": 1635,
    "keyword": null,
    "link": null,
    "title": " how to clear a stringbuffer in java",
    "description": "StringBuffer str = new StringBuffer();  str.append(\"One\"); str.append(\"Two\"); str.append(\"Three\");  //<StringBuffer>.delete(<int start>, <int end>); str.delete(0, str.length());\n",
    "reg_date": "2021-10-12T12:03:15.000Z"
  },
  {
    "id": 1636,
    "keyword": null,
    "link": null,
    "title": " how to clear a text file in java",
    "description": "File file = new File(\"/path/to/file.txt\"); PrintWriter writer = new PrintWriter(file); writer.print(\"\"); writer.close();\n",
    "reg_date": "2021-10-12T12:03:16.000Z"
  },
  {
    "id": 1637,
    "keyword": null,
    "link": null,
    "title": " how to clear activity stack in android",
    "description": "intent.flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK\n",
    "reg_date": "2021-10-12T12:03:16.000Z"
  },
  {
    "id": 1638,
    "keyword": null,
    "link": null,
    "title": " how to clear stringbuilder in java",
    "description": "stringBuilder.setLength(0);\nstringBuilder = new StringBuilder();\n",
    "reg_date": "2021-10-12T12:03:16.000Z"
  },
  {
    "id": 1639,
    "keyword": null,
    "link": null,
    "title": " how to clear text fields in java",
    "description": "JButton b = new JButton(\"Clear\"); b.addActionListener(new ActionListener(){     public void actionPerformed(ActionEvent e){         textfield.setText(\"\");         //textfield.setText(null); //or use this     } });\n",
    "reg_date": "2021-10-12T12:03:16.000Z"
  },
  {
    "id": 1640,
    "keyword": null,
    "link": null,
    "title": " how to clear the screen by pressing a key in java",
    "description": "Runtime.getRuntime().exec(\"cls\");\npublic static void clearScreen() {     System.out.print(\"\\033[H\\033[2J\");     System.out.flush(); } \n",
    "reg_date": "2021-10-12T12:03:16.000Z"
  },
  {
    "id": 1641,
    "keyword": null,
    "link": null,
    "title": " how to close a jframe in java with an if statement",
    "description": "Jframe frame = new Jframe(); int count = 0; if(count==10){   frame.setVisable(false);   frame.dispose(); }\n",
    "reg_date": "2021-10-12T12:03:16.000Z"
  },
  {
    "id": 1642,
    "keyword": null,
    "link": null,
    "title": " how to close the fragment by a close button in android",
    "description": "getActivity(). getFragmentManager(). popBackStack();\n",
    "reg_date": "2021-10-12T12:03:16.000Z"
  },
  {
    "id": 1643,
    "keyword": null,
    "link": null,
    "title": " how to collect objective in java",
    "description": "private ArrayList<Mushroom> mushrooms;// Mushroom is type, mushrooms is name of collection // here is example of collection tyoe Array list\n",
    "reg_date": "2021-10-12T12:03:16.000Z"
  },
  {
    "id": 1644,
    "keyword": null,
    "link": null,
    "title": " how to compare 3 numbers in java",
    "description": "if (a > b && a > c) {     //Here you determine second biggest, but you know that a is largest }  if (b > a && b > c) {     //Here you determine second biggest, but you know that b is largest }      if (c > b && c > a) {     //Here you determine second biggest, but you know that c is largest } \n",
    "reg_date": "2021-10-12T12:03:16.000Z"
  },
  {
    "id": 1645,
    "keyword": null,
    "link": null,
    "title": " how to compare a char to a string java",
    "description": "public class JavaCharacterCompareExample1 { \tpublic static void main(String[] args) { \t\tchar firstValue = 'A'; \t\tchar secondValue = 'B'; \t\t// compare the first char to the second     \tint result = Character.compare(firstValue, secondValue);     \tif (result == 0) {       \t\tSystem.out.println(\"The chars are the same.\");     \t} else {           \tSystem.out.println(\"The chars are different.\");         } \t} }\n",
    "reg_date": "2021-10-12T12:03:16.000Z"
  },
  {
    "id": 1646,
    "keyword": null,
    "link": null,
    "title": " how to compare current date and time with another date and time  in android",
    "description": "Date date1 = calendar1.getTime(); Date date2 = calendar2.getTime(); if (date1.compareTo(date2) > 0) {    Log.i(\"app\", \"Date1 is after Date2\");}  else if (date1.compareTo(date2) < 0)  {    Log.i(\"app\", \"Date1 is before Date2\");}  else if (date1.compareTo(date2) == 0)  {    Log.i(\"app\", \"Date1 is equal to Date2\");}\n",
    "reg_date": "2021-10-12T12:03:16.000Z"
  },
  {
    "id": 1647,
    "keyword": null,
    "link": null,
    "title": " how to compare objects in java",
    "description": "this.equals(other)\n",
    "reg_date": "2021-10-12T12:03:17.000Z"
  },
  {
    "id": 1648,
    "keyword": null,
    "link": null,
    "title": " how to compare strings java",
    "description": "System.out.println(\"hey\".equals(\"hey\")); //prints true  /* \talways use .equals() instead of ==,     because == does the compare the string content but     loosely where the string is stored in. */\n// compare two strings in java using String.equals() method in java public class EqualsMethodDemo {    public static void main(String[] args)    {       String str1 = new String(\"HelloWorld\");       String str2 = new String(\"Flower\");       String str3 = new String(\"Hello\");       String str4 = new String(\"Hello\");       String str5 = new String(\"hello\");       // compare str1 != str2       System.out.println(\"Compare \" + str1 + \" and \" + str2 + \": \" + str1.equals(str2));       // compare str3 = str4       System.out.println(\"Compare \" + str3 + \" and \" + str4 + \": \" + str3.equals(str4));       // compare str4 != str5       System.out.println(\"Compare \" + str4 + \" and \" + str5 + \": \" + str4.equals(str5));       // compare str1 != str4       System.out.println(\"Compare \" + str1 + \" and \" + str4 + \": \" + str1.equals(str4));    } }\n******Java String compareTo()******    The Java String class compareTo() method compares the given    string with the current string lexicographically.    It returns a positive number, negative number, or 0.   ___________________________________________   \tif s1 > s2, it returns positive number   \tif s1 < s2, it returns negative number   \tif s1 == s2, it returns 0     ___________________________________________      \nif (aName.equals(anotherName))         {              System.out.println(aName + \" equals \" + anotherName);         }         else              {                  System.out.println(aName + \" does not equal \" +anotherName );                                         }\n// These two have the same value new String(\"test\").equals(\"test\") // --> true   // ... but they are not the same object new String(\"test\") == \"test\" // --> false   // ... neither are these new String(\"test\") == new String(\"test\") // --> false  \nclass scratch{     public static void main(String[] args) {         String str1 = \"Nyello\";         String str2 = \"Hello\";         String str3 = \"Hello\";          System.out.println( str1.equals(str2) ); //prints false         System.out.println( str2.equals(str3) ); //prints true     } }\n",
    "reg_date": "2021-10-12T12:03:17.000Z"
  },
  {
    "id": 1649,
    "keyword": null,
    "link": null,
    "title": " how to compare two maps in java",
    "description": "@Test public void whenCompareTwoHashMapsUsingEquals_thenSuccess() {     Map<String, String> asiaCapital1 = new HashMap<String, String>();     asiaCapital1.put(\"Japan\", \"Tokyo\");     asiaCapital1.put(\"South Korea\", \"Seoul\");       Map<String, String> asiaCapital2 = new HashMap<String, String>();     asiaCapital2.put(\"South Korea\", \"Seoul\");     asiaCapital2.put(\"Japan\", \"Tokyo\");       Map<String, String> asiaCapital3 = new HashMap<String, String>();     asiaCapital3.put(\"Japan\", \"Tokyo\");     asiaCapital3.put(\"China\", \"Beijing\");       asiaCapital1.equals(asiaCapital2);     asiaCapital1.equals(asiaCapital3); } \n",
    "reg_date": "2021-10-12T12:03:17.000Z"
  },
  {
    "id": 1650,
    "keyword": null,
    "link": null,
    "title": " how to configure  alternative openjdk",
    "description": "sudo update-alternatives --config java\n",
    "reg_date": "2021-10-12T12:03:17.000Z"
  },
  {
    "id": 1651,
    "keyword": null,
    "link": null,
    "title": " how to control clip volume java",
    "description": "public static void play(Clip clip) {     if (Settings.getSettings().isVolumeOn()) {         FloatControl volume = (FloatControl) clip.getControl(FloatControl.Type.MASTER_GAIN);         volume.setValue(-1 * Settings.getSettings().getVolume());         clip.start();     } }\n",
    "reg_date": "2021-10-12T12:03:17.000Z"
  },
  {
    "id": 1652,
    "keyword": null,
    "link": null,
    "title": " how to converet negative byte value to postive int value in java",
    "description": "int value = (byteValue >= (byte) 0) ? (int) byteValue : 256 + (int) byteValue;  \n",
    "reg_date": "2021-10-12T12:03:17.000Z"
  },
  {
    "id": 1653,
    "keyword": null,
    "link": null,
    "title": " how to convert a collection to array in java",
    "description": "List<String> list = new ArrayList<String>(); // Original list String[] arr = list.toArray(new String[list.size()]);  // toArray function with array to be populated by this list as an argument.\n",
    "reg_date": "2021-10-12T12:03:17.000Z"
  },
  {
    "id": 1654,
    "keyword": null,
    "link": null,
    "title": " how to convert a string to char in java",
    "description": "char c = 'a'; String s = Character.toString(c); //s == \"a\"\nString string =  \"ABCDEF\" ;   char[] charsFromString = string.toCharArray(); // { 'A', 'B', 'C', 'D', 'E', 'F' }\n// getting single character from string.. String str=\"abcd\";  char c=str.toChar(0);   System.out.println(\"output is \"+c); // output is a\nchar[] chars = { 'A', 'B', 'C', 'D', 'E', 'F' };  String str1 = String.valueOf(chars); //\"ABCDEF\" String str2 = new String(chars);// \"ABCDEF\"  System.out.println(str1.equals(str2)); //\"true\"\nString s = \"a\"; char c = s.charAt(\"0\");\n",
    "reg_date": "2021-10-12T12:03:17.000Z"
  },
  {
    "id": 1655,
    "keyword": null,
    "link": null,
    "title": " how to convert an ascii number to character in java",
    "description": "// From Char to Ascii char character = 'a';     int ascii = (int) character;  // From Ascii to Char int ascii = 65; char character = (char) ascii;\n",
    "reg_date": "2021-10-12T12:03:17.000Z"
  },
  {
    "id": 1656,
    "keyword": null,
    "link": null,
    "title": " how to convert an object into string with different fields in java",
    "description": "String convertedToString = String.valueOf(Object);  //method 1  String convertedToString = \"\" + Object;   //method 2  String convertedToString = Object.toString();  //method 3\n",
    "reg_date": "2021-10-12T12:03:17.000Z"
  },
  {
    "id": 1657,
    "keyword": null,
    "link": null,
    "title": " how to convert char to uppercase java",
    "description": "char first = Character.toUpperCase(userIdea.charAt(0)); betterIdea = first + userIdea.substring(1);\n",
    "reg_date": "2021-10-12T12:03:18.000Z"
  },
  {
    "id": 1658,
    "keyword": null,
    "link": null,
    "title": " how to convert double to int in java",
    "description": "Double d= new Double(i);//first way   Double d2=Double.valueOf(i);//second way  \nclass Scratch{     public static void main(String[] args){         double decimal = 5.7;         System.out.println( (int) decimal );\t//casting         System.out.println( Math.round(decimal * 10) / (double) 10);\t//Math.round()         System.out.println( decimal % 1);\t// modulus         System.out.println( Integer.parseInt( String.valueOf(decimal).substring(0, String.valueOf(decimal).indexOf(\".\")))); // .substring()     } }\ndouble value = 4.3; int convertedValue = value % 1;\n@SuppressWarnings(\"deprecation\") int Entero=new Double(345.8).intValue();\n//In java, you can cast to any primitive type by putting (primitiveType) //before whatever you're casting to.  private static int myInt = (int)myDouble;\ndouble data = 3452.345 int value = (int)data; \n",
    "reg_date": "2021-10-12T12:03:18.000Z"
  },
  {
    "id": 1659,
    "keyword": null,
    "link": null,
    "title": " how to convert epoch time to date in java",
    "description": "long epochTime=System.currentTimeMillis();\nString formatted = dateTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm:ss\")); \n",
    "reg_date": "2021-10-12T12:03:18.000Z"
  },
  {
    "id": 1660,
    "keyword": null,
    "link": null,
    "title": " how to convert file to byte[] in java",
    "description": "import java.io.File; import java.nio.file.Files;  File file; // ...(file is initialised)... byte[] fileContent = Files.readAllBytes(file.toPath()); \n",
    "reg_date": "2021-10-12T12:03:18.000Z"
  },
  {
    "id": 1661,
    "keyword": null,
    "link": null,
    "title": " how to convert hash to string in python",
    "description": "import hashlib hash_object = hashlib.sha256(b'Hello World') hex_dig = hash_object.hexdigest() print(hex_dig) \nprint(hashlib.algorithms_available) print(hashlib.algorithms_guaranteed) \n",
    "reg_date": "2021-10-12T12:03:18.000Z"
  },
  {
    "id": 1662,
    "keyword": null,
    "link": null,
    "title": " how to convert int array to Integer List in java",
    "description": "int[] arr = {1,2,3}; IntStream.of(arr).boxed().collect(Collectors.toList());\nint[] ints = {1, 2, 3}; List<Integer> intList = new ArrayList<Integer>(ints.length); for (int i : ints) {     intList.add(i); }\nint[] ints = {1,2,3}; List<Integer> list = Arrays.stream(ints).boxed().collect(Collectors.toList()); \n",
    "reg_date": "2021-10-12T12:03:18.000Z"
  },
  {
    "id": 1663,
    "keyword": null,
    "link": null,
    "title": " how to convert int into int array of digits in java",
    "description": "String temp = Integer.toString(guess); int[] newGuess = new int[temp.length()]; for (int i = 0; i < temp.length(); i++) {     newGuess[i] = temp.charAt(i) - '0'; }\nint number = 110101;  String temp = Integer.toString(number); int[] numbers = new int[temp.length()]; for (int i = 0; i < temp.length(); i++) {     numbers[i] = temp.charAt(i) - '0'; }\n",
    "reg_date": "2021-10-12T12:03:18.000Z"
  },
  {
    "id": 1664,
    "keyword": null,
    "link": null,
    "title": " how to convert int to integer in java",
    "description": "// new Integer(i) is deprecated in java //therefore you can use the below mentioned technique int iInt = 10; Integer iInteger = Integer.valueOf(iInt);\npublic class IntToIntegerExample {   \tpublic static void main(String[] args) {     int i = 10;         Integer intObj = new Integer(i);     System.out.println(intObj);   } }\nint num = 9;\npublic class IntToIntegerExample { public static void main(String[] args) { int i = 10; Integer intObj = new Integer(i); System. out. println(intObj);\n",
    "reg_date": "2021-10-12T12:03:18.000Z"
  },
  {
    "id": 1665,
    "keyword": null,
    "link": null,
    "title": " how to convert integer to string in java",
    "description": "int x = 3;  Integer.toString(int) \nString s = String.ValueOf(x); //converts a int x to a String s\nString s = String.ValueOf(x); //converts a int x to a String s  //or  String s = Integer(x).toString();\t//converts a int x to a String s\nint i=10;   String s=String.valueOf(i);\nint i = 1234;  String s = String.ValueOf(i)\nint x = 3 String s = x + \"\";\n",
    "reg_date": "2021-10-12T12:03:18.000Z"
  },
  {
    "id": 1666,
    "keyword": null,
    "link": null,
    "title": " how to convert line into string java",
    "description": "File file = new File(fileName); Scanner input = new Scanner(file); List<String> list = new ArrayList<String>();  while (input.hasNextLine()) {     list.add(input.nextLine()); }  //adds each line of a text file into an ArrayList\n",
    "reg_date": "2021-10-12T12:03:18.000Z"
  },
  {
    "id": 1667,
    "keyword": null,
    "link": null,
    "title": " how to convert outputstream to bytearrayoutputstream in java",
    "description": "ByteArrayOutputStream bos = new ByteArrayOutputStream();      //Write the data to the byte array output stream here \t byte[] arr = bos.toByteArray(); //write the byte stream to the output stream os.write(arr);\n",
    "reg_date": "2021-10-12T12:03:18.000Z"
  },
  {
    "id": 1668,
    "keyword": null,
    "link": null,
    "title": " how to convert primitive int to Integer in java",
    "description": "public class IntToIntegerExample {   \tpublic static void main(String[] args) {     int i = 10;         Integer intObj = new Integer(i);     System.out.println(intObj);   } }\n",
    "reg_date": "2021-10-12T12:03:19.000Z"
  },
  {
    "id": 1669,
    "keyword": null,
    "link": null,
    "title": " how to convert string to array in java",
    "description": "String str = \"example\"; char[] ch = str.toCharArray(); \nHow to convert string to array  import java.util.*;     public class GFG {         public static void main(String args[])      {             String str = \"GeeksForGeeks\";             // Creating array and Storing the array          // returned by toCharArray()          char[] ch = str.toCharArray();             // Printing array          for (char c : ch) {              System.out.println(c);          }      }  }  \n",
    "reg_date": "2021-10-12T12:03:19.000Z"
  },
  {
    "id": 1670,
    "keyword": null,
    "link": null,
    "title": " how to convert string to boolean in java",
    "description": "String value = \"true\";  boolean b = Boolean.parseBoolean(value);  System.out.println(b);  Read more: https://www.java67.com/2018/03/java-convert-string-to-boolean.html#ixzz6HF3C1ERb\nboolean bool = Boolean.parseBoolean(str);\n",
    "reg_date": "2021-10-12T12:03:19.000Z"
  },
  {
    "id": 1671,
    "keyword": null,
    "link": null,
    "title": " how to convert string to double in android studio",
    "description": "Double lat; String lat_str = \"17.456174\"; try { lat = Double.parseDouble(lat_str); }catch (NumberFormatException e) { //lat_string does not contain valid double value }   \n",
    "reg_date": "2021-10-12T12:03:19.000Z"
  },
  {
    "id": 1672,
    "keyword": null,
    "link": null,
    "title": " how to convert string to int in java",
    "description": "String myString = \"1234\"; int foo = Integer.parseInt(myString);\nint result = Integer.parseInt(number);\nint result = Integer.parseInt(\"500\"); System.out.println(result) // prints 500 as int\n\tString number = \"10\"; \tint result = Integer.parseInt(number);\t\t\t \tSystem.out.println(result); Copy\n\tString number = \"10\"; \tint result = Integer.parseInt(number);\t\t\t \tSystem.out.println(result); \nThere are two methods available in java to convert string to integer. One is Integer.parseInt() method and another one is Integer.valueOf() method. Both these methods are static methods of java.lang.Integer class. Both these methods throw NumberFormatException if input string is not a valid integer.\n",
    "reg_date": "2021-10-12T12:03:19.000Z"
  },
  {
    "id": 1673,
    "keyword": null,
    "link": null,
    "title": " how to copy all files and subdirectories in directory in java",
    "description": "\tpublic static void storeFile(String path, File file) { \t\ttry { \t\t\tFile newFile = new File(path); \t\t\tnewFile.createNewFile(); \t\t\tFiles.copy(file.toPath(), newFile.toPath(), StandardCopyOption.REPLACE_EXISTING); \t\t} catch (Exception e) { \t\t\te.printStackTrace(); \t\t} \t} \t \tpublic static void storeDirectory(String path, File file) { \t\tnew File(path).mkdir(); \t\t \t\tfor (File files : file.listFiles()) { \t\t\tif (files.isDirectory()) \t\t\t\tstoreDirectory(path + \"/\" + files.getName(), files); \t\t\telse \t\t\t\tstoreFile(path + \"/\" + files.getName(), files); \t\t} \t}\n",
    "reg_date": "2021-10-12T12:03:19.000Z"
  },
  {
    "id": 1674,
    "keyword": null,
    "link": null,
    "title": " how to copy array in java",
    "description": "// Shallow copy int[] src = {1,2,3,4,5}; int[] dst = Arrays.copyOf(src, src.length);  // Deep copy int[] dst2 = new int[src.length]; for(int i = 0; i < src.length; i++){ \tdst2[i] = src[i]; }\nint[] src  = new int[]{1,2,3,4,5}; int[] dest = new int[5];  System.arraycopy( src, 0, dest, 0, src.length );\nint a[] = {1, 8, 3};     // Copy elements of a[] to b[]  int b[] = a.clone();\nint[] a = {1,2,3,4,5}; int[] b = Arrays.copyOf(a, a.length);\nint[] a = {1, 2, 3};       int[] b = a.clone();\n// method  public static int [] copyArray(int [] arr){       int [] copyArr = new int[arr.length];       for (int i = 0; i < copyArr.length; i++){             copyArr[i] = arr[i];        }       return copyArr; }  // Arrays. method  int[] copyCat = Arrays.copyOf(arr, arr.length);  // System  System.arraycopy(x,0,y,0,5); // 5 is array's length   // clone  y = x.clone(); \n",
    "reg_date": "2021-10-12T12:03:19.000Z"
  },
  {
    "id": 1675,
    "keyword": null,
    "link": null,
    "title": " how to copy list item to another list in java",
    "description": "List<Integer> source = Arrays.asList(1,2,3); List<Integer> dest = Arrays.asList(4,5,6); Collections.copy(dest, source); \nList<Integer> copy = new ArrayList<>(); copy.addAll(list); \n",
    "reg_date": "2021-10-12T12:03:19.000Z"
  },
  {
    "id": 1676,
    "keyword": null,
    "link": null,
    "title": " how to count number of words in a string",
    "description": " String name = \"Carmen is a fantastic play\"; //arbitrary sentence                  int numWords = (name.split(\"\\\\s+\")).length; //split string based on whitespace                                                 //split returns array - find legth of array                  System.out.println(numWords);\n",
    "reg_date": "2021-10-12T12:03:19.000Z"
  },
  {
    "id": 1677,
    "keyword": null,
    "link": null,
    "title": " how to count the number of occurrences of an element in a arraylist in java",
    "description": "ArrayList<String> listName = new ArrayList<>(); int occurrences = Collections.frequency(listName, \"element\");\nint occurrences = Collections.frequency(animals, \"bat\");\n",
    "reg_date": "2021-10-12T12:03:19.000Z"
  },
  {
    "id": 1678,
    "keyword": null,
    "link": null,
    "title": " how to crate an array of integers in java",
    "description": "int intArray[];    //declaring array intArray = new int[20];  // allocating memory to array //OR int[] intArray = new int[20]; // combining both statements in one\nint[] theNumbers = new int[5];  arr[0] = 4; arr[1] = 8; arr[2] = 15; arr[3] = 16; arr[4] = 23; arr[5] = 42;\n int[] intArray = new int[]{ 1,2,3,4,5,6,7,8,9,10 };\n",
    "reg_date": "2021-10-12T12:03:20.000Z"
  },
  {
    "id": 1679,
    "keyword": null,
    "link": null,
    "title": " how to create a 2d arraylist java",
    "description": "ArrayList<ArrayList<Object>> a = new ArrayList<ArrayList<Object>>();\n",
    "reg_date": "2021-10-12T12:03:20.000Z"
  },
  {
    "id": 1680,
    "keyword": null,
    "link": null,
    "title": " how to create a JFrame in java",
    "description": "import javax.swing.JFrame;  public class example {   public static void main(String[] args){     JFrame frame = new JFrame();     frame.setSize(100,100);     frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOES);     frame.setTitle(\"Example Frame\");     frame.setVisible(true);   } }\nimport javax.swing.JFrame; import java.awt.Rectangle; import javax.swing.JComponent; import java.awt.Graphics2D; import java.awt.Graphics; import java.awt.Color;  public class ChrismasTree {     public static void main(String[] args) {         JFrame window = new JFrame();         window.setTitle(\"Christmas Tree\");         window.setSize(800, 1000);         window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);         window.setVisible(true);         DrawingComponent DC = new DrawingComponent();         window.add(DC);     } }  class DrawingComponent extends JComponent{     public void paint(Graphics graph0){         Graphics2D graph = (Graphics2D) graph0;          graph.setColor(Color.LIGHT_GRAY);         graph.draw(new Rectangle(0, 710, 70, 60));          graph.setColor(Color.BLUE);         graph.draw(new Rectangle(70, 600, 50, 100));          graph.setColor(Color.BLACK);     } } \nThere is a typo CLOSE not CLOES :)\n",
    "reg_date": "2021-10-12T12:03:20.000Z"
  },
  {
    "id": 1681,
    "keyword": null,
    "link": null,
    "title": " how to create a Rectangle in java",
    "description": "import javax.swing.JFrame; import java.awt.Rectangle; import javax.swing.JComponent; import java.awt.Graphics2D; import java.awt.Graphics; import java.awt.Color;  public class ChrismasTree {     public static void main(String[] args) {         JFrame window = new JFrame();         window.setTitle(\"Christmas Tree\");         window.setSize(800, 1000);         window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);         window.setVisible(true);         DrawingComponent DC = new DrawingComponent();         window.add(DC);     } }  class DrawingComponent extends JComponent{     public void paint(Graphics graph0){         Graphics2D graph = (Graphics2D) graph0;          graph.setColor(Color.LIGHT_GRAY);         graph.draw(new Rectangle(0, 710, 70, 60));          graph.setColor(Color.BLUE);         graph.draw(new Rectangle(70, 600, 50, 100));          graph.setColor(Color.BLACK);     } }\n",
    "reg_date": "2021-10-12T12:03:20.000Z"
  },
  {
    "id": 1682,
    "keyword": null,
    "link": null,
    "title": " how to create a button with javascri[t",
    "description": "// 1. Create the button var button = document.createElement(\"button\"); button.innerHTML = \"Do Something\";  // 2. Append somewhere var body = document.getElementsByTagName(\"body\")[0]; body.appendChild(button);  // 3. Add event handler button.addEventListener (\"click\", function() {   alert(\"did something\"); });  /* Read   https://css-tricks.com/use-button-element/ */\n",
    "reg_date": "2021-10-12T12:03:20.000Z"
  },
  {
    "id": 1683,
    "keyword": null,
    "link": null,
    "title": " how to create a circle in java",
    "description": "// x position, y position, x size, y size. ellipse(0, 0, 100, 100);\nimport java.util.Scanner; public class AreaOfCircle {    public static void main(String args[]){       int radius;       double area;       Scanner sc = new Scanner(System.in);       System.out.println(\"Enter the radius of the circle ::\");       radius = sc.nextInt();       area = (radius*radius)*Math.PI;       System.out.println(\"Area of the circle is ::\"+area);    } }\npublic class scratch {     public static void main(String[] args) {         JFrame window = new JFrame();         window.setTitle(\"Christmas Tree\");         window.setSize(700, 600);         window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);         window.setVisible(true);         DrawingComponent DC = new DrawingComponent();         window.add(DC);     } } class DrawingComponent extends JComponent{       public void paint(Graphics graph0){         Graphics2D graph = (Graphics2D) graph0;         Ellipse2D.Double circle = new Ellipse.Double(5, 5, 25, 25);         graph.fill(circle);       } }\n",
    "reg_date": "2021-10-12T12:03:20.000Z"
  },
  {
    "id": 1684,
    "keyword": null,
    "link": null,
    "title": " how to create a constructor in java",
    "description": "class Other{     public Other(String message){         System.out.println(message);     } }  class scratch{     public static void main(String[] args) {         Other method = new Other(\"Hey\");         //prints Hey to the console     } }\nclass MyClass {   public MyClass () {     //constructor code   } }\nThere are three types of constructors:  Default, No-arg constructor and Parameterized.    If you do not implement any constructor in your class, Java compiler inserts a default constructor into your code on your behalf. This constructor is known as default constructor.    Constructor with no arguments is known as no-arg constructor  Constructor with arguments(or you can say parameters) is known as  Parameterized constructor.\nA constructor is a special method used to initialize objects in java. we use constructors to initialize all variables in the class  when an object is created. As and when an object is created it is initialized automatically with the help of  constructor in java.    We have two types of constructors: Default Constructor Parameterized Constructor  public classname(){ } public classname(parameters list){ }\nclass Huso {   public Huso() {   \t//constructor code about a huso   } }\nclass Vehicle {                public int mYear;               public String mBrand;               public String mModel;               public int mMiles;               public int mPrice;                public Vehicle(int year, String brand, String model, int miles, int price) {                 mYear = year;                 mBrand = brand;                 mModel = model;                 mMiles = miles;                 mPrice = price;               }                public boolean worthBuying(int maxPrice){                 return (mPrice < maxPrice);               }              }            \n",
    "reg_date": "2021-10-12T12:03:20.000Z"
  },
  {
    "id": 1685,
    "keyword": null,
    "link": null,
    "title": " how to create a draw Rectangle in java",
    "description": "import javax.swing.JFrame; import java.awt.Rectangle; import javax.swing.JComponent; import java.awt.Graphics2D; import java.awt.Graphics; import java.awt.Color;  public class ChrismasTree {     public static void main(String[] args) {         JFrame window = new JFrame();         window.setTitle(\"Christmas Tree\");         window.setSize(800, 1000);         window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);         window.setVisible(true);         DrawingComponent DC = new DrawingComponent();         window.add(DC);     } }  class DrawingComponent extends JComponent{     public void paint(Graphics graph0){         Graphics2D graph = (Graphics2D) graph0;          graph.setColor(Color.LIGHT_GRAY);         graph.draw(new Rectangle(0, 710, 70, 60));          graph.setColor(Color.BLUE);         graph.draw(new Rectangle(70, 600, 50, 100));          graph.setColor(Color.BLACK);     } } \n",
    "reg_date": "2021-10-12T12:03:20.000Z"
  },
  {
    "id": 1686,
    "keyword": null,
    "link": null,
    "title": " how to create a function in java",
    "description": "package com.company;  public class Main {     static void one(){ // youCanPutWhatEverNameYouLikeInThePlaceOf\"One\"         System.out.println(\"HELLO\");     }     public static void main(String[] args) {         one(); //theTerminalShouldSay\"HELLO\"     } } \npublic class Main {     static void function(){         System.out.println(\"I am a function!\");     } \tpublic static void main(String[] args) { \t\tfunction(); \t} }\n//declare a function like this: void function(int parameter1) { \t//function body } //call the function like this: function(1);\n  static void myMethod() {     //LINES OF CODE   }\npublic class MyClass {   static int myMethod(int x) {     return 5 + x;   }    public static void main(String[] args) {     System.out.println(myMethod(3));   } } // Returns 8\npublic class main {   public static void function {     // Write your code here   } }\n",
    "reg_date": "2021-10-12T12:03:21.000Z"
  },
  {
    "id": 1687,
    "keyword": null,
    "link": null,
    "title": " how to create a hashmap in java",
    "description": "Map<String, String> myMap = new HashMap<String, String>() {{         put(\"a\", \"b\");         put(\"c\", \"d\");     }};\n// Import the HashMap class import java.util.HashMap;  \t// First Example     // Create a HashMap object called capitalCities     HashMap<String, String> capitalCities = new HashMap<String, String>();      // Add keys and values (Country, City)     \tcapitalCities.put(\"England\", \"London\");     \tcapitalCities.put(\"Germany\", \"Berlin\");     \tcapitalCities.put(\"Norway\", \"Oslo\");     \tcapitalCities.put(\"USA\", \"Washington DC\");     \tSystem.out.println(capitalCities);  \t//Second Example \t// Create a HashMap object called stGrade \tMap<String, Integer> stGrade = new HashMap<String, Integer>();   \t// Insert elements         \tstGrade.put(\"aaron\", new Integer(90));         \tstGrade.put(\"isaac\", new Integer(100));         \tstGrade.put(\"john\", new Integer(35));         \tstGrade.put(\"mohammad\", new Integer(100));   \t// Get value \t   \tstGrade.get(\"mohammad\"); \t// returns 100 \t\tstGrade.get(\"aaron\"); \t\t// returns 90 \t\tstGrade.get(\"john\");\t \t// returns 35 \t\tstGrade.get(\"isaac\"); \t\t// returns 100 \t\t\n//remember to first import java.util.*; first  //you can swap out string or integer for other data types Map<String, Integer> d = new HashMap<>(); \n//Hash map creation Map< String,Integer> hm =                           new HashMap< String,Integer>();  //inserting elements into hashmap        hm.put(\"a\", new Integer(100));         hm.put(\"b\", new Integer(200));         hm.put(\"c\", new Integer(300));         hm.put(\"d\", new Integer(400)); \n   HashMap<Integer,String> map=new HashMap<Integer,String>();//Creating HashMap     \nHashMap<Integer,String> map=new HashMap<Integer,String>();//key is integer, value is String\n",
    "reg_date": "2021-10-12T12:03:21.000Z"
  },
  {
    "id": 1688,
    "keyword": null,
    "link": null,
    "title": " how to create a java jframe",
    "description": "JFrame frame = new JFrame(\"Test Frame\");  frame.setSize(500,400);  frame.setVisible(true);  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n",
    "reg_date": "2021-10-12T12:03:21.000Z"
  },
  {
    "id": 1689,
    "keyword": null,
    "link": null,
    "title": " how to create a java library in intellij",
    "description": "From the main menu, select File | Project Structure Ctrl+Alt+Shift+S.  Under Project Settings, select Libraries.  Click the Add button and select one of the following:  Select Java or Kotlin/JS to add a library from the files located on your computer.  Select From Maven to download a library from Maven.\n",
    "reg_date": "2021-10-12T12:03:21.000Z"
  },
  {
    "id": 1690,
    "keyword": null,
    "link": null,
    "title": " how to create a linked list in java",
    "description": "public class LinkedList {      private Node head;     private int length = 0;      public LinkedList() {         this.head = new Node(null);     }      public int size() {         return length;     }        // Adds an element to the end of the list     public void add(Object data)  {          Node node = new Node(data);         Node iterator = head;         while (iterator.getNext() != null){             iterator = iterator.getNext();         }         iterator.setNext(node);         length++;     }        // Obtains an element by index     public Object get(int index) {          if (head.getNext() == null || index >= length){             return null;         }          Node iterator = head.getNext();         int counter = 0;          while(counter < index){              iterator = iterator.getNext();             counter++;         }         return iterator.getData();      }        // Returns the index of the element in the list     public int indexOf(Object data) {         Node obj=head;         for (int i = 0; i < length; i++) {             obj = obj.getNext();             if (obj.getData().equals(data)) {                 return i;             }         }         return -1;         //throw new Exception(\"Data not found\");     }        // Removes an element from the list     public boolean remove(Object data) {          if (head.getNext() == null){             return false;         }          Node iterator = head;          while(iterator.getNext() != null){              if (iterator.getNext().getData().equals(data)){                 iterator.setNext(iterator.getNext().getNext());                 length--;                 return true;             }              iterator = iterator.getNext();         }          return false;     }      private class Node {          private Object data;         private Node next;          public Node(Object data) {             this.data = data;             next = null;         }          public Object getData() {             return data;         }          public void setData(Object data) {             this.data = data;         }          public Node getNext() {             return next;         }          public void setNext(Node next) {             this.next = next;         }     }  }\nList<Integer> list = new LinkedList<>();\n LinkedList<String> list=new LinkedList<String>();\n// Java program to iterate the elements   // in an LinkedList       import java.util.*;        public class GFG {            public static void main(String args[])       {           LinkedList<String> ll               = new LinkedList<>();                ll.add(\"Geeks\");           ll.add(\"Geeks\");           ll.add(1, \"For\");                // Using the Get method and the           // for loop           for (int i = 0; i < ll.size(); i++) {                    System.out.print(ll.get(i) + \" \");           }                System.out.println();                // Using the for each loop           for (String str : ll)               System.out.print(str + \" \");       }   } \n",
    "reg_date": "2021-10-12T12:03:21.000Z"
  },
  {
    "id": 1691,
    "keyword": null,
    "link": null,
    "title": " how to create a list in java",
    "description": "import java.util.ArrayList; import java.util.LinkedList; import java.util.List;  class scratch{     public static void main(String[] args) {         List<Integer> aList = new ArrayList<>();         List<Integer> lList = new LinkedList<>();     } }\nList list = Arrays.asList(\"Hello\", \"World!\", \"How\", \"Are\", \"You\"); \n//Creating arraylist example  ArrayList<String> list = new ArrayList<String>();     //Adding objects in arraylist  list.add(\"Mango\");     list.add(\"Banana\");     //Change the element (index,\"new value\") list.set(1,\"Dates\");   //Return the 2nd element, because index starts from 0 System.out.println(\"Returning element: \" + list.get(1)); \n",
    "reg_date": "2021-10-12T12:03:21.000Z"
  },
  {
    "id": 1692,
    "keyword": null,
    "link": null,
    "title": " how to create a random number in java",
    "description": "import java.util.Random;  Random rand = new Random();  // Obtain a number between [0 - 49]. int n = rand.nextInt(50);  // Add 1 to the result to get a number from the required range // (i.e., [1 - 50]). n += 1;\nimport java.util.Random;  Random rand = new Random(); int maxNumber = 10;  int randomNumber = rand.nextInt(maxNumber) + 1;  System.out.println(randomNumber);\nimport java.util.Random;  class scratch{     public static void main(String[] args) {         Random rand = new Random();         System.out.println( rand.nextInt(5) );         //prints a random Int between 0 - 4 (including 0 & 4);     } }\nimport java.lang.Math;  int randomNumber;  int minimum = 1; int maximum = 10 - minimum;  randomNumber = (int)((Math.random()*maximum) + minimum);  System.out.println(\"Random Number (Between 1-10): \" + randomNumber);\n// java.util.random example import java.util.Random; public class JavaRandomClass {    public static void main(String[] args)    {       Random random = new Random();       // random integers in range 0 to 999        int randInt1 = random.nextInt(1000);        int randInt2 = random.nextInt(1000);       // printing random integers       System.out.println(\"Random Integers: \" + randInt1);        System.out.println(\"Random Integers: \" + randInt2);       // here we are generating Random doubles       double randDou1 = random.nextDouble();        double randDou2 = random.nextDouble();       // printing random doubles       System.out.println(\"Random Doubles: \" + randDou1);        System.out.println(\"Random Doubles: \" + randDou2);    } }\ndouble x = (Math.random()*((max-min)+1))+min;\n",
    "reg_date": "2021-10-12T12:03:21.000Z"
  },
  {
    "id": 1693,
    "keyword": null,
    "link": null,
    "title": " how to create a subclass in java",
    "description": "class Super {     Number aNumber; } class Sub extends Super {     Float aNumber; } \n",
    "reg_date": "2021-10-12T12:03:21.000Z"
  },
  {
    "id": 1694,
    "keyword": null,
    "link": null,
    "title": " how to create a variable java",
    "description": "int myVariable = 42;    //This is the most commonly used variable. Only use other variables if you have a good reason to.\n",
    "reg_date": "2021-10-12T12:03:21.000Z"
  },
  {
    "id": 1695,
    "keyword": null,
    "link": null,
    "title": " how to create an action listener in java",
    "description": "button.addActionListener(new ActionListener() {             @Override             public void actionPerformed(ActionEvent actionEvent)              {                            }         });\n",
    "reg_date": "2021-10-12T12:03:21.000Z"
  },
  {
    "id": 1696,
    "keyword": null,
    "link": null,
    "title": " how to create an array in java",
    "description": "// array of 5 strings String[] arr = new String[5]  arr[0] = \"Happy\"; arr[1] = \"Birthday\"; arr[2] = \"To\"; // etc...\nint[] intArray = new int[]{ 1,2,3,4,5,6,7,8,9,10 }\nint intArray[];    //declaring array intArray = new int[20];  // allocating memory to array //OR int[] intArray = new int[20]; // combining both statements in one\nint[] array = new int[/*size*/]; // Works for double, char, etc.\nint[] array1 = new int[5]; //int array length 5 String[] array2 = new String[5] //String array length 5 double[] array3 = new double[5] // Double array length 5 \nint[] theNumbers = new int[5];  arr[0] = 4; arr[1] = 8; arr[2] = 15; arr[3] = 16; arr[4] = 23; arr[5] = 42;\n",
    "reg_date": "2021-10-12T12:03:22.000Z"
  },
  {
    "id": 1697,
    "keyword": null,
    "link": null,
    "title": " how to create an array list in java",
    "description": "ArrayList<Type> name = new ArrayList<Type>();\nimport java.util.ArrayList; //create ArrayList ArrayList<String> arrayList = new ArrayList<String>();\nList<Integer> list = new ArrayList<>();\n",
    "reg_date": "2021-10-12T12:03:22.000Z"
  },
  {
    "id": 1698,
    "keyword": null,
    "link": null,
    "title": " how to create an array with unique values",
    "description": "import java.util.Random;  public class GenRandArray {     //Recommend reseeding within methods     static Random rand = new Random();      public static void fillInt( int[] fillArray ) {         //seeds the random for a new random each method call         rand.setSeed(System.currentTimeMillis()); \t\t         for(int i = 0; i < fillArray.length; i++)         {             fillArray[i]= rand.nextInt();                        \t/* for loop to check to make sure that none of the previous                numbers added are the same as the one just added. */             for (int j = 0; j < i; j++)             {               \t/* if so we need to redo the last random number by               \t   moving i back one index to be re-set */                 if (fillArray[i] == fillArray[j])                 {                     i--;                 }             }         }     } }\n",
    "reg_date": "2021-10-12T12:03:22.000Z"
  },
  {
    "id": 1699,
    "keyword": null,
    "link": null,
    "title": " how to create array of linkedlist in java",
    "description": "LinkedList<Long> hashTable[] = new LinkedList[10];\n",
    "reg_date": "2021-10-12T12:03:22.000Z"
  },
  {
    "id": 1700,
    "keyword": null,
    "link": null,
    "title": " how to create date class in java",
    "description": "// This creates a new Date instance with current system time. Internally It uses System.currentTimeMillis() Date date = new Date(); // This creates a new Date instance with time that you specify in milliseconds since the epoch time Date date = new Date(1672556400000L); // This time is Jan 1 2023 in GMT\n",
    "reg_date": "2021-10-12T12:03:22.000Z"
  },
  {
    "id": 1701,
    "keyword": null,
    "link": null,
    "title": " how to create folder java",
    "description": "package com.mkyong.file;  import java.io.File;  public class CreateDirectoryExample {      public static void main(String[] args) {          File file = new File(\"C:\\\\Directory1\");         if (!file.exists()) {             if (file.mkdir()) {                 System.out.println(\"Directory is created!\");             } else {                 System.out.println(\"Failed to create directory!\");             }         }          File files = new File(\"C:\\\\Directory2\\\\Sub2\\\\Sub-Sub2\");         if (!files.exists()) {             if (files.mkdirs()) {                 System.out.println(\"Multiple directories are created!\");             } else {                 System.out.println(\"Failed to create multiple directories!\");             }         }      }  }\n// mkdir() method in java example import java.io.*; public class CreateDirectory {    public static void main(String[] args)    {       File directory = new File(\"D:\\\\DirectoryExample\");       if(!directory.exists())       {          if(directory.mkdir())          {             System.out.println(\"Directory is created\");          }          else          {             System.out.println(\"Directory not created\");          }       }    } }\nnew File(\"pathToFile\").mkdir(); \n// mkdirs() method in java example import java.io.File; public class CreateDirectoryDemo {    public static void main(String[] args)    {       File directory = new File(\"D:\\\\DirectoryExample\\\\subdirectory1\\\\subdirectory2\");       if(!directory.exists())       {          if(directory.mkdirs())          {             System.out.println(\"Sub directories created\");          }          else          {             System.out.println(\"Sub directories not created\");          }       }    } }\n Path path = Paths.get(\"/home/mkyong/a/b/c/\");      //java.nio.file.Files;     Files.createDirectories(path);\n",
    "reg_date": "2021-10-12T12:03:22.000Z"
  },
  {
    "id": 1702,
    "keyword": null,
    "link": null,
    "title": " how to create java jframe in eclipse",
    "description": "JFrame frame = new JFrame(\"Test Frame\");  frame.setSize(500,400);  frame.setVisible(true);  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n",
    "reg_date": "2021-10-12T12:03:22.000Z"
  },
  {
    "id": 1703,
    "keyword": null,
    "link": null,
    "title": " how to create jdbc connection in java",
    "description": "package com.java2novice.jdbc;   import java.sql.Connection; import java.sql.DriverManager; import java.sql.SQLException; import java.sql.Statement;   public class JdbcConnection {       public static void main(String a[]){                   try {             Class.forName(\"oracle.jdbc.driver.OracleDriver\");             Connection con = DriverManager.                 getConnection(\"jdbc:oracle:thin:@<hostname>:<port num>:<DB name>\"                     ,\"user\",\"password\");             Statement stmt = con.createStatement();             System.out.println(\"Created DB Connection....\");         } catch (ClassNotFoundException e) {             // TODO Auto-generated catch block             e.printStackTrace();         } catch (SQLException e) {             // TODO Auto-generated catch block             e.printStackTrace();         }     } }\nConnection =    Helps our java project connect to database Statement =    Helps to write and execute SQL query ResultSet =    A DataStructure where the data from query result stored +++++++++++++++++++++++++++++++++++++++++++++++++++++++++         After succesfully created the connect next step is STATEMENT  Statement statement = connection.createStatement(); We use createStatement() method to create the statement from our connection. -The result we get from this type of statement can only move from top to bottom, not other way around  Statement statement = connection. createStatement(ResultSet TYPE_SCROLL_INSENSITIVE ,ResultSet CONCUR_READ_ONLY);  -The result we get from this type of statement can freely move between rows  Once we have statement we can run the query and get the result to ResultSet format  \t\timport java.sql.ResultSet;          We use the method executeQuery() to execute our queries  ResultSet result = statement.               executeQuery(\"Select * from employees\");\n",
    "reg_date": "2021-10-12T12:03:22.000Z"
  },
  {
    "id": 1704,
    "keyword": null,
    "link": null,
    "title": " how to create search function in android studio",
    "description": "<?xml version=\"1.0\" encoding=\"utf-8\"?> <menu xmlns:android=\"http://schemas.android.com/apk/res/android\">     <item android:id=\"@+id/search\"           android:title=\"@string/search_title\"           android:icon=\"@drawable/ic_search\"           android:showAsAction=\"collapseActionView|ifRoom\"           android:actionViewClass=\"android.widget.SearchView\" /> </menu>\n",
    "reg_date": "2021-10-12T12:03:22.000Z"
  },
  {
    "id": 1705,
    "keyword": null,
    "link": null,
    "title": " how to create textview programmatically in android",
    "description": "String[] textArray = {\"One\", \"Two\", \"Three\", \"Four\"}; LinearLayout linearLayout = new LinearLayout(this); setContentView(linearLayout); linearLayout.setOrientation(LinearLayout.VERTICAL);         for( int i = 0; i < textArray.length; i++ ) {     TextView textView = new TextView(this);     textView.setText(textArray[i]);     linearLayout.addView(textView); } \nTextView textView = new TextView(this);\n",
    "reg_date": "2021-10-12T12:03:22.000Z"
  },
  {
    "id": 1706,
    "keyword": null,
    "link": null,
    "title": " how to declare an array in java",
    "description": "int[] intArray = new int[]{ 1,2,3,4,5,6,7,8,9,10 }\nint intArray[];    //declaring array intArray = new int[20];  // allocating memory to array //OR int[] intArray = new int[20]; // combining both statements in one\nint[] array = new int[/*size*/]; // Works for double, char, etc.\nint[] array1 = new int[5]; //int array length 5 String[] array2 = new String[5] //String array length 5 double[] array3 = new double[5] // Double array length 5 \nAn array is an ordered collection of elements of the same type, identified by a pair of square brackets [].     To use an array, you need to: 1. Declare the array with a name and a type. Use a plural name for array, e.g., marks, rows, numbers. All elements of the array belong to the same type. 2. Allocate the array using new operator, or through initialization, e.g.      int[] marks;  // Declare an int array named marks               // marks contains a special value called null. int marks[];  // Same as above, but the above syntax recommended marks = new int[5];   // Allocate 5 elements via the \"new\" operator // Declare and allocate a 20-element array in one statement via \"new\" operator int[] factors = new int[20]; // Declare, allocate a 6-element array thru initialization int[] numbers = {11, 22, 33, 44, 55, 66}; // size of array deduced from the number of items\n//method 1 int[] age = new int[3];         age[0] = 1;         age[1] = 3;         age[2] = 6;          for (int i=0; i < 3; i++)             System.out.println(age[i]);  //method 2         int[] num = {3,3,5};         //int num[] = {3,3,5}; also works the same          System.out.println(num[0]);\n",
    "reg_date": "2021-10-12T12:03:23.000Z"
  },
  {
    "id": 1707,
    "keyword": null,
    "link": null,
    "title": " how to declare an int",
    "description": "int i(0);\nint number = 10;\n",
    "reg_date": "2021-10-12T12:03:23.000Z"
  },
  {
    "id": 1708,
    "keyword": null,
    "link": null,
    "title": " how to declare array java",
    "description": "int[] intArray = new int[]{ 1,2,3,4,5,6,7,8,9,10 }\nint intArray[];    //declaring array intArray = new int[20];  // allocating memory to array //OR int[] intArray = new int[20]; // combining both statements in one\nint[] array = new int[/*size*/]; // Works for double, char, etc.\nint[] array1 = new int[5]; //int array length 5 String[] array2 = new String[5] //String array length 5 double[] array3 = new double[5] // Double array length 5 \n// Accessing array elements using for loop public class AccessingArrayElements {    public static void main(String[] args)    {       int[] arrNum = {25, 23, 15, 20, 24};       for(int a = 0; a < arrNum.length; a++)       {          System.out.println(arrNum[a]);       }    } }\nint[] intArray = new int[20]; String[] cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\n",
    "reg_date": "2021-10-12T12:03:23.000Z"
  },
  {
    "id": 1709,
    "keyword": null,
    "link": null,
    "title": " how to declare list of object in java as constant",
    "description": "public static final List<String> list = Collections.unmodifiableList(     new ArrayList<String>() {{         add(\"foo\");         add(\"bar\");         // etc     }}); \n",
    "reg_date": "2021-10-12T12:03:23.000Z"
  },
  {
    "id": 1710,
    "keyword": null,
    "link": null,
    "title": " how to declare string  array in java",
    "description": "string[] abc=new string[]{\"hai\",\"hello\"}  \n",
    "reg_date": "2021-10-12T12:03:23.000Z"
  },
  {
    "id": 1711,
    "keyword": null,
    "link": null,
    "title": " how to define an arraylist in java",
    "description": "ArrayList<Integer> integerArray = new ArrayList<Integer>(); ArrayList<String> integerArray = new ArrayList<String>(); ArrayList<Double> integerArray = new ArrayList<Double>(); //... keep replacing what is inside the <> with the appropriate //data type \nArrayList<Integer> integerArray = new ArrayList<Integer>(); ArrayList<String> stringArray = new ArrayList<String>(); ArrayList<Double> doubleArray = new ArrayList<Double>(); //... keep replacing what is inside the <> with the appropriate //data type\nArrayList<Type> name = new ArrayList<Type>();\nArrayList<E> yourArray = new ArrayList<E>();  //'E' can be raplaced with any data type or object, or left as  // E if used for general funcitonality\n//Create the Arraylist variable: . Replace the T with the type of  //data to be stored in the list. ArrayList<T> exampleList = new ArrayList<>(); //You can now perform operations on this ArrayList\n",
    "reg_date": "2021-10-12T12:03:23.000Z"
  },
  {
    "id": 1712,
    "keyword": null,
    "link": null,
    "title": " how to delete a file in java",
    "description": "File file = new File(\"filepath\"); file.delete(); //Returns boolean\n// java delete file import java.io.File; public class JavaDeleteFile {    public static void main(String[] args)     {       try       {                   File file = new File(\"E:\\\\example.txt\");            if(file.delete())            {             System.out.println(file.getName() + \" file deleted.\");            }          else            {               System.out.println(\"failed\");            }       }         catch(Exception ex)         {            ex.printStackTrace();         }    } }\n",
    "reg_date": "2021-10-12T12:03:23.000Z"
  },
  {
    "id": 1713,
    "keyword": null,
    "link": null,
    "title": " how to delete an element from an array in java",
    "description": "import java.util.Scanner;  public class ElemRemoval {      public static void main(String[] args) {         Scanner in = new Scanner(System.in);         int[] intArr = {1, 2, 5, 12, 7, 3, 8};         System.out.print(\"Enter Element to be deleted : \");         int elem = in.nextInt();                  for(int i = 0; i < intArr.length; i++){             if(intArr[i] == elem){                 // shifting elements                 for(int j = i; j < intArr.length - 1; j++){                     intArr[j] = intArr[j+1];                 }                 break;             }         }                System.out.println(\"Elements -- \" );         for(int i = 0; i < intArr.length - 1; i++){             System.out.print(\" \" + intArr[i]);         }                     } }\n//Make an res array that is equal to a but don't contains number 0 int[] res = Arrays.stream(a).filter(x -> x != 0).toArray();\n//Use ArrayList XD import java.util.ArrayList; array.remove(i); //remove element by index\n",
    "reg_date": "2021-10-12T12:03:23.000Z"
  },
  {
    "id": 1714,
    "keyword": null,
    "link": null,
    "title": " how to delete character certain index in java",
    "description": "public static String charRemoveAt(String str, int p) { return str.substring(0, p) + str.substring(p + 1); }\n",
    "reg_date": "2021-10-12T12:03:23.000Z"
  },
  {
    "id": 1715,
    "keyword": null,
    "link": null,
    "title": " how to delete character in string java",
    "description": "// remove last character from string in java public class SubstringDemo {    public static void main(String[] args)    {       String strInput = \"Flower Brackets!\";       String strOutput = strInput.substring(0, strInput.length() - 1);       System.out.println(strOutput);    } }\n// how to remove particular character from string public class RemoveParticularCharacter {    public static void main(String[] args)    {       String strInput = \"Hello world java\";       System.out.println(removeCharacter(strInput, 6));    }    public static String removeCharacter(String strRemove, int r)    {       return strRemove.substring(0, r) + strRemove.substring(r + 1);    } }\n# subString(int start, int end);  String a = \"Hello!\"; b = a.subString(0,a.length()-1) #Remove the last String # b should be \"Hello\" then\nif(String.charAt(1) == String.charAt(2){    //I want to remove the individual character at index 2.  } \n",
    "reg_date": "2021-10-12T12:03:23.000Z"
  },
  {
    "id": 1716,
    "keyword": null,
    "link": null,
    "title": " how to deserialize an array in java",
    "description": "//Serialize and deserialize an ArrayList.. public class Serialize implements Serializable{   \t//Make sure you implement Serializable on all classes interacting with    \t//serialize (class T in this case)   \t//Serialize an array to a file   \tFileOutputStream fos= new FileOutputStream(\"filePath.txt\");     ObjectOutputStream oos= new ObjectOutputStream(fos);     oos.writeObject(arrayListToBeWritten);     oos.close();     fos.close();\t//put try catch around both      \t//Deserialize an array from a file \tArrayList<T> list;     FileInputStream fis = new FileInputStream(\"filePath.txt\");     ObjectInputStream ois = new ObjectInputStream(fis);     list = (ArrayList) ois.readObject();\t//Casting     ois.close();     fis.close();      \tfor (T temp: list) {\t\t//printing the array             System.out.println(temp);         }\n",
    "reg_date": "2021-10-12T12:03:24.000Z"
  },
  {
    "id": 1717,
    "keyword": null,
    "link": null,
    "title": " how to deserialize an arraylist in java",
    "description": "//Serialize and deserialize an ArrayList.. public class Serialize implements Serializable{   \t//Make sure you implement Serializable on all classes interacting with    \t//serialize (class T in this case)   \t//Serialize an array to a file   \tFileOutputStream fos= new FileOutputStream(\"filePath.txt\");     ObjectOutputStream oos= new ObjectOutputStream(fos);     oos.writeObject(arrayListToBeWritten);     oos.close();     fos.close();\t//put try catch around both      \t//Deserialize an array from a file \tArrayList<T> list;     FileInputStream fis = new FileInputStream(\"filePath.txt\");     ObjectInputStream ois = new ObjectInputStream(fis);     list = (ArrayList) ois.readObject();\t//Casting     ois.close();     fis.close();      \tfor (T temp: list) {\t\t//printing the array             System.out.println(temp);         }\n",
    "reg_date": "2021-10-12T12:03:24.000Z"
  },
  {
    "id": 1718,
    "keyword": null,
    "link": null,
    "title": " how to destroy activity in android",
    "description": "Intent intent = new Intent(this, NextActivity.class); startActivity(intent); finish(); \n",
    "reg_date": "2021-10-12T12:03:24.000Z"
  },
  {
    "id": 1719,
    "keyword": null,
    "link": null,
    "title": " how to detect device javascirpt",
    "description": "if( /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ) {  // some code.. }\n",
    "reg_date": "2021-10-12T12:03:24.000Z"
  },
  {
    "id": 1720,
    "keyword": null,
    "link": null,
    "title": " how to detect operating system in java",
    "description": "String os = System.getProperty(\"os.name\").toLowerCase(); if (os.contains(\"win\")){     //Operating system is based on Windows } else if (os.contains(\"osx\")){     //Operating system is Apple OSX based }       else if (os.contains(\"nix\") || os.contains(\"aix\") || os.contains(\"nux\")){     //Operating system is based on Linux/Unix/*AIX }\n",
    "reg_date": "2021-10-12T12:03:24.000Z"
  },
  {
    "id": 1721,
    "keyword": null,
    "link": null,
    "title": " how to disable screen rotation android studio",
    "description": "android:screenOrientation=\"portrait\" \n<activity android:name=\".SomeActivity\"     android:label=\"@string/app_name\"     android:screenOrientation=\"portrait\" />\n//put this < this.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);  // > In your MainActivity.java\n<!-- inside of your AndroidManifest.xml --> <activity android:name=\".MainActivity\" \t\t  android:screenOrientation=\"portrait\"/>\n<activity         ...         ...         android:screenOrientation=\"nosensor\">\n",
    "reg_date": "2021-10-12T12:03:24.000Z"
  },
  {
    "id": 1722,
    "keyword": null,
    "link": null,
    "title": " how to do a linear searc in java",
    "description": "public static int linear(int[] arr, int keyValue) {   int pos = -1;       for (int i = 0; i < arr.length; i++)     {         if (arr[i] == keyValue)         {             pos = i;             break;         } \t} \treturn pos; }\n",
    "reg_date": "2021-10-12T12:03:24.000Z"
  },
  {
    "id": 1723,
    "keyword": null,
    "link": null,
    "title": " how to do infinte loop in java",
    "description": "for(;;){   //do something }\n",
    "reg_date": "2021-10-12T12:03:24.000Z"
  },
  {
    "id": 1724,
    "keyword": null,
    "link": null,
    "title": " how to do quadratic formula in java",
    "description": "public class Main {    public static void main(String[] args) {      // value a, b, and c     double a = 2.3, b = 4, c = 5.6;     double root1, root2;      // calculate the determinant (b2 - 4ac)     double determinant = b * b - 4 * a * c;      // check if determinant is greater than 0     if (determinant > 0) {        // two real and distinct roots       root1 = (-b + Math.sqrt(determinant)) / (2 * a);       root2 = (-b - Math.sqrt(determinant)) / (2 * a);        System.out.format(\"root1 = %.2f and root2 = %.2f\", root1, root2);     }      // check if determinant is equal to 0     else if (determinant == 0) {        // two real and equal roots       // determinant is equal to 0       // so -b + 0 == -b       root1 = root2 = -b / (2 * a);       System.out.format(\"root1 = root2 = %.2f;\", root1);     }      // if determinant is less than zero     else {        // roots are complex number and distinct       double real = -b / (2 * a);       double imaginary = Math.sqrt(-determinant) / (2 * a);       System.out.format(\"root1 = %.2f+%.2fi\", real, imaginary);       System.out.format(\"\\nroot2 = %.2f-%.2fi\", real, imaginary);     }   } }\n",
    "reg_date": "2021-10-12T12:03:24.000Z"
  },
  {
    "id": 1725,
    "keyword": null,
    "link": null,
    "title": " how to do sex java",
    "description": "//why are you searching this?\n",
    "reg_date": "2021-10-12T12:03:24.000Z"
  },
  {
    "id": 1726,
    "keyword": null,
    "link": null,
    "title": " how to do stuff with a scoreboard minecraft",
    "description": "/scoreboard players test * <objective> <min> [max]\n",
    "reg_date": "2021-10-12T12:03:25.000Z"
  },
  {
    "id": 1727,
    "keyword": null,
    "link": null,
    "title": " how to do substring java",
    "description": "class Main {   public static void main (String[] args) {          String str = \"Hello World!\";          String firstWord = str.substring(0, 5);     //two parameters are start and end index: (inclusive, non-inclusive)          String secondWord = str.substring(6, 11);          //firstWord has string \"Hello\"     //secondWord has string \"World\"   } }\n",
    "reg_date": "2021-10-12T12:03:25.000Z"
  },
  {
    "id": 1728,
    "keyword": null,
    "link": null,
    "title": " how to do the maximum of three numbers in java",
    "description": "public class Example {    public static void main(String args[]) {       int num1 = 15;       int num2 = -5;       int num3 = 7;       if (num1 >= num2 && num1 >= num3)          System.out.println( num1 + \" is the maximum number.\");       else if (num2 >= num1 && num2 >= num3)          System.out.println( num2 + \" is the maximum number.\");       else          System.out.println( num3 + \" is the maximum number.\");    } }\n",
    "reg_date": "2021-10-12T12:03:25.000Z"
  },
  {
    "id": 1729,
    "keyword": null,
    "link": null,
    "title": " how to draw",
    "description": "User-agent: * Disallow:  \n",
    "reg_date": "2021-10-12T12:03:25.000Z"
  },
  {
    "id": 1730,
    "keyword": null,
    "link": null,
    "title": " how to draw a circle in java swing",
    "description": "g.drawOval(50,50,100,100);\n",
    "reg_date": "2021-10-12T12:03:25.000Z"
  },
  {
    "id": 1731,
    "keyword": null,
    "link": null,
    "title": " how to draw a graph in java",
    "description": "import java.awt.BasicStroke; import java.awt.Color; import java.awt.Dimension; import java.awt.Graphics; import java.awt.Graphics2D; import java.awt.Point; import java.awt.RenderingHints; import java.awt.Stroke; import java.util.ArrayList; import java.util.List; import java.util.Random; import javax.swing.*;  @SuppressWarnings(\"serial\") public class DrawGraph extends JPanel {    private static final int MAX_SCORE = 20;    private static final int PREF_W = 800;    private static final int PREF_H = 650;    private static final int BORDER_GAP = 30;    private static final Color GRAPH_COLOR = Color.green;    private static final Color GRAPH_POINT_COLOR = new Color(150, 50, 50, 180);    private static final Stroke GRAPH_STROKE = new BasicStroke(3f);    private static final int GRAPH_POINT_WIDTH = 12;    private static final int Y_HATCH_CNT = 10;    private List<Integer> scores;     public DrawGraph(List<Integer> scores) {       this.scores = scores;    }     @Override    protected void paintComponent(Graphics g) {       super.paintComponent(g);       Graphics2D g2 = (Graphics2D)g;       g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);        double xScale = ((double) getWidth() - 2 * BORDER_GAP) / (scores.size() - 1);       double yScale = ((double) getHeight() - 2 * BORDER_GAP) / (MAX_SCORE - 1);        List<Point> graphPoints = new ArrayList<Point>();       for (int i = 0; i < scores.size(); i++) {          int x1 = (int) (i * xScale + BORDER_GAP);          int y1 = (int) ((MAX_SCORE - scores.get(i)) * yScale + BORDER_GAP);          graphPoints.add(new Point(x1, y1));       }        // create x and y axes        g2.drawLine(BORDER_GAP, getHeight() - BORDER_GAP, BORDER_GAP, BORDER_GAP);       g2.drawLine(BORDER_GAP, getHeight() - BORDER_GAP, getWidth() - BORDER_GAP, getHeight() - BORDER_GAP);        // create hatch marks for y axis.        for (int i = 0; i < Y_HATCH_CNT; i++) {          int x0 = BORDER_GAP;          int x1 = GRAPH_POINT_WIDTH + BORDER_GAP;          int y0 = getHeight() - (((i + 1) * (getHeight() - BORDER_GAP * 2)) / Y_HATCH_CNT + BORDER_GAP);          int y1 = y0;          g2.drawLine(x0, y0, x1, y1);       }        // and for x axis       for (int i = 0; i < scores.size() - 1; i++) {          int x0 = (i + 1) * (getWidth() - BORDER_GAP * 2) / (scores.size() - 1) + BORDER_GAP;          int x1 = x0;          int y0 = getHeight() - BORDER_GAP;          int y1 = y0 - GRAPH_POINT_WIDTH;          g2.drawLine(x0, y0, x1, y1);       }        Stroke oldStroke = g2.getStroke();       g2.setColor(GRAPH_COLOR);       g2.setStroke(GRAPH_STROKE);       for (int i = 0; i < graphPoints.size() - 1; i++) {          int x1 = graphPoints.get(i).x;          int y1 = graphPoints.get(i).y;          int x2 = graphPoints.get(i + 1).x;          int y2 = graphPoints.get(i + 1).y;          g2.drawLine(x1, y1, x2, y2);                }        g2.setStroke(oldStroke);             g2.setColor(GRAPH_POINT_COLOR);       for (int i = 0; i < graphPoints.size(); i++) {          int x = graphPoints.get(i).x - GRAPH_POINT_WIDTH / 2;          int y = graphPoints.get(i).y - GRAPH_POINT_WIDTH / 2;;          int ovalW = GRAPH_POINT_WIDTH;          int ovalH = GRAPH_POINT_WIDTH;          g2.fillOval(x, y, ovalW, ovalH);       }    }     @Override    public Dimension getPreferredSize() {       return new Dimension(PREF_W, PREF_H);    }     private static void createAndShowGui() {       List<Integer> scores = new ArrayList<Integer>();       Random random = new Random();       int maxDataPoints = 16;       int maxScore = 20;       for (int i = 0; i < maxDataPoints ; i++) {          scores.add(random.nextInt(maxScore));       }       DrawGraph mainPanel = new DrawGraph(scores);        JFrame frame = new JFrame(\"DrawGraph\");       frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);       frame.getContentPane().add(mainPanel);       frame.pack();       frame.setLocationByPlatform(true);       frame.setVisible(true);    }     public static void main(String[] args) {       SwingUtilities.invokeLater(new Runnable() {          public void run() {             createAndShowGui();          }       });    } }\n",
    "reg_date": "2021-10-12T12:03:25.000Z"
  },
  {
    "id": 1732,
    "keyword": null,
    "link": null,
    "title": " how to draw a line in java",
    "description": "import javax.swing.*; import java.awt.*;  class Scratch extends JComponent{     public static void main(String[] args) {         JFrame window = new JFrame();   // creates a JFrame         window.setTitle(\"Example\");     //sets the title         window.setSize(600, 600);   //sets the size         window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);  // sets the default close operation         window.setVisible(true);    //sets the JFrame visible         Scratch drawing = new Scratch();    //indirectly calls the paint method         window.add(drawing);    //adds the paint method onto the JFrame     }      public void paint(Graphics g){         Graphics2D g2 = (Graphics2D) g; //casting         g2.drawLine(100, 200, 300, 400);    //Draws a line from (100, -200) -> (300, -400) on the x and y plane         g2.draw(new Rectangle(10, 10, 10, 10));     //draw a rectangle         g2.setColor(Color.GREEN);   //Changes colour to Green         g2.fill(new Rectangle(100, 100, 100, 100)); //fills a rectangle     } }\n",
    "reg_date": "2021-10-12T12:03:25.000Z"
  },
  {
    "id": 1733,
    "keyword": null,
    "link": null,
    "title": " how to draw a triangle in java",
    "description": "public static void main(String[] args) { /*          *          * *          * * *          * * * *          * * * * *          * * * * * *          * * * * * * *   */       int z = 1;      while (z<=7){ // z value repeat           int i = 1;          while (i <= z){              System.out.print(\"* \");              i++;          }              System.out.println();              z++;      }         System.out.println(\"==============\");          int z2 = 7;         while (z2 >= 1){ // z value repeat              int i2 = 1;             while (i2 <= z2){                 System.out.print(\"* \");                 i2++;             }              System.out.println();             z2--;         } \ngraphics.drawPolygon(new int[] {10, 20, 30}, new int[] {100, 20, 100}, 3); // Graphics.drawPolygon(x-coordinates, y-coordinates, # of points);\n",
    "reg_date": "2021-10-12T12:03:25.000Z"
  },
  {
    "id": 1734,
    "keyword": null,
    "link": null,
    "title": " how to draw in java",
    "description": "package com.javacodegeeks.snippets.desktop;   import java.awt.Component; import java.awt.Frame; import java.awt.Graphics; import java.awt.Graphics2D; import java.awt.Polygon;   public class DrawShapesExample {     public static void main(String[] args) {           // Create a frame          Frame frame = new Frame();          // Add a component with a custom paint method          frame.add(new CustomPaintComponent());          // Display the frame          int frameWidth = 300;          int frameHeight = 300;          frame.setSize(frameWidth, frameHeight);          frame.setVisible(true);     }    /**   * To draw on the screen, it is first necessary to subclass a Component    * and override its paint() method. The paint() method is automatically called    * by the windowing system whenever component's area needs to be repainted.   */   static class CustomPaintComponent extends Component {             public void paint(Graphics g) {              // Retrieve the graphics context; this object is used to paint shapes              Graphics2D g2d = (Graphics2D)g;              // Draw an oval that fills the window              int x = 0;              int y = 0;              int w = getSize().width-1;              int h = getSize().height-1;              /**               * The coordinate system of a graphics context is such that the origin is at the                * northwest corner and x-axis increases toward the right while the y-axis increases                * toward the bottom.               */              g2d.drawLine(x, y, w, h);              // to draw a filled oval use : g2d.fillOval(x, y, w, h) instead              g2d.drawOval(x, y, w, h);              // to draw a filled rectangle use : g2d.fillRect(x, y, w, h) instead              g2d.drawRect(x, y, w, h);              // A start angle of 0 represents a 3 o'clock position, 90 represents a 12 o'clock position,              // and -90 (or 270) represents a 6 o'clock position              int startAngle = 45;              int arcAngle = -60;              // to draw a filled arc use : g2d.fillArc(x, y, w, h, startAngle, arcAngle) instead              g2d.drawArc(x, y, w/2, h/2, startAngle, arcAngle);              // to draw a filled round rectangle use : g2d.fillRoundRect(x, y, w, h, arcWidth, arcHeight) instead              g2d.drawRoundRect(x, y, w, h, w/2, h/2);              Polygon polygon = new Polygon();              polygon.addPoint(w/4, h/2);              polygon.addPoint(0, h/2);              polygon.addPoint(w/4, 3*h/4);              polygon.addPoint(w/2, 3*h/4);              // Add more points...              // to draw a filled round rectangle use : g2d.fillPolygon(polygon) instead              g2d.drawPolygon(polygon);            }     }   }\n",
    "reg_date": "2021-10-12T12:03:25.000Z"
  },
  {
    "id": 1735,
    "keyword": null,
    "link": null,
    "title": " how to draw triangle in java",
    "description": "public static void main(String[] args) { /*          *          * *          * * *          * * * *          * * * * *          * * * * * *          * * * * * * *   */       int z = 1;      while (z<=7){ // z value repeat           int i = 1;          while (i <= z){              System.out.print(\"* \");              i++;          }              System.out.println();              z++;      }         System.out.println(\"==============\");          int z2 = 7;         while (z2 >= 1){ // z value repeat              int i2 = 1;             while (i2 <= z2){                 System.out.print(\"* \");                 i2++;             }              System.out.println();             z2--;         } \ngraphics.drawPolygon(new int[] {10, 20, 30}, new int[] {100, 20, 100}, 3); // Graphics.drawPolygon(x-coordinates, y-coordinates, # of points);\n",
    "reg_date": "2021-10-12T12:03:25.000Z"
  },
  {
    "id": 1736,
    "keyword": null,
    "link": null,
    "title": " how to echo java home in windows cmd",
    "description": "echo %JAVA_HOME% \n",
    "reg_date": "2021-10-12T12:03:25.000Z"
  },
  {
    "id": 1737,
    "keyword": null,
    "link": null,
    "title": " how to end a program in an if statement java",
    "description": " if(letters >=5 && digits >=5)             {                  System.out.println(\"Great job! String is acceptable\");                 System.exit(0);             }                          //after use, letter and digit variables reset to 0              letters = 0;              digits = 0;          } //end a program within an if statement, which is nested with a while loop  \t\t  //with the use of System.exit(0) \t\t  //0 indicates successful termination  \t\t  //any non-zero value indicates an unsuccessful termination \ncontinue; // skips the current itteration break; // breaks the itteration\n",
    "reg_date": "2021-10-12T12:03:26.000Z"
  },
  {
    "id": 1738,
    "keyword": null,
    "link": null,
    "title": " how to end program in java",
    "description": "System.exit(0);\nimport static java.lang.System.exit;  public class Testing {  public static void main(String... str) {       \texit(0);         \t//exit(0): It indicates successful end of java program.    \t/*exit(-1) or exit(1) or exit(any non zero value):    \t  It indicates unsuccessful end of java program.*/  } }\nimport javax\n",
    "reg_date": "2021-10-12T12:03:26.000Z"
  },
  {
    "id": 1739,
    "keyword": null,
    "link": null,
    "title": " how to exit a java program",
    "description": "System.exit(0);\n",
    "reg_date": "2021-10-12T12:03:26.000Z"
  },
  {
    "id": 1740,
    "keyword": null,
    "link": null,
    "title": " how to fill a 2d array in java",
    "description": "int rows = 5, column = 7; int[][] arr = new int[rows][column];         //2D arrays are row major, so always row first     for (int row = 0; row < arr.length; row++) { \tfor (int col = 0; col < arr[row].length; col++)     {     \tarr[row][col] = 5; //Whatever value you want to set them to     } }\n",
    "reg_date": "2021-10-12T12:03:26.000Z"
  },
  {
    "id": 1741,
    "keyword": null,
    "link": null,
    "title": " how to fill a list with a single value java",
    "description": "//x is the list and value is what it is to be set to for (int i = 0; i < x.length; i++) {   x[i] = value; }\n",
    "reg_date": "2021-10-12T12:03:26.000Z"
  },
  {
    "id": 1742,
    "keyword": null,
    "link": null,
    "title": " how to filter data in java",
    "description": "List<Person> beerDrinkers = persons.stream()     .filter(p -> p.getAge() > 16).collect(Collectors.toList()); \n",
    "reg_date": "2021-10-12T12:03:26.000Z"
  },
  {
    "id": 1743,
    "keyword": null,
    "link": null,
    "title": " how to find a specific word in a text file in java",
    "description": "String wordToFind=\"Hello\"; List<String> lines=Files.readAllLines(Path.of(\"yourFile.txt\")); for(int i=0;i<lines.size();i++){ \tint col;     while((col=lines.indexOf(wordToFind))!=-1){     \tSystem.out.println(\"found \"+wordToFind+\" in line \"+i+\" at column \"+col);     } }\n",
    "reg_date": "2021-10-12T12:03:26.000Z"
  },
  {
    "id": 1744,
    "keyword": null,
    "link": null,
    "title": " how to find java version linux",
    "description": "java -version\n",
    "reg_date": "2021-10-12T12:03:26.000Z"
  },
  {
    "id": 1745,
    "keyword": null,
    "link": null,
    "title": " how to find length of array in java",
    "description": "/** * An Example to get the Array Length is Java */ public class ArrayLengthJava { public static void main(String[] args) { String[] myArray = { \"I\", \"Love\", \"Music\" }; int arrayLength = myArray.length; //array length attribute System.out.println(\"The length of the array is: \" + arrayLength); } } \nInt[] array = {1,2,3}; int lengthOfArray = array.length; /** Finding the length of the array and storing it */ System.out.println(String.valueOf(lengthOfArray)); /** Should print out 3, String.value Of() is optional as printLn does this automatically. */\nlet coolCars = ['ford', 'chevy']; //to find length, use the array's built in method let length = coolCars.length; //length == 2.\narr.length;\nclass Main {   public static void main(String[] args) {     // Creating an array called x.     String[] x = new String[]{\"This\", \"Should\", \"return\", \"4\"};     // \"x.length\" finds the length of the array \"x\".     System.out.println(x.length);     // returns 4   } }\nint[] num = new int[5];\n",
    "reg_date": "2021-10-12T12:03:26.000Z"
  },
  {
    "id": 1746,
    "keyword": null,
    "link": null,
    "title": " how to find length of set in java",
    "description": "set.size()\n",
    "reg_date": "2021-10-12T12:03:26.000Z"
  },
  {
    "id": 1747,
    "keyword": null,
    "link": null,
    "title": " how to find location of java jdk",
    "description": "set java_home \ngcm -All java \n",
    "reg_date": "2021-10-12T12:03:27.000Z"
  },
  {
    "id": 1748,
    "keyword": null,
    "link": null,
    "title": " how to find power of a number in java",
    "description": "int powerOfNumber = (int) Math.pow(number, power);\nint n=Math.pow(N, P); \n@Test \tpublic void powerOfTheNumberProgram13() { \t\tScanner scanner = new Scanner(System.in); \t\tSystem.out.println(\"Enter any NUMBER: \"); \t\tint number = scanner.nextInt(); \t\tSystem.out.println(\"Enter the POWER: \"); \t\tint power = scanner.nextInt(); \t\tscanner.close(); \t\t// Logic for finding the POWER of number \t\tint powerOfNumber = (int) Math.pow(number, power); \t\tSystem.out.println(\"Power of a \" + number + \"^\" + power + \": \" + powerOfNumber); \t}\n",
    "reg_date": "2021-10-12T12:03:27.000Z"
  },
  {
    "id": 1749,
    "keyword": null,
    "link": null,
    "title": " how to find powers in java",
    "description": "int n=Math.pow(N, P); \n",
    "reg_date": "2021-10-12T12:03:27.000Z"
  },
  {
    "id": 1750,
    "keyword": null,
    "link": null,
    "title": " how to find selenium webelement java",
    "description": "//required imports  WebDriver driver = new ChromeDriver(); WebElement objWE; //There are many way most common are id and xpath objWE = driver.findElement(By.id(\"String of id attribute\")); //To find the xpath easily hit F12 and right click the element you want //and copy xpath then paste it objWE = driver.findElement(By.xpath(\"//*[@id=\"search\"]/div[2]/div[6]/div[1]/div/div\"));\n",
    "reg_date": "2021-10-12T12:03:27.000Z"
  },
  {
    "id": 1751,
    "keyword": null,
    "link": null,
    "title": " how to find the angle of 2 coordinates java",
    "description": "public double getAngleFromPoint(Point firstPoint, Point secondPoint) {      if((secondPoint.x > firstPoint.x)) {//above 0 to 180 degrees          return (Math.atan2((secondPoint.x - firstPoint.x), (firstPoint.y - secondPoint.y)) * 180 / Math.PI);      }     else if((secondPoint.x < firstPoint.x)) {//above 180 degrees to 360/0          return 360 - (Math.atan2((firstPoint.x - secondPoint.x), (firstPoint.y - secondPoint.y)) * 180 / Math.PI);      }//End if((secondPoint.x > firstPoint.x) && (secondPoint.y <= firstPoint.y))      return Math.atan2(0 ,0);  }//End public float getAngleFromPoint(Point firstPoint, Point secondPoint) \n",
    "reg_date": "2021-10-12T12:03:27.000Z"
  },
  {
    "id": 1752,
    "keyword": null,
    "link": null,
    "title": " how to find the ascii value of special character in java",
    "description": "/*ASCII acronym for American Standard Code for Information Interchange. It is a 7-bit character set contains 128 (0 to 127) characters. It represents the numerical value of a character. For example, the ASCII value of A is 65.*/ char a = 65, b = 66, c = 67; System.out.println(a); System.out.println(b); System.out.println(c);  /* this is how you type ASCII values in java */\npublic class AsciiValue {      public static void main(String[] args) {          char ch = 'a';         int ascii = ch;         // You can also cast char to int         int castAscii = (int) ch;          System.out.println(\"The ASCII value of \" + ch + \" is: \" + ascii);         System.out.println(\"The ASCII value of \" + ch + \" is: \" + castAscii);     } }\npublic class AsciiValue {      public static void main(String[] args) {          char ch = 'a';         int ascii = ch;         // You can also cast char to int         int castAscii = (int) ch;          System.out.println(\"The ASCII value of \" + ch + \" is: \" + ascii);         System.out.println(\"The ASCII value of \" + ch + \" is: \" + castAscii);     } } \n",
    "reg_date": "2021-10-12T12:03:27.000Z"
  },
  {
    "id": 1753,
    "keyword": null,
    "link": null,
    "title": " how to find the index of a letter in a string java",
    "description": "String myStr = \"Hello planet earth, you are a great planet.\"; System.out.println(myStr.indexOf(\"planet\"));\n",
    "reg_date": "2021-10-12T12:03:27.000Z"
  },
  {
    "id": 1754,
    "keyword": null,
    "link": null,
    "title": " how to find the largest integer in java",
    "description": "int a = Integer.MAX_VALUE;\n",
    "reg_date": "2021-10-12T12:03:27.000Z"
  },
  {
    "id": 1755,
    "keyword": null,
    "link": null,
    "title": " how to find the largest number in java",
    "description": "int a = Integer.MAX_VALUE;\nint number1 = 2; int number2 = 1;    System.out.println(\"The largest number is \" + Math.max(number1, number2)); System.out.println(\"The smallest number is \" + Math.min(number1, number2));\nint max = (The provided List).stream().max((i1,i2)->(i1>i2)?1:(i1<i2)-1:0).get();\n",
    "reg_date": "2021-10-12T12:03:27.000Z"
  },
  {
    "id": 1756,
    "keyword": null,
    "link": null,
    "title": " how to find two strings are anagrams in java",
    "description": "import java.util.Arrays;       public class AnagramString {       static void isAnagram(String str1, String str2) {           String s1 = str1.replaceAll(\"\\\\s\", \"\");           String s2 = str2.replaceAll(\"\\\\s\", \"\");           boolean status = true;           if (s1.length() != s2.length()) {               status = false;           } else {               char[] ArrayS1 = s1.toLowerCase().toCharArray();               char[] ArrayS2 = s2.toLowerCase().toCharArray();               Arrays.sort(ArrayS1);               Arrays.sort(ArrayS2);               status = Arrays.equals(ArrayS1, ArrayS2);           }           if (status) {               System.out.println(s1 + \" and \" + s2 + \" are anagrams\");           } else {               System.out.println(s1 + \" and \" + s2 + \" are not anagrams\");           }       }           public static void main(String[] args) {           isAnagram(\"Keep\", \"Peek\");           isAnagram(\"Mother In Law\", \"Hitler Woman\");       }   }   /*OUTPUT *Keep and Peek are anagrams *MotherInLaw and HitlerWoman are anagrams */\n",
    "reg_date": "2021-10-12T12:03:27.000Z"
  },
  {
    "id": 1757,
    "keyword": null,
    "link": null,
    "title": " how to find unique characters in a string in java",
    "description": "//  I would use linkedHashMap since it doesn't accept //  duplicate values  String str = \"abbcdddefffggghjilll\";         String [] arr = str.split(\"\");         Map<String, Integer> mapStr = new LinkedHashMap<>();          for (int i=0 ; i < arr.length ; i++){             if (!mapStr.containsKey(arr[i])){                 mapStr.put(arr[i],1);             } else{                 mapStr.put(arr[i],mapStr.get(arr[i])+1);             }         }          for (Map.Entry<String,Integer> map : mapStr.entrySet()) {             if(map.getValue()==1) {                 System.out.print(map.getKey());             }         }\npublic class String_FindtheUnique_4 { /* Write a return  method that can find the unique characters from the String  Ex:  unique(\"AAABBBCCCDEF\")  ==>  \"DEF\";  */     public static void main(String[] args) {     String result1 = Unique(\"BBCCDDSSEEDDYUT\");    System.out.println(result1); // YUT  //1.yol      String s = \"BABABACDR\";     String r = \"\";     for(String each : s.split(\"\"))  r += ( (Collections.frequency(Arrays.asList(s.split(\"\")), each)) ==1 ) ? each : \"\";      System.out.println(r); // CDR     }  //2.yol method yolu   public static String Unique(String str) {         String result1 =\"\";         for(String each : str.split(\"\")) result1 += ( (Collections.frequency(Arrays.asList(str.split(\"\")), each)) ==1 ) ? each : \"\";         return result1;     }  }   \n//  I would use linkedHashMap since it doesn't accept //  duplicate values  String str = \"abbcdddefffggghjilll\";         String [] arr = str.split(\"\");         Map<String, Integer> mapStr = new LinkedHashMap<>();          for (int i=0 ; i < arr.length ; i++){             if (!mapStr.containsKey(arr[i])){                 mapStr.put(arr[i],1);             } else{                 mapStr.put(arr[i],mapStr.get(arr[i])+1);             }         }          for (Map.Entry<String,Integer> map : mapStr.entrySet()) {             if(map.getValue()==1) {                 System.out.print(map.getKey());             }         } \n",
    "reg_date": "2021-10-12T12:03:27.000Z"
  },
  {
    "id": 1758,
    "keyword": null,
    "link": null,
    "title": " how to flip a list in java",
    "description": "import java.util.ArrayList; import java.util.Arrays; import java.util.Collections; import java.util.List;   // Program to in-place reverse a list in Java class Main {     public static void main(String[] args)     {         List<String> colors = new ArrayList<>(Arrays.asList(\"RED\", \"BLUE\", \"BLACK\"));           Collections.reverse(colors);         System.out.println(colors);     } }\n",
    "reg_date": "2021-10-12T12:03:28.000Z"
  },
  {
    "id": 1759,
    "keyword": null,
    "link": null,
    "title": " how to format a datetime object to show date and time and milliseconds in java",
    "description": "public String getCurrentTimeStamp() {     return new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss.SSS\").format(new Date()); }\n",
    "reg_date": "2021-10-12T12:03:28.000Z"
  },
  {
    "id": 1760,
    "keyword": null,
    "link": null,
    "title": " how to format a double in java to 2 decimal places",
    "description": "  package org.arpit.java2blog;   public class StringFromatformatDouble {       public static void main(String[] args) {         double d = 2.456534;         System.out.println(\"Double upto 2 decimal places: \"+String.format(\"%.2f\",d));     } }   \nDecimalFormat df = new DecimalFormat(); df.setMaximumFractionDigits(2); System.out.println(df.format(decimalNumber));\ndouble input = 3.14159265359; System.out.format(\"double : %.2f\", input); // 3.14 System.out.println(\"double : \" + String.format(\"%.2f\", input)); // 3.14\nDecimalFormat df = new DecimalFormat(\"#.00\"); \nprintf(%.2f);\n",
    "reg_date": "2021-10-12T12:03:28.000Z"
  },
  {
    "id": 1761,
    "keyword": null,
    "link": null,
    "title": " how to format ddmmmyyyy to ddmmyy in java",
    "description": "    SimpleDateFormat format1 = new SimpleDateFormat(\"MM/dd/yyyy\");     SimpleDateFormat format2 = new SimpleDateFormat(\"dd-MMM-yy\");     Date date = format1.parse(\"05/01/1999\");     System.out.println(format2.format(date));\n",
    "reg_date": "2021-10-12T12:03:28.000Z"
  },
  {
    "id": 1762,
    "keyword": null,
    "link": null,
    "title": " how to format font in java",
    "description": "import java.awt.*;     import java.applet.*;          public class font extends Applet      {        Font f1,f2,f3;             public void  init()         {            f1 = new Font(\"Arial\",Font.BOLD,18);            f2 = new Font(\"Forte\",Font.PLAIN,24);            f3 = new Font(\"Elephant\",Font.ITALIC,28);         }                   public void  paint(Graphics g)        {           g.drawString(\"Senthil\",50,50);                g.setFont(f1);            g.drawString(\"Velan\",50,80);                g.setFont(f2);            g.drawString(\"Vicky\",50,110);                g.setFont(f3);            g.drawString(\"Vignesh\",50,140);        }      }          /* <applet code = \"fon.class\" height = 500 width =500>      </applet> */\n",
    "reg_date": "2021-10-12T12:03:28.000Z"
  },
  {
    "id": 1763,
    "keyword": null,
    "link": null,
    "title": " how to generate a random number in java",
    "description": "import java.util.Random;  Random rand = new Random();  // Obtain a number between [0 - 49]. int n = rand.nextInt(50);  // Add 1 to the result to get a number from the required range // (i.e., [1 - 50]). n += 1;\nimport java.util.Random;  Random rand = new Random(); int maxNumber = 10;  int randomNumber = rand.nextInt(maxNumber) + 1;  System.out.println(randomNumber);\nimport java.util.Random;  class scratch{     public static void main(String[] args) {         Random rand = new Random();         System.out.println( rand.nextInt(5) );         //prints a random Int between 0 - 4 (including 0 & 4);     } }\nimport java.lang.Math;  int randomNumber;  int minimum = 1; int maximum = 10 - minimum;  randomNumber = (int)((Math.random()*maximum) + minimum);  System.out.println(\"Random Number (Between 1-10): \" + randomNumber);\n// java.util.random example import java.util.Random; public class JavaRandomClass {    public static void main(String[] args)    {       Random random = new Random();       // random integers in range 0 to 999        int randInt1 = random.nextInt(1000);        int randInt2 = random.nextInt(1000);       // printing random integers       System.out.println(\"Random Integers: \" + randInt1);        System.out.println(\"Random Integers: \" + randInt2);       // here we are generating Random doubles       double randDou1 = random.nextDouble();        double randDou2 = random.nextDouble();       // printing random doubles       System.out.println(\"Random Doubles: \" + randDou1);        System.out.println(\"Random Doubles: \" + randDou2);    } }\ndouble x = (Math.random()*((max-min)+1))+min;\n",
    "reg_date": "2021-10-12T12:03:28.000Z"
  },
  {
    "id": 1764,
    "keyword": null,
    "link": null,
    "title": " how to generate color codes in java",
    "description": "#a3f688 \n#a3f677 \n",
    "reg_date": "2021-10-12T12:03:28.000Z"
  },
  {
    "id": 1765,
    "keyword": null,
    "link": null,
    "title": " how to generate random number in java",
    "description": "import java.util.Random;  Random rand = new Random();  // Obtain a number between [0 - 49]. int n = rand.nextInt(50);  // Add 1 to the result to get a number from the required range // (i.e., [1 - 50]). n += 1;\nimport java.util.Random;  Random rand = new Random(); int maxNumber = 10;  int randomNumber = rand.nextInt(maxNumber) + 1;  System.out.println(randomNumber);\nimport java.util.Random;  class scratch{     public static void main(String[] args) {         Random rand = new Random();         System.out.println( rand.nextInt(5) );         //prints a random Int between 0 - 4 (including 0 & 4);     } }\nimport java.lang.Math;  int randomNumber;  int minimum = 1; int maximum = 10 - minimum;  randomNumber = (int)((Math.random()*maximum) + minimum);  System.out.println(\"Random Number (Between 1-10): \" + randomNumber);\n// java.util.random example import java.util.Random; public class JavaRandomClass {    public static void main(String[] args)    {       Random random = new Random();       // random integers in range 0 to 999        int randInt1 = random.nextInt(1000);        int randInt2 = random.nextInt(1000);       // printing random integers       System.out.println(\"Random Integers: \" + randInt1);        System.out.println(\"Random Integers: \" + randInt2);       // here we are generating Random doubles       double randDou1 = random.nextDouble();        double randDou2 = random.nextDouble();       // printing random doubles       System.out.println(\"Random Doubles: \" + randDou1);        System.out.println(\"Random Doubles: \" + randDou2);    } }\ndouble x = (Math.random()*((max-min)+1))+min;\n",
    "reg_date": "2021-10-12T12:03:28.000Z"
  },
  {
    "id": 1766,
    "keyword": null,
    "link": null,
    "title": " how to generate random numbers in java within range",
    "description": "import java.util.Random;  Random rand = new Random(); int random_integer = rand.nextInt(upperbound-lowerbound) + lowerbound;\n\t(int)(Math.random() * ((max - min) + 1)) + min Copy\nimport java.util.Random;  Random rand = new Random(); int maxNumber = 10;  int randomNumber = rand.nextInt(maxNumber) + 1;  System.out.println(randomNumber);\npackage com.mkyong.example.test;  import java.util.Random;  public class TestRandom {      public static void main(String[] args) {          for (int i = 0; i < 10; i++) {             System.out.println(getRandomNumberInRange(5, 10));         }      }      private static int getRandomNumberInRange(int min, int max) {          if (min >= max) {             throw new IllegalArgumentException(\"max must be greater than min\");         }          Random r = new Random();         return r.nextInt((max - min) + 1) + min;     }  }\n     private static int getRandomNumberInRange(int min, int max)      {          if (min >= max) {             throw new IllegalArgumentException(\"max must be greater than min\");         }          Random r = new Random();         return r.nextInt((max - min) + 1) + min;     }       //Random().nextInt(int bound) = Random integer from 0 (inclusive) to bound (exclusive)          //1. nextInt(range) = nextInt(max - min)     new Random().nextInt(5);  // [0...4] [min = 0, max = 4]     new Random().nextInt(6);  // [0...5]     new Random().nextInt(7);  // [0...6]     new Random().nextInt(8);  // [0...7]     new Random().nextInt(9);  // [0...8]     new Random().nextInt(10); // [0...9]\t\t\t     new Random().nextInt(11); // [0...10]          //2. To include the last value (max value) = (range + 1)     new Random().nextInt(5 + 1)  // [0...5] [min = 0, max = 5]     new Random().nextInt(6 + 1)  // [0...6]     new Random().nextInt(7 + 1)  // [0...7]     new Random().nextInt(8 + 1)  // [0...8]     new Random().nextInt(9 + 1)  // [0...9]     new Random().nextInt(10 + 1) // [0...10]\t\t\t     new Random().nextInt(11 + 1) // [0...11]          //3. To define a start value (min value) in a range,     //   For example, the range should start from 10 = (range + 1) + min     new Random().nextInt(5 + 1)  + 10 // [0...5]  + 10 = [10...15]     new Random().nextInt(6 + 1)  + 10 // [0...6]  + 10 = [10...16]     new Random().nextInt(7 + 1)  + 10 // [0...7]  + 10 = [10...17]     new Random().nextInt(8 + 1)  + 10 // [0...8]  + 10 = [10...18]     new Random().nextInt(9 + 1)  + 10 // [0...9]  + 10 = [10...19]     new Random().nextInt(10 + 1) + 10 // [0...10] + 10 = [10...20]     new Random().nextInt(11 + 1) + 10 // [0...11] + 10 = [10...21]          // Range = (max - min)     // So, the final formula is ((max - min) + 1) + min          //4. Test [10...30]     // min = 10 , max = 30, range = (max - min)     new Random().nextInt((max - min) + 1) + min     new Random().nextInt((30 - 10) + 1) + 10     new Random().nextInt((20) + 1) + 10     new Random().nextInt(21) + 10    //[0...20] + 10 = [10...30]          //5. Test [15...99]     // min = 15 , max = 99, range = (max - min)     new Random().nextInt((max - min) + 1) + min     new Random().nextInt((99 - 15) + 1) + 15     new Random().nextInt((84) + 1) + 15     new Random().nextInt(85) + 15    //[0...84] + 15 = [15...99]          //Done, understand?\nimport java.util.concurrent.ThreadLocalRandom;  // nextInt is normally exclusive of the top value, // so add 1 to make it inclusive int randomNum = ThreadLocalRandom.current().nextInt(min, max + 1); \n",
    "reg_date": "2021-10-12T12:03:28.000Z"
  },
  {
    "id": 1767,
    "keyword": null,
    "link": null,
    "title": " how to get a character in java in ascii",
    "description": "// Very simple. Just cast your char as an int.  char character = 'a';     int ascii = (int) character;  //In your case, you need to get the specific Character from the String first and then cast it.  char character = name.charAt(0); // This gives the character 'a' int ascii = (int) character; // ascii is now 97.  //Though cast is not required explicitly, but its improves readability.  int ascii = character; // Even this will do the trick.\nimport java.text.ParseException; import java.util.Arrays;  /**  * How to convert a String to ASCII bytes in Java  *   * @author WINDOWS 8  */  public class StringToASCII {      public static void main(String args[]) throws ParseException {                  // converting character to ASCII value in Java         char A = 'A';         int ascii = A;         System.out.println(\"ASCII value of 'A' is  : \" + ascii);                  // you can explicitly cast also         char a = 'a';         int value = (int) a;         System.out.println(\"ASCII value of 'a' is  : \" + value);                                             // converting String to ASCII value in Java         try {             String text = \"ABCDEFGHIJKLMNOP\";              // translating text String to 7 bit ASCII encoding             byte[] bytes = text.getBytes(\"US-ASCII\");                          System.out.println(\"ASCII value of \" + text + \" is following\");             System.out.println(Arrays.toString(bytes));                      } catch (java.io.UnsupportedEncodingException e) {             e.printStackTrace();         }     }  }  Output ASCII value of 'A' is  : 65 ASCII value of 'a' is  : 97 ASCII value of ABCDEFGHIJKLMNOP is following [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80]   Read more: https://javarevisited.blogspot.com/2015/07/how-to-convert-string-or-char-to-ascii-example.html#ixzz6k2vn7o4y\nchar character = name.charAt(0); // This gives the character 'a' int ascii = (int) character; // ascii is now 97.\nchar a = 97+1; char b = 'a'+2; r = (char)(1+5)\n",
    "reg_date": "2021-10-12T12:03:28.000Z"
  },
  {
    "id": 1768,
    "keyword": null,
    "link": null,
    "title": " how to get all permutations of an array",
    "description": "function getArrayMutations(arr, perms = [], len = arr.length) {   if (len === 1) perms.push(arr.slice(0))    for (let i = 0; i < len; i++) {     getArrayMutations(arr, perms, len - 1)      len % 2 // parity dependent adjacent elements swap       ? [arr[0], arr[len - 1]] = [arr[len - 1], arr[0]]       : [arr[i], arr[len - 1]] = [arr[len - 1], arr[i]]   }    return perms }\n/* to be used something like this: int [] toBePermuted = new int [] {1, 2, 3, 4}; ArrayList<int[]> a = heap(toBePermuted); any mention of int [] can be replaced with any other Array of objects */  ArrayList<int []> heap(int [] input) {   ArrayList<int []> ret = new ArrayList<int []> ();   ret = generate(input.length, input, ret);   return ret; }  ArrayList<int []> generate(int k, int [] a, ArrayList<int []> output) {   if (k == 1) {     output.add(a.clone());   } else {     output = generate(k-1, a, output);     for (int i=0; i<k-1; i++) {       if (k%2 == 0) {         int temp = a[i];         a[i] = a[k-1];         a[k-1] = temp;       } else {         int temp = a[0];         a[0] = a[k-1];         a[k-1] = temp;       }       generate(k-1, a, output);     }   }   return output; }\n",
    "reg_date": "2021-10-12T12:03:29.000Z"
  },
  {
    "id": 1769,
    "keyword": null,
    "link": null,
    "title": " how to get all the names of the files in a folder in java?",
    "description": "List<String> results = new ArrayList<String>();   File[] files = new File(\"/path/to/the/directory\").listFiles(); //If this pathname does not denote a directory, then listFiles() returns null.   for (File file : files) {     if (file.isFile()) {         results.add(file.getName());     } }\n",
    "reg_date": "2021-10-12T12:03:29.000Z"
  },
  {
    "id": 1770,
    "keyword": null,
    "link": null,
    "title": " how to get an array as input in java",
    "description": "    public class TakingInput {      public static void main(String[] args) {          Scanner s = new Scanner(System.in);          System.out.println(\"enter number of elements\");          int n=s.nextInt();          int arr[]=new int[n];          System.out.println(\"enter elements\");          for(int i=0;i<n;i++){//for reading array             arr[i]=s.nextInt();          }          for(int i: arr){ //for printing array              System.out.println(i);          }       }  } \n",
    "reg_date": "2021-10-12T12:03:29.000Z"
  },
  {
    "id": 1771,
    "keyword": null,
    "link": null,
    "title": " how to get array index value into variable in java",
    "description": "String zz = aa[5];\n",
    "reg_date": "2021-10-12T12:03:29.000Z"
  },
  {
    "id": 1772,
    "keyword": null,
    "link": null,
    "title": " how to get current date time in android",
    "description": "Calendar c = Calendar.getInstance(); SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\"); String strDate = sdf.format(c.getTime()); Log.d(\"Date\",\"DATE : \" + strDate)\nimport java.time.*; LocalDateTime datetime = LocalDateTime.now(); \nimport java.time.*; LocalDate date = LocalDate.now();\nString currentDateTimeString = java.text.DateFormat.getDateTimeInstance().format(new Date());  // textView is the TextView view that should display it textView.setText(currentDateTimeString);\nimport java.util.Calendar  Date currentTime = Calendar.getInstance().getTime();\n  SimpleDateFormat sdf = new SimpleDateFormat(\"ddMMyyyy_HHmmss\", Locale.getDefault());                 String currentDateandTime = sdf.format(new Date());                 System.out.println(\"currentDateandTime\" + currentDateandTime);\n",
    "reg_date": "2021-10-12T12:03:29.000Z"
  },
  {
    "id": 1773,
    "keyword": null,
    "link": null,
    "title": " how to get current directory in java",
    "description": "public class JavaApplication {   public static void main(String[] args) {     System.out.println(\"Working Directory = \" + System.getProperty(\"user.dir\"));   } }\n",
    "reg_date": "2021-10-12T12:03:29.000Z"
  },
  {
    "id": 1774,
    "keyword": null,
    "link": null,
    "title": " how to get data from radio group in android",
    "description": "  // get selected radio button from radioGroup             int selectedId = radioGroup.getCheckedRadioButtonId();              // find the radiobutton by returned id             radioButton = (RadioButton) findViewById(selectedId);              Toast.makeText(MyAndroidAppActivity.this,                 radioButton.getText(), Toast.LENGTH_SHORT).show(); \n",
    "reg_date": "2021-10-12T12:03:29.000Z"
  },
  {
    "id": 1775,
    "keyword": null,
    "link": null,
    "title": " how to get elements of a list in java",
    "description": "int num = list.get(0);\n",
    "reg_date": "2021-10-12T12:03:29.000Z"
  },
  {
    "id": 1776,
    "keyword": null,
    "link": null,
    "title": " how to get filename without extension in java",
    "description": "FilenameUtils.removeExtension(fileNameWithExt);\nString fname = file.getName(); int pos = fname.lastIndexOf(\".\"); if (pos > 0) {     fname = fname.substring(0, pos); }\n",
    "reg_date": "2021-10-12T12:03:29.000Z"
  },
  {
    "id": 1777,
    "keyword": null,
    "link": null,
    "title": " how to get first element from hashset in java",
    "description": "Collection c;  Iterator iter = c.iterator();  Object first = iter.next(); \n",
    "reg_date": "2021-10-12T12:03:29.000Z"
  },
  {
    "id": 1778,
    "keyword": null,
    "link": null,
    "title": " how to get float value in json java",
    "description": "import java.math.BigDecimal; float mFloat = BigDecimal.valueOf(yourJSONobject.getDouble(\"double\")).floatValue(); \n",
    "reg_date": "2021-10-12T12:03:30.000Z"
  },
  {
    "id": 1779,
    "keyword": null,
    "link": null,
    "title": " how to get index of second occurrence java",
    "description": "String str = \"itiswhatitis\"; //returns the index of the first i in \"is\" str.indexOf(\"is\"); //returns the index of the second occurence of  i in \"is\" after the first  str.indexOf(\"is\", str.indexOf(\"is\") + 1); \n",
    "reg_date": "2021-10-12T12:03:30.000Z"
  },
  {
    "id": 1780,
    "keyword": null,
    "link": null,
    "title": " how to get int from string java",
    "description": "\tString number = \"10\"; \tint result = Integer.parseInt(number);\t\t\t \tSystem.out.println(result); Copy\nInteger.parseInt(str);\n// You will receive an error if there are non-numeric characters in the String. String num = \"5\"; int i = Integer.parseInt(num);\npublic class JavaStringToIntExample {   public static void main (String[] args)   {     // String s = \"fred\";  // use this if you want to test the exception below     String s = \"100\";       try     {       // the String to int conversion happens here       int i = Integer.parseInt(s.trim());         // print out the value after the conversion       System.out.println(\"int i = \" + i);     }     catch (NumberFormatException nfe)     {       System.out.println(\"NumberFormatException: \" + nfe.getMessage());     }   } }\nString.valueOf(i)\n",
    "reg_date": "2021-10-12T12:03:30.000Z"
  },
  {
    "id": 1781,
    "keyword": null,
    "link": null,
    "title": " how to get key value from json object in java",
    "description": "JSONObject agac = jsonObject.getJSONObject(\"agac\"); String agac_name  = agac.getString(\"agac-name\"); int agac_sayisi  = agac.getInt(\"agac-count\"); double agac_carpani = agac.getDouble(\"agac-carpani\"); double agac_fiyat = agac.getDouble(\"agac-fiyati\"); int agac_level  = agac.getInt(\"agac-level\");\n",
    "reg_date": "2021-10-12T12:03:30.000Z"
  },
  {
    "id": 1782,
    "keyword": null,
    "link": null,
    "title": " how to get last element of array java",
    "description": "firstNum = numbers[0]; lastNum = numbers[numbers.length-1];\n arrayName[arrayName.length() - 1];\nint[] someArray = {1,2,3,4,5}; int first = someArray[0]; int last = someArray[someArray.length - 1]; System.out.println(\"First: \" + first + \"\\n\" + \"Last: \" + last);\nint last = list.get(list.size() - 1); \n// GIVE FIRST NUMBER AND LAST NUMBER firstNum = numbers[0]; lastNum = numbers[numbers.length-1];\n//Size of array int n = 10;  //Create Array int[] myArray = new int[n];  //Access and store last element int lastElement = myArray[myArray.length - 1];\n",
    "reg_date": "2021-10-12T12:03:30.000Z"
  },
  {
    "id": 1783,
    "keyword": null,
    "link": null,
    "title": " how to get length of integer in java",
    "description": "int x = 1234;  int lengthOfInt = String.valueOf(x).length(); //convert integer to String \t\t\t\t\t\t\t\t\t\t\t  //and get length of the String\nint length = (int) (Math.log10(number) + 1); \nint length = 0; long temp = 1; while (temp <= number) {     length++;     temp *= 10; } return length; \n",
    "reg_date": "2021-10-12T12:03:30.000Z"
  },
  {
    "id": 1784,
    "keyword": null,
    "link": null,
    "title": " how to get list from json object in java",
    "description": "   JSONObject MyObject = new JSONObject(AllJson);    JSONObject agac = MyObject.getJSONObject(\"agac-\"+String.valueOf(b)); // b is a index in your list    String agac_name  = agac.getString(\"agac-name\");    int agac_sayisi  = agac.getInt(\"agac-sayisi\");    double agac_carpani = agac.getDouble(\"agac-carpani\");    double agac_fiyat = agac.getDouble(\"agac-fiyati\");    int agac_level  = agac.getInt(\"agac-level\");\n",
    "reg_date": "2021-10-12T12:03:30.000Z"
  },
  {
    "id": 1785,
    "keyword": null,
    "link": null,
    "title": " how to get logarithm in java",
    "description": "import java.lang.Math; int y = 69; double x = Math.log(y);   // this will return the log base e of a number  // for log base b (anything else from e) double x = Math.log(y)/Math.log(b);   // this will return the log base b of a number\n",
    "reg_date": "2021-10-12T12:03:30.000Z"
  },
  {
    "id": 1786,
    "keyword": null,
    "link": null,
    "title": " how to get multiple integer input in java",
    "description": "String input = scanner.nextLine();    // get the entire line after the prompt  String[] numbers = input.split(\" \"); // split by spaces\n    Scanner scanner = new Scanner(System.in);      while(scanner.hasNext())     {         System.out.println(scanner.nextInt());     }\n",
    "reg_date": "2021-10-12T12:03:30.000Z"
  },
  {
    "id": 1787,
    "keyword": null,
    "link": null,
    "title": " how to get path of captured image in android",
    "description": "protected void onActivityResult(int requestCode, int resultCode, Intent data) {       if (requestCode == CAMERA_REQUEST && resultCode == RESULT_OK) {         Bitmap photo = (Bitmap) data.getExtras().get(\"data\");          imageView.setImageBitmap(photo);         knop.setVisibility(Button.VISIBLE);           // CALL THIS METHOD TO GET THE URI FROM THE BITMAP         Uri tempUri = getImageUri(getApplicationContext(), photo);          // CALL THIS METHOD TO GET THE ACTUAL PATH         File finalFile = new File(getRealPathFromURI(tempUri));          System.out.println(mImageCaptureUri);     }   }  public Uri getImageUri(Context inContext, Bitmap inImage) {     ByteArrayOutputStream bytes = new ByteArrayOutputStream();     inImage.compress(Bitmap.CompressFormat.JPEG, 100, bytes);     String path = Images.Media.insertImage(inContext.getContentResolver(), inImage, \"Title\", null);     return Uri.parse(path); }  public String getRealPathFromURI(Uri uri) {     String path = \"\";     if (getContentResolver() != null) {         Cursor cursor = getContentResolver().query(uri, null, null, null, null);         if (cursor != null) {             cursor.moveToFirst();             int idx = cursor.getColumnIndex(MediaStore.Images.ImageColumns.DATA);             path = cursor.getString(idx);             cursor.close();         }     }     return path; }\n",
    "reg_date": "2021-10-12T12:03:30.000Z"
  },
  {
    "id": 1788,
    "keyword": null,
    "link": null,
    "title": " how to get prime number in java",
    "description": "public class Prime {     public static void main(String[] args) {          int num = 29;         boolean flag = false;         for(int i = 2; i <= num/2; ++i){             if(num % i == 0){                 flag = true;                 break;             }         }          if (!flag)             System.out.println(num + \" is a prime number.\");         else             System.out.println(num + \" is not a prime number.\"); }}\n",
    "reg_date": "2021-10-12T12:03:30.000Z"
  },
  {
    "id": 1789,
    "keyword": null,
    "link": null,
    "title": " how to get random number in java in range",
    "description": "package com.mkyong.example.test;  import java.util.Random;  public class TestRandom {      public static void main(String[] args) {          for (int i = 0; i < 10; i++) {             System.out.println(getRandomNumberInRange(5, 10));         }      }      private static int getRandomNumberInRange(int min, int max) {          if (min >= max) {             throw new IllegalArgumentException(\"max must be greater than min\");         }          Random r = new Random();         return r.nextInt((max - min) + 1) + min;     }  }\n     private static int getRandomNumberInRange(int min, int max)      {          if (min >= max) {             throw new IllegalArgumentException(\"max must be greater than min\");         }          Random r = new Random();         return r.nextInt((max - min) + 1) + min;     }       //Random().nextInt(int bound) = Random integer from 0 (inclusive) to bound (exclusive)          //1. nextInt(range) = nextInt(max - min)     new Random().nextInt(5);  // [0...4] [min = 0, max = 4]     new Random().nextInt(6);  // [0...5]     new Random().nextInt(7);  // [0...6]     new Random().nextInt(8);  // [0...7]     new Random().nextInt(9);  // [0...8]     new Random().nextInt(10); // [0...9]\t\t\t     new Random().nextInt(11); // [0...10]          //2. To include the last value (max value) = (range + 1)     new Random().nextInt(5 + 1)  // [0...5] [min = 0, max = 5]     new Random().nextInt(6 + 1)  // [0...6]     new Random().nextInt(7 + 1)  // [0...7]     new Random().nextInt(8 + 1)  // [0...8]     new Random().nextInt(9 + 1)  // [0...9]     new Random().nextInt(10 + 1) // [0...10]\t\t\t     new Random().nextInt(11 + 1) // [0...11]          //3. To define a start value (min value) in a range,     //   For example, the range should start from 10 = (range + 1) + min     new Random().nextInt(5 + 1)  + 10 // [0...5]  + 10 = [10...15]     new Random().nextInt(6 + 1)  + 10 // [0...6]  + 10 = [10...16]     new Random().nextInt(7 + 1)  + 10 // [0...7]  + 10 = [10...17]     new Random().nextInt(8 + 1)  + 10 // [0...8]  + 10 = [10...18]     new Random().nextInt(9 + 1)  + 10 // [0...9]  + 10 = [10...19]     new Random().nextInt(10 + 1) + 10 // [0...10] + 10 = [10...20]     new Random().nextInt(11 + 1) + 10 // [0...11] + 10 = [10...21]          // Range = (max - min)     // So, the final formula is ((max - min) + 1) + min          //4. Test [10...30]     // min = 10 , max = 30, range = (max - min)     new Random().nextInt((max - min) + 1) + min     new Random().nextInt((30 - 10) + 1) + 10     new Random().nextInt((20) + 1) + 10     new Random().nextInt(21) + 10    //[0...20] + 10 = [10...30]          //5. Test [15...99]     // min = 15 , max = 99, range = (max - min)     new Random().nextInt((max - min) + 1) + min     new Random().nextInt((99 - 15) + 1) + 15     new Random().nextInt((84) + 1) + 15     new Random().nextInt(85) + 15    //[0...84] + 15 = [15...99]          //Done, understand?\nimport java.util.concurrent.ThreadLocalRandom;  // nextInt is normally exclusive of the top value, // so add 1 to make it inclusive int randomNum = ThreadLocalRandom.current().nextInt(min, max + 1); \nMin + (int)(Math.random() * ((Max - Min) + 1)) \nint rand = ThreadLocalRandom.current().nextInt(x,y);\n",
    "reg_date": "2021-10-12T12:03:31.000Z"
  },
  {
    "id": 1790,
    "keyword": null,
    "link": null,
    "title": " how to get start char in string in java",
    "description": "char ch1 = str.charAt(0);\n",
    "reg_date": "2021-10-12T12:03:31.000Z"
  },
  {
    "id": 1791,
    "keyword": null,
    "link": null,
    "title": " how to get system date in android",
    "description": "String date = new SimpleDateFormat(\"yyyy-MM-dd\", Locale.getDefault()).format(new Date());\n",
    "reg_date": "2021-10-12T12:03:31.000Z"
  },
  {
    "id": 1792,
    "keyword": null,
    "link": null,
    "title": " how to get the dimensions of a 2d array in java",
    "description": "public class Main {   public static void main(String[] args) {     int[][] test = new int[10][4];     int rows = test.length;     int coloumns = test[0].length;     System.out.println(rows);     System.out.println(coloumns);   } }\n  int[][] test;    test = new int[5][10];    int row = test.length;   int col = test[0].length;\npublic static void main(String[] args) {      int[][] foo = new int[][] {         new int[] { 1, 2, 3 },         new int[] { 1, 2, 3, 4},     };      System.out.println(foo.length); //2     System.out.println(foo[0].length); //3     System.out.println(foo[1].length); //4 }\npublic static void main(String[] args) {      int[][] foo = new int[][] {         new int[] { 1, 2, 3 },         new int[] { 1, 2, 3, 4},     };      System.out.println(foo.length); //2 // gives count of rows     System.out.println(foo[0].length); //3 // gives count of columns for particular row     System.out.println(foo[1].length); //4 }\n",
    "reg_date": "2021-10-12T12:03:31.000Z"
  },
  {
    "id": 1793,
    "keyword": null,
    "link": null,
    "title": " how to get the highest value in a list java",
    "description": "import java.util.*; public class CollectionsMaxExample2 { public static void main(String[] args) { //Create collections lists. List<Integer> list = Arrays.asList(20, 10, 100, 140, 250); Integer max = Collections.max(list); System.out.println(\"Maximum element is: \"+max); }\n",
    "reg_date": "2021-10-12T12:03:31.000Z"
  },
  {
    "id": 1794,
    "keyword": null,
    "link": null,
    "title": " how to get the index of a value in list in java",
    "description": "import java.util.ArrayList;  public class ArrayListDemo {    public static void main(String[] args) {       ArrayList<String> arrlist = new ArrayList<String>(5);       arrlist.add(\"G\");       arrlist.add(\"E\");       arrlist.add(\"F\");       arrlist.add(\"M\");       System.out.println(\"Size of list: \" + arrlist.size());       for (String value : arrlist) {          System.out.println(\"Value = \" + value);       }       int retval=arrlist.indexOf(\"E\");       System.out.println(\"The element E is at index \" + retval);    } }\n",
    "reg_date": "2021-10-12T12:03:31.000Z"
  },
  {
    "id": 1795,
    "keyword": null,
    "link": null,
    "title": " how to get the last element of array in java",
    "description": "firstNum = numbers[0]; lastNum = numbers[numbers.length-1];\nArrayList<Integer> list = new ArrayList<Integer>(5);  int last = list.get(list.size() - 1); \nint[] someArray = {1,2,3,4,5}; int first = someArray[0]; int last = someArray[someArray.length - 1]; System.out.println(\"First: \" + first + \"\\n\" + \"Last: \" + last);\nint[] arr = new int[5]; //length of the array is 5 int val = arr[arr.length - 1]; //here variable val stores the last element of arr\n",
    "reg_date": "2021-10-12T12:03:31.000Z"
  },
  {
    "id": 1796,
    "keyword": null,
    "link": null,
    "title": " how to get the max value of an array java",
    "description": "public static double arrayMax(double[] arr) {     double max = Double.NEGATIVE_INFINITY;      for(double cur: arr)         max = Math.max(max, cur);      return max; }\nimport java.util.Random;  public class Main {  public static void main(String[] args) {    int a[] = new int [100];    Random rnd = new Random ();      for (int i = 0; i< a.length; i++) {         a[i] = rnd.nextInt(99-0)+0;         System.out.println(a[i]);     }      int max = 0;                for (int i = 0; i < a.length; i++) {         a[i] = max;           for (int j = i+1; j<a.length; j++) {             if (a[j] > max) {                max = a[j];             }          }     }      System.out.println(\"Max element: \" + max); } }\n",
    "reg_date": "2021-10-12T12:03:31.000Z"
  },
  {
    "id": 1797,
    "keyword": null,
    "link": null,
    "title": " how to get the time in java",
    "description": "import java.time.format.DateTimeFormatter;   import java.time.LocalDateTime;     public class CurrentDateTimeExample1 {       public static void main(String[] args) {        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm:ss\");      LocalDateTime now = LocalDateTime.now();      System.out.println(dtf.format(now));     }     }   \n// get current date and timein java using Calendar.getTime() method import java.util.Calendar; import java.util.Date; public class UsingCalendarClass {    public static void main(String[] args)    {       Date date = Calendar.getInstance().getTime();       System.out.println(date);    } }\n// get current time in java using LocalTime.now() method  import java.time.LocalTime; public class UsingLocalDate {    public static void main(String[] args)    {       System.out.println(LocalTime.now());      // hr : min : sec.fimto sec    } }\n// get current date and time in java using LocalDate.now() method import java.time.LocalDate; public class UsingLocalDate {    public static void main(String[] args)    {       System.out.println(LocalDate.now());    } }\nimport java.util.Calendar; Date currentTime = Calendar.getInstance().getTime();\n// get current date and time in java using LocalDateTime.now() method import java.time.LocalDateTime; public class UsingLocalDateTime {    public static void main(String[] args)    {       System.out.println(LocalDateTime.now());    } }\n",
    "reg_date": "2021-10-12T12:03:31.000Z"
  },
  {
    "id": 1798,
    "keyword": null,
    "link": null,
    "title": " how to get the total of arraylist",
    "description": "double sum = 0; for(int i = 0; i < m.size(); i++)     sum += m.get(i); return sum; \n",
    "reg_date": "2021-10-12T12:03:31.000Z"
  },
  {
    "id": 1799,
    "keyword": null,
    "link": null,
    "title": " how to get the width and height of a string in java",
    "description": "String text = \"Hello World\"; Font font = new Font(\"Arial\", Font.PLAIN, 12); FontRenderContext frc = new FontRenderContext(new AffineTransform(), true, true);  int textwidth = (int)(font.getStringBounds(text, frc).getWidth()); int textheight = (int)(font.getStringBounds(text, frc).getHeight());\n",
    "reg_date": "2021-10-12T12:03:32.000Z"
  },
  {
    "id": 1800,
    "keyword": null,
    "link": null,
    "title": " how to get user input in java",
    "description": "import java.util.Scanner; /* Required Import*/ public class reading{   public static void main(String[] args){     Scanner scan = new Scanner(System.in); // Create Reader      System.out.print(\"Enter Your Age\"); // Ask the user for something     int age = scan.nextInt(); // Read value from user     System.out.print(age); // Output the value   } } /*   Java Reading Options:   1_ reading int => nextInt();   2_ reading char => next().charAt(0); Single Character   3_ reading string => next();   4_ reading double => nextDouble(); */\nScanner sc = new Scanner(System.in);  // Create a Scanner object String userName = sc.nextLine();//read input string int age = sc.nextInt(); //read input integer long mobileNo = sc.nextLong(); //read input long double cgpa = sc.nextDouble(); //read input double System.out.println(userName);//output \nScanner sc = new Scanner(System.in); String s = sc.next(); int n = sc.nextInt(); double d = sc.nextDouble(); float f = sc.nextFloat();  // more fast way BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String s = br.readLine(); // read line int c = br.read();        // read single char\nimport java.util.*;   class UserInputDemo    {   public static void main(String[] args)   {   Scanner sc= new Scanner(System.in);    //System.in is a standard input stream   System.out.print(\"Enter first number- \");   int a= sc.nextInt();   System.out.print(\"Enter second number- \");   int b= sc.nextInt();   System.out.print(\"Enter third number- \");   int c= sc.nextInt();   int d=a+b+c;   System.out.println(\"Total= \" +d);   }   }  \n",
    "reg_date": "2021-10-12T12:03:32.000Z"
  },
  {
    "id": 1801,
    "keyword": null,
    "link": null,
    "title": " how to get width android",
    "description": "Display display = getWindowManager().getDefaultDisplay(); Point size = new Point(); display.getSize(size); int width = size.x; int height = size.y; \nDisplayMetrics displayMetrics = new DisplayMetrics(); getWindowManager().getDefaultDisplay().getMetrics(displayMetrics); int height = displayMetrics.heightPixels; int width = displayMetrics.widthPixels;\n",
    "reg_date": "2021-10-12T12:03:32.000Z"
  },
  {
    "id": 1802,
    "keyword": null,
    "link": null,
    "title": " how to get witdth of window android",
    "description": "// Java DisplayMetrics displayMetrics = new DisplayMetrics(); getWindowManager().getDefaultDisplay().getMetrics(displayMetrics); int height = displayMetrics.heightPixels; int width = displayMetrics.widthPixels;\n",
    "reg_date": "2021-10-12T12:03:32.000Z"
  },
  {
    "id": 1803,
    "keyword": null,
    "link": null,
    "title": " how to give square in java",
    "description": "import java.util.*; public class Square {     public static void main(String args[]){         Scanner sc=new Scanner(System.in);         int num;               System.out.print(\"Enter an integer number: \");         num=sc.nextInt();               System.out.println(\"Square of \"+ num + \" is: \"+ Math.pow(num, 2));              } } \n",
    "reg_date": "2021-10-12T12:03:32.000Z"
  },
  {
    "id": 1804,
    "keyword": null,
    "link": null,
    "title": " how to implement a interface in java",
    "description": "// Assume we have the simple interface: interface Appendable { \tvoid append(string content); } // We can implement it like that: class SimplePrinter implements Appendable {  \tpublic void append(string content) {    \t\tSystem.out.println(content);      } } // ... and maybe like that: class FileWriter implements Appendable {  \tpublic void append(string content) {    \t\t// Appends content into a file      } } // Both classes are Appendable.\ninterface methods{  public static hey();  }  class scratch implements methods{   // Required to implement all methods declared in an interface    // Or else the class becomes abstract   public static hey(){    System.out.println(\"Hey\");    } }\n/* File name : MammalInt.java */ public class MammalInt implements Animal {     public void eat() {       System.out.println(\"Mammal eats\");    }     public void travel() {       System.out.println(\"Mammal travels\");    }      public int noOfLegs() {       return 0;    }     public static void main(String args[]) {       MammalInt m = new MammalInt();       m.eat();       m.travel();    } } \n// interface syntax interface InterfaceName {    fields // by default interface fields are public, static final    methods // by default interface methods are abstract, public }\n",
    "reg_date": "2021-10-12T12:03:32.000Z"
  },
  {
    "id": 1805,
    "keyword": null,
    "link": null,
    "title": " how to implement ddt in api",
    "description": "If you use JUnit-5 in your framework, it allows to use  @ParameterizedTest annotation beside @Test annotation.  There are three different way to achieve DDT with @ParameterizedTest  annotation.   1. \t@ParameterizedTest     @ValueSource(ints = {1,2,3,4})     public void validateRegionNameTest1(int id) {         given().pathParam(\"id\", id)                 .when().get(\"/regions/{id}\")\t==> It will use 1,2,3,4 as                  id in different runs...                 .prettyPeek()                 .then().assertThat().statusCode(200)                 .and().assertThat().body(\"region_id\", equalTo(id));     }  2.  @ParameterizedTest     @CsvSource({             \"1, Europe\",             \"2, Americas\",             \"3, Asia\",             \"4, Middle East and Africa\"})     public void validateRegionNameTest2(int id, String name) {  ==> iterate      each data set one by one      \t\tgiven().pathParam(\"id\", id)                 .when().get(\"/regions/{id}\")                 .prettyPeek()                 .then().assertThat().statusCode(200)                 .and().assertThat().body(\"region_id\", equalTo(id))                 .and().assertThat().body(\"region_name\", equalTo(name));     }  3.  @ParameterizedTest     @CsvFileSource(resources = \"/regions.csv\") ==> uses external csv      file which is located under resources directory     public void validateRegionNameTest3(int id, String name) {         given().pathParam(\"id\", id)                 .when().get(\"/regions/{id}\")                 .prettyPeek()                 .then().assertThat().statusCode(200)                 .and().assertThat().body(\"region_id\", equalTo(id))                 .and().assertThat().body(\"region_name\", equalTo(name));     }  \nIf you use JUnit-5 in your framework, it allows to use @ParameterizedTest annotation beside @Test annotation.  There are different way to achieve  DDT with @ParameterizedTest annotation. (1-valueSource , 2- csvSource , 3-CsvFileSource)  1. \t@ParameterizedTest     @ValueSource(ints = {1,2,3,4})     public void validateRegionNameTest1(int id) {         given().pathParam(\"id\", id)                 .when().get(\"/regions/{id}\")\t==> It will use 1,2,3,4 as                  id in different runs...                 .prettyPeek()                 .then().assertThat().statusCode(200)                 .and().assertThat().body(\"region_id\", equalTo(id));     }  2.  @ParameterizedTest     @CsvSource({             \"1, Europe\",             \"2, Americas\",             \"3, Asia\",             \"4, Middle East and Africa\"})     public void validateRegionNameTest2(int id, String name) {  ==> iterate      each data set one by one      \t\tgiven().pathParam(\"id\", id)                 .when().get(\"/regions/{id}\")                 .prettyPeek()                 .then().assertThat().statusCode(200)                 .and().assertThat().body(\"region_id\", equalTo(id))                 .and().assertThat().body(\"region_name\", equalTo(name));     }  3.  @ParameterizedTest     @CsvFileSource(resources = \"/regions.csv\") ==> uses external csv      file which is located under resources directory     public void validateRegionNameTest3(int id, String name) {         given().pathParam(\"id\", id)                 .when().get(\"/regions/{id}\")                 .prettyPeek()                 .then().assertThat().statusCode(200)                 .and().assertThat().body(\"region_id\", equalTo(id))                 .and().assertThat().body(\"region_name\", equalTo(name));     }\n",
    "reg_date": "2021-10-12T12:03:32.000Z"
  },
  {
    "id": 1806,
    "keyword": null,
    "link": null,
    "title": " how to import an arraylist in java",
    "description": "import java.util.ArrayList;\n",
    "reg_date": "2021-10-12T12:03:32.000Z"
  },
  {
    "id": 1807,
    "keyword": null,
    "link": null,
    "title": " how to import cert  from browser into java",
    "description": "java -version\nA8 98 5D 3A 65 E5 E5 C4 B2 D7 D6 6D 40 C6 DD 2F B1 9C 54 36 \nLink : https://medium.com/expedia-group-tech/how-to-import-public-certificates-into-javas-truststore-from-a-browser-a35e49a806dc\nList all the trusted public Root CAs in your Java truststore Navigate to the $JAVA_HOME/jre/lib/security folder for the cacerts file cacerts is the default Java truststore. A truststore authenticates peers. A keystore authenticates yourself. cacerts is where Java stores public certificates of trusted Root CAs Use the following command (on Unix, a similar command is available in other OSes) to list the existing certs in the truststore:  keytool -keystore $JAVA_HOME/jre/lib/security/cacerts -listThe default password for the truststore: changeit\n",
    "reg_date": "2021-10-12T12:03:32.000Z"
  },
  {
    "id": 1808,
    "keyword": null,
    "link": null,
    "title": " how to import class from another file in java",
    "description": "import package.myclass;  //But since it's the default package and same, you just create a new instance like:  elf ob = new elf();\nRight Click > Project. Click Project Properties. Click Java Build Path. Click the Projects Tab. Click the Add Button. Select the Project. Click OK.\n",
    "reg_date": "2021-10-12T12:03:32.000Z"
  },
  {
    "id": 1809,
    "keyword": null,
    "link": null,
    "title": " how to import whole package in java",
    "description": "import package.* //imports entire package\n",
    "reg_date": "2021-10-12T12:03:33.000Z"
  },
  {
    "id": 1810,
    "keyword": null,
    "link": null,
    "title": " how to include subfigure in latex",
    "description": "% Side-by-side subfigures  \\usepackage{subcaption}  \\begin{figure}[h]     \\begin{subfigure}{0.5\\textwidth}         \\includegraphics[width=0.9\\linewidth]{image1}         \\caption{Caption1}         \\label{fig:sub1}     \\end{subfigure}     \\begin{subfigure}{0.5\\textwidth}         \\includegraphics[width=0.9\\linewidth]{image2}         \\caption{Caption2}         \\label{fig:sub2}     \\end{subfigure}     \\caption{Subfigures}     \\label{fig:Figure1} \\end{figure}\n\\usepackage{caption} \\usepackage{subcaption} \\begin{document} \\begin{figure} \\begin{subfigure}{.5\\textwidth}   \\centering   % include first image   \\includegraphics[width=.8\\linewidth]{log_demo1.png}     \\caption{Put your sub-caption here}   \\label{fig:sub-first} \\end{subfigure} \\begin{subfigure}{.5\\textwidth}   \\centering   % include second image   \\includegraphics[width=.8\\linewidth]{log_demo2.png}     \\caption{Put your sub-caption here}   \\label{fig:sub-second} \\end{subfigure}  \\newline  \\begin{subfigure}{.5\\textwidth}   \\centering   % include third image   \\includegraphics[width=.8\\linewidth]{log_demo1.png}     \\caption{Put your sub-caption here}   \\label{fig:sub-third} \\end{subfigure} \\begin{subfigure}{.5\\textwidth}   \\centering   % include fourth image   \\includegraphics[width=.8\\linewidth]{log_demo2.png}     \\caption{Put your sub-caption here}   \\label{fig:sub-fourth} \\end{subfigure} \\caption{Put your caption here} \\label{fig:fig} \\end{figure} \n\\usepackage{subcaption} \\begin{figure}[ht] \\begin{subfigure}{.5\\textwidth}   \\centering   % include first image   \\includegraphics[width=.8\\linewidth]{image_file_name}     \\caption{Put your sub-caption here}   \\label{fig:sub-first} \\end{subfigure} \\begin{subfigure}{.5\\textwidth}   \\centering   % include second image   \\includegraphics[width=.8\\linewidth]{image_file_name}     \\caption{Put your sub-caption here}   \\label{fig:sub-second} \\end{subfigure} \\caption{Put your caption here} \\label{fig:fig} \\end{figure} \n",
    "reg_date": "2021-10-12T12:03:33.000Z"
  },
  {
    "id": 1811,
    "keyword": null,
    "link": null,
    "title": " how to initalize the array as to false",
    "description": "import java.util.Arrays; public class BooleanArrayTest {    public static void main(String[] args) {       Boolean[] boolArray = new Boolean[5]; // initialize a boolean array       for(int i = 0; i < boolArray.length; i++) {          System.out.println(boolArray[i]);       }       Arrays.fill(boolArray, Boolean.FALSE);       // all the values will be false       for(int i = 0; i < boolArray.length; i++) {          System.out.println(boolArray[i]);       }       Arrays.fill(boolArray, Boolean.TRUE);       // all the values will be true       for (int i = 0; i < boolArray.length; i++) {          System.out.println(boolArray[i]);       }    } }\n",
    "reg_date": "2021-10-12T12:03:33.000Z"
  },
  {
    "id": 1812,
    "keyword": null,
    "link": null,
    "title": " how to initialize a set in java",
    "description": "Set<String> set = new HashSet<>(Arrays.asList(\"a\", \"b\", \"c\"));\nSet<E> h = new HashSet<E>();\nHashSet<String> h = new HashSet<String>();\n",
    "reg_date": "2021-10-12T12:03:33.000Z"
  },
  {
    "id": 1813,
    "keyword": null,
    "link": null,
    "title": " how to initialize an array in java",
    "description": "int[] data = {10,20,30,40,50,60,71,80,90,91}; // or int[] data; data = new int[] {10,20,30,40,50,60,71,80,90,91}; // or int[] data = new int[10]; data = {10,20,30,40,50,60,71,80,90,91};\nint[] data = {10,20,30,40,50,60,71,80,90,91};  // or  int[] data; data = new int[] {10,20,30,40,50,60,71,80,90,91}; \nint[] array=new int[5]; int[] array2=new int[]{1,2};\n",
    "reg_date": "2021-10-12T12:03:33.000Z"
  },
  {
    "id": 1814,
    "keyword": null,
    "link": null,
    "title": " how to initialize an empty array in java",
    "description": "int[] numbers = new int[5]; /* Empty array of type int and size 5 */ String[] names = new String[10]; /* Empty array of type string and size 10 */\n//where n is the length you want the array to be // for integer array int[] intArray = new int[n]; // for String array String[] strArray = new String[n];\nString [] names = new String[0];  // or   int [] ages = {} \npublic static void main(String args[]) {     int array[] = new int[4];     int number = 5, i = 0,j = 0;     while (i<4){         array[i]=number;         i=i+1;     }     while (j<4){         System.out.println(array[j]);         j++;     } }\n",
    "reg_date": "2021-10-12T12:03:33.000Z"
  },
  {
    "id": 1815,
    "keyword": null,
    "link": null,
    "title": " how to initialize an object in java",
    "description": "Car mycar = new Car();\npublic class Puppy {    public Puppy(String name) {       // This constructor has one parameter, name.       System.out.println(\"Passed Name is :\" + name );    }     public static void main(String []args) {       // Following statement would create an object myPuppy       Puppy myPuppy = new Puppy( \"tommy\" );    } }\n",
    "reg_date": "2021-10-12T12:03:33.000Z"
  },
  {
    "id": 1816,
    "keyword": null,
    "link": null,
    "title": " how to initialize array in java",
    "description": "int[] data = {10,20,30,40,50,60,71,80,90,91}; // or int[] data; data = new int[] {10,20,30,40,50,60,71,80,90,91}; // or int[] data = new int[10]; data = {10,20,30,40,50,60,71,80,90,91};\nint[] intArray = new int[]{ 1,2,3,4,5,6,7,8,9,10 }\nint intArray[];    //declaring array intArray = new int[20];  // allocating memory to array //OR int[] intArray = new int[20]; // combining both statements in one\nint[] array = new int[/*size*/]; // Works for double, char, etc.\nint[] array1 = new int[5]; //int array length 5 String[] array2 = new String[5] //String array length 5 double[] array3 = new double[5] // Double array length 5 \nint[] arr = new int[5];\t // integer array of size 5 you can also change data type \n",
    "reg_date": "2021-10-12T12:03:33.000Z"
  },
  {
    "id": 1817,
    "keyword": null,
    "link": null,
    "title": " how to initialize bigdecimal in java",
    "description": "BigDecimal num = new BigDecimal(123); \n",
    "reg_date": "2021-10-12T12:03:33.000Z"
  },
  {
    "id": 1818,
    "keyword": null,
    "link": null,
    "title": " how to initialize char in java",
    "description": "char c = '\\0'; \n//notice the single quotes  char myGrade = 'B';\n",
    "reg_date": "2021-10-12T12:03:33.000Z"
  },
  {
    "id": 1819,
    "keyword": null,
    "link": null,
    "title": " how to input in java",
    "description": "Scanner sc = new Scanner(System.in);  // Create a Scanner object String userName = sc.nextLine();//read input string int age = sc.nextInt(); //read input integer long mobileNo = sc.nextLong(); //read input long double cgpa = sc.nextDouble(); //read input double System.out.println(userName);//output \nimport java.util.*; class a  {     void main ()     {         Scanner in = new Scanner(System.in);       System.out.print(\"Please enter you age: \");       int age = in.nextInt();       System.out.print(\"Please enter today's date: \");       int date = in.nextInt();       System.out.print(\"Please enter current month: \");       int month = in.nextInt();       System.out.print(\"Please enter current year: \");       int year = in.nextInt();     } } // ENJOY!!!!!!!\nScanner sc = new Scanner(System.in); String s = sc.next(); int n = sc.nextInt(); double d = sc.nextDouble(); float f = sc.nextFloat();  // more fast way BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String s = br.readLine(); // read line int c = br.read();        // read single char\nimport java.util.*;   class UserInputDemo    {   public static void main(String[] args)   {   Scanner sc= new Scanner(System.in);    //System.in is a standard input stream   System.out.print(\"Enter first number- \");   int a= sc.nextInt();   System.out.print(\"Enter second number- \");   int b= sc.nextInt();   System.out.print(\"Enter third number- \");   int c= sc.nextInt();   int d=a+b+c;   System.out.println(\"Total= \" +d);   }   }  \nimport java.util.Scanner; ...   Scanner console = new Scanner(System.in);   int num = console.nextInt();   console.nextLine() // to take in the enter after the nextInt()    String str = console.nextLine();\nimport java.util.*; //or java.util.scanner Scanner doit = new Scanner(System.in);//Name the scanner System.out.println(\"Username:\");//It will specify username String username = doit.next();//Use scanner and add .next for string .nextInt for int and follows \n",
    "reg_date": "2021-10-12T12:03:34.000Z"
  },
  {
    "id": 1820,
    "keyword": null,
    "link": null,
    "title": " how to install java 11 jdk on ubuntu 20.04",
    "description": "sudo apt update sudo apt install openjdk-11-jdk  sudo apt update sudo apt install openjdk-8-jdk\nsudo apt install default-jre \nsudo apt-get install openjdk-11-jdk \nsudo apt-get update && sudo apt-get upgrade \n",
    "reg_date": "2021-10-12T12:03:34.000Z"
  },
  {
    "id": 1821,
    "keyword": null,
    "link": null,
    "title": " how to install java 8 and set java home in ubuntu",
    "description": "#Update repo sudo apt update  # Install java 8 from ubuntu repo sudo apt install openjdk-8-jdk -y  #Set JAVA_HOME Path ls /usr/lib/jvm/java-8-openjdk-amd64/  export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64  echo $JAVA_HOME    #Add JAVA bin directory to the PATH variable  export PATH=$PATH:$JAVA_HOME/bin  echo $PATH  java -version\nsudo apt install openjdk-8-jdk\n",
    "reg_date": "2021-10-12T12:03:34.000Z"
  },
  {
    "id": 1822,
    "keyword": null,
    "link": null,
    "title": " how to install java 8 in ubuntu 16.04",
    "description": "sudo apt-get install openjdk-8-jdk \n",
    "reg_date": "2021-10-12T12:03:34.000Z"
  },
  {
    "id": 1823,
    "keyword": null,
    "link": null,
    "title": " how to install java 8 on aws linux",
    "description": "// to install java version 8 use the below command sudo yum install java-1.8.0-devel\n",
    "reg_date": "2021-10-12T12:03:34.000Z"
  },
  {
    "id": 1824,
    "keyword": null,
    "link": null,
    "title": " how to install java 8 on terminal os",
    "description": "brew tap adoptopenjdk/openjdk  brew cask install adoptopenjdk8 brew cask install adoptopenjdk9 brew cask install adoptopenjdk10 brew cask install adoptopenjdk11  brew cask install java8\n",
    "reg_date": "2021-10-12T12:03:34.000Z"
  },
  {
    "id": 1825,
    "keyword": null,
    "link": null,
    "title": " how to install java 8 on ubuntu 20.04",
    "description": "sudo apt update sudo apt install openjdk-11-jdk  sudo apt update sudo apt install openjdk-8-jdk\n# Java in ubuntu # first check if java is already installed or not using  java -version  # install openjdk (Java Development Kit) sudo apt install default-jdk # it will ask for confirmation...around 480 MB will be downloaded # this will install both the latest jdk and jre of openjdk distribution  # check for java java -version  #check for javac javac -version  # If you only want to install jre and not jdk, just run sudo apt install default-jre\napt-key adv --keyserver keyserver.ubuntu.com --recv-keys EA8CACC073C3DB2A \n",
    "reg_date": "2021-10-12T12:03:34.000Z"
  },
  {
    "id": 1826,
    "keyword": null,
    "link": null,
    "title": " how to install java jdk 13 on linux",
    "description": "sudo apt install -y curl curl -O https://download.java.net/java/GA/jdk13/5b8a42f3905b406298b72d750b6919f6/33/GPL/openjdk-13_linux-x64_bin.tar.gz tar xvf openjdk-13_linux-x64_bin.tar.gz  sudo mv jdk-13 /opt/   sudo tee /etc/profile.d/jdk.sh <<EOF   export JAVA_HOME=/opt/jdk-13   export PATH=\\$PATH:\\$JAVA_HOME/bin   EOF    source /etc/profile.d/jdk13.sh  echo $JAVA_HOME  java -version  ### Second Approach to install java 13 along side other java versions ## Check this link https://medium.com/@ayeshajayasankha/how-to-install-and-switch-between-alternative-java-versions-66b3671fc382  curl -O https://download.java.net/java/GA/jdk13/5b8a42f3905b406298b72d750b6919f6/33/GPL/openjdk-13_linux-x64_bin.tar.gz tar xvf openjdk-13_linux-x64_bin.tar.gz export JAVA_HOME=<Directory where JAVA has been extracted>/jdk-13 export PATH=$PATH:$HOME/bin:$JAVA_HOME/bin . /etc/profile sudo update-alternatives --install \"/usr/bin/java\" \"java\" \"<Directory where JAVA has been extracted>/bin/java\" 1 sudo update-alternatives --install \"/usr/bin/javac\" \"javac\" \"<Directory where JAVA has been extracted>/bin/javac\" 1   sudo update-alternatives --set java <Directory where JAVA has been extracted>/bin/java sudo update-alternatives --set javac <Directory where JAVA has been extracted>/bin/javac java -version javac -version   \n",
    "reg_date": "2021-10-12T12:03:34.000Z"
  },
  {
    "id": 1827,
    "keyword": null,
    "link": null,
    "title": " how to install java on ubuntu 18.0.4",
    "description": "$ sudo apt install openjdk-11-jdk \n",
    "reg_date": "2021-10-12T12:03:34.000Z"
  },
  {
    "id": 1828,
    "keyword": null,
    "link": null,
    "title": " how to install java runtime environment on centos 7",
    "description": "sudo yum install java-11-openjdk-devel\n",
    "reg_date": "2021-10-12T12:03:34.000Z"
  },
  {
    "id": 1829,
    "keyword": null,
    "link": null,
    "title": " how to iterate a queue in java",
    "description": "Queue<Integer> queue = new LinkedList<Integer>();         queue.add(1);         queue.add(2);         queue.add(3);           for (Integer item: queue) {             System.out.println(item);         }\n",
    "reg_date": "2021-10-12T12:03:35.000Z"
  },
  {
    "id": 1830,
    "keyword": null,
    "link": null,
    "title": " how to iterate a stack without iterator class",
    "description": "for(YourObject obj : stack) {     System.out.println(obj); }\n",
    "reg_date": "2021-10-12T12:03:35.000Z"
  },
  {
    "id": 1831,
    "keyword": null,
    "link": null,
    "title": " how to iterate hashmap in java",
    "description": "for (Map.Entry<String, String> entry : yourHashMap.entrySet()) { \tSystem.out.println(entry.getKey() + \" = \" + entry.getValue()); }\nfor (Map.Entry<String, String> entry : yourHashMap.entrySet()) { \tSystem.out.println(entry.getKey() + \" = \" + entry.getValue()); }  map.forEach((k, v) -> {     System.out.format(\"key: %s, value: %d%n\", k, v); });\npublic static void printMap(Map mp) {     Iterator it = mp.entrySet().iterator();     while (it.hasNext()) {         Map.Entry pair = (Map.Entry)it.next();         System.out.println(pair.getKey() + \" = \" + pair.getValue());         it.remove(); // avoids a ConcurrentModificationException     } }\nfor(Map.Entry<String, Integer> entry : hashMap.entrySet()) {     String key = entry.getKey();     Integer value =  entry.getValue();     //do something with the key and value }\nMap<Integer, Integer> map = new HashMap<Integer, Integer>(); for (Map.Entry<Integer, Integer> entry : map.entrySet()) {     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); }\npublic static void printMap(Map mp) {     Iterator it = mp.entrySet().iterator();     while (it.hasNext()) {         Map.Entry pair = (Map.Entry)it.next();         System.out.println(pair.getKey() + \" = \" + pair.getValue());         it.remove(); // avoids a ConcurrentModificationException     } } \n",
    "reg_date": "2021-10-12T12:03:35.000Z"
  },
  {
    "id": 1832,
    "keyword": null,
    "link": null,
    "title": " how to iterate hashmap java",
    "description": "for (Map.Entry<String, String> entry : yourHashMap.entrySet()) { \tSystem.out.println(entry.getKey() + \" = \" + entry.getValue()); }\nMap<Integer, Integer> map = new HashMap<Integer, Integer>(); for (Map.Entry<Integer, Integer> entry : map.entrySet()) {     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); }\n",
    "reg_date": "2021-10-12T12:03:35.000Z"
  },
  {
    "id": 1833,
    "keyword": null,
    "link": null,
    "title": " how to iterate hashset in java 8",
    "description": "Set<String> set = new HashSet<String>(); for (String s : set) {     System.out.println(s); }  //Java 8: set.forEach(System.out::println);\n",
    "reg_date": "2021-10-12T12:03:35.000Z"
  },
  {
    "id": 1834,
    "keyword": null,
    "link": null,
    "title": " how to know if JAVA JDK is installed mac",
    "description": "javac -version which javac\n",
    "reg_date": "2021-10-12T12:03:35.000Z"
  },
  {
    "id": 1835,
    "keyword": null,
    "link": null,
    "title": " how to know if String is the same java",
    "description": "String1.equals(String2)\n",
    "reg_date": "2021-10-12T12:03:35.000Z"
  },
  {
    "id": 1836,
    "keyword": null,
    "link": null,
    "title": " how to know java version in cmd",
    "description": "java -version\n",
    "reg_date": "2021-10-12T12:03:35.000Z"
  },
  {
    "id": 1837,
    "keyword": null,
    "link": null,
    "title": " how to limit double decimal places java",
    "description": "package com.mkyong;  import java.math.RoundingMode; import java.text.DecimalFormat;  public class DecimalExample {      private static DecimalFormat df2 = new DecimalFormat(\"#.##\");      public static void main(String[] args) {          double input = 3.14159265359;         System.out.println(\"double : \" + input);         System.out.println(\"double : \" + df2.format(input));    //3.14          // DecimalFormat, default is RoundingMode.HALF_EVEN         df2.setRoundingMode(RoundingMode.DOWN);         System.out.println(\"\\ndouble : \" + df2.format(input));  //3.14          df2.setRoundingMode(RoundingMode.UP);         System.out.println(\"double : \" + df2.format(input));    //3.15      }  } Copy\n",
    "reg_date": "2021-10-12T12:03:35.000Z"
  },
  {
    "id": 1838,
    "keyword": null,
    "link": null,
    "title": " how to listen to a port in java",
    "description": "int portNumber = Integer.parseInt(args[0]);  try (      ServerSocket serverSocket = new ServerSocket(portNumber);     Socket clientSocket = serverSocket.accept();     PrintWriter out =         new PrintWriter(clientSocket.getOutputStream(), true);     BufferedReader in = new BufferedReader(         new InputStreamReader(clientSocket.getInputStream())); ) { \n",
    "reg_date": "2021-10-12T12:03:35.000Z"
  },
  {
    "id": 1839,
    "keyword": null,
    "link": null,
    "title": " how to load font in java",
    "description": "try {        Font font = Font.createFont(Font.TRUETYPE_FONT,                                 new File(\"./Fonts/AyyBoyyy.ttf\"));     Font bold = font.deriveFont(Font.BOLD, 12); \tFont plain = font.deriveFont(Font.PLAIN, 12);    } catch (FontFormatException | IOException e) {   e.printStackTrace(); }\ntry {      GraphicsEnvironment ge =           GraphicsEnvironment.getLocalGraphicsEnvironment();      ge.registerFont(Font.createFont(Font.TRUETYPE_FONT, new File(\"A.ttf\"))); } catch (IOException|FontFormatException e) {      //Handle exception } \n",
    "reg_date": "2021-10-12T12:03:35.000Z"
  },
  {
    "id": 1840,
    "keyword": null,
    "link": null,
    "title": " how to loop through an array",
    "description": "var data = [1, 2, 3, 4, 5, 6];  // traditional for loop for(let i=0; i<=data.length; i++) {   console.log(data[i])  // 1 2 3 4 5 6 }  // using for...of for(let i of data) { \tconsole.log(i) // 1 2 3 4 5 6 }  // using for...in for(let i in data) {   \tconsole.log(i) // Prints indices for array elements \tconsole.log(data[i]) // 1 2 3 4 5 6 }  // using forEach data.forEach((i) => {   console.log(i) // 1 2 3 4 5 6 }) // NOTE ->  forEach method is about 95% slower than the traditional for loop  // using map data.map((i) => {   console.log(i) // 1 2 3 4 5 6 })\nvar colors = [\"red\",\"blue\",\"green\"];  for (var i = 0; i < colors.length; i++) {      console.log(colors[i]);  }\nlet array = ['Item 1', 'Item 2', 'Item 3'];  // Here's 4 different ways for (let index = 0; index < array.length; index++) {   console.log(array[index]); }  for (let index in array) {   console.log(array[index]); }  for (let value of array) {   console.log(value); // Will log value in array }  array.forEach((value, index) => {   console.log(index); // Will log each index   console.log(value); // Will log each value });\narray = [ 1, 2, 3, 4, 5, 6 ];  for (index = 0; index < array.length; index++) {      console.log(array[index]);  } \nint[] numbers = {1,2,3,4,5}; for (int i = 0; i < numbers.length; i++) { \tSystem.out.println(i); }\nvar array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]   //loop thrugh all of the numbers of the array and print them for(let i = 0; i < array.length; i++){ \tconsole.log(array[i]); //print all the array data in the length of i }  //we can create some variable that store the array data and than display it  //using for...of  for(let data of array){ \tconsole.log(data); //print all the data that was stored in the \"data\" variable } \n",
    "reg_date": "2021-10-12T12:03:36.000Z"
  },
  {
    "id": 1841,
    "keyword": null,
    "link": null,
    "title": " how to loop through code 3 times java",
    "description": "for (int i = 0; i < 3; i++) {     // your code goes here }\nString arr[]={\"hi\",\"hello\",\"bye\"}; for (String str : arr) {          System.out.println(str); }\n",
    "reg_date": "2021-10-12T12:03:36.000Z"
  },
  {
    "id": 1842,
    "keyword": null,
    "link": null,
    "title": " how to make a basic for loop in java",
    "description": "// Starting on 0: for(int i = 0; i < 5; i++) {   System.out.println(i + 1); }  // Starting on 1: for(int i = 1; i <= 5; i++) {   System.out.println(i); }   // Both for loops will iterate 5 times, // printing the numbers 1 - 5.\nint values[] = {1,2,3,4}; for(int i = 0; i < values.length; i++) {  \tSystem.out.println(values[i]);  }\npackage myForLoops  public class forLoop { \tpublic static void main(String[] args) {      \t\tfor (int i = j; i<=k; i++)           //variable \"i\" is the value checked in loop         //variable j is the starting value for i         //variable k is where we want the loop to end         //i++ adds 1 to i each iteration of the loop until i == k \t\t{         \t//displays \"i\" \t\t\tSystem.out.println(i); \t\t}                  //this is a for loop in use         for (int i = 1; i<=10; i++) {         \tSystem.out.println(i); //i will be displayed 10 times being              //increased by 1 every time         }                  for (char ch = 'k'; ch<= 'q'; ch++) {         \t//this is a for loop with characters, it will             //display every character from 'k' to 'q'         \tSystem.out.println(ch);         }         for (int i = 10; i>=1; i++) {         \t//this loop will be infinitely run since i              //will always be greater than 1, we do not want this         \tSystem.out.println(i);         }         for (int i = 10; i>=1; i--) {          \t//this is the correct way of doing the previous code              //(if you do not want an infinite for loop)         \tSystem.out.println(i);         } \t} }\nfor loop\n",
    "reg_date": "2021-10-12T12:03:36.000Z"
  },
  {
    "id": 1843,
    "keyword": null,
    "link": null,
    "title": " how to make a bot to wait in jda",
    "description": "// Using Rest Action channel.sendMessage(\"Your Message\").queue( (m) -> m.delete().queueAfter(5, TimeUnit.SECONDS));\n",
    "reg_date": "2021-10-12T12:03:36.000Z"
  },
  {
    "id": 1844,
    "keyword": null,
    "link": null,
    "title": " how to make a calculator in java",
    "description": "import java.util.Scanner; public class Calculator {    public static void main(String[] args) {       double num1;       double num2;       double ans;       char op;       Scanner reader = new Scanner(System.in);       System.out.print(\"Enter two numbers: \");       num1 = reader.nextDouble();       num2 = reader.nextDouble();       System.out.print(\"\\nEnter an operator (+, -, *, /): \");       op = reader.next().charAt(0);       switch(op) {          case '+': ans = num1 + num2;             break;          case '-': ans = num1 - num2;             break;          case '*': ans = num1 * num2;             break;          case '/': ans = num1 / num2;             break;       default: System.out.printf(\"Error! Enter correct operator\");          return;       }       System.out.print(\"\\nThe result is given as follows:\\n\");       System.out.printf(num1 + \" \" + op + \" \" + num2 + \" = \" + ans);    } }\n// this was all coded by me, to use it get Eclipse, or IntelliJ and make a new // Java Project  package javaCode;  import java.util.Scanner;  public class testCode {  \tpublic static void main(String[] args) { \t\t \t\tScanner scan = new Scanner(System.in); \t\t \t\tSystem.out.println(\"Would you like to Add, Subtract, Divide, or Multiply?\"); \t\t \t\tString mathType = scan.next(); \t\t \t\tif (mathType.equalsIgnoreCase(\"add\")) { \t\t\tSystem.out.println(\"Whats the first number you want to add?\"); \t\t\t \t\t\tint firstNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" + \"); \t\t\tSystem.out.println(\"Enter your second number\"); \t\t\t \t\t\tint secondNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" + \" + secondNumber + \" =\"); \t\t\tSystem.out.println(firstNumber + secondNumber); \t\t\t \t\t} else if (mathType.equalsIgnoreCase(\"subtract\")) { \t\t\tSystem.out.println(\"Whats the first number you want to subtract?\"); \t\t\t \t\t\tint firstNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" - \"); \t\t\tSystem.out.println(\"Enter your second number\"); \t\t\t \t\t\tint secondNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" - \" + secondNumber + \" =\"); \t\t\tSystem.out.println(firstNumber - secondNumber); \t\t} else if (mathType.equalsIgnoreCase(\"divide\")) { \t\t\tSystem.out.println(\"Whats the first number you want to divide?\"); \t\t\t \t\t\tint firstNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" % \"); \t\t\tSystem.out.println(\"Enter your second number\"); \t\t\t \t\t\tint secondNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" % \" + secondNumber + \" =\"); \t\t\tSystem.out.println(firstNumber / secondNumber); \t\t} else if (mathType.equalsIgnoreCase(\"multiply\")){ \t\t\tSystem.out.println(\"Whats the first number you want to multiply?\"); \t\t\t \t\t\tint firstNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" x \"); \t\t\tSystem.out.println(\"Enter your second number\"); \t\t\t \t\t\tint secondNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" x \" + secondNumber + \" =\"); \t\t\tSystem.out.println(firstNumber * secondNumber); \t\t} \t\t \t}  }\nSave this file as MyCalculator.java  to compile it use      javac MyCalculator.java  to use the calcuator do this      java MyCalculator    **********************************************/   import java.awt.*;   import java.awt.event.*;   /*********************************************/      public class MyCalculator extends Frame   {      public boolean setClear=true;   double number, memValue;   char op;      String digitButtonText[] = {\"7\", \"8\", \"9\", \"4\", \"5\", \"6\", \"1\", \"2\", \"3\", \"0\", \"+/-\", \".\" };   String operatorButtonText[] = {\"/\", \"sqrt\", \"*\", \"%\", \"-\", \"1/X\", \"+\", \"=\" };   String memoryButtonText[] = {\"MC\", \"MR\", \"MS\", \"M+\" };   String specialButtonText[] = {\"Backspc\", \"C\", \"CE\" };      MyDigitButton digitButton[]=new MyDigitButton[digitButtonText.length];   MyOperatorButton operatorButton[]=new MyOperatorButton[operatorButtonText.length];   MyMemoryButton memoryButton[]=new MyMemoryButton[memoryButtonText.length];   MySpecialButton specialButton[]=new MySpecialButton[specialButtonText.length];      Label displayLabel=new Label(\"0\",Label.RIGHT);   Label memLabel=new Label(\" \",Label.RIGHT);      final int FRAME_WIDTH=325,FRAME_HEIGHT=325;   final int HEIGHT=30, WIDTH=30, H_SPACE=10,V_SPACE=10;   final int TOPX=30, TOPY=50;   ///////////////////////////   MyCalculator(String frameText)//constructor   {   super(frameText);      int tempX=TOPX, y=TOPY;   displayLabel.setBounds(tempX,y,240,HEIGHT);   displayLabel.setBackground(Color.BLUE);   displayLabel.setForeground(Color.WHITE);   add(displayLabel);      memLabel.setBounds(TOPX,  TOPY+HEIGHT+ V_SPACE,WIDTH, HEIGHT);   add(memLabel);      // set Co-ordinates for Memory Buttons   tempX=TOPX;    y=TOPY+2*(HEIGHT+V_SPACE);   for(int i=0; i<memoryButton.length; i++)   {   memoryButton[i]=new MyMemoryButton(tempX,y,WIDTH,HEIGHT,memoryButtonText[i], this);   memoryButton[i].setForeground(Color.RED);   y+=HEIGHT+V_SPACE;   }      //set Co-ordinates for Special Buttons   tempX=TOPX+1*(WIDTH+H_SPACE); y=TOPY+1*(HEIGHT+V_SPACE);   for(int i=0;i<specialButton.length;i++)   {   specialButton[i]=new MySpecialButton(tempX,y,WIDTH*2,HEIGHT,specialButtonText[i], this);   specialButton[i].setForeground(Color.RED);   tempX=tempX+2*WIDTH+H_SPACE;   }      //set Co-ordinates for Digit Buttons   int digitX=TOPX+WIDTH+H_SPACE;   int digitY=TOPY+2*(HEIGHT+V_SPACE);   tempX=digitX;  y=digitY;   for(int i=0;i<digitButton.length;i++)   {   digitButton[i]=new MyDigitButton(tempX,y,WIDTH,HEIGHT,digitButtonText[i], this);   digitButton[i].setForeground(Color.BLUE);   tempX+=WIDTH+H_SPACE;   if((i+1)%3==0){tempX=digitX; y+=HEIGHT+V_SPACE;}   }      //set Co-ordinates for Operator Buttons   int opsX=digitX+2*(WIDTH+H_SPACE)+H_SPACE;   int opsY=digitY;   tempX=opsX;  y=opsY;   for(int i=0;i<operatorButton.length;i++)   {   tempX+=WIDTH+H_SPACE;   operatorButton[i]=new MyOperatorButton(tempX,y,WIDTH,HEIGHT,operatorButtonText[i], this);   operatorButton[i].setForeground(Color.RED);   if((i+1)%2==0){tempX=opsX; y+=HEIGHT+V_SPACE;}   }      addWindowListener(new WindowAdapter()   {   public void windowClosing(WindowEvent ev)   {System.exit(0);}   });      setLayout(null);   setSize(FRAME_WIDTH,FRAME_HEIGHT);   setVisible(true);   }   //////////////////////////////////   static String getFormattedText(double temp)   {   String resText=\"\"+temp;   if(resText.lastIndexOf(\".0\")>0)       resText=resText.substring(0,resText.length()-2);   return resText;  \npackage main;  import java.util.Scanner;  public class calculator {      public static void greetings(){         System.out.println(\"Hi welcome to the calculator made by Pepa pig made in java! :D\");     }      public static void instruction(){         System.out.println(\"Hi welcome to the calculator made by Pepa pig made in java! :D\");     }      public static void calculator(){         Scanner keyboardInput = new Scanner(System.in);         String calculator;          do {             System.out.print(\"Enter your first digit: \");             double num1 = keyboardInput.nextDouble();              System.out.print(\"Enter your operator: \");             String op = keyboardInput.next();              System.out.print(\"Enter your second digit: \");             double num2 = keyboardInput.nextDouble();              System.out.print(\"= \");              if (op.equals(\"+\")){                 System.out.print(num1 + num2);                 System.out.println(\"\\nYou were adding\");                 System.out.println(\"How I know that cause I have big brain and a smart programmer ;)\");             }else if (op.equals(\"-\")){                 System.out.print(num1 - num2);                 System.out.println(\"\\nYou were subtracting\");                 System.out.println(\"How I know that cause I have big brain and a smart programmer ;)\");             }else if (op.equals(\"*\")){                 System.out.print(num1 * num2);                 System.out.println(\"\\nYou were multiplying\");                 System.out.println(\"How I know that cause I have big brain and a smart programmer ;)\");             }else if (op.equals(\"/\")){                 System.out.print(num1 / num2);                 System.out.println(\"\\nYou were dividing\");                 System.out.println(\"How I know that cause I have big brain and a smart programmer ;)\");             }else if (op.equals(\"%\")){                 System.out.print(num1 % num2);                 System.out.println(\"\\nYou were remanding\");                 System.out.println(\"How I know that cause I have big brain and a smart programmer ;)\");             }else{                 System.out.println(\"Invalid operator\");             }             System.out.print(\"Would you like to restart the calculator? (y or n): \");             calculator = keyboardInput.next();         }         while (calculator.equals(\"y\"));          if (calculator.equals(\"n\")){             System.out.println(\"Leave then kiddo ;-;\");         }     }       public static void main(String[] args) {         greetings();         instruction();         calculator();     } }\nimport java.util.Scanner;  class Main {   public static void main(String[] args) {      char operator;     Double number1, number2, result;      // create an object of Scanner class     Scanner input = new Scanner(System.in);      // ask users to enter operator     System.out.println(\"Choose an operator: +, -, *, or /\");     operator = input.next().charAt(0);      // ask users to enter numbers     System.out.println(\"Enter first number\");     number1 = input.nextDouble();      System.out.println(\"Enter second number\");     number2 = input.nextDouble();      switch (operator) {        // performs addition between numbers       case '+':         result = number1 + number2;         System.out.println(number1 + \" + \" + number2 + \" = \" + result);         break;        // performs subtraction between numbers       case '-':         result = number1 - number2;         System.out.println(number1 + \" - \" + number2 + \" = \" + result);         break;        // performs multiplication between numbers       case '*':         result = number1 * number2;         System.out.println(number1 + \" * \" + number2 + \" = \" + result);         break;        // performs division between numbers       case '/':         result = number1 / number2;         System.out.println(number1 + \" / \" + number2 + \" = \" + result);         break;        default:         System.out.println(\"Invalid operator!\");         break;     }      input.close();   } }\nimport java.util.Scanner;   public class Calculator {       public static void main(String[] args) {          Scanner kb = new Scanner(System.in);          System.out.println(\"Simple Calculator\");          System.out.println(\"\\nHere are your options:\");         System.out.println(\"\\n1. Addition\");         System.out.println(\"2. Subtraction\");         System.out.println(\"3. Division\");         System.out.println(\"4. Multiplication\");          System.out.print(\"\\nWhat would you like to do?: \");         int choice = kb.nextInt();         System.out.println();           if (choice == 1){             addition();         }         else if (choice == 2){             subtraction();         }         else if (choice == 3){             division();         }         else if (choice == 4){             multiplication();         }          System.out.println();         kb.close();     }      public static void addition(){          int nOne, nTwo;         Scanner kb = new Scanner(System.in);          System.out.println(\"Addition\");          System.out.print(\"\\nFirst Number: \");         nOne = kb.nextInt();          System.out.print(\"\\nSecond Number: \");         nTwo = kb.nextInt();          kb.close();         System.out.println(\"\\nSum: \" + nOne + \" + \" + nTwo + \" = \" + (nOne + nTwo));     }      public static void subtraction(){         int nOne, nTwo;         Scanner kb = new Scanner(System.in);          System.out.println(\"Subtraction\");          System.out.print(\"\\nFirst Number: \");         nOne = kb.nextInt();          System.out.print(\"\\nSecond Number: \");         nTwo = kb.nextInt();          kb.close();         System.out.println(\"\\nSum: \" + nOne + \" - \" + nTwo + \" = \" + (nOne - nTwo));     }      public static void division(){         int nOne, nTwo;         Scanner kb = new Scanner(System.in);          System.out.println(\"Division\");          System.out.print(\"\\nFirst Number: \");         nOne = kb.nextInt();          System.out.print(\"\\nSecond Number: \");         nTwo = kb.nextInt();          kb.close();         System.out.println(\"\\nSum: \" + nOne + \" / \" + nTwo + \" = \" + (nOne / nTwo));     }      public static void multiplication(){         int nOne, nTwo;         Scanner kb = new Scanner(System.in);          System.out.println(\"Multiplication\");          System.out.print(\"\\nFirst Number: \");         nOne = kb.nextInt();          System.out.print(\"\\nSecond Number: \");         nTwo = kb.nextInt();          kb.close();         System.out.println(\"\\nSum: \" + nOne + \" x \" + nTwo + \" = \" + (nOne * nTwo));     } }\n",
    "reg_date": "2021-10-12T12:03:36.000Z"
  },
  {
    "id": 1845,
    "keyword": null,
    "link": null,
    "title": " how to make a calculator using switch case in java",
    "description": "/* Create Switch cases */ Scanner sc= new Scanner(System.in); int firstNum= sc.nextInt(); int secondNum= sc.nextInt(); System.out.println(\"Enter an operator (+, -, *, /):\"); char operator= sc.next().chartAt(0); double result=0; switch(operator){   case \"+\":     result+= firstNum+ secondNum;     break;   case \"-\":     result+= firstNum-secondNum;     break;   case \"*\":     result+= firstNum*secondNum;     break;   case \"/\":     result+= firstNum/secondNum;     break; }\n",
    "reg_date": "2021-10-12T12:03:36.000Z"
  },
  {
    "id": 1846,
    "keyword": null,
    "link": null,
    "title": " how to make a char uppercase in java",
    "description": "char q = Character.toUpperCase('d');\n",
    "reg_date": "2021-10-12T12:03:36.000Z"
  },
  {
    "id": 1847,
    "keyword": null,
    "link": null,
    "title": " how to make a copy of an array java",
    "description": "// Shallow copy int[] src = {1,2,3,4,5}; int[] dst = Arrays.copyOf(src, src.length);  // Deep copy int[] dst2 = new int[src.length]; for(int i = 0; i < src.length; i++){ \tdst2[i] = src[i]; }\nint[] src  = new int[]{1,2,3,4,5}; int[] dest = new int[5];  System.arraycopy( src, 0, dest, 0, src.length );\nint a[] = {1, 8, 3};     // Copy elements of a[] to b[]  int b[] = a.clone();\nint[] a = {1, 2, 3};       int[] b = a.clone();\n",
    "reg_date": "2021-10-12T12:03:36.000Z"
  },
  {
    "id": 1848,
    "keyword": null,
    "link": null,
    "title": " how to make a custom exception in java",
    "description": "public class CustomException extends Exception {      public CustomException(String errorMessage) {         super(errorMessage);     } }\n",
    "reg_date": "2021-10-12T12:03:36.000Z"
  },
  {
    "id": 1849,
    "keyword": null,
    "link": null,
    "title": " how to make a dictionary in java",
    "description": "Map<String, String> dictionary = new HashMap<String, String>();  dictionary.put(\"key\", \"value\"); String value = dictionary.get(\"key\");\nMap<String, String> map = new HashMap<String, String>(); map.put(\"dog\", \"type of animal\"); System.out.println(map.get(\"dog\"));\n",
    "reg_date": "2021-10-12T12:03:36.000Z"
  },
  {
    "id": 1850,
    "keyword": null,
    "link": null,
    "title": " how to make a for loop increment by 2 in java",
    "description": "for(j = 0; j<=90; j+2){}\n",
    "reg_date": "2021-10-12T12:03:37.000Z"
  },
  {
    "id": 1851,
    "keyword": null,
    "link": null,
    "title": " how to make a loop in java",
    "description": "for(int i = 0; i < 10; i++) {   //do something      //NOTE: the integer name does not need to be i, and the loop   //doesn't need to start at 0. In addition, the 10 can be replaced   //with any value. In this case, the loop will run 10 times.   //Finally, the incrementation of i can be any value, in this case,   //i increments by one. To increment by 2, for example, you would   //use \"i += 2\", or \"i = i+2\" }\n// Starting on 0: for(int i = 0; i < 5; i++) {   System.out.println(i + 1); }  // Starting on 1: for(int i = 1; i <= 5; i++) {   System.out.println(i); }   // Both for loops will iterate 5 times, // printing the numbers 1 - 5.\nint values[] = {1,2,3,4}; for(int i = 0; i < values.length; i++) {  \tSystem.out.println(values[i]);  }\nfor (int i = 0; i < 3; i++) {} \nfor (int i = 0; i < 5; i++) {   System.out.println(i); } \n// Starting on 0: for(int i = 0; i < 5; i++) {   System.out.println(i + 1); }  // Starting on 1: for(int i = 1; i <= 5; i++) {   System.out.println(i); } \n",
    "reg_date": "2021-10-12T12:03:37.000Z"
  },
  {
    "id": 1852,
    "keyword": null,
    "link": null,
    "title": " how to make a new arraylist java",
    "description": "ArrayList<Integer> [] myList = (ArrayList<Integer>[]) new ArrayList[4];\nArrayList<Integer> integerArray = new ArrayList<Integer>(); ArrayList<String> stringArray = new ArrayList<String>(); ArrayList<Double> doubleArray = new ArrayList<Double>(); //... keep replacing what is inside the <> with the appropriate //data type\nArrayList<Type> name = new ArrayList<Type>();\nList<Integer> list = new ArrayList<>();\n",
    "reg_date": "2021-10-12T12:03:37.000Z"
  },
  {
    "id": 1853,
    "keyword": null,
    "link": null,
    "title": " how to make a string java",
    "description": "String newString = \"Hello World\";\nString stringName = \"your string content\";\nStringBuilder str = new StringBuilder(); str.append(\"GFG\");\n//In Javascript, a string is declared using double quotes \"\". It is made up by character values. //For eg: string = \"hello\".\n",
    "reg_date": "2021-10-12T12:03:37.000Z"
  },
  {
    "id": 1854,
    "keyword": null,
    "link": null,
    "title": " how to make abstract method in java",
    "description": "Sometimes we may come across a situation where we cannot provide  implementation to all the methods in a class. We want to leave the  implementation to a class that extends it. In such case we declare a class as abstract.To make a class abstract we use key word abstract.  Any class that contains one or more abstract methods is declared as abstract.  If we don&rsquo;t declare class as abstract which contains abstract methods we get  compile time error.      1)Abstract classes cannot be instantiated   2)An abstarct classes contains abstract method, concrete methods or both.   3)Any class which extends abstarct class must override all methods of abstract     class   4)An abstarct class can contain either 0 or more abstract method.    \npublic abstract class Account {\t\t//abstract class //perent class     protected int accountNumber;     protected Customer customerObj;     protected double balance;   \t//constructor   \tpublic Account(int saccountNumber, Customer scustomerObj,double sbalance){         accountNumber = saccountNumber;         customerObj = scustomerObj;         balance = sbalance;     }   \t// abstract Function     public abstract boolean withdraw(double amount);  }     public class SavingsAccount extends Account { // child class     private double minimumBalance;   \t// constructor     public SavingsAccount(int saccountNumber, Customer scustomerObj, double sbalance, double sminimumBalance) {         super(saccountNumber, scustomerObj, sbalance);         minimumBalance = sminimumBalance;     } \t// Implementation of abstract function in child class     public boolean withdraw(double amount) {         if (balance() > minimumBalance && balance() - amount > minimumBalance) {             super.setBalance(balance() - amount);             return true;         } else {             return false;         }     } }  \nabstract class scratch{    }\n",
    "reg_date": "2021-10-12T12:03:37.000Z"
  },
  {
    "id": 1855,
    "keyword": null,
    "link": null,
    "title": " how to make an array of arraylists in java",
    "description": "ArrayList<Integer> [] myList = (ArrayList<Integer>[]) new ArrayList[4];\nArrayList<Integer> integerArray = new ArrayList<Integer>(); ArrayList<String> stringArray = new ArrayList<String>(); ArrayList<Double> doubleArray = new ArrayList<Double>(); //... keep replacing what is inside the <> with the appropriate //data type\n",
    "reg_date": "2021-10-12T12:03:37.000Z"
  },
  {
    "id": 1856,
    "keyword": null,
    "link": null,
    "title": " how to make an arraylist java",
    "description": "ArrayList<Integer> integerArray = new ArrayList<Integer>(); ArrayList<String> integerArray = new ArrayList<String>(); ArrayList<Double> integerArray = new ArrayList<Double>(); //... keep replacing what is inside the <> with the appropriate //data type \nArrayList<Integer> integerArray = new ArrayList<Integer>(); ArrayList<String> stringArray = new ArrayList<String>(); ArrayList<Double> doubleArray = new ArrayList<Double>(); //... keep replacing what is inside the <> with the appropriate //data type\nArrayList<Type> name = new ArrayList<Type>();\nList<Integer> list = new ArrayList<>();\n//Create the Arraylist variable: . Replace the T with the type of  //data to be stored in the list. ArrayList<T> exampleList = new ArrayList<>(); //You can now perform operations on this ArrayList\n",
    "reg_date": "2021-10-12T12:03:37.000Z"
  },
  {
    "id": 1857,
    "keyword": null,
    "link": null,
    "title": " how to make an int into a string java",
    "description": "int i=10;   String s=String.valueOf(i);\nInteger.toString(int)\n",
    "reg_date": "2021-10-12T12:03:37.000Z"
  },
  {
    "id": 1858,
    "keyword": null,
    "link": null,
    "title": " how to make an invisiblke button in swing",
    "description": "//Invisible/Transparent Button in swing button.setOpaque(false); button.setContentAreaFilled(false); button.setBorderPainted(false);\n",
    "reg_date": "2021-10-12T12:03:37.000Z"
  },
  {
    "id": 1859,
    "keyword": null,
    "link": null,
    "title": " how to make an objec tjava",
    "description": "class Puppy() { \tString name; \tint age;        \tPuppy(String puppy_name, int puppy_age) {     \tname = puppy_name;    \t\tage = puppy_age;  \t}      \tpublic static void main(String[] args) {      \tPuppy rex = new Puppy(\"rex\",4);      }    }\n",
    "reg_date": "2021-10-12T12:03:38.000Z"
  },
  {
    "id": 1860,
    "keyword": null,
    "link": null,
    "title": " how to make background image transparent in android studio",
    "description": "android:backgroundTint=\"#80FFFFFF\" android:backgroundTintMode=\"src_over\" >>for setting background as transparent in android studio(only bg) android:alpha=\"0.4\" >>for all views\n",
    "reg_date": "2021-10-12T12:03:38.000Z"
  },
  {
    "id": 1861,
    "keyword": null,
    "link": null,
    "title": " how to make edittext not editable in android studio",
    "description": "<EditText android:id=\"@+id/outputResult\"           android:inputType=\"text\"           android:editable=\"false\"           android:layout_width=\"fill_parent\"           android:layout_height=\"wrap_content\"           android:text=\"@string/result\" /> \n",
    "reg_date": "2021-10-12T12:03:38.000Z"
  },
  {
    "id": 1862,
    "keyword": null,
    "link": null,
    "title": " how to make int array java android",
    "description": "int[] myIntArray = new int[3]; int[] myIntArray = {1, 2, 3}; int[] myIntArray = new int[]{1, 2, 3};\n",
    "reg_date": "2021-10-12T12:03:38.000Z"
  },
  {
    "id": 1863,
    "keyword": null,
    "link": null,
    "title": " how to make java list",
    "description": "//Creating arraylist example  ArrayList<String> list = new ArrayList<String>();     //Adding objects in arraylist  list.add(\"Mango\");     list.add(\"Banana\");     //Change the element (index,\"new value\") list.set(1,\"Dates\");   //Return the 2nd element, because index starts from 0 System.out.println(\"Returning element: \" + list.get(1)); \n",
    "reg_date": "2021-10-12T12:03:38.000Z"
  },
  {
    "id": 1864,
    "keyword": null,
    "link": null,
    "title": " how to make javafx full screen default",
    "description": "stage.setMaximized(boolean)\n",
    "reg_date": "2021-10-12T12:03:38.000Z"
  },
  {
    "id": 1865,
    "keyword": null,
    "link": null,
    "title": " how to make jframe visible",
    "description": "frame.setVisible(true)\n",
    "reg_date": "2021-10-12T12:03:38.000Z"
  },
  {
    "id": 1866,
    "keyword": null,
    "link": null,
    "title": " how to make nice gui java swing",
    "description": "import javax.swing.*; class gui{     public static void main(String args[]){        JFrame frame = new JFrame(\"My First GUI\");        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);        frame.setSize(300,300);        JButton button = new JButton(\"Press\");        frame.getContentPane().add(button); // Adds Button to content pane of frame        frame.setVisible(true);     } } \n",
    "reg_date": "2021-10-12T12:03:38.000Z"
  },
  {
    "id": 1867,
    "keyword": null,
    "link": null,
    "title": " how to make one java class inherit from another",
    "description": "public class Bicycle {              // the Bicycle class has three fields     public int cadence;     public int gear;     public int speed;              // the Bicycle class has one constructor     public Bicycle(int startCadence, int startSpeed, int startGear) {         gear = startGear;         cadence = startCadence;         speed = startSpeed;     }              // the Bicycle class has four methods     public void setCadence(int newValue) {         cadence = newValue;     }              public void setGear(int newValue) {         gear = newValue;     }              public void applyBrake(int decrement) {         speed -= decrement;     }              public void speedUp(int increment) {         speed += increment;     }          } \n",
    "reg_date": "2021-10-12T12:03:38.000Z"
  },
  {
    "id": 1868,
    "keyword": null,
    "link": null,
    "title": " how to make phone vibrate android studio",
    "description": "// Vibrate for 150 milliseconds private void shakeItBaby() {     if (Build.VERSION.SDK_INT >= 26) {         ((Vibrator) getSystemService(VIBRATOR_SERVICE)).vibrate(VibrationEffect.createOneShot(150, VibrationEffect.DEFAULT_AMPLITUDE));     } else {         ((Vibrator) getSystemService(VIBRATOR_SERVICE)).vibrate(150);     } } \n",
    "reg_date": "2021-10-12T12:03:38.000Z"
  },
  {
    "id": 1869,
    "keyword": null,
    "link": null,
    "title": " how to make plugin wait spigot",
    "description": "Bukkit.getScheduler().runTaskLater(plugin, () -> {     // code }, 20L); // amount to wait in ticks , 20 ticks = 1 second\n",
    "reg_date": "2021-10-12T12:03:39.000Z"
  },
  {
    "id": 1870,
    "keyword": null,
    "link": null,
    "title": " how to make priority queue of pairs in java",
    "description": "PriorityQueue<Pair<Integer,Integer> > pq=                 new PriorityQueue<Pair<Integer,Integer>>(n, Comparator.comparing(Pair::getKey)); \n",
    "reg_date": "2021-10-12T12:03:39.000Z"
  },
  {
    "id": 1871,
    "keyword": null,
    "link": null,
    "title": " how to make stage dragable in javafx",
    "description": "    private double x = 0;     private double y = 0;      private void makeCanDrag()\t//make sure this method is called at the start.     {          parent.setOnMousePressed(new EventHandler<MouseEvent>() {             @Override             public void handle(MouseEvent event) {                 x = event.getSceneX();                 y = event.getSceneY();             }         });          parent.setOnMouseDragged(new EventHandler<MouseEvent>() {             @Override             public void handle(MouseEvent event) {                 stage = (Stage) ((Node) event.getSource()).getScene().getWindow();                 stage.setX(event.getSceneX() - x);                 stage.setY(event.getSceneY() - y);                 stage.setOpacity(.8f);             }         });         parent.setOnDragDone(event -> {             stage.setOpacity(1.0f);         });         parent.setOnMouseReleased(event -> {             stage.setOpacity(1.0f);         });     }\n",
    "reg_date": "2021-10-12T12:03:39.000Z"
  },
  {
    "id": 1872,
    "keyword": null,
    "link": null,
    "title": " how to maximize a web page",
    "description": "driver.manage().window().maximize();\n",
    "reg_date": "2021-10-12T12:03:39.000Z"
  },
  {
    "id": 1873,
    "keyword": null,
    "link": null,
    "title": " how to maximize window in selenium java",
    "description": "driver.manage().window().maximize();\n",
    "reg_date": "2021-10-12T12:03:39.000Z"
  },
  {
    "id": 1874,
    "keyword": null,
    "link": null,
    "title": " how to minimize jframe in java",
    "description": "frame.setState(Frame.ICONIFIED);\n",
    "reg_date": "2021-10-12T12:03:39.000Z"
  },
  {
    "id": 1875,
    "keyword": null,
    "link": null,
    "title": " how to move a marker on google maps in android studio",
    "description": "    public void animateMarker(final Marker marker, final LatLng toPosition,             final boolean hideMarker) {         final Handler handler = new Handler();         final long start = SystemClock.uptimeMillis();         Projection proj = mGoogleMapObject.getProjection();         Point startPoint = proj.toScreenLocation(marker.getPosition());         final LatLng startLatLng = proj.fromScreenLocation(startPoint);         final long duration = 500;          final Interpolator interpolator = new LinearInterpolator();          handler.post(new Runnable() {             @Override             public void run() {                 long elapsed = SystemClock.uptimeMillis() - start;                 float t = interpolator.getInterpolation((float) elapsed                         / duration);                 double lng = t * toPosition.longitude + (1 - t)                         * startLatLng.longitude;                 double lat = t * toPosition.latitude + (1 - t)                         * startLatLng.latitude;                 marker.setPosition(new LatLng(lat, lng));                  if (t < 1.0) {                     // Post again 16ms later.                     handler.postDelayed(this, 16);                 } else {                     if (hideMarker) {                         marker.setVisible(false);                     } else {                         marker.setVisible(true);                     }                 }             }         });     }\n",
    "reg_date": "2021-10-12T12:03:39.000Z"
  },
  {
    "id": 1876,
    "keyword": null,
    "link": null,
    "title": " how to move from one activity to another in android studio on button click",
    "description": "// also use set onclick listener  public void next(View view) {         Intent intent = new Intent(this,Activity2.class);         startActivity(intent);    } \n private Button button;      @Override     protected void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         setContentView(R.layout.activity_main4);         button = (Button)findViewById(R.id.button7);          button.setOnClickListener(new View.OnClickListener() {             @Override             public void onClick(View v) {                 openInsideActivity4();             }         });     }     public void openInsideActivity4()     {         Intent intent = new Intent(this,InsideActivity4.class);         startActivity(intent);     }\n",
    "reg_date": "2021-10-12T12:03:39.000Z"
  },
  {
    "id": 1877,
    "keyword": null,
    "link": null,
    "title": " how to normalize a vector in libgdx",
    "description": "vector.nor();\n",
    "reg_date": "2021-10-12T12:03:39.000Z"
  },
  {
    "id": 1878,
    "keyword": null,
    "link": null,
    "title": " how to not open key board on start",
    "description": "getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN);\n",
    "reg_date": "2021-10-12T12:03:39.000Z"
  },
  {
    "id": 1879,
    "keyword": null,
    "link": null,
    "title": " how to open a webpage with java",
    "description": "/**  * author Scratchy (Twitter @S_cratchy)  * Just import stuff  */ import java.awt.Desktop; import java.io.IOException; import java.net.URI; import java.util.logging.Level; import java.util.logging.Logger;   /** This you put in your button or whatever  */ String url_open =\"HTTPS://www.google.com\"; try { java.awt.Desktop.getDesktop().browse(java.net.URI.create(url_open)); } catch (IOException ex) { Logger.getLogger(Test.class.getName()).log(Level.SEVERE, null, ex); }\n",
    "reg_date": "2021-10-12T12:03:40.000Z"
  },
  {
    "id": 1880,
    "keyword": null,
    "link": null,
    "title": " how to open activity in android studio",
    "description": "Intent intent = new Intent(this, DisplayMessageActivity.class);         intent.putExtra(key:,value:);         startActivity(intent);\n",
    "reg_date": "2021-10-12T12:03:40.000Z"
  },
  {
    "id": 1881,
    "keyword": null,
    "link": null,
    "title": " how to open an activity from a fragment",
    "description": "Button btn1 = (Button) thisLayout             .findViewById(R.id.btnDb1);      btn1.setOnClickListener(new OnClickListener() {          @Override         public void onClick(View v) {             // TODO Auto-generated method stub             Intent intent = new Intent(getActivity(), otherActivity.class);             ((MainActivity) getActivity()).startActivity(intent);          }     });      return thisLayout; }\n",
    "reg_date": "2021-10-12T12:03:40.000Z"
  },
  {
    "id": 1882,
    "keyword": null,
    "link": null,
    "title": " how to operate on values from different classes in java",
    "description": "class A { int a = 10; } public class B{ public static void main (String args[]){ A a = new A(); System.out.println(\"I live in A \" + a.a); }\n",
    "reg_date": "2021-10-12T12:03:40.000Z"
  },
  {
    "id": 1883,
    "keyword": null,
    "link": null,
    "title": " how to output sum of even numbers in java between two user values",
    "description": "//import classes import java.util.*;  public class chapter5no9 {     static Scanner console = new Scanner(System.in);      public static void main(String[] args)     {      //Part A     int firstNum;     int secondNum;     int sumEven;      System.out.println(\"Please enter an integer: \");     firstNum = console.nextInt();      System.out.println(\"Please enter another integer less than the first integer: \");     secondNum = console.nextInt();      //Part B     if (firstNum < secondNum)     {         System.out.print(\"Your second number is greater than the first.  So Please re-enter: \");         secondNum = console.nextInt();     }     else     {         System.out.print(\"Odd Numbers: \");         firstNum++;         while (firstNum > secondNum)         {             if (secondNum % 2 != 0)             {                 System.out.print(\" \" + secondNum);             }             secondNum++;         }          System.out.println();         System.out.print(\"Sum of Even Numbers: \");         firstNum++;         while (firstNum > secondNum)         {             if (secondNum % 2 != 0)             {                 System.out.print(\" \" + secondNum);             }             secondNum++;         }     } } \n",
    "reg_date": "2021-10-12T12:03:40.000Z"
  },
  {
    "id": 1884,
    "keyword": null,
    "link": null,
    "title": " how to parse a string into a number in java",
    "description": "String toBeParsed = \"15\"; int parsedString = Integer.parseInt(String.valueOf(toBeParsed)); /*this makes the integer value of parsedString the number held in the string toBeParsed*/ /*Side note: you will have to import java.lang.String to be able to use Integer.parseInt() and String.valeOf() */\n",
    "reg_date": "2021-10-12T12:03:40.000Z"
  },
  {
    "id": 1885,
    "keyword": null,
    "link": null,
    "title": " how to pass enum in postman body",
    "description": "export enum TestStatus {     allCandidates,     completedTest,     expiredTest,     blockedTest } {     \"TestStatus\": \"expiredTest\" }\n",
    "reg_date": "2021-10-12T12:03:40.000Z"
  },
  {
    "id": 1886,
    "keyword": null,
    "link": null,
    "title": " how to perform crud operations in spring boot",
    "description": "package com.example.demo.com.example.demo.resource;  import java.util.List; import java.util.Optional;  import org.springframework.beans.factory.annotation.Autowired; import org.springframework.web.bind.annotation.DeleteMapping; import org.springframework.web.bind.annotation.GetMapping; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.PostMapping; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.ResponseBody; import org.springframework.web.bind.annotation.RestController;  import com.example.demo.com.example.demo.model.Student; import com.example.demo.com.example.demo.repository.StudentRep;  @RestController @RequestMapping(value = \"/webapi\") public class StudentResource { \t \t@Autowired \tprivate StudentRep studentRep; \t \t@RequestMapping(method = RequestMethod.GET, value = \"/getstudents\") \tpublic List<Student> getStudents() { \t\t \t\treturn studentRep.findAll(); \t\t \t} \t \t@RequestMapping(method = RequestMethod.POST, value = \"/addstudent\") \tpublic String addStudent(@RequestBody Student student) {  \t\tstudentRep.save(student); \t\treturn \"Added Student : \"+student.getName(); \t\t \t} \t \t@RequestMapping(method = RequestMethod.GET,value = \"/getstudents/{id}\") \tpublic Optional<Student> getStudent(@PathVariable String id) { \t\t \t\treturn studentRep.findById(id); \t\t \t} \t \t@RequestMapping(method = RequestMethod.POST, value = \"/deletestudent/{id}\") \tpublic String deleteStudent(@PathVariable String id) { \t\t \t\tstudentRep.deleteById(id); \t\t \t\treturn \"Record Deleted :\"+ id; \t\t \t} \t \t@RequestMapping(method = RequestMethod.PUT, value = \"/updatestudent\") \tpublic String updateStudent(@RequestBody Student student) {  \t\tstudentRep.findById(student.getId()); \t\t \t\tif(studentRep.existsById(student.getId())) { \t\t\tstudentRep.save(student); \t\t\treturn \"Record updated\"; \t\t} \t\telse { \t\t\treturn \"No record\"; \t\t} \t\t \t\t \t} \t \t } \n",
    "reg_date": "2021-10-12T12:03:40.000Z"
  },
  {
    "id": 1887,
    "keyword": null,
    "link": null,
    "title": " how to play audio files java",
    "description": "File audioFile = new File(\"ur file's path\").getAbsoluteFile(); AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(audioFile); Clip clip = AudioSystem.getClip(); clip.open(audioInputStream); //Plays audio once clip.start(); //Plays the audio in a loop clip.loop(Clip.LOOP_CONTINUOUSLY); //Stop the audio clip.stop(); //optional clip.close();\n",
    "reg_date": "2021-10-12T12:03:40.000Z"
  },
  {
    "id": 1888,
    "keyword": null,
    "link": null,
    "title": " how to preset a list java",
    "description": "        List<String> aList = Arrays.asList(\"Geeks\", \"for\",                       \"GeeksQuiz\", \"GeeksforGeeks\", \"GFG\"); \n",
    "reg_date": "2021-10-12T12:03:40.000Z"
  },
  {
    "id": 1889,
    "keyword": null,
    "link": null,
    "title": " how to print  a 2d array in java",
    "description": "for (int row = 0; row < arr.length; row++)//Cycles through rows {   for (int col = 0; col < arr[row].length; col++)//Cycles through columns   {     System.out.printf(\"]\", arr[row][col]); //change the ] to however much space you want   }   System.out.println(); //Makes a new row } //This allows you to print the array as matrix\nint[][] array = new int[rows][columns]; System.out.println(Arrays.deepToString(array)); \n",
    "reg_date": "2021-10-12T12:03:41.000Z"
  },
  {
    "id": 1890,
    "keyword": null,
    "link": null,
    "title": " how to print a matrix in java",
    "description": "for (int row = 0; row < arr.length; row++)//Cycles through rows {   for (int col = 0; col < arr[row].length; col++)//Cycles through columns   {     System.out.printf(\"]\", arr[row][col]); //change the ] to however much space you want   }   System.out.println(); //Makes a new row } //This allows you to print the array as matrix\nint[][] array = new int[rows][columns]; System.out.println(Arrays.deepToString(array)); \npublic static void printMatrix(Object[][] matrix){         for (int i = 0; i < 3; i++) {             for (int j = 0; j < 3; j++) {                 System.out.print(matrix[i][j] + \" \");             }             System.out.println();         }     }\n",
    "reg_date": "2021-10-12T12:03:42.000Z"
  },
  {
    "id": 1891,
    "keyword": null,
    "link": null,
    "title": " how to print an array in java",
    "description": "import java.util.Arrays;  class Scratch{     public static void main(String[] args){         int[] arr = new int[3];         System.out.println( Arrays.toString( arr ));       \t//prints [0, 0, 0]     } }\nimport java.util.Arrays;  public class Array {      public static void main(String[] args) {         int[] array = {1, 2, 3, 4, 5};          System.out.println(Arrays.toString(array));     } }\nString[] array = new String[] {\"John\", \"Mary\", \"Bob\"}; System.out.println(Arrays.toString(array)); // [John, Mary, Bob]\nimport java.util.Arrays; //How to print Arrays in Java public class Printarray{        public static void main(String[] args){            String[] arr = new String[]{\"Mumbai\",\"Delhi\",\"Kolkata\",\"Chennai\"};          //Using for loop;     for(int i=0; i<arr.length;i++){       System.out.println(arr[i]);     }          //Using for-each loop;     for(String city:arr){       System.out.println(city);     }        //Using Arrays.toString() method     System.out.println(Arrays.toString(arr));                //Using Arrays.deepToString() method its also converting multidimensional arrays to strings.          System.out.println(Arrays.deepToString(arr));            //Using Array as list method     System.out.println(Arrays.asList(arr));          }    }\nSystem.out.println(Arrays.toString(arr));\npublic class Array {      public static void main(String[] args) {         int[] array = {1, 2, 3, 4, 5}; //Your array          for (int element: array) { //Advanced For Loop (For each)             System.out.println(element); //print each element of            \t\t\t\t\t\t\t     //the array for each iteration         }     } }\n",
    "reg_date": "2021-10-12T12:03:42.000Z"
  },
  {
    "id": 1892,
    "keyword": null,
    "link": null,
    "title": " how to print array",
    "description": "//print and create new line after System.out.println(\"text\"); System.out.println(String); //You can use any variable type, not just strings, although //they are the most common  //Print without creating a new line System.out.print(\"text\"); System.out.print(String);\nimport java.util.Arrays;  class Scratch{     public static void main(String[] args){         int[] arr = new int[3];         System.out.println( Arrays.toString( arr ));       \t//prints [0, 0, 0]     } }\nimport java.util.Arrays;  public class Array {      public static void main(String[] args) {         int[] array = {1, 2, 3, 4, 5};          System.out.println(Arrays.toString(array));     } }\nString[] array = new String[] {\"John\", \"Mary\", \"Bob\"}; System.out.println(Arrays.toString(array)); // [John, Mary, Bob]\nSystem.out.println(Arrays.toString(array));\nvar array = [1,2,3]  for(var i = 0; i < array.length ; i++){     console.log(array[i]) }\n",
    "reg_date": "2021-10-12T12:03:42.000Z"
  },
  {
    "id": 1893,
    "keyword": null,
    "link": null,
    "title": " how to print arraylist",
    "description": "Arrays.toString(list.toArray())\n for(int name: arraylist)         {             System.out.print(name + \" \");         }\n",
    "reg_date": "2021-10-12T12:03:43.000Z"
  },
  {
    "id": 1894,
    "keyword": null,
    "link": null,
    "title": " how to print ascii value in java",
    "description": "public class AsciiValue {      public static void main(String[] args) {          char ch = 'a';         int ascii = ch;         // You can also cast char to int         int castAscii = (int) ch;          System.out.println(\"The ASCII value of \" + ch + \" is: \" + ascii);         System.out.println(\"The ASCII value of \" + ch + \" is: \" + castAscii);     } }\nchar character = name.charAt(0); // This gives the character 'a' int ascii = (int) character; // ascii is now 97.\n",
    "reg_date": "2021-10-12T12:03:43.000Z"
  },
  {
    "id": 1895,
    "keyword": null,
    "link": null,
    "title": " how to print byte array in java",
    "description": "public class Tester {    public static void main(String[] args) {       byte[] a = { 1,2,3};       for(int i=0; i< a.length ; i++) {          System.out.print(a[i] +\" \");       }    } }\n",
    "reg_date": "2021-10-12T12:03:43.000Z"
  },
  {
    "id": 1896,
    "keyword": null,
    "link": null,
    "title": " how to print hello world in java",
    "description": "public class Hello {   \tpublic static void main(String[] args)     {       /*Tip System.out.println(); shortcut Type 'sysout'and press Tab */       System.out.println(\"Hello world!\");     } }\nclass Simple{       public static void main(String args[]){        System.out.println(\"Hello Java\");       }   }  \npublic class hello{ \tpublic static void main(String[] args){ \t\tSystem.out.println(\"Hello world!\"); \t} }\n// Your First Program  class HelloWorld {     public static void main(String[] args) {         System.out.println(\"Hello, World!\");      } }\nSystem.out.println(\"Hello World\");\n// This is just a line of code, but publilc class.... is needed!         System.out.println(\"This will be printed\");\n",
    "reg_date": "2021-10-12T12:03:43.000Z"
  },
  {
    "id": 1897,
    "keyword": null,
    "link": null,
    "title": " how to print in java",
    "description": "//print and create new line after System.out.println(\"text\"); System.out.println(String); //You can use any variable type, not just strings, although //they are the most common  //Print without creating a new line System.out.print(\"text\"); System.out.print(String);\nSystem.out.println(\"Hello, World!\"); /*type System the class, the .out the field, and the println short  for print line */ \nSystem.out.println(\"whatever you want\"); //you can type sysout and then ctrl + space \nString[] array = new String[] {\"John\", \"Mary\", \"Bob\"}; System.out.println(Arrays.toString(array)); // [John, Mary, Bob]\nSystem.out.println(\"Your text here.\");\n//Syntax System.out.println(\"Hello World!\"); // Requests the system to output, print a new line of sting Hello World! // Output: Hello World!\n",
    "reg_date": "2021-10-12T12:03:43.000Z"
  },
  {
    "id": 1898,
    "keyword": null,
    "link": null,
    "title": " how to print something in java",
    "description": "//print and create new line after System.out.println(\"text\"); System.out.println(String); //You can use any variable type, not just strings, although //they are the most common  //Print without creating a new line System.out.print(\"text\"); System.out.print(String);\nSystem.out.println(\"Hello, World!\"); /*type System the class, the .out the field, and the println short  for print line */ \nSystem.out.print(\"one\"); System.out.print(\"two\"); System.out.println(\"three\");  // RESULT = 'onetwothree'\n",
    "reg_date": "2021-10-12T12:03:43.000Z"
  },
  {
    "id": 1899,
    "keyword": null,
    "link": null,
    "title": " how to print string array in java",
    "description": "import java.util.Arrays;  class Scratch{     public static void main(String[] args){         int[] arr = new int[3];         System.out.println( Arrays.toString( arr ));       \t//prints [0, 0, 0]     } }\nimport java.util.Arrays;  public class Array {      public static void main(String[] args) {         int[] array = {1, 2, 3, 4, 5};          System.out.println(Arrays.toString(array));     } }\nString[] array = new String[] {\"John\", \"Mary\", \"Bob\"}; System.out.println(Arrays.toString(array)); // [John, Mary, Bob]\nimport java.util.Arrays; //How to print Arrays in Java public class Printarray{        public static void main(String[] args){            String[] arr = new String[]{\"Mumbai\",\"Delhi\",\"Kolkata\",\"Chennai\"};          //Using for loop;     for(int i=0; i<arr.length;i++){       System.out.println(arr[i]);     }          //Using for-each loop;     for(String city:arr){       System.out.println(city);     }        //Using Arrays.toString() method     System.out.println(Arrays.toString(arr));                //Using Arrays.deepToString() method its also converting multidimensional arrays to strings.          System.out.println(Arrays.deepToString(arr));            //Using Array as list method     System.out.println(Arrays.asList(arr));          }    }\npublic class Array {      public static void main(String[] args) {         int[] array = {1, 2, 3, 4, 5}; //Your array          for (int element: array) { //Advanced For Loop (For each)             System.out.println(element); //print each element of            \t\t\t\t\t\t\t     //the array for each iteration         }     } }\n",
    "reg_date": "2021-10-12T12:03:43.000Z"
  },
  {
    "id": 1900,
    "keyword": null,
    "link": null,
    "title": " how to print the last element of an array",
    "description": "var array = [1,2,3,4,5]; var last_element = array[array.length - 1]; console.log(last_element); //Expected Output: 5\n",
    "reg_date": "2021-10-12T12:03:43.000Z"
  },
  {
    "id": 1901,
    "keyword": null,
    "link": null,
    "title": " how to print the map in java",
    "description": "import java.util.HashMap; import java.util.Iterator; import java.util.Map; import java.util.stream.Stream;   class MapUtil {     // Program to print all keys present in the Map using keySet() in Java     public static void main (String[] args)     {         Map<Integer, String> map = new HashMap<>();         map.put(1, \"One\");         map.put(2, \"Two\");           // 1. using Iterator         Iterator<Integer> itr = map.keySet().iterator();         while (itr.hasNext()) {             System.out.println(itr.next());         }           // 2. For-each Loop         for (Integer key : map.keySet()) {             System.out.println(key);         }           // 3. Java 8 - Collection.iterator() + Iterator.forEachRemaining()         map.keySet().iterator()                 .forEachRemaining(System.out::println);           // 4. Java 8 - Collection.stream() + Stream.forEach()         map.keySet().stream()                 .forEach(System.out::println);           // Java 8 - Stream.of() + Collection.toArray() + Stream.forEach()         Stream.of(map.keySet().toArray())                 .forEach(System.out::println);           // 5. Convert to String         System.out.println(map.keySet().toString());           // Java 8         Stream.of(map.keySet().toString())                 .forEach(System.out::println);     } } \n// Java 8 - Collection.iterator() + Iterator.forEachRemaining()         map.keySet().iterator()                 .forEachRemaining(System.out::println);\n",
    "reg_date": "2021-10-12T12:03:43.000Z"
  },
  {
    "id": 1902,
    "keyword": null,
    "link": null,
    "title": " how to print to console in java",
    "description": "//This is for printing in columns System.out.println(\"Hello World!\");  //This is for printing in rows System.out.print(\"Hello World\");  //When im using the double slash its to comment, also remember that you dont need to type Hello World! you can type everything you want //By the way, you can also do:  int a = 1; System.out.println(a);  //the result of this is \"1\" because a is equal to 1 so the programm whill get the data stored in \"a\" and print it, remember that you can also use \"print\" instead of \"println\" it works whit \"vairables\" too! (oh, the: int a  = 1; is a variable)\npublic class writingInTheConsole {   public static void main(String[] args) { System.out.println(\"Hello Java! I made Minecraft: Java Edition!\");   } }\npublic class ConsoleTest {     public static void main(String[] args) {         System.out.println(\"Console is: \" + System.console());     } }\nSystem.out.println(\"Text\");\n",
    "reg_date": "2021-10-12T12:03:43.000Z"
  },
  {
    "id": 1903,
    "keyword": null,
    "link": null,
    "title": " how to print to the console in java",
    "description": "//This is for printing in columns System.out.println(\"Hello World!\");  //This is for printing in rows System.out.print(\"Hello World\");  //When im using the double slash its to comment, also remember that you dont need to type Hello World! you can type everything you want //By the way, you can also do:  int a = 1; System.out.println(a);  //the result of this is \"1\" because a is equal to 1 so the programm whill get the data stored in \"a\" and print it, remember that you can also use \"print\" instead of \"println\" it works whit \"vairables\" too! (oh, the: int a  = 1; is a variable)\nSystem.out.println(\"Text\");\n",
    "reg_date": "2021-10-12T12:03:44.000Z"
  },
  {
    "id": 1904,
    "keyword": null,
    "link": null,
    "title": " how to provide a long string in  Java Scanner class",
    "description": "import java.util.Scanner;//import Scanner  Scanner input=new Scanner(System.in);//Create the scanner Obj  float numF = input.nextFloat();//Returns float int num1 = input.nextInt(); //Returns int byte byte1 = input.nextByte();//Returns Byte long lg1 = input.nextLong();//Returns long boolean b1 = input.nextBoolean();//Returns bool double num2 = input.nextDouble();//Returns Double String nome = input.nextLine();//Returns String  //execution is pause until you give input  \nIf you use the nextLine() method immediately following the nextInt() method,  nextInt() reads integer tokens; because of this, the last newline character for  that line of integer input is still queued in the input buffer and the next  nextLine() will be reading the remainder of the integer line (which is empty).  So we read can read the empty space to another string might work. Check below  code. import java.util.Scanner;  public class Solution {      public static void main(String[] args) {         Scanner scan = new Scanner(System.in);         int i = scan.nextInt();          // Write your code here.         double d = scan.nextDouble();         String f = scan.nextLine();         String s = scan.nextLine();          System.out.println(\"String: \" + s);         System.out.println(\"Double: \" + d);         System.out.println(\"Int: \" + i);     } }\n",
    "reg_date": "2021-10-12T12:03:44.000Z"
  },
  {
    "id": 1905,
    "keyword": null,
    "link": null,
    "title": " how to push an element in hashset java",
    "description": "HashSet<Integer> set=new HashSet<>(); //adding a new element set.add(10);\n",
    "reg_date": "2021-10-12T12:03:44.000Z"
  },
  {
    "id": 1906,
    "keyword": null,
    "link": null,
    "title": " how to put icons inside of an edittext android",
    "description": " <EditText         android:id=\"@+id/email\"         android:drawableLeft=\"@drawable/ic_email_black_24dp\"         android:layout_width=\"match_parent\"         android:layout_height=\"wrap_content\"         android:inputType=\"textEmailAddress\"         />\n",
    "reg_date": "2021-10-12T12:03:44.000Z"
  },
  {
    "id": 1907,
    "keyword": null,
    "link": null,
    "title": " how to randomize an array java",
    "description": "void shuffle(int [] arr) {         for (int i = 0; i < arr.length; i++) {             int index = (int) (Math.random() * arr.length);             int temp = arr[i];             arr[i] = arr[index];             arr[index] = temp;         }     }\n",
    "reg_date": "2021-10-12T12:03:44.000Z"
  },
  {
    "id": 1908,
    "keyword": null,
    "link": null,
    "title": " how to read a .json from web api java",
    "description": "try { \t\t\tURL url = new URL(\"url\"); \t\t\tHttpURLConnection conn = (HttpURLConnection)url.openConnection(); \t\t\tconn.setRequestMethod(\"GET\"); \t\t\tconn.connect(); \t\t\tif(conn.getResponseCode() == 200) { \t\t\t\tScanner scan = new Scanner(url.openStream()); \t\t\t\twhile(scan.hasNext()) { \t\t\t\t\tString temp = scan.nextLine();                   \t//parse json here                 }             } }\n",
    "reg_date": "2021-10-12T12:03:44.000Z"
  },
  {
    "id": 1909,
    "keyword": null,
    "link": null,
    "title": " how to read a date string in java",
    "description": "LocalDate date = LocalDate.parse(\"2018-05-05\");\n",
    "reg_date": "2021-10-12T12:03:44.000Z"
  },
  {
    "id": 1910,
    "keyword": null,
    "link": null,
    "title": " how to read a excel file in java",
    "description": "//You need Apache POI library in order to work this code  //Using Apache POI     import java.io.File;       import java.io.FileInputStream;       import java.io.IOException;       import org.apache.poi.hssf.usermodel.HSSFSheet;       import org.apache.poi.hssf.usermodel.HSSFWorkbook;       import org.apache.poi.ss.usermodel.Cell;       import org.apache.poi.ss.usermodel.FormulaEvaluator;       import org.apache.poi.ss.usermodel.Row;       public class ReadExcelFileDemo       {       public static void main(String args[]) throws IOException       {       //obtaining input bytes from a file       FileInputStream fis=new FileInputStream(new File(\"C:\\\\demo\\\\student.xls\"));       //creating workbook instance that refers to .xls file       HSSFWorkbook wb=new HSSFWorkbook(fis);        //creating a Sheet object to retrieve the object       HSSFSheet sheet=wb.getSheetAt(0);       //evaluating cell type        FormulaEvaluator formulaEvaluator=wb.getCreationHelper().createFormulaEvaluator();       for(Row row: sheet)     //iteration over row using for each loop       {       for(Cell cell: row)    //iteration over cell using for each loop       {       switch(formulaEvaluator.evaluateInCell(cell).getCellType())       {       case Cell.CELL_TYPE_NUMERIC:   //field that represents numeric cell type       //getting the value of the cell as a number       System.out.print(cell.getNumericCellValue()+ \"\\t\\t\");        break;       case Cell.CELL_TYPE_STRING:    //field that represents string cell type       //getting the value of the cell as a string       System.out.print(cell.getStringCellValue()+ \"\\t\\t\");       break;       }       }       System.out.println();       }       }       }  \n",
    "reg_date": "2021-10-12T12:03:45.000Z"
  },
  {
    "id": 1911,
    "keyword": null,
    "link": null,
    "title": " how to read a string after an integer in java",
    "description": "myInt = scan. nextInt(); myDouble = scan. nextDouble(); scan. nextLine(); // Skip the remainder of the double line. myString = scan. nextLine();\n",
    "reg_date": "2021-10-12T12:03:45.000Z"
  },
  {
    "id": 1912,
    "keyword": null,
    "link": null,
    "title": " how to read file from assets folder in android",
    "description": "BufferedReader reader = null; try {     reader = new BufferedReader(         new InputStreamReader(getAssets().open(\"filename.txt\"), \"UTF-8\"));       // do reading, usually loop until end of file reading      String mLine;     while ((mLine = reader.readLine()) != null) {        //process line        ...     } } catch (IOException e) {     //log the exception } finally {     if (reader != null) {          try {              reader.close();          } catch (IOException e) {              //log the exception          }     } }\n",
    "reg_date": "2021-10-12T12:03:45.000Z"
  },
  {
    "id": 1913,
    "keyword": null,
    "link": null,
    "title": " how to read file from console in java",
    "description": "Scanner in = new Scanner(System.in);  System.out.println(\"Enter file path\"); String s = in.nextLine(); //C:\\\\testing.txt br = new BufferedReader(new FileReader(s)); // And to use that file path in the FIleReader use like this;\n",
    "reg_date": "2021-10-12T12:03:45.000Z"
  },
  {
    "id": 1914,
    "keyword": null,
    "link": null,
    "title": " how to read file in java jacakson",
    "description": "try {     // create object mapper instance     ObjectMapper mapper = new ObjectMapper();      // convert JSON file to map     Map<?, ?> map = mapper.readValue(Paths.get(\"book.json\").toFile(), Map.class);      // print map entries     for (Map.Entry<?, ?> entry : map.entrySet()) {         System.out.println(entry.getKey() + \"=\" + entry.getValue());     }  } catch (Exception ex) {     ex.printStackTrace(); } \n",
    "reg_date": "2021-10-12T12:03:45.000Z"
  },
  {
    "id": 1915,
    "keyword": null,
    "link": null,
    "title": " how to read input in java",
    "description": "import java.util.Scanner; /* Required Import*/ public class reading{   public static void main(String[] args){     Scanner scan = new Scanner(System.in); // Create Reader      System.out.print(\"Enter Your Age\"); // Ask the user for something     int age = scan.nextInt(); // Read value from user     System.out.print(age); // Output the value   } } /*   Java Reading Options:   1_ reading int => nextInt();   2_ reading char => next().charAt(0); Single Character   3_ reading string => next();   4_ reading double => nextDouble(); */\nString str = System.console().readLine();\nScanner sc = new Scanner(System.in);  // Create a Scanner object String userName = sc.nextLine();//read input string int age = sc.nextInt(); //read input integer long mobileNo = sc.nextLong(); //read input long double cgpa = sc.nextDouble(); //read input double System.out.println(userName);//output \nimport java.util.*; class a  {     void main ()     {         Scanner in = new Scanner(System.in);       System.out.print(\"Please enter you age: \");       int age = in.nextInt();       System.out.print(\"Please enter today's date: \");       int date = in.nextInt();       System.out.print(\"Please enter current month: \");       int month = in.nextInt();       System.out.print(\"Please enter current year: \");       int year = in.nextInt();     } } // ENJOY!!!!!!!\nScanner sc = new Scanner(System.in); String s = sc.next(); int n = sc.nextInt(); double d = sc.nextDouble(); float f = sc.nextFloat();  // more fast way BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String s = br.readLine(); // read line int c = br.read();        // read single char\n//For continues reading a line import java.util.Scanner;   Scanner in = new Scanner(System.in);  while(in.hasNextLine()) {    String line = in.nextLine();    System.out.println(\"Next line is is: \" + line);  }\n",
    "reg_date": "2021-10-12T12:03:45.000Z"
  },
  {
    "id": 1916,
    "keyword": null,
    "link": null,
    "title": " how to read integer input using bufferedreader java",
    "description": "BufferedReader reader =new BufferedReader(new InputStreamReader(System.in)); int num = Integer.parseInt(reader.readLine());\n",
    "reg_date": "2021-10-12T12:03:45.000Z"
  },
  {
    "id": 1917,
    "keyword": null,
    "link": null,
    "title": " how to register event spiot",
    "description": "PluginManager pm = Bukkit.getPluginManager(); \t\t\t \t\t\tpm.registerEvents((Listener) this, this); \t\t\tpm.registerEvents((Listener) new ClassName(), this);  //This will register the events in the main class and in other class //while not taking up much room and being easy adapt.\n",
    "reg_date": "2021-10-12T12:03:45.000Z"
  },
  {
    "id": 1918,
    "keyword": null,
    "link": null,
    "title": " how to remove all characters before a certain character from a string in java",
    "description": "String s = \"the text=text\"; String s1 = s.substring(s.indexOf(\"=\")+1); s1.trim(); \n",
    "reg_date": "2021-10-12T12:03:45.000Z"
  },
  {
    "id": 1919,
    "keyword": null,
    "link": null,
    "title": " how to remove all special characters from a string in java",
    "description": "String str= \"This#string%contains^special*characters&.\";    str = str.replaceAll(\"[^a-zA-Z0-9]\", \" \");   System.out.println(str);  \nvar outString = sourceString.replace(/[`~!@#$%^&*()_|+\\-=?;:'\",.<>\\{\\}\\[\\]\\\\\\/]/gi, ''); \n",
    "reg_date": "2021-10-12T12:03:46.000Z"
  },
  {
    "id": 1920,
    "keyword": null,
    "link": null,
    "title": " how to remove all whitespace from string java",
    "description": "st = st.replaceAll(\"\\\\s+\",\"\")\n",
    "reg_date": "2021-10-12T12:03:46.000Z"
  },
  {
    "id": 1921,
    "keyword": null,
    "link": null,
    "title": " how to remove character from stringbuilder in java",
    "description": "str.deleteCharAt(3);\n",
    "reg_date": "2021-10-12T12:03:46.000Z"
  },
  {
    "id": 1922,
    "keyword": null,
    "link": null,
    "title": " how to remove components from a JFRame java",
    "description": " private JFrame frame = new JFrame();  ...  ...  frame.getContentPane().removeAll();  frame.repaint();\n",
    "reg_date": "2021-10-12T12:03:46.000Z"
  },
  {
    "id": 1923,
    "keyword": null,
    "link": null,
    "title": " how to remove duplicate elements from char array in java",
    "description": "public static void main(String[] args) {     Main main = new Main();     char[] array = {'e','a','b','a','c','d','b','d','c','e'};     main.getCharArray(array); }  private char[] getCharArray(char[] array) {     String _array = \"\";     for(int i = 0; i < array.length; i++) {         if(_array.indexOf(array[i]) == -1) // check if a char already exist, if not exist then return -1             _array = _array+array[i];      // add new char     }     return _array.toCharArray(); } \n",
    "reg_date": "2021-10-12T12:03:46.000Z"
  },
  {
    "id": 1924,
    "keyword": null,
    "link": null,
    "title": " how to remove duplicates from an array java",
    "description": "public static void main(String[] args) {          String result = removeDup(\"AAABBBCCC\");         System.out.println(result); // ABC  public static  String  removeDup( String  str) {         String result = \"\";         for (int i = 0; i < str.length(); i++)             if (!result.contains(\"\" + str.charAt(i)))                 result += \"\" + str.charAt(i);         return result;     } }\n// Must sort arrays first --> Arrays.sort(arrayName) public class RemoveDuplicateInArrayExample{   public static int removeDuplicateElements(int arr[], int n){           if (n==0 || n==1){               return n;           }           int[] temp = new int[n];           int j = 0;           for (int i=0; i<n-1; i++){               if (arr[i] != arr[i+1]){                   temp[j++] = arr[i];               }            }           temp[j++] = arr[n-1];              // Changing original array           for (int i=0; i<j; i++){               arr[i] = temp[i];           }           return j;       }               public static void main (String[] args) {           int arr[] = {10,20,20,30,30,40,50,50};           int length = arr.length;           length = removeDuplicateElements(arr, length);           //printing array elements           for (int i=0; i<length; i++)              System.out.print(arr[i]+\" \");       }   } \npublic class RemoveDuplicateElementDemo  {    public static int removeDuplicate(int[] arrNumbers, int num)    {         if(num == 0 || num == 1)       {            return num;         }         int[] arrTemporary = new int[num];         int b = 0;         for(int a = 0; a < num - 1; a++)       {            if(arrNumbers[a] != arrNumbers[a + 1])          {               arrTemporary[b++] = arrNumbers[a];            }         }         arrTemporary[b++] = arrNumbers[num - 1];        for(int a = 0; a < b; a++)       {            arrNumbers[a] = arrTemporary[a];         }         return b;      }    public static void main(String[] args)     {       int[] arrInput = {1, 2, 3, 3, 4, 5, 5, 6, 7, 8};         int len = arrInput.length;         len = removeDuplicate(arrInput, len);         // printing elements       for(int a = 0; a < len; a++)       {          System.out.print(arrInput[a] + \" \");       }    } }\n",
    "reg_date": "2021-10-12T12:03:46.000Z"
  },
  {
    "id": 1925,
    "keyword": null,
    "link": null,
    "title": " how to remove letters from string",
    "description": "s = 'ab12abc34ba' print(s.replace('ab', ''))\npublic extractLetters(String str){ \tString result=\"\"; \tfor(int i= 0; i< str.length; i++){ \t    if(Character.isLetter(str.charAt(i))){ \t    result+=str.charAt(i); \t  \t} \t}\n",
    "reg_date": "2021-10-12T12:03:46.000Z"
  },
  {
    "id": 1926,
    "keyword": null,
    "link": null,
    "title": " how to remove letters from string java",
    "description": "String str = \"abcdDCBA123\"; String strNew = str.replace(\"a\", \"\"); // strNew is 'bcdDCBA123'\n# subString(int start, int end);  String a = \"Hello!\"; b = a.subString(0,a.length()-1) #Remove the last String # b should be \"Hello\" then\npublic extractLetters(String str){ \tString result=\"\"; \tfor(int i= 0; i< str.length; i++){ \t    if(Character.isLetter(str.charAt(i))){ \t    result+=str.charAt(i); \t  \t} \t}\n",
    "reg_date": "2021-10-12T12:03:46.000Z"
  },
  {
    "id": 1927,
    "keyword": null,
    "link": null,
    "title": " how to remove null values collections",
    "description": "dataList.removeAll(Collections.singleton(null));\n2. HOW TO REMOVE NULL VALUES List<String> list = new ArrayList                    (Arrays.asList(\"Java\",null,\"Python\",null, \"Ruby\")); CollectionUtils.filter(list, PredicateUtils.notNullPredicate());                                                       ==> removes nulls System.out.println(list); \n",
    "reg_date": "2021-10-12T12:03:46.000Z"
  },
  {
    "id": 1928,
    "keyword": null,
    "link": null,
    "title": " how to remove null values in java",
    "description": "2. HOW TO REMOVE NULL VALUES List<String> list = new ArrayList                    (Arrays.asList(\"Java\",null,\"Python\",null, \"Ruby\")); CollectionUtils.filter(list, PredicateUtils.notNullPredicate());                                                       ==> removes nulls System.out.println(list); \n",
    "reg_date": "2021-10-12T12:03:47.000Z"
  },
  {
    "id": 1929,
    "keyword": null,
    "link": null,
    "title": " how to remove spaces from an array in java",
    "description": "for (int i = 0; i < temp.length; i++){     temp[i] = if(!temp[i].trim().equals(\"\") || temp[i]!=null)temp[i].trim(); }\n",
    "reg_date": "2021-10-12T12:03:47.000Z"
  },
  {
    "id": 1930,
    "keyword": null,
    "link": null,
    "title": " how to replace all of one character with nothing in java",
    "description": "String meal = \"Hambbburger\";  String replaced = meal.replaceAll(\"b\",\"\");\n",
    "reg_date": "2021-10-12T12:03:47.000Z"
  },
  {
    "id": 1931,
    "keyword": null,
    "link": null,
    "title": " how to replace an element in array in java",
    "description": "class array{   public static void main(String[] args){     int arr[] = {1,2,3,4};     System.out.println(\"Before update\" + arr[2]);     arr[2] = 9;//updating the value     System.out.println(\"After update\" + arr[2]);   } }  /*output:- Before update3 After update9*/\nlist.set(1,\"new value\");  //example ..  List<String> list = new ArrayList<>(); list.add(\"one\"); list.add(\"two\"); list.add(\"three\"); System.out.println(list); // [one,two,three] list.set(1,\"new\"); System.out.println(list); //[one,new,three]\n",
    "reg_date": "2021-10-12T12:03:47.000Z"
  },
  {
    "id": 1932,
    "keyword": null,
    "link": null,
    "title": " how to replace in java",
    "description": "public static void main(String args[]){   String s1=\"my name is khan my name is java\";   String replaceString=s1.replace(\"is\",\"was\");//replaces all occurrences of \"is\" to \"was\"   System.out.println(replaceString);   }}   \nString s1 = \"my name is khan and my name is java\"; String replaceString = s1.replace(\"is\",\"was\"); //replaces all occurrences of \"is\" to \"was\" System.out.println(replaceString);\npublic static void main(String args[]){   String s1=\"my name is khan my name is java\";   String replaceString=s1.replace(\"is\",\"was\");//replaces all occurrences of \"is\" to \"was\"   System.out.println(replaceString);   }}  \n",
    "reg_date": "2021-10-12T12:03:47.000Z"
  },
  {
    "id": 1933,
    "keyword": null,
    "link": null,
    "title": " how to resice image button src",
    "description": "android:scaleType=\"fitCenter\"\n",
    "reg_date": "2021-10-12T12:03:47.000Z"
  },
  {
    "id": 1934,
    "keyword": null,
    "link": null,
    "title": " how to resize image in android programmatically",
    "description": "public static Bitmap resizeImage(Bitmap realImage, float maxImageSize,         boolean filter) {     float ratio = Math.min(             (float) maxImageSize / realImage.getWidth(),             (float) maxImageSize / realImage.getHeight());     int width = Math.round((float) ratio * realImage.getWidth());     int height = Math.round((float) ratio * realImage.getHeight());      Bitmap newBitmap = Bitmap.createScaledBitmap(realImage, width,             height, filter);     return newBitmap; }\n",
    "reg_date": "2021-10-12T12:03:47.000Z"
  },
  {
    "id": 1935,
    "keyword": null,
    "link": null,
    "title": " how to resize image in java swing",
    "description": "ImageIcon icon = new ImageIcon(UrlToPngFile); Image scaleImage = icon.getImage().getScaledInstance(28, 28,Image.SCALE_DEFAULT);\n",
    "reg_date": "2021-10-12T12:03:47.000Z"
  },
  {
    "id": 1936,
    "keyword": null,
    "link": null,
    "title": " how to restart activity in android",
    "description": "restart.setOnClickListener(new View.OnClickListener() {             @Override             public void onClick(View view) {                 recreate();             }         });      }\n",
    "reg_date": "2021-10-12T12:03:47.000Z"
  },
  {
    "id": 1937,
    "keyword": null,
    "link": null,
    "title": " how to return array in java",
    "description": "public static int[] numbers()   {   int[] arr={5,6,7,8,9};  //initializing array   return arr;   }  \nimport java.util.Arrays;  public class trial1{      public static void main(String[] args){         int[] B = numbers();         System.out.println(Arrays.toString(B));     }      public static int[] numbers(){         int[] A = {1,2,3};         return A;     } } \n",
    "reg_date": "2021-10-12T12:03:47.000Z"
  },
  {
    "id": 1938,
    "keyword": null,
    "link": null,
    "title": " how to return nan in java",
    "description": "public class NaN {     public static void main(String[]args)     {         System.out.println(0.0 / 0.0);\t  //zero divided by zero         System.out.println(Math.sqrt(-1)); //take sqrt of negative number         System.out.println(10.0 % 0);      //taking mod by zero     } }\n",
    "reg_date": "2021-10-12T12:03:48.000Z"
  },
  {
    "id": 1939,
    "keyword": null,
    "link": null,
    "title": " how to reverse a linked ist",
    "description": "class LinkedList {         static Node head;         static class Node {             int data;          Node next;             Node(int d)          {              data = d;              next = null;          }      }         /* Function to reverse the linked list */     Node reverse(Node node)      {          Node prev = null;          Node current = node;          Node next = null;          while (current != null) {              next = current.next;              current.next = prev;              prev = current;              current = next;          }          node = prev;          return node;      }         // prints content of double linked list      void printList(Node node)      {          while (node != null) {              System.out.print(node.data + \" \");              node = node.next;          }      }         public static void main(String[] args)      {          LinkedList list = new LinkedList();          list.head = new Node(85);          list.head.next = new Node(15);          list.head.next.next = new Node(4);          list.head.next.next.next = new Node(20);             System.out.println(\"Given Linked list\");          list.printList(head);          head = list.reverse(head);          System.out.println(\"\");          System.out.println(\"Reversed linked list \");          list.printList(head);      }  } \n",
    "reg_date": "2021-10-12T12:03:48.000Z"
  },
  {
    "id": 1940,
    "keyword": null,
    "link": null,
    "title": " how to reverse a list in java",
    "description": "    List<String> stringList = Arrays.asList(\"A\", \"B\", \"C\");     Collections.reverse(stringList);     assertThat(stringList).containsExactly(\"C\", \"B\", \"A\");\n//import java.util.Collections; //create and add items to list Collectons.reverse(list);\npublic static void main(String[] args) {          ArrayList<Integer>list = new ArrayList<>();         for(int i = 1; i < 6; i++){ // bu element index degil.             list.add(i);         }         System.out.println(list); // [1, 2, 3, 4, 5]          for (int i = list.size()-1; i >= 0; i--) {             int each = list.get(i);  // unboxing             System.out.print(each + \" \"); // 5 4 3 2 1         }\n",
    "reg_date": "2021-10-12T12:03:48.000Z"
  },
  {
    "id": 1941,
    "keyword": null,
    "link": null,
    "title": " how to reverse a number in java",
    "description": "public class ReverseNumber {     public static void main(String[] args) {         int num = 1234, reversed = 0;          while(num != 0) {             int digit = num % 10;             reversed = reversed * 10 + digit;             num = num / 10;         }         System.out.println(\"Reversed Number: \" + reversed); }}\npublic class ReverseNumberExample1    {   public static void main(String[] args)    {   int number = 987654, reverse = 0;   while(number != 0)    {   int remainder = number % 10;   reverse = reverse * 10 + remainder;   number = number/10;   }   System.out.println(\"The reverse of the given number is: \" + reverse);   }   }  \nwhile(num != 0)  {    int digit = num % 10;    reversed = reversed * 10 + digit;    num /= 10; }\n//continue to loop until  a value is equal to 0  public class ReverseNum{      public static void main(String[] args {      int a = 543;   int reverse = 0;     while(a!=0){ //itera the process    int digit = a\u0010; //isolate the last digit number    reverse = digit + (reverse*10); //append last digit to reverse  a=a/10; // remove the last digit from number    }     System.out.println(reverse);          } }\nint rev= 0; while(num > 9) {   rev= rev*10 + num\u0010;   num/= 10; }\n",
    "reg_date": "2021-10-12T12:03:48.000Z"
  },
  {
    "id": 1942,
    "keyword": null,
    "link": null,
    "title": " how to reverse a string in java",
    "description": "public class ReverseString {     public static void main(String[] args) {         String s1 = \"neelendra\";         for(int i=s1.length()-1;i>=0;i--)             {                 System.out.print(s1.charAt(i));             }     } }\nString string=\"whatever\"; String reverse = new StringBuffer(string).reverse().toString(); System.out.println(reverse); \n// Library approach public static String solution(String str) { \t// StringBuilder is not thread-safe, use StringBuffer \treturn new StringBuffer(str).reverse().toString(); }  // DIY approach public static String solution(String str) { \tchar[] chars = str.toCharArray(); \tfor(int i = 0, j = str.length() - 1; i < j; i++, j--) { \t\tchar ch = chars[i]; \t\tchars[i] = chars[j]; \t\tchars[j] = ch; \t} \treturn new String(chars); }\n// reverse a string using reverse() method of StringBuilder class class ReverseUsingReverseMethod {    public static void main(String[] args)    {       String str = \"Hello world Java\";       StringBuilder sb = new StringBuilder();       // append string to StringBuilder       sb.append(str);       sb = sb.reverse();       // printing reversed String       System.out.println(sb);    } }\nString rev = new StringBuilder(\"Your String\").reverse().toString();\nString str = \"Hello\"; String reverse(String str){   StringBuilder sb = new StringBuilder();   sb.append(str);   sb.reverse();   return sb.toString(); }\n",
    "reg_date": "2021-10-12T12:03:48.000Z"
  },
  {
    "id": 1943,
    "keyword": null,
    "link": null,
    "title": " how to reverse order of arraylist",
    "description": "ArrayList<Integer> arrlist = new ArrayList<Integer>(); //This is how to reverse arrlist's oringinal order. Collections.reverse(arrlist);  //This is how to sort in a reverse order  Collections.sort(arrlist, Collections.reverseOrder());\n",
    "reg_date": "2021-10-12T12:03:48.000Z"
  },
  {
    "id": 1944,
    "keyword": null,
    "link": null,
    "title": " how to reverse the stack in java",
    "description": "    public void rev() {     \tArrayStack s1 = new ArrayStack();     \tint[] data2;     \tdata2 = new int[1000];     \tfor (int i = 0 ; i<size();i++) {     \t\tdata2[i] = data[i];     \t}     \t     \tfor (int i = 0 ; i<size();i++) {     \t s1.push(data2[i]);     \t}     \t     \tfor (int i = 0 ; i<size();i++) {     \t\tdata2[i] = s1.pop();     \t\tSystem.out.print(data2[i] + \" \");     \t}     \tSystem.out.println();     }\n",
    "reg_date": "2021-10-12T12:03:48.000Z"
  },
  {
    "id": 1945,
    "keyword": null,
    "link": null,
    "title": " how to round up in java",
    "description": "int x = 3.14;  Math.round(x); //Rounds to nearest int Math.ceil(x); //Rounds up to int Math.floor(x); //Rounds down to int\ndouble test = 0.01; // rounds up to the next INTEGER test = Math.ceil(test);  // 1.0   double test2 = 1.0; // does not round if decimal is 0 test2 = Math.ceil(test2);  // 1.0\n5*(Math.round(number/5));\n(double)Math.round(value * 100000d) / 100000d \n",
    "reg_date": "2021-10-12T12:03:48.000Z"
  },
  {
    "id": 1946,
    "keyword": null,
    "link": null,
    "title": " how to run a background thread in android",
    "description": "Thread thread = new Thread() {   @Override   public void run() {       try { Thread.sleep(2000); }       catch (InterruptedException e) {}        runOnUiThread(new Runnable() {           @Override           public void run() {               textView.setText(\"OK\");           }       });   } }; thread.start(); \n",
    "reg_date": "2021-10-12T12:03:48.000Z"
  },
  {
    "id": 1947,
    "keyword": null,
    "link": null,
    "title": " how to run java files",
    "description": "// compile > javac myCode.java // run > java myCode\njavac MyFisrtProgam.java // enter to compile    java MyfirstProgram // run program  \njavac hello.java\njavac filename.java //(This will compile the program) java filename //(This will run the file)\n// Assuming that you have an executable jar java -jar myJavaProject.jar  // Assuming that you have packaged jar java -jar target/myJavaProject.jar\n C:\\Users\\Your Name>javac MyClass.java \n",
    "reg_date": "2021-10-12T12:03:48.000Z"
  },
  {
    "id": 1948,
    "keyword": null,
    "link": null,
    "title": " how to run java giles",
    "description": "javac filename.java //(This will compile the program) java filename //(This will run the file)\n",
    "reg_date": "2021-10-12T12:03:49.000Z"
  },
  {
    "id": 1949,
    "keyword": null,
    "link": null,
    "title": " how to run java program in linux server",
    "description": "javac HelloWorld.java  java HelloWorld\n",
    "reg_date": "2021-10-12T12:03:49.000Z"
  },
  {
    "id": 1950,
    "keyword": null,
    "link": null,
    "title": " how to run java program with external jar files in command prompt",
    "description": "java -jar <jar-file-name>.jar\njavac -cp \"<File-Path>.jar;.\" <filename>.java java -cp \"<File-Path>.jar;.\" <filename>\nFor Linux:  java -jar <filename>.jar\n",
    "reg_date": "2021-10-12T12:03:49.000Z"
  },
  {
    "id": 1951,
    "keyword": null,
    "link": null,
    "title": " how to scan Integer in Java",
    "description": "BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int a = Integer.parseInt(br.readLine());\nimport java.util.*; public class HowToScan {    public static void main( String args[] )     {       Scanner S = new Scanner(System.in);       int a;       int b;       int sum;         a = S.nextInt();         b = S.nextInt();         \tsum = a + b;         System.out.println( a + \"+\" + b  + \"=\" + sum );    } }\n",
    "reg_date": "2021-10-12T12:03:49.000Z"
  },
  {
    "id": 1952,
    "keyword": null,
    "link": null,
    "title": " how to scan a String in Java",
    "description": "import java.util.Scanner;  // import scanner   Scanner myScanner = new Scanner(System.in); // Make scanner obj  String inputString = myScanner.nextLine(); // Take whole line  boolean inputBoolean = myScanner.nextBoolean(); //Boolean input  long inputLong = myScanner.nextLong(); //Interger,long ... input\nimport java.util.Scanner;\t\t//Import Scanner in java  class classname{   public void methodname(){     Scanner s_name = new Scanner(System.in);\t//Scanner declaration     //Use Scanner object to take input     int val1    =  s_name.nextInt();\t\t\t//int     float val2  =  s_name.nextFloat();\t\t\t//float     double val3 =  s_name.nextDouble();\t\t\t//double     string name =  s_name.nextLine();\t\t\t//string     char ch     =  s_name.nextLine().charAt(0);\t//character   }}\nimport java.util.Scanner;  Public class Scanner { \tPublic static void main(String[] args) {     \t// Scanner *scanner name here* = new Scanner(System.in);       \tScanner scan = new Scanner(System.in);       \tSystem.out.println(\"Type anything and the scanner will take that input and print it\");       \tString next = scan.next();       \tSystem.out.println(next);     }  }\nimport java.util.*; public class ScannerExample  {   public static void main(String args[]) {     Scanner in = new Scanner(System.in);     String name = in.nextLine();     System.out.println(name);   } }\n",
    "reg_date": "2021-10-12T12:03:49.000Z"
  },
  {
    "id": 1953,
    "keyword": null,
    "link": null,
    "title": " how to search for charecters in java",
    "description": "public class Test {    public static void main(String args[]) {       String str = new String(\"I81753490B9C/DQC\");       int index = str.indexOf('DQC');       System.out.println(\"Index of the letter w :: \"+index);    } }\n",
    "reg_date": "2021-10-12T12:03:49.000Z"
  },
  {
    "id": 1954,
    "keyword": null,
    "link": null,
    "title": " how to see java version in windows 10",
    "description": "java -version\n",
    "reg_date": "2021-10-12T12:03:49.000Z"
  },
  {
    "id": 1955,
    "keyword": null,
    "link": null,
    "title": " how to see list of java of versions in mac",
    "description": "/usr/libexec/java_home -V\n",
    "reg_date": "2021-10-12T12:03:49.000Z"
  },
  {
    "id": 1956,
    "keyword": null,
    "link": null,
    "title": " how to select a random element from an array in java",
    "description": "import java.util.Random;  public class RandomStringFromArray {       \tpublic static void main(String[] args)         {               \tString[] arr={\"1\", \"2\", \"3\", \"4\", \"5\"};       \tRandom r=new Random();               \tint randomNumber=r.nextInt(arr.length);       \tSystem.out.println(arr[randomNumber]);     } }\n",
    "reg_date": "2021-10-12T12:03:49.000Z"
  },
  {
    "id": 1957,
    "keyword": null,
    "link": null,
    "title": " how to send a multi line message java spigot",
    "description": "//Just use multiple player.sendMessage(\"\")\n",
    "reg_date": "2021-10-12T12:03:50.000Z"
  },
  {
    "id": 1958,
    "keyword": null,
    "link": null,
    "title": " how to send http post create request using curl command",
    "description": "$ curl -X POST -d @filename http://locahost:8080/weather\n$ curl --data \"param1=value1&para;m2=value2\" http://locahost:8080/weather\n$ curl --form \"fileupload=@filename.txt\" http://locahost:8080/weather\ncurl --data \"param1=value1\" --data \"param2=value2\" https://example.com/resource.cgi \n",
    "reg_date": "2021-10-12T12:03:50.000Z"
  },
  {
    "id": 1959,
    "keyword": null,
    "link": null,
    "title": " how to serialize an array in java",
    "description": "//Serialize and deserialize an ArrayList.. public class Serialize implements Serializable{   \t//Make sure you implement Serializable on all classes interacting with    \t//serialize (class T in this case)   \t//Serialize an array to a file   \tFileOutputStream fos= new FileOutputStream(\"filePath.txt\");     ObjectOutputStream oos= new ObjectOutputStream(fos);     oos.writeObject(arrayListToBeWritten);     oos.close();     fos.close();\t//put try catch around both      \t//Deserialize an array from a file \tArrayList<T> list;     FileInputStream fis = new FileInputStream(\"filePath.txt\");     ObjectInputStream ois = new ObjectInputStream(fis);     list = (ArrayList) ois.readObject();\t//Casting     ois.close();     fis.close();      \tfor (T temp: list) {\t\t//printing the array             System.out.println(temp);         }\n",
    "reg_date": "2021-10-12T12:03:50.000Z"
  },
  {
    "id": 1960,
    "keyword": null,
    "link": null,
    "title": " how to serialize an arraylist in java",
    "description": "//Serialize and deserialize an ArrayList.. public class Serialize implements Serializable{   \t//Make sure you implement Serializable on all classes interacting with    \t//serialize (class T in this case)   \t//Serialize an array to a file   \tFileOutputStream fos= new FileOutputStream(\"filePath.txt\");     ObjectOutputStream oos= new ObjectOutputStream(fos);     oos.writeObject(arrayListToBeWritten);     oos.close();     fos.close();\t//put try catch around both      \t//Deserialize an array from a file \tArrayList<T> list;     FileInputStream fis = new FileInputStream(\"filePath.txt\");     ObjectInputStream ois = new ObjectInputStream(fis);     list = (ArrayList) ois.readObject();\t//Casting     ois.close();     fis.close();      \tfor (T temp: list) {\t\t//printing the array             System.out.println(temp);         }\n",
    "reg_date": "2021-10-12T12:03:50.000Z"
  },
  {
    "id": 1961,
    "keyword": null,
    "link": null,
    "title": " how to set 2 decimal places in java",
    "description": "DecimalFormat df = new DecimalFormat(); df.setMaximumFractionDigits(2); System.out.println(df.format(decimalNumber));\nprintf(%.2f);\n",
    "reg_date": "2021-10-12T12:03:50.000Z"
  },
  {
    "id": 1962,
    "keyword": null,
    "link": null,
    "title": " how to set a char to a string index in java",
    "description": "str = str.substring(0, index) + \" \" + str.substring(index + 1);\n",
    "reg_date": "2021-10-12T12:03:50.000Z"
  },
  {
    "id": 1963,
    "keyword": null,
    "link": null,
    "title": " how to set background color in jframe in java",
    "description": "getContentPane().setBackground(Color.YELLOW);  //Whatever color\npackage Exaple;  import java.awt.Color;  import javax.swing.JFrame;  public class Window {  \tpublic static void main(String[] args) { \t\t \t\tJFrame frame = new JFrame();  \t\tframe.setExtendedState(JFrame.MAXIMIZED_BOTH);  \t\tframe.setVisible(true); \t\tframe.setTitle(\"Expaple\"); \t\tframe.setBackground(Color.BLUE); \t}  }\npackage Exaple;  import java.awt.Color;  import javax.swing.JFrame;  public class Window {  \tpublic static void main(String[] args) { \t\t \t\tJFrame frame = new JFrame();  \t\tframe.setExtendedState(JFrame.MAXIMIZED_BOTH);  \t\tframe.setVisible(true); \t\tframe.setTitle(\"Expaple\"); \t\tframe.setBackground(Color.BLUE);\n",
    "reg_date": "2021-10-12T12:03:50.000Z"
  },
  {
    "id": 1964,
    "keyword": null,
    "link": null,
    "title": " how to set checkbox size in android",
    "description": "<CheckBox     ...     android:scaleX=\"0.70\"     android:scaleY=\"0.70\" />\n",
    "reg_date": "2021-10-12T12:03:50.000Z"
  },
  {
    "id": 1965,
    "keyword": null,
    "link": null,
    "title": " how to set current date in android studio",
    "description": "Calendar c = Calendar.getInstance(); SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\"); String strDate = sdf.format(c.getTime()); Log.d(\"Date\",\"DATE : \" + strDate)\n",
    "reg_date": "2021-10-12T12:03:50.000Z"
  },
  {
    "id": 1966,
    "keyword": null,
    "link": null,
    "title": " how to set frame colo in java",
    "description": "getContentPane().setBackground(Color.YELLOW);  //Whatever color\n",
    "reg_date": "2021-10-12T12:03:50.000Z"
  },
  {
    "id": 1967,
    "keyword": null,
    "link": null,
    "title": " how to set java home in ubuntu",
    "description": "#Update repo sudo apt update  # Install java 8 from ubuntu repo sudo apt install openjdk-8-jdk -y  #Set JAVA_HOME Path ls /usr/lib/jvm/java-8-openjdk-amd64/  export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64  echo $JAVA_HOME    #Add JAVA bin directory to the PATH variable  export PATH=$PATH:$JAVA_HOME/bin  echo $PATH  java -version\nexport JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\nsudo gedit /etc/profile #add following lines  JAVA_HOME=/usr/lib/jvm/{your jdk path} PATH=$PATH:$HOME/bin:$JAVA_HOME/bin export JAVA_HOME export JRE_HOME export PATH #logout to update the changes\n",
    "reg_date": "2021-10-12T12:03:50.000Z"
  },
  {
    "id": 1968,
    "keyword": null,
    "link": null,
    "title": " how to set landscape in android studio",
    "description": "in the manifest, set as attribute of the node activity the code below: android:screenOrientation=\"landscape\"  Also, in you MainActivity Class, inside the onCreate method, after the super call type: setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);\n",
    "reg_date": "2021-10-12T12:03:51.000Z"
  },
  {
    "id": 1969,
    "keyword": null,
    "link": null,
    "title": " how to set list data to android spinner",
    "description": "// setting branch data in manually and load to spBranchName         List<String> branchList = new ArrayList<>();         branchList.add(\"CHITTAGONG\");         branchList.add(\"DHAKA\");          ArrayAdapter<String> branchListAdapter = new ArrayAdapter<>(getActivity(),                 android.R.layout.simple_spinner_item, branchList);         branchListAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);         spBranchName.setAdapter(branchListAdapter);\n",
    "reg_date": "2021-10-12T12:03:51.000Z"
  },
  {
    "id": 1970,
    "keyword": null,
    "link": null,
    "title": " how to set lowered bezels in jlabel",
    "description": "yes acyuall its true \n",
    "reg_date": "2021-10-12T12:03:51.000Z"
  },
  {
    "id": 1971,
    "keyword": null,
    "link": null,
    "title": " how to set opacity of background android",
    "description": "//And below for opacity code Make the color have 80% in the alpha channel. For example, for red use #CCFF0000: <TextView    ...    android:background=\"#CCFF0000\" />         100% &mdash; FF 95% &mdash; F2 90% &mdash; E6 85% &mdash; D9 80% &mdash; CC 75% &mdash; BF 70% &mdash; B3 65% &mdash; A6 60% &mdash; 99 55% &mdash; 8C 50% &mdash; 80 45% &mdash; 73 40% &mdash; 66 35% &mdash; 59 30% &mdash; 4D 25% &mdash; 40 20% &mdash; 33 15% &mdash; 26 10% &mdash; 1A 5% &mdash; 0D 0% &mdash; 00\n<TextView    ...    android:background=\"#CCFF0000\" />\n",
    "reg_date": "2021-10-12T12:03:51.000Z"
  },
  {
    "id": 1972,
    "keyword": null,
    "link": null,
    "title": " how to set path for java in windows 10",
    "description": "To set the temporary path of JDK, you need to follow the following steps:  Open the command prompt Copy the path of the JDK/bin directory Write in command prompt: set path=copied_path For Example: set path=C:\\Program Files\\Java\\jdk1.6.0_23\\bin\n",
    "reg_date": "2021-10-12T12:03:51.000Z"
  },
  {
    "id": 1973,
    "keyword": null,
    "link": null,
    "title": " how to set the backtound color in java",
    "description": "[your frame name].getContentPane().setBackground([your color here]);  or  [your panel name here].setBacroundColor([your color here]) \n[your frame name].getContentPane().setBackground([your color here]);  or  [your panel name here].setBacroundColor([your color here]) \t\n",
    "reg_date": "2021-10-12T12:03:51.000Z"
  },
  {
    "id": 1974,
    "keyword": null,
    "link": null,
    "title": " how to set the java home in mac",
    "description": "Step-1: open terminal and type ls -al if you did not find the .bash_profile proceed with Step-2 else continue with Step-3 Step-2: touch .bash_profile Step-3: open -e .bash_profile Step-4: export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_281.jdk/Contents/Home Step-5: save it and close it Step-6: source ~/.bash_profile Step-7: echo $JAVA_HOME\n1. Open terminal window 2. Type command: $ vim ~/.bash_profile and Hit Enter 3. Type command: $ export JAVA_HOME=$(/usr/libexec/java_home) and press Escape key for Save changes. 4. Type command: :(colon)wq, It will Save and close .bash_profile file. 5. Type command: source ~/.bash_profile and hit Enter 6. Now we can check the value of the JAVA_HOME variable: 7. Type Command: echo $JAVA_HOME  The result should be the path to the JDK installation:  /Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home\n",
    "reg_date": "2021-10-12T12:03:51.000Z"
  },
  {
    "id": 1975,
    "keyword": null,
    "link": null,
    "title": " how to set the text of a jlabel to bold",
    "description": "JLabel label = new JLabel(\"I'm bold\"); Font font = new Font(\"Courier\", Font.BOLD,12); label.setFont(font);\n",
    "reg_date": "2021-10-12T12:03:51.000Z"
  },
  {
    "id": 1976,
    "keyword": null,
    "link": null,
    "title": " how to set view width programmatically in android",
    "description": "View view = findViewById(R.id.nutrition_bar_filled); LayoutParams layoutParams = view.getLayoutParams(); layoutParams.width = newWidth; view.setLayoutParams(layoutParams);\n",
    "reg_date": "2021-10-12T12:03:51.000Z"
  },
  {
    "id": 1977,
    "keyword": null,
    "link": null,
    "title": " how to shuffle string java",
    "description": "public static String shuffleString(String string) {   List<String> letters = Arrays.asList(string.split(\"\"));   Collections.shuffle(letters);   String shuffled = \"\";   for (String letter : letters) {     shuffled += letter;   }   return shuffled; } \n",
    "reg_date": "2021-10-12T12:03:51.000Z"
  },
  {
    "id": 1978,
    "keyword": null,
    "link": null,
    "title": " how to skip a line in java",
    "description": "System.out.println();\n",
    "reg_date": "2021-10-12T12:03:52.000Z"
  },
  {
    "id": 1979,
    "keyword": null,
    "link": null,
    "title": " how to solve Caused by: java.lang.IllegalStateException: You need to use a Theme.AppCompat theme (or descendant) with this activity.",
    "description": "<style name=\"AppFullScreenTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">     <item name=\"android:windowNoTitle\">true</item>     <item name=\"android:windowActionBar\">false</item>     <item name=\"android:windowFullscreen\">true</item>     <item name=\"android:windowContentOverlay\">@null</item> </style>\n<application     android:theme=\"@style/AppTheme\">\n<activity android:name=\".MainActivity\"     android:theme=\"@android:style/Theme.NoTitleBar.Fullscreen\" >\n<activity android:name=\".MainActivity\"     android:theme=\"@style/AppFullScreenTheme\" >\n",
    "reg_date": "2021-10-12T12:03:52.000Z"
  },
  {
    "id": 1980,
    "keyword": null,
    "link": null,
    "title": " how to solve fizzbuzz java",
    "description": "class FizzBuzz {   public static void main(String[] args) {     for (int i=1; i<=100; i++) {       if (i\u0015==0) {         System.out.println(\"FizzBuzz\");       } else if (i%5==0) {         System.out.println(\"Buzz\");       } else if (i%3==0) {         System.out.println(\"Fizz\");       } else {         System.out.println(i);       }     }   } }\n",
    "reg_date": "2021-10-12T12:03:52.000Z"
  },
  {
    "id": 1981,
    "keyword": null,
    "link": null,
    "title": " how to solve simultaneous equations in mathematica",
    "description": "Clear[x, y, z, w]; eq1 = -0.7*w + 0.3*y + 0.4*z == 0; eq2 = -0.6*x + 0.2*y + 0.1*z == 0; eq3 = 0.5*w + 0.3*x - y == 0; eq4 = 0.2*w + 0.3*x + 0.5*y - 0.5*z == 0; eq5 = w + x + y + z == 1; Solve[{eq1, eq2, eq3, eq4, eq5}, {z, w, x, y}] \n",
    "reg_date": "2021-10-12T12:03:52.000Z"
  },
  {
    "id": 1982,
    "keyword": null,
    "link": null,
    "title": " how to sort arraylist",
    "description": "//METHOD RETURNS VOID Collections.sort(arrayList);\nCollections.sort(coll); -> helps sort an arraylist.\n",
    "reg_date": "2021-10-12T12:03:52.000Z"
  },
  {
    "id": 1983,
    "keyword": null,
    "link": null,
    "title": " how to sort collection in java",
    "description": "// Use Collections.sort() import java.util.*; ArrayList<String> al = new ArrayList<String>(); al.add(\"teach\"); al.add(\"sleep\"); al.add(\"geek\"); Collections.sort(al);//just pass any collection object reference System.out.println(al);//output :- [geek,sleep,teach]  or /* ArrayList<Integer> intal = new ArrayList<Integer>(); al.add(4); al.add(8); al.add(2); Collections.sort(intal); System.out.println(intal);//output :- [2,4,8] */\n",
    "reg_date": "2021-10-12T12:03:52.000Z"
  },
  {
    "id": 1984,
    "keyword": null,
    "link": null,
    "title": " how to sort integer array in java",
    "description": "import java. util. Arrays; Arrays. sort(array);\nHere&rsquo;s the java program to sort an array using Arrays.sort() method.  import java.util.Arrays; public class JavaArraySortMethod {    public static void main(String[] args)    {       String[] strGiven = {\"Great Barrier Reef\", \"Paris\", \"borabora\", \"Florence\",\"tokyo\", \"Cusco\"};       Arrays.sort(strGiven);       System.out.println(\"Output(case sensitive) : \" + Arrays.toString(strGiven));    } }\nint countOfArray = 5; int num [] =  new int[counfOfArray];  int num[] = [8 , 5 , 9 , 3 , 4];  for (int i = 0; i < countOfArray; i++)          {             for (int j = i + 1; j < countOfArray; j++) {                  if (num[i] > num[j])                  {                     temp = num[i];                     num[i] = num[j];                     num[j] = temp;                 }             }         }\n// an array of ints int[] arr = {1, 2, 3, 4, 5, 6};  // an array of reverse sorted ints int[] arrDesc = Arrays.stream(arr).boxed()     .sorted(Collections.reverseOrder())     .mapToInt(Integer::intValue)     .toArray();  System.out.println(Arrays.toString(arrDesc)); // outputs [6, 5, 4, 3, 2, 1]\nimport java.util.Scanner; public class JavaExample  {     public static void main(String[] args)      {     \tint count, temp;     \t     \t//User inputs the array size         Scanner scan = new Scanner(System.in);         System.out.print(\"Enter number of elements you want in the array: \");         count = scan.nextInt();              int num[] = new int[count];         System.out.println(\"Enter array elements:\");         for (int i = 0; i < count; i++)          {             num[i] = scan.nextInt();         }         scan.close();         for (int i = 0; i < count; i++)          {             for (int j = i + 1; j < count; j++) {                  if (num[i] > num[j])                  {                     temp = num[i];                     num[i] = num[j];                     num[j] = temp;                 }             }         }         System.out.print(\"Array Elements in Ascending Order: \");         for (int i = 0; i < count - 1; i++)          {             System.out.print(num[i] + \", \");         }         System.out.print(num[count - 1]);     } }\n",
    "reg_date": "2021-10-12T12:03:52.000Z"
  },
  {
    "id": 1985,
    "keyword": null,
    "link": null,
    "title": " how to sort the arraylist in ascending order in java",
    "description": "Collections.sort(ArrayList);\n",
    "reg_date": "2021-10-12T12:03:52.000Z"
  },
  {
    "id": 1986,
    "keyword": null,
    "link": null,
    "title": " how to split string in java android",
    "description": "String currentString = \"Fruit: they taste good\"; String[] separated = currentString.split(\":\"); separated[0]; // this will contain \"Fruit\" separated[1]; // this will contain \" they taste good\"\nString currentString = \"Custom Section\"; String[] splitarray = currentString.split(\" \"); separated[0]; // this will contain \"Custom\" separated[1]; // this will contain \"Custom\"  //assign to string variable  for (int i = 2; i < array.length; i++) {    secondName = secondName + \" \" + array[i];  } \n",
    "reg_date": "2021-10-12T12:03:52.000Z"
  },
  {
    "id": 1987,
    "keyword": null,
    "link": null,
    "title": " how to start a java program",
    "description": " class A {  public static void main(String args[]){      System.out.println(\"Hello World\");  } }\njavac MyFisrtProgam.java // enter to compile    java MyfirstProgram // run program  \n// Assuming that you have an executable jar java -jar myJavaProject.jar  // Assuming that you have packaged jar java -jar target/myJavaProject.jar\n",
    "reg_date": "2021-10-12T12:03:52.000Z"
  },
  {
    "id": 1988,
    "keyword": null,
    "link": null,
    "title": " how to start activity in adapter android",
    "description": " button.setOnClickListener(v -> { \tIntent intent = new Intent(v.getContext(), SecondActivity.class);     v.getContext().startActivity(intent);  });  //how to start activity in adapter android\noverride fun onClick(v: View?) { \tval intent = Intent(v.context, TimerActivity::class.java)  \tv.context.startActivity(intent) }\n",
    "reg_date": "2021-10-12T12:03:53.000Z"
  },
  {
    "id": 1989,
    "keyword": null,
    "link": null,
    "title": " how to stop activity from another activity",
    "description": "public static Activity fa; onCreate() {     fa = this; }\nonCreate() {     FirstActivity.fa.finish(); }\n",
    "reg_date": "2021-10-12T12:03:53.000Z"
  },
  {
    "id": 1990,
    "keyword": null,
    "link": null,
    "title": " how to stop screen going off android studio",
    "description": "getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);  to disable keep screen on: getWindow().clearFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);\n",
    "reg_date": "2021-10-12T12:03:53.000Z"
  },
  {
    "id": 1991,
    "keyword": null,
    "link": null,
    "title": " how to stop screen rotation in android code",
    "description": "android:screenOrientation=\"portrait\" \n<!-- inside of your AndroidManifest.xml --> <activity android:name=\".MainActivity\" \t\t  android:screenOrientation=\"portrait\"/>\n<activity         ...         ...         android:screenOrientation=\"nosensor\">\nandroid:screenOrientation=\"portrait or landscape\" \n",
    "reg_date": "2021-10-12T12:03:53.000Z"
  },
  {
    "id": 1992,
    "keyword": null,
    "link": null,
    "title": " how to strip trailing spaces in java",
    "description": "String str = new String(\" apples \"); str.trim(); // result is a nes string \"apple\"\n",
    "reg_date": "2021-10-12T12:03:53.000Z"
  },
  {
    "id": 1993,
    "keyword": null,
    "link": null,
    "title": " how to substring in java",
    "description": "String s = \"Let's Get This Bread\";  String subString = s.substring(6, 9); \t\t\t\t// (start index inclusive, end index exclusive)  // subString == \"Get\"\nclass Main {   public static void main (String[] args) {          String str = \"Hello World!\";          String firstWord = str.substring(0, 5);     //two parameters are start and end index: (inclusive, non-inclusive)          String secondWord = str.substring(6, 11);          //firstWord has string \"Hello\"     //secondWord has string \"World\"   } }\nclass scratch{     public static void main(String[] args) {         String hey = \"Hello World\";         System.out.println( hey.substring(0, 5) );         // prints Hello;     } }\nimport java.lang.*;  public class StringDemo { public static void main(String[] args) { String str = \"This is tutorials point\"; String substr = \"\";  // prints the substring after index 8 till index 17 substr = str.substring(8, 17); System.out.println(\"substring = \" + substr);  // prints the substring after index 0 till index 8 substr = str.substring(0, 8); System.out.println(\"substring = \" + substr); } }\n",
    "reg_date": "2021-10-12T12:03:53.000Z"
  },
  {
    "id": 1994,
    "keyword": null,
    "link": null,
    "title": " how to sum bigdecimal in java",
    "description": "// The BigDecimal is immutable so you need to do this:  BigDecimal result = test.add(new BigDecimal(30)); System.out.println(result); \n",
    "reg_date": "2021-10-12T12:03:53.000Z"
  },
  {
    "id": 1995,
    "keyword": null,
    "link": null,
    "title": " how to take input in java",
    "description": "Scanner sc = new Scanner(System.in);  // Create a Scanner object String userName = sc.nextLine();//read input string int age = sc.nextInt(); //read input integer long mobileNo = sc.nextLong(); //read input long double cgpa = sc.nextDouble(); //read input double System.out.println(userName);//output \nimport java.util.*; class a  {     void main ()     {         Scanner in = new Scanner(System.in);       System.out.print(\"Please enter you age: \");       int age = in.nextInt();       System.out.print(\"Please enter today's date: \");       int date = in.nextInt();       System.out.print(\"Please enter current month: \");       int month = in.nextInt();       System.out.print(\"Please enter current year: \");       int year = in.nextInt();     } } // ENJOY!!!!!!!\nScanner sc = new Scanner(System.in); String s = sc.next(); int n = sc.nextInt(); double d = sc.nextDouble(); float f = sc.nextFloat();  // more fast way BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String s = br.readLine(); // read line int c = br.read();        // read single char\nimport java.util.*;   class UserInputDemo    {   public static void main(String[] args)   {   Scanner sc= new Scanner(System.in);    //System.in is a standard input stream   System.out.print(\"Enter first number- \");   int a= sc.nextInt();   System.out.print(\"Enter second number- \");   int b= sc.nextInt();   System.out.print(\"Enter third number- \");   int c= sc.nextInt();   int d=a+b+c;   System.out.println(\"Total= \" +d);   }   }  \nimport java.util.Scanner; ...   Scanner console = new Scanner(System.in);   int num = console.nextInt();   console.nextLine() // to take in the enter after the nextInt()    String str = console.nextLine();\n//For continues reading a line import java.util.Scanner;   Scanner in = new Scanner(System.in);  while(in.hasNextLine()) {    String line = in.nextLine();    System.out.println(\"Next line is is: \" + line);  }\n",
    "reg_date": "2021-10-12T12:03:53.000Z"
  },
  {
    "id": 1996,
    "keyword": null,
    "link": null,
    "title": " how to take max value from priority queue in java",
    "description": "PriorityQueue<Integer> maxPriorityQ = new PriorityQueue<Integer>(Collections.reverseOrder());\n",
    "reg_date": "2021-10-12T12:03:53.000Z"
  },
  {
    "id": 1997,
    "keyword": null,
    "link": null,
    "title": " how to take schreen shot using java",
    "description": "BufferedImage image = new Robot().createScreenCapture(new Rectangle(Toolkit.getDefaultToolkit().getScreenSize())); ImageIO.write(image, \"png\", new File(\"/screenshot.png\")); \n",
    "reg_date": "2021-10-12T12:03:53.000Z"
  },
  {
    "id": 1998,
    "keyword": null,
    "link": null,
    "title": " how to take space separated input in java",
    "description": "String s[]= scanner.nextLine().split(\" \");for(int i =0 ;i < s.length;i++){    a[i]= Integer.parseInt(s[i]);}\n Scanner scanner = new Scanner(System.in);  int numOfBlocks = scanner.nextInt();  int weightArray[] = new weightArray[numOfBlocks];  for(int i=0;i<numOfBlocks;i++)        {         weightArray[i] = scanner.nextInt();        }  scanner.close(); //your logic\nimport java.util.*;  public class buffer  { \tpublic static void main(String[] args)  \t{ \t\tScanner scan = new Scanner(System.in); \t\tSystem.out.println(); \t\tint i; \t\t int a[]=new int[100]; \t\t String s[]= scan.nextLine().split(\" \"); \t\tfor(i =0 ;i < s.length;i++){ \t\t a[i]= Integer.parseInt(s[i]); \t\t} \t\tfor(i =0 ;i < s.length;i++) \t\t System.out.println(a[i]); \t} }\n",
    "reg_date": "2021-10-12T12:03:54.000Z"
  },
  {
    "id": 1999,
    "keyword": null,
    "link": null,
    "title": " how to take user input in joption pane jav",
    "description": "import javax.swing.JOptionPane;  public class UserInput { public static void main (String[] args) { String userenters;  userenters= JOptionPane.showInputDialog (\"What is your name?\");  System.out.println(\"You entered\" + userenters + \".\"); }  } \n",
    "reg_date": "2021-10-12T12:03:54.000Z"
  },
  {
    "id": 2000,
    "keyword": null,
    "link": null,
    "title": " how to test how many of one character is in a string java",
    "description": "int count = string.length() - string.replaceAll(\"g\",\"\").length()\n",
    "reg_date": "2021-10-12T12:03:54.000Z"
  },
  {
    "id": 2001,
    "keyword": null,
    "link": null,
    "title": " how to traverse a stack in java",
    "description": "Just get the Iterator via iterator():  Stack<YourObject> stack = ...  Iterator<YourObject> iter = stack.iterator();  while (iter.hasNext()){     System.out.println(iter.next()); } Or alternatively, if you just want to print them all use the enhanced-for loop:  for(YourObject obj : stack) {     System.out.println(obj); }\n",
    "reg_date": "2021-10-12T12:03:54.000Z"
  },
  {
    "id": 2002,
    "keyword": null,
    "link": null,
    "title": " how to traverse stack in java",
    "description": "Iterator value = stack.iterator(); // Displaying the values // after iterating through the stack System.out.println(\"The iterator values are: \"); while (value.hasNext()) { \tSystem.out.println(value.next()); }\nJust get the Iterator via iterator():  Stack<YourObject> stack = ...  Iterator<YourObject> iter = stack.iterator();  while (iter.hasNext()){     System.out.println(iter.next()); } Or alternatively, if you just want to print them all use the enhanced-for loop:  for(YourObject obj : stack) {     System.out.println(obj); }\n",
    "reg_date": "2021-10-12T12:03:54.000Z"
  },
  {
    "id": 2003,
    "keyword": null,
    "link": null,
    "title": " how to truncate decimals in java",
    "description": "DecimalFormat df = new DecimalFormat(fmt); df.setRoundingMode(RoundingMode.DOWN); s = df.format(d);\n",
    "reg_date": "2021-10-12T12:03:54.000Z"
  },
  {
    "id": 2004,
    "keyword": null,
    "link": null,
    "title": " how to turna date into a LocalDateTime java",
    "description": "public LocalDateTime convertToLocalDateTimeViaInstant(Date dateToConvert) {     return dateToConvert.toInstant()       .atZone(ZoneId.systemDefault())       .toLocalDateTime(); }\npublic LocalDateTime convertToLocalDateTimeViaMilisecond(Date dateToConvert) {     return Instant.ofEpochMilli(dateToConvert.getTime())       .atZone(ZoneId.systemDefault())       .toLocalDateTime(); }\npublic LocalDate convertToLocalDateViaInstant(Date dateToConvert) {     return dateToConvert.toInstant()       .atZone(ZoneId.systemDefault())       .toLocalDate(); }\n",
    "reg_date": "2021-10-12T12:03:54.000Z"
  },
  {
    "id": 2005,
    "keyword": null,
    "link": null,
    "title": " how to upgrade java 8 to 11 in ubuntu",
    "description": "sudo apt install default-jdk \nsudo apt-get install openjdk-11-jdk  $ sudo update-alternatives --config java There are 2 choices for the alternative java (providing /usr/bin/java).  Selection    Path                                            Priority   Status  * 0            /usr/lib/jvm/java-9-openjdk-amd64/bin/java       1500      auto mode   1            /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java   1500      manual mode   2            /usr/lib/jvm/java-9-openjdk-amd64/bin/java       1500      manual mode \nsudo apt-get update && sudo apt-get upgrade sudo apt-get install default-jdk\n",
    "reg_date": "2021-10-12T12:03:54.000Z"
  },
  {
    "id": 2006,
    "keyword": null,
    "link": null,
    "title": " how to upload a file in selenium java",
    "description": "driver.findElement(By.id(\"urid\")).sendKeys(\"drive:\\\\path\\\\filename.extension\");\n",
    "reg_date": "2021-10-12T12:03:54.000Z"
  },
  {
    "id": 2007,
    "keyword": null,
    "link": null,
    "title": " how to uppercase the first letter of a string in java",
    "description": "String str = \"java\"; str = str.substring(0, 1).toUpperCase() + str.substring(1); // str = \"Java\"\nString str = \"java\"; String cap = str.substring(0, 1).toUpperCase() + str.substring(1); // cap = \"Java\" \nString str = \"java\"; String cap = str.substring(0, 1).toUpperCase() + str.substring(1); // cap = \"Java\"\nString str = \"hello world!\";  // capitalize first letter String output = str.substring(0, 1).toUpperCase() + str.substring(1);  // print the string System.out.println(output); // Hello world! \nStringUtils.capitalize(..)\nclass Main {   public static void main(String[] args) {      // create a string     String message = \"everyone loves java\";      // stores each characters to a char array     char[] charArray = message.toCharArray();     boolean foundSpace = true;      for(int i = 0; i < charArray.length; i++) {        // if the array element is a letter       if(Character.isLetter(charArray[i])) {          // check space is present before the letter         if(foundSpace) {            // change the letter into uppercase           charArray[i] = Character.toUpperCase(charArray[i]);           foundSpace = false;         }       }        else {         // if the new character is not character         foundSpace = true;       }     }      // convert the char array to the string     message = String.valueOf(charArray);     System.out.println(\"Message: \" + message);   } }\n",
    "reg_date": "2021-10-12T12:03:54.000Z"
  },
  {
    "id": 2008,
    "keyword": null,
    "link": null,
    "title": " how to use Log android studio Java",
    "description": "import android.util.Log; Log.d(\"tagString\", \"messageString\");\n",
    "reg_date": "2021-10-12T12:03:55.000Z"
  },
  {
    "id": 2009,
    "keyword": null,
    "link": null,
    "title": " how to use a try catch for a null pointer exception in java",
    "description": "int n;//decalred as null n = n + 1;//null pointer exception ///////////////////////////////////// int n = 5; n = n + 1;//no null pointer exception\n",
    "reg_date": "2021-10-12T12:03:55.000Z"
  },
  {
    "id": 2010,
    "keyword": null,
    "link": null,
    "title": " how to use arrays java",
    "description": "// Accessing array elements using for loop public class AccessingArrayElements {    public static void main(String[] args)    {       int[] arrNum = {25, 23, 15, 20, 24};       for(int a = 0; a < arrNum.length; a++)       {          System.out.println(arrNum[a]);       }    } }\nint[] intArray = new int[20]; String[] cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\nFor example: int[ ] num = new int[6]; public class AccessingArrayElements {    public static void main(String[] args)    {       int[] arrNum = {25, 23, 15, 20, 24};       for(int a = 0; a < arrNum.length; a++)       {          System.out.println(arrNum[a]);       }    } }\n// How to use arrays  // Julian  public static void main(String[] args)    {    // Initialize array       int[] arrNum = {25, 23, 15, 20, 24};    // Recorrerlo       for(int a = 0; a < arrNum.length; a++)       {          System.out.println(arrNum[a]);       }    }\nnew String[] { \"A\", \"B\"}\n",
    "reg_date": "2021-10-12T12:03:55.000Z"
  },
  {
    "id": 2011,
    "keyword": null,
    "link": null,
    "title": " how to use base64.getdecoder() android",
    "description": "import android.util.Base64;  ...  String testValue = \"Hello, world!\";  byte[] encodeValue = Base64.encode(testValue.getBytes(), Base64.DEFAULT); byte[] decodeValue = Base64.decode(encodeValue, Base64.DEFAULT);  Log.d(\"ENCODE_DECODE\", \"defaultValue = \" + testValue); Log.d(\"ENCODE_DECODE\", \"encodeValue = \" + new String(encodeValue)); Log.d(\"ENCODE_DECODE\", \"decodeValue = \" + new String(decodeValue)); \n",
    "reg_date": "2021-10-12T12:03:55.000Z"
  },
  {
    "id": 2012,
    "keyword": null,
    "link": null,
    "title": " how to use character with for loop in java",
    "description": "String str = \"hello\"; for (char c : str.toCharArray())   //process c\npackage myForLoops  public class forLoop { \tpublic static void main(String[] args) {      \t\tfor (int i = j; i<=k; i++)           //variable \"i\" is the value checked in loop         //variable j is the starting value for i         //variable k is where we want the loop to end         //i++ adds 1 to i each iteration of the loop until i == k \t\t{         \t//displays \"i\" \t\t\tSystem.out.println(i); \t\t}                  //this is a for loop in use         for (int i = 1; i<=10; i++) {         \tSystem.out.println(i); //i will be displayed 10 times being              //increased by 1 every time         }                  for (char ch = 'k'; ch<= 'q'; ch++) {         \t//this is a for loop with characters, it will             //display every character from 'k' to 'q'         \tSystem.out.println(ch);         }         for (int i = 10; i>=1; i++) {         \t//this loop will be infinitely run since i              //will always be greater than 1, we do not want this         \tSystem.out.println(i);         }         for (int i = 10; i>=1; i--) {          \t//this is the correct way of doing the previous code              //(if you do not want an infinite for loop)         \tSystem.out.println(i);         } \t} }\n",
    "reg_date": "2021-10-12T12:03:55.000Z"
  },
  {
    "id": 2013,
    "keyword": null,
    "link": null,
    "title": " how to use for loop for array in java",
    "description": "// Java program to iterate over an array  // using for loop  import java.io.*;  class GFG {         public static void main(String args[]) throws IOException      {          int ar[] = { 1, 2, 3, 4, 5, 6, 7, 8 };          int i, x;             // iterating over an array          for (i = 0; i < ar.length; i++) {                 // accessing each element of array              x = ar[i];              System.out.print(x + \" \");          }      }  } \n",
    "reg_date": "2021-10-12T12:03:55.000Z"
  },
  {
    "id": 2014,
    "keyword": null,
    "link": null,
    "title": " how to use input in java",
    "description": "Scanner sc = new Scanner(System.in);  // Create a Scanner object String userName = sc.nextLine();//read input string int age = sc.nextInt(); //read input integer long mobileNo = sc.nextLong(); //read input long double cgpa = sc.nextDouble(); //read input double System.out.println(userName);//output \nimport java.util.*; class a  {     void main ()     {         Scanner in = new Scanner(System.in);       System.out.print(\"Please enter you age: \");       int age = in.nextInt();       System.out.print(\"Please enter today's date: \");       int date = in.nextInt();       System.out.print(\"Please enter current month: \");       int month = in.nextInt();       System.out.print(\"Please enter current year: \");       int year = in.nextInt();     } } // ENJOY!!!!!!!\nimport java.util.Scanner; ...   Scanner console = new Scanner(System.in);   int num = console.nextInt();   console.nextLine() // to take in the enter after the nextInt()    String str = console.nextLine();\n//For continues reading a line import java.util.Scanner;   Scanner in = new Scanner(System.in);  while(in.hasNextLine()) {    String line = in.nextLine();    System.out.println(\"Next line is is: \" + line);  }\n",
    "reg_date": "2021-10-12T12:03:55.000Z"
  },
  {
    "id": 2015,
    "keyword": null,
    "link": null,
    "title": " how to use jdbc",
    "description": "Connection =    Helps our java project connect to database Statement =    Helps to write and execute SQL query ResultSet =    A DataStructure where the data from query result stored +++++++++++++++++++++++++++++++++++++++++++++++++++++++++         After succesfully created the connect next step is STATEMENT  Statement statement = connection.createStatement(); We use createStatement() method to create the statement from our connection. -The result we get from this type of statement can only move from top to bottom, not other way around  Statement statement = connection. createStatement(ResultSet TYPE_SCROLL_INSENSITIVE ,ResultSet CONCUR_READ_ONLY);  -The result we get from this type of statement can freely move between rows  Once we have statement we can run the query and get the result to ResultSet format  \t\timport java.sql.ResultSet;          We use the method executeQuery() to execute our queries  ResultSet result = statement.               executeQuery(\"Select * from employees\");\n",
    "reg_date": "2021-10-12T12:03:55.000Z"
  },
  {
    "id": 2016,
    "keyword": null,
    "link": null,
    "title": " how to use math.round",
    "description": "//There are meny ways of rounding... Math.floor(5.5) //Answer 5, it alwas rounds down. Math.round(5.5) //Answer 6, it simpily rounds to the closest whole number. Math.ceil(5.5) //Answer 6, it alwas rounds up.  //You can do more things too... Math.floor(5.57 * 10) / 10 //Answer 5.5, the number turns into 55.7, Then gets floored (55.0), Then gets divied, (5.5).\n// rounds the result to the closest integer //syntax Math.round(x);  console.log(Math.round(0.9)); // expected output: 1  console.log(Math.round(5.95), Math.round(5.5), Math.round(5.05)); // expected output: 6 6 5  console.log(Math.round(-5.05), Math.round(-5.5), Math.round(-5.95)); // expected output: -5 -5 -6\n//There are meny ways of rounding... Math.floor(5.5) //Answer 5, it alwas rounds down. Math.round(5.5) //Answer 6, it simpily rounds to the closest whole number. Math.ceil(5.5) //Answer 6, it alwas rounds up.  //You can do more things too... Math.floor(5.57 * 10) / 10 //Answer 5.5, the number turns into 55.7, Then gets floored (55.0), Then gets divied, (5.5)\n",
    "reg_date": "2021-10-12T12:03:55.000Z"
  },
  {
    "id": 2017,
    "keyword": null,
    "link": null,
    "title": " how to use pow function in java",
    "description": "import java.lang.Math;     class Gfg {         // driver code      public static void main(String args[])      {          double a = 30;          double b = 2;          System.out.println(Math.pow(a, b));             a = 3;          b = 4;          System.out.println(Math.pow(a, b));             a = 2;          b = 6;          System.out.println(Math.pow(a, b));      }  \n// It prints 2^3 = 8 System.out.println(Math.pow(2,3)); // Output: 8\n",
    "reg_date": "2021-10-12T12:03:55.000Z"
  },
  {
    "id": 2018,
    "keyword": null,
    "link": null,
    "title": " how to use python as backend in android",
    "description": "//you can use Chaquopy //for more information you can see the documention of chaquopy.  buildscript {     repositories {         ...         maven { url \"https://chaquo.com/maven\" }     }     dependencies {         ...         classpath \"com.chaquo.python:gradle:9.1.0\"     } } \n",
    "reg_date": "2021-10-12T12:03:55.000Z"
  },
  {
    "id": 2019,
    "keyword": null,
    "link": null,
    "title": " how to use random bound on doubles java",
    "description": "import java.util.Random;  public class MyClass {      public static void main(String args[]) {           Double min = 0.0;  // Set To Your Desired Min Value           Double max = 10.0; // Set To Your Desired Max Value           double x = (Math.random() * ((max - min) + 1)) + min;   // This Will Create A Random Number Inbetween Your Min And Max.           double xrounded = Math.round(x * 100.0) / 100.0;   // Creates Answer To The Nearest 100 th, You Can Modify This To Change How It Rounds.           System.out.println(xrounded);    // This Will Now Print Out The Rounded, Random Number.      } }\n",
    "reg_date": "2021-10-12T12:03:56.000Z"
  },
  {
    "id": 2020,
    "keyword": null,
    "link": null,
    "title": " how to use scanner class in java",
    "description": "import java.util.Scanner;  // import scanner   Scanner myScanner = new Scanner(System.in); // Make scanner obj  String inputString = myScanner.nextLine(); // Take whole line  boolean inputBoolean = myScanner.nextBoolean(); //Boolean input  long inputLong = myScanner.nextLong(); //Interger,long ... input\nimport java.util.Scanner;  Public class Scanner { \tPublic static void main(String[] args) {     \t// Scanner *scanner name here* = new Scanner(System.in);       \tScanner scan = new Scanner(System.in);       \tSystem.out.println(\"Type anything and the scanner will take that input and print it\");       \tString next = scan.next();       \tSystem.out.println(next);     }  }\nimport java.util.Scanner;//import Scanner  Scanner input=new Scanner(System.in);//Create the scanner Obj  float numF = input.nextFloat();//Returns float int num1 = input.nextInt(); //Returns int byte byte1 = input.nextByte();//Returns Byte long lg1 = input.nextLong();//Returns long boolean b1 = input.nextBoolean();//Returns bool double num2 = input.nextDouble();//Returns Double String nome = input.nextLine();//Returns String  //execution is pause until you give input  \n// import Scanner import java.util.Scanner;  // Initialize Scanner Scanner input = new Scanner(System.in);  // Test program with Scanner System.out.println(\"What is your name?\"); String name = input.nextLine();  System.out.println(\"Hello,\" + name + \" , it is nice to meet you!\");\nimport java.util.Scanner; public class AddTwoNumbers2 {      public static void main(String[] args) {                  int num1, num2, sum;         Scanner sc = new Scanner(System.in);         System.out.println(\"Enter First Number: \");         num1 = sc.nextInt();                  System.out.println(\"Enter Second Number: \");         num2 = sc.nextInt();                  sc.close();         sum = num1 + num2;         System.out.println(\"Sum of these numbers: \"+sum);     } }  Output:\n",
    "reg_date": "2021-10-12T12:03:56.000Z"
  },
  {
    "id": 2021,
    "keyword": null,
    "link": null,
    "title": " how to use scanners in java",
    "description": "import java.util.Scanner;  // import scanner   Scanner myScanner = new Scanner(System.in); // Make scanner obj  String inputString = myScanner.nextLine(); // Take whole line  boolean inputBoolean = myScanner.nextBoolean(); //Boolean input  long inputLong = myScanner.nextLong(); //Interger,long ... input\nimport java.util.Scanner;  Public class Scanner { \tPublic static void main(String[] args) {     \t// Scanner *scanner name here* = new Scanner(System.in);       \tScanner scan = new Scanner(System.in);       \tSystem.out.println(\"Type anything and the scanner will take that input and print it\");       \tString next = scan.next();       \tSystem.out.println(next);     }  }\nScanner console = new Scanner(System.in);\n",
    "reg_date": "2021-10-12T12:03:56.000Z"
  },
  {
    "id": 2022,
    "keyword": null,
    "link": null,
    "title": " how to use string variables with an if statement in java",
    "description": "String a = \"Hello\"  if (a.equals(\"Hello\") { \tSystem.out.println(\"Variable A is Hello\"); } else { \tSystem.out.println(\"Variable A is not hello :(\"); }\nString a = \"Hello\"  if (a.equals(\"Hello\") { \tSystem.out.println(\"Variable A is Hello\"); } else { \tSystem.out.println(\"Variable A is not hello :(\"); }\n",
    "reg_date": "2021-10-12T12:03:56.000Z"
  },
  {
    "id": 2023,
    "keyword": null,
    "link": null,
    "title": " how to vibrate android java",
    "description": "import android.os.Vibrator; ... Vibrator v = (Vibrator) getSystemService(Context.VIBRATOR_SERVICE); // Vibrate for 500 milliseconds if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {     v.vibrate(VibrationEffect.createOneShot(500, VibrationEffect.DEFAULT_AMPLITUDE)); } else {     //deprecated in API 26      v.vibrate(500); } \n",
    "reg_date": "2021-10-12T12:03:56.000Z"
  },
  {
    "id": 2024,
    "keyword": null,
    "link": null,
    "title": " how to waitselenium webelement java",
    "description": "//required import WebDriver driver = new ChromeDriver(); //\t\t\t\t\t\t\t\t\t\t\t  Timeout in seconds WebDriverWait wait = new WebDriverWait(driver, 15);  //Three most common explicit waits  //waits until the element is visible and can be clicked wait.until(ExpectedConditions.elementToBeClickable(By.id(\"button1\")));  //waits until the element is visible on the page somewhere i.e. pixels > 0 wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"text_box1\")));  //waits until the element is removed from the page //This one is helpful when moving from one page to another wait.until(ExpectedConditions.invisibilityOfElementLocated(By.id(\"text_box1\")));  //implicit wait will wait a set time, similar to Thread.sleep(); driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);  //There is also a FluentWait, but I am unfamiliar with it \n",
    "reg_date": "2021-10-12T12:03:56.000Z"
  },
  {
    "id": 2025,
    "keyword": null,
    "link": null,
    "title": " how to write a member of in latex",
    "description": "A \\in B\nA\\in B\n",
    "reg_date": "2021-10-12T12:03:56.000Z"
  },
  {
    "id": 2026,
    "keyword": null,
    "link": null,
    "title": " how to write a merge sort array method ni java",
    "description": "public static void mergeSort(int[] a, int n) {     if (n < 2) {         return;     }     int mid = n / 2;     int[] l = new int[mid];     int[] r = new int[n - mid];       for (int i = 0; i < mid; i++) {         l[i] = a[i];     }     for (int i = mid; i < n; i++) {         r[i - mid] = a[i];     }     mergeSort(l, mid);     mergeSort(r, n - mid);       merge(a, l, r, mid, n - mid); } \npublic static void merge(   int[] a, int[] l, int[] r, int left, int right) {        int i = 0, j = 0, k = 0;     while (i < left && j < right) {         if (l[i] <= r[j]) {             a[k++] = l[i++];         }         else {             a[k++] = r[j++];         }     }     while (i < left) {         a[k++] = l[i++];     }     while (j < right) {         a[k++] = r[j++];     } } \n",
    "reg_date": "2021-10-12T12:03:56.000Z"
  },
  {
    "id": 2027,
    "keyword": null,
    "link": null,
    "title": " how to write a method inside main in java",
    "description": "public class Test {  public static void main(String[] args){  \tSystem.out.println(\"Hello World\"); \t } } \npublic class Program {   public static void main(String[] args){     System.out.println(\"Hello, World!\");   } }\npublic static void main(String args[]){}\npublic class Test {  public static void main(String[] args){  \tSystem.out.println(\"Hello Luggas\"); \t \t} }\npublic class Test {  static void main(String[] args){  \tSystem.out.println(\"Hello World\"); \t } } \npublic class Main {   static void myMethod() {     System.out.println(\"I just got executed!\");   }    public static void main(String[] args) {     myMethod();   } }  // Outputs \"I just got executed!\"   \n",
    "reg_date": "2021-10-12T12:03:56.000Z"
  },
  {
    "id": 2028,
    "keyword": null,
    "link": null,
    "title": " how to write a programme to display all the factors of a number in java",
    "description": "public class Factors {      public static void main(String[] args) {          int number = 60;          System.out.print(\"Factors of \" + number + \" are: \");         for(int i = 1; i <= number; ++i) {             if (number % i == 0) {                 System.out.print(i + \" \");             }         }     } }\n",
    "reg_date": "2021-10-12T12:03:56.000Z"
  },
  {
    "id": 2029,
    "keyword": null,
    "link": null,
    "title": " how to write deserlizer java",
    "description": "package net.sghill.example;  import net.sghill.example.User; import org.codehaus.jackson.JsonNode; import org.codehaus.jackson.JsonParser; import org.codehaus.jackson.ObjectCodec; import org.codehaus.jackson.map.DeserializationContext; import org.codehaus.jackson.map.JsonDeserializer;  import java.io.IOException;  public class UserDeserializer extends JsonDeserializer<User> {      @Override     public User deserialize(JsonParser jsonParser, DeserializationContext deserializationContext) throws IOException {         ObjectCodec oc = jsonParser.getCodec();         JsonNode node = oc.readTree(jsonParser);         return new User(null, node.get(\"username\").getTextValue(), node.get(\"password\").getTextValue());     } }\n",
    "reg_date": "2021-10-12T12:03:57.000Z"
  },
  {
    "id": 2030,
    "keyword": null,
    "link": null,
    "title": " how to write on top of equal sign in latex",
    "description": "$\\stackrel{\\text{sometext}}{=}$ \n",
    "reg_date": "2021-10-12T12:03:57.000Z"
  },
  {
    "id": 2031,
    "keyword": null,
    "link": null,
    "title": " how to write queries in java",
    "description": "import java.sql.*;  /**  * A Java MySQL SELECT statement example.  * Demonstrates the use of a SQL SELECT statement against a  * MySQL database, called from a Java program.  *   * Created by Alvin Alexander, http://alvinalexander.com  */ public class JavaMysqlSelectExample {    public static void main(String[] args)   {     try     {       // create our mysql database connection       String myDriver = \"org.gjt.mm.mysql.Driver\";       String myUrl = \"jdbc:mysql://localhost/test\";       Class.forName(myDriver);       Connection conn = DriverManager.getConnection(myUrl, \"root\", \"\");              // our SQL SELECT query.        // if you only need a few columns, specify them by name instead of using \"*\"       String query = \"SELECT * FROM users\";        // create the java statement       Statement st = conn.createStatement();              // execute the query, and get a java resultset       ResultSet rs = st.executeQuery(query);              // iterate through the java resultset       while (rs.next())       {         int id = rs.getInt(\"id\");         String firstName = rs.getString(\"first_name\");         String lastName = rs.getString(\"last_name\");         Date dateCreated = rs.getDate(\"date_created\");         boolean isAdmin = rs.getBoolean(\"is_admin\");         int numPoints = rs.getInt(\"num_points\");                  // print the results         System.out.format(\"%s, %s, %s, %s, %s, %s\\n\", id, firstName, lastName, dateCreated, isAdmin, numPoints);       }       st.close();     }     catch (Exception e)     {       System.err.println(\"Got an exception! \");       System.err.println(e.getMessage());     }   } } \n2, Fred, Flinstone, 2010-06-23, false, 6000 3, Barney, Rubble, 2010-06-23, false, 5000 \n",
    "reg_date": "2021-10-12T12:03:57.000Z"
  },
  {
    "id": 2032,
    "keyword": null,
    "link": null,
    "title": " how to write sensor data into file android studio",
    "description": "public class Main extends Activity implements SensorEventListener {  private SensorManager mSensorManager; private Sensor mAccelerometer; private FileWriter writer;  /** Called when the activity is first created. */ @Override public void onCreate(Bundle savedInstanceState) {     super.onCreate(savedInstanceState);     setContentView(R.layout.activiy_main);     mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);     mAccelerometer = mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER); }  public void onStartClick(View view) {     mSensorManager.registerListener(this, mAccelerometer, SensorManager.SENSOR_DELAY_NORMAL); }  public void onStopClick(View view) {     mSensorManager.unregisterListener(this); } protected void onResume() {     super.onResume();     writer = new FileWriter(\"myfile.txt\",true); }  protected void onPause() {     super.onPause();      if(writer != null) {        writer.close();     } }  @Override public void onAccuracyChanged(Sensor sensor, int accuracy) {  }  @Override public void onSensorChanged(SensorEvent event) {      float x = event.values[0];     float y = event.values[1];     float z = event.values[2];     writer.write(x+\",\"+y+\",\"+z+\"\\n\");   } }\n",
    "reg_date": "2021-10-12T12:03:57.000Z"
  },
  {
    "id": 2033,
    "keyword": null,
    "link": null,
    "title": " hql return new object from query",
    "description": "return em.createQuery(\"select new YourClass(yourTable.yourValue, sum(yourTable.yourValueButSum)) from YourTable yourTable \" +                                 \"where yourTable.yourValue = :value\" +                                 \" group by yourTable.yourGroup\" +                                 \" order by yourTable.yourValue desc\",                         Yourclass.class).setParameter(\"value\", value);\n",
    "reg_date": "2021-10-12T12:03:57.000Z"
  },
  {
    "id": 2034,
    "keyword": null,
    "link": null,
    "title": " http client java",
    "description": "HttpClient client = HttpClient.newHttpClient(); HttpRequest request = HttpRequest.newBuilder()       .uri(URI.create(\"http://openjdk.java.net/\"))       .build(); client.sendAsync(request, BodyHandlers.ofString())       .thenApply(HttpResponse::body)       .thenAccept(System.out::println)       .join();\n",
    "reg_date": "2021-10-12T12:03:57.000Z"
  },
  {
    "id": 2035,
    "keyword": null,
    "link": null,
    "title": " httpservletrequest in spring boot",
    "description": "package com.onclickinfo.tnoadmin;  import java.io.IOException; import javax.servlet.Filter; import javax.servlet.FilterChain; import javax.servlet.FilterConfig; import javax.servlet.ServletException; import javax.servlet.ServletRequest; import javax.servlet.ServletResponse; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import org.springframework.stereotype.Component;  @Component public class SimpleCORSFilter implements Filter {  \tprivate final Logger log = LoggerFactory.getLogger(SimpleCORSFilter.class);  \tpublic SimpleCORSFilter() { \t\tlog.info(\"SimpleCORSFilter initiliazed!\"); \t}  \t@Override \tpublic void doFilter(ServletRequest req, ServletResponse res, FilterChain chain) throws IOException, ServletException { \t\tlog.info(\"SimpleCORSFilter doFilter START \"); \t\tHttpServletRequest request = (HttpServletRequest) req; \t\tHttpServletResponse response = (HttpServletResponse) res;  \t\tresponse.setHeader(\"Access-Control-Allow-Origin\", request.getHeader(\"Origin\")); \t\tresponse.setHeader(\"Access-Control-Allow-Credentials\", \"true\"); \t\tresponse.setHeader(\"Access-Control-Allow-Methods\", \"POST, GET, OPTIONS, DELETE\"); \t\tresponse.setHeader(\"Access-Control-Max-Age\", \"3600\"); \t\tresponse.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type, Accept, X-Requested-With, remember-me\");  \t\tchain.doFilter(req, res); \t\tlog.info(\"SimpleCORSFilter doFilter END\"); \t}  \t/* \t@Override \tpublic void init(FilterConfig filterConfig) { \t}  \t@Override \tpublic void destroy() { \t} \t*/  } \n",
    "reg_date": "2021-10-12T12:03:57.000Z"
  },
  {
    "id": 2036,
    "keyword": null,
    "link": null,
    "title": " hwo to get teh length of a arylist java",
    "description": "aList.size()\n",
    "reg_date": "2021-10-12T12:03:57.000Z"
  },
  {
    "id": 2037,
    "keyword": null,
    "link": null,
    "title": " i have AdoptOpenJDK 8 but java --version gettinbg Unrecognized option: --version Error: Could not create the Java Virtual Machine. Error: A fatal exception has occurred. Program will exit.",
    "description": "java -version\njava -version and not java --version.\n",
    "reg_date": "2021-10-12T12:03:57.000Z"
  },
  {
    "id": 2038,
    "keyword": null,
    "link": null,
    "title": " i want to select data from one fragment and want to update in another",
    "description": "// In Fragment_1.java  Bundle bundle = new Bundle(); bundle.putString(\"key\",\"abc\"); // Put anything what you want  Fragment_2 fragment2 = new Fragment_2(); fragment2.setArguments(bundle);  getFragmentManager()       .beginTransaction()       .replace(R.id.content, fragment2)       .commit();               // In Fragment_2.java  Bundle bundle = this.getArguments();  if(bundle != null){      // handle your code here. }\n",
    "reg_date": "2021-10-12T12:03:57.000Z"
  },
  {
    "id": 2039,
    "keyword": null,
    "link": null,
    "title": " identifiers in java",
    "description": "Identifiers are names in java program. Identifiers can be class name,  method name or variable name.    Rules for defining identifiers in java: 1) Identifiers must start with letter, Underscore or dollar($) sign. 2) Identifiers can&rsquo;t start with numbers . 3) There is no limit on number of characters in identifier but not  recommended to have more than 15 characters 4) Java identifiers are case sensitive. 5) First letter can be alphabet ,or underscore and dollar sign.  From second letter we can have numbers 6) We should&rsquo;nt use reserve words for identifiers in java.\n",
    "reg_date": "2021-10-12T12:03:58.000Z"
  },
  {
    "id": 2040,
    "keyword": null,
    "link": null,
    "title": " if and in java",
    "description": "if(x == 1 && y == 2){   println(\"x = 1 and y = 2\"); }\n",
    "reg_date": "2021-10-12T12:03:58.000Z"
  },
  {
    "id": 2041,
    "keyword": null,
    "link": null,
    "title": " if else in java",
    "description": "System.out.println(\"How many sattelites does JUPITER have ??\"); \t\tC = scan.nextInt(); \t\t \t\tif (C == 79) \t\t{ \t\t\tSystem.out.println(\"Congrats ! You got the Third  Question Right :)\"); \t\t\tpoints = points + 1; \t\t} \t\t \t\telse if (C != 79) \t\t{ \t\t\tSystem.out.println(\"Sorry but your answer is wrong :(\"); \t\t}\nif(condition){ \t// block of code to be executed if the condition is true } else { \t// block of code to be executed if the condition is false }\nelse if statement is used to specify new condition if first condition is false. Syntax:  if(condition1) {    // execute if condition1 is true } else if (condition2) {    // execute if condition2 is true } else if (condition3) {    // execute if condition3 is true } else {    // execute if conditions 1, 2 and 3 becomes false }\nimport java.io.*; public class JavaIfElse {    public static void main(String[] args)    {       int number = 15;       // check if number is divisible by 2       if(number%2 == 0)       {          System.out.println(number + \" is even number\");       }       else       {          System.out.println(number + \" is odd number\");       }    } }\nif(a<b){ \t//if a<b you are here \t//do something }else if(a==b){ \t//if a==b you are here \t//do something }else{ \t//if none above conditions are matched you are here   \t//do something }\nif(x == 1 && y == 2){   println(\"x = 1 and y = 2\"); }\n",
    "reg_date": "2021-10-12T12:03:58.000Z"
  },
  {
    "id": 2042,
    "keyword": null,
    "link": null,
    "title": " if else java",
    "description": "System.out.println(\"How many sattelites does JUPITER have ??\"); \t\tC = scan.nextInt(); \t\t \t\tif (C == 79) \t\t{ \t\t\tSystem.out.println(\"Congrats ! You got the Third  Question Right :)\"); \t\t\tpoints = points + 1; \t\t} \t\t \t\telse if (C != 79) \t\t{ \t\t\tSystem.out.println(\"Sorry but your answer is wrong :(\"); \t\t}\nelse if statement is used to specify new condition if first condition is false. Syntax:  if(condition1) {    // execute if condition1 is true } else if (condition2) {    // execute if condition2 is true } else if (condition3) {    // execute if condition3 is true } else {    // execute if conditions 1, 2 and 3 becomes false }\nimport java.io.*; public class JavaIfElse {    public static void main(String[] args)    {       int number = 15;       // check if number is divisible by 2       if(number%2 == 0)       {          System.out.println(number + \" is even number\");       }       else       {          System.out.println(number + \" is odd number\");       }    } }\nif(a<b){ \t//if a<b you are here \t//do something }else if(a==b){ \t//if a==b you are here \t//do something }else{ \t//if none above conditions are matched you are here   \t//do something }\nif(x == 1 && y == 2){   println(\"x = 1 and y = 2\"); }\npublic class TestIfElse {      public static void main(String[] args) {         int a = 5, b = 6;         if (a > b) {             System.out.println(\"a is greater\");         } else {             System.out.println(\"b is greater\");         }     } }\n",
    "reg_date": "2021-10-12T12:03:58.000Z"
  },
  {
    "id": 2043,
    "keyword": null,
    "link": null,
    "title": " if hashmap contains only one key then how to get that key",
    "description": "HashMap<Node, Integer> x = qu.remove();\t // This \"qu\" is a queue which is returning a Hashmap // of type HashMap<Node, Integer> this hashmap contains // only one key,value pair Node node = x.keySet().iterator().next(); // here we are extracting that \"KEY\" of hashMap into variable of Node type\n",
    "reg_date": "2021-10-12T12:03:58.000Z"
  },
  {
    "id": 2044,
    "keyword": null,
    "link": null,
    "title": " if not java",
    "description": "boolean state = false;  if (state != true) { //Boolean is false.   System.out.println(\"No\"); } else { //Boolean is true   System.out.println(\"Yes\"); }\n",
    "reg_date": "2021-10-12T12:03:58.000Z"
  },
  {
    "id": 2045,
    "keyword": null,
    "link": null,
    "title": " if statement java",
    "description": "(condition) ? (what happens if true) : (what happens if false);  boolean party = friday ? play(\"what is love\") : play(\"The Sound of Silence\");\nSystem.out.println(\"How many sattelites does JUPITER have ??\"); \t\tC = scan.nextInt(); \t\t \t\tif (C == 79) \t\t{ \t\t\tSystem.out.println(\"Congrats ! You got the Third  Question Right :)\"); \t\t\tpoints = points + 1; \t\t} \t\t \t\telse if (C != 79) \t\t{ \t\t\tSystem.out.println(\"Sorry but your answer is wrong :(\"); \t\t}\nelse if statement is used to specify new condition if first condition is false. Syntax:  if(condition1) {    // execute if condition1 is true } else if (condition2) {    // execute if condition2 is true } else if (condition3) {    // execute if condition3 is true } else {    // execute if conditions 1, 2 and 3 becomes false }\nimport java.io.*; public class JavaIfElse {    public static void main(String[] args)    {       int number = 15;       // check if number is divisible by 2       if(number%2 == 0)       {          System.out.println(number + \" is even number\");       }       else       {          System.out.println(number + \" is odd number\");       }    } }\nif(a<b){ \t//if a<b you are here \t//do something }else if(a==b){ \t//if a==b you are here \t//do something }else{ \t//if none above conditions are matched you are here   \t//do something }\nint x = 3;  if (x == 3) {   // block of code to be executed if the condition is true }\n",
    "reg_date": "2021-10-12T12:03:58.000Z"
  },
  {
    "id": 2046,
    "keyword": null,
    "link": null,
    "title": " image cropper implementation",
    "description": "dependencies {     api 'com.theartofdev.edmodo:android-image-cropper:2.8.+' } \n// start picker to get image for cropping and then use the image in cropping activity CropImage.activity()   .setGuidelines(CropImageView.Guidelines.ON)   .start(this);  // start cropping activity for pre-acquired image saved on the device CropImage.activity(imageUri)  .start(this);  // for fragment (DO NOT use `getActivity()`) CropImage.activity()   .start(getContext(), this);\n",
    "reg_date": "2021-10-12T12:03:58.000Z"
  },
  {
    "id": 2047,
    "keyword": null,
    "link": null,
    "title": " imagesbutton how to set background",
    "description": "imageButton.setBackground(this.getDrawable(R.drawable.your_image)); \n",
    "reg_date": "2021-10-12T12:03:58.000Z"
  },
  {
    "id": 2048,
    "keyword": null,
    "link": null,
    "title": " imageview.setbackground",
    "description": "                        imageViewCategory.setBackground(getResources().getDrawable(R.drawable.layout_selected));           \n",
    "reg_date": "2021-10-12T12:03:58.000Z"
  },
  {
    "id": 2049,
    "keyword": null,
    "link": null,
    "title": " immagini java",
    "description": "\tpublic static void main(String[] args) { \t\tJFrame frame = new JFrame(); \t\tframe.setTitle(\"titolo\"); \t\tframe.setLayout(new FlowLayout()); \t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);  \t\tImageIcon imageIcon = new ImageIcon(\"percorso\"); \t\tJLabel label = new JLabel(imageIcon);  \t\tframe.add(label); \t\tframe.pack(); \t\tframe.setVisible(true); \t}\n",
    "reg_date": "2021-10-12T12:03:59.000Z"
  },
  {
    "id": 2050,
    "keyword": null,
    "link": null,
    "title": " implementing an abstract class jaav",
    "description": "Sometimes we may come across a situation where we cannot provide  implementation to all the methods in a class. We want to leave the  implementation to a class that extends it. In such case we declare a class as abstract.To make a class abstract we use key word abstract.  Any class that contains one or more abstract methods is declared as abstract.  If we don&rsquo;t declare class as abstract which contains abstract methods we get  compile time error.      1)Abstract classes cannot be instantiated   2)An abstarct classes contains abstract method, concrete methods or both.   3)Any class which extends abstarct class must override all methods of abstract     class   4)An abstarct class can contain either 0 or more abstract method.    \n interface human {     void dothings();     void eatthings();     void sleep(); } abstract class student implements human {     public void dothings()     {         System.out.println(\"doing something\");     }     public void eatthings()     {         System.out.println(\"eating something\");     } } class basisstudent extends student {     public void sleep()     {         System.out.println(\"no\");     } } public class Main {     public static void main(String[] args)     {         basisstudent you = new basisstudent();         you.dothings();         you.eatthings();         you.sleep();     } } \nabstract class scratch{    }\npublic abstract class GraphicObject {     abstract void draw(); }\n",
    "reg_date": "2021-10-12T12:03:59.000Z"
  },
  {
    "id": 2051,
    "keyword": null,
    "link": null,
    "title": " implementing iterator for linked list java",
    "description": "public class BasicLinkedList<T> implements Iterable<T> {     public int size;      private class Node {         private T data;         private Node next;          private Node(T data) {             this.data = data;             next = null;         }     }      private Node head;     private Node tail;      public BasicLinkedList() {         head = tail = null;     } //Add, remove method   public Iterator<T> iterator() {         return new Iterator<T>() {              Node current = head;              @Override             public boolean hasNext() {                 return current != null;             }              @Override             public T next() {                 if(hasNext()){                     T data = current.data;                     current = current.next;                     return data;                 }                 return null;             }              @Override             public void remove(){                 throw new UnsupportedOperationException(\"Remove not implemented.\");             }          }; \n#Enhances For Loop for (String temp : linkedList) {     System.out.println(temp); }\n// Java code to illustrate listIterator()  import java.io.*;  import java.util.LinkedList;  import java.util.ListIterator;     public class LinkedListDemo {      public static void main(String args[])      {          // Creating an empty LinkedList          LinkedList<String> list = new LinkedList<String>();             // Use add() method to add elements in the list          list.add(\"Geeks\");          list.add(\"for\");          list.add(\"Geeks\");          list.add(\"10\");          list.add(\"20\");             // Displaying the linkedlist          System.out.println(\"LinkedList:\" + list);                     // Setting the ListIterator at a specified position          ListIterator list_Iter = list.listIterator(2);             // Iterating through the created list from the position          System.out.println(\"The list is as follows:\");          while(list_Iter.hasNext()){             System.out.println(list_Iter.next());          }      }  } \n",
    "reg_date": "2021-10-12T12:03:59.000Z"
  },
  {
    "id": 2052,
    "keyword": null,
    "link": null,
    "title": " import all java util",
    "description": "import java.util.*;\n",
    "reg_date": "2021-10-12T12:03:59.000Z"
  },
  {
    "id": 2053,
    "keyword": null,
    "link": null,
    "title": " import android.support.v4.media.app.NotificationCompat.MediaStyle;",
    "description": "// use instead import androidx.media.app.NotificationCompat\n",
    "reg_date": "2021-10-12T12:03:59.000Z"
  },
  {
    "id": 2054,
    "keyword": null,
    "link": null,
    "title": " import android.support.v7.app.ActionBarActivity;",
    "description": "Latest version:   import androidx.appcompat.app.AppCompatActivity;    public class BaseActivity extends AppCompatActivity {   }\n",
    "reg_date": "2021-10-12T12:03:59.000Z"
  },
  {
    "id": 2055,
    "keyword": null,
    "link": null,
    "title": " import android.support.v7.app.appcompatactivity error",
    "description": "//if you are using androidx...... import android.support.v7.app.AppCompatActivity; //to import androidx.appcompat.app.AppCompatActivity;\n",
    "reg_date": "2021-10-12T12:03:59.000Z"
  },
  {
    "id": 2056,
    "keyword": null,
    "link": null,
    "title": " import androidx.core.util.ArraySet;                          ^   symbol:   class ArraySet   location: package androidx.core.util",
    "description": "// change this: import androidx.core.util.ArraySet; // to this: import androidx.collection.ArraySet;\n",
    "reg_date": "2021-10-12T12:03:59.000Z"
  },
  {
    "id": 2057,
    "keyword": null,
    "link": null,
    "title": " import arrays java",
    "description": "import java.util.Arrays; \n",
    "reg_date": "2021-10-12T12:03:59.000Z"
  },
  {
    "id": 2058,
    "keyword": null,
    "link": null,
    "title": " import collections in java",
    "description": "import java.util.Collection;\n",
    "reg_date": "2021-10-12T12:03:59.000Z"
  },
  {
    "id": 2059,
    "keyword": null,
    "link": null,
    "title": " import collectors java",
    "description": "import java.util.stream.Collectors;\n",
    "reg_date": "2021-10-12T12:04:00.000Z"
  },
  {
    "id": 2060,
    "keyword": null,
    "link": null,
    "title": " import com.google.firebase.iid.FirebaseInstanceIdService; ^ symbol: class FirebaseInstanceIdService location: package com.google.firebase.iid",
    "description": "// override the file: // platforms/android/app/src/main/java/com/adobe/phonegap/push/PushInstanceIDListenerService.java // by this content package com.adobe.phonegap.push;  import android.content.Intent; import android.content.Context; import android.content.SharedPreferences; import android.util.Log;  import com.google.firebase.iid.FirebaseInstanceId; import com.google.firebase.messaging.FirebaseMessagingService;  import org.json.JSONException;  import java.io.IOException;  public class PushInstanceIDListenerService extends FirebaseMessagingService implements PushConstants {     public static final String LOG_TAG = \"Push_InsIdService\";      @Override     public void onNewToken(String token) {         // Get updated InstanceID token.         String refreshedToken = FirebaseInstanceId.getInstance().getToken();         Log.d(LOG_TAG, \"Refreshed token: \" + refreshedToken);         // TODO: Implement this method to send any registration to your app's servers.         //sendRegistrationToServer(refreshedToken);     } }\n",
    "reg_date": "2021-10-12T12:04:00.000Z"
  },
  {
    "id": 2061,
    "keyword": null,
    "link": null,
    "title": " import everything in java",
    "description": "import java.util.*;\n",
    "reg_date": "2021-10-12T12:04:00.000Z"
  },
  {
    "id": 2062,
    "keyword": null,
    "link": null,
    "title": " import java.io.serializable",
    "description": "import java.io.Serializable;\n",
    "reg_date": "2021-10-12T12:04:00.000Z"
  },
  {
    "id": 2063,
    "keyword": null,
    "link": null,
    "title": " import java math",
    "description": "import java.lang.Math.*;  // usage double radius = 15; double area = Math.PI * radius * radius;\n",
    "reg_date": "2021-10-12T12:04:00.000Z"
  },
  {
    "id": 2064,
    "keyword": null,
    "link": null,
    "title": " import math java",
    "description": "import java.lang.Math.*;  // usage double radius = 15; double area = Math.PI * radius * radius;\n",
    "reg_date": "2021-10-12T12:04:00.000Z"
  },
  {
    "id": 2065,
    "keyword": null,
    "link": null,
    "title": " importance of finally block in java",
    "description": "Finally block is used for cleaning up of resources such as closing connections,  sockets etc. if try block executes with no exceptions then finally is called  after try block without executing catch block. If there is exception thrown in  try block finally block executes immediately after catch block. If an exception is thrown,finally block will be executed even if  the no catch block handles the exception.\n",
    "reg_date": "2021-10-12T12:04:00.000Z"
  },
  {
    "id": 2066,
    "keyword": null,
    "link": null,
    "title": " importance of throws keyword in java",
    "description": "Throws statement is used at the end of method signature to indicate that  an exception of a given type may be thrown from the method. The main purpose of throws keyword is to delegate responsibility of  exception handling to the caller methods, in the case of checked exception. In the case of unchecked exceptions, it is not required to use throws keyword. We can use throws keyword only for throwable types otherwise compile time error  saying incompatible types. An error is unchecked, it is not required to handle by try catch or by throws.      Syntax : Class Test{ Public static void main(String args[]) throws IE{ }}  The method should throw only checked exceptions and subclasses  of checked exceptions. It is not recommended to specify exception  superclasses in the throws class when the actual exceptions thrown in  the method are instances of their subclass.\n",
    "reg_date": "2021-10-12T12:04:00.000Z"
  },
  {
    "id": 2067,
    "keyword": null,
    "link": null,
    "title": " important features of java programming language",
    "description": "What are the major features of Java programming? Object Oriented. In Java, everything is an Object. ... Platform Independent. ... Simple. ... Secure. ... Architecture-neutral. ... Portable. ... Robust. ... Multithreaded.\n",
    "reg_date": "2021-10-12T12:04:01.000Z"
  },
  {
    "id": 2068,
    "keyword": null,
    "link": null,
    "title": " important interface in jdbc",
    "description": "Connection =    Helps our java project connect to database Statement =    Helps to write and execute SQL query ResultSet =    A DataStructure where the data from query result stored +++++++++++++++++++++++++++++++++++++++++++++++++++++++++         After succesfully created the connect next step is STATEMENT  Statement statement = connection.createStatement(); We use createStatement() method to create the statement from our connection. -The result we get from this type of statement can only move from top to bottom, not other way around  Statement statement = connection. createStatement(ResultSet TYPE_SCROLL_INSENSITIVE ,ResultSet CONCUR_READ_ONLY);  -The result we get from this type of statement can freely move between rows  Once we have statement we can run the query and get the result to ResultSet format  \t\timport java.sql.ResultSet;          We use the method executeQuery() to execute our queries  ResultSet result = statement.               executeQuery(\"Select * from employees\");\n",
    "reg_date": "2021-10-12T12:04:01.000Z"
  },
  {
    "id": 2069,
    "keyword": null,
    "link": null,
    "title": " in java how to compare two strings",
    "description": "class scratch{     public static void main(String[] args) {         String str1 = \"Nyello\";         String str2 = \"Hello\";         String str3 = \"Hello\";          System.out.println( str1.equals(str2) ); //prints false         System.out.println( str2.equals(str3) ); //prints true     } }\n",
    "reg_date": "2021-10-12T12:04:01.000Z"
  },
  {
    "id": 2070,
    "keyword": null,
    "link": null,
    "title": " in java how to convert string to integer",
    "description": "int result = Integer.parseInt(\"500\"); System.out.println(result) // prints 500 as int\nclass scratch{     public static void main(String[] args) {         String str = \"54\";         int num = Integer.parseInt(\"54\");         double doub = Double.parseDouble(\"54\");     } }\n",
    "reg_date": "2021-10-12T12:04:01.000Z"
  },
  {
    "id": 2071,
    "keyword": null,
    "link": null,
    "title": " in java how to throw exception from function",
    "description": "public static void foo() throws IOException {     // some code here, when something goes wrong, you might do:     throw new IOException(\"error message\"); }  public static void main(String[] args) {     try {         foo();     } catch (IOException e) {         System.out.println(e.getMessage());     } }\npublic void doChangePin(int oldPin, int pin) throws Exception {\t//need to add throws followed by exception name \t\tif (oldPin == pinCode) { \t\t\tpinCode = pin; \t\t} else { \t\t\tthrow new Exception(\"some message\");\t//throwing the exception by creating its new object \t\t} \t}\npublic static void main(String[] args) { \tScanner kb = new Scanner(System.in);     System.out.println(\"Enter a number\");     try {     \tdouble nb1 = kb.nextDouble();     \tif(nb1<0)         \tthrow new ArithmeticException();         else System.out.println( \"result : \" + Math.sqrt(nb1) );     } catch (ArithmeticException e) {         System.out.println(\"You tried an impossible sqrt\");     } }\nthrow new java.lang.Error(\"this is very bad\"); throw new java.lang.RuntimeException(\"this is not quite as bad\");\n",
    "reg_date": "2021-10-12T12:04:01.000Z"
  },
  {
    "id": 2072,
    "keyword": null,
    "link": null,
    "title": " in place transpose in a matrix in java",
    "description": "  //Transpose a Matrix    for (int row = 0; row < matrix.length; row++) {         for (int col = row; row < matrix[row].length; col++)     {     \t// Swap       \tint data = matrix[row][col];     \tmatrix[row][col] = matrix[col][row];    \t\tmatrix[col][row] = data;    }      }\n",
    "reg_date": "2021-10-12T12:04:01.000Z"
  },
  {
    "id": 2073,
    "keyword": null,
    "link": null,
    "title": " include android studio",
    "description": " <!-- Importation de notre Toolbar -->     <include         layout=\"@layout/fichier_a_inclure\"         android:layout_width=\"match_parent\"         android:layout_height=\"wrap_content\" />\n",
    "reg_date": "2021-10-12T12:04:01.000Z"
  },
  {
    "id": 2074,
    "keyword": null,
    "link": null,
    "title": " increment java",
    "description": "int i = 5;   i++; // i = 6\n// you can use two types of increments int x = 0; //Postincrement System.out.println(x++); //this prints 0 because increments after execute print //Pretincrement      // x = 1 and + 1 again is equal to 2 in the second print System.out.println(++x); // this prints 2 because increments before execute print \n",
    "reg_date": "2021-10-12T12:04:01.000Z"
  },
  {
    "id": 2075,
    "keyword": null,
    "link": null,
    "title": " infinity constatn in java",
    "description": "double inf = Double.POSITIVE_INFINITY; System.out.println(inf + 5); System.out.println(inf - inf); // same as Double.NaN System.out.println(inf * -1); // same as Double.NEGATIVE_INFINITY \n",
    "reg_date": "2021-10-12T12:04:01.000Z"
  },
  {
    "id": 2076,
    "keyword": null,
    "link": null,
    "title": " inheritance in java",
    "description": "Inheritance in Java is a mechanism in which one object acquires  all the properties and behaviors of a parent object. It is an important part of OOPs (Object Oriented programming system).\n// super class class Animal {    void eat()    {       System.out.println(\"Animal is eating.\");    } } // subclass class Lion extends Animal {    public static void main(String[] args)    {       Lion obj = new Lion();       obj.eat();    } }\n// Multiple inheritance in java interface M {    public void helloWorld(); } interface N {    public void helloWorld(); } // implementing interfaces public class MultipleInheritanceExample implements M, N {    public void helloWorld()    {       System.out.println(\"helloWorld() method\");    }    public static void main(String[] args)     {       MultipleInheritanceExample obj = new MultipleInheritanceExample();       obj.helloWorld();    } }\n// Multilevel inheritance in java class Animal {    void eating()    {       System.out.println(\"animal eating\");    } } class Lion extends Animal {    void roar()    {       System.out.println(\"lion roaring\");    } } public class Cub extends Lion {    void born()    {       System.out.println(\"cub drinking milk\");    }    public static void main(String[] args)    {       Animal obj1 = new Animal();       obj1.eating();       Lion obj2 = new Lion();       obj2.eating();       obj2.roar();       Cub obj3 = new Cub();       obj3.eating();       obj3.roar();       obj3.born();    } }\n// single inheritance example import java.util.*; class Animal {    void eat()    {       System.out.println(\"Animal is eating.\");    } } class Lion extends Animal {    void roar()    {       System.out.println(\"lion is roaring.\");    }    public static void main(String[] args)    {       Lion obj = new Lion();       obj.eat();       obj.roar();    } }\n// Hierarchical inheritance in java class Animal {    void eating()    {       System.out.println(\"animal eating\");    } } class Lion extends Animal {    void roar()    {       System.out.println(\"lion roaring\");    } } public class Dog extends Animal {    void bark()    {       System.out.println(\"dog barking\");    }    public static void main(String[] args)    {       Animal obj1 = new Animal();       obj1.eating();       Lion obj2 = new Lion();       obj2.eating();       obj2.roar();       Dog obj3 = new Dog();       obj3.eating();       obj3.bark();    } }\n// Hybrid inheritance in java class A  {    public void display()    {       System.out.println(\"class A display method\");    } } interface B  {    public void print(); } interface C {    public void print(); } public class HybridInheritanceDemo extends A implements B, C {    public void print()    {       System.out.println(\"implementing print method\");    }    public void show()    {       System.out.println(\"show method of class HybridInheritanceDemo\");    }    public static void main(String[] args)     {       HybridInheritanceDemo obj = new HybridInheritanceDemo();       obj.show();       obj.print();    } }\nBuilds relations between classes, main purpose:  create a TEST BASE CLAS and use it in other classes. Inheritance allows a class to inherit properties  (objects, variables, methods) from another source (class or interface).  Allows code reusability and easy to maintain. SUPER CLASS (also known as parent or base class):  is the class where the fields are being inherited from.  SUB CLASS (also known as the child or derived class):  is the class inheriting the properties INHERITANCE EXAMPLE In my framework I have a TestBase class where I store  all my reusable code and methods. My test execution classes,  and elements classes will extend the TestBase in order to reuse the code.  My framework follow POM and some pages have similar actions,  so I can easily use those similar actions and fields  by inheriting them from the ready classes.    Example: Base Page Class and Test Base Class.  These 2 class are being inherited from so many different classes.  For Example; In Pages Package, Base Page Class is being extended  by all the class by Base Package. So that Constructor  can be automatically be called in the sub classes.  That way you will be able to locate the elements  by using same driver.  Test Base Class can also be inheritance.  One driver, TestNG framework one before method to  setup browser and reuse it every single test class it.  By inheriting them to other test class. These 2 class are  abstract class and meant to be inherited to other classes.  We are not creating any object in these 2 class.  These class is super class. Comes from Selenium library WebDriver,  takes Screenshots, javascriptexecuter these are interface.  List and Set also interface. You cannot create object in interface.  They are only being reference. These are also example for abstraction. \nJava Inheritance (Subclass and Superclass) In Java, it is possible to inherit attributes and methods from one class to another. We group the \"inheritance concept\" into two categories:  subclass (child) - the class that inherits from another class superclass (parent) - the class being inherited from To inherit from a class, use the extends keyword.\nclass Arithmetic {  } class Adder extends Arithmetic {     public int add(int a, int b)      {         return a+b;     } } \n",
    "reg_date": "2021-10-12T12:04:02.000Z"
  },
  {
    "id": 2077,
    "keyword": null,
    "link": null,
    "title": " init cap java",
    "description": "String str = \"java\"; str = str.substring(0, 1).toUpperCase() + str.substring(1); // str = \"Java\"\n",
    "reg_date": "2021-10-12T12:04:02.000Z"
  },
  {
    "id": 2078,
    "keyword": null,
    "link": null,
    "title": " initialiser une arraylist",
    "description": "ArrayList<Type> list = new ArrayList<Type>(Arrays.asList( \t\telem1, elem2,..., elemN         ));\nArrayList couleurs = new ArrayList() {{  add(Rouge);  add(Bleu);  add(Vert); }};\n",
    "reg_date": "2021-10-12T12:04:02.000Z"
  },
  {
    "id": 2079,
    "keyword": null,
    "link": null,
    "title": " initialize a new class java",
    "description": "ClassName objectName = new ClassName(\"paramater1\", \"paramater2\");\n",
    "reg_date": "2021-10-12T12:04:02.000Z"
  },
  {
    "id": 2080,
    "keyword": null,
    "link": null,
    "title": " initialize an array in java",
    "description": "int[] data = {10,20,30,40,50,60,71,80,90,91}; // or int[] data; data = new int[] {10,20,30,40,50,60,71,80,90,91}; // or int[] data = new int[10]; data = {10,20,30,40,50,60,71,80,90,91};\nint[] intArray = new int[]{ 1,2,3,4,5,6,7,8,9,10 }\nint intArray[];    //declaring array intArray = new int[20];  // allocating memory to array //OR int[] intArray = new int[20]; // combining both statements in one\nint[] arr = new int[10];\t//Can hold 10 elements\nint[] arr = new int[5];\t // integer array of size 5 you can also change data type \nint[] array=new int[5]; int[] array2=new int[]{1,2};\n",
    "reg_date": "2021-10-12T12:04:02.000Z"
  },
  {
    "id": 2081,
    "keyword": null,
    "link": null,
    "title": " initialize applet in java",
    "description": "<html>    <title>The ImageDemo applet</title>    <hr>    <applet code = \"ImageDemo.class\" width = \"0\" height = \"0\">       <param name = \"audio\" value = \"test.wav\">    </applet>    <hr> </html>\n",
    "reg_date": "2021-10-12T12:04:02.000Z"
  },
  {
    "id": 2082,
    "keyword": null,
    "link": null,
    "title": " initialize array with values java",
    "description": "int[] data = {10,20,30,40,50,60,71,80,90,91}; // or int[] data; data = new int[] {10,20,30,40,50,60,71,80,90,91}; // or int[] data = new int[10]; data = {10,20,30,40,50,60,71,80,90,91};\nint[] arr = new int[10];\t//Can hold 10 elements\nint[] data = {10,20,30,40,50,60,71,80,90,91};  // or  int[] data; data = new int[] {10,20,30,40,50,60,71,80,90,91}; \nint[] arr = {3,6,9,12}; int[] arr = new int[]{1, 2, 3};\nint[] age = new int[5];\n//Given values must match array type int[] myIntArray = {1, 2, 3}; \n",
    "reg_date": "2021-10-12T12:04:02.000Z"
  },
  {
    "id": 2083,
    "keyword": null,
    "link": null,
    "title": " initialize arraylist",
    "description": "ArrayList<Type> obj = new ArrayList<Type>(         Arrays.asList(Object o1, Object o2, Object o3, ....so on));\nimport java.util.*; public class InitializationExample1 {    public static void main(String args[]) { \t   ArrayList<String> obj = new ArrayList<String>( \t\tArrays.asList(\"Pratap\", \"Peter\", \"Harsh\")); \t  System.out.println(\"Elements are:\"+obj);    } }\nArrayList<Type> list = new ArrayList<Type>(Arrays.asList( \t\telem1, elem2,..., elemN         ));\nArrayList couleurs = new ArrayList() {{  add(Rouge);  add(Bleu);  add(Vert); }};\nList<Type> list = Arrays.asList(elem1, elem2,..., elemN);\n",
    "reg_date": "2021-10-12T12:04:02.000Z"
  },
  {
    "id": 2084,
    "keyword": null,
    "link": null,
    "title": " initialize arraylist in 1 line in java",
    "description": "Arrays.asList(\"Code\", \"Shifter\");\n",
    "reg_date": "2021-10-12T12:04:02.000Z"
  },
  {
    "id": 2085,
    "keyword": null,
    "link": null,
    "title": " initialize hashset java",
    "description": "Set<String> set = new HashSet<>(Arrays.asList(\"a\", \"b\", \"c\"));\nSet<String> h = new HashSet<>(Arrays.asList(\"a\", \"b\")); \n",
    "reg_date": "2021-10-12T12:04:02.000Z"
  },
  {
    "id": 2086,
    "keyword": null,
    "link": null,
    "title": " inline arraylist initialization java",
    "description": "    List<Integer> integerArray = Arrays.asList(2, 41, 42, 48);\nArrayList<String> list = new ArrayList<String>() {{     add(\"A\");     add(\"B\");     add(\"C\"); }}; \nArrayList<Type> obj = new ArrayList<Type>(         Arrays.asList(Object o1, Object o2, Object o3, ....so on));\nimport java.util.*; public class InitializationExample1 {    public static void main(String args[]) { \t   ArrayList<String> obj = new ArrayList<String>( \t\tArrays.asList(\"Pratap\", \"Peter\", \"Harsh\")); \t  System.out.println(\"Elements are:\"+obj);    } }\nArrayList<Type> list = new ArrayList<Type>(Arrays.asList( \t\telem1, elem2,..., elemN         ));\n",
    "reg_date": "2021-10-12T12:04:03.000Z"
  },
  {
    "id": 2087,
    "keyword": null,
    "link": null,
    "title": " inline foreach java",
    "description": "names.forEach(name -> System.out.println(name));\n",
    "reg_date": "2021-10-12T12:04:03.000Z"
  },
  {
    "id": 2088,
    "keyword": null,
    "link": null,
    "title": " input array through scanner in java",
    "description": "    public class TakingInput {      public static void main(String[] args) {          Scanner s = new Scanner(System.in);          System.out.println(\"enter number of elements\");          int n=s.nextInt();          int arr[]=new int[n];          System.out.println(\"enter elements\");          for(int i=0;i<n;i++){//for reading array             arr[i]=s.nextInt();          }          for(int i: arr){ //for printing array              System.out.println(i);          }       }  } \npublic static void main (String[] args) {     Scanner input = new Scanner(System.in);     double[] numbers = new double[5];      for (int i = 0; i < numbers.length; i++)     {         System.out.println(\"Please enter number\");         numbers[i] = input.nextDouble();     } } \n",
    "reg_date": "2021-10-12T12:04:03.000Z"
  },
  {
    "id": 2089,
    "keyword": null,
    "link": null,
    "title": " input char java",
    "description": "import java.util.Scanner; Scanner inp = new Scanner(System.in); char character = inp.next().charAt(0);\nchar c = reader.next().charAt(0);\n",
    "reg_date": "2021-10-12T12:04:03.000Z"
  },
  {
    "id": 2090,
    "keyword": null,
    "link": null,
    "title": " input double java",
    "description": "import java.util.Scanner;  Scanner input = new Scanner(System.in); double choice = input.nextDouble();\n",
    "reg_date": "2021-10-12T12:04:03.000Z"
  },
  {
    "id": 2091,
    "keyword": null,
    "link": null,
    "title": " input edittext in android dialog",
    "description": "final View view = layoutInflater.inflate(R.layout.xml_file_created_above, null); AlertDialog alertDialog = new AlertDialog.Builder(ct).create(); alertDialog.setTitle(\"Your Title Here\"); alertDialog.setIcon(\"Icon id here\"); alertDialog.setCancelable(false); Constant.alertDialog.setMessage(\"Your Message Here\");   final EditText etComments = (EditText) view.findViewById(R.id.etComments);  alertDialog.setButton(AlertDialog.BUTTON_POSITIVE, \"OK\", new OnClickListener() {     @Override     public void onClick(DialogInterface dialog, int which) {      } });   alertDialog.setButton(AlertDialog.BUTTON_NEGATIVE, \"Cancel\", new OnClickListener() {     @Override     public void onClick(DialogInterface dialog, int which) {         alertDialog.dismiss()     } });   alertDialog.setView(view); alertDialog.show();\n",
    "reg_date": "2021-10-12T12:04:03.000Z"
  },
  {
    "id": 2092,
    "keyword": null,
    "link": null,
    "title": " input file in java",
    "description": "import java.io.*; public class CopyFile {     public static void main(String args[]) throws IOException {         FileInputStream in = null;       FileOutputStream out = null;        try {          in = new FileInputStream(\"input.txt\");          out = new FileOutputStream(\"output.txt\");                    int c;          while ((c = in.read()) != -1) {             out.write(c);          }       }finally {          if (in != null) {             in.close();          }          if (out != null) {             out.close();          }       }    } }\n",
    "reg_date": "2021-10-12T12:04:03.000Z"
  },
  {
    "id": 2093,
    "keyword": null,
    "link": null,
    "title": " inputstream to string java",
    "description": " StringBuilder textBuilder = new StringBuilder();         try (Reader reader = new BufferedReader(new InputStreamReader             (stream, Charset.forName(StandardCharsets.UTF_8.name())))) {             int c = 0;             while ((c = reader.read()) != -1) {                 textBuilder.append((char) c);             }         } catch (IOException e) {             e.printStackTrace();         }  textBuilder.toString;\n Scanner s = new Scanner(inputStream).useDelimiter(\"\\\\A\");  String result = s.hasNext() ? s.next() : \"\"; \n",
    "reg_date": "2021-10-12T12:04:03.000Z"
  },
  {
    "id": 2094,
    "keyword": null,
    "link": null,
    "title": " insert data into list java",
    "description": "List<String> list = new ArrayList<String>(); list.add(s1); list.add(s3); list.add(1, s2); System.out.println(list);\n",
    "reg_date": "2021-10-12T12:04:03.000Z"
  },
  {
    "id": 2095,
    "keyword": null,
    "link": null,
    "title": " insert element into arraylist java",
    "description": "ArrayList<Integer> str=new ArrayList<Integer>(); str.add(0); str.add(1);  // Result = [0, 1]      str.add(1, 11);  // Result = [0, 11, 1]\nArrayList<String> arrayList = new ArrayList<>(); // Adds element at the back of the list arrayList.add(\"foo\"); arrayList.add(\"bar\"); // Result = [\"foo\", \"bar\"]  // Adds element at the specified index arrayList.add(1, \"baz\"); // Result = [\"foo\", \"baz\", \"bar\"]\n",
    "reg_date": "2021-10-12T12:04:03.000Z"
  },
  {
    "id": 2096,
    "keyword": null,
    "link": null,
    "title": " insert string in string java",
    "description": "String newString = originalString.substring(0, index + 1)                             + stringToBeInserted                             + originalString.substring(index + 1); \n",
    "reg_date": "2021-10-12T12:04:04.000Z"
  },
  {
    "id": 2097,
    "keyword": null,
    "link": null,
    "title": " insertion sort java",
    "description": "/** * Insertion sort algorithm, O(n^2) time complexity. */ public static void insertionSort(int[] arr) {   int n = arr.length;   for(int i = 1; i < n; i++) {     int key = arr[i];     int j = i - 1;     //shift until you find the position to place the element 'key'     while(j >= 0 && arr[j] > key) {       arr[j+1] = arr[j];       j--;     }     //place element 'key' in the correct position in the sorted part of the array     arr[j+1] = key;   } }\nInsertion program public class InsertionSortExample {    public void sort(int[] arrNum)    {       int number = arrNum.length;       for(int a = 1; a < number; ++a)       {          int keyValue = arrNum[a];          int b = a - 1;          while(b >= 0 && arrNum[b] > keyValue)          {             arrNum[b + 1] = arrNum[b];             b = b - 1;          }          arrNum[b + 1] = keyValue;       }    }    static void displayArray(int[] arrNum)    {       int num = arrNum.length;       for(int a = 0; a < num; ++a)       {          System.out.print(arrNum[a] + \" \");       }       System.out.println();    }    public static void main(String[] args)    {       int[] arrInput = { 50, 80, 10, 30, 90, 60 };       InsertionSortExample obj = new InsertionSortExample();       obj.sort(arrInput);       displayArray(arrInput);    } }\n// Java program for implementation of Insertion Sort public class InsertionSort {     /*Function to sort array using insertion sort*/     void sort(int arr[])     {         int n = arr.length;         for (int i=1; i<n; ++i)         {             int key = arr[i];             int j = i-1;                          /* Move elements of arr[0..i-1], that are             greater than key, to one position ahead             of their current position */             while (j>=0 && arr[j] > key)             {                 arr[j+1] = arr[j];                 j = j-1;             }             arr[j+1] = key;         }     }     /* A utility function to print array of size n*/     static void printArray(int arr[])     {         int n = arr.length;         for (int i=0; i<n; ++i)             System.out.print(arr[i] + \" \");         System.out.println();     }     // Driver method     public static void main(String args[])     {         int arr[] = {12, 11, 13, 5, 6};         InsertionSort ob = new InsertionSort();         ob.sort(arr);         printArray(arr);     } }\n// Por ter uma complexidade alta, // n&atilde;o &eacute; recomendado para um conjunto de dados muito grande. // Complexidade: O(n&sup2;) / O(n**2) / O(n^2) // @see https://www.youtube.com/watch?v=TZRWRjq2CAg // @see https://www.cs.usfca.edu/~galles/visualization/ComparisonSort.html  function insertionSort(vetor) {     let current;     for (let i = 1; i < vetor.length; i += 1) {         let j = i - 1;         current = vetor[i];         while (j >= 0 && current < vetor[j]) {             vetor[j + 1] = vetor[j];             j--;         }         vetor[j + 1] = current;     }     return vetor; }  insertionSort([1, 2, 5, 8, 3, 4])\n",
    "reg_date": "2021-10-12T12:04:04.000Z"
  },
  {
    "id": 2098,
    "keyword": null,
    "link": null,
    "title": " install java",
    "description": "\tAn incredible language that receives far more hate than it deserves because of it's poor beginnings. \tEveryone remembers the slow java applets but often fail to understand Java's many positives including:  - compatability with many different systems  - Just-In-Time compilation making it almost as fast as a native language  - the wide range of high-quality and open source libraries developed over    many years  \tSure, it may not look as sexy as Python or NodeJS, but when you're debugging the call stack 50 functions deep, you'll be glad you picked Java\n#Install java in Linux sudo apt install openjdk-11-jre-headless -y  # version 11.0.10+9-0ubuntu1~20.04, or sudo apt install default-jre -y              # version 2:1.11-72 sudo apt install openjdk-8-jre-headless -y   # version 8u282-b08-0ubuntu1~20.04 sudo apt install openjdk-13-jre-headless -y  # version 13.0.4+8-1~20.04 sudo apt install openjdk-14-jre-headless -y  # version 14.0.2+12-1~20.04\npublic class Example {   public static void main(String[] args) {   \tSystem.out.println(\"Hello, world!\");    } }\nJava is a computer language developed by Sun Microsystems. It was released in 1995 as a core part of Sun's Java platform. Although its syntax is very similar to the C, C Plus plus, it is based on a simpler object model\nJava is a set of computer software and specifications developed by James Gosling at Sun Microsystems, which was later acquired by the Oracle Corporation, that provides a system for developing application software and deploying it in a cross-platform computing environment. \n",
    "reg_date": "2021-10-12T12:04:04.000Z"
  },
  {
    "id": 2099,
    "keyword": null,
    "link": null,
    "title": " install java 11 jdk raspberry pi",
    "description": "java --version\nsudo wget http://cdn.azul.com/zulu-embedded/bin/zulu11.31.16-ca-jdk11.0.3-linux_aarch32hf.tar.gz sudo tar -xfvz zulu11.31.16-ca-jdk11.0.3-linux_aarch32hf.tar.gz sudo rm *.tar.gz\nsudo mkdir /opt/jdk cd /opt/jdk\nsudo update-alternatives --install /usr/bin/java java /opt/jdk/zulu11.31.16-ca-jdk11.0.3-linux_aarch32hf/bin/java 1 sudo update-alternatives --install /usr/bin/javac javac /opt/jdk/zulu11.31.16-ca-jdk11.0.3-linux_aarch32hf/bin/javac 1\n",
    "reg_date": "2021-10-12T12:04:04.000Z"
  },
  {
    "id": 2100,
    "keyword": null,
    "link": null,
    "title": " install java 11 mac",
    "description": "$ brew cask install java\n",
    "reg_date": "2021-10-12T12:04:04.000Z"
  },
  {
    "id": 2101,
    "keyword": null,
    "link": null,
    "title": " install java 16 on linux",
    "description": "//if you don't have sudo add-apt-repository sudo apt-get install software-properties-common  //install the java installar sudo add-apt-repository ppa:linuxuprising/java  sudo apt update   //install the newest keyservers su -  echo \"deb http://ppa.launchpad.net/linuxuprising/java/ubuntu focal main\" | tee /etc/apt/sources.list.d/linuxuprising-java.list  apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 73C3DB2A  apt-get update  exit   //install latest package with recommendations sudo apt install oracle-java16-installer --install-recommends\n",
    "reg_date": "2021-10-12T12:04:04.000Z"
  },
  {
    "id": 2102,
    "keyword": null,
    "link": null,
    "title": " install java centos 8",
    "description": "sudo dnf install java-11-openjdk-devel\n",
    "reg_date": "2021-10-12T12:04:04.000Z"
  },
  {
    "id": 2103,
    "keyword": null,
    "link": null,
    "title": " install java debian 8",
    "description": "echo deb http://archive.debian.org/debian jessie-backports main | sudo tee /etc/apt/sources.list.d/jessie-backports.list echo 'Acquire::Check-Valid-Until \"false\";' | sudo tee -a /etc/apt/apt.conf sudo apt update sudo apt -t jessie-backports install openjdk-8-jre \n",
    "reg_date": "2021-10-12T12:04:04.000Z"
  },
  {
    "id": 2104,
    "keyword": null,
    "link": null,
    "title": " install java in wsl",
    "description": "#Install java in Linux sudo apt install openjdk-11-jre-headless -y  # version 11.0.10+9-0ubuntu1~20.04, or sudo apt install default-jre -y              # version 2:1.11-72 sudo apt install openjdk-8-jre-headless -y   # version 8u282-b08-0ubuntu1~20.04 sudo apt install openjdk-13-jre-headless -y  # version 13.0.4+8-1~20.04 sudo apt install openjdk-14-jre-headless -y  # version 14.0.2+12-1~20.04\n",
    "reg_date": "2021-10-12T12:04:04.000Z"
  },
  {
    "id": 2105,
    "keyword": null,
    "link": null,
    "title": " install java on linux",
    "description": "# install default JDK sudo apt install default-jdk # install default JRE sudo apt install default-jre # install specific JDK version sudo apt install openjdk-17-jdk # install specific JRE version sudo apt install openjdk-17-jre\nsudo apt install openjdk-8-jre\nsudo apt install default-jdk \nsudo apt install openjdk-8-jdk\n$ sudo apt install openjdk-11-jdk \n// for debian & debian based linux distributions \tsudo su or su -   \techo \"deb http://ppa.launchpad.net/linuxuprising/java/ubuntu focal main\" | tee /etc/apt/sources.list.d/linuxuprising-java.list     apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 73C3DB2A     apt-get update     Ctrl + D or exit // for Ubuntu, Linux Mint, Pop!_OS or Zorin Os \tsudo add-apt-repository ppa:linuxuprising/java     sudo apt update      // Now you can install Oracle JDK 16 on Debian / Ubuntu and Linux distributions based on these: \t//Install and make Oracle JDK 16 the default JDK version: \t\tsudo apt install oracle-java16-installer --install-recommends     //Install but don't make Oracle JDK 16 the default JDK version: \t\tsudo apt install oracle-java16-installer --no-install-recommends          //To check which Java version is set as default on your system \tjava -version or javac -version  //To accept the Oracle Java 16 license automatically \techo oracle-java16-installer shared/accepted-oracle-license-v1-2 select true | sudo /usr/bin/debconf-set-selections     \t//If that doesn't work, also try this command:     echo oracle-java16-installer shared/accepted-oracle-licence-v1-2 boolean true | sudo /usr/bin/debconf-set-selections\n",
    "reg_date": "2021-10-12T12:04:04.000Z"
  },
  {
    "id": 2106,
    "keyword": null,
    "link": null,
    "title": " install java on ubuntu",
    "description": "sudo apt-get install openjdk-8-jdk\nsudo apt install default-jdk \nsudo apt install default-jre # installs java sudo apt install default-jdk # installs javac\nreadlink -f $(which java)  \nsudo apt install default-jre \n// for debian & debian based linux distributions \tsudo su or su -   \techo \"deb http://ppa.launchpad.net/linuxuprising/java/ubuntu focal main\" | tee /etc/apt/sources.list.d/linuxuprising-java.list     apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 73C3DB2A     apt-get update     Ctrl + D or exit // for Ubuntu, Linux Mint, Pop!_OS or Zorin Os \tsudo add-apt-repository ppa:linuxuprising/java     sudo apt update      // Now you can install Oracle JDK 16 on Debian / Ubuntu and Linux distributions based on these: \t//Install and make Oracle JDK 16 the default JDK version: \t\tsudo apt install oracle-java16-installer --install-recommends     //Install but don't make Oracle JDK 16 the default JDK version: \t\tsudo apt install oracle-java16-installer --no-install-recommends          //To check which Java version is set as default on your system \tjava -version or javac -version  //To accept the Oracle Java 16 license automatically \techo oracle-java16-installer shared/accepted-oracle-license-v1-2 select true | sudo /usr/bin/debconf-set-selections     \t//If that doesn't work, also try this command:     echo oracle-java16-installer shared/accepted-oracle-licence-v1-2 boolean true | sudo /usr/bin/debconf-set-selections\n",
    "reg_date": "2021-10-12T12:04:05.000Z"
  },
  {
    "id": 2107,
    "keyword": null,
    "link": null,
    "title": " install java on ubuntu 20.04",
    "description": "sudo apt update sudo apt install openjdk-11-jdk  sudo apt update sudo apt install openjdk-8-jdk\n# Java in ubuntu # first check if java is already installed or not using  java -version  # install openjdk (Java Development Kit) sudo apt install default-jdk # it will ask for confirmation...around 480 MB will be downloaded # this will install both the latest jdk and jre of openjdk distribution  # check for java java -version  #check for javac javac -version  # If you only want to install jre and not jdk, just run sudo apt install default-jre\nsudo apt install default-jre \nsudo apt-get install openjdk-11-jdk \nsudo apt-get update && sudo apt-get upgrade \napt-key adv --keyserver keyserver.ubuntu.com --recv-keys EA8CACC073C3DB2A \n",
    "reg_date": "2021-10-12T12:04:05.000Z"
  },
  {
    "id": 2108,
    "keyword": null,
    "link": null,
    "title": " install java runtime mac brew",
    "description": "$ brew cask install java\nbrew install java \n",
    "reg_date": "2021-10-12T12:04:05.000Z"
  },
  {
    "id": 2109,
    "keyword": null,
    "link": null,
    "title": " install java ubuntu",
    "description": "sudo apt-get install openjdk-8-jdk\nsudo apt install default-jdk \nsudo apt install default-jre # installs java sudo apt install default-jdk # installs javac\nsudo apt install default-jre \n// for debian & debian based linux distributions \tsudo su or su -   \techo \"deb http://ppa.launchpad.net/linuxuprising/java/ubuntu focal main\" | tee /etc/apt/sources.list.d/linuxuprising-java.list     apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 73C3DB2A     apt-get update     Ctrl + D or exit // for Ubuntu, Linux Mint, Pop!_OS or Zorin Os \tsudo add-apt-repository ppa:linuxuprising/java     sudo apt update      // Now you can install Oracle JDK 16 on Debian / Ubuntu and Linux distributions based on these: \t//Install and make Oracle JDK 16 the default JDK version: \t\tsudo apt install oracle-java16-installer --install-recommends     //Install but don't make Oracle JDK 16 the default JDK version: \t\tsudo apt install oracle-java16-installer --no-install-recommends          //To check which Java version is set as default on your system \tjava -version or javac -version  //To accept the Oracle Java 16 license automatically \techo oracle-java16-installer shared/accepted-oracle-license-v1-2 select true | sudo /usr/bin/debconf-set-selections     \t//If that doesn't work, also try this command:     echo oracle-java16-installer shared/accepted-oracle-licence-v1-2 boolean true | sudo /usr/bin/debconf-set-selections\n#Install java in Linux sudo apt install openjdk-11-jre-headless -y  # version 11.0.10+9-0ubuntu1~20.04, or sudo apt install default-jre -y              # version 2:1.11-72 sudo apt install openjdk-8-jre-headless -y   # version 8u282-b08-0ubuntu1~20.04 sudo apt install openjdk-13-jre-headless -y  # version 13.0.4+8-1~20.04 sudo apt install openjdk-14-jre-headless -y  # version 14.0.2+12-1~20.04\n",
    "reg_date": "2021-10-12T12:04:05.000Z"
  },
  {
    "id": 2110,
    "keyword": null,
    "link": null,
    "title": " install java with brew",
    "description": "$ brew cask install java\nbrew install java \n",
    "reg_date": "2021-10-12T12:04:05.000Z"
  },
  {
    "id": 2111,
    "keyword": null,
    "link": null,
    "title": " instance variable java",
    "description": "A variable declared inside the class is called instance variable. Value of  instance variable are instance specific. public class InstanceVariableDemo {    // instance variable declared inside the class and outside the method    int c;    public void subtract()    {       int x = 100;       int y = 50;       c = x - y;       System.out.println(\"Subtraction: \" + c);    }    public void multiply()    {       int m = 10;       int n = 5;       c = m * n;       System.out.println(\"Multiplication: \" + c);    }    public static void main(String[] args)    {       InstanceVariableDemo obj = new InstanceVariableDemo();       obj.subtract();       obj.multiply();    } }\npackage Edureka;   import java.util.Scanner;   public class Student {   public String name;   private int marks;   public Student (String stuName) { name = stuName; } public void setMarks(int stuMar) { marks = stuMar; }   // This method prints the student details. public void printStu() { System.out.println(\"Name: \" + name ); System.out.println(\"Marks:\" + marks); }   public static void main(String args[]) { Student StuOne = new Student(\"Ross\"); Student StuTwo = new Student(\"Rachel\"); Student StuThree = new Student(\"Phoebe\");   StuOne.setMarks(98); StuTwo.setMarks(89); StuThree.setMarks(90);   StuOne.printStu(); StuTwo.printStu(); StuThree.printStu();   } } \njava decleartion   int a, b, c;         // Declares three ints, a, b, and c. int a = 10, b = 10;  // Example of initialization byte B = 22;         // initializes a byte type variable B. double pi = 3.14159; // declares and assigns a value of PI. char a = 'a';        // the char variable a iis initialized with value 'a'\nA variable declared inside the class   is called instance variable. Value of  instance variable are instance specific. public class InstanceVariableDemo {    // instance variable declared inside the class and outside the method    int c;    public void subtract()    {       int x = 100;       int y = 50;       c = x - y;       System.out.println(\"Subtraction: \" + c);    }    public void multiply()    {       int m = 10;       int n = 5;       c = m * n;       System.out.println(\"Multiplication: \" + c);    }    public static void main(String[] args)    {       InstanceVariableDemo obj = new InstanceVariableDemo();       obj.subtract();       obj.multiply();    } }\n",
    "reg_date": "2021-10-12T12:04:05.000Z"
  },
  {
    "id": 2112,
    "keyword": null,
    "link": null,
    "title": " instanciate a object without the new keyword in java",
    "description": "Class.forName(\"YOURCLASSNAME\").newInstance();\n",
    "reg_date": "2021-10-12T12:04:05.000Z"
  },
  {
    "id": 2113,
    "keyword": null,
    "link": null,
    "title": " instantiate matrix java",
    "description": "int[][] matrix1 = new int[2][2]; matrix1[0][0] = 1; matrix1[0][1] = 2; matrix1[1][0] = 3; matrix1[1][1] = 4;  //or  int[][] matrix2 = {{1,2},{3,4}};\n",
    "reg_date": "2021-10-12T12:04:05.000Z"
  },
  {
    "id": 2114,
    "keyword": null,
    "link": null,
    "title": " instantiate optinal java 8",
    "description": "Person p = new Person(); Optional<Person> op = Optional.of(p); \n",
    "reg_date": "2021-10-12T12:04:05.000Z"
  },
  {
    "id": 2115,
    "keyword": null,
    "link": null,
    "title": " int[]",
    "description": "int[] array;  // is equivalent to  int array[];\n",
    "reg_date": "2021-10-12T12:04:05.000Z"
  },
  {
    "id": 2116,
    "keyword": null,
    "link": null,
    "title": " int[] array to Integer[] array",
    "description": "int[] primitiveArray = { 1, 2, 3, 4, 5 };   Integer[] boxedArray = Arrays.stream(primitiveArray) // IntStream   .boxed()                // Stream<Integer>   .toArray(Integer[]::new);  System.out.println(Arrays.toString(boxedArray));\n",
    "reg_date": "2021-10-12T12:04:05.000Z"
  },
  {
    "id": 2117,
    "keyword": null,
    "link": null,
    "title": " int a=08 java",
    "description": "/*In Java, if you are defining an int with a leading '0' denotes that you are defining a number in Octal. int a = 08 is giving out of range error ]because there is no any number '8' in Octal. Octal provides 0-7 numbers only.*/\n",
    "reg_date": "2021-10-12T12:04:06.000Z"
  },
  {
    "id": 2118,
    "keyword": null,
    "link": null,
    "title": " int cannot be dereferenced???",
    "description": "Primitives (byte, char, short, int, long, float, double, boolean) are not  objects and do not have member variables or methods. They're just simple values. So you cannot do somePrimitive.something() . So in the above example, x is an  int, a primitive, and therefore cannot be dereferenced - meaning x.anything is  invalid syntax in Java.\n",
    "reg_date": "2021-10-12T12:04:06.000Z"
  },
  {
    "id": 2119,
    "keyword": null,
    "link": null,
    "title": " int list in java",
    "description": "List<Integer> list = new ArrayList<Integer>();\nint[] list = new int[length];\n",
    "reg_date": "2021-10-12T12:04:06.000Z"
  },
  {
    "id": 2120,
    "keyword": null,
    "link": null,
    "title": " int to binary java",
    "description": "int n = 1000; String s = Integer.toBinaryString(n);\nimport java.util.*; import java.util.Scanner; public class IntegerToBinary {    public static void main(String[] args)    {       int num;       String str = \"\";       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter the a number : \");       num = sc.nextInt();       // convert int to binary java       while(num > 0)       {          int y = num % 2;          str = y + str;          num = num / 2;       }       System.out.println(\"The binary conversion is : \" + str);       sc.close();    } }\nString binary = Integer.toBinaryString(num);\npublic class DecimalToBinaryExample2{     public static void toBinary(int decimal){          int binary[] = new int[40];          int index = 0;          while(decimal > 0){            binary[index++] = decimal%2;            decimal = decimal/2;          }          for(int i = index-1;i >= 0;i--){            System.out.print(binary[i]);          }     System.out.println();//new line   }     public static void main(String args[]){       System.out.println(\"Decimal of 10 is: \");   toBinary(10);     System.out.println(\"Decimal of 21 is: \");   toBinary(21);     System.out.println(\"Decimal of 31 is: \");     toBinary(31);   }}    \npublic static String makeBinaryString(int n) { \tStringBuilder sb = new StringBuilder(); \twhile (n > 0) {     sb.append(n % 2); \t\tn /= 2; \t}   \tsb.reverse();  \t   \treturn sb.toString(); }\nInteger.toString(100,8) // prints 144 --octal representation  Integer.toString(100,2) // prints 1100100 --binary representation  Integer.toString(100,16) //prints 64 --Hex representation\n",
    "reg_date": "2021-10-12T12:04:06.000Z"
  },
  {
    "id": 2121,
    "keyword": null,
    "link": null,
    "title": " int to byte",
    "description": "int i = 234; byte b = (byte) i; System.out.println(b); // -22 int i2 = b & 0xFF; System.out.println(i2); // 234 \n",
    "reg_date": "2021-10-12T12:04:06.000Z"
  },
  {
    "id": 2122,
    "keyword": null,
    "link": null,
    "title": " int to char java",
    "description": "char charValue = '2'; int intValue = Character.getNumericValue(charValue); // 2\nint a = 65;   char c = (char)a;  System.out.print(c);// Printing: A\nchar b = Integer.toString(a);//7-->\"7\"  char b = (char) b;//65-->\"A\"\nint c=123;  String s = Integer.toString(c); for(char ch: s.toCharArray())     System.out.print(ch+\",\");\nchar a = (char) 65;\n",
    "reg_date": "2021-10-12T12:04:06.000Z"
  },
  {
    "id": 2123,
    "keyword": null,
    "link": null,
    "title": " int to long java",
    "description": "Long l= new Long(i); //first way Long l2=Long.valueOf(i); //second way\n// auto-unboxing does not go from Long to int directly, so Integer i = (int) (long) theLong; \n(long) intValue;\n",
    "reg_date": "2021-10-12T12:04:06.000Z"
  },
  {
    "id": 2124,
    "keyword": null,
    "link": null,
    "title": " int to string java",
    "description": "int x = 3;  Integer.toString(int) \nString s = String.ValueOf(x); //converts a int x to a String s\nString s = String.ValueOf(x); //converts a int x to a String s  //or  String s = Integer(x).toString();\t//converts a int x to a String s\nint i=10;   String s=String.valueOf(i);\nint i=10;   String s=String.valueOf(i);//Now it will return \"10\"  \nStringBuilder sb = new StringBuilder(); sb.append(\"\"); sb.append(i); String strI = sb.toString(); \n",
    "reg_date": "2021-10-12T12:04:06.000Z"
  },
  {
    "id": 2125,
    "keyword": null,
    "link": null,
    "title": " integer arraylist",
    "description": "   ArrayList<Integer> contractValue = new ArrayList<Integer>();\n",
    "reg_date": "2021-10-12T12:04:06.000Z"
  },
  {
    "id": 2126,
    "keyword": null,
    "link": null,
    "title": " integer max value java",
    "description": " // Initializing array of integers          Integer[] num = { 2, 4, 7, 5, 9 };  // using Collections.min() to find minimum element          // using only 1 line.          int min = Collections.min(Arrays.asList(num));             // using Collections.max() to find maximum element          // using only 1 line.          int max = Collections.max(Arrays.asList(num)); \nInteger.MAX_VALUE //== 2147483647, once you increment past that, you   \t\t\t\t  //\"wrap around\" to Integer.MIN_VALUE\n//Integer.MAX_VALUE (MAX_VALUE Method In Integer Wrapper Class) \t-2,147,483,648 //(Value) In Java, the integer(long) is also 32 bits, but ranges from  -2,147,483,648 to +2,147,483,647.\nint a = Integer.MAX_VALUE; long a = Long.MAX_VALUE;\npublic int x = Integer.MAX_VALUE;  System.out.println(x)  // prints out 2147483647. you can't go over this number\npublic class Test {    public static void main(String[] args)    {      System.out.println(Integer.MIN_VALUE);      System.out.println(Integer.MAX_VALUE);      System.out.println(Integer.MIN_VALUE - 1);      System.out.println(Integer.MAX_VALUE + 1);    } }\n",
    "reg_date": "2021-10-12T12:04:06.000Z"
  },
  {
    "id": 2127,
    "keyword": null,
    "link": null,
    "title": " integer max value representation java",
    "description": "//Integer.MAX_VALUE (MAX_VALUE Method In Integer Wrapper Class) \t-2,147,483,648 //(Value) In Java, the integer(long) is also 32 bits, but ranges from  -2,147,483,648 to +2,147,483,647.\nInteger.MAX_VALUE\n",
    "reg_date": "2021-10-12T12:04:07.000Z"
  },
  {
    "id": 2128,
    "keyword": null,
    "link": null,
    "title": " integer palindrome in java",
    "description": "import java.util.*;    class PalindromeExample2   {      public static void main(String args[])      {         String original, reverse = \"\"; // Objects of String class         Scanner in = new Scanner(System.in);          System.out.println(\"Enter a string/number to check if it is a palindrome\");         original = in.nextLine();          int length = original.length();          for ( int i = length - 1; i >= 0; i-- )            reverse = reverse + original.charAt(i);         if (original.equals(reverse))            System.out.println(\"Entered string/number is a palindrome.\");         else            System.out.println(\"Entered string/number isn't a palindrome.\");       }   }  \nimport java.util.Scanner;  public class Palindrome {   public static void main(String args[])   {     int num,temp,reverse=0;     Scanner input=new Scanner(System.in);     num=in.nextInt();     temp=num;     //code to reverse the number     while(temp!=0)     {       int d=temp\u0010; //extracts digit at the end       reverse=reverse*10+d;       temp/=10; //removes the digit at the end     }     // 'reverse' has the reverse version of the actual input, so we check     if(reverse==num)     {       System.out.println(\"Number is palindrome\");     }     else     {       System.out.println(\"Number is not palindrome\");     }   } }\npackage test //The function below checks if a string is a palindrome //True = Is a palindrome & False = Not a palindrome \tpublic boolean isPalindromString(String text){     \tString reverse = reverse(text);       \tif(text.equals(reverse))     \t{         \treturn true;       \t}              \treturn false;     } //This function returns the reverse String of its input. //Ex. if given \"hello\", it will return \"olleh\" \tpublic String reverse(String input)     {      \t\tif(input == null || input.isEmpty())         { \t\t\treturn input;         }         \treturn input.charAt(input.length()- 1) + reverse(input.substring(0, input.length() - 1));     }\n public boolean isPalindrome(int x) {         String str = Integer.toString(x);         String reverse =  new StringBuilder(str).reverse().toString();         return  str.equals(reverse)?true:false;      }\npackage test //The function below checks if a string is a palindrome //True = Is a palindrome & False = Not a palindrome \tpublic boolean isPalindromString(String text){     \tString reverse = reverse(text);       \tif(text.equals(reverse))     \t{         \treturn true;       \t}              \treturn false;     } //This function returns the reverse String of its input. //Ex. if given \"hello\", it will return \"olleh\" \tpublic String reverse(String input)     {      \t\tif(input == null || input.isEmpty())         { \t\t\treturn input;         } return input.charAt(input.length()- 1) + reverse                          (input.substring(0, input.length() - 1));     }\n public boolean isPalindrome(int x) {         String str = Integer.toString(x);         String reverse =  new StringBuilder(str).reverse().toString();         return  str.equals(reverse)?true:false;}\n",
    "reg_date": "2021-10-12T12:04:07.000Z"
  },
  {
    "id": 2129,
    "keyword": null,
    "link": null,
    "title": " integer to binary java",
    "description": "int n = 1000; String s = Integer.toBinaryString(n);\nimport java.util.*; import java.util.Scanner; public class IntegerToBinary {    public static void main(String[] args)    {       int num;       String str = \"\";       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter the a number : \");       num = sc.nextInt();       // convert int to binary java       while(num > 0)       {          int y = num % 2;          str = y + str;          num = num / 2;       }       System.out.println(\"The binary conversion is : \" + str);       sc.close();    } }\nString binary = Integer.toBinaryString(num);\npublic class DecimalToBinaryExample2{     public static void toBinary(int decimal){          int binary[] = new int[40];          int index = 0;          while(decimal > 0){            binary[index++] = decimal%2;            decimal = decimal/2;          }          for(int i = index-1;i >= 0;i--){            System.out.print(binary[i]);          }     System.out.println();//new line   }     public static void main(String args[]){       System.out.println(\"Decimal of 10 is: \");   toBinary(10);     System.out.println(\"Decimal of 21 is: \");   toBinary(21);     System.out.println(\"Decimal of 31 is: \");     toBinary(31);   }}    \npublic static String makeBinaryString(int n) { \tStringBuilder sb = new StringBuilder(); \twhile (n > 0) {     sb.append(n % 2); \t\tn /= 2; \t}   \tsb.reverse();  \t   \treturn sb.toString(); }\nInteger.toString(100,8) // prints 144 --octal representation  Integer.toString(100,2) // prints 1100100 --binary representation  Integer.toString(100,16) //prints 64 --Hex representation\n",
    "reg_date": "2021-10-12T12:04:07.000Z"
  },
  {
    "id": 2130,
    "keyword": null,
    "link": null,
    "title": " integer vs int",
    "description": "Int is a primitive data type On the other hand Integer is a wrapper class that wraps a primitive type int into an object Int provides less flexibility as compare to Integer as it only allows the binary value of an integer in it. The Intege on the other hand is more flexible in storing and manupulating in data since wrapper class inherit object class.\n",
    "reg_date": "2021-10-12T12:04:07.000Z"
  },
  {
    "id": 2131,
    "keyword": null,
    "link": null,
    "title": " intellij",
    "description": "I see you are a man of culture...\nGood choice :D\nthe best dev environment for sure\ngood choice\nWise choice\nI see you are a man of taste as well\nUse it, it is the best IDE\nGood choice, , I can see you are a man of culture\nSalut les gens\nIDE for Java\n",
    "reg_date": "2021-10-12T12:04:07.000Z"
  },
  {
    "id": 2132,
    "keyword": null,
    "link": null,
    "title": " intellij idea",
    "description": "nice choice for java...\nthe best choice in your life for java  IntelliJ IDEA: The Capable & Ergonomic Java IDE by JetBrainshttps://www.jetbrains.com &rsaquo; idea\nGood Job\n# This is literally the best IDE. For beginners, for intermediate, for advanced, for masters, for any programming language it's so ergonomic and smart, with tabnine too\nhmm... if the answer says so then i might!\nYeah good choice, f*ck Eclipse users \n",
    "reg_date": "2021-10-12T12:04:07.000Z"
  },
  {
    "id": 2133,
    "keyword": null,
    "link": null,
    "title": " intellij println shortcut",
    "description": "//type \"sout\" then press tab or enter\n// Shortcut on Netbeans. Type sout and press Tab key. // Shortcut on Eclipse. Type syso and press Ctrl+space. // Shortcut on JDeveloper. Type sop and press Ctrl+Enter. // Shortcut on Intellij IDEA Type sout and press Tab key\nin mac : Command + J => will show all available short cuts. type sout and tab out or hit enter from the selection \n",
    "reg_date": "2021-10-12T12:04:07.000Z"
  },
  {
    "id": 2134,
    "keyword": null,
    "link": null,
    "title": " intellisense for eclipse java",
    "description": "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz .(!+-*/~,[{@#$%^& \n",
    "reg_date": "2021-10-12T12:04:07.000Z"
  },
  {
    "id": 2135,
    "keyword": null,
    "link": null,
    "title": " intent android",
    "description": "Button button = (Button) rootView.findViewById(R.id.button1); button.setOnClickListener(new View.OnClickListener() {     @Override     public void onClick(View view) {         Intent intent = new Intent(getActivity(), AnotherActivity.class);         startActivity(intent);     } });\nIntent i = new Intent(MainActivity.this, ActivityTwo.class); startActivity(i);\nIntent intent = new Intent(MainActivity.this,MainActivity2.class);  intent.putExtra(\"key\",value);  startActivity(intent); ////////////////////  String string =getIntent().getStringExtra(\"key\");  \nIntent i = new Intent(Intent.ACTION_VIEW, Uri.parse(\"https://www.vogella.com/\")); startActivity(i);\n",
    "reg_date": "2021-10-12T12:04:07.000Z"
  },
  {
    "id": 2136,
    "keyword": null,
    "link": null,
    "title": " intent android open activity",
    "description": "Intent intent = new Intent(this, DisplayMessageActivity.class);         intent.putExtra(key:,value:);         startActivity(intent);\n //Intent i = new Intent(getApplicationContext(), Second.class);                // startActivity(i);\n",
    "reg_date": "2021-10-12T12:04:08.000Z"
  },
  {
    "id": 2137,
    "keyword": null,
    "link": null,
    "title": " intent code to open image only in gallery",
    "description": "Intent i = new Intent(Intent.ACTION_PICK,android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);  startActivityForResult(i, RESULT_LOAD_IMAGE);\n",
    "reg_date": "2021-10-12T12:04:08.000Z"
  },
  {
    "id": 2138,
    "keyword": null,
    "link": null,
    "title": " intent in fragment android",
    "description": "Button button = (Button) rootView.findViewById(R.id.button1); button.setOnClickListener(new View.OnClickListener() {     @Override     public void onClick(View view) {         Intent intent = new Intent(getActivity(), AnotherActivity.class);         startActivity(intent);     } });\n",
    "reg_date": "2021-10-12T12:04:08.000Z"
  },
  {
    "id": 2139,
    "keyword": null,
    "link": null,
    "title": " intent jump to new activity",
    "description": " //Intent i = new Intent(getApplicationContext(), Second.class);                // startActivity(i);\n",
    "reg_date": "2021-10-12T12:04:08.000Z"
  },
  {
    "id": 2140,
    "keyword": null,
    "link": null,
    "title": " interface vs abstract class java",
    "description": "Interface  1) Interface contains only abstract methods  2) Access Specifiers for methods in interface must be public 3) Variables defined must be public , static , final 4) Multiple Inheritance in java is implemented using interface 5) To implement an interface we use implements keyword  Abstract Class 1) Abstract class can contain abstract methods, concrete methods or both 2) Except private we can have any access specifier for methods in abstract class. 3) Except private variables can have any access specifiers 4)We cannot achieve multiple inheritance using abstract class. 5)To implement an interface we use implements keyword\nInterfaces specify what a class must do and not how.  It is the blueprint of the class. It is used to achieve total abstraction.   We are using implements keyword for interface.  Abstract= Sometimes we may come across a situation where we cannot provide implementation to all the methods in a class. We want to leave the  implementation to a class that extends it.   In that case we declare a class as abstract by using abstract keyword on method signature.In my framework I have created my PageBase class as super class of the all page classes.  I have collected all common elements and functions into PageBase class and all other page classes extent PageBase class. By doing so, I don't have to locate very common WebElements and it provides reusability in my framework. Also 1)Abstract classes cannot be instantiated 2)An abstarct classes contains abstract method, concrete methods or both. 3)Any class which extends abstarct class must   override all methods of abstract class 4)An abstarct class can contain either   0 or more abstract method.   \n***************************Abstract class***************************** 1) Abstract class can have abstract and non-abstract methods. 2) Abstract class doesn't support multiple inheritance. 3) Abstract class can have final, non-final, static and non-static variables. 4) Abstract class can provide the implementation of interface. 5) The abstract keyword is used to declare abstract class. 6) An abstract class can extend another Java class and implement multiple Java interfaces. 7) An abstract class can be extended using keyword \"extends\". 8) A Java abstract class can have class members like private, protected, etc. 9)Example: public abstract class Shape{ public abstract void draw(); }   *****************************Interface******************************** 1) Interface can have only abstract methods. Since Java 8, it can have default and static methods also. 2) Interface supports multiple inheritance. 3) Interface has only static and final variable 4) Interface can't provide the implementation of abstract class. 5) The interface keyword is used to declare interface. 6) An interface can extend another Java interface only. 7) An interface can be implemented using keyword \"implements\". 8) Members of a Java interface are public by default. 9) Example: public interface Drawable{ void draw(); } \nInterfaces specify what a class must do.  It is the blueprint of the class. It is used to achieve total abstraction.  We are using implements keyword for interface.  Basic statement we all know in Selenium is WebDriver driver = new FirefoxDriver(); WebDriver itself is an Interface. So we are initializing Firefox browser using Selenium WebDriver. It means we are creating a reference variable of the interface and creating an Object. So WebDriver is an Interface and FirefoxDriver is a class.  Abstract Class 1) Abstract class can contain abstract methods, concrete methods or both 2) Except private we can have any access specifier for methods in abstract class. 3) Except private variables can have any access specifiers 4)We cannot achieve multiple inheritance using abstract class.\nInterfaces specify what a class must do.  It is the blueprint of the class. It is used to achieve total abstraction.  We are using implements keyword for interface.  Basic statement we all know in Selenium is WebDriver driver = new FirefoxDriver(); WebDriver itself is an Interface. So we are initializing Firefox browser using Selenium WebDriver. It means we are creating a reference variable of the interface and creating an Object. So WebDriver is an Interface and FirefoxDriver is a class.  Sometimes we may come across a situation where we cannot provide implementation to all the methods in a class. We want to leave the  implementation to a class that extends it.   In that case we declare a class as abstract by using abstract keyword on method signature.In my framework I have created my PageBase class as super class of the all page classes.  I have collected all common elements and functions into PageBase class and all other page classes extent PageBase class. By doing so, I don't have to locate very common WebElements and it provides reusability in my framework. Also 1)Abstract classes cannot be instantiated 2)An abstarct classes contains abstract method, concrete methods or both. 3)Any class which extends abstarct class must   override all methods of abstract class 4)An abstarct class can contain either   0 or more abstract method.  \nInterfaces specify what a class must do.  It is the blueprint of the class. It is used to achieve total abstraction.  We are using implements keyword for interface.  Basic statement we all know in Selenium is WebDriver driver = new FirefoxDriver(); WebDriver itself is an Interface. So we are initializing Firefox browser using Selenium WebDriver. It means we are creating a reference variable of the interface and creating an Object. So WebDriver is an Interface and FirefoxDriver is a class.  Sometimes we may come across a situation where we cannot provide implementation to all the methods in a class. We want to leave the  implementation to a class that extends it.   In that case we declare a class as abstract by using abstract keyword on method signature.In my framework I have created my PageBase class as super class of the all page classes.  I have collected all common elements and functions into PageBase class and all other page classes extent PageBase class. By doing so, I don't have to locate very common WebElements and it provides reusability in my framework.  Also 1)Abstract classes cannot be instantiated 2)An abstarct classes contains abstract method, concrete methods or both. 3)Any class which extends abstarct class must   override all methods of abstract class 4)An abstarct class can contain either   0 or more abstract method.  \n",
    "reg_date": "2021-10-12T12:04:08.000Z"
  },
  {
    "id": 2141,
    "keyword": null,
    "link": null,
    "title": " internet is not working in my release flutter",
    "description": "<uses-permission android:name=\"android.permission.INTERNET\" />  \n",
    "reg_date": "2021-10-12T12:04:08.000Z"
  },
  {
    "id": 2142,
    "keyword": null,
    "link": null,
    "title": " internet permission android",
    "description": "//Add this to app manifest <uses-permission android:name=\"android.permission.INTERNET\" />\n<manifest ...>     <uses-permission android:name=\"android.permission.INTERNET\" />     <application         android:usesCleartextTraffic=\"true\"         ...>         ...     </application> </manifest>\n//add to AndroidManifest.xml <uses-permission android:name=\"android.permission.INTERNET\" />\n<uses-permission android:name=\"android.permission.INTERNET\" />  \n<uses-permission android:name=\"android.permission.INTERNET\" /> \n<uses-permission android:name=\"android.permission.INTERNET\"/>\n",
    "reg_date": "2021-10-12T12:04:08.000Z"
  },
  {
    "id": 2143,
    "keyword": null,
    "link": null,
    "title": " ip adress format control java",
    "description": "import java.util.regex.Matcher; import java.util.regex.Pattern;  // Java program to validate an IPv4 address class Main { \t// an IPv4 address \tprivate static final String INET4ADDRESS = \"172.8.9.28\";  \tprivate static final String IPV4_REGEX = \t\t\t\t\t\"^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.\" + \t\t\t\t\t\"(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.\" + \t\t\t\t\t\"(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.\" + \t\t\t\t\t\"(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$\";  \tprivate static final Pattern IPv4_PATTERN = Pattern.compile(IPV4_REGEX);   \tpublic static boolean isValidInet4Address(String ip) \t{ \t\tif (ip == null) { \t\t\treturn false; \t\t}  \t\tMatcher matcher = IPv4_PATTERN.matcher(ip);  \t\treturn matcher.matches(); \t}  \tpublic static void main(String[] args) \t{ \t\t// Validate an IPv4 address \t\tif (isValidInet4Address(INET4ADDRESS)) { \t\t\tSystem.out.print(\"The IP address \" + INET4ADDRESS + \" is valid\"); \t\t} \t\telse { \t\t\tSystem.out.print(\"The IP address \" + INET4ADDRESS + \" isn't valid\"); \t\t} \t} }\n",
    "reg_date": "2021-10-12T12:04:08.000Z"
  },
  {
    "id": 2144,
    "keyword": null,
    "link": null,
    "title": " is-a relationship in java",
    "description": "&lsquo;is a&rsquo; relationship is also known as inheritance. We can implement  &lsquo;is a&rsquo; relationship or inheritance in java using extends keyword.  The advantage of inheritance or is a relationship is reusability of code  instead of duplicating the code.    Ex :  Motor cycle is a vehicle Car is a vehicle  Both, car and motorcycle extends vehicle.\npublic class Actress extends Person {        public String readScript(String movie) {        return \"Reading the script of \" + movie;    }         // additional methods/constructors}\n",
    "reg_date": "2021-10-12T12:04:08.000Z"
  },
  {
    "id": 2145,
    "keyword": null,
    "link": null,
    "title": " isSelfDivisor java",
    "description": " a. public static boolean isSelfDivisor(int number)   {     String s = String.valueOf(number);     for (int i = 0; i < s.length(); i++)     {       int d = Integer.parseInt(s.substring(i, i+1));       if (d == 0 || number % d != 0)         return false;     }     return true;   }\n",
    "reg_date": "2021-10-12T12:04:08.000Z"
  },
  {
    "id": 2146,
    "keyword": null,
    "link": null,
    "title": " is a relationship in java",
    "description": "&lsquo;is a&rsquo; relationship is also known as inheritance. We can implement  &lsquo;is a&rsquo; relationship or inheritance in java using extends keyword.  The advantage of inheritance or is a relationship is reusability of code  instead of duplicating the code.    Ex :  Motor cycle is a vehicle Car is a vehicle  Both, car and motorcycle extends vehicle.\n",
    "reg_date": "2021-10-12T12:04:08.000Z"
  },
  {
    "id": 2147,
    "keyword": null,
    "link": null,
    "title": " is double and float the same function in java",
    "description": "Float and double Double is more precise than float and can store 64 bits, double of the number of bits float can store. ... Float and double function in the same way in all programming languages. For example, in Java, both will throw NumberFormatException with operations where actual numbers are not involved\n",
    "reg_date": "2021-10-12T12:04:09.000Z"
  },
  {
    "id": 2148,
    "keyword": null,
    "link": null,
    "title": " is it necessary for abstract class to have abstract method",
    "description": "An abstract method is the method which does&rsquo;nt have any body.  Abstract method is declared with keyword abstract and semicolon in place of method body.    public abstract void <method name>(); Ex : public abstract void getDetails(); It is the responsibility of subclass to provide implementation to  abstract method defined in abstract class\nAbstract classes CAN have non-abstract methods. \nNo, abstract class can have zero abstract methods. \nYes, we can. An abstract class can have both abstract and non-abstract methods\nNo, abstract class can have zero abstract methods.\nabstract class Sum{        public abstract int compute(int a, int b);    public void disp(){ \tSystem.out.println(\"Method of class Sum\");    } } class Demo extends Sum{     public int compute(int a, int b){ \treturn a+b;    }    public static void main(String args[]){ \tSum obj = new Demo(); \tSystem.out.println(obj.compute(3, 7)); \tobj.disp();    } }\n",
    "reg_date": "2021-10-12T12:04:09.000Z"
  },
  {
    "id": 2149,
    "keyword": null,
    "link": null,
    "title": " is palindrome java",
    "description": "public static boolean checkPalindrome(String str) {            int len = str.length();      for(int i = 0; i < len / 2; i++)  {         if (str.charAt(i) != str.charAt(len - i - 1))             return false;     }     return true; }\npublic class StringPalindromeJava {    public static void isPalindrome(String str)    {       String strReverse = new StringBuffer(str).reverse().toString();        // checking for palindrome       if(str.equals(strReverse))       {          System.out.println(str + \" is palindrome string.\");       }       else       {          System.out.println(str + \" is not palindrome string.\");       }    }    public static void main(String[] args)    {       // palindrome java       isPalindrome(\"eye\");       isPalindrome(\"rotator\");    } }\nimport java.util.*;    class PalindromeExample2   {      public static void main(String args[])      {         String original, reverse = \"\"; // Objects of String class         Scanner in = new Scanner(System.in);          System.out.println(\"Enter a string/number to check if it is a palindrome\");         original = in.nextLine();          int length = original.length();          for ( int i = length - 1; i >= 0; i-- )            reverse = reverse + original.charAt(i);         if (original.equals(reverse))            System.out.println(\"Entered string/number is a palindrome.\");         else            System.out.println(\"Entered string/number isn't a palindrome.\");       }   }  \nimport java.util.Scanner;  public class Palindrome {   public static void main(String args[])   {     int num,temp,reverse=0;     Scanner input=new Scanner(System.in);     num=in.nextInt();     temp=num;     //code to reverse the number     while(temp!=0)     {       int d=temp\u0010; //extracts digit at the end       reverse=reverse*10+d;       temp/=10; //removes the digit at the end     }     // 'reverse' has the reverse version of the actual input, so we check     if(reverse==num)     {       System.out.println(\"Number is palindrome\");     }     else     {       System.out.println(\"Number is not palindrome\");     }   } }\npackage test //The function below checks if a string is a palindrome //True = Is a palindrome & False = Not a palindrome \tpublic boolean isPalindromString(String text){     \tString reverse = reverse(text);       \tif(text.equals(reverse))     \t{         \treturn true;       \t}              \treturn false;     } //This function returns the reverse String of its input. //Ex. if given \"hello\", it will return \"olleh\" \tpublic String reverse(String input)     {      \t\tif(input == null || input.isEmpty())         { \t\t\treturn input;         }         \treturn input.charAt(input.length()- 1) + reverse(input.substring(0, input.length() - 1));     }\npackage test //The function below checks if a string is a palindrome //True = Is a palindrome & False = Not a palindrome \tpublic boolean isPalindromString(String text){     \tString reverse = reverse(text);       \tif(text.equals(reverse))     \t{         \treturn true;       \t}              \treturn false;     } //This function returns the reverse String of its input. //Ex. if given \"hello\", it will return \"olleh\" \tpublic String reverse(String input)     {      \t\tif(input == null || input.isEmpty())         { \t\t\treturn input;         } return input.charAt(input.length()- 1) + reverse                          (input.substring(0, input.length() - 1));     }\n",
    "reg_date": "2021-10-12T12:04:09.000Z"
  },
  {
    "id": 2150,
    "keyword": null,
    "link": null,
    "title": " is palindrome method in java",
    "description": "package test //The function below checks if a string is a palindrome //True = Is a palindrome & False = Not a palindrome \tpublic boolean isPalindromString(String text){     \tString reverse = reverse(text);       \tif(text.equals(reverse))     \t{         \treturn true;       \t}              \treturn false;     } //This function returns the reverse String of its input. //Ex. if given \"hello\", it will return \"olleh\" \tpublic String reverse(String input)     {      \t\tif(input == null || input.isEmpty())         { \t\t\treturn input;         }         \treturn input.charAt(input.length()- 1) + reverse(input.substring(0, input.length() - 1));     }\npackage test //The function below checks if a string is a palindrome //True = Is a palindrome & False = Not a palindrome \tpublic boolean isPalindromString(String text){     \tString reverse = reverse(text);       \tif(text.equals(reverse))     \t{         \treturn true;       \t}              \treturn false;     } //This function returns the reverse String of its input. //Ex. if given \"hello\", it will return \"olleh\" \tpublic String reverse(String input)     {      \t\tif(input == null || input.isEmpty())         { \t\t\treturn input;         } return input.charAt(input.length()- 1) + reverse                          (input.substring(0, input.length() - 1));     }\n",
    "reg_date": "2021-10-12T12:04:09.000Z"
  },
  {
    "id": 2151,
    "keyword": null,
    "link": null,
    "title": " is self divisor java",
    "description": " a. public static boolean isSelfDivisor(int number)   {     String s = String.valueOf(number);     for (int i = 0; i < s.length(); i++)     {       int d = Integer.parseInt(s.substring(i, i+1));       if (d == 0 || number % d != 0)         return false;     }     return true;   }\n",
    "reg_date": "2021-10-12T12:04:09.000Z"
  },
  {
    "id": 2152,
    "keyword": null,
    "link": null,
    "title": " isblank vs isempty",
    "description": "public class Main  {     public static void main(String[] args)      {         System.out.println( \"ABC\".isBlank() );      //false         System.out.println( \"  \".isBlank() );       //true           System.out.println( \"ABC\".isEmpty() );      //false         System.out.println( \"  \".isEmpty() );       //false     } } \n StringUtils.isEmpty(null)      = true  StringUtils.isEmpty(\"\")        = true    StringUtils.isEmpty(\" \")       = false    StringUtils.isEmpty(\"bob\")     = false    StringUtils.isEmpty(\"  bob  \") = false \n StringUtils.isBlank(null)      = true  StringUtils.isBlank(\"\")        = true    StringUtils.isBlank(\" \")       = true    StringUtils.isBlank(\"bob\")     = false    StringUtils.isBlank(\"  bob  \") = false \n",
    "reg_date": "2021-10-12T12:04:09.000Z"
  },
  {
    "id": 2153,
    "keyword": null,
    "link": null,
    "title": " isinstance java",
    "description": "public class MyClass{ \t//... }  Object m=new MyClass(); Object o=new Object(); boolean mInstanceOf=m instanceof MyClass;//true boolean oInstanceOf=o instanceof MyClass;//false boolean misInstance=MyClass.class.isInstance(m);//true boolean oisInstance=MyClass.class.isInstance(o);//false\n",
    "reg_date": "2021-10-12T12:04:09.000Z"
  },
  {
    "id": 2154,
    "keyword": null,
    "link": null,
    "title": " isnumber java",
    "description": "// find value is number or not in java.. // if the value is number output is true  // if the value is not a number then output is false..    public class Test {     public static void main(String args[]) {       System.out.println(Character.isDigit('c')); // false        System.out.println(Character.isDigit('5')); // true    } }\n",
    "reg_date": "2021-10-12T12:04:09.000Z"
  },
  {
    "id": 2155,
    "keyword": null,
    "link": null,
    "title": " isprime check formula java",
    "description": "  static boolean isPrime(int n){         boolean result=true;         if(n <= 1) return false;         for(int i = 2; i <= n/2; i++){             if(n % i == 0){                 result = false; //if some number divides it, then prime=false;                 break;             }         }         return result;     }\n",
    "reg_date": "2021-10-12T12:04:09.000Z"
  },
  {
    "id": 2156,
    "keyword": null,
    "link": null,
    "title": " iterable interface in java",
    "description": "List<String> list = new ArrayList><();  list.add(\"one\"); list.add(\"two\"); list.add(\"three\");  Iterator<String> iterator = list.iterator();  while(iterator.hasNext()) {     String element = iterator.next();     System.out.println( element ); }\n",
    "reg_date": "2021-10-12T12:04:10.000Z"
  },
  {
    "id": 2157,
    "keyword": null,
    "link": null,
    "title": " iterate a list using iterator",
    "description": "Iterator<String> crunchifyIterator = crunchifyList.iterator();         while (crunchifyIterator.hasNext()) {             System.out.println(crunchifyIterator.next());         }\n",
    "reg_date": "2021-10-12T12:04:10.000Z"
  },
  {
    "id": 2158,
    "keyword": null,
    "link": null,
    "title": " iterate hashmap java",
    "description": "for (Map.Entry<String, String> entry : yourHashMap.entrySet()) { \tSystem.out.println(entry.getKey() + \" = \" + entry.getValue()); }\nfor (Map.Entry<String, String> entry : yourHashMap.entrySet()) { \tSystem.out.println(entry.getKey() + \" = \" + entry.getValue()); }  map.forEach((k, v) -> {     System.out.format(\"key: %s, value: %d%n\", k, v); });\npublic static void printMap(Map mp) {     Iterator it = mp.entrySet().iterator();     while (it.hasNext()) {         Map.Entry pair = (Map.Entry)it.next();         System.out.println(pair.getKey() + \" = \" + pair.getValue());         it.remove(); // avoids a ConcurrentModificationException     } }\nfor(Map.Entry<String, Integer> entry : hashMap.entrySet()) {     String key = entry.getKey();     Integer value =  entry.getValue();     //do something with the key and value }\nMap<Integer, Integer> map = new HashMap<Integer, Integer>(); for (Map.Entry<Integer, Integer> entry : map.entrySet()) {     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); }\npublic static void printMap(Map mp) {     Iterator it = mp.entrySet().iterator();     while (it.hasNext()) {         Map.Entry pair = (Map.Entry)it.next();         System.out.println(pair.getKey() + \" = \" + pair.getValue());         it.remove(); // avoids a ConcurrentModificationException     } } \n",
    "reg_date": "2021-10-12T12:04:10.000Z"
  },
  {
    "id": 2159,
    "keyword": null,
    "link": null,
    "title": " iterate map in java 8 using stream",
    "description": "public void iterateUsingStreamAPI(Map<String, Integer> map) {     map.entrySet().stream()       // ...       .forEach(e -> System.out.println(e.getKey() + \":\" + e.getValue())); } \n",
    "reg_date": "2021-10-12T12:04:10.000Z"
  },
  {
    "id": 2160,
    "keyword": null,
    "link": null,
    "title": " iterate over string java",
    "description": "String str = \"hello\"; for (char c : str.toCharArray())   //process c\nString scientistName = \"Isaac Newton\";   for (int i = 0; i < scientistName.length(); i++) {     System.out.print(scientistName.charAt(i) + \" \"); // I s a a c   N e w t o n }  //********************************************************* // you can cast a string into a char[] String str = \"strings are not primitive types!\";    for (char ch : str.toCharArray()) {     \tSystem.out.print(scientistName.charAt(i) + \" \");     } }     \nString s = \"...stuff...\";  for (int i = 0; i < s.length(); i++){     char c = s.charAt(i);             //Process char }\nString s = \"...stuff...\";  for (int i = 0; i < s.length(); i++){     char c = s.charAt(i);             //Process char } \nString s = \"Techie Delight\";  // convert string to `char[]` array char[] chars = s.toCharArray();  // iterate over `char[]` array using enhanced for-loop for (char ch: chars) {     System.out.print(ch); }\n",
    "reg_date": "2021-10-12T12:04:10.000Z"
  },
  {
    "id": 2161,
    "keyword": null,
    "link": null,
    "title": " iterate through an arraylist java",
    "description": "ArrayList<String> namesList = new ArrayList<String>(Arrays.asList( \"alex\", \"brian\", \"charles\") );           for(String name : namesList) {     System.out.println(name); } \n// will iterate through each index of the array list // using the size of the array list as the max. // (the last index is the size of the array list - 1)  for (int i = 0; i < myArrayList.size(); i++) {      System.out.println(myArrayList.get(i));   // will print each index as it loops }  \n",
    "reg_date": "2021-10-12T12:04:10.000Z"
  },
  {
    "id": 2162,
    "keyword": null,
    "link": null,
    "title": " iterate through an enum java",
    "description": "for (Direction dir : Direction.values()) {   // do what you want }\nfor (enumerator s : enumerator.values()) {   // do abc } \n",
    "reg_date": "2021-10-12T12:04:10.000Z"
  },
  {
    "id": 2163,
    "keyword": null,
    "link": null,
    "title": " iterate through hashtable java",
    "description": "//create hash table HashTable<String , int> ht = new HashTable<>(); ht.put(\"first\",1); ht.put(\"second\",2);  //create a set holding all keys in the hashtable Set<String> keys = ht.keySet();  //iterate through with a for loop for(String key : keys) {  System.out.println(ht.get(key)); }    //OUTPUT // 1 // 2\n",
    "reg_date": "2021-10-12T12:04:10.000Z"
  },
  {
    "id": 2164,
    "keyword": null,
    "link": null,
    "title": " iterate trough linked list java",
    "description": "#Enhances For Loop for (String temp : linkedList) {     System.out.println(temp); }\n",
    "reg_date": "2021-10-12T12:04:10.000Z"
  },
  {
    "id": 2165,
    "keyword": null,
    "link": null,
    "title": " iterating over a hashmap",
    "description": "for (Map.Entry<String, String> entry : yourHashMap.entrySet()) { \tSystem.out.println(entry.getKey() + \" = \" + entry.getValue()); }\nfor(Map.Entry<String, Integer> entry : hashMap.entrySet()) {     String key = entry.getKey();     Integer value =  entry.getValue();     //do something with the key and value }\n",
    "reg_date": "2021-10-12T12:04:10.000Z"
  },
  {
    "id": 2166,
    "keyword": null,
    "link": null,
    "title": " iterative dfs in tree",
    "description": "import java.util.Stack;   class Node  {      int data;      Node left, right;         public Node(int item)      {          data = item;          left = right = null;      }  }   @SuppressWarnings(\"unchecked\") class BinaryTree {     Node root;     public static void inOrderTraversal(Node root)     {       Stack<Node> stack = new Stack();       Node curr = root;       while (!stack.empty() || curr != null)       {         if (curr != null)         {           stack.push(curr);           curr = curr.left;         }         else         {           curr = stack.pop();           System.out.print(curr.data + \" \");           curr = curr.right;         }       }     }  }\n",
    "reg_date": "2021-10-12T12:04:11.000Z"
  },
  {
    "id": 2167,
    "keyword": null,
    "link": null,
    "title": " iterator for array java",
    "description": "import java.util.Arrays; import java.util.Iterator;  public class ArrayToIterable {    public static void main(String args[]){       Integer[] myArray = {897, 56, 78, 90, 12, 123, 75};       Iterator<Integer> iterator = Arrays.stream(myArray).iterator();       while(iterator.hasNext()) {          System.out.println(iterator.next());       }    } }\n",
    "reg_date": "2021-10-12T12:04:11.000Z"
  },
  {
    "id": 2168,
    "keyword": null,
    "link": null,
    "title": " jackson ignore null",
    "description": "public class MyDto {      \t@JsonInclude(Include.NON_NULL)   \tprivate String stringValue;      \tprivate int intValue;     // standard getters and setters }\npublic class Object {        @JsonInclude(NON_NULL)     @JsonProperty(\"property\")     private String property;    }\n",
    "reg_date": "2021-10-12T12:04:11.000Z"
  },
  {
    "id": 2169,
    "keyword": null,
    "link": null,
    "title": " jackson ignore value if null",
    "description": "public class Object {        @JsonInclude(NON_NULL)     @JsonProperty(\"property\")     private String property;    }\n",
    "reg_date": "2021-10-12T12:04:11.000Z"
  },
  {
    "id": 2170,
    "keyword": null,
    "link": null,
    "title": " jackson ignore values if empty",
    "description": "// every Value  @JsonInclude(JsonInclude.Include.NON_EMPTY) public class ObjectWithoutEmpty {    \t// only not empty Values get included      @JsonProperty(\"propertyOne\")     private String propertyOne;    \t// only not empty Values get included      @JsonProperty(\"propertyTWO\")     private String propertyTWO;  }  // one property   public class ObjectWithoutEmpty {    \t// only non empty Values get included    \t@JsonInclude(JsonInclude.Include.NON_EMPTY)     @JsonProperty(\"propertyOne\")     private String propertyOne;    \t// empty Values get included      @JsonProperty(\"propertyTWO\")     private String propertyTWO;  } \n",
    "reg_date": "2021-10-12T12:04:11.000Z"
  },
  {
    "id": 2171,
    "keyword": null,
    "link": null,
    "title": " jagged array java",
    "description": "int[][] numbers = new int[7][];  // row 0 gets 5 columns numbers[0] = new int[5]; // row 1 gets 11 columns numbers[1] = new int[11]; // etc...\npublic static void main(String[] args) {      int[][] foo = new int[][] {         new int[] { 1, 2, 3 },         new int[] { 1, 2, 3, 4},     };      System.out.println(foo.length); //2     System.out.println(foo[0].length); //3     System.out.println(foo[1].length); //4 } \n",
    "reg_date": "2021-10-12T12:04:11.000Z"
  },
  {
    "id": 2172,
    "keyword": null,
    "link": null,
    "title": " jagx stock",
    "description": "JAGX killing us\n",
    "reg_date": "2021-10-12T12:04:11.000Z"
  },
  {
    "id": 2173,
    "keyword": null,
    "link": null,
    "title": " java: error: release version 5 not supported maven",
    "description": "    <plugin>         <groupId>org.apache.maven.plugins</groupId>         <artifactId>maven-compiler-plugin</artifactId>         <configuration>             <source>1.7</source>             <target>1.7</target>         </configuration>     </plugin> \n<properties>   <maven.compiler.source>1.8</maven.compiler.source>   <maven.compiler.target>1.8</maven.compiler.target> </properties> \n",
    "reg_date": "2021-10-12T12:04:11.000Z"
  },
  {
    "id": 2174,
    "keyword": null,
    "link": null,
    "title": " java.io.IOException: Can't read fonts",
    "description": "revolution = Font.createFont(Font.TRUETYPE_FONT, getClass().getClassLoader().getResourceAsStream(\"REVOLUTION.ttf\"));\n",
    "reg_date": "2021-10-12T12:04:11.000Z"
  },
  {
    "id": 2175,
    "keyword": null,
    "link": null,
    "title": " java.lang.ClassNotFoundException: com.mysql.cj.jdbc.Driver",
    "description": "<dependency>     <groupId>mysql</groupId>     <artifactId>mysql-connector-java</artifactId>     <version>8.0.18</version> </dependency>\n/* It seems the mysql connectivity library is not included in the project. Solve the problem following one of the proposed solutions:  MAVEN PROJECTS SOLUTION Add the mysql-connector dependency to the pom.xml project file:  <dependency>     <groupId>mysql</groupId>     <artifactId>mysql-connector-java</artifactId>     <version>5.1.39</version> </dependency> Here you are all the versions: https://mvnrepository.com/artifact/mysql/mysql-connector-java  ALL PROJECTS SOLUTION Add the jar library manually to the project.  Right Click the project -- > build path -- > configure build path  In Libraries Tab press Add External Jar and Select your jar.  You can find zip for mysql-connector here (http://dev.mysql.com/downloads/connector/j/5.0.html) */\n",
    "reg_date": "2021-10-12T12:04:12.000Z"
  },
  {
    "id": 2176,
    "keyword": null,
    "link": null,
    "title": " java.lang.IndexOutOfBoundsException: Index: 1, Size: 0         at java.util.ArrayList.add(ArrayList.java:483)",
    "description": "//if Your arrayList is empty. its crashing yourlist.add(1,\"data\");  //you can use this code yourlist.add(\"data\");\n",
    "reg_date": "2021-10-12T12:04:12.000Z"
  },
  {
    "id": 2177,
    "keyword": null,
    "link": null,
    "title": " java.lang.NoClassDefFoundError:",
    "description": "Just clear and build again your project and it will work.\njava --module-path $FX-PATH --add-modules javafx.controls -jar sample.jar \nNoClassDefFoundError occurs when class was present during compile time and program was compiled and linked successfully but class was not present during runtime. It is error which is derived from LinkageError.06-Feb-2019\n",
    "reg_date": "2021-10-12T12:04:12.000Z"
  },
  {
    "id": 2178,
    "keyword": null,
    "link": null,
    "title": " java.lang.NoClassDefFoundError: Could not initialize class org.codehaus.groovy.vmplugin.v7.Java7",
    "description": "On your Android or Intellij Project, go to:  yourprojectname/gradle/wrapper/gradle-wrapper.properties.  Property distributionUrl should be:   distributionUrl=https\\://services.gradle.org/distributions/gradle-6.3-bin.zip  If it's an older version then change it, run ./gradlew clean build and try again.\nIt's probably because you use Gradle as the build system and JDK14 and the Gradle version is old. Reference:  https://github.com/gradle/gradle/issues/10248  If you use Gradle Wrapper then refer to $PROJECT_ROOT/gradle/wrapper/gradle-wrapper.properties. Property distributionUrl should be:   distributionUrl=https\\://services.gradle.org/distributions/gradle-6.3-bin.zip  If it's an older version then change it, run ./gradlew clean build  and try again.\ncould not initialize class org.codehaus.groovy.reflection.reflectioncache intellij\n",
    "reg_date": "2021-10-12T12:04:12.000Z"
  },
  {
    "id": 2179,
    "keyword": null,
    "link": null,
    "title": " java.lang.OutOfMemoryError: Failed to allocate",
    "description": "  <application       android:name=\".ParaseApplication\"       android:allowBackup=\"true\"       android:icon=\"@mipmap/ic_launcher\"       android:label=\"@string/app_name\"       android:theme=\"@style/AppTheme\"       android:largeHeap=\"true\" >\n",
    "reg_date": "2021-10-12T12:04:12.000Z"
  },
  {
    "id": 2180,
    "keyword": null,
    "link": null,
    "title": " java.lang.classcastexception: java.lang.integer cannot be cast to java.lang.string",
    "description": "No, Integer and String are different types. To convert an integer to string use: String.valueOf(integer), or Integer.toString(integer) for primitive, or Integer.toString() for the object.\n",
    "reg_date": "2021-10-12T12:04:12.000Z"
  },
  {
    "id": 2181,
    "keyword": null,
    "link": null,
    "title": " java.lang.classcastexception: java.util.hashmap cannot be cast to android.os.parcelable",
    "description": "        public OneNote(){                 super();                 this.put(\"title\", \"No Title\");                 this.put(\"body\", \"No Body\");                 this.put(\"date\", \"No Date\");         }          public OneNote(String title, String body, String date){                 super();                 this.put(\"title\", title);                 this.put(\"body\", body);                 this.put(\"date\", date);          } [...]\n",
    "reg_date": "2021-10-12T12:04:12.000Z"
  },
  {
    "id": 2182,
    "keyword": null,
    "link": null,
    "title": " java.lang.long cannot be cast to java.lang.integer",
    "description": "Long.valueOf(x).intValue()\nInteger.valueOf(x).longValue()\n",
    "reg_date": "2021-10-12T12:04:12.000Z"
  },
  {
    "id": 2183,
    "keyword": null,
    "link": null,
    "title": " java.lang.noclassdeffounderror: javax/xml/bind/jaxbexception",
    "description": "<!-- API, java.xml.bind module --> <dependency>     <groupId>jakarta.xml.bind</groupId>     <artifactId>jakarta.xml.bind-api</artifactId>     <version>2.3.2</version> </dependency>  <!-- Runtime, com.sun.xml.bind module --> <dependency>     <groupId>org.glassfish.jaxb</groupId>     <artifactId>jaxb-runtime</artifactId>     <version>2.3.2</version> </dependency>\n",
    "reg_date": "2021-10-12T12:04:13.000Z"
  },
  {
    "id": 2184,
    "keyword": null,
    "link": null,
    "title": " java.net.http.httpclient post example",
    "description": "HttpClientPostJSON.java  package com.mkyong.java11.jep321;  import java.io.IOException; import java.net.URI; import java.net.http.HttpClient; import java.net.http.HttpRequest; import java.net.http.HttpResponse; import java.time.Duration;  public class HttpClientPostJSON {      private static final HttpClient httpClient = HttpClient.newBuilder()             .version(HttpClient.Version.HTTP_2)             .connectTimeout(Duration.ofSeconds(10))             .build();      public static void main(String[] args) throws IOException, InterruptedException {          // json formatted data         String json = new StringBuilder()                 .append(\"{\")                 .append(\"\\\"name\\\":\\\"mkyong\\\",\")                 .append(\"\\\"notes\\\":\\\"hello\\\"\")                 .append(\"}\").toString();          // add json header         HttpRequest request = HttpRequest.newBuilder()                 .POST(HttpRequest.BodyPublishers.ofString(json))                 .uri(URI.create(\"https://httpbin.org/post\"))                 .setHeader(\"User-Agent\", \"Java 11 HttpClient Bot\") // add request header                 .header(\"Content-Type\", \"application/json\")                 .build();          HttpResponse<String> response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());          // print status code         System.out.println(response.statusCode());          // print response body         System.out.println(response.body());      }  }\n",
    "reg_date": "2021-10-12T12:04:13.000Z"
  },
  {
    "id": 2185,
    "keyword": null,
    "link": null,
    "title": " java.sql.Date jpa",
    "description": "@Entity public class MyEntity {       @Id     @GeneratedValue(strategy = GenerationType.AUTO)     private Long id;           @Temporal(TemporalType.TIMESTAMP)     private Date utilDate;           @Temporal(TemporalType.DATE)     private Calendar utilCalendar;           ...           public Date getUtilDate() {         return utilDate;     }       public void setUtilDate(Date utilDate) {         this.utilDate = utilDate;     }       public Calendar getUtilCalendar() {         return utilCalendar;     }       public void setUtilCalendar(Calendar utilCalendar) {         this.utilCalendar = utilCalendar;     } } \n",
    "reg_date": "2021-10-12T12:04:13.000Z"
  },
  {
    "id": 2186,
    "keyword": null,
    "link": null,
    "title": " java",
    "description": "Java is a class-based, object-oriented programming language that is designed to have as few implementation dependencies as possible. It is a general-purpose programming language intended to let application developers write once, run anywhere (WORA),[17] meaning that compiled Java code can run on all platforms that support Java without the need for recompilation.[18] Java applications are typically compiled to bytecode that can run on any Java virtual machine (JVM) regardless of the underlying computer architecture. The syntax of Java is similar to C and C++, but has fewer low-level facilities than either of them. The Java runtime provides dynamic capabilities (such as reflection and runtime code modification) that are typically not available in traditional compiled languages. As of 2019, Java was one of the most popular programming languages in use according to GitHub,[19][20] particularly for client-server web applications, with a reported 9 million developers.[21]\npublic class Main {   public static void main(String[] args) {     System.out.println(\"Hello, World!\");   } }\n// Your First Program  class HelloWorld {     public static void main(String[] args) {         System.out.println(\"Hello, World!\");      } }\nSystem.out.println(something)\n\tAn incredible language that receives far more hate than it deserves because of it's poor beginnings. \tEveryone remembers the slow java applets but often fail to understand Java's many positives including:  - compatability with many different systems  - Just-In-Time compilation making it almost as fast as a native language  - the wide range of high-quality and open source libraries developed over    many years  \tSure, it may not look as sexy as Python or NodeJS, but when you're debugging the call stack 50 functions deep, you'll be glad you picked Java\nconst DB_HOST = 'localhost'; const DB_NAME = 'DB_Name';\t\t\t//Name of the database const DB_USERNAME = 'username';\t\t//Username to use const DB_PASSWORD = 'Password';\t\t//Password for that user   // Data Source Name $dsn = \"mysql:host=\" . DB_HOST . \";dbname=\" . DB_NAME;  $options = [     PDO::ATTR_EMULATE_PREPARES   => false, // turn off emulation mode for \"real\" prepared statements     PDO::ATTR_ERRMODE            => PDO::ERRMODE_EXCEPTION, //turn on errors in the form of exceptions     PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_OBJ, //make the default fetch be an anonymous object with column names as properties ];  //Create PDO instance try {     $pdo = new PDO($dsn, DB_USERNAME, DB_PASSWORD, $options); } catch (PDOException $e) {     echo 'Connection failed: ' . $e->getMessage(); }\npublic class Example {   public static void main(String[] args) {   \tSystem.out.println(\"Hello, world!\");    } }\nwhat is that \nint x = 50; int y = 30; int z = 70;  y = x; x = z; z = y; \nProtok&oacute;ł Privacy Pass zapewnia wydajną warstwę aplikacji mechanizm tworzenia token&oacute;w i anonimowego wykupu. Serwery (wydawcy) tworzyć, a p&oacute;źniej weryfikować tokeny, kt&oacute;re są wymieniane przez ekosystem klient&oacute;w, takich, że:  - Emitent nie może powiązać wykupionego tokena z jednym z N wcześniej utworzonych token&oacute;w   używając tego samego klucza z prawdopodobieństwem niepomijalnie większym niż 1/N. - Klienci mogą zweryfikować, czy token stworzony przez Emitenta odpowiada   zaangażowana para kluczy. - Tokeny są nie do podrobienia. - Mechanizmy emisji i umarzania token&oacute;w są sprawne.  Podstawowym celem Grupy Roboczej ds. Przepustki Prywatności jest rozw&oacute;j i ujednolicić protok&oacute;ł spełniający te wymagania, na kt&oacute;ry wpływ mają aplikacje, kt&oacute;re powstały w szerszej społeczności. Cele Grupę Roboczą można podzielić na trzy odrębne cele:  Najpierw określ rozszerzalny protok&oacute;ł tworzenia i realizacji and anonimowe i zbywalne tokeny. Protok&oacute;ł powinien umożliwiać odpowiednie szyfry kryptograficzne i parametryzacja bezpieczeństwa dla sprawność kryptograficzna. Profil kryptograficzny używany przez protok&oacute;ł uczestnicy zostaną określeni przez konkretną instancję protokołu i zostanie on ustalony na czas trwania zobowiązania Emitenta parę kluczy. Będziemy blisko wsp&oacute;łpracować CFRG w określaniu dopuszczalnych szyfr&oacute;w i parametr&oacute;w kryptograficznych spełniających właściwości bezpieczeństwa i prywatności protokołu.  Grupa Robocza określi wstępny zestaw rozszerzeń, w tym: Metadane i instancje kryptograficzne dostarczone przez emitenta kt&oacute;re dodatkowo wspierają publiczną weryfikację wydanych token&oacute;w i mogą: rozważ cokolwiek dodatkowe rozszerzenia, kt&oacute;re pojawią się w przyszłości. Bezpieczeństwo i prywatność właściwości protokołu powinny być dobrze udokumentowane. Analiza formalna protok&oacute;ł zapewni, że właściwości bezpieczeństwa i prywatności protokoły są dobrze zrozumiane i dobrze udokumentowane.  Po drugie, opisz i opracuj przypadki użycia protokołu i ich właściwości. Obejmuje to między innymi:  1. Opisywanie przypadk&oacute;w użycia i interfejs&oacute;w, kt&oacute;re umożliwiają protokołowi    używane dla tych przypadk&oacute;w użycia. 2. Określenie cel&oacute;w prywatności dla każdego Klienta podczas wykonywania protokołu,    wraz z oczekiwaniami stawianymi Emitentom i ekosystemowi    duży. 3. Opis zalecanych parametryzacji zmiennych związanych z    ekosystem protokoł&oacute;w kontrolujący rozmiar zestawu anonimowości    do kt&oacute;rej należy klient. 4. Opisanie mechanizm&oacute;w weryfikacji zaufania Emitent&oacute;w i ich    odpowiedni materiał klucza. Takie mechanizmy powinny uniemożliwić Emitentom    od przedstawienia dowolnego kluczowego materiału, kt&oacute;ry m&oacute;głby zostać użyty do deanonimizacji    klient&oacute;w. 5. Opis procedury włączania niewielkich ilości metadanych do    Wydane tokeny, a także związany z nimi wpływ na prywatność. 6. Opis ryzyka i możliwych konsekwencji Emitenta    centralizacji i zbadania możliwych mechanizm&oacute;w ich łagodzenia    ryzyka.  Po trzecie, na koniec określ interfejs API warstwy HTTP dla protokołu. To zawiera wsp&oacute;lne zrozumienie, w jaki spos&oacute;b Privacy Pass jest zintegrowany z Żądania i odpowiedzi HTTP dla aplikacji internetowych.  Następujące kamienie milowe (wraz z przybliżonymi datami zakończenia) będą wykorzystywane do oceny postęp&oacute;w grupy roboczej:  - Specyfikacja protokołu i otaczającej architektury - luty 2021 r. - Ocena ryzyka dla centralizacji wdrożeń Privacy Pass dla   wiele opcji projektowych - luty 2021 - Specyfikacja wymagań warstwy aplikacji (w tym HTTP   integracja) - czerwiec 2021 r. - Specyfikacja API przeglądarki HTTP (we wsp&oacute;łpracy z W3C) - październik   2021.  Należy pamiętać, że specyfikacje opracowane przez tę grupę roboczą będą: poinformowany w następujących wstępnych projektach:  - projekt-davidson-pp-protocol-00; - projekt-davidson-pp-architektura-00; - projekt-svaldez-pp-http-api-00.  Te istniejące wersje robocze mogą być dalej rozwijane w rdzeń dokumenty grupy roboczej, uzupełnione o wszelkie dodatkowe rozszerzenia. Ewentualnie mogą pośrednio przyczynić się do przyszłości zestaw dokument&oacute;w, kt&oacute;re spełniają podstawowe cele grupy roboczej. \n",
    "reg_date": "2021-10-12T12:04:13.000Z"
  },
  {
    "id": 2187,
    "keyword": null,
    "link": null,
    "title": " java.util.HashMap has generic type parameters, please use GenericTypeIndicator instead",
    "description": "Map<String, Object> map = (Map<String, Object>) dataSnapshot.getValue();\n",
    "reg_date": "2021-10-12T12:04:13.000Z"
  },
  {
    "id": 2188,
    "keyword": null,
    "link": null,
    "title": " java == vs equals",
    "description": "In general both equals() and == operator in Java are used to compare  objects to check equality but here are some of the differences between the two:  1) .equals() and == is that one is a method and other is operator. 2) We can use == operator for reference comparison (address comparison)  and .equals() method for content comparison.   -> == checks if both objects point to the same memory location   -> .equals() evaluates to the comparison of values in the objects. 3) If a class does not override the equals method, then by default it  uses equals(Object o) method of the closest parent class  that has overridden this method.  // Java program to understand   // the concept of == operator  public class Test {      public static void main(String[] args)      {          String s1 = new String(\"HELLO\");          String s2 = new String(\"HELLO\");          System.out.println(s1 == s2);          System.out.println(s1.equals(s2));      }  }  Output: false true    Explanation: Here we are creating two (String) objects namely s1 and s2. Both s1 and s2 refers to different objects.  -> When we use == operator for s1 and s2 comparison then the result is false   as both have different addresses in memory.  -> Using equals, the result is true because its only comparing the   values given in s1 and s2.\nCase1) String s1 = \"Stack Overflow\"; String s2 = \"Stack Overflow\"; s1 == s1;      // true s1.equals(s2); // true Reason: String literals created without null are stored in the string pool in the permgen area of the heap. So both s1 and s2 point to the same object in the pool. Case2) String s1 = new String(\"Stack Overflow\"); String s2 = new String(\"Stack Overflow\"); s1 == s2;      // false s1.equals(s2); // true Reason: If you create a String object using the `new` keyword a separate space is allocated to it on the heap.\n// == operator String str1 = new String(\"Hello\"); String str2 = new String(\"Hello\"); System.out.println(str1 == str2); // output : false   // equals method String str1 = new String(\"Hello\"); String str2 = new String(\"Hello\"); System.out.println(str1.equals(str2)); // output : true\n",
    "reg_date": "2021-10-12T12:04:13.000Z"
  },
  {
    "id": 2189,
    "keyword": null,
    "link": null,
    "title": " java 11 initialize map",
    "description": "Map<String, String> myMap = new HashMap<String, String>() {{         put(\"a\", \"b\");         put(\"c\", \"d\");     }};\nMap<String, String> emptyMap = Map.of(); Map<String, String> singletonMap = Map.of(\"key1\", \"value\"); Map<String, String> map = Map.of(\"key1\",\"value1\", \"key2\", \"value2\"); \n",
    "reg_date": "2021-10-12T12:04:13.000Z"
  },
  {
    "id": 2190,
    "keyword": null,
    "link": null,
    "title": " java 2 decimals",
    "description": "String result = String.format(\"%.2f\", value);\nDecimalFormat df = new DecimalFormat(); df.setMaximumFractionDigits(2); System.out.println(df.format(decimalNumber));\ndouble test = 12.15; DecimalFormat df = new DecimalFormat(\"#.0\"); System.out.println(df.format(test)); // Console: 12.2 // # - prints a digit if provided, nothing otherwise // . - indicates where to put the decimal seperator // 0 - prints a digit if provided, 0 otherwise\ndouble res = Math.round(a * 100) / 100;\n",
    "reg_date": "2021-10-12T12:04:13.000Z"
  },
  {
    "id": 2191,
    "keyword": null,
    "link": null,
    "title": " java 2d array length",
    "description": "public class Main {   public static void main(String[] args) {     int[][] test = new int[10][4];     int rows = test.length;     int coloumns = test[0].length;     System.out.println(rows);     System.out.println(coloumns);   } }\n  int[][] test;    test = new int[5][10];    int row = test.length;   int col = test[0].length;\npublic static void main(String[] args) {      int[][] foo = new int[][] {         new int[] { 1, 2, 3 },         new int[] { 1, 2, 3, 4},     };      System.out.println(foo.length); //2     System.out.println(foo[0].length); //3     System.out.println(foo[1].length); //4 }\npublic static void main(String[] args) {      int[][] foo = new int[][] {         new int[] { 1, 2, 3 },         new int[] { 1, 2, 3, 4},     };      System.out.println(foo.length); //2 // gives count of rows     System.out.println(foo[0].length); //3 // gives count of columns for particular row     System.out.println(foo[1].length); //4 }\n",
    "reg_date": "2021-10-12T12:04:13.000Z"
  },
  {
    "id": 2192,
    "keyword": null,
    "link": null,
    "title": " java 2d rendering example",
    "description": "//Java 2D rendering technique  //i know there is too much to explain but i am too lazy to do that atm xd  //enjoy!  import java.awt.BorderLayout; import java.awt.Canvas; import java.awt.Dimension; import java.awt.Graphics; import java.awt.image.BufferStrategy; import java.awt.image.BufferedImage; import java.awt.image.DataBufferInt;  import javax.swing.JFrame;  class Main extends Canvas implements Runnable{ \t \tprivate static final long serialVersionUID = 1L; \tpublic static final int WIDTH=240; \tpublic static final int HEIGHT=WIDTH/16*9; \t \tprivate BufferedImage image = new BufferedImage(WIDTH,HEIGHT, BufferedImage.TYPE_INT_RGB); \tprivate int[] pixels = ((DataBufferInt) image.getRaster().getDataBuffer()).getData(); \tprivate int TickRate; \tprivate static final String NAME = \"TEST\"; \tprivate boolean running = true; \tprivate static final int SCALE = 3; \tpublic void start(){ \t\trunning = true; \t\tnew Thread(this).start(); \t} \t \tpublic void stop(){ \t\t \t\trunning = false; \t\t \t} \t \tpublic void run(){ \t\t \t\twhile(running){ \t\t\tengine(); \t\t\t \t\t} \t\t \t}\t \t\t \t\t \tprivate void engine() { \t        tick(); \t\t    render(); \t\t\t \t} \t\t \t\t \tpublic void tick() { \tTickRate++; \t} \t \t \t     public void render() {          BufferStrategy bs = getBufferStrategy();     if(bs==null) {     \tcreateBufferStrategy(3);     \treturn;     }               for(int i=0; i<pixels.length; i++) {     \tpixels[i]= i + TickRate;     \t          }          Graphics g = bs.getDrawGraphics();     g.drawImage(image, 0, 0,getWidth(),getHeight(),null);     g.dispose();     bs.show(); \t\t \t} \t \tpublic static void main(String[] args) { \tMain main = new Main(); \tmain.setPreferredSize(new Dimension(WIDTH*SCALE,HEIGHT*SCALE)); \tmain.setMaximumSize(new Dimension(WIDTH*SCALE,HEIGHT*SCALE)); \tmain.setMinimumSize(new Dimension(WIDTH*SCALE,HEIGHT*SCALE)); \t \tJFrame frame = new JFrame(main.NAME); \tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); \tframe.setLayout(new BorderLayout()); \tframe.setResizable(false); \tframe.setLocationRelativeTo(null); \tframe.setVisible(true); \tframe.add(main); \tframe.pack(); \tmain.start(); \t \t} \t \t \t} \n",
    "reg_date": "2021-10-12T12:04:13.000Z"
  },
  {
    "id": 2193,
    "keyword": null,
    "link": null,
    "title": " java 8 datediff in days",
    "description": "LocalDate dateBefore; LocalDate dateAfter; long daysBetween = DAYS.between(dateBefore, dateAfter);\n@Test public void givenTwoDatesInJava8_whenDifferentiating_thenWeGetSix() {     LocalDate now = LocalDate.now();     LocalDate sixDaysBehind = now.minusDays(6);       Period period = Period.between(now, sixDaysBehind);     int diff = period.getDays();       assertEquals(diff, 6); } \n",
    "reg_date": "2021-10-12T12:04:14.000Z"
  },
  {
    "id": 2194,
    "keyword": null,
    "link": null,
    "title": " java 8 filter first",
    "description": "return dataSource.getParkingLots()                  .stream()                  .filter(parkingLot -> Objects.equals(parkingLot.getId(), id))                  .findFirst()                  .orElse(null);\n",
    "reg_date": "2021-10-12T12:04:14.000Z"
  },
  {
    "id": 2195,
    "keyword": null,
    "link": null,
    "title": " java 8 find in list by property",
    "description": "Optional<Person> matchingObject = objects.stream().     filter(p -> p.email().equals(\"testemail\")).     findFirst();\n",
    "reg_date": "2021-10-12T12:04:14.000Z"
  },
  {
    "id": 2196,
    "keyword": null,
    "link": null,
    "title": " java 8 find min value in array",
    "description": "package com.concerned.crossbill;  import java.util.Arrays;  public class Foo {    public int getMin(int[] numbers) { \treturn Arrays.stream(numbers).min().getAsInt();   } } // test class import org.junit.Test; import static org.junit.Assert.assertEquals; import com.concerned.crossbill.Foo;  public class FooTest {    public void testGetMin() {     int[] numbers =  new int[]{12, 10, 31, 30, 23, 4, 5, 5, 5, 5, 10, 40};          Foo foo = new Foo();     int result  = foo.getMin(numbers);     int expResult  = 4;          assertEquals(expResult, result);   } }\n",
    "reg_date": "2021-10-12T12:04:14.000Z"
  },
  {
    "id": 2197,
    "keyword": null,
    "link": null,
    "title": " java 8 get duplicates in list",
    "description": "List<Integer> numbers = Arrays.asList(1, 2, 1, 3, 4, 4); Set<Integer> nbrRemovedSet = new HashSet<>();  // Set.add() returns false if the element was already in the set. Set<Integer> nbrSet = numbers \t.stream()   \t.filter(n -> !nbrRemovedSet.add(n))   \t.collect(Collectors.toSet());  // also, we can use Collections.frequency: Set<Integer> nbrSet = numbers \t.stream()   \t.filter(i -> Collections.frequency(numbers, i) >1)     collect(Collectors.toSet());\n",
    "reg_date": "2021-10-12T12:04:14.000Z"
  },
  {
    "id": 2198,
    "keyword": null,
    "link": null,
    "title": " java 8 hash list",
    "description": "return map \t\t.values() \t\t.stream() \t\t.flatMap(List::stream) \t\t.collect(Collectors.toList());\n",
    "reg_date": "2021-10-12T12:04:14.000Z"
  },
  {
    "id": 2199,
    "keyword": null,
    "link": null,
    "title": " java 8 list stream delete by name",
    "description": "itemList.removeIf(item -> item.getName().equals(\"Bug\"));\n// there is no meaning to remove an item from a stream // It only make sense to remove an item from a collection. // Internally, removeIf uses an Iterator to iterate over the list and match  // the elements using the predicate itemList.removeIf(isQualified);\n",
    "reg_date": "2021-10-12T12:04:14.000Z"
  },
  {
    "id": 2200,
    "keyword": null,
    "link": null,
    "title": " java 8 loop in map",
    "description": "Map<String, Integer> items = new HashMap<>(); items.put(\"A\", 10); items.put(\"B\", 20); items.put(\"C\", 30); items.put(\"D\", 40); items.put(\"E\", 50); items.put(\"F\", 60);  items.forEach((k,v)->System.out.println(\"Item : \" + k + \" Count : \" + v));  items.forEach((k,v)->{ \tSystem.out.println(\"Item : \" + k + \" Count : \" + v); \tif(\"E\".equals(k)){ \t\tSystem.out.println(\"Hello E\"); \t} });\npublic void iterateUsingStreamAPI(Map<String, Integer> map) {     map.entrySet().stream()       // ...       .forEach(e -> System.out.println(e.getKey() + \":\" + e.getValue())); } \n",
    "reg_date": "2021-10-12T12:04:14.000Z"
  },
  {
    "id": 2201,
    "keyword": null,
    "link": null,
    "title": " java 8 map foreach",
    "description": "// 1. for-each with Entry Map<Integer, Integer> map = new HashMap<Integer, Integer>(); for (Map.Entry<Integer, Integer> entry : map.entrySet()) {     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); }   // 2. for-each with key or value each (faster) Map<Integer, Integer> map = new HashMap<Integer, Integer>(); //iterating over keys only for (Integer key : map.keySet()) {     System.out.println(\"Key = \" + key); }   //iterating over values only for (Integer value : map.values()) {     System.out.println(\"Value = \" + value); }   // 3. Using Iterator Map<Integer, Integer> map = new HashMap<Integer, Integer>(); // With Generic Iterator<Map.Entry<Integer, Integer>> entries = map.entrySet().iterator(); while (entries.hasNext()) {     Map.Entry<Integer, Integer> entry = entries.next();     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); }  // No Generic Map map = new HashMap(); Iterator entries = map.entrySet().iterator(); while (entries.hasNext()) {     Map.Entry entry = (Map.Entry) entries.next();     Integer key = (Integer)entry.getKey();     Integer value = (Integer)entry.getValue();     System.out.println(\"Key = \" + key + \", Value = \" + value); } \nMap<String, Integer> items = new HashMap<>(); items.put(\"A\", 10); items.put(\"B\", 20); items.put(\"C\", 30); items.put(\"D\", 40); items.put(\"E\", 50); items.put(\"F\", 60);  items.forEach((k,v)->System.out.println(\"Item : \" + k + \" Count : \" + v));  items.forEach((k,v)->{ \tSystem.out.println(\"Item : \" + k + \" Count : \" + v); \tif(\"E\".equals(k)){ \t\tSystem.out.println(\"Hello E\"); \t} });\npublic void iterateUsingStreamAPI(Map<String, Integer> map) {     map.entrySet().stream()       // ...       .forEach(e -> System.out.println(e.getKey() + \":\" + e.getValue())); } \npublic void iterateUsingLambda(Map<String, Integer> map) {     map.forEach((k, v) -> System.out.println((k + \":\" + v))); } \npublic void iterateUsingEntrySet(Map<String, Integer> map) {     for (Map.Entry<String, Integer> entry : map.entrySet()) {         System.out.println(entry.getKey() + \":\" + entry.getValue());     } } \npublic void iterateUsingIteratorAndEntry(Map<String, Integer> map) {     Iterator<Map.Entry<String, Integer>> iterator = map.entrySet().iterator();     while (iterator.hasNext()) {         Map.Entry<String, Integer> entry = iterator.next();         System.out.println(entry.getKey() + \":\" + entry.getValue());     } } \n",
    "reg_date": "2021-10-12T12:04:14.000Z"
  },
  {
    "id": 2202,
    "keyword": null,
    "link": null,
    "title": " java 8 printstacktrace in system.out",
    "description": "public static void main(String[] args){     try {         test();     } catch (UnsupportedOperationException e) {         System.out.println(e);         e.printStackTrace();     } }  private static void test() {     throw new UnsupportedOperationException(\"Not yet implemented\"); }\n",
    "reg_date": "2021-10-12T12:04:14.000Z"
  },
  {
    "id": 2203,
    "keyword": null,
    "link": null,
    "title": " java 8 random string generator",
    "description": "@Test public void givenUsingJava8_whenGeneratingRandomAlphanumericString_thenCorrect() {     int leftLimit = 48; // numeral '0'     int rightLimit = 122; // letter 'z'     int targetStringLength = 10;     Random random = new Random();       String generatedString = random.ints(leftLimit, rightLimit + 1)       .filter(i -> (i <= 57 || i >= 65) && (i <= 90 || i >= 97))       .limit(targetStringLength)       .collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append)       .toString();       System.out.println(generatedString); } \n",
    "reg_date": "2021-10-12T12:04:14.000Z"
  },
  {
    "id": 2204,
    "keyword": null,
    "link": null,
    "title": " java 8 remove spaces from string",
    "description": "a.replaceAll(\"\\\\s+\",\"\");\n",
    "reg_date": "2021-10-12T12:04:15.000Z"
  },
  {
    "id": 2205,
    "keyword": null,
    "link": null,
    "title": " java 8 stream group by example",
    "description": "package com.mkyong.java8;  import java.math.BigDecimal; import java.util.Arrays; import java.util.List; import java.util.Map; import java.util.Set; import java.util.stream.Collectors;  public class Java8Examples4 {      public static void main(String[] args) {          //3 apple, 2 banana, others 1         List<Item> items = Arrays.asList(                 new Item(\"apple\", 10, new BigDecimal(\"9.99\")),                 new Item(\"banana\", 20, new BigDecimal(\"19.99\")),                 new Item(\"orang\", 10, new BigDecimal(\"29.99\")),                 new Item(\"watermelon\", 10, new BigDecimal(\"29.99\")),                 new Item(\"papaya\", 20, new BigDecimal(\"9.99\")),                 new Item(\"apple\", 10, new BigDecimal(\"9.99\")),                 new Item(\"banana\", 10, new BigDecimal(\"19.99\")),                 new Item(\"apple\", 20, new BigDecimal(\"9.99\"))                 );  \t\t//group by price         Map<BigDecimal, List<Item>> groupByPriceMap = \t\t\titems.stream().collect(Collectors.groupingBy(Item::getPrice));          System.out.println(groupByPriceMap);  \t\t// group by price, uses 'mapping' to convert List<Item> to Set<String>         Map<BigDecimal, Set<String>> result =                 items.stream().collect(                         Collectors.groupingBy(Item::getPrice,                                 Collectors.mapping(Item::getName, Collectors.toSet())                         )                 );          System.out.println(result);      } }\n",
    "reg_date": "2021-10-12T12:04:15.000Z"
  },
  {
    "id": 2206,
    "keyword": null,
    "link": null,
    "title": " java 8 stream option",
    "description": "things.stream()     .map(this::resolve)     .filter(Optional::isPresent)     .map(Optional::get)     .findFirst(); \n",
    "reg_date": "2021-10-12T12:04:15.000Z"
  },
  {
    "id": 2207,
    "keyword": null,
    "link": null,
    "title": " java 8 string to localdate",
    "description": "package com.mkyong.date;  import java.time.LocalDate;  public class JavaDateExample1 {      public static void main(String[] args) {          String date = \"2016-08-16\";          //default, ISO_LOCAL_DATE         LocalDate localDate = LocalDate.parse(date);          System.out.println(localDate);      } } Copy\n",
    "reg_date": "2021-10-12T12:04:15.000Z"
  },
  {
    "id": 2208,
    "keyword": null,
    "link": null,
    "title": " java Calendar add time",
    "description": "Calendar calendar = Calendar.getInstance();   // 15 days ago calendar.add(Calendar.DATE, -15);  // After 4 months calendar.add(Calendar.MONTH, 4);  \n",
    "reg_date": "2021-10-12T12:04:15.000Z"
  },
  {
    "id": 2209,
    "keyword": null,
    "link": null,
    "title": " java Convert a string IPv4 IP address to the equivalent long numeric value.",
    "description": "result += (Integer.parseInt(ipAddressInArray[i]) % 256 * Math.pow(256, power)); Copied!\n",
    "reg_date": "2021-10-12T12:04:15.000Z"
  },
  {
    "id": 2210,
    "keyword": null,
    "link": null,
    "title": " java Date get today date",
    "description": "import java.time.format.DateTimeFormatter;   import java.time.LocalDateTime;     public class CurrentDateTimeExample1 {       public static void main(String[] args) {        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm:ss\");      LocalDateTime now = LocalDateTime.now();      System.out.println(dtf.format(now));     }     }   \nSimpleDateFormat formatter = new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");   Date date = new Date();   System.out.println(formatter.format(date));    // ------------------------  System.out.println(LocalDate.now()); \n// get current date and time in java using LocalDateTime.now() method import java.time.LocalDateTime; public class UsingLocalDateTime {    public static void main(String[] args)    {       System.out.println(LocalDateTime.now());    } }\nSimpleDateFormat formatter = new SimpleDateFormat(\"dd-MM-yyyy\"); Date today = new Date(); System.out.println(formatter.format(today));\n// how to get current date and time in java  // using Date class and System.currentTimeMillis() method import java.util.Date; public class UsingDateClass {    public static void main(String[] args)     {       Date dt = new Date();       System.out.println(dt);       long milliSeconds = System.currentTimeMillis();         Date date = new Date(milliSeconds);       System.out.println(date);     } }\n",
    "reg_date": "2021-10-12T12:04:15.000Z"
  },
  {
    "id": 2211,
    "keyword": null,
    "link": null,
    "title": " java Iterable to list",
    "description": "@Test public void whenConvertIterableToListUsingJava8_thenSuccess() {     List<String> result = new ArrayList<String>();     iterable.forEach(result::add);      assertThat(result, contains(\"john\", \"tom\", \"jane\")); }\n",
    "reg_date": "2021-10-12T12:04:15.000Z"
  },
  {
    "id": 2212,
    "keyword": null,
    "link": null,
    "title": " java STRING TO NUMBER",
    "description": "String myString = \"1234\"; int foo = Integer.parseInt(myString);\nint result = Integer.parseInt(number);\nint result = Integer.parseInt(\"500\"); System.out.println(result) // prints 500 as int\n\tString number = \"10\"; \tint result = Integer.parseInt(number);\t\t\t \tSystem.out.println(result); Copy\nint foo; try {    foo = Integer.parseInt(myString); } catch (NumberFormatException e) {    foo = 0; } \nInteger.parseInt(str);\n",
    "reg_date": "2021-10-12T12:04:15.000Z"
  },
  {
    "id": 2213,
    "keyword": null,
    "link": null,
    "title": " java String[] to List",
    "description": "import java.util.*; ... String[] strings = {\"Lula\", \"Jos&eacute; Aparecido\", \"Carlos Minc\"}; List<String> list = Arrays.asList(strings);\n",
    "reg_date": "2021-10-12T12:04:15.000Z"
  },
  {
    "id": 2214,
    "keyword": null,
    "link": null,
    "title": " java  argument main",
    "description": "public class ArgumentExample {     public static void main(String[] args) {         for(int i = 0; i < args.length; i++) {             System.out.println(args[i]);         }     } } \n",
    "reg_date": "2021-10-12T12:04:16.000Z"
  },
  {
    "id": 2215,
    "keyword": null,
    "link": null,
    "title": " java add commas to numbers",
    "description": "String number = \"1000500000.574\"; double amount = Double.parseDouble(number); DecimalFormat formatter = new DecimalFormat(\"#,###.00\"); // the zeroes after the point are the number of digits shown after the period // you can also switch point and commas and get for example 1.002,45 System.out.println(formatter.format(amount)); // this prints 1,000,500,000.57\n",
    "reg_date": "2021-10-12T12:04:16.000Z"
  },
  {
    "id": 2216,
    "keyword": null,
    "link": null,
    "title": " java add element to existing array",
    "description": "//original array String[] rgb = new String[] {\"red\", \"green\"}; //new array with one more length String[] rgb2 = new String[rgb.length + 1]; //copy the old in the new array System.arraycopy(rgb, 0, rgb2, 0, rgb.length); //add element to new array rgb2[rgb.length] = \"blue\"; //optional: set old array to new array rgb = rgb2;\ncar redCar = new Car(\"Red\"); car Garage [] = new Car [100]; Garage[0] = redCar;\n",
    "reg_date": "2021-10-12T12:04:16.000Z"
  },
  {
    "id": 2217,
    "keyword": null,
    "link": null,
    "title": " java add listent to button",
    "description": "JButton button = new JButton(\"Do Something\"); button.addActionListener( new ActionListener() {     @Override     public void actionPerformed(ActionEvent e)     {         System.out.println(\"Do Something Clicked\");     } });\n",
    "reg_date": "2021-10-12T12:04:16.000Z"
  },
  {
    "id": 2218,
    "keyword": null,
    "link": null,
    "title": " java add to map",
    "description": "HashMap<String, String> map = new HashMap<>(); map.put(\"key\", \"value\");\nmap.put(key, Object); //exemple: Map<String, String> map = new HashMap<String, String>(); map.put(\"mykey\", \"myvalue\");\n",
    "reg_date": "2021-10-12T12:04:16.000Z"
  },
  {
    "id": 2219,
    "keyword": null,
    "link": null,
    "title": " java age from date",
    "description": "LocalDate today = LocalDate.now(); LocalDate birthday = LocalDate.of(1987, 09, 24);  Period period = Period.between(birthday, today);  //Now access the values as below System.out.println(period.getDays()); System.out.println(period.getMonths()); System.out.println(period.getYears());\n",
    "reg_date": "2021-10-12T12:04:16.000Z"
  },
  {
    "id": 2220,
    "keyword": null,
    "link": null,
    "title": " java alert box",
    "description": "alert('Message');\n1- import static javax.swing.JOptionPane.showMessageDialog; 2- showMessageDialog(null, \"My Result est \" + ResultVariable);\nalert(\"string\");\n",
    "reg_date": "2021-10-12T12:04:16.000Z"
  },
  {
    "id": 2221,
    "keyword": null,
    "link": null,
    "title": " java anagrams",
    "description": "import java.util.Arrays;       public class AnagramString {       static void isAnagram(String str1, String str2) {           String s1 = str1.replaceAll(\"\\\\s\", \"\");           String s2 = str2.replaceAll(\"\\\\s\", \"\");           boolean status = true;           if (s1.length() != s2.length()) {               status = false;           } else {               char[] ArrayS1 = s1.toLowerCase().toCharArray();               char[] ArrayS2 = s2.toLowerCase().toCharArray();               Arrays.sort(ArrayS1);               Arrays.sort(ArrayS2);               status = Arrays.equals(ArrayS1, ArrayS2);           }           if (status) {               System.out.println(s1 + \" and \" + s2 + \" are anagrams\");           } else {               System.out.println(s1 + \" and \" + s2 + \" are not anagrams\");           }       }           public static void main(String[] args) {           isAnagram(\"Keep\", \"Peek\");           isAnagram(\"Mother In Law\", \"Hitler Woman\");       }   }   /*OUTPUT *Keep and Peek are anagrams *MotherInLaw and HitlerWoman are anagrams */\n    static boolean isAnagram(String a, String b) {                  String sortedA = \"\";         Object[] aArr = a.toLowerCase().chars().sorted().mapToObj(i -> (char) i).toArray();         for (Object o: aArr) {             sortedA = sortedA.concat(o.toString());         }                           String sortedB = \"\";         Object[] bArr = b.toLowerCase().chars().sorted().mapToObj(i -> (char) i).toArray();         for (Object o: bArr) {             sortedB = sortedB.concat(o.toString());         }                  if(sortedA.equals(sortedB))                 return true;         else             return false;         }\n",
    "reg_date": "2021-10-12T12:04:16.000Z"
  },
  {
    "id": 2222,
    "keyword": null,
    "link": null,
    "title": " java and or precedence",
    "description": "year % 4 == 0 && year % 100 != 0 || year % 400 == 0 \n",
    "reg_date": "2021-10-12T12:04:16.000Z"
  },
  {
    "id": 2223,
    "keyword": null,
    "link": null,
    "title": " java android edit text set value",
    "description": "EditText bookInput = (EditText)findViewById(R.id.book); bookInput.setText(\"The Shining\");\n",
    "reg_date": "2021-10-12T12:04:16.000Z"
  },
  {
    "id": 2224,
    "keyword": null,
    "link": null,
    "title": " java android play sound file with variable",
    "description": "private void playMp3(String nameOfFile){    MediaPlayer mPlayer = MediaPlayer.create(this, getResources().getIdentifier(nameOfFile, \"raw\", getPackageName()));    mPlayer.start(); }\n",
    "reg_date": "2021-10-12T12:04:16.000Z"
  },
  {
    "id": 2225,
    "keyword": null,
    "link": null,
    "title": " java android show toast",
    "description": "Toast myToast = Toast.makeText(this, \"I'm a toast!\", Toast.LENGTH_LONG); myToast.show();\nToast toast = Toast.makeText(this, \"message\", Toast.LENGTH_LONG;);     toast.show();\n",
    "reg_date": "2021-10-12T12:04:17.000Z"
  },
  {
    "id": 2226,
    "keyword": null,
    "link": null,
    "title": " java anonymous thread lambda",
    "description": "public class LambdaThreadTest {    public static void main(String args[]) {       // Child thread       new Thread(() -> { // Lambda Expression          for(int i=1; i <= 5; i++) {             System.out.println(\"Child Thread: \"+ i);             try {                Thread.sleep(500);             } catch(Exception e) {                e.printStackTrace();             }          }       }).start();       // Main Thead       for(int j=1; j < 5; j++) {          System.out.println(\"Main Thread: \"+ j);          try {             Thread.sleep(500);          } catch(Exception e) {             e.printStackTrace();          }       }    } }\n",
    "reg_date": "2021-10-12T12:04:17.000Z"
  },
  {
    "id": 2227,
    "keyword": null,
    "link": null,
    "title": " java append to arraylist at beginning",
    "description": "ArrayList<Integer> arr = new ArrayList<Integer>();  arr.add(1); arr.add(2); arr.add(3); arr.add(4);  int element = 0;  //ArrayList.add(index, element) arr.add(0, element);\narrlist.add(2,25); // .add(index, content)\n//create an ArrayList   ArrayList<String> myList                  = new ArrayList<String>();          //some items to ArrayList myList.add(\"One\"); myList.add(\"Two\"); myList.add(\"Three\");  /* * To insert element at beginning of ArrayList * use add method of ArrayList class with index 0 */  myList.add(0, \"Zero\");\n",
    "reg_date": "2021-10-12T12:04:17.000Z"
  },
  {
    "id": 2228,
    "keyword": null,
    "link": null,
    "title": " java append to list",
    "description": "package com.journaldev.examples;  import java.util.ArrayList; import java.util.List;  public class ListAddExamples {  \tpublic static void main(String[] args) {  \t\tList<String> vowels = new ArrayList<>();  \t\tvowels.add(\"A\"); // [A] \t\tvowels.add(\"E\"); // [A, E] \t\tvowels.add(\"U\"); // [A, E, U]  \t\tSystem.out.println(vowels); // [A, E, U]  \t\tvowels.add(2, \"I\"); // [A, E, I, U] \t\tvowels.add(3, \"O\"); // [A, E, I, O, U]  \t\tSystem.out.println(vowels); // [A, E, I, O, U] \t} }\nList mylist.addAll(secondList);\n",
    "reg_date": "2021-10-12T12:04:17.000Z"
  },
  {
    "id": 2229,
    "keyword": null,
    "link": null,
    "title": " java array",
    "description": "data = new Double[10];\nint[] intArray = new int[]{ 1,2,3,4,5,6,7,8,9,10 }\nint intArray[];    //declaring array intArray = new int[20];  // allocating memory to array //OR int[] intArray = new int[20]; // combining both statements in one\nString[] cars = new String[4]; cars[0] = \"Volvo\"; cars[1] = \"BMW\"; cars[2] = \"Ford\"; cars[3] = \"Mazda\";\n// ! IMPORTANTE ! // in JAVA an array is not the same as an ArrayList object!! // 1 - declare, instanciate and populate int arr[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };  // 2 - declare and instanciate an int array with maxSize // note: the index goes between 0 and maxSize-1 int newarr[] = new int[maxSize]; // 2.1 - insert the value n on the position pos newarr[pos] = n;  // 2.2 - insert values recursively for (i = 0; i < maxSize; i++) { newarr[i] = arr[i]; }\n// 10 Strings in the array named: arr String[] arr = new String[10];\n",
    "reg_date": "2021-10-12T12:04:17.000Z"
  },
  {
    "id": 2230,
    "keyword": null,
    "link": null,
    "title": " java array add element",
    "description": "// A better solution would be to use an ArrayList which can grow as you need it.  // The method ArrayList.toArray( T[] a )  // gives you back your array if you need it in this form.  List<String> where = new ArrayList<String>(); where.add(element); where.add(element);  // If you need to convert it to a simple array...  String[] simpleArray = new String[ where.size() ]; where.toArray( simpleArray );\n//original array String[] rgb = new String[] {\"red\", \"green\"}; //new array with one more length String[] rgb2 = new String[rgb.length + 1]; //copy the old in the new array System.arraycopy(rgb, 0, rgb2, 0, rgb.length); //add element to new array rgb2[rgb.length] = \"blue\"; //optional: set old array to new array rgb = rgb2;\ncar redCar = new Car(\"Red\"); car Garage [] = new Car [100]; Garage[0] = redCar;\n",
    "reg_date": "2021-10-12T12:04:17.000Z"
  },
  {
    "id": 2231,
    "keyword": null,
    "link": null,
    "title": " java array check duplicates",
    "description": "duplicates = false;  for(i = 0; i < zipcodeList.length; i++) { \tfor(j = i + 1; k < zipcodeList.length; j++) {   \t\tif(j != i && zipcodeList[j] == zipcodeList[i]) {    \t  \t\tduplicates = true; \t\t} \t} }\n// Uses a set, which does not allow duplicates   for (String name : names)  {      if (set.add(name) == false)       {         // print name your duplicate element      } }\n",
    "reg_date": "2021-10-12T12:04:17.000Z"
  },
  {
    "id": 2232,
    "keyword": null,
    "link": null,
    "title": " java array contains",
    "description": "import java.util.Arrays;  // For String String[] array = {\"Boto\", \"Nesto\", \"Lepta\"}; String toSearch = \"Nesto\";  // Inline if (Arrays.toString(array).contains(toSearch)) { \t// Do something if it's found }  // Multi line String strArray = Array.toString(array); if (strArray.contains(toSearch)) { \t// Do your thing }  // Different elements int[] numbers = {1, 2, 3, 4, 5, 6, 7, 8, 9, 0}; int number = 5;  String checker = Arrays.toString(numbers);  // The toString of int in some cases can happen without explicitly saying so // In this example we convert both if (checker.contains(Integer.toString(number)) { \t// Found.      } \npackage com.mkyong.core;  import java.util.Arrays; import java.util.List;  public class StringArrayExample1 {      public static void main(String[] args) {          String[] alphabet = new String[]{\"A\", \"B\", \"C\"};          // Convert String Array to List         List<String> list = Arrays.asList(alphabet);                  if(list.contains(\"A\")){             System.out.println(\"Hello A\");         }      }  } Copy\nArrays.asList(yourArray).contains(yourValue)\nStringArrayExample1.java  package com.mkyong.core;  import java.util.Arrays; import java.util.List;  public class StringArrayExample1 {      public static void main(String[] args) {          String[] alphabet = new String[]{\"A\", \"B\", \"C\"};          // Convert String Array to List         List<String> list = Arrays.asList(alphabet);                  if(list.contains(\"A\")){             System.out.println(\"Hello A\");         }      }  }\n\t// Convert to stream and test it \tboolean result = Arrays.stream(alphabet).anyMatch(\"A\"::equals); \tif (result) { \t\tSystem.out.println(\"Hello A\"); \t} Copy\npublic class Contains {      public static void main(String[] args) {         int[] num = {1, 2, 3, 4, 5};         int toFind = 3;         boolean found = false;          for (int n : num) {             if (n == toFind) {                 found = true;                 break;             }         }          if(found)             System.out.println(toFind + \" is found.\");         else             System.out.println(toFind + \" is not found.\");     } }\n",
    "reg_date": "2021-10-12T12:04:17.000Z"
  },
  {
    "id": 2233,
    "keyword": null,
    "link": null,
    "title": " java array copy",
    "description": "// Shallow copy int[] src = {1,2,3,4,5}; int[] dst = Arrays.copyOf(src, src.length);  // Deep copy int[] dst2 = new int[src.length]; for(int i = 0; i < src.length; i++){ \tdst2[i] = src[i]; }\nint[] src  = new int[]{1,2,3,4,5}; int[] dest = new int[5];  System.arraycopy( src, 0, dest, 0, src.length );\nint a[] = {1, 8, 3};     // Copy elements of a[] to b[]  int b[] = a.clone();\nint[] a = {1,2,3,4,5}; int[] b = Arrays.copyOf(a, a.length);\nint[] a = {1, 2, 3};       int[] b = a.clone();\n// method  public static int [] copyArray(int [] arr){       int [] copyArr = new int[arr.length];       for (int i = 0; i < copyArr.length; i++){             copyArr[i] = arr[i];        }       return copyArr; }  // Arrays. method  int[] copyCat = Arrays.copyOf(arr, arr.length);  // System  System.arraycopy(x,0,y,0,5); // 5 is array's length   // clone  y = x.clone(); \n",
    "reg_date": "2021-10-12T12:04:18.000Z"
  },
  {
    "id": 2234,
    "keyword": null,
    "link": null,
    "title": " java array declaration",
    "description": "int[] intArray = new int[]{ 1,2,3,4,5,6,7,8,9,10 }\nint intArray[];    //declaring array intArray = new int[20];  // allocating memory to array //OR int[] intArray = new int[20]; // combining both statements in one\nint[] array = new int[/*size*/]; // Works for double, char, etc.\nint[] array1 = new int[5]; //int array length 5 String[] array2 = new String[5] //String array length 5 double[] array3 = new double[5] // Double array length 5 \nint[] arr = new int[10];\t//Can hold 10 elements\nAn array is an ordered collection of elements of the same type, identified by a pair of square brackets [].     To use an array, you need to: 1. Declare the array with a name and a type. Use a plural name for array, e.g., marks, rows, numbers. All elements of the array belong to the same type. 2. Allocate the array using new operator, or through initialization, e.g.      int[] marks;  // Declare an int array named marks               // marks contains a special value called null. int marks[];  // Same as above, but the above syntax recommended marks = new int[5];   // Allocate 5 elements via the \"new\" operator // Declare and allocate a 20-element array in one statement via \"new\" operator int[] factors = new int[20]; // Declare, allocate a 6-element array thru initialization int[] numbers = {11, 22, 33, 44, 55, 66}; // size of array deduced from the number of items\n",
    "reg_date": "2021-10-12T12:04:18.000Z"
  },
  {
    "id": 2235,
    "keyword": null,
    "link": null,
    "title": " java array delete elements",
    "description": "import java.util.Scanner;  public class ElemRemoval {      public static void main(String[] args) {         Scanner in = new Scanner(System.in);         int[] intArr = {1, 2, 5, 12, 7, 3, 8};         System.out.print(\"Enter Element to be deleted : \");         int elem = in.nextInt();                  for(int i = 0; i < intArr.length; i++){             if(intArr[i] == elem){                 // shifting elements                 for(int j = i; j < intArr.length - 1; j++){                     intArr[j] = intArr[j+1];                 }                 break;             }         }                System.out.println(\"Elements -- \" );         for(int i = 0; i < intArr.length - 1; i++){             System.out.print(\" \" + intArr[i]);         }                     } }\n//Make an res array that is equal to a but don't contains number 0 int[] res = Arrays.stream(a).filter(x -> x != 0).toArray();\n//Use ArrayList XD import java.util.ArrayList; array.remove(i); //remove element by index\n",
    "reg_date": "2021-10-12T12:04:18.000Z"
  },
  {
    "id": 2236,
    "keyword": null,
    "link": null,
    "title": " java array initialization",
    "description": "int[] data = {10,20,30,40,50,60,71,80,90,91}; // or int[] data; data = new int[] {10,20,30,40,50,60,71,80,90,91}; // or int[] data = new int[10]; data = {10,20,30,40,50,60,71,80,90,91};\nint[] arr = new int[10];\t//Can hold 10 elements\nint[] arr = new int[5];\t // integer array of size 5 you can also change data type \nint[] numbers = new int[5]; /* size of the array is 5 */ int[] nums = new int[] {1, 2, 3, 4, 5}; /* Fill the array ny these numbers*/ String[] names = new String[10]; /* array of type string and size 10 */ String[] countries = new String[] {\"Germany\", \"US\"}; \nint[] data = {10,20,30,40,50,60,71,80,90,91};  // or  int[] data; data = new int[] {10,20,30,40,50,60,71,80,90,91}; \nint[] array=new int[5]; int[] array2=new int[]{1,2};\n",
    "reg_date": "2021-10-12T12:04:18.000Z"
  },
  {
    "id": 2237,
    "keyword": null,
    "link": null,
    "title": " java array kürzen",
    "description": "Arrays.copyOfRange(array, start, end);\n",
    "reg_date": "2021-10-12T12:04:18.000Z"
  },
  {
    "id": 2238,
    "keyword": null,
    "link": null,
    "title": " java array loop",
    "description": "\t\tScanner scanner = new Scanner( System.in );         int n = scanner.nextInt();         int[] a=new int[ n + 1 ];         for( int k = 1; k <= n; k ++ ){             a[ k ] = scanner.nextInt();         }         Arrays.sort( a );         for( int k = 1; k <= n; k ++ ){             System.out.print( a[k] + \" \" );         }\npublic class Test {     public static void main(String args[]) {         String string = args[0];         System.out.println(\"last character: \" +                            string.substring(string.length() - 1));      } } \n",
    "reg_date": "2021-10-12T12:04:18.000Z"
  },
  {
    "id": 2239,
    "keyword": null,
    "link": null,
    "title": " java array object",
    "description": "obj array[] = new obj[10];  for (int i = 0; i < array.length; i++) {   array[i] = new obj(i); }\nClass obj[]= new Class[array_length] \npublic class MainClass {       public static void main(String args[])     {         System.out.println(\"Hello, World!\");         //step1 : first create array of 10 elements that holds object addresses.         Emp[] employees = new Emp[10];         //step2 : now create objects in a loop.         for(int i=0; i<employees.length; i++){             employees[i] = new Emp(i+1);//this will call constructor.         }     } }  class Emp{     int eno;     public Emp(int no){         eno = no;         System.out.println(\"emp constructor called..eno is..\"+eno);     } }\nclass ObjectArray{    public static void main(String args[]){      Account obj[] = new Account[2] ;      //obj[0] = new Account();      //obj[1] = new Account();     obj[0].setData(1,2);     obj[1].setData(3,4);     System.out.println(\"For Array Element 0\");     obj[0].showData();     System.out.println(\"For Array Element 1\");      obj[1].showData();   } } class Account{   int a;   int b;  public void setData(int c,int d){    a=c;    b=d;  }  public void showData(){    System.out.println(\"Value of a =\"+a);    System.out.println(\"Value of b =\"+b);  } }\n",
    "reg_date": "2021-10-12T12:04:18.000Z"
  },
  {
    "id": 2240,
    "keyword": null,
    "link": null,
    "title": " java array of float",
    "description": "//To declare and initialize array of float in Java use following float array[] = new float[]{1,2,3};\n",
    "reg_date": "2021-10-12T12:04:18.000Z"
  },
  {
    "id": 2241,
    "keyword": null,
    "link": null,
    "title": " java array remove space",
    "description": "for (int i = 0; i < temp.length; i++){     temp[i] = if(!temp[i].trim().equals(\"\") || temp[i]!=null)temp[i].trim(); }\nString str = \"Programming is easy to learn\"; String result = str.replaceAll(\"\\\\s+\",\"\");\n",
    "reg_date": "2021-10-12T12:04:18.000Z"
  },
  {
    "id": 2242,
    "keyword": null,
    "link": null,
    "title": " java array sortieren",
    "description": "import java. util. Arrays; Arrays. sort(array);\nint[] intArray = {1, 5, 3, 7, 2, 9}; Arrays.sort(intArray); System.out.println(Arrays.toString(intArray));  // Ausgabe: [1, 2, 3, 5, 7, 9]\n",
    "reg_date": "2021-10-12T12:04:18.000Z"
  },
  {
    "id": 2243,
    "keyword": null,
    "link": null,
    "title": " java array split by multiple ways",
    "description": "String[] array = {\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"}; String[] a = Arrays.copyOfRange(array, 0, 4); //<- (targetArray, start, to) String[] b = Arrays.copyOfRange(array, 4, array.length);  Output: a: 0,1,2,3 b: 4,5,6,7,8,9\npublic class split_demo {          public static void main (String[] args)       {                 String str_split=\"split method.It is cool - (Hello-World)\";           for (String str_complex : str_split.split(\"\\\\s|,|\\\\.|-\")) {               System.out.println(str_complex);           }       }   } \n",
    "reg_date": "2021-10-12T12:04:19.000Z"
  },
  {
    "id": 2244,
    "keyword": null,
    "link": null,
    "title": " java array swap",
    "description": "public static void swap(int x, int y, int[] arr) {   \tint temp = arr[x];   \tarr[x] = arr[y];   \tarr[y] = temp; }\npublic static final <T> void swap (T[] a, int i, int j) {   T t = a[i];   a[i] = a[j];   a[j] = t; }  public static final <T> void swap (List<T> l, int i, int j) {   Collections.<T>swap(l, i, j); }  private void test() {   String [] a = {\"Hello\", \"Goodbye\"};   swap(a, 0, 1);   System.out.println(\"a:\"+Arrays.toString(a));   List<String> l = new ArrayList<String>(Arrays.asList(a));   swap(l, 0, 1);   System.out.println(\"l:\"+l); } \nimport java.util.Arrays;  // ... //  int[] digits = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };  // Rotate is a fancy way to say split around an index, and swap the chunks // For the comments, assume `A=digits` int[] rotate(int[] A, int r) {   int N = A.length; // total number of elements      // Arrays.copyOfRange(array, start, end) will return array[start:end),   // where start is inclusive and end exclusive   int[] left = Arrays.copyOfRange(A, 0, r); // [0,1,...,r-1], so r=3->[0,1,2]   int[] right = Arrays.copyOfRange(A, r, N); // [r,r+1,...,N-1], so r=7->[7,8,9]      // Now, concatenate right with left and store in result   // - in JS this would be `result=[...right, ...left]`   int[] result = new int[N];   int R = N - r; // length of right array   for(int i=0; i<N; ++i) {     // ternary expression: same as     //   `if(i<R) result[i] = right[i];`     //   `else    result[i] = left[i-R];`     result[i] = i<R ? right[i] : left[i-R];   }      return result; }\nString temp = arr[1]; arr[1] = arr[2]; arr[2] = temp; \n",
    "reg_date": "2021-10-12T12:04:19.000Z"
  },
  {
    "id": 2245,
    "keyword": null,
    "link": null,
    "title": " java array to arraylist",
    "description": "new ArrayList<>(Arrays.asList(array));\nnew ArrayList<>(Arrays.asList(array)) \nList<Element> list = Arrays.asList(array);\nList<String> list = new ArrayList<>(); list.add(\"a\"); list.add(\"ab\"); list.add(\"abc\"); list.add(\"abcd\"); // convert String[] array = list.toArray();\nArrayList<String> ArrayLister=new ArrayList<>(){ArrayLister.add(\"Hi\")}; String[] array=ArrayLister.toArray(String[]); \nInteger[] arr = new Integer[al.size()];             // ArrayList to Array Conversion          for (int i = 0; i < al.size(); i++)              arr[i] = al.get(i); \n",
    "reg_date": "2021-10-12T12:04:19.000Z"
  },
  {
    "id": 2246,
    "keyword": null,
    "link": null,
    "title": " java array to list",
    "description": "String[] arr = list.toArray(new String[list.size()]);\nInteger[] spam = new Integer[] { 1, 2, 3 }; List<Integer> list = Arrays.asList(spam);\nArrays.asList(array);\n/* Get the Array to be converted. Create the List by passing the Array as parameter in the constructor of the List with the help of Arrays. asList() method. Return the formed List. */  String[] namedata = { \"ram\", \"shyam\", \"balram\" };   List<String> list = Arrays.asList(namedata);\nList<String> stockList = new ArrayList<String>(); stockList.add(\"stock1\"); stockList.add(\"stock2\");  String[] stockArr = new String[stockList.size()]; stockArr = stockList.toArray(stockArr);  for(String s : stockArr)     System.out.println(s);\nint[] spam = new int[] { 1, 2, 3 }; Arrays.stream(spam)       .boxed()       .collect(Collectors.toList());\n",
    "reg_date": "2021-10-12T12:04:19.000Z"
  },
  {
    "id": 2247,
    "keyword": null,
    "link": null,
    "title": " java arraylist",
    "description": "import java.util.ArrayList;\nArrayList<Integer> integerArray = new ArrayList<Integer>(); ArrayList<String> integerArray = new ArrayList<String>(); ArrayList<Double> integerArray = new ArrayList<Double>(); //... keep replacing what is inside the <> with the appropriate //data type \nimport java.util.List; //list abstract class import java.util.ArrayList; //arraylist class  //Object Lists List l = new ArrayList(); ArrayList a = new ArrayList();  //Specialized List List<String> l = new ArrayList<String>(); ArrayList<Integer> a = new ArrayList<Integer>(); //only reference data types allowed in brackets <>  //Initial Capacity List<Double> l = new ArrayList<Double>(5); //list will start with a capacity of 5 //saves allocation times\nList<String> expenseTypeList = new ArrayList<>();         expenseTypeList.add(\"GENERAL\");         expenseTypeList.add(\"PURCHASE\");         expenseTypeList.add(\"PROJECT\");\n//ArrayList ArrayList is a part of collection framework and is present in java.util package. It provides us dynamic arrays in Java. Though, it may be slower than standard arrays but can be helpful in programs where lots of manipulation in the array is needed.   ArrayList inherits AbstractList class and implements List interface. ArrayList is initialized by a size, however the size can increase if collection grows or shrunk if objects are removed from the collection. Java ArrayList allows us to randomly access the list. ArrayList can not be used for primitive types, like int, char, etc. We need a wrapper class for such cases. Code to create a generic integer ArrayList :   ArrayList<Integer> arrli = new ArrayList<Integer>();\nimport java.util.ArrayList; ArrayList<String> languages = new ArrayList<String>(); // ArrayList of type string ArrayList<int> numbers = new ArrayList<int>(); // ArrayList of type int \n",
    "reg_date": "2021-10-12T12:04:19.000Z"
  },
  {
    "id": 2248,
    "keyword": null,
    "link": null,
    "title": " java arraylist add",
    "description": "ArrayList<Integer> str=new ArrayList<Integer>(); str.add(0); str.add(1);  // Result = [0, 1]      str.add(1, 11);  // Result = [0, 11, 1]\nArrayList<String> arrayList = new ArrayList<>(); // Adds element at the back of the list arrayList.add(\"foo\"); arrayList.add(\"bar\"); // Result = [\"foo\", \"bar\"]  // Adds element at the specified index arrayList.add(1, \"baz\"); // Result = [\"foo\", \"baz\", \"bar\"]\nArrayList<String> languages = new ArrayList<String>();  languages.add(\"PHP\"); languages.add(\"JAVA\"); languages.add(\"C#\"); ArrayList<int> numbers = new ArrayList<int>();  numbers.add(9); numbers.add(14); numbers.add(2);\n//create ArrayList ArrayList<String> arrayList = new ArrayList<String>(); //add item to ArrayList arrayList.add(\"item\"); //check if ArrayList contains item (returns boolean) System.out.println(arrayList.contains(\"item\")); //remove item from ArrayList arrayList.remove(\"item\");\nimport java.util.ArrayList; public class Details {     public static void main(String[] args) {          //ArrayList<String> Declaration         ArrayList<String> al= new ArrayList<String>();         //add method for String ArrayList         al.add(\"Ram\");         al.add(\"Shyam\");         al.add(\"CPS\");         al.add(\"John\");         al.add(\"Steve\");         System.out.println(\"Elements of ArrayList of String Type: \"+al);\npublic void add(int index, E element) // adding element 25 at third position arrlist.add(2,25);\n",
    "reg_date": "2021-10-12T12:04:19.000Z"
  },
  {
    "id": 2249,
    "keyword": null,
    "link": null,
    "title": " java arraylist add at beginning",
    "description": "list.add(0, yourObject);\n//create an ArrayList   ArrayList<String> myList                  = new ArrayList<String>();          //some items to ArrayList myList.add(\"One\"); myList.add(\"Two\"); myList.add(\"Three\");  /* * To insert element at beginning of ArrayList * use add method of ArrayList class with index 0 */  myList.add(0, \"Zero\");\n",
    "reg_date": "2021-10-12T12:04:19.000Z"
  },
  {
    "id": 2250,
    "keyword": null,
    "link": null,
    "title": " java arraylist concat",
    "description": "array1.addAll(array2);\n",
    "reg_date": "2021-10-12T12:04:19.000Z"
  },
  {
    "id": 2251,
    "keyword": null,
    "link": null,
    "title": " java arraylist contains string",
    "description": "boolean ans = arr.contains(\"geeks\");\nList<Integer> arr = new ArrayList<Integer>(4); boolean ans = arr.contains(2);\n",
    "reg_date": "2021-10-12T12:04:19.000Z"
  },
  {
    "id": 2252,
    "keyword": null,
    "link": null,
    "title": " java arraylist declaration",
    "description": "ArrayList<Integer> integerArray = new ArrayList<Integer>(); ArrayList<String> integerArray = new ArrayList<String>(); ArrayList<Double> integerArray = new ArrayList<Double>(); //... keep replacing what is inside the <> with the appropriate //data type \nList<String> x = new ArrayList<>(Arrays.asList(\"xyz\", \"abc\"));\nArrayList<Integer> integerArray = new ArrayList<Integer>(); ArrayList<String> stringArray = new ArrayList<String>(); ArrayList<Double> doubleArray = new ArrayList<Double>(); //... keep replacing what is inside the <> with the appropriate //data type\nArrayList<Type> name = new ArrayList<Type>();\nArrayList<E> yourArray = new ArrayList<E>();  //'E' can be raplaced with any data type or object, or left as  // E if used for general funcitonality\nList<List<Individual>> group = new ArrayList<List<Individual>>(4); \n",
    "reg_date": "2021-10-12T12:04:19.000Z"
  },
  {
    "id": 2253,
    "keyword": null,
    "link": null,
    "title": " java arraylist example",
    "description": "import java.util.ArrayList;\nimport java.util.ArrayList; public class ArrayListExample {    public static void main(String[] args)    {       int num = 14;       // declaring ArrayList with initial size num       ArrayList<Integer> al = new ArrayList<Integer>(num);       // append new element at the end of list       for(int a = 1; a <= num; a++)       {          al.add(a);       }       System.out.println(al);       // remove element at index 7       al.remove(7);       // print ArrayList after deletion       System.out.println(al);       // print elements one by one       for(int a = 0; a < al.size(); a++)       {          System.out.print(al.get(a) + \" \");       }    } }\nimport java.util.List; //list abstract class import java.util.ArrayList; //arraylist class  //Object Lists List l = new ArrayList(); ArrayList a = new ArrayList();  //Specialized List List<String> l = new ArrayList<String>(); ArrayList<Integer> a = new ArrayList<Integer>(); //only reference data types allowed in brackets <>  //Initial Capacity List<Double> l = new ArrayList<Double>(5); //list will start with a capacity of 5 //saves allocation times\nArrayList<String> languages = new ArrayList<String>();  languages.add(\"PHP\"); languages.add(\"JAVA\"); languages.add(\"C#\"); ArrayList<int> numbers = new ArrayList<int>();  numbers.add(9); numbers.add(14); numbers.add(2);\nimport java.util.ArrayList; //create ArrayList ArrayList<String> arrayList = new ArrayList<String>();\nList<String> expenseTypeList = new ArrayList<>();         expenseTypeList.add(\"GENERAL\");         expenseTypeList.add(\"PURCHASE\");         expenseTypeList.add(\"PROJECT\");\n",
    "reg_date": "2021-10-12T12:04:20.000Z"
  },
  {
    "id": 2254,
    "keyword": null,
    "link": null,
    "title": " java arraylist in enum",
    "description": "public enum SomeEnum  {     ENUM_VALUE1(\"Some value1\"),     ENUM_VALUE2(\"Some value2\"),     ENUM_VALUE3(\"Some value3\"); }\n",
    "reg_date": "2021-10-12T12:04:20.000Z"
  },
  {
    "id": 2255,
    "keyword": null,
    "link": null,
    "title": " java arraylist integer isempty",
    "description": "list_name.isEmpty()\n",
    "reg_date": "2021-10-12T12:04:20.000Z"
  },
  {
    "id": 2256,
    "keyword": null,
    "link": null,
    "title": " java arraylist integer min value",
    "description": "int minIndex = list.indexOf(Collections.min(list)); \n",
    "reg_date": "2021-10-12T12:04:20.000Z"
  },
  {
    "id": 2257,
    "keyword": null,
    "link": null,
    "title": " java arraylist loop",
    "description": "ArrayList<String> namesList = new ArrayList<String>(Arrays.asList( \"alex\", \"brian\", \"charles\") );           for(String name : namesList) {     System.out.println(name); } \n// Using Classic For Loop for (int i=0; i<myArrayList.size(); i++) {     System.out.println(myArrayList.get(i)); } /*****************************************************/ //Advanced For Loop - ArrayList<String>  for(String str : myArrayList) {     System.out.println(str); } /*****************************************************/ //Using Iterator Iterator arrayListIterator = myArrayList.iterator(); while (arrayListIterator.hasNext()) {     System.out.println(arrayListIterator.next()); } /*****************************************************/ //ForEach - java 8 - ArrayList<String> myArrayList.forEach( str -> System.out.println(str));     \n      for (int counter = 0; counter < arrlist.size(); counter++) { \t\t                 System.out.println(arrlist.get(counter)); \t\t       }\n// will iterate through each index of the array list // using the size of the array list as the max. // (the last index is the size of the array list - 1)  for (int i = 0; i < myArrayList.size(); i++) {      System.out.println(myArrayList.get(i));   // will print each index as it loops }  \n",
    "reg_date": "2021-10-12T12:04:20.000Z"
  },
  {
    "id": 2258,
    "keyword": null,
    "link": null,
    "title": " java arraylist remove",
    "description": "// java program on ArrayList remove(int index) method example import java.util.ArrayList; import java.util.List; public class ArrayListRemoveIndex {    public static void main(String[] args)    {       List<Integer> al = new ArrayList<>();       al.add(56);       al.add(28);       al.add(39);       al.add(59);       al.add(82);       System.out.println(\"Before using ArrayList.remove(int index) method: \" + al);       // removes element 28       al.remove(1);       // element 39 is now moved one position back       // So element 39 is removed       al.remove(1);       System.out.println(\"After using ArrayList.remove(int index) method: \" + al);    } }\n// Java.util.ArrayList.remove(Object) method example import java.util.ArrayList; import java.util.List; public class ArrayListRemoveObjectMethod {    public static void main(String[] args)    {       List<Integer> al = new ArrayList<>();       al.add(56);       al.add(28);       al.add(39);       al.add(59);       al.add(82);       System.out.println(\"Before using ArrayList.remove(Object) method size of ArrayList: \" + al);       // removes element 56       al.remove(new Integer(56));       // removes element 28       al.remove(new Integer(28));       System.out.println(\"After using ArrayList.remove(Object) method size of ArrayList: \" + al);    } }\n//Create the ArrayList List<Integer> al = new ArrayList<>();  //Add the items al.add(10); al.add(18); //Remove item(1 = 2and item in list) al.remove(1); \n//create ArrayList ArrayList<String> arrayList = new ArrayList<String>(); //add item to ArrayList arrayList.add(\"item\"); //check if ArrayList contains item (returns boolean) System.out.println(arrayList.contains(\"item\")); //remove item from ArrayList arrayList.remove(\"item\");\n// Java program to demonstrate working of remove  // on an integer arraylist  import java.util.List;  import java.util.ArrayList;     public class GFG  {      public static void main(String[] args)      {          List<Integer> al = new ArrayList<>();          al.add(10);          al.add(30);          al.add(1);          al.add(2);             // This makes a call to remove(int) and           // removes element 20.          al.remove(1);                     // Now element 30 is moved one position back          // So element 30 is removed this time          al.remove(1);             System.out.println(\"Modified ArrayList : \" + al);      }  } \npublic E remove(int index)\t// returns removed element at index\n",
    "reg_date": "2021-10-12T12:04:20.000Z"
  },
  {
    "id": 2259,
    "keyword": null,
    "link": null,
    "title": " java arraylist to array",
    "description": "new ArrayList<>(Arrays.asList(array));\nString[] arr = list.toArray(new String[list.size()]);\nList<Element> list = Arrays.asList(array);\nList<String> list = new ArrayList<>(); list.add(\"a\"); list.add(\"ab\"); list.add(\"abc\"); list.add(\"abcd\"); // convert String[] array = list.toArray();\nimport java.util.ArrayList; public class ListToArray {    public static void main(String args[]){       ArrayList<String> list = new ArrayList<String>();       list.add(\"Apple\");       list.add(\"Orange\");       list.add(\"Banana\");        System.out.println(\"Contents of list ::\"+list);       String[] myArray = new String[list.size()];       list.toArray(myArray);        for(int i=0; i<myArray.length; i++){          System.out.println(\"Element at the index \"+i+\" is ::\"+myArray[i]);       }    } }\nArrayList<String> ArrayLister=new ArrayList<>(){ArrayLister.add(\"Hi\")}; String[] array=ArrayLister.toArray(String[]); \n",
    "reg_date": "2021-10-12T12:04:20.000Z"
  },
  {
    "id": 2260,
    "keyword": null,
    "link": null,
    "title": " java arraylist to string",
    "description": "ArrayList<String> al = new ArrayList<String>();       al.add(\"Hello\");       al.add(\"Wor\");       al.add(\"ld\");       StringBuffer sb = new StringBuffer();              for (String s : al) {          sb.append(s);          sb.append(\" \");       }       String str = sb.toString();       System.out.println(str);//\"Hello wor ld\" \nnew ArrayList( Arrays.asList( new String[]{\"abc\", \"def\"} ) );\nString listString = String.join(\", \", list); //Java 8 or later\n",
    "reg_date": "2021-10-12T12:04:20.000Z"
  },
  {
    "id": 2261,
    "keyword": null,
    "link": null,
    "title": " java assertions",
    "description": "import org.junit.jupiter.api.Assertions; import org.junit.jupiter.api.Test;  public class AssertionExample {      /**      * The assertionExample function      * uses multiple assertions for the purpose of example;      * Usually in one method it is recommended to have 1 assertion;      */     @Test     public void assertionExample()     {         Assertions.assertEquals(2+2,4);          Assertions.assertNotEquals(6+3,10);          Assertions.assertTrue(\"Radu\".length()==4);          String tester = null;          Assertions.assertThrows(NullPointerException.class,()->tester.equals(\"emptyString\"));     } }\n",
    "reg_date": "2021-10-12T12:04:20.000Z"
  },
  {
    "id": 2262,
    "keyword": null,
    "link": null,
    "title": " java bean",
    "description": "A JavaBean is just a standard  All properties private (use getters/setters) A public no-argument constructor Implements Serializable.\n",
    "reg_date": "2021-10-12T12:04:20.000Z"
  },
  {
    "id": 2263,
    "keyword": null,
    "link": null,
    "title": " java best way to concatenate strings",
    "description": "",
    "reg_date": "2021-10-12T12:04:20.000Z"
  },
  {
    "id": 2264,
    "keyword": null,
    "link": null,
    "title": " java betrag",
    "description": "Math.abs(zahl)\n",
    "reg_date": "2021-10-12T12:04:21.000Z"
  },
  {
    "id": 2265,
    "keyword": null,
    "link": null,
    "title": " java big integer to int",
    "description": "yourInt = yourBigInteger.intValue();\n// Primitive int int myInt = 10 BigInteger bigInt = BigInteger.valueOf(myInt); // Integer object Integer integer = Integer.valueOf(myInt); BigInteger bigInt = BigInteger.valueOf(myInteger.intValue()); bigInt = BigInteger.valueOf(myInteger);\t\t// works too\n",
    "reg_date": "2021-10-12T12:04:21.000Z"
  },
  {
    "id": 2266,
    "keyword": null,
    "link": null,
    "title": " java bigdecimal compareto",
    "description": "package com.tutorialspoint;  import java.math.*;  public class BigDecimalDemo {     public static void main(String[] args) {        // create 2 BigDecimal objects       BigDecimal bg1, bg2;        bg1 = new BigDecimal(\"10\");       bg2 = new BigDecimal(\"20\");        //create int object       int res;        res = bg1.compareTo(bg2); // compare bg1 with bg2        String str1 = \"Both values are equal \";       String str2 = \"First Value is greater \";       String str3 = \"Second value is greater\";        if( res == 0 )          System.out.println( str1 );       else if( res == 1 )          System.out.println( str2 );       else if( res == -1 )          System.out.println( str3 );    } }\n",
    "reg_date": "2021-10-12T12:04:21.000Z"
  },
  {
    "id": 2267,
    "keyword": null,
    "link": null,
    "title": " java biginteger add",
    "description": "import java.math.BigInteger;  BigInteger num1 = new BigInteger(\"someNumber\"); BigInteger num2 = new BigInteger(\"someNumber\");  BigInteger result = num1.add(num);\n",
    "reg_date": "2021-10-12T12:04:21.000Z"
  },
  {
    "id": 2268,
    "keyword": null,
    "link": null,
    "title": " java biginteger multiply",
    "description": "import java.math.BigInteger;  BigInteger num1 = new BigInteger(\"someNumber\"); BigInteger num2 = new BigInteger(\"someNumber\");  BigInteger result = num1.multiply(num);\n",
    "reg_date": "2021-10-12T12:04:21.000Z"
  },
  {
    "id": 2269,
    "keyword": null,
    "link": null,
    "title": " java boilerplate",
    "description": "public static void main(String[] args){    }\n",
    "reg_date": "2021-10-12T12:04:21.000Z"
  },
  {
    "id": 2270,
    "keyword": null,
    "link": null,
    "title": " java boolean 2d array",
    "description": "for(int i = 0; i < rendered.length; i++)     for(int j = 0; j < rendered[i].length; j++)         rendered[i][j] = false; \n",
    "reg_date": "2021-10-12T12:04:21.000Z"
  },
  {
    "id": 2271,
    "keyword": null,
    "link": null,
    "title": " java botton code",
    "description": "public class JButton extends AbstractButton implements Accessible  \n",
    "reg_date": "2021-10-12T12:04:21.000Z"
  },
  {
    "id": 2272,
    "keyword": null,
    "link": null,
    "title": " java break 2 for loops",
    "description": "public class Test {     public static void main(String[] args) {         outerloop:         for (int i=0; i < 5; i++) {             for (int j=0; j < 5; j++) {                 if (i * j > 6) {                     System.out.println(\"Breaking\");                     break outerloop;                 }                 System.out.println(i + \" \" + j);             }         }         System.out.println(\"Done\");     } } \nimport java.io.IOException;  /**  * How to break from nested loop in Java. You can use labeled  * statement with break statement to break from nested loop.  *   * @author WINDOWS 8  */  public class BreakingFromNestedLoop{      public static void main(String args[]) throws IOException {          // this is our outer loop         outer: for (int i = 0; i < 4; i++) {              // this is the inner loop             for (int j = 0; j < 4; j++) {                  // condition to break from nested loop                 if (i * j > 5) {                     System.out.println(\"Breaking from nested loop\");                     break outer;                 }                  System.out.println(i + \" \" + j);             }          }         System.out.println(\"exited\");                                    // better way is to encapsulate nested loop in a method         // and use return to break from outer loop         breakFromNestedLoop();              }          /**      * You can use return statement to return at any point from a method.      * This will help you to break from nested loop as well      */     public static void breakFromNestedLoop(){         for(int i=0; i<6; i++){                          for(int j=0; j<3; j++){                                 int product = i*j;                                  if(product > 4){                     System.out.println(\"breaking from nested loop using return\");                     return;                 }                             }         }         System.out.println(\"Done\");     }  }  Output 0 0 0 1 0 2 0 3 1 0 1 1 1 2 1 3 2 0 2 1 2 2 Breaking from nested loop exited breaking from nested loop using return\nbreak outerloop;\n",
    "reg_date": "2021-10-12T12:04:21.000Z"
  },
  {
    "id": 2273,
    "keyword": null,
    "link": null,
    "title": " java break multiple loops",
    "description": "public class Test {     public static void main(String[] args) {         outerloop:         for (int i=0; i < 5; i++) {             for (int j=0; j < 5; j++) {                 if (i * j > 6) {                     System.out.println(\"Breaking\");                     break outerloop;                 }                 System.out.println(i + \" \" + j);             }         }         System.out.println(\"Done\");     } } \nimport java.io.IOException;  /**  * How to break from nested loop in Java. You can use labeled  * statement with break statement to break from nested loop.  *   * @author WINDOWS 8  */  public class BreakingFromNestedLoop{      public static void main(String args[]) throws IOException {          // this is our outer loop         outer: for (int i = 0; i < 4; i++) {              // this is the inner loop             for (int j = 0; j < 4; j++) {                  // condition to break from nested loop                 if (i * j > 5) {                     System.out.println(\"Breaking from nested loop\");                     break outer;                 }                  System.out.println(i + \" \" + j);             }          }         System.out.println(\"exited\");                                    // better way is to encapsulate nested loop in a method         // and use return to break from outer loop         breakFromNestedLoop();              }          /**      * You can use return statement to return at any point from a method.      * This will help you to break from nested loop as well      */     public static void breakFromNestedLoop(){         for(int i=0; i<6; i++){                          for(int j=0; j<3; j++){                                 int product = i*j;                                  if(product > 4){                     System.out.println(\"breaking from nested loop using return\");                     return;                 }                             }         }         System.out.println(\"Done\");     }  }  Output 0 0 0 1 0 2 0 3 1 0 1 1 1 2 1 3 2 0 2 1 2 2 Breaking from nested loop exited breaking from nested loop using return\nbreak outerloop;\n",
    "reg_date": "2021-10-12T12:04:21.000Z"
  },
  {
    "id": 2274,
    "keyword": null,
    "link": null,
    "title": " java bubble sort",
    "description": "public class BubbleSortExample {       static void bubbleSort(int[] arr) {           int n = arr.length;           int temp = 0;            for(int i=0; i < n; i++){                    for(int j=1; j < (n-i); j++){                             if(arr[j-1] > arr[j]){                                    //swap elements                                    temp = arr[j-1];                                    arr[j-1] = arr[j];                                    arr[j] = temp;                            }                                               }            }      }  \npublic static void bubbleSort(int arr[]) { \tfor (int i = 0; i < arr.length; i++) //number of passes     { \t\t//keeps track of positions per pass           \tfor (int j = 0; j < (arr.length - 1 - i); j++) //Think you can add a -i to remove uneeded comparisons          {           \t//if left value is great than right value          \tif (arr[j] > arr[j + 1])             {               \t//swap values             \tint temp = arr[j];               \tarr[j] = arr[j + 1];               \tarr[j + 1] = temp;              }         }     } }\npublic class DemoBubbleSort {    void bubbleSort(int[] arrNum)    {       int num = arrNum.length;       for(int a = 0; a < num - 1; a++)       {          for(int b = 0; b < num - a - 1; b++)          {             if(arrNum[b] > arrNum[b + 1])             {                int temp = arrNum[b];                arrNum[b] = arrNum[b + 1];                arrNum[b + 1] = temp;             }          }       }    }    void printingArray(int[] arrNum)    {       int number = arrNum.length;       for(int a = 0; a < number; ++a)       {          System.out.print(arrNum[a] + \" \");          System.out.println();       }    }    public static void main(String[] args)    {       DemoBubbleSort bs = new DemoBubbleSort();       int[] arrSort = {65, 35, 25, 15, 23, 14, 95};       bs.bubbleSort(arrSort);       System.out.println(\"After sorting array: \");       bs.printingArray(arrSort);    } }\nfunc Sort(arr []int) []int { \tfor i := 0; i < len(arr)-1; i++ { \t\tfor j := 0; j < len(arr)-i-1; j++ { \t\t\tif arr[j] > arr[j+1] { \t\t\t\ttemp := arr[j] \t\t\t\tarr[j] = arr[j+1] \t\t\t\tarr[j+1] = temp \t\t\t} \t\t} \t} \treturn arr }\n",
    "reg_date": "2021-10-12T12:04:21.000Z"
  },
  {
    "id": 2275,
    "keyword": null,
    "link": null,
    "title": " java bucket sort",
    "description": "public class Main  {    public static int[] bucket_sort(int[] arr, int max_value)      {         int[] bucket = new int[max_value + 1];         int[] sorted_arr = new int[arr.length];           for (int i= 0; i <arr.length; i++)             bucket[arr[i]]++;           int pos = 0;         for (int i = 0; i < bucket.length; i++)             for (int j = 0; j < bucket[i]; j++)                 sorted_arr[pos++] = i;           return sorted_arr;     }         static int maxValue(int[] arr)      {         int max_value = 0;         for (int i = 0; i < arr.length; i++)             if (arr[i] > max_value)                 max_value = arr[i];         return max_value;     }       public static void main(String args[])      {         int[] arr ={80, 50, 30, 10, 90, 60, 0, 70, 40, 20, 50};         int max_value = maxValue(arr);           System.out.print(\"\\nOriginal : \");         System.out.println(Arrays.toString(arr));           System.out.print(\"\\nSorted : \");         System.out.println(Arrays.toString(bucket_sort(arr,max_value)));      } }\npublic static int[] bucketSort(int[] a) {   Queue<Integer>[] buckets = fillBuckets(a);   int[] sorted = readBuckets(buckets);   return sorted; }  public static Queue<Integer>[] fillBuckets(int[] array) {   if(array.length == 0){     Queue<Integer>[] r = new Queue[0];     return r;   }   int vmin = array[0];   int vmax = array[0];   for(int i = 0; i < array.length; i++){     if(array[i] > vmax){       vmax = array[i];     }     if(array[i] < vmin){       vmin = array[i];     }   }   Queue<Integer>[] buckets = new Queue[vmax - vmin + 1];   for(int i = 0; i < buckets.length; i++){     buckets[i] = new LinkedList<Integer>();   }   for(int i = 0; i < array.length; i++){     buckets[array[i] - vmin].add(array[i]);   }   return buckets; }  public static int[] readBuckets(Queue<Integer>[] buckets) {   if(buckets.length == 0){     int[] e = new int[0];     return e;   }   ArrayList<Integer> a = new ArrayList<Integer>();   for(int i = 0 ; i < buckets.length; i++){     while(buckets[i].peek() != null){       a.add(buckets[i].remove());     }   }   int[] result = new int[a.size()];   for(int i = 0; i < a.size(); i++){     result[i] = a.get(i);   }   return result; }\n",
    "reg_date": "2021-10-12T12:04:22.000Z"
  },
  {
    "id": 2276,
    "keyword": null,
    "link": null,
    "title": " java bufferedreader read all lines",
    "description": "line =  buffer.lines().collect(Collectors.joining());\n",
    "reg_date": "2021-10-12T12:04:22.000Z"
  },
  {
    "id": 2277,
    "keyword": null,
    "link": null,
    "title": " java builder pattern example",
    "description": "public class BankAccount {     public static class Builder {         private long accountNumber; //This is important, so we'll pass it to the constructor.         private String owner;         private String branch;         private double balance;         private double interestRate;         public Builder(long accountNumber) {             this.accountNumber = accountNumber;         }         public Builder withOwner(String owner){             this.owner = owner;             return this;  //By returning the builder each time, we can create a fluent interface.         }         public Builder atBranch(String branch){             this.branch = branch;             return this;         }         public Builder openingBalance(double balance){             this.balance = balance;             return this;         }         public Builder atRate(double interestRate){             this.interestRate = interestRate;             return this;         }         public BankAccount build(){             //Here we create the actual bank account object, which is always in a fully initialised state when it's returned.             BankAccount account = new BankAccount();  //Since the builder is in the BankAccount class, we can invoke its private constructor.             account.accountNumber = this.accountNumber;             account.owner = this.owner;             account.branch = this.branch;             account.balance = this.balance;             account.interestRate = this.interestRate;             return account;         }     }     //Fields omitted for brevity.     private BankAccount() {         //Constructor is now private.     }     //Getters and setters omitted for brevity. }  BankAccount account = new BankAccount.Builder(1234L)             .withOwner(\"Marge\")             .atBranch(\"Springfield\")             .openingBalance(100)             .atRate(2.5)             .build(); BankAccount anotherAccount = new BankAccount.Builder(4567L)             .withOwner(\"Homer\")             .atBranch(\"Springfield\")             .openingBalance(100)             .atRate(2.5)             .build();\n",
    "reg_date": "2021-10-12T12:04:22.000Z"
  },
  {
    "id": 2278,
    "keyword": null,
    "link": null,
    "title": " java bukkit double jump",
    "description": "import java.util.ArrayList; import java.util.List;  import org.bukkit.GameMode; import org.bukkit.entity.Player; import org.bukkit.event.EventHandler; import org.bukkit.event.Listener; import org.bukkit.event.player.PlayerJoinEvent; import org.bukkit.event.player.PlayerMoveEvent; import org.bukkit.event.player.PlayerQuitEvent; import org.bukkit.event.player.PlayerToggleFlightEvent;  public class DoubleJump implements Listener {  \tprivate List<Player> doubleJump; \t \tpublic DoubleJump() { \t\tdoubleJump = new ArrayList<>(); \t}  \t@EventHandler \tpublic void onJoin(PlayerJoinEvent event) { \t\tevent.getPlayer().setAllowFlight(true); \t}  \t@EventHandler \tpublic void onQuit(PlayerQuitEvent event) { \t\tdoubleJump.remove(event.getPlayer()); \t}  \t@EventHandler \tpublic void onToggleFlight(PlayerToggleFlightEvent event) { \t\tPlayer player = event.getPlayer(); \t\tGameMode gameMode = player.getGameMode(); \t\t \t\tif(gameMode == GameMode.CREATIVE || gameMode == GameMode.SPECTATOR || player.isFlying()) { \t\t\treturn; \t\t}  \t\tevent.setCancelled(true); \t\tdoubleJump.add(player);  \t\tplayer.setAllowFlight(false); \t\tplayer.setFlying(false); \t\tplayer.setVelocity(player.getLocation().getDirection().multiply(1.5).setY(1)); \t}  \t@EventHandler \tpublic void onHitGround(PlayerMoveEvent event) { \t\tPlayer player = event.getPlayer();  \t\tif ((player.isOnGround() || event.getTo().getBlock().isLiquid()) && doubleJump.remove(player)) { \t\t\tplayer.setAllowFlight(true); \t\t} \t} }\n",
    "reg_date": "2021-10-12T12:04:22.000Z"
  },
  {
    "id": 2279,
    "keyword": null,
    "link": null,
    "title": " java byte array to blob",
    "description": "Blob blob = new javax.sql.rowset.serial.SerialBlob(bytes);\n",
    "reg_date": "2021-10-12T12:04:22.000Z"
  },
  {
    "id": 2280,
    "keyword": null,
    "link": null,
    "title": " java cached enum",
    "description": "private static final YourEnum[] values = values();  public static YourEnum[] getValues() {   return values; }\n",
    "reg_date": "2021-10-12T12:04:22.000Z"
  },
  {
    "id": 2281,
    "keyword": null,
    "link": null,
    "title": " java calculate time difference",
    "description": "public static String getAge(String birthdate) throws ParseException { \t\tLocalDate parsed = LocalDate.parse(\"1970-01-01\"); \t\tLocalDate current = LocalDate.now(); \t\t \t\tPeriod p = Period.between(parsed, current);    \t\t// Returns time between date and now \t\treturn p.getYears() + \" Years, \" + p.getMonths() + \" Months, \" + p.getDays() + \" Days\"; \t}\nYou can use calendar calendarMilis = c.timeInMillis.toInt() - System.currentTimeMillis().toInt()\n",
    "reg_date": "2021-10-12T12:04:22.000Z"
  },
  {
    "id": 2282,
    "keyword": null,
    "link": null,
    "title": " java calculator",
    "description": "import java.util.Scanner; public class Calculator {    public static void main(String[] args) {       double num1;       double num2;       double ans;       char op;       Scanner reader = new Scanner(System.in);       System.out.print(\"Enter two numbers: \");       num1 = reader.nextDouble();       num2 = reader.nextDouble();       System.out.print(\"\\nEnter an operator (+, -, *, /): \");       op = reader.next().charAt(0);       switch(op) {          case '+': ans = num1 + num2;             break;          case '-': ans = num1 - num2;             break;          case '*': ans = num1 * num2;             break;          case '/': ans = num1 / num2;             break;       default: System.out.printf(\"Error! Enter correct operator\");          return;       }       System.out.print(\"\\nThe result is given as follows:\\n\");       System.out.printf(num1 + \" \" + op + \" \" + num2 + \" = \" + ans);    } }\n// this was all coded by me, to use it get Eclipse, or IntelliJ and make a new // Java Project  package javaCode;  import java.util.Scanner;  public class testCode {  \tpublic static void main(String[] args) { \t\t \t\tScanner scan = new Scanner(System.in); \t\t \t\tSystem.out.println(\"Would you like to Add, Subtract, Divide, or Multiply?\"); \t\t \t\tString mathType = scan.next(); \t\t \t\tif (mathType.equalsIgnoreCase(\"add\")) { \t\t\tSystem.out.println(\"Whats the first number you want to add?\"); \t\t\t \t\t\tint firstNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" + \"); \t\t\tSystem.out.println(\"Enter your second number\"); \t\t\t \t\t\tint secondNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" + \" + secondNumber + \" =\"); \t\t\tSystem.out.println(firstNumber + secondNumber); \t\t\t \t\t} else if (mathType.equalsIgnoreCase(\"subtract\")) { \t\t\tSystem.out.println(\"Whats the first number you want to subtract?\"); \t\t\t \t\t\tint firstNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" - \"); \t\t\tSystem.out.println(\"Enter your second number\"); \t\t\t \t\t\tint secondNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" - \" + secondNumber + \" =\"); \t\t\tSystem.out.println(firstNumber - secondNumber); \t\t} else if (mathType.equalsIgnoreCase(\"divide\")) { \t\t\tSystem.out.println(\"Whats the first number you want to divide?\"); \t\t\t \t\t\tint firstNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" % \"); \t\t\tSystem.out.println(\"Enter your second number\"); \t\t\t \t\t\tint secondNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" % \" + secondNumber + \" =\"); \t\t\tSystem.out.println(firstNumber / secondNumber); \t\t} else if (mathType.equalsIgnoreCase(\"multiply\")){ \t\t\tSystem.out.println(\"Whats the first number you want to multiply?\"); \t\t\t \t\t\tint firstNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" x \"); \t\t\tSystem.out.println(\"Enter your second number\"); \t\t\t \t\t\tint secondNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" x \" + secondNumber + \" =\"); \t\t\tSystem.out.println(firstNumber * secondNumber); \t\t} \t\t \t}  }\nSave this file as MyCalculator.java  to compile it use      javac MyCalculator.java  to use the calcuator do this      java MyCalculator    **********************************************/   import java.awt.*;   import java.awt.event.*;   /*********************************************/      public class MyCalculator extends Frame   {      public boolean setClear=true;   double number, memValue;   char op;      String digitButtonText[] = {\"7\", \"8\", \"9\", \"4\", \"5\", \"6\", \"1\", \"2\", \"3\", \"0\", \"+/-\", \".\" };   String operatorButtonText[] = {\"/\", \"sqrt\", \"*\", \"%\", \"-\", \"1/X\", \"+\", \"=\" };   String memoryButtonText[] = {\"MC\", \"MR\", \"MS\", \"M+\" };   String specialButtonText[] = {\"Backspc\", \"C\", \"CE\" };      MyDigitButton digitButton[]=new MyDigitButton[digitButtonText.length];   MyOperatorButton operatorButton[]=new MyOperatorButton[operatorButtonText.length];   MyMemoryButton memoryButton[]=new MyMemoryButton[memoryButtonText.length];   MySpecialButton specialButton[]=new MySpecialButton[specialButtonText.length];      Label displayLabel=new Label(\"0\",Label.RIGHT);   Label memLabel=new Label(\" \",Label.RIGHT);      final int FRAME_WIDTH=325,FRAME_HEIGHT=325;   final int HEIGHT=30, WIDTH=30, H_SPACE=10,V_SPACE=10;   final int TOPX=30, TOPY=50;   ///////////////////////////   MyCalculator(String frameText)//constructor   {   super(frameText);      int tempX=TOPX, y=TOPY;   displayLabel.setBounds(tempX,y,240,HEIGHT);   displayLabel.setBackground(Color.BLUE);   displayLabel.setForeground(Color.WHITE);   add(displayLabel);      memLabel.setBounds(TOPX,  TOPY+HEIGHT+ V_SPACE,WIDTH, HEIGHT);   add(memLabel);      // set Co-ordinates for Memory Buttons   tempX=TOPX;    y=TOPY+2*(HEIGHT+V_SPACE);   for(int i=0; i<memoryButton.length; i++)   {   memoryButton[i]=new MyMemoryButton(tempX,y,WIDTH,HEIGHT,memoryButtonText[i], this);   memoryButton[i].setForeground(Color.RED);   y+=HEIGHT+V_SPACE;   }      //set Co-ordinates for Special Buttons   tempX=TOPX+1*(WIDTH+H_SPACE); y=TOPY+1*(HEIGHT+V_SPACE);   for(int i=0;i<specialButton.length;i++)   {   specialButton[i]=new MySpecialButton(tempX,y,WIDTH*2,HEIGHT,specialButtonText[i], this);   specialButton[i].setForeground(Color.RED);   tempX=tempX+2*WIDTH+H_SPACE;   }      //set Co-ordinates for Digit Buttons   int digitX=TOPX+WIDTH+H_SPACE;   int digitY=TOPY+2*(HEIGHT+V_SPACE);   tempX=digitX;  y=digitY;   for(int i=0;i<digitButton.length;i++)   {   digitButton[i]=new MyDigitButton(tempX,y,WIDTH,HEIGHT,digitButtonText[i], this);   digitButton[i].setForeground(Color.BLUE);   tempX+=WIDTH+H_SPACE;   if((i+1)%3==0){tempX=digitX; y+=HEIGHT+V_SPACE;}   }      //set Co-ordinates for Operator Buttons   int opsX=digitX+2*(WIDTH+H_SPACE)+H_SPACE;   int opsY=digitY;   tempX=opsX;  y=opsY;   for(int i=0;i<operatorButton.length;i++)   {   tempX+=WIDTH+H_SPACE;   operatorButton[i]=new MyOperatorButton(tempX,y,WIDTH,HEIGHT,operatorButtonText[i], this);   operatorButton[i].setForeground(Color.RED);   if((i+1)%2==0){tempX=opsX; y+=HEIGHT+V_SPACE;}   }      addWindowListener(new WindowAdapter()   {   public void windowClosing(WindowEvent ev)   {System.exit(0);}   });      setLayout(null);   setSize(FRAME_WIDTH,FRAME_HEIGHT);   setVisible(true);   }   //////////////////////////////////   static String getFormattedText(double temp)   {   String resText=\"\"+temp;   if(resText.lastIndexOf(\".0\")>0)       resText=resText.substring(0,resText.length()-2);   return resText;  \npackage main;  import java.util.Scanner;  public class calculator {      public static void greetings(){         System.out.println(\"Hi welcome to the calculator made by Pepa pig made in java! :D\");     }      public static void instruction(){         System.out.println(\"Hi welcome to the calculator made by Pepa pig made in java! :D\");     }      public static void calculator(){         Scanner keyboardInput = new Scanner(System.in);         String calculator;          do {             System.out.print(\"Enter your first digit: \");             double num1 = keyboardInput.nextDouble();              System.out.print(\"Enter your operator: \");             String op = keyboardInput.next();              System.out.print(\"Enter your second digit: \");             double num2 = keyboardInput.nextDouble();              System.out.print(\"= \");              if (op.equals(\"+\")){                 System.out.print(num1 + num2);                 System.out.println(\"\\nYou were adding\");                 System.out.println(\"How I know that cause I have big brain and a smart programmer ;)\");             }else if (op.equals(\"-\")){                 System.out.print(num1 - num2);                 System.out.println(\"\\nYou were subtracting\");                 System.out.println(\"How I know that cause I have big brain and a smart programmer ;)\");             }else if (op.equals(\"*\")){                 System.out.print(num1 * num2);                 System.out.println(\"\\nYou were multiplying\");                 System.out.println(\"How I know that cause I have big brain and a smart programmer ;)\");             }else if (op.equals(\"/\")){                 System.out.print(num1 / num2);                 System.out.println(\"\\nYou were dividing\");                 System.out.println(\"How I know that cause I have big brain and a smart programmer ;)\");             }else if (op.equals(\"%\")){                 System.out.print(num1 % num2);                 System.out.println(\"\\nYou were remanding\");                 System.out.println(\"How I know that cause I have big brain and a smart programmer ;)\");             }else{                 System.out.println(\"Invalid operator\");             }             System.out.print(\"Would you like to restart the calculator? (y or n): \");             calculator = keyboardInput.next();         }         while (calculator.equals(\"y\"));          if (calculator.equals(\"n\")){             System.out.println(\"Leave then kiddo ;-;\");         }     }       public static void main(String[] args) {         greetings();         instruction();         calculator();     } }\nimport java.util.Scanner;  class Main {   public static void main(String[] args) {      char operator;     Double number1, number2, result;      // create an object of Scanner class     Scanner input = new Scanner(System.in);      // ask users to enter operator     System.out.println(\"Choose an operator: +, -, *, or /\");     operator = input.next().charAt(0);      // ask users to enter numbers     System.out.println(\"Enter first number\");     number1 = input.nextDouble();      System.out.println(\"Enter second number\");     number2 = input.nextDouble();      switch (operator) {        // performs addition between numbers       case '+':         result = number1 + number2;         System.out.println(number1 + \" + \" + number2 + \" = \" + result);         break;        // performs subtraction between numbers       case '-':         result = number1 - number2;         System.out.println(number1 + \" - \" + number2 + \" = \" + result);         break;        // performs multiplication between numbers       case '*':         result = number1 * number2;         System.out.println(number1 + \" * \" + number2 + \" = \" + result);         break;        // performs division between numbers       case '/':         result = number1 / number2;         System.out.println(number1 + \" / \" + number2 + \" = \" + result);         break;        default:         System.out.println(\"Invalid operator!\");         break;     }      input.close();   } }\nimport java.util.Scanner;  public class CalculoIVE {  \tpublic static void main(String[] args) { \t\tScanner teclado = new Scanner(System.in); \t\t \t\t//D \t\t \t\tdouble prezo = 0; \t\tdouble ive = 0; \t\tdouble pfinal = 0; \t\t \t\t//E \t\t \t\tSystem.out.println(\"Introduza prezo sen IVE (&euro;) : \"); \t\t\tprezo = teclado.nextDouble(); \t\t \t\tSystem.out.println(\"Introduza IVE (%) : \"); \t\t\tive = teclado.nextDouble(); \t\t \t\t//P \t\t \t\tpfinal = prezo * (1 + (ive / 100)); \t\t \t\t//S \t\t \t\tSystem.out.println(\"Importe con IVE = \" + pfinal + \"&euro;\");  \t}  }\n",
    "reg_date": "2021-10-12T12:04:22.000Z"
  },
  {
    "id": 2283,
    "keyword": null,
    "link": null,
    "title": " java calculator code",
    "description": "import java.util.Scanner; public class Calculator {    public static void main(String[] args) {       double num1;       double num2;       double ans;       char op;       Scanner reader = new Scanner(System.in);       System.out.print(\"Enter two numbers: \");       num1 = reader.nextDouble();       num2 = reader.nextDouble();       System.out.print(\"\\nEnter an operator (+, -, *, /): \");       op = reader.next().charAt(0);       switch(op) {          case '+': ans = num1 + num2;             break;          case '-': ans = num1 - num2;             break;          case '*': ans = num1 * num2;             break;          case '/': ans = num1 / num2;             break;       default: System.out.printf(\"Error! Enter correct operator\");          return;       }       System.out.print(\"\\nThe result is given as follows:\\n\");       System.out.printf(num1 + \" \" + op + \" \" + num2 + \" = \" + ans);    } }\n// this was all coded by me, to use it get Eclipse, or IntelliJ and make a new // Java Project  package javaCode;  import java.util.Scanner;  public class testCode {  \tpublic static void main(String[] args) { \t\t \t\tScanner scan = new Scanner(System.in); \t\t \t\tSystem.out.println(\"Would you like to Add, Subtract, Divide, or Multiply?\"); \t\t \t\tString mathType = scan.next(); \t\t \t\tif (mathType.equalsIgnoreCase(\"add\")) { \t\t\tSystem.out.println(\"Whats the first number you want to add?\"); \t\t\t \t\t\tint firstNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" + \"); \t\t\tSystem.out.println(\"Enter your second number\"); \t\t\t \t\t\tint secondNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" + \" + secondNumber + \" =\"); \t\t\tSystem.out.println(firstNumber + secondNumber); \t\t\t \t\t} else if (mathType.equalsIgnoreCase(\"subtract\")) { \t\t\tSystem.out.println(\"Whats the first number you want to subtract?\"); \t\t\t \t\t\tint firstNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" - \"); \t\t\tSystem.out.println(\"Enter your second number\"); \t\t\t \t\t\tint secondNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" - \" + secondNumber + \" =\"); \t\t\tSystem.out.println(firstNumber - secondNumber); \t\t} else if (mathType.equalsIgnoreCase(\"divide\")) { \t\t\tSystem.out.println(\"Whats the first number you want to divide?\"); \t\t\t \t\t\tint firstNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" % \"); \t\t\tSystem.out.println(\"Enter your second number\"); \t\t\t \t\t\tint secondNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" % \" + secondNumber + \" =\"); \t\t\tSystem.out.println(firstNumber / secondNumber); \t\t} else if (mathType.equalsIgnoreCase(\"multiply\")){ \t\t\tSystem.out.println(\"Whats the first number you want to multiply?\"); \t\t\t \t\t\tint firstNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" x \"); \t\t\tSystem.out.println(\"Enter your second number\"); \t\t\t \t\t\tint secondNumber = scan.nextInt(); \t\t\t \t\t\tSystem.out.println(firstNumber + \" x \" + secondNumber + \" =\"); \t\t\tSystem.out.println(firstNumber * secondNumber); \t\t} \t\t \t}  }\nSave this file as MyCalculator.java  to compile it use      javac MyCalculator.java  to use the calcuator do this      java MyCalculator    **********************************************/   import java.awt.*;   import java.awt.event.*;   /*********************************************/      public class MyCalculator extends Frame   {      public boolean setClear=true;   double number, memValue;   char op;      String digitButtonText[] = {\"7\", \"8\", \"9\", \"4\", \"5\", \"6\", \"1\", \"2\", \"3\", \"0\", \"+/-\", \".\" };   String operatorButtonText[] = {\"/\", \"sqrt\", \"*\", \"%\", \"-\", \"1/X\", \"+\", \"=\" };   String memoryButtonText[] = {\"MC\", \"MR\", \"MS\", \"M+\" };   String specialButtonText[] = {\"Backspc\", \"C\", \"CE\" };      MyDigitButton digitButton[]=new MyDigitButton[digitButtonText.length];   MyOperatorButton operatorButton[]=new MyOperatorButton[operatorButtonText.length];   MyMemoryButton memoryButton[]=new MyMemoryButton[memoryButtonText.length];   MySpecialButton specialButton[]=new MySpecialButton[specialButtonText.length];      Label displayLabel=new Label(\"0\",Label.RIGHT);   Label memLabel=new Label(\" \",Label.RIGHT);      final int FRAME_WIDTH=325,FRAME_HEIGHT=325;   final int HEIGHT=30, WIDTH=30, H_SPACE=10,V_SPACE=10;   final int TOPX=30, TOPY=50;   ///////////////////////////   MyCalculator(String frameText)//constructor   {   super(frameText);      int tempX=TOPX, y=TOPY;   displayLabel.setBounds(tempX,y,240,HEIGHT);   displayLabel.setBackground(Color.BLUE);   displayLabel.setForeground(Color.WHITE);   add(displayLabel);      memLabel.setBounds(TOPX,  TOPY+HEIGHT+ V_SPACE,WIDTH, HEIGHT);   add(memLabel);      // set Co-ordinates for Memory Buttons   tempX=TOPX;    y=TOPY+2*(HEIGHT+V_SPACE);   for(int i=0; i<memoryButton.length; i++)   {   memoryButton[i]=new MyMemoryButton(tempX,y,WIDTH,HEIGHT,memoryButtonText[i], this);   memoryButton[i].setForeground(Color.RED);   y+=HEIGHT+V_SPACE;   }      //set Co-ordinates for Special Buttons   tempX=TOPX+1*(WIDTH+H_SPACE); y=TOPY+1*(HEIGHT+V_SPACE);   for(int i=0;i<specialButton.length;i++)   {   specialButton[i]=new MySpecialButton(tempX,y,WIDTH*2,HEIGHT,specialButtonText[i], this);   specialButton[i].setForeground(Color.RED);   tempX=tempX+2*WIDTH+H_SPACE;   }      //set Co-ordinates for Digit Buttons   int digitX=TOPX+WIDTH+H_SPACE;   int digitY=TOPY+2*(HEIGHT+V_SPACE);   tempX=digitX;  y=digitY;   for(int i=0;i<digitButton.length;i++)   {   digitButton[i]=new MyDigitButton(tempX,y,WIDTH,HEIGHT,digitButtonText[i], this);   digitButton[i].setForeground(Color.BLUE);   tempX+=WIDTH+H_SPACE;   if((i+1)%3==0){tempX=digitX; y+=HEIGHT+V_SPACE;}   }      //set Co-ordinates for Operator Buttons   int opsX=digitX+2*(WIDTH+H_SPACE)+H_SPACE;   int opsY=digitY;   tempX=opsX;  y=opsY;   for(int i=0;i<operatorButton.length;i++)   {   tempX+=WIDTH+H_SPACE;   operatorButton[i]=new MyOperatorButton(tempX,y,WIDTH,HEIGHT,operatorButtonText[i], this);   operatorButton[i].setForeground(Color.RED);   if((i+1)%2==0){tempX=opsX; y+=HEIGHT+V_SPACE;}   }      addWindowListener(new WindowAdapter()   {   public void windowClosing(WindowEvent ev)   {System.exit(0);}   });      setLayout(null);   setSize(FRAME_WIDTH,FRAME_HEIGHT);   setVisible(true);   }   //////////////////////////////////   static String getFormattedText(double temp)   {   String resText=\"\"+temp;   if(resText.lastIndexOf(\".0\")>0)       resText=resText.substring(0,resText.length()-2);   return resText;  \npackage main;  import java.util.Scanner;  public class calculator {      public static void greetings(){         System.out.println(\"Hi welcome to the calculator made by Pepa pig made in java! :D\");     }      public static void instruction(){         System.out.println(\"Hi welcome to the calculator made by Pepa pig made in java! :D\");     }      public static void calculator(){         Scanner keyboardInput = new Scanner(System.in);         String calculator;          do {             System.out.print(\"Enter your first digit: \");             double num1 = keyboardInput.nextDouble();              System.out.print(\"Enter your operator: \");             String op = keyboardInput.next();              System.out.print(\"Enter your second digit: \");             double num2 = keyboardInput.nextDouble();              System.out.print(\"= \");              if (op.equals(\"+\")){                 System.out.print(num1 + num2);                 System.out.println(\"\\nYou were adding\");                 System.out.println(\"How I know that cause I have big brain and a smart programmer ;)\");             }else if (op.equals(\"-\")){                 System.out.print(num1 - num2);                 System.out.println(\"\\nYou were subtracting\");                 System.out.println(\"How I know that cause I have big brain and a smart programmer ;)\");             }else if (op.equals(\"*\")){                 System.out.print(num1 * num2);                 System.out.println(\"\\nYou were multiplying\");                 System.out.println(\"How I know that cause I have big brain and a smart programmer ;)\");             }else if (op.equals(\"/\")){                 System.out.print(num1 / num2);                 System.out.println(\"\\nYou were dividing\");                 System.out.println(\"How I know that cause I have big brain and a smart programmer ;)\");             }else if (op.equals(\"%\")){                 System.out.print(num1 % num2);                 System.out.println(\"\\nYou were remanding\");                 System.out.println(\"How I know that cause I have big brain and a smart programmer ;)\");             }else{                 System.out.println(\"Invalid operator\");             }             System.out.print(\"Would you like to restart the calculator? (y or n): \");             calculator = keyboardInput.next();         }         while (calculator.equals(\"y\"));          if (calculator.equals(\"n\")){             System.out.println(\"Leave then kiddo ;-;\");         }     }       public static void main(String[] args) {         greetings();         instruction();         calculator();     } }\nimport java.util.Scanner;  class Main {   public static void main(String[] args) {      char operator;     Double number1, number2, result;      // create an object of Scanner class     Scanner input = new Scanner(System.in);      // ask users to enter operator     System.out.println(\"Choose an operator: +, -, *, or /\");     operator = input.next().charAt(0);      // ask users to enter numbers     System.out.println(\"Enter first number\");     number1 = input.nextDouble();      System.out.println(\"Enter second number\");     number2 = input.nextDouble();      switch (operator) {        // performs addition between numbers       case '+':         result = number1 + number2;         System.out.println(number1 + \" + \" + number2 + \" = \" + result);         break;        // performs subtraction between numbers       case '-':         result = number1 - number2;         System.out.println(number1 + \" - \" + number2 + \" = \" + result);         break;        // performs multiplication between numbers       case '*':         result = number1 * number2;         System.out.println(number1 + \" * \" + number2 + \" = \" + result);         break;        // performs division between numbers       case '/':         result = number1 / number2;         System.out.println(number1 + \" / \" + number2 + \" = \" + result);         break;        default:         System.out.println(\"Invalid operator!\");         break;     }      input.close();   } }\n",
    "reg_date": "2021-10-12T12:04:22.000Z"
  },
  {
    "id": 2284,
    "keyword": null,
    "link": null,
    "title": " java calendar add minutes",
    "description": " String myTime = \"14:10\";  SimpleDateFormat df = new SimpleDateFormat(\"HH:mm\");  Date d = df.parse(myTime);   Calendar cal = Calendar.getInstance();  cal.setTime(d);  cal.add(Calendar.MINUTE, 10);  String newTime = df.format(cal.getTime());\n",
    "reg_date": "2021-10-12T12:04:23.000Z"
  },
  {
    "id": 2285,
    "keyword": null,
    "link": null,
    "title": " java calendar class format",
    "description": "SimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy/MM/dd HH:mm:ss\"); Date date = new Date(); System.out.println(dateFormat.format(date)); //2013/10/15 16:16:39\n",
    "reg_date": "2021-10-12T12:04:23.000Z"
  },
  {
    "id": 2286,
    "keyword": null,
    "link": null,
    "title": " java calendar hour vs hour of day",
    "description": "// Calendar.HOUR -> 12 Hour Clock // Calendar.HOUS_OF_DAY -> 24 Hour Clock (0-23, inclusive)\n",
    "reg_date": "2021-10-12T12:04:23.000Z"
  },
  {
    "id": 2287,
    "keyword": null,
    "link": null,
    "title": " java calendar set date",
    "description": "package com.tutorialspoint;  import java.util.Calendar;  public class CalendarDemo {    public static void main(String[] args) {        // create a calendar       Calendar cal = Calendar.getInstance();        // print current time       System.out.println(\"Current year is :\" + cal.getTime());        // set the year,month and day to something else       cal.set(1995, 5, 25);        // print the result       System.out.println(\"Altered year is :\" + cal.getTime());     } }\n",
    "reg_date": "2021-10-12T12:04:23.000Z"
  },
  {
    "id": 2288,
    "keyword": null,
    "link": null,
    "title": " java call another constructor",
    "description": "public class Foo {     private int x;      public Foo() {         this(1);     }      public Foo(int x) {         this.x = x;     } }\n",
    "reg_date": "2021-10-12T12:04:23.000Z"
  },
  {
    "id": 2289,
    "keyword": null,
    "link": null,
    "title": " java call method from another class example",
    "description": "public class method{   public static void sayHello(){     System.out.println(\"Hello World\");   } } public class app{   public static void main(String[] args){     method m = new method(); // Creating an instance from our class     m.sayHello(); // using the class methods by the instance we created.   } }\n1_ you should first create an instance from this class. 2_ once you create one, you use it for calling the class methods.\nclass A {         public void a1 ( ) {      }        private void a2 ( ) {      }  }    class B {        private A objA = new A ( );        public void b1 ( ) {          // Call to method a1. This works.          objA.a1 ();      }        void b2 ( ) {          // Call to method a2. This will give compile error.          objA.a2 ();      }  } \npublic class Alpha {      public void DoSomethingAlpha() {           Beta cbeta = new Beta();           cbeta.DoSomethingBeta();  //?      } } \npublic class Alpha extends Beta{      public void DoSomethingAlpha() {           DoSomethingBeta();  //?      } } \nBeta.DoSomethingBeta(); \n",
    "reg_date": "2021-10-12T12:04:23.000Z"
  },
  {
    "id": 2290,
    "keyword": null,
    "link": null,
    "title": " java callbacks",
    "description": "interface CallBack {                   //declare an interface with the callback methods, so you can use on more than one class and just refer to the interface     void methodToCallBack(); }  class CallBackImpl implements CallBack {          //class that implements the method to callback defined in the interface     public void methodToCallBack() {         System.out.println(\"I've been called back\");     } }  class Caller {      public void register(CallBack callback) {         callback.methodToCallBack();     }      public static void main(String[] args) {         Caller caller = new Caller();         CallBack callBack = new CallBackImpl();       //because of the interface, the type is Callback even thought the new instance is the CallBackImpl class. This alows to pass different types of classes that have the implementation of CallBack interface         caller.register(callBack);     } }  \n",
    "reg_date": "2021-10-12T12:04:23.000Z"
  },
  {
    "id": 2291,
    "keyword": null,
    "link": null,
    "title": " java cartesian to polar",
    "description": "public static double[] pol(double x, double y) { \t//return new double[]{Math.sqrt(x * x + y * y), Math.atan2(y, x)}; //red \treturn new double[]{Math.sqrt(x * x + y * y), (Math.atan2(y, x) * 180) / Math.PI}; //cart }\n",
    "reg_date": "2021-10-12T12:04:23.000Z"
  },
  {
    "id": 2292,
    "keyword": null,
    "link": null,
    "title": " java cast bolean to int",
    "description": "int result = myBooleanVar ? 1 : 0;\n",
    "reg_date": "2021-10-12T12:04:23.000Z"
  },
  {
    "id": 2293,
    "keyword": null,
    "link": null,
    "title": " java cast duration to long",
    "description": "Duration d = Duration.ofHours(1); \t// 1 hour with java.time long millis = d.toMillis();\t\t\t// 1 hour in milliseconds\n",
    "reg_date": "2021-10-12T12:04:23.000Z"
  },
  {
    "id": 2294,
    "keyword": null,
    "link": null,
    "title": " java cast int to boolean",
    "description": "boolean result = (myBinaryInt == 1); boolean result2 = (myNonBinaryInt >= 1);\n",
    "reg_date": "2021-10-12T12:04:24.000Z"
  },
  {
    "id": 2295,
    "keyword": null,
    "link": null,
    "title": " java cast int to string",
    "description": "int x = 3;  Integer.toString(int) \nString s = String.ValueOf(x); //converts a int x to a String s  //or  String s = Integer(x).toString();\t//converts a int x to a String s\nint i=10;   String s=String.valueOf(i);\nint i = 1234;  String s = String.ValueOf(i)\nint x = 3;  String stringX = Integer.toString(x);\nint i=10;   String s=String.valueOf(i);//Now it will return \"10\"  \n",
    "reg_date": "2021-10-12T12:04:24.000Z"
  },
  {
    "id": 2296,
    "keyword": null,
    "link": null,
    "title": " java casting to int",
    "description": "//In java, you can cast to any primitive type by putting (primitiveType) //before whatever you're casting to.  private static int myInt = (int)myDouble;\n",
    "reg_date": "2021-10-12T12:04:24.000Z"
  },
  {
    "id": 2297,
    "keyword": null,
    "link": null,
    "title": " java catch multiple exceptions",
    "description": "// Before java 7 - syntax Java catch multiple exceptions and rethrow exception try {    // code that throw exceptions 1 and 3 } catch(SQLException e) {    logger.log(e); } catch(IOException e) {    logger.log(e); } catch(Exception e) {    logger.severe(e); }\n catch(IOException | SQLException ex){      logger.error(ex);      throw new MyException(ex.getMessage()); } \npublic class MyClass implements MyInterface {   public void find(int x) throws A_Exception, B_Exception{     ----     ----     ---   } }\n// syntax in java 7 Java catch multiple exceptions and rethrow exception try {    // code that throw exceptions 1 and 3 } catch(SQLException | IOException e) {    logger.log(e); } catch(Exception e) {    logger.severe(e); }\nFrom Java 7, we can catch more than one exception with single catch block.  This type of handling reduces the code duplication.  When we catch more than one exception in single catch block ,  catch parameter is implicity final. We cannot assign any value to catch  parameter.  Ex : catch(ArrayIndexOutOfBoundsException || ArithmeticException e){ 20 }  In the example e is final we cannot assign any value or  modify e in catch statement\n",
    "reg_date": "2021-10-12T12:04:24.000Z"
  },
  {
    "id": 2298,
    "keyword": null,
    "link": null,
    "title": " java ceil",
    "description": "double num = 4.333;  int round_up = Math.ceil(num); //round up //Console will return: round_up will be 5  int round_down = Math.floor(num); //round down //Console will return: round_up will be 4 \nimport java.lang.Math; Math.ceil(a);\n",
    "reg_date": "2021-10-12T12:04:24.000Z"
  },
  {
    "id": 2299,
    "keyword": null,
    "link": null,
    "title": " java char array to string",
    "description": "String str = \"example\"; char[] ch = str.toCharArray(); \nchar[] a = {'h', 'e', 'l', 'l', 'o', ' ', 'w', 'o', 'r', 'l', 'd'}; String str = new String(a);\nchar[] arr = { 'p',\" \",'q', 'r', 's' };       String str = String.valueOf(arr);       System.out.println(str);//\"p qrs\"\n// java convert array of char to string public class CharArrayToString {    public static void main(String[] args)    {       char[] charArray = new char[]{'F','l','o','w','e','r','B','r','a','c','k','e','t','s'};       String str = new String(charArray);       System.out.println(str);    } }\nString string = String.valueOf(a); \n    final char[] charArray = { 'g','e','e','k','s','f','o','r','g','e','e','k','s' };     String string = new String(charArray);  \tSystem.out.println(string);  \t// -> \"geeksforgeeks\"\n",
    "reg_date": "2021-10-12T12:04:24.000Z"
  },
  {
    "id": 2300,
    "keyword": null,
    "link": null,
    "title": " java character for end of file",
    "description": "String iHaveAnEof = \"file ends here\\u001a\"; \n",
    "reg_date": "2021-10-12T12:04:24.000Z"
  },
  {
    "id": 2301,
    "keyword": null,
    "link": null,
    "title": " java chararray to int",
    "description": "char[] digits = { '1', '2', '3' }; int number = Integer.parseInt(new String(digits));\n",
    "reg_date": "2021-10-12T12:04:24.000Z"
  },
  {
    "id": 2302,
    "keyword": null,
    "link": null,
    "title": " java cheat sheet",
    "description": "Best Java Cheat Sheet: https://introcs.cs.princeton.edu/java/11cheatsheet/\n",
    "reg_date": "2021-10-12T12:04:24.000Z"
  },
  {
    "id": 2303,
    "keyword": null,
    "link": null,
    "title": " java check data type",
    "description": "a.getClass().getName() \n",
    "reg_date": "2021-10-12T12:04:24.000Z"
  },
  {
    "id": 2304,
    "keyword": null,
    "link": null,
    "title": " java check for string length",
    "description": "String data = \"Hello, World!\"; int nameLength = data.length(); // 13\n",
    "reg_date": "2021-10-12T12:04:25.000Z"
  },
  {
    "id": 2305,
    "keyword": null,
    "link": null,
    "title": " java check if able to parse int",
    "description": "public static boolean isParsable(String input) {     try {         Integer.parseInt(input);         return true;     } catch (final NumberFormatException e) {         return false;     } }\n",
    "reg_date": "2021-10-12T12:04:25.000Z"
  },
  {
    "id": 2306,
    "keyword": null,
    "link": null,
    "title": " java check if args is empty",
    "description": "if (args.length == 0)   //check }//if (no argument passed as input)\n",
    "reg_date": "2021-10-12T12:04:25.000Z"
  },
  {
    "id": 2307,
    "keyword": null,
    "link": null,
    "title": " java check if class is subclass",
    "description": "subclass instanceof superclass\nboolean is_subclass = Superclass.class.isAssignableFrom(Subclass.class); // example: // List.class.isAssignableFrom(LinkedList.class) is true // List.class.isAssignableFrom(HashMap.class) is false\n",
    "reg_date": "2021-10-12T12:04:25.000Z"
  },
  {
    "id": 2308,
    "keyword": null,
    "link": null,
    "title": " java check if directory exists",
    "description": "Path path = ...;  if (Files.exists(path)) {     // ... }\n",
    "reg_date": "2021-10-12T12:04:25.000Z"
  },
  {
    "id": 2309,
    "keyword": null,
    "link": null,
    "title": " java check if divisible",
    "description": "int divisiblenumber = 6;   if(divisiblenumber % 2 == 0);     print(\"success\")\n",
    "reg_date": "2021-10-12T12:04:25.000Z"
  },
  {
    "id": 2310,
    "keyword": null,
    "link": null,
    "title": " java check if file exists",
    "description": "File tempFile = new File(\"c:/temp/temp.txt\"); boolean exists = tempFile.exists();\nimport java.io.File;  File tmpDir = new File(\"/var/tmp\"); boolean exists = tmpDir.exists();\n",
    "reg_date": "2021-10-12T12:04:25.000Z"
  },
  {
    "id": 2311,
    "keyword": null,
    "link": null,
    "title": " java check if instance of subclass",
    "description": "subclass instanceof superclass\nboolean is_subclass = Superclass.class.isAssignableFrom(Subclass.class); // example: // List.class.isAssignableFrom(LinkedList.class) is true // List.class.isAssignableFrom(HashMap.class) is false\n",
    "reg_date": "2021-10-12T12:04:25.000Z"
  },
  {
    "id": 2312,
    "keyword": null,
    "link": null,
    "title": " java check if int",
    "description": "public static boolean isInt(String str) { \t   \ttry {       \t@SuppressWarnings(\"unused\")     \tint x = Integer.parseInt(str);       \treturn true; //String is an Integer \t} catch (NumberFormatException e) {     \treturn false; //String is not an Integer \t}   \t }\nif(x == (int)x){  println(\"x is an integer\"); }\n//\"% (modulo)\" calulates the remainder when the value on the left is divided by the value on the right  float number = 20;  if(number%1 == 0){ \tprintln(\"It is an integer\"); } else { \tprintln(\"It is not an integer\"); }\n",
    "reg_date": "2021-10-12T12:04:25.000Z"
  },
  {
    "id": 2313,
    "keyword": null,
    "link": null,
    "title": " java check if int is null",
    "description": "An int is not null, it may be 0 if not initialized.  If you want an integer to be able to be null, you need to use Integer instead of int.  Integer id; String name;  public Integer getId() { return id; } Besides the statement if(person.equals(null)) can't be true, because if person is null, then a NullPointerException will be thrown. So the correct expression is if (person == null)\n",
    "reg_date": "2021-10-12T12:04:25.000Z"
  },
  {
    "id": 2314,
    "keyword": null,
    "link": null,
    "title": " java check if sql table exists",
    "description": "DatabaseMetaData dbm = con.getMetaData(); // check if \"employee\" table is there ResultSet tables = dbm.getTables(null, null, \"employee\", null); if (tables.next()) {   // Table exists } else {   // Table does not exist }\n",
    "reg_date": "2021-10-12T12:04:25.000Z"
  },
  {
    "id": 2315,
    "keyword": null,
    "link": null,
    "title": " java check if thread is running",
    "description": "Thread.isAlive()\n",
    "reg_date": "2021-10-12T12:04:26.000Z"
  },
  {
    "id": 2316,
    "keyword": null,
    "link": null,
    "title": " java check if variable is set",
    "description": "if (x == 0) { // only allow setting if x has its initial value     x = somenewvalue; }\n",
    "reg_date": "2021-10-12T12:04:26.000Z"
  },
  {
    "id": 2317,
    "keyword": null,
    "link": null,
    "title": " java check ipv6 with regex",
    "description": "String pattern = \"([01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\";\nString pattern_ipv6 = \"(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\"; if(Pattern.matches(pattern_ipv6, ipAddress)) {   return true; }\npublic static boolean isIP(String ip)  {     Pattern p = Pattern.compile(\"(([01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\\\\.){3}([01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\");     Matcher m = p.matcher(ip);     return m.matches(); }\n",
    "reg_date": "2021-10-12T12:04:26.000Z"
  },
  {
    "id": 2318,
    "keyword": null,
    "link": null,
    "title": " java check palindrome with string builder",
    "description": "public static boolean isPalindrome(String str){       StringBuilder sb=new StringBuilder(str);       sb.reverse();       String rev=sb.toString();       if(str.equals(rev)){           return true;       }else{           return false;       }   }  \n//This function generates a palindrom by recursively reversing a String, //recursively add it and checks if it's a palindrom  public static String generatePalindrom(String s) { \treturn s.equals(reverseString(s)) ? s \t\t\t\t: generatePalindrom(String.valueOf(Integer.parseInt(s) + Integer.parseInt(reverseString(s)))); }  public static String reverseString(String s) { \treturn s.length() == 1 ? s : s.charAt(s.length() - 1) + reverseString(s.substring(0, s.length() - 1)); }\n",
    "reg_date": "2021-10-12T12:04:26.000Z"
  },
  {
    "id": 2319,
    "keyword": null,
    "link": null,
    "title": " java check string contains uppercase character",
    "description": "public boolean containsUpperCaseLetter(String s){ \tfor(int i=0;i<s.length();i++){     \tif(Character.isUpperCase(s.charAt(i))){         \treturn true;         }     } \treturn false; }\nyourString.chars().anyMatch(Character::isUpperCase)\n",
    "reg_date": "2021-10-12T12:04:26.000Z"
  },
  {
    "id": 2320,
    "keyword": null,
    "link": null,
    "title": " java check two dates same day",
    "description": "public static boolean isSameDay(Date date1, Date date2) {     SimpleDateFormat fmt = new SimpleDateFormat(\"yyyyMMdd\");     return fmt.format(date1).equals(fmt.format(date2)); }\npublic static boolean isSameDay(Date date1, Date date2) {     Calendar calendar1 = Calendar.getInstance();     calendar1.setTime(date1);     Calendar calendar2 = Calendar.getInstance();     calendar2.setTime(date2);     return calendar1.get(Calendar.YEAR) == calendar2.get(Calendar.YEAR)       && calendar1.get(Calendar.MONTH) == calendar2.get(Calendar.MONTH)       && calendar1.get(Calendar.DAY_OF_MONTH) == calendar2.get(Calendar.DAY_OF_MONTH); }\n",
    "reg_date": "2021-10-12T12:04:26.000Z"
  },
  {
    "id": 2321,
    "keyword": null,
    "link": null,
    "title": " java checking for null",
    "description": "Objects.isNull(obj) //returns true if the object is null  Objects.nonNull(obj) //returns true if object is not-null  if(Objects.nonNull(foo) && foo.something()) // Uses short-circuit as well. No Null-pointer Exceptions are thrown.\n",
    "reg_date": "2021-10-12T12:04:26.000Z"
  },
  {
    "id": 2322,
    "keyword": null,
    "link": null,
    "title": " java choose random enum",
    "description": "return yourEnum.values()[new Random().nextInt(yourEnum.values().length)];\nreturn Letter.values()[new Random().nextInt(Letter.values().length)];\n",
    "reg_date": "2021-10-12T12:04:26.000Z"
  },
  {
    "id": 2323,
    "keyword": null,
    "link": null,
    "title": " java chronometer",
    "description": "public class Chrono {  \tprivate boolean running; \tprivate long startTime;  \tpublic Chrono(){ \t\trunning = false; \t} \t \tpublic void start(){ \t\trunning = true; \t\tstartTime = System.currentTimeMillis(); \t} \t \tpublic void stop(){ \t\tstartTime = getTime(); \t\trunning = false; \t} \t \tpublic long getTime(){ \t\tif (running){ \t\t\treturn \tSystem.currentTimeMillis() - startTime; \t\t} else { \t\t\treturn startTime; \t\t} \t} }\n",
    "reg_date": "2021-10-12T12:04:26.000Z"
  },
  {
    "id": 2324,
    "keyword": null,
    "link": null,
    "title": " java class",
    "description": "public class Lightsaber {   // properties   private boolean isOn;   private Color color;      // constructor   public Lightsaber(Color color) {     this.isOn = false;     this.color = color;   }      // getters   public Color getColor() {     return color;   }   public boolean getOnStatus() {     return isOn;   }      // setters   public void turnOn() {     isOn = true;   }   public void turnOff() {     isOn = false;   } }    // Implementation in main method: public class test {   public static void main(String[] args) {     Lightsaber yoda = new Lightsaber(green);     yoda.turnOn();   } }     \n// this might help you understand how classes work public class MathTest {      public static void main(String[] args) {          class MathAdd {              int num1;             int num2;              public int addNumbers() {                  int addThemUp = num1 + num2;                 return addThemUp;             }         }          MathAdd addition = new MathAdd(); // create a new instance of the class          // you can access variables from the class          addition.num1 = 10;          addition.num2 = 20;          // and use the method from the class to add them up         System.out.println(addition.addNumbers());      } }\n public class HelloWorld {   public static void main(String[] args) {          // how to use class in java     class User{     \t     \tint score;     }          User dave = new User();          dave.score = 20;          System.out.println(dave.score);          } } \nClass is a blueprint or template which you can create as many objects as you  like. Object is a member or instance of a class. Class is declared using class keyword, Object is created through new keyword mainly. A class is a template   for objects. A class defines  object properties including a valid range     of values, and a default value.  A class also describes object behavior.\n//\tExample : TestClass (Can be predefined or user-defined) public class TestClass {   // properties   private int id = 111;      // constructor   public TestClass(){     super();   }      // method   public void test(){     // some code here   } }\nabstract class Pesan {    public void success() {      System.out.println(\"Mobil Berhasil Dibeli\");    }        public void error() {      System.out.println(\"Uang Anda Tidak Cukup\");    } }   class Car extends Pesan {     protected String nama = \"toyota supra\";     protected String warna = \"merah\";     protected int harga = 2000000000;     protected String brand = \"toyota\"; }   class ShowRoom extends Car {   protected String namaShowroom = \"Catur Sentosa Raya\";   protected String alamatShowroom = \"Jl.siliwangin kec pancoranmas kota depok 16436\"; }   class Pembeli extends ShowRoom {     protected String namaPembeli = \"anto jayabaya\";     protected String alamatPembeli = \"jl.swadaya rt.01/rw.04 no.112 kec pancoranmas kota depok\";     protected int saldoPembeli = 50000000; }   class BeliMobil extends Pembeli {    public BeliMobil(String nama, String warna, int harga, String brand, String nsr, String asr, String np, String ap, int sdp) {     super();          super.nama = nama;     super.warna = warna;     super.harga = harga;     super.brand = brand;     super.namaShowroom = nsr;     super.alamatShowroom = asr;     super.namaPembeli = np;     super.alamatPembeli = ap;     super.saldoPembeli = sdp;  }      void getResult(String nama, String warna, int harga, String brand, String np, String ap) {           if(super.harga > super.saldoPembeli) {        System.out.println(\"=======================\");        super.error();        System.out.println(\"=======================\");      } else {        System.out.println(\"=======================\");        super.success();        System.out.println(\"=======================\");        System.out.println(\"\");        System.out.println(\"=======================\");        System.out.println(\"Jenis Mobil\");        System.out.println(\"=======================\");        System.out.println(\"\");        System.out.println(\"Nama Mobil:\" + nama);        System.out.println(\"Warna Mobil:\" + warna);        System.out.println(\"Harga Mobil:\" + harga);        System.out.println(\"Brand Mobil:\" + brand);        System.out.println(\"\");        System.out.println(\"=======================\");        System.out.println(\"Nama Pembeli Mobil\");        System.out.println(\"=======================\");        System.out.println(\"Nama Pembeli:\" + np);        System.out.println(\"Nama Pembeli:\" + ap);      }   }       public static void main(String[] args) {    BeliMobil beli = new BeliMobil(\"avanza\", \"hitam\", 128000000, \"toyota\", \"Jaya Mobil\", \"Jakarta\", \"Anton\", \"Depok\", 228000000);    beli.getResult(beli.nama, beli.warna, beli.harga, beli.brand, beli.namaPembeli, beli.alamatPembeli);   } }  \n",
    "reg_date": "2021-10-12T12:04:26.000Z"
  },
  {
    "id": 2325,
    "keyword": null,
    "link": null,
    "title": " java class name to string",
    "description": "a.getClass().getName();\nString className = n.getClass().getName(); String name = className.substring(className.lastIndexOf('$')+1,className.length()-4); System.out.println(name);  \n",
    "reg_date": "2021-10-12T12:04:27.000Z"
  },
  {
    "id": 2326,
    "keyword": null,
    "link": null,
    "title": " java classes and methods",
    "description": "import java.lang.Math; import java.util.Scanner;  public class HelloWorld {   public static void main(String[] args) {     class ResultNumberShape {              double number;              public boolean isSquare(double number) {                  double result = Math.sqrt(number);                 return ((result - Math.floor(result)) == 0);              }         }          ResultNumberShape checkNumber = new ResultNumberShape();          System.out.println(\"Enter any number:\");         Scanner scanner = new Scanner(System.in);         double num = scanner.nextDouble();          scanner.close();          if (checkNumber.isSquare(num)) {             System.out.println(num + \" is a sqaure number!\");         } else {             System.out.println(num + \" is not a square!\");         }        } } \n",
    "reg_date": "2021-10-12T12:04:27.000Z"
  },
  {
    "id": 2327,
    "keyword": null,
    "link": null,
    "title": " java clear console",
    "description": "// in JDK 11 you can do:  // It can be better than exec(\"cls\") because it even works in intellij. // Also, putting println() in a for loop is worse because there is a // noticable delay between calls. This code does a single call, but // stacks a ton of '\\n's.  private void clearConsole() { \tSystem.out.println(System.lineSeparator().repeat(100)); }\nRuntime.getRuntime().exec(\"cls\");\npublic static void clearScreen() {         System.out.print(\"\\033[H\\033[2J\");         System.out.flush();     }\n",
    "reg_date": "2021-10-12T12:04:27.000Z"
  },
  {
    "id": 2328,
    "keyword": null,
    "link": null,
    "title": " java cleardirectory",
    "description": "boolean deleteDirectory(File directoryToBeDeleted) {     File[] allContents = directoryToBeDeleted.listFiles();     if (allContents != null) {         for (File file : allContents) {             deleteDirectory(file);         }     }     return directoryToBeDeleted.delete(); }\nString[]entries = index.list(); for(String s: entries){     File currentFile = new File(index.getPath(),s);     currentFile.delete(); }\n",
    "reg_date": "2021-10-12T12:04:27.000Z"
  },
  {
    "id": 2329,
    "keyword": null,
    "link": null,
    "title": " java close application",
    "description": "System.exit(0);\nSystem.exit(n);\n",
    "reg_date": "2021-10-12T12:04:27.000Z"
  },
  {
    "id": 2330,
    "keyword": null,
    "link": null,
    "title": " java close jframe",
    "description": "Jframe frame = new Jframe(); int count = 0; if(count==10){   frame.setVisable(false);   frame.dispose(); }\nsetVisible(false); //you can't see me! dispose(); //Destroy the JFrame object \nTo terminate/close a frame in AWT, use the 'dispose()' method  \"frameObject.dispose()\"\n",
    "reg_date": "2021-10-12T12:04:27.000Z"
  },
  {
    "id": 2331,
    "keyword": null,
    "link": null,
    "title": " java close tcp socket output stream but not socket",
    "description": "socket.shutdownOutput()\n",
    "reg_date": "2021-10-12T12:04:27.000Z"
  },
  {
    "id": 2332,
    "keyword": null,
    "link": null,
    "title": " java cmd install raspbian",
    "description": "sudo apt-get install default-jdk\n",
    "reg_date": "2021-10-12T12:04:27.000Z"
  },
  {
    "id": 2333,
    "keyword": null,
    "link": null,
    "title": " java cod",
    "description": "import java.awt.*; import java.awt.event.*;  public class TextEinAusgabe2 extends Frame {   TextField eingabe;   Label     ausgabe;    public static void main( String[] args )   {     TextEinAusgabe2 meinFenster = new TextEinAusgabe2( \"Text-Ein-/Ausgabe\" );     meinFenster.setSize( 400, 200 );     meinFenster.setVisible( true );   }    public TextEinAusgabe2( String fensterTitel )   {     super( fensterTitel );     Label hinweis = new Label( \"Text eingeben und mit Return abschliessen\" );     eingabe = new TextField();     ausgabe = new Label();     add( BorderLayout.NORTH,  eingabe );     add( BorderLayout.CENTER, hinweis );     add( BorderLayout.SOUTH,  ausgabe );     eingabe.addActionListener(       new ActionListener() {         public void actionPerformed( ActionEvent ev ) {           meineMethode(); } } );     addWindowListener(       new WindowAdapter() {         public void windowClosing( WindowEvent ev ) {           dispose();           System.exit( 0 ); } } );   }    void meineMethode()   {     ausgabe.setText( \"Der eingelesene Text lautet: \" + eingabe.getText() );   } } \nimport java.awt.*; import java.awt.event.*;  public class TextEinAusgabe2 extends Frame {   TextField eingabe;   Label     ausgabe;    public static void main( String[] args )   {     TextEinAusgabe2 meinFenster = new TextEinAusgabe2( \"Text-Ein-/Ausgabe\" );     meinFenster.setSize( 400, 200 );     meinFenster.setVisible( true );   }    public TextEinAusgabe2( String fensterTitel )   {     super( fensterTitel );     Label hinweis = new Label( \"Text eingeben und mit Return abschliessen\" );     eingabe = new TextField();     ausgabe = new Label();     add( BorderLayout.NORTH,  eingabe );     add( BorderLayout.CENTER, hinweis );     add( BorderLayout.SOUTH,  ausgabe );     eingabe.addActionListener(       new ActionListener() {         public void actionPerformed( ActionEvent ev ) {           meineMethode(); } } );     addWindowListener(       new WindowAdapter() {         public void windowClosing( WindowEvent ev ) {           dispose();           System.exit( 0 ); } } );   }    void meineMethode()   {     ausgabe.setText( \"Der eingelesene Text lautet: \" + eingabe.getText() );   } }\njava basic code example\n",
    "reg_date": "2021-10-12T12:04:27.000Z"
  },
  {
    "id": 2334,
    "keyword": null,
    "link": null,
    "title": " java code to input an integer number only",
    "description": "static Scanner sc = new Scanner(System.in);     public static int Input(String mess){                  int x=0;         while(true){             try{                 System.out.println(mess);                 x= Integer.parseInt(sc.nextLine().trim());                 break;             }             catch(Exception e){                 System.out.println(\"Error!Pls input integer number.\");                              }         }             return x;     } public static void main(String[] args){   \tint Input=Input(\"Enter integer:\");\n",
    "reg_date": "2021-10-12T12:04:27.000Z"
  },
  {
    "id": 2335,
    "keyword": null,
    "link": null,
    "title": " java code to print hello world",
    "description": "public class Hello {   \tpublic static void main(String[] args)     {       /*Tip System.out.println(); shortcut Type 'sysout'and press Tab */       System.out.println(\"Hello world!\");     } }\nclass Simple{       public static void main(String args[]){        System.out.println(\"Hello Java\");       }   }  \n",
    "reg_date": "2021-10-12T12:04:28.000Z"
  },
  {
    "id": 2336,
    "keyword": null,
    "link": null,
    "title": " java code to rename all files in a folder",
    "description": "// java code to rename all files in a folder import java.io.File; public class RenameAllFilesDemo  {    public static void main(String[] args)     {       // folder path        String strPath = \"D:\\\\Users\\\\sachin\\\\java\\\\sachinfolder\";       // let's create new folder       File newfolder = new File(strPath);       File[] arrFile = newfolder.listFiles();       for(int a = 0; a < arrFile.length; a++)        {          if(arrFile[a].isFile())           {             File file = new File(strPath + \"\\\\\" + arrFile[a].getName());              String strFileName = arrFile[a].getName();              String[] tokens = strFileName.split(\"\\s\");              String strNewFile = tokens[1];              System.out.println(strFileName);              System.out.print(strNewFile);             file.renameTo(new File(strPath + \"\\\" + strNewFile + \".pdf\"));           }        }    } }\n",
    "reg_date": "2021-10-12T12:04:28.000Z"
  },
  {
    "id": 2337,
    "keyword": null,
    "link": null,
    "title": " java code to reverse an array",
    "description": "// Reverse an array in java using for loop public class ReverseArrayUsingForLoop  {    public static void main(String[] args)     {       int[] arrNumbers = new int[]{2, 4, 6, 8, 10};         System.out.println(\"Given array: \");         for(int a = 0; a < arrNumbers.length; a++)       {          System.out.print(arrNumbers[a] + \" \");       }       System.out.println(\"Reverse array: \");       // looping array in reverse order       for(int a = arrNumbers.length - 1; a >= 0; a--)        {            System.out.print(arrNumbers[a] + \" \");         }    } }\nint length = array.length; \t\tfor(int i=0;i<length/2;i++) { \t\t\tint swap = array[i]; \t\t\tarray[i] = array[length-i-1]; \t\t\tarray[length-i-1] = swap; \t\t} or Collections.reverse(Arrays.asList(array)); \npublic class ReverseArray {       public static void main(String[] args) {           //Initialize array           int [] arr = new int [] {1, 2, 3, 4, 5};           System.out.println(\"Original array: \");           for (int i = 0; i < arr.length; i++) {               System.out.print(arr[i] + \" \");           }           System.out.println();           System.out.println(\"Array in reverse order: \");           //Loop through the array in reverse order           for (int i = arr.length-1; i >= 0; i--) {               System.out.print(arr[i] + \" \");           }       }   } \n",
    "reg_date": "2021-10-12T12:04:28.000Z"
  },
  {
    "id": 2338,
    "keyword": null,
    "link": null,
    "title": " java code to reverse an integer",
    "description": "public class ReverseNumber {     public static void main(String[] args) {         int num = 1234, reversed = 0;          while(num != 0) {             int digit = num % 10;             reversed = reversed * 10 + digit;             num = num / 10;         }         System.out.println(\"Reversed Number: \" + reversed); }}\npublic class ReverseNumberExample1    {   public static void main(String[] args)    {   int number = 987654, reverse = 0;   while(number != 0)    {   int remainder = number % 10;   reverse = reverse * 10 + remainder;   number = number/10;   }   System.out.println(\"The reverse of the given number is: \" + reverse);   }   }  \nwhile(num != 0)  {    int digit = num % 10;    reversed = reversed * 10 + digit;    num /= 10; }\n//continue to loop until  a value is equal to 0  public class ReverseNum{      public static void main(String[] args {      int a = 543;   int reverse = 0;     while(a!=0){ //itera the process    int digit = a\u0010; //isolate the last digit number    reverse = digit + (reverse*10); //append last digit to reverse  a=a/10; // remove the last digit from number    }     System.out.println(reverse);          } }\nint rev= 0; while(num > 9) {   rev= rev*10 + num\u0010;   num/= 10; }\n",
    "reg_date": "2021-10-12T12:04:28.000Z"
  },
  {
    "id": 2339,
    "keyword": null,
    "link": null,
    "title": " java code to right rotate an array",
    "description": "import java.util.*; import java.lang.*; import java.io.*;  /* Name of the class has to be \"Main\" only if the class is public. */ class Codechef { \tpublic static void main (String[] args)  \t{ \t    Scanner sc=new Scanner(System.in); \t\t// your code goes here \t\tint arr[]= new int[10]; \t\tarr[0]=5; \t\tarr[1]=34; \t\tarr[2]=23; \t\tarr[3]=6; \t\tarr[4]=84; \t\tfor(int i=0;i<arr.length;i++) \t\t{ \t\t    System.out.print(arr[i]+\" \"); \t\t     \t\t} \t\tSystem.out.println(\"\"); \t\tfor(int i=5;i>=2;i--) \t\t{ \t\t    arr[i+1]=arr[i]; \t\t} \t\tarr[2]=15; \t\tfor(int i=0;i<arr.length;i++) \t\t{ \t\t    System.out.print(arr[i]+\" \"); \t\t    \t\t} \t} } \n",
    "reg_date": "2021-10-12T12:04:28.000Z"
  },
  {
    "id": 2340,
    "keyword": null,
    "link": null,
    "title": " java coding standards for methods",
    "description": "1) Method names should start with small letters. 2) Method names are usually verbs 3) If method contains multiple words, every inner word should start with  uppercase letter. Ex : toString() 4) Method name must be combination of verb and noun Ex : getCarName(),getCarNumber()\nIt is recommended highly to follow java coding standards. Classnames should start with uppercase letter. Classnames names should be nouns. If Class name is of multiple words then the first letter of inner word must be  capital letter. Ex : Employee, EmployeeDetails, ArrayList, TreeSet, HashSet\n1) Interface should start with uppercase letters 2) Interfaces names should be adjectives Example : Runnable, Serializable, Marker, Cloneable\n",
    "reg_date": "2021-10-12T12:04:28.000Z"
  },
  {
    "id": 2341,
    "keyword": null,
    "link": null,
    "title": " java coding standards variables",
    "description": "1) Variable names should start with small letters. 2) Variable names should be nouns 3) Short meaningful names are recommended. 4) If there are multiple words every innerword should start with Uppecase  character. Ex : string,value,empName,empSalary\n",
    "reg_date": "2021-10-12T12:04:28.000Z"
  },
  {
    "id": 2342,
    "keyword": null,
    "link": null,
    "title": " java collapse string array",
    "description": "String[] array = {\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"}; String s = String.join(\" \", array); //<- (delimiter, target array) Syste.out.println(s);  Output: 0 1 2 3 4 5 6 7 8 9\n",
    "reg_date": "2021-10-12T12:04:28.000Z"
  },
  {
    "id": 2343,
    "keyword": null,
    "link": null,
    "title": " java collection to list",
    "description": "List theList = new ArrayList(coll); \n",
    "reg_date": "2021-10-12T12:04:28.000Z"
  },
  {
    "id": 2344,
    "keyword": null,
    "link": null,
    "title": " java command line arguments",
    "description": "class CommandLineExample{   public static void main(String args[]){   System.out.println(\"Your first argument is: \"+args[0]);   }   }  //Now follow these steps compile by > javac CommandLineExample.java   run by > java CommandLineExample sonoo  \npublic class CommandLine {    public static void main(String args[]) {       for(int i = 0; i<args.length; i++) {          System.out.println(\"args[\" + i + \"]: \" + args[i]);       }    } }\n",
    "reg_date": "2021-10-12T12:04:28.000Z"
  },
  {
    "id": 2345,
    "keyword": null,
    "link": null,
    "title": " java comment many line",
    "description": "//This is single line comment    /*  This is   multi line comment  */  \n",
    "reg_date": "2021-10-12T12:04:29.000Z"
  },
  {
    "id": 2346,
    "keyword": null,
    "link": null,
    "title": " java comments",
    "description": "//This is single line comment    /*  This is   multi line comment  */  \n//Single line System.out.println(\"Hello world\"/*+\"This is code commented out inline.\"*/); //You can also put comments at the end /* Multi Line comment */\n/** * Returns an Image object that can then be painted on the screen.  * The url argument must specify an absolute <a href=\"#{@link}\">{@link URL}</a>. The name * argument is a specifier that is relative to the url argument.  * <p> * This method always returns immediately, whether or not the  * image exists. When this applet attempts to draw the image on * the screen, the data will be loaded. The graphics primitives  * that draw the image will incrementally paint on the screen.  * * @param  url  an absolute URL giving the base location of the image * @param  name the location of the image, relative to the url argument * @return      the image at the specified URL * @see         Image */ public Image getImage(URL url, String name) { try { return getImage(new URL(url, name)); } catch (MalformedURLException e) { return null; } }\n// single line comment example // integer variable 'a' is assigned value 5 int a = 5;  /* This is an example for java multiline comment */  // Documentation comments example /** * <h1>Area of Square</h1> * Area of Square java program calculates area * using given side value and prints the area. * <p> * <b>Note: Adding comments in a java program makes it more * user friendly and is presumed as good quality code *  * @author Sachin * @version 1.0 * @since 2015-04-12 * </b> * </p> */\n// This is how you comment in java /* You can also do it like this */\n// this is a comment  /* this is     a multiline    comment */\n",
    "reg_date": "2021-10-12T12:04:29.000Z"
  },
  {
    "id": 2347,
    "keyword": null,
    "link": null,
    "title": " java compare dates",
    "description": "Date has before and after methods and can be compared to each other as follows:  if(todayDate.after(historyDate) && todayDate.before(futureDate)) {     // In between } For an inclusive comparison:  if(!historyDate.after(todayDate) && !futureDate.before(todayDate)) {     /* historyDate <= todayDate <= futureDate */  } You could also give Joda-Time a go, but note that:  Joda-Time is the de facto standard date and time library for Java prior to Java SE 8. Users are now asked to migrate to java.time (JSR-310).  Back-ports are available for Java 6 and 7 as well as Android.\nfor ( Map.Entry<DayOfWeek , LocalTime> entry : dayToTimeMap.entrySet () ) {     DayOfWeek key = entry.getKey ();     LocalTime value = entry.getValue ();     int comparison = key.compareTo ( today );     if ( comparison < 0 ) { // if earlier day&hellip;         earlier.add ( key );     } else if ( comparison == 0 ) { //If same day&hellip;         if ( value.isBefore ( now ) ) {             earlier.add ( key );         } else {  // Else same time as now or later than now&hellip;             later.add ( key );         }     } else if ( comparison > 0 ) {         later.add ( key );     } else {         throw new RuntimeException ( \"Unexpectedly reached IF-ELSE for comparison: \" + comparison );     } } \n",
    "reg_date": "2021-10-12T12:04:29.000Z"
  },
  {
    "id": 2348,
    "keyword": null,
    "link": null,
    "title": " java compare strings alphabetically",
    "description": "String a = \"HYRE\";  String b = \"AGNYG\";    int compare = a.compareTo(b);    if (compare < 0) {       //a is smaller } else if (compare > 0) {     //a is larger  } else {       //a is equal to b } \nDifferent 'Collation Strength' values give different sort results:  [&Auml;bc, &auml;bc, &Agrave;bc, &agrave;bc, Abc, abc, ABC] - Original Data [&Auml;bc, &auml;bc, &Agrave;bc, &agrave;bc, Abc, abc, ABC] Primary [Abc, abc, ABC, &Agrave;bc, &agrave;bc, &Auml;bc, &auml;bc] Secondary [abc, Abc, ABC, &agrave;bc, &Agrave;bc, &auml;bc, &Auml;bc] Tertiary  Case kicks in only with Tertiary Collation Strength  :  [cache, CACHE, Cache] - Original Data [cache, CACHE, Cache] Primary [cache, CACHE, Cache] Secondary [cache, Cache, CACHE] Tertiary  Accents kick in with Secondary Collation Strength. Compare with no accents present:  Collator sees them as the same : abc, ABC - Primary Collator sees them as the same : abc, ABC - Secondary Collator sees them as DIFFERENT: abc, ABC - Tertiary  Compare with accents present:  Collator sees them as the same : abc, &Agrave;BC - Primary Collator sees them as DIFFERENT: abc, &Agrave;BC - Secondary Collator sees them as DIFFERENT: abc, &Agrave;BC - Tertiary \n",
    "reg_date": "2021-10-12T12:04:29.000Z"
  },
  {
    "id": 2349,
    "keyword": null,
    "link": null,
    "title": " java comparing-two-csv-files-in-java",
    "description": "import java.io.*; import java.util.ArrayList;  /* file1 - file2 = file3*/ public class CompareCSV { public static void main(String args[]) throws FileNotFoundException, IOException {     String path=\"D:\\\\csv\\\\\";     String file1=\"file1.csv\";     String file2=\"file2.csv\";     String file3=\"p3lang.csv\";     ArrayList al1=new ArrayList();     ArrayList al2=new ArrayList();     //ArrayList al3=new ArrayList();      BufferedReader CSVFile1 = new BufferedReader(new FileReader(path+file1));     String dataRow1 = CSVFile1.readLine();     while (dataRow1 != null)     {         String[] dataArray1 = dataRow1.split(\",\");         for (String item1:dataArray1)         {             al1.add(item1);         }          dataRow1 = CSVFile1.readLine(); // Read next line of data.     }       CSVFile1.close();      BufferedReader CSVFile2 = new BufferedReader(new FileReader(path+file2));     String dataRow2 = CSVFile2.readLine();     while (dataRow2 != null)     {         String[] dataArray2 = dataRow2.split(\",\");         for (String item2:dataArray2)         {             al2.add(item2);          }         dataRow2 = CSVFile2.readLine(); // Read next line of data.     }      CSVFile2.close();       for(String bs:al2)      {          al1.remove(bs);      }       int size=al1.size();      System.out.println(size);       try         {             FileWriter writer=new FileWriter(path+file3);             while(size!=0)             {                 size--;                 writer.append(\"\"+al1.get(size));                 writer.append('\\n');             }             writer.flush();             writer.close();         }         catch(IOException e)         {             e.printStackTrace();         } }}\n",
    "reg_date": "2021-10-12T12:04:29.000Z"
  },
  {
    "id": 2350,
    "keyword": null,
    "link": null,
    "title": " java concatenate strings",
    "description": "// String concatenation in java using concat() method public class StringConcatMethodDemo {    public static void main(String[] args)    {       String str1 = \"Flower \";       String str2 = \"Brackets\";       String str3 = str1.concat(str2);       System.out.println(str3);    } }\n// StringBuilder String stringBuilderConcat = new StringBuilder()     .append(greeting)     .append(\" \")     .append(person)     .append(\"! Welcome to the \")     .append(location)     .append(\"!\")     .build();\npublic class ConcatenationExample {    public static void main(String args[]) {        //One way of doing concatenation        String str1 = \"Welcome\";        str1 = str1.concat(\" to \");        str1 = str1.concat(\" String handling \");        System.out.println(str1);         //Other way of doing concatenation in one line        String str2 = \"This\";        str2 = str2.concat(\" is\").concat(\" just a\").concat(\" String\");        System.out.println(str2);    } }\npublic class Concat {     String cat(String a, String b) {         a += b;         return a;     } }\nString s=\"Sachin\"+\" Tendulkar\";      System.out.println(s);//Sachin Tendulkar    Output:Sachin Tendulkar \n-By  using (+) operator -By  using concatenate method (concat()).                       String strconcat3=strconcat2.concat(strconcat);  -By StringBuffer -String strconcat= new StringBuilder().append(\"matt\")                                 .append(\"damon\").toString();                                  -By StringBuilder - String strconcat2= new StringBuffer()                   .append(\"matt\").append(\"damon\").toString();\n",
    "reg_date": "2021-10-12T12:04:29.000Z"
  },
  {
    "id": 2351,
    "keyword": null,
    "link": null,
    "title": " java confirmation dialog",
    "description": "int dialogResult = JOptionPane.showConfirmDialog(frame, \"Text\", \"Title\", JOptionPane.YES_NO_OPTION); if(dialogResult == JOptionPane.YES_OPTION){   \t// Do something }\t\n",
    "reg_date": "2021-10-12T12:04:29.000Z"
  },
  {
    "id": 2352,
    "keyword": null,
    "link": null,
    "title": " java connect mariadb",
    "description": "Connection connection = DriverManager.getConnection(\"jdbc:mariadb://localhost:3306/DB?user=root&password=myPassword\"); \n",
    "reg_date": "2021-10-12T12:04:29.000Z"
  },
  {
    "id": 2353,
    "keyword": null,
    "link": null,
    "title": " java console text color",
    "description": "// Define color constants public static final String TEXT_RESET = \"\\u001B[0m\"; public static final String TEXT_BLACK = \"\\u001B[30m\"; public static final String TEXT_RED = \"\\u001B[31m\"; public static final String TEXT_GREEN = \"\\u001B[32m\"; public static final String TEXT_YELLOW = \"\\u001B[33m\"; public static final String TEXT_BLUE = \"\\u001B[34m\"; public static final String TEXT_PURPLE = \"\\u001B[35m\"; public static final String TEXT_CYAN = \"\\u001B[36m\"; public static final String TEXT_WHITE = \"\\u001B[37m\";  // Implementation System.out.println(TEXT_RED + \"This text is red!\" + TEXT_RESET);\npublic static final String ANSI_BLACK_BACKGROUND = \"\\u001B[40m\"; public static final String ANSI_RED_BACKGROUND = \"\\u001B[41m\"; public static final String ANSI_GREEN_BACKGROUND = \"\\u001B[42m\"; public static final String ANSI_YELLOW_BACKGROUND = \"\\u001B[43m\"; public static final String ANSI_BLUE_BACKGROUND = \"\\u001B[44m\"; public static final String ANSI_PURPLE_BACKGROUND = \"\\u001B[45m\"; public static final String ANSI_CYAN_BACKGROUND = \"\\u001B[46m\"; public static final String ANSI_WHITE_BACKGROUND = \"\\u001B[47m\";\n",
    "reg_date": "2021-10-12T12:04:29.000Z"
  },
  {
    "id": 2354,
    "keyword": null,
    "link": null,
    "title": " java console write",
    "description": "System.out.println(\"Hello Console\");\n",
    "reg_date": "2021-10-12T12:04:29.000Z"
  },
  {
    "id": 2355,
    "keyword": null,
    "link": null,
    "title": " java constructor",
    "description": "class Other{     public Other(String message){         System.out.println(message);     } }  class scratch{     public static void main(String[] args) {         Other method = new Other(\"Hey\");         //prints Hey to the console     } }\nclass MyClass {   public MyClass () {     //constructor code   } }\nThere are three types of constructors:  Default, No-arg constructor and Parameterized.    If you do not implement any constructor in your class, Java compiler inserts a default constructor into your code on your behalf. This constructor is known as default constructor.    Constructor with no arguments is known as no-arg constructor  Constructor with arguments(or you can say parameters) is known as  Parameterized constructor.\nA constructor is a special method used to initialize objects in java. we use constructors to initialize all variables in the class  when an object is created. As and when an object is created it is initialized automatically with the help of  constructor in java.    We have two types of constructors: Default Constructor Parameterized Constructor  public classname(){ } public classname(parameters list){ }\nclass Huso {   public Huso() {   \t//constructor code about a huso   } }\nA constructor is a special method used to initialize objects in java. we use constructors to initialize all variables in the class  when an object is created.   As and when an object is created it is initialized automatically with the help of  constructor in java.    We have two types of constructors: Default Constructor Parameterized Constructor  I use Constructor in pages classes in my framework public classname(){ } public classname(parameters list){ }  \n",
    "reg_date": "2021-10-12T12:04:30.000Z"
  },
  {
    "id": 2356,
    "keyword": null,
    "link": null,
    "title": " java convert LocalDateTime to long",
    "description": "    public long createTimestamp() {         ZoneId zoneId = ZoneId.systemDefault();         return LocalDateTime.now().atZone(zoneId).toEpochSecond();     }\n",
    "reg_date": "2021-10-12T12:04:30.000Z"
  },
  {
    "id": 2357,
    "keyword": null,
    "link": null,
    "title": " java convert a char[] to string",
    "description": "char[] chars = { 'A', 'B', 'C', 'D', 'E', 'F' };  String str1 = String.valueOf(chars); //\"ABCDEF\" String str2 = new String(chars);// \"ABCDEF\"  System.out.println(str1.equals(str2)); //\"true\"\n",
    "reg_date": "2021-10-12T12:04:30.000Z"
  },
  {
    "id": 2358,
    "keyword": null,
    "link": null,
    "title": " java convert a set to array",
    "description": "\t  Set<String> set = new HashSet<String>();       set.add(\"Apple\");       set.add(\"Orange\");       set.add(\"Banana\");               String[] myArray = new String[set.size()];       set.toArray(myArray);\n",
    "reg_date": "2021-10-12T12:04:30.000Z"
  },
  {
    "id": 2359,
    "keyword": null,
    "link": null,
    "title": " java convert a string to char[]",
    "description": "String string =  \"ABCDEF\" ;   char[] charsFromString = string.toCharArray(); // { 'A', 'B', 'C', 'D', 'E', 'F' }\n",
    "reg_date": "2021-10-12T12:04:30.000Z"
  },
  {
    "id": 2360,
    "keyword": null,
    "link": null,
    "title": " java convert array to list",
    "description": "new ArrayList<>(Arrays.asList(array));\nString[] arr = list.toArray(new String[list.size()]);\nInteger[] spam = new Integer[] { 1, 2, 3 }; List<Integer> list = Arrays.asList(spam);\nnew ArrayList<>(Arrays.asList(array)) \nArrays.asList(array);\nInteger[] array = new Integer[] {   23, 54, 12 };  java.util.List<Integer> list = java.util.Arrays.asList(array); System.out.println(list);\n",
    "reg_date": "2021-10-12T12:04:30.000Z"
  },
  {
    "id": 2361,
    "keyword": null,
    "link": null,
    "title": " java convert biginteger to double",
    "description": "BigInteger bigInt = new BigInteger(1); bigInt.doubleValue();\n",
    "reg_date": "2021-10-12T12:04:30.000Z"
  },
  {
    "id": 2362,
    "keyword": null,
    "link": null,
    "title": " java convert bytes to string",
    "description": "byte[] bytes = \"hello\".getBytes(); String s = new String(bytes, StandardCharsets.UTF_8);\n",
    "reg_date": "2021-10-12T12:04:30.000Z"
  },
  {
    "id": 2363,
    "keyword": null,
    "link": null,
    "title": " java convert char to int",
    "description": "char charValue = '2'; int intValue = Character.getNumericValue(charValue); // 2\npublic class JavaExample{      public static void main(String args[]){   \tchar ch = '9'; \t\t \t/* Since parseInt() method of Integer class accepts    \t * String argument only, we must need to convert \t * the char to String first using the String.valueOf() \t * method and then we pass the String to the parseInt() \t * method to convert the char to int \t */ \tint num = Integer.parseInt(String.valueOf(ch)); \t\t \tSystem.out.println(num);    } }\nint n = Character.getNumericValue(char);\nchar something = '1'; int value = Integer.parseInt(something + \"\"); System.out.println(value);  // prints 1\nchar x = '9'; int y = x - '0'; // gives the int value 9 \n",
    "reg_date": "2021-10-12T12:04:30.000Z"
  },
  {
    "id": 2364,
    "keyword": null,
    "link": null,
    "title": " java convert date to joda datetime",
    "description": "Date new Date(); DateTime dateTime = new DateTime(date);\n",
    "reg_date": "2021-10-12T12:04:30.000Z"
  },
  {
    "id": 2365,
    "keyword": null,
    "link": null,
    "title": " java convert double to string",
    "description": "double total = 44; String total2 = Double.toString(total);\ndouble number = -895.25; String numberAsString = String.valueOf(number);\n",
    "reg_date": "2021-10-12T12:04:31.000Z"
  },
  {
    "id": 2366,
    "keyword": null,
    "link": null,
    "title": " java convert float to int",
    "description": "int i = Math.round(f); // f a float\nint a = (int)float1\nUsing Math.round() will round the float to the nearest integer.\nint bob = (int) 3.14;    \\\\ bob = 3\n",
    "reg_date": "2021-10-12T12:04:31.000Z"
  },
  {
    "id": 2367,
    "keyword": null,
    "link": null,
    "title": " java convert hex to binary method",
    "description": "/**  * Method receives String hexadecimal value (of any range) and returns a String of a binary representation  * hexadecimal string format (ex.:\"2FFA\")  * Use of if-than-else statement inside for loop  * Use the Integer.toBinaryString(int i) method  */ private String parseHexBinary(String hex) { \t\tString digits = \"0123456789ABCDEF\";   \t\thex = hex.toUpperCase(); \t\tString binaryString = \"\"; \t\t \t\tfor(int i = 0; i < hex.length(); i++) { \t\t\tchar c = hex.charAt(i); \t\t\tint d = digits.indexOf(c); \t\t\tif(d == 0)\tbinaryString += \"0000\";  \t\t\telse  binaryString += Integer.toBinaryString(d); \t\t} \t\treturn binaryString; \t}\n/**  * Method receives String hexadecimal value and returns a String of a binary representation  * hexadecimal string format (ex.:\"2FFA\")  * Only works with positive hexadecimal values (16xF does not work)  * Uses 2 for loops (hex -> dec & dec -> bin)  */ private static int[] parseHexBinary(String hex) { \t\tString digits = \"0123456789ABCDEF\"; \t\tint[] binaryValue = new int[hex.length()*4]; \t\tlong val = 0; \t\t \t\t// convert hex to decimal \t\tfor(int i = 0; i < hex.length(); i++) { \t\t\tchar c = hex.charAt(i); \t\t\tint d = digits.indexOf(c); \t\t\tval = val*16 + d; \t\t} \t\t \t\t// convert decimal to binary \t\tfor(int i = 0; i < binaryValue.length; i++) { \t\t\t \t\t\tbinaryValue[i] = (int) (val%2); \t\t\tval = val/2; \t\t} \t\t \t\treturn binaryValue; \t}\n",
    "reg_date": "2021-10-12T12:04:31.000Z"
  },
  {
    "id": 2368,
    "keyword": null,
    "link": null,
    "title": " java convert int to string",
    "description": "String.valueOf(int)//Int to String ==>To print the int\nint x = 3;  Integer.toString(int) \nString s = String.ValueOf(x); //converts a int x to a String s\nString s = String.ValueOf(x); //converts a int x to a String s  //or  String s = Integer(x).toString();\t//converts a int x to a String s\nint i=10;   String s=String.valueOf(i);\nint i = 42; System.out.println( \"\" + i );\n",
    "reg_date": "2021-10-12T12:04:31.000Z"
  },
  {
    "id": 2369,
    "keyword": null,
    "link": null,
    "title": " java convert java.util.Date to LocalDate",
    "description": "Date yourDate = new Date(); // this will be your java.util.Date instance to convert LocalDate date = yourDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate(); \n",
    "reg_date": "2021-10-12T12:04:31.000Z"
  },
  {
    "id": 2370,
    "keyword": null,
    "link": null,
    "title": " java convert string to int array",
    "description": "import java.util.Arrays; public class StringToIntegerArray {    public static void main(String args[]) {       String [] str = {\"123\", \"345\", \"437\", \"894\"};       int size = str.length;       int [] arr = new int [size];       for(int i=0; i<size; i++) {          arr[i] = Integer.parseInt(str[i]);       }       System.out.println(Arrays.toString(arr));    } }\n",
    "reg_date": "2021-10-12T12:04:31.000Z"
  },
  {
    "id": 2371,
    "keyword": null,
    "link": null,
    "title": " java convert to roman numerals",
    "description": "import java.util.TreeMap;  public class RomanNumber {      private final static TreeMap<Integer, String> map = new TreeMap<Integer, String>();      static {          map.put(1000, \"M\");         map.put(900, \"CM\");         map.put(500, \"D\");         map.put(400, \"CD\");         map.put(100, \"C\");         map.put(90, \"XC\");         map.put(50, \"L\");         map.put(40, \"XL\");         map.put(10, \"X\");         map.put(9, \"IX\");         map.put(5, \"V\");         map.put(4, \"IV\");         map.put(1, \"I\");      }      public final static String toRoman(int number) {         int l =  map.floorKey(number);         if ( number == l ) {             return map.get(number);         }         return map.get(l) + toRoman(number-l);     }  } \n",
    "reg_date": "2021-10-12T12:04:31.000Z"
  },
  {
    "id": 2372,
    "keyword": null,
    "link": null,
    "title": " java copy array",
    "description": "// Shallow copy int[] src = {1,2,3,4,5}; int[] dst = Arrays.copyOf(src, src.length);  // Deep copy int[] dst2 = new int[src.length]; for(int i = 0; i < src.length; i++){ \tdst2[i] = src[i]; }\nint[] src  = new int[]{1,2,3,4,5}; int[] dest = new int[5];  System.arraycopy( src, 0, dest, 0, src.length );\nint a[] = {1, 8, 3};     // Copy elements of a[] to b[]  int b[] = a.clone();\nint[] a = {1,2,3,4,5}; int[] b = Arrays.copyOf(a, a.length);\nint[] a = {1, 2, 3};       int[] b = a.clone();\n// method  public static int [] copyArray(int [] arr){       int [] copyArr = new int[arr.length];       for (int i = 0; i < copyArr.length; i++){             copyArr[i] = arr[i];        }       return copyArr; }  // Arrays. method  int[] copyCat = Arrays.copyOf(arr, arr.length);  // System  System.arraycopy(x,0,y,0,5); // 5 is array's length   // clone  y = x.clone(); \n",
    "reg_date": "2021-10-12T12:04:31.000Z"
  },
  {
    "id": 2373,
    "keyword": null,
    "link": null,
    "title": " java copy file from one directory to another efficiently",
    "description": " private static void copyFileUsingStream(File source, File dest) throws IOException {     InputStream is = null;     OutputStream os = null;     try {         is = new FileInputStream(source);         os = new FileOutputStream(dest);         byte[] buffer = new byte[1024];         int length;         while ((length = is.read(buffer)) > 0) {             os.write(buffer, 0, length);         }     } finally {         is.close();         os.close();     } } \n",
    "reg_date": "2021-10-12T12:04:31.000Z"
  },
  {
    "id": 2374,
    "keyword": null,
    "link": null,
    "title": " java copy list",
    "description": "List<Object> copy = new ArrayList<>(original_list); \nList<Integer> source = Arrays.asList(1,2,3); List<Integer> dest = Arrays.asList(4,5,6); Collections.copy(dest, source); \nList<Object> copy = new ArrayList<>(); copy.addAll(originalList);\n",
    "reg_date": "2021-10-12T12:04:32.000Z"
  },
  {
    "id": 2375,
    "keyword": null,
    "link": null,
    "title": " java copy paste from clipboard",
    "description": "import java.awt.datatransfer.StringSelection; import java.awt.Toolkit; import java.awt.datatransfer.Clipboard;   String myString = \"This text will be copied into clipboard\"; StringSelection stringSelection = new StringSelection(myString); Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard(); clipboard.setContents(stringSelection, null);\n import java.awt.Toolkit; import java.awt.datatransfer.Clipboard; import java.awt.datatransfer.DataFlavor; import java.awt.datatransfer.StringSelection; import java.awt.datatransfer.UnsupportedFlavorException; import java.io.IOException;  public class Main {   public static void main(String[] args) {   }    private void copy() {     Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();     String text = \"value\";     StringSelection selection = new StringSelection(text);     clipboard.setContents(selection, null);   }    private void paste() {     Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();     DataFlavor flavor = DataFlavor.stringFlavor;     if (clipboard.isDataFlavorAvailable(flavor)) {       try {         String text = (String) clipboard.getData(flavor);         System.out.println(text);       } catch (UnsupportedFlavorException e) {         System.out.println(e);       } catch (IOException e) {         System.out.println(e);       }     }   }  } \n",
    "reg_date": "2021-10-12T12:04:32.000Z"
  },
  {
    "id": 2376,
    "keyword": null,
    "link": null,
    "title": " java count",
    "description": "    public static void main(String[] args)      {             // creating a list of Integers          List<Integer> list = Arrays.asList(0, 2, 4, 6,                                             8, 10, 12);             // Using count() to count the number          // of elements in the stream and          // storing the result in a variable.          long total = list.stream().count();             // Displaying the number of elements          System.out.println(total);      } \n",
    "reg_date": "2021-10-12T12:04:32.000Z"
  },
  {
    "id": 2377,
    "keyword": null,
    "link": null,
    "title": " java count files in folder",
    "description": "File directory=new File(\"directory path\");     int fileCount=directory.list().length;     System.out.println(\"File Count:\"+fileCount);\n",
    "reg_date": "2021-10-12T12:04:32.000Z"
  },
  {
    "id": 2378,
    "keyword": null,
    "link": null,
    "title": " java count frequency of characters in a string",
    "description": "+++METHOD WITH NONDUP+++ public static String FrequencyOfChars(String str) {  String nonDup = \"\";  for(int i=0; i < str.length(); i++)  if(!nonDup.contains(\"\"+str.charAt(i)))  nonDup+= \"\"+str.charAt(i);   String expectedResult = \"\";  for( int j=0;j < nonDup.length(); j++) {  int count = 0;  for(int i=0; i < str.length(); i++) {  if(str.charAt(i) == nonDup.charAt(j))  count++; }  expectedResult +=nonDup.charAt(j)+\"\" + count; }  return expectedResult; }    +++METHOD WITH REPLACE METHOD+++    public  static  String  FrequencyOfChars(String str) {  String expectedResult = \"\";  for( int j=0; j < str.length(); j++) {  int count = 0;  for(int i=0; i < str.length(); i++) {  if(str.charAt(i) == str.charAt(j)) {  count++; } }  expectedResult +=str.charAt(j)+\"\" + count;  str = str.replace(\"\"+str.charAt(j) ,  \"\" );  }  return expectedResult;  }  +++WITH LINKED HASH SET+++   public  static  String  FrequencyOfChars(String str) {  String b=new LinkedHashSet<>(Arrays.asList(str.split(\"\"))).toString();    b = b.replace(\", \",\"\").replace(\"[\",\"\").replace(\"]\",\"\");  String result=\"\";  for(int j=0; j<b.length();j++) {  int count=0;  for(int i=0; i<str.length(); i++){  if(str.substring(i, i+1).equals(\"\"+str.charAt(j)))  count++;  }  result+=b.substring(j, j+1)+count;  }  return result;  }  ++++LAST METHOD USING COLLECTIONS+++   public static String frequency(String str) {  String nonDup=\"\", result=\"\";  for(int i=0; i < str.length(); i++)  if(! nonDup.contains(\"\"+str.charAt(i)))  nonDup += \"\"+str.charAt(i);     for(int i=0; i < nonDup.length(); i++) {  int num = Collections.frequency( Arrays.asList(str.split(\"\") ) ,    \"\"+nonDup.charAt( i ) );  result += \"\"+nonDup.charAt(i) + num;  }     return result;  }\npublic class Frequency    {        public static void main(String[] args) {           String str = \"picture perfect\";           int[] freq = new int[str.length()];           int i, j;                      //Converts given string into character array           char string[] = str.toCharArray();                      for(i = 0; i <str.length(); i++) {               freq[i] = 1;               for(j = i+1; j <str.length(); j++) {                   if(string[i] == string[j]) {                       freq[i]++;                                  //Set string[j] to 0 to avoid printing visited character                       string[j] = '0';                   }               }           }           //Displays the each character and their corresponding frequency           System.out.println(\"Characters and their corresponding frequencies\");           for(i = 0; i <freq.length; i++) {               if(string[i] != ' ' && string[i] != '0')                   System.out.println(string[i] + \"-\" + freq[i]);           }       }   }  \nHashMap<Character, Integer> map = new HashMap<Character, Integer>(); String s = \"aasjjikkk\"; for (int i = 0; i < s.length(); i++) {     char c = s.charAt(i);     Integer val = map.get(c);     if (val != null) {         map.put(c, new Integer(val + 1));     }     else {        map.put(c, 1);    } }\n",
    "reg_date": "2021-10-12T12:04:32.000Z"
  },
  {
    "id": 2379,
    "keyword": null,
    "link": null,
    "title": " java countdown timer",
    "description": "import java.util.Scanner; import java.util.Timer; import java.util.TimerTask;  public class Stopwatch { static int interval; static Timer timer;  public static void main(String[] args) {     Scanner sc = new Scanner(System.in);     System.out.print(\"Input seconds => : \");     String secs = sc.nextLine();     int delay = 1000;     int period = 1000;     timer = new Timer();     interval = Integer.parseInt(secs);     System.out.println(secs);     timer.scheduleAtFixedRate(new TimerTask() {          public void run() {             System.out.println(setInterval());          }     }, delay, period); }  private static final int setInterval() {     if (interval == 1)         timer.cancel();     return --interval; } } Try this.\n",
    "reg_date": "2021-10-12T12:04:32.000Z"
  },
  {
    "id": 2380,
    "keyword": null,
    "link": null,
    "title": " java create a set with values",
    "description": "Set<String> set = new HashSet<>(Arrays.asList(\"a\", \"b\", \"c\"));\n",
    "reg_date": "2021-10-12T12:04:32.000Z"
  },
  {
    "id": 2381,
    "keyword": null,
    "link": null,
    "title": " java create arraly list",
    "description": "List<String> words = new ArrayList<String>();\nArrayList<Integer> integerArray = new ArrayList<Integer>(); ArrayList<String> stringArray = new ArrayList<String>(); ArrayList<Double> doubleArray = new ArrayList<Double>(); //... keep replacing what is inside the <> with the appropriate //data type\nArrayList<Type> name = new ArrayList<Type>();\nList<Integer> list = new ArrayList<>();\n",
    "reg_date": "2021-10-12T12:04:32.000Z"
  },
  {
    "id": 2382,
    "keyword": null,
    "link": null,
    "title": " java create array with values",
    "description": "//Given values must match array type int[] myIntArray = {1, 2, 3}; \n",
    "reg_date": "2021-10-12T12:04:32.000Z"
  },
  {
    "id": 2383,
    "keyword": null,
    "link": null,
    "title": " java create circle",
    "description": "// x position, y position, x size, y size. ellipse(0, 0, 100, 100);\npublic class scratch {     public static void main(String[] args) {         JFrame window = new JFrame();         window.setTitle(\"Christmas Tree\");         window.setSize(700, 600);         window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);         window.setVisible(true);         DrawingComponent DC = new DrawingComponent();         window.add(DC);     } } class DrawingComponent extends JComponent{       public void paint(Graphics graph0){         Graphics2D graph = (Graphics2D) graph0;         Ellipse2D.Double circle = new Ellipse.Double(5, 5, 25, 25);         graph.fill(circle);       } }\n",
    "reg_date": "2021-10-12T12:04:33.000Z"
  },
  {
    "id": 2384,
    "keyword": null,
    "link": null,
    "title": " java create csv file from list",
    "description": "         String input = \"[\\\"user1\\\",\\\"track1\\\",\\\"player1\\\", \\\"user1\\\",\\\"track2\\\",\\\"player2\\\", \\\"user1\\\",\\\"track3\\\",\\\"player3\\\"]\";         input = input.substring(1, input.length() - 1); // get rid of brackets         String[] split = input.split(\" \");          FileWriter writer = new FileWriter(\"/Users/user/tmp/csv/sto1.csv\");          for(String s : split) {             String[] split2 = s.split(\",\");             writer.write(Arrays.asList(split2).stream().collect(Collectors.joining(\",\")));             writer.write(\"\\n\"); // newline         }          writer.close();\n",
    "reg_date": "2021-10-12T12:04:33.000Z"
  },
  {
    "id": 2385,
    "keyword": null,
    "link": null,
    "title": " java create date object from yesterday",
    "description": "Date date = DateUtils.addDays(new Date(), -1); SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\"); return sdf.format(date); \n",
    "reg_date": "2021-10-12T12:04:33.000Z"
  },
  {
    "id": 2386,
    "keyword": null,
    "link": null,
    "title": " java create directory",
    "description": "package com.mkyong.file;  import java.io.File;  public class CreateDirectoryExample {      public static void main(String[] args) {          File file = new File(\"C:\\\\Directory1\");         if (!file.exists()) {             if (file.mkdir()) {                 System.out.println(\"Directory is created!\");             } else {                 System.out.println(\"Failed to create directory!\");             }         }          File files = new File(\"C:\\\\Directory2\\\\Sub2\\\\Sub-Sub2\");         if (!files.exists()) {             if (files.mkdirs()) {                 System.out.println(\"Multiple directories are created!\");             } else {                 System.out.println(\"Failed to create multiple directories!\");             }         }      }  }\n// mkdir() method in java example import java.io.*; public class CreateDirectory {    public static void main(String[] args)    {       File directory = new File(\"D:\\\\DirectoryExample\");       if(!directory.exists())       {          if(directory.mkdir())          {             System.out.println(\"Directory is created\");          }          else          {             System.out.println(\"Directory not created\");          }       }    } }\nnew File(\"pathToFile\").mkdir(); \n// mkdirs() method in java example import java.io.File; public class CreateDirectoryDemo {    public static void main(String[] args)    {       File directory = new File(\"D:\\\\DirectoryExample\\\\subdirectory1\\\\subdirectory2\");       if(!directory.exists())       {          if(directory.mkdirs())          {             System.out.println(\"Sub directories created\");          }          else          {             System.out.println(\"Sub directories not created\");          }       }    } }\n Path path = Paths.get(\"/home/mkyong/a/b/c/\");      //java.nio.file.Files;     Files.createDirectories(path);\n",
    "reg_date": "2021-10-12T12:04:33.000Z"
  },
  {
    "id": 2387,
    "keyword": null,
    "link": null,
    "title": " java create directory if not exists",
    "description": "String path = ... File pathAsFile = new File(path);  if (!Files.exists(Paths.get(path))) { \tpathAsFile.mkdir(); }\n",
    "reg_date": "2021-10-12T12:04:33.000Z"
  },
  {
    "id": 2388,
    "keyword": null,
    "link": null,
    "title": " java create empty arraylist",
    "description": "ArrayList<Type> name = new ArrayList<Type>();\nArrayList<Class> myList = new ArrayList<Class>();\n",
    "reg_date": "2021-10-12T12:04:33.000Z"
  },
  {
    "id": 2389,
    "keyword": null,
    "link": null,
    "title": " java create file",
    "description": "// example on createNewFile() method of File class in java import java.io.File; import java.io.IOException; public class CreateFileDemo {    public static void main(String[] args) throws IOException    {       try       {          File file = new File(\"D:\\\\demo.txt\");          boolean bool = file.createNewFile();          if(bool)          {             System.out.println(\"File created successfully\");          }          else          {             System.out.println(\"File already exists\");          }       }       catch(IOException ex)       {          System.out.println(\"Exception : \");          ex.printStackTrace();       }    } }\nString fileData = \"yourContent\"; FileOutputStream fos = new FileOutputStream(\"yourFile.txt\"); fos.write(fileData.getBytes()); fos.flush(); fos.close();\nFile filename = new File(filepath)\npackage FileHandling;    // Import the File class import java.io.File;   // Import the IOException class to handle errors import java.io.IOException;    public class CreateFile { public static void main(String[] args) { try { // Creating an object of a file File myObj = new File(\"D:FileHandlingNewFilef1.txt\");  if (myObj.createNewFile()) { System.out.println(\"File created: \" + myObj.getName()); } else { System.out.println(\"File already exists.\"); } } catch (IOException e) { System.out.println(\"An error occurred.\"); e.printStackTrace(); } } }\n",
    "reg_date": "2021-10-12T12:04:33.000Z"
  },
  {
    "id": 2390,
    "keyword": null,
    "link": null,
    "title": " java create file and parent directories",
    "description": "if(!Files.exists(Path.of([PATH]))) { \tFile f = new File([PATH]); \tf.getParentFile().mkdirs(); }\n",
    "reg_date": "2021-10-12T12:04:33.000Z"
  },
  {
    "id": 2391,
    "keyword": null,
    "link": null,
    "title": " java create file if not exists",
    "description": "String yourFile = \"YourFile.txt\"; String yourContent = \"YourContent\"  File tmpDir = new File(yourFile); boolean exists = tmpDir.exists();  if(!exists) { \tFileOutputStream fos = new FileOutputStream(yourFile); \tfos.write(yourContent.getBytes()); \tfos.flush(); \tfos.close(); }\nFile yourFile = new File(\"score.txt\"); yourFile.createNewFile(); // if file already exists will do nothing  FileOutputStream oFile = new FileOutputStream(yourFile, false); \n",
    "reg_date": "2021-10-12T12:04:33.000Z"
  },
  {
    "id": 2392,
    "keyword": null,
    "link": null,
    "title": " java create file in folder",
    "description": "File file = new File(\"src/resources/run.txt\");  file.getParentFile().mkdirs();  FileWriter writer = new FileWriter(file); writer.append(\"this is a test\"); writer.close();\nFile file = new File(\"src/resources/run.txt\");  file.getParentFile().mkdirs();  file.createNewFile();\n",
    "reg_date": "2021-10-12T12:04:33.000Z"
  },
  {
    "id": 2393,
    "keyword": null,
    "link": null,
    "title": " java create file with content",
    "description": "PrintWriter writer = new PrintWriter(\"the-file-name.txt\", \"UTF-8\"); writer.println(\"The first line\"); writer.println(\"The second line\"); writer.close();\n",
    "reg_date": "2021-10-12T12:04:33.000Z"
  },
  {
    "id": 2394,
    "keyword": null,
    "link": null,
    "title": " java create folder",
    "description": "package com.mkyong.file;  import java.io.File;  public class CreateDirectoryExample {      public static void main(String[] args) {          File file = new File(\"C:\\\\Directory1\");         if (!file.exists()) {             if (file.mkdir()) {                 System.out.println(\"Directory is created!\");             } else {                 System.out.println(\"Failed to create directory!\");             }         }          File files = new File(\"C:\\\\Directory2\\\\Sub2\\\\Sub-Sub2\");         if (!files.exists()) {             if (files.mkdirs()) {                 System.out.println(\"Multiple directories are created!\");             } else {                 System.out.println(\"Failed to create multiple directories!\");             }         }      }  }\n// mkdir() method in java example import java.io.*; public class CreateDirectory {    public static void main(String[] args)    {       File directory = new File(\"D:\\\\DirectoryExample\");       if(!directory.exists())       {          if(directory.mkdir())          {             System.out.println(\"Directory is created\");          }          else          {             System.out.println(\"Directory not created\");          }       }    } }\nnew File(\"pathToFile\").mkdir(); \n// mkdirs() method in java example import java.io.File; public class CreateDirectoryDemo {    public static void main(String[] args)    {       File directory = new File(\"D:\\\\DirectoryExample\\\\subdirectory1\\\\subdirectory2\");       if(!directory.exists())       {          if(directory.mkdirs())          {             System.out.println(\"Sub directories created\");          }          else          {             System.out.println(\"Sub directories not created\");          }       }    } }\n Path path = Paths.get(\"/home/mkyong/a/b/c/\");      //java.nio.file.Files;     Files.createDirectories(path);\n",
    "reg_date": "2021-10-12T12:04:34.000Z"
  },
  {
    "id": 2395,
    "keyword": null,
    "link": null,
    "title": " java create inputstream from string",
    "description": "InputStream targetStream = new ByteArrayInputStream(\"your string\".getBytes()); \n StringBuilder textBuilder = new StringBuilder();         try (Reader reader = new BufferedReader(new InputStreamReader             (stream, Charset.forName(StandardCharsets.UTF_8.name())))) {             int c = 0;             while ((c = reader.read()) != -1) {                 textBuilder.append((char) c);             }         } catch (IOException e) {             e.printStackTrace();         }  textBuilder.toString;\n",
    "reg_date": "2021-10-12T12:04:34.000Z"
  },
  {
    "id": 2396,
    "keyword": null,
    "link": null,
    "title": " java create jframe",
    "description": "import javax.swing.JFrame;  public class example {   public static void main(String[] args){     JFrame frame = new JFrame();     frame.setSize(100,100);     frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOES);     frame.setTitle(\"Example Frame\");     frame.setVisible(true);   } }\nimport javax.swing.JFrame;\n",
    "reg_date": "2021-10-12T12:04:34.000Z"
  },
  {
    "id": 2397,
    "keyword": null,
    "link": null,
    "title": " java create list of strings",
    "description": "import java.util.ArrayList; import java.util.LinkedList; import java.util.List;  class scratch{     public static void main(String[] args) {         List<Integer> aList = new ArrayList<>();         List<Integer> lList = new LinkedList<>();     } }\nList<MyType> myList = new ArrayList<>();\n",
    "reg_date": "2021-10-12T12:04:34.000Z"
  },
  {
    "id": 2398,
    "keyword": null,
    "link": null,
    "title": " java create list with initial elements",
    "description": "List<String> list = Arrays.asList(\"foo\", \"bar\");\nList<MyType> myList = new ArrayList<MyType>(); \n",
    "reg_date": "2021-10-12T12:04:34.000Z"
  },
  {
    "id": 2399,
    "keyword": null,
    "link": null,
    "title": " java create map",
    "description": "Map<String, Integer> map = new HashMap<>();\nMap <Integer, Point2D.Double> hm = new HashMap<Integer, Point2D>(); hm.put(1, new Point2D.Double(50, 50));\n",
    "reg_date": "2021-10-12T12:04:34.000Z"
  },
  {
    "id": 2400,
    "keyword": null,
    "link": null,
    "title": " java create new object",
    "description": "Car mycar = new Car();\nmyCar = new Car();\npublic class Puppy {    public Puppy(String name) {       // This constructor has one parameter, name.       System.out.println(\"Passed Name is :\" + name );    }     public static void main(String []args) {       // Following statement would create an object myPuppy       Puppy myPuppy = new Puppy( \"tommy\" );    } }\n public class HelloWorld {   public static void main(String[] args) {          // how to use class in java     class User{     \t     \tint score;     \t     \t// method that can be used outside the class     \tpublic boolean hasWon(){     \t\tif(score >= 100){     \t\t\treturn true;     \t\t} else {     \t\t\treturn false;     \t\t}     \t}     }          User dave = new User();          dave.score = 20;          System.out.println(dave.hasWon());          } } \nMyClass **insert_name** = new MyClass();         insert_name.**method_name**();\n",
    "reg_date": "2021-10-12T12:04:34.000Z"
  },
  {
    "id": 2401,
    "keyword": null,
    "link": null,
    "title": " java create set with values",
    "description": "Set<String> set = new HashSet<>(Arrays.asList(\"a\", \"b\", \"c\"));\n//Creating HashSet  HashSet<String> set = new HashSet();   //adding elements   set.add(\"One\");     set.add(\"Two\");      //Removing element); set.remove(\"One\");   //Removing all the elements available in the set   set.clear();  \nSet<String> h = new HashSet<>(Arrays.asList(\"a\", \"b\")); \nSet<E> h = new HashSet<E>();\nHashSet<String> h = new HashSet<String>();\n",
    "reg_date": "2021-10-12T12:04:34.000Z"
  },
  {
    "id": 2402,
    "keyword": null,
    "link": null,
    "title": " java create txt file",
    "description": "import java.io.FileWriter;   // Import the FileWriter class import java.io.IOException;  // Import the IOException class to handle errors  public class WriteToFile {   public static void main(String[] args) {     try {       FileWriter myWriter = new FileWriter(\"filename.txt\");       myWriter.write(\"Files in Java might be tricky, but it is fun enough!\");       myWriter.close();       System.out.println(\"Successfully wrote to the file.\");     } catch (IOException e) {       System.out.println(\"An error occurred.\");       e.printStackTrace();     }   } }\nFile myObj = new File(\"path\"); myObj.createNewFile(); FileWriter myWriter = new FileWriter(\"path\"); myWriter.write(\"text\"); myWriter.close();\nString fileData = \"yourContent\"; FileOutputStream fos = new FileOutputStream(\"yourFile.txt\"); fos.write(fileData.getBytes()); fos.flush(); fos.close();\nFile filename = new File(filepath)\n@Test public void givenUsingJava7_whenWritingToFile_thenCorrect()    throws IOException {     String str = \"Hello\";       Path path = Paths.get(fileName);     byte[] strToBytes = str.getBytes();       Files.write(path, strToBytes);       String read = Files.readAllLines(path).get(0);     assertEquals(str, read); } \n",
    "reg_date": "2021-10-12T12:04:34.000Z"
  },
  {
    "id": 2403,
    "keyword": null,
    "link": null,
    "title": " java create unmodifiable list",
    "description": "List<Object> list = Collections.unmodifiableList(new Object());\n",
    "reg_date": "2021-10-12T12:04:34.000Z"
  },
  {
    "id": 2404,
    "keyword": null,
    "link": null,
    "title": " java create window",
    "description": "//THIS IS A FIX OF THE ONE BY FRANCY FROG //THEY FIXED THEIRS import javax.swing.JFrame;  public class example {   public static void main(String[] args){     JFrame frame = new JFrame();     frame.setSize(100,100);     frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);     frame.setTitle(\"Example Frame\");     frame.setVisible(true);   } }\nimport javax.swing.JFrame;  public class example {   public static void main(String[] args){     JFrame frame = new JFrame();     frame.setSize(100,100);     frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOES);     frame.setTitle(\"Example Frame\");     frame.setVisible(true);   } }\n//1. Create the frame. JFrame frame = new JFrame(\"FrameDemo\");  //2. Optional: What happens when the frame closes? frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);  //3. Create components and put them in the frame. //...create emptyLabel... frame.getContentPane().add(emptyLabel, BorderLayout.CENTER);  //4. Size the frame. frame.pack();  //5. Show it. frame.setVisible(true);\n",
    "reg_date": "2021-10-12T12:04:35.000Z"
  },
  {
    "id": 2405,
    "keyword": null,
    "link": null,
    "title": " java create xml",
    "description": "Create a DocumentBuilder instance. Create a Document from the above DocumentBuilder . Create the elements you want using the Element class and its appendChild method. Create a new Transformer instance and a new DOMSource instance. Create a new StreamResult to the output stream you want to use\n",
    "reg_date": "2021-10-12T12:04:35.000Z"
  },
  {
    "id": 2406,
    "keyword": null,
    "link": null,
    "title": " java currency formatter hackerrank solution",
    "description": "import java.util.Scanner; import java.text.NumberFormat; import java.util.Locale;  public class Solution {          public static void main(String[] args) {         /* Read input */         Scanner scanner = new Scanner(System.in);         double payment = scanner.nextDouble();         scanner.close();          /* Create custom Locale for India.            I used the \"IANA Language Subtag Registry\" to find India's country code */         Locale indiaLocale = new Locale(\"en\", \"IN\");          /* Create NumberFormats using Locales */         NumberFormat us     = NumberFormat.getCurrencyInstance(Locale.US);         NumberFormat india  = NumberFormat.getCurrencyInstance(indiaLocale);         NumberFormat china  = NumberFormat.getCurrencyInstance(Locale.CHINA);         NumberFormat france = NumberFormat.getCurrencyInstance(Locale.FRANCE);          /* Print output */                 System.out.println(\"US: \"     + us.format(payment));         System.out.println(\"India: \"  + india.format(payment));         System.out.println(\"China: \"  + china.format(payment));         System.out.println(\"France: \" + france.format(payment));     } }\n",
    "reg_date": "2021-10-12T12:04:35.000Z"
  },
  {
    "id": 2407,
    "keyword": null,
    "link": null,
    "title": " java custom color",
    "description": "Color customColor = new Color(235, 35, 123);\n",
    "reg_date": "2021-10-12T12:04:35.000Z"
  },
  {
    "id": 2408,
    "keyword": null,
    "link": null,
    "title": " java d'intervalle de resultat",
    "description": "/** *   @author TTGamer */   public class Program {     static Scanner scanne = new Scanner(System.in);     public static ArrayList<Article> articles = new ArrayList();       public static void main(String[] args)     {         do{             //searchByIntervalle             System.out.println(\"\\n----------------------------------------\\n\"                         + \"Bienvenue dans l'intervalle de prix\\n\"                         + \"----------------------------------------\\n\");             System.out.print(\"Veuillez saisir un prix minimum\\n> \");             int prixMin = scanne.nextInt();             System.out.println(\"Veuillez saisir un prix maximum\\n> \");             int prixMax = scanne.nextInt();             Program.searchByIntervalle(prixMin, prixMax);               // Demmamde a l'utilisateur si il veut continuer             System.out.print(\"\\nVoulez-vous continuer le programme ?(oui/non)\\n> \");             repBoucle = scanne.next();             if (repBoucle.equals(\"oui\"))             {                 boucle = true;             }             System.out.println(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");         } while (boucle == true)     }         // Methode in build     protected static void searchByIntervalle(int prixMin, int prixMax) {         articles.forEach((article) -> {             if (prixMin >= 0 && prixMax <= 6000) {                 System.out.println(\"\\nArticle correspondant &agrave; votre recherche :\");                 System.out.println(\" - Id : \" + article.getId());                 System.out.println(\" - Nom : \" + article.getName());                 System.out.println(\" - Prix : \" + article.getPrix());                 System.out.println(\" - Stock : \" + article.getStock());             } else {                 System.err.println(\"----------------------------------------\\n\"                                 + \"Aucun article trouv&eacute; !\\n\"                                 + \"----------------------------------------\");             }         });     } }     // class article /**  *  * @author TTGamer  */ public class Article {       private int id;     private String name;     private int prix;     private int stock;       public Article(int id, String name, int prix, int stock) {         this.id = id;         this.name = name;         this.prix = prix;         this.stock = stock;     }       protected int getId() {         return this.id;     }       protected void setId(int id) {         this.id = id;     }       protected String getName() {         return this.name;     }       protected void setName(String name) {         this.name = name;     }       protected int getPrix() {         return this.prix;     }       protected void setPrix(int prix) {         this.prix = prix;     }       protected int getStock() {         return this.stock;     }       protected void setStock(int stock) {         this.stock = stock;     }   }\n",
    "reg_date": "2021-10-12T12:04:35.000Z"
  },
  {
    "id": 2409,
    "keyword": null,
    "link": null,
    "title": " java date add hours",
    "description": "LocalDateTime dateTime=LocalDateTime.now();//or whatever dateTime.addHours(2);\n",
    "reg_date": "2021-10-12T12:04:35.000Z"
  },
  {
    "id": 2410,
    "keyword": null,
    "link": null,
    "title": " java date format with timezone",
    "description": "SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\", Locale.getDefault());     simpleDateFormat .format(new Date()); \n",
    "reg_date": "2021-10-12T12:04:35.000Z"
  },
  {
    "id": 2411,
    "keyword": null,
    "link": null,
    "title": " java date time",
    "description": "import java.time.format.DateTimeFormatter; import java.time.LocalDateTime;   public class CurrentDateTimeExample1 {     public static void main(String[] args) {      DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm:ss\");    LocalDateTime now = LocalDateTime.now();    System.out.println(dtf.format(now));   }   }   \nimport java.time.LocalTime; // import the LocalTime class ... // To display the current time (hour, minute, second, and nanoseconds) LocalTime time = LocalTime.now(); System.out.println(time); // 11:04:57.416546\n",
    "reg_date": "2021-10-12T12:04:35.000Z"
  },
  {
    "id": 2412,
    "keyword": null,
    "link": null,
    "title": " java date to string",
    "description": "    Date date = Calendar.getInstance().getTime();       DateFormat dateFormat = new SimpleDateFormat(\"yyyy-mm-dd hh:mm:ss\");       String strDate = dateFormat.format(date);  \n// java convert date to string import java.util.Date; import java.text.SimpleDateFormat; public class DateToStringDemo {    public static void main(String[] args)    {       Date dt = new Date();       SimpleDateFormat sdf = new SimpleDateFormat(\"MM/dd/yyyy\");       String strDate = sdf.format(dt);       System.out.println(\"Date format - MM/dd/yyyy to string is : \" + strDate);       sdf = new SimpleDateFormat(\"dd-M-yyyy hh:mm:ss\");       strDate = sdf.format(dt);       System.out.println(\"Date format - dd-M-yyyy hh:mm:ss to string is : \" + strDate);       sdf = new SimpleDateFormat(\"dd MMMM yyyy\");       strDate = sdf.format(dt);       System.out.println(\"Date format - dd MMMM yyyy to string is : \" + strDate);       sdf = new SimpleDateFormat(\"dd MMMM yyyy zzzz\");       strDate = sdf.format(dt);       System.out.println(\"Date format - dd MMMM yyyy zzzz to string is : \" + strDate);       sdf = new SimpleDateFormat(\"E, dd MMM yyyy HH:mm:ss z\");       strDate = sdf.format(dt);       System.out.println(\"Date format - E, dd MMM yyyy HH:mm:ss z to string is : \" + strDate);    } }\nFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\"); String s = formatter.format(date);\nSimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");   try {       Date date = new Date();       String dateTime = dateFormat.format(date);     System.out.println(\"Current Date Time : \" + dateTime);  } catch (ParseException e) {     e.printStackTrace();   } \n",
    "reg_date": "2021-10-12T12:04:35.000Z"
  },
  {
    "id": 2413,
    "keyword": null,
    "link": null,
    "title": " java date to string yyyy-mm-dd",
    "description": "java.util.Date date = new Date(\"Sat Dec 01 00:00:00 GMT 2012\"); SimpleDateFormat formatter = new SimpleDateFormat(\"yyyy-MM-dd\"); String format = formatter.format(date); System.out.println(format); \n",
    "reg_date": "2021-10-12T12:04:35.000Z"
  },
  {
    "id": 2414,
    "keyword": null,
    "link": null,
    "title": " java date with T",
    "description": "SimpleDateFormat format = new SimpleDateFormat(     \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", Locale.US); format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n",
    "reg_date": "2021-10-12T12:04:36.000Z"
  },
  {
    "id": 2415,
    "keyword": null,
    "link": null,
    "title": " java days between two localdate",
    "description": "LocalDate dateBefore; LocalDate dateAfter; long daysBetween = DAYS.between(dateBefore, dateAfter); \n",
    "reg_date": "2021-10-12T12:04:36.000Z"
  },
  {
    "id": 2416,
    "keyword": null,
    "link": null,
    "title": " java decimal to hexa",
    "description": "Integer.toHexString()\npublic class DecimalToHexExample2{     public static String toHex(int decimal){          int rem;        String hex=\"\";         char hexchars[]={'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};       while(decimal>0)        {          rem=decimal\u0016;           hex=hexchars[rem]+hex;           decimal=decimal/16;        }       return hex;   }     public static void main(String args[]){            System.out.println(\"Hexadecimal of 10 is: \"+toHex(10));        System.out.println(\"Hexadecimal of 15 is: \"+toHex(15));        System.out.println(\"Hexadecimal of 289 is: \"+toHex(289));   }} \nimport java.util.Scanner; public class DecimalToHexaExample  {    public static void main(String[] args)     {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter decimal number: \");       int decimal = sc.nextInt();       String strHexadecimal = \"\";       while(decimal != 0)       {          int hexNumber = decimal % 16;          char charHex;          if(hexNumber <= 9 && hexNumber >= 0)          {             charHex = (char)(hexNumber + '0');          }          else          {             charHex = (char)(hexNumber - 10 + 'A');          }          strHexadecimal = charHex + strHexadecimal;          decimal = decimal / 16;       }       System.out.println(\"Hexadecimal number: \" + strHexadecimal);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:04:36.000Z"
  },
  {
    "id": 2417,
    "keyword": null,
    "link": null,
    "title": " java decimalformat",
    "description": "import java.text.DecimalFormat;\n  package org.arpit.java2blog;   public class StringFromatformatDouble {       public static void main(String[] args) {         double d = 2.456534;         System.out.println(\"Double upto 2 decimal places: \"+String.format(\"%.2f\",d));     } }   \nString pattern = \"###,###.###\"; DecimalFormat decimalFormat = new DecimalFormat(pattern); \nprintf(%.2f);\n",
    "reg_date": "2021-10-12T12:04:36.000Z"
  },
  {
    "id": 2418,
    "keyword": null,
    "link": null,
    "title": " java declare an int inside an if statement",
    "description": "int v; // separate declaration if((v = someMethod()) != 0) return true;\n",
    "reg_date": "2021-10-12T12:04:36.000Z"
  },
  {
    "id": 2419,
    "keyword": null,
    "link": null,
    "title": " java declare array of floats",
    "description": "//To declare and initialize array of float in Java use following float array[] = new float[]{1,2,3};\n",
    "reg_date": "2021-10-12T12:04:36.000Z"
  },
  {
    "id": 2420,
    "keyword": null,
    "link": null,
    "title": " java declare arraylist with int values",
    "description": "ArrayList<Integer> numbers = new ArrayList<>(Arrays. asList(1, 2, 3, 4, 5, 6));\n",
    "reg_date": "2021-10-12T12:04:36.000Z"
  },
  {
    "id": 2421,
    "keyword": null,
    "link": null,
    "title": " java decompiler",
    "description": "Tools for mac: 1- http://www.javadecompilers.com/ 2- http://java-decompiler.github.io/  In terminal: add permitions chmod u+x d2j_invoke.sh chmod u+x d2j-dex2jar.sh  Create java class in terminal sh d2j-dex2jar.sh classes.dex\n",
    "reg_date": "2021-10-12T12:04:36.000Z"
  },
  {
    "id": 2422,
    "keyword": null,
    "link": null,
    "title": " java default values",
    "description": "No, the structure you found is how Java handles it (that is, with overloading instead of default parameters).  For constructors, See Effective Java: Programming Language Guide's Item 1 tip (Consider static factory methods instead of constructors) if the overloading is getting complicated. For other methods, renaming some cases or using a parameter object can help. This is when you have enough complexity that differentiating is difficult. A definite case is where you have to differentiate using the order of parameters, not just number and type.\n",
    "reg_date": "2021-10-12T12:04:36.000Z"
  },
  {
    "id": 2423,
    "keyword": null,
    "link": null,
    "title": " java define custom exception",
    "description": "public class CustomException extends Exception {      public CustomException(String errorMessage) {         super(errorMessage);     } }\n",
    "reg_date": "2021-10-12T12:04:36.000Z"
  },
  {
    "id": 2424,
    "keyword": null,
    "link": null,
    "title": " java define empty string list",
    "description": "ArrayList<String> list = Collections.<String>emptyList();\n",
    "reg_date": "2021-10-12T12:04:37.000Z"
  },
  {
    "id": 2425,
    "keyword": null,
    "link": null,
    "title": " java define main function",
    "description": "public class Program {   public static void main(String[] args){     System.out.println(\"Hello, World!\");   } }\n",
    "reg_date": "2021-10-12T12:04:37.000Z"
  },
  {
    "id": 2426,
    "keyword": null,
    "link": null,
    "title": " java delay",
    "description": "Syntax : ========================================================= \tThread.sleep(1000); // 1000 milliseconds..          | ========================================================= int i=0; for(;;){ \tThread.sleep(2000); // set time delay to 2 seconds..    \tSystem.out.println(i++); // output : every output will display after 2 seconds..   \t }\nSystem.out.println(\"Hi\"); //Now it will pause try{   Thread.sleep(5000)//Time in milliseconds->5000==5 seconds    //^freezes whole program for amount of time   System.out.println(\"Hola\");//Appears after 5 seconds } catch(InterruptedException e){   System.err.println(e.getMessage()); }\nnew java.util.Timer().schedule(          new java.util.TimerTask() {             @Override             public void run() {                 // your code here             }         },          5000  );\n",
    "reg_date": "2021-10-12T12:04:37.000Z"
  },
  {
    "id": 2427,
    "keyword": null,
    "link": null,
    "title": " java delete directory",
    "description": "// delete a directory in java using recursion or recursively import java.io.File; public class DeleteDirectoryRecursively {    public static void main(String[] args)    {       String strFolder = \"B:\\New folder\";       //delete folder recursively       deleteRecursive(new File(strFolder));    }    public static void deleteRecursive(File fl)    {       if(!fl.exists())          return;       // if directory call recursively       if(fl.isDirectory())       {          for(File file : fl.listFiles())          {             // recursive call             deleteRecursive(file);          }       }       // delete files and empty directory       fl.delete();       System.out.println(\"Deleted file/directory: \" + fl.getAbsolutePath());    } }\nboolean deleteDirectory(File directoryToBeDeleted) {     File[] allContents = directoryToBeDeleted.listFiles();     if (allContents != null) {         for (File file : allContents) {             deleteDirectory(file);         }     }     return directoryToBeDeleted.delete(); }\n",
    "reg_date": "2021-10-12T12:04:37.000Z"
  },
  {
    "id": 2428,
    "keyword": null,
    "link": null,
    "title": " java delete file",
    "description": "File file = new File(\"filepath\"); file.delete(); //Returns boolean\n// java delete file import java.io.File; public class JavaDeleteFile {    public static void main(String[] args)     {       try       {                   File file = new File(\"E:\\\\example.txt\");            if(file.delete())            {             System.out.println(file.getName() + \" file deleted.\");            }          else            {               System.out.println(\"failed\");            }       }         catch(Exception ex)         {            ex.printStackTrace();         }    } }\n",
    "reg_date": "2021-10-12T12:04:37.000Z"
  },
  {
    "id": 2429,
    "keyword": null,
    "link": null,
    "title": " java deserialize json",
    "description": "private Car parseCar(JsonNode node) {         Car car;         ObjectMapper mapper = new ObjectMapper();         SimpleModule module = new SimpleModule().addDeserializer(Car.class, new CarDeserializer());         mapper.registerModule(module);         organization = mapper.convertValue(node, Car.class);         return car; }  //deserializer class public class CarDeserializer extends StdDeserializer<Car> {      public CarDeserializer() {         super(Car.class);     }      @Override     public Car deserialize(JsonParser jsonParser, DeserializationContext deserializationContext) throws IOException {         ObjectMapper objectMapper = new ObjectMapper();         objectMapper.registerModule(new JodaModule());          Car car = new Car();         car.setName(getValueAsText(root, \"carName\"));         car.setDoorCount(getValueAsInt(root,\"doorCount\"));         car.setColor(getValueAsText(root,\"color\")); \t\tcar.setType(getValueAsText(root,\"type\"));          return car;     }  }\npublic class someClass { //your lcode and logic... ObjectMapper mapper = new ObjectMapper(); SimpleModule module = new SimpleModule(); module.addSerializer(MyAwesomeClass.class, new MyAwesomeSerializer()); mapper.registerModule(module);  jsonNode = mapper.convertValue(myAwesomeObject, JsonNode.class); //... your code and logic }   //serializer class public class MyAwesomeSerializer extends StdSerializer<MyAwesomeClass> {      public MyAwesomeSerializer() {         super(MyAwesomeClass.class);     }      @Override     public void serialize(MyAwesomeClass myAwesomeClass, JsonGenerator jgen, SerializerProvider provider) throws IOException {         ObjectMapper mapper = new ObjectMapper();          jgen.writeStartObject();         jgen.writeStringField(\"name\", myAwesomeClass.getName());         jgen.writeStringField(\"age\", myAwesomeClass.getAge());            jgen.writeArrayFieldStart(\"hobbies\");           for (Hobby hobby : myAwesomeClass.getHobbies()) {               jgen.writeObject(mapper.convertValue(hobby, JsonNode.class));           }           jgen.writeEndArray();                jgen.writeEndObject();     }  }\n",
    "reg_date": "2021-10-12T12:04:37.000Z"
  },
  {
    "id": 2430,
    "keyword": null,
    "link": null,
    "title": " java deserializer",
    "description": "private Car parseCar(JsonNode node) {         Car car;         ObjectMapper mapper = new ObjectMapper();         SimpleModule module = new SimpleModule().addDeserializer(Car.class, new CarDeserializer());         mapper.registerModule(module);         organization = mapper.convertValue(node, Car.class);         return car; }  //deserializer class public class CarDeserializer extends StdDeserializer<Car> {      public CarDeserializer() {         super(Car.class);     }      @Override     public Car deserialize(JsonParser jsonParser, DeserializationContext deserializationContext) throws IOException {         ObjectMapper objectMapper = new ObjectMapper();         objectMapper.registerModule(new JodaModule());          Car car = new Car();         car.setName(getValueAsText(root, \"carName\"));         car.setDoorCount(getValueAsInt(root,\"doorCount\"));         car.setColor(getValueAsText(root,\"color\")); \t\tcar.setType(getValueAsText(root,\"type\"));          return car;     }  }\npackage net.sghill.example;  import net.sghill.example.User; import org.codehaus.jackson.JsonNode; import org.codehaus.jackson.JsonParser; import org.codehaus.jackson.ObjectCodec; import org.codehaus.jackson.map.DeserializationContext; import org.codehaus.jackson.map.JsonDeserializer;  import java.io.IOException;  public class UserDeserializer extends JsonDeserializer<User> {      @Override     public User deserialize(JsonParser jsonParser, DeserializationContext deserializationContext) throws IOException {         ObjectCodec oc = jsonParser.getCodec();         JsonNode node = oc.readTree(jsonParser);         return new User(null, node.get(\"username\").getTextValue(), node.get(\"password\").getTextValue());     } }\n",
    "reg_date": "2021-10-12T12:04:37.000Z"
  },
  {
    "id": 2431,
    "keyword": null,
    "link": null,
    "title": " java detect folder or file",
    "description": "File file = new File(path);  boolean exists =      file.exists();      // Check if the file exists boolean isDirectory = file.isDirectory(); // Check if it's a directory boolean isFile =      file.isFile();      // Check if it's a regular file\n",
    "reg_date": "2021-10-12T12:04:37.000Z"
  },
  {
    "id": 2432,
    "keyword": null,
    "link": null,
    "title": " java detect new line in string",
    "description": "String word = \"A string \\n with a new Line inside\" String newline = System.getProperty(\"line.separator\"); boolean hasNewline = word.contains(newline); if(hasNewLine){ \tSystem.out.println(\"Enter has been pressed\"); }\n",
    "reg_date": "2021-10-12T12:04:37.000Z"
  },
  {
    "id": 2433,
    "keyword": null,
    "link": null,
    "title": " java dictionary",
    "description": "Map<String, String> dictionary = new HashMap<String, String>();  dictionary.put(\"key\", \"value\"); String value = dictionary.get(\"key\");\nMap<String, String> map = new HashMap<String, String>(); map.put(\"dog\", \"type of animal\"); System.out.println(map.get(\"dog\"));\n",
    "reg_date": "2021-10-12T12:04:37.000Z"
  },
  {
    "id": 2434,
    "keyword": null,
    "link": null,
    "title": " java difference ++i and i++ loop",
    "description": "//no difference in a loop. for (int i = 0; i < 100; i++) { }  for (int i = 0; i < 100; ++i) { } //however when doing: int a = 0; int b = a++; // b = 0; a = 1  a = 0; b = ++a; // b = 1; a = 1 \n",
    "reg_date": "2021-10-12T12:04:38.000Z"
  },
  {
    "id": 2435,
    "keyword": null,
    "link": null,
    "title": " java difference between array and list",
    "description": "In general (and in Java) an array is a data structure generally consisting of sequential memory storing a collection of objects.  List is an interface in Java, which means that it may have multiple implementations. One of these implementations is ArrayList, which is a class that implements the behavior of the List interface using arrays as the data structure.\n",
    "reg_date": "2021-10-12T12:04:38.000Z"
  },
  {
    "id": 2436,
    "keyword": null,
    "link": null,
    "title": " java discord bot get id of message it just sent",
    "description": "channel.sendMessage(content).queue((message) -> {     long messageId = message.getIdLong();     // use messageId here });\n",
    "reg_date": "2021-10-12T12:04:38.000Z"
  },
  {
    "id": 2437,
    "keyword": null,
    "link": null,
    "title": " java display message",
    "description": "alert('Message');\n",
    "reg_date": "2021-10-12T12:04:38.000Z"
  },
  {
    "id": 2438,
    "keyword": null,
    "link": null,
    "title": " java divisible by operator",
    "description": "boolean isDivisibleBy20 = number % 20 == 0;\n",
    "reg_date": "2021-10-12T12:04:38.000Z"
  },
  {
    "id": 2439,
    "keyword": null,
    "link": null,
    "title": " java djikstra's algorithm",
    "description": "import java.util.*;  public class DPQ {      private int dist[];      private Set<Integer> settled;      private PriorityQueue<Node> pq;      private int V; // Number of vertices      List<List<Node> > adj;         public DPQ(int V)      {          this.V = V;          dist = new int[V];          settled = new HashSet<Integer>();          pq = new PriorityQueue<Node>(V, new Node());      }         // Function for Dijkstra's Algorithm      public void dijkstra(List<List<Node> > adj, int src)      {          this.adj = adj;             for (int i = 0; i < V; i++)              dist[i] = Integer.MAX_VALUE;             // Add source node to the priority queue          pq.add(new Node(src, 0));             // Distance to the source is 0          dist[src] = 0;          while (settled.size() != V) {                 // remove the minimum distance node               // from the priority queue               int u = pq.remove().node;                 // adding the node whose distance is              // finalized              settled.add(u);                 e_Neighbours(u);          }      }         // Function to process all the neighbours       // of the passed node      private void e_Neighbours(int u)      {          int edgeDistance = -1;          int newDistance = -1;             // All the neighbors of v          for (int i = 0; i < adj.get(u).size(); i++) {              Node v = adj.get(u).get(i);                 // If current node hasn't already been processed              if (!settled.contains(v.node)) {                  edgeDistance = v.cost;                  newDistance = dist[u] + edgeDistance;                     // If new distance is cheaper in cost                  if (newDistance < dist[v.node])                      dist[v.node] = newDistance;                     // Add the current node to the queue                  pq.add(new Node(v.node, dist[v.node]));              }          }      }         // Driver code      public static void main(String arg[])      {          int V = 5;          int source = 0;             // Adjacency list representation of the           // connected edges          List<List<Node> > adj = new ArrayList<List<Node> >();             // Initialize list for every node          for (int i = 0; i < V; i++) {              List<Node> item = new ArrayList<Node>();              adj.add(item);          }             // Inputs for the DPQ graph          adj.get(0).add(new Node(1, 9));          adj.get(0).add(new Node(2, 6));          adj.get(0).add(new Node(3, 5));          adj.get(0).add(new Node(4, 3));             adj.get(2).add(new Node(1, 2));          adj.get(2).add(new Node(3, 4));             // Calculate the single source shortest path          DPQ dpq = new DPQ(V);          dpq.dijkstra(adj, source);             // Print the shortest path to all the nodes          // from the source node          System.out.println(\"The shorted path from node :\");          for (int i = 0; i < dpq.dist.length; i++)              System.out.println(source + \" to \" + i + \" is \"                                + dpq.dist[i]);      }  }     // Class to represent a node in the graph  class Node implements Comparator<Node> {      public int node;      public int cost;         public Node()      {      }         public Node(int node, int cost)      {          this.node = node;          this.cost = cost;      }         @Override     public int compare(Node node1, Node node2)      {          if (node1.cost < node2.cost)              return -1;          if (node1.cost > node2.cost)              return 1;          return 0;      }  }  \n",
    "reg_date": "2021-10-12T12:04:38.000Z"
  },
  {
    "id": 2440,
    "keyword": null,
    "link": null,
    "title": " java do something after x seconds without stopping everything else",
    "description": "new java.util.Timer().schedule(          new java.util.TimerTask() {             @Override             public void run() {                 // your code here             }         },          5000  );\n",
    "reg_date": "2021-10-12T12:04:38.000Z"
  },
  {
    "id": 2441,
    "keyword": null,
    "link": null,
    "title": " java do while",
    "description": "do { \t// loop content } while (/* condition */);\n// Java infinite while loop import java.util.*; public class WhileLoopExample {    public static void main(String[] args)    {       boolean value = true;       while(value)       {          System.out.println(\"Infinite loop\");       }    } }\npublic class WhileLoopDemo {    public static void main(String args[])    {       int a = 1;       while(a < 10)       {          System.out.println(a);          a++;          System.out.print(\"\\n\");       }    } }\ndo {   //something you want to execute at least once } while (someBooleanCondition); \nA while loop iterates a block of statements until condition is true. In a  while loop condition is executed first. Syntax:  while(condition) {    // code goes here }\n//do-while loop   int i=1;   do{   System.out.println(i);   i++;   }while(i<=10);  \n",
    "reg_date": "2021-10-12T12:04:38.000Z"
  },
  {
    "id": 2442,
    "keyword": null,
    "link": null,
    "title": " java do while schleife",
    "description": "int i = 0;  do{ \ti++; \tSystem.out.println(i); }while(int i < 9);\nint i = 0;  while(i < 9){   i++;   System.out.println(i); }\n",
    "reg_date": "2021-10-12T12:04:38.000Z"
  },
  {
    "id": 2443,
    "keyword": null,
    "link": null,
    "title": " java doreturn void",
    "description": "doNothing().when(yourMock).yourMockedMethod();\n",
    "reg_date": "2021-10-12T12:04:38.000Z"
  },
  {
    "id": 2444,
    "keyword": null,
    "link": null,
    "title": " java double 2 decimal",
    "description": "String result = String.format(\"%.2f\", value);\npackage com.mkyong;  import java.math.RoundingMode; import java.text.DecimalFormat;  public class DecimalExample {      private static DecimalFormat df2 = new DecimalFormat(\"#.##\");      public static void main(String[] args) {          double input = 3.14159265359;         System.out.println(\"double : \" + input);         System.out.println(\"double : \" + df2.format(input));    //3.14          // DecimalFormat, default is RoundingMode.HALF_EVEN         df2.setRoundingMode(RoundingMode.DOWN);         System.out.println(\"\\ndouble : \" + df2.format(input));  //3.14          df2.setRoundingMode(RoundingMode.UP);         System.out.println(\"double : \" + df2.format(input));    //3.15      }  } Copy\ndouble res = Math.round(a * 100) / 100;\n",
    "reg_date": "2021-10-12T12:04:39.000Z"
  },
  {
    "id": 2445,
    "keyword": null,
    "link": null,
    "title": " java double format",
    "description": "NumberFormat formatter = new DecimalFormat(\"#0.00\");      System.out.println(formatter.format(4.0));\nDecimalFormat df = new DecimalFormat(\"#.00\"); \n",
    "reg_date": "2021-10-12T12:04:39.000Z"
  },
  {
    "id": 2446,
    "keyword": null,
    "link": null,
    "title": " java double to float",
    "description": "double d = getInfoValueNumeric(); float f = (float)d;\n",
    "reg_date": "2021-10-12T12:04:39.000Z"
  },
  {
    "id": 2447,
    "keyword": null,
    "link": null,
    "title": " java double to long",
    "description": "long num = Double.valueOf(d).longValue()\nLong l = new Long(15552451L); double d = l.doubleValue();\n",
    "reg_date": "2021-10-12T12:04:39.000Z"
  },
  {
    "id": 2448,
    "keyword": null,
    "link": null,
    "title": " java double to string with 2 decimals",
    "description": "package com.mkyong;  import java.math.RoundingMode; import java.text.DecimalFormat;  public class DecimalExample {      private static DecimalFormat df2 = new DecimalFormat(\"#.##\");      public static void main(String[] args) {          double input = 3.14159265359;         System.out.println(\"double : \" + input);         System.out.println(\"double : \" + df2.format(input));    //3.14          // DecimalFormat, default is RoundingMode.HALF_EVEN         df2.setRoundingMode(RoundingMode.DOWN);         System.out.println(\"\\ndouble : \" + df2.format(input));  //3.14          df2.setRoundingMode(RoundingMode.UP);         System.out.println(\"double : \" + df2.format(input));    //3.15      }  } Copy\ndouble d = 5.921763;  DecimalFormat df = new DecimalFormat(\"#.00\"); String string = df.format(d);  // string = \"5.92\"\ndouble input = 3.14159265359; System.out.format(\"double : %.2f\", input); // 3.14 System.out.println(\"double : \" + String.format(\"%.2f\", input)); // 3.14\nDecimalFormat df = new DecimalFormat(\"#.00\"); \ndouble res = Math.round(a * 100) / 100;\nprintf(%.2f);\n",
    "reg_date": "2021-10-12T12:04:39.000Z"
  },
  {
    "id": 2449,
    "keyword": null,
    "link": null,
    "title": " java double to string with comma",
    "description": "Double.parseDouble(p.replace(',','.')) \nNumberFormat format = NumberFormat.getInstance(Locale.FRANCE); Number number = format.parse(\"1,234\"); double d = number.doubleValue(); \nNumberFormat format = NumberFormat.getInstance(Locale.getDefault()); \n",
    "reg_date": "2021-10-12T12:04:39.000Z"
  },
  {
    "id": 2450,
    "keyword": null,
    "link": null,
    "title": " java download file",
    "description": "InputStream in = new URL(FILE_URL).openStream(); Files.copy(in, Paths.get(FILE_NAME), StandardCopyOption.REPLACE_EXISTING);\ntry (BufferedInputStream in = new BufferedInputStream(new URL(FILE_URL).openStream());  FileOutputStream fileOutputStream = new FileOutputStream(FILE_NAME)) {    byte dataBuffer[] = new byte[1024];    int bytesRead;    while ((bytesRead = in.read(dataBuffer, 0, 1024)) != -1) {        fileOutputStream.write(dataBuffer, 0, bytesRead);    }} catch (IOException e) {    // handle exception}\nInputStream in = new URL(FILE_URL).openStream();Files.copy(in, Paths.get(FILE_NAME), StandardCopyOption.REPLACE_EXISTING);\n",
    "reg_date": "2021-10-12T12:04:39.000Z"
  },
  {
    "id": 2451,
    "keyword": null,
    "link": null,
    "title": " java download file from url",
    "description": "try (BufferedInputStream in = new BufferedInputStream(new URL(FILE_URL).openStream());  FileOutputStream fileOutputStream = new FileOutputStream(FILE_NAME)) {    byte dataBuffer[] = new byte[1024];    int bytesRead;    while ((bytesRead = in.read(dataBuffer, 0, 1024)) != -1) {        fileOutputStream.write(dataBuffer, 0, bytesRead);    }} catch (IOException e) {    // handle exception}\nInputStream in = new URL(FILE_URL).openStream();Files.copy(in, Paths.get(FILE_NAME), StandardCopyOption.REPLACE_EXISTING);\npublic static String URLReader(URL url) throws IOException {     StringBuilder sb = new StringBuilder();     String line;       InputStream in = url.openStream();     try {         BufferedReader reader = new BufferedReader(new InputStreamReader(in));         while ((line = reader.readLine()) != null) {             sb.append(line).append(System.lineSeparator());         }     } finally {         in.close();     }       return sb.toString(); } \n",
    "reg_date": "2021-10-12T12:04:39.000Z"
  },
  {
    "id": 2452,
    "keyword": null,
    "link": null,
    "title": " java download file from url to string",
    "description": "public static String URLReader(URL url) throws IOException {     StringBuilder sb = new StringBuilder();     String line;       InputStream in = url.openStream();     try {         BufferedReader reader = new BufferedReader(new InputStreamReader(in));         while ((line = reader.readLine()) != null) {             sb.append(line).append(System.lineSeparator());         }     } finally {         in.close();     }       return sb.toString(); } \n",
    "reg_date": "2021-10-12T12:04:39.000Z"
  },
  {
    "id": 2453,
    "keyword": null,
    "link": null,
    "title": " java download image file",
    "description": " URL url = new URL(\"http://www.yahoo.com/image_to_read.jpg\"); InputStream in = new BufferedInputStream(url.openStream()); ByteArrayOutputStream out = new ByteArrayOutputStream(); byte[] buf = new byte[1024]; int n = 0; while (-1!=(n=in.read(buf))) {    out.write(buf, 0, n); } out.close(); in.close(); byte[] response = out.toByteArray(); \n(throws IOException)  Image image = null; try {     URL url = new URL(\"http://www.yahoo.com/image_to_read.jpg\");     image = ImageIO.read(url); } catch (IOException e) { } \nURL url = new URL(\"http://upload.wikimedia.org/wikipedia/commons/9/9c/Image-Porkeri_001.jpg\"); InputStream in = new BufferedInputStream(url.openStream()); OutputStream out = new BufferedOutputStream(new FileOutputStream(\"Image-Porkeri_001.jpg\"));  for ( int i; (i = in.read()) != -1; ) {     out.write(i); } in.close(); out.close(); \n",
    "reg_date": "2021-10-12T12:04:39.000Z"
  },
  {
    "id": 2454,
    "keyword": null,
    "link": null,
    "title": " java dropdown menu",
    "description": "// You're probably looking for a \"JComboBox\"\n",
    "reg_date": "2021-10-12T12:04:39.000Z"
  },
  {
    "id": 2455,
    "keyword": null,
    "link": null,
    "title": " java eclipse console clear",
    "description": "for (int i = 0; i < 50; ++i) System.out.println(); \n",
    "reg_date": "2021-10-12T12:04:40.000Z"
  },
  {
    "id": 2456,
    "keyword": null,
    "link": null,
    "title": " java ee check if session exists or is new",
    "description": "if(session.getAttribute(\"foo\") == null){   // Session does not exist (Actually, the attribute just isn't set, but it works) }else{   // Session does exist }\n",
    "reg_date": "2021-10-12T12:04:40.000Z"
  },
  {
    "id": 2457,
    "keyword": null,
    "link": null,
    "title": " java elevate to power",
    "description": "Math.pow(double a, double b)\n",
    "reg_date": "2021-10-12T12:04:40.000Z"
  },
  {
    "id": 2458,
    "keyword": null,
    "link": null,
    "title": " java eliminate numbers from string",
    "description": "firstname1 = firstname1.replaceAll(\"[0-9]\",\"\"); \n",
    "reg_date": "2021-10-12T12:04:40.000Z"
  },
  {
    "id": 2459,
    "keyword": null,
    "link": null,
    "title": " java else if statements",
    "description": "System.out.println(\"How many sattelites does JUPITER have ??\"); \t\tC = scan.nextInt(); \t\t \t\tif (C == 79) \t\t{ \t\t\tSystem.out.println(\"Congrats ! You got the Third  Question Right :)\"); \t\t\tpoints = points + 1; \t\t} \t\t \t\telse if (C != 79) \t\t{ \t\t\tSystem.out.println(\"Sorry but your answer is wrong :(\"); \t\t}\n import java.io.*;     class GFG {      public static void main(String[] args)      {          // initializing expression          int i = 20;             // condition 1          if (i == 10)              System.out.println(\"i is 10\\n\");             // condition 2          else if (i == 15)              System.out.println(\"i is 15\\n\");             // condition 3          else if (i == 20)              System.out.println(\"i is 20\\n\");             else             System.out.println(\"i is not present\\n\");             System.out.println(\"Outside if-else-if\");      }  } \n",
    "reg_date": "2021-10-12T12:04:40.000Z"
  },
  {
    "id": 2460,
    "keyword": null,
    "link": null,
    "title": " java empty a combobox",
    "description": "combobox.removeAllItems();\n",
    "reg_date": "2021-10-12T12:04:40.000Z"
  },
  {
    "id": 2461,
    "keyword": null,
    "link": null,
    "title": " java empty array",
    "description": "if (myArray == null || myArray.length == 0) { }\nint[] numbers = new int[5]; /* Empty array of type int and size 5 */ String[] names = new String[10]; /* Empty array of type string and size 10 */\nArrayList<Class> myList = new ArrayList<Class>();\n//where n is the length you want the array to be // for integer array int[] intArray = new int[n]; // for String array String[] strArray = new String[n];\nString [] names = new String[0];  // or   int [] ages = {} \npublic static void main(String args[]) {     int array[] = new int[4];     int number = 5, i = 0,j = 0;     while (i<4){         array[i]=number;         i=i+1;     }     while (j<4){         System.out.println(array[j]);         j++;     } }\n",
    "reg_date": "2021-10-12T12:04:40.000Z"
  },
  {
    "id": 2462,
    "keyword": null,
    "link": null,
    "title": " java enum",
    "description": "public enum AlertLevel { \tUndefined(0), \tOk(1), \tWarning(2), \tAlarm(3); }\npublic class DaysOfTheWeek {      public enum Days {m, t, w, r, f, sat, s};   \t    public static void main(String[] args) {           Days d = Days.t;            System.out.println(d);           //the output would be t         } }\nprivate enum VarState { \tINIT,  \tTRUE,    \tFALSE, \tUNSATISFIABLE  }\nenum Level {   LOW,   MEDIUM,   HIGH } \nEnum in Java\n",
    "reg_date": "2021-10-12T12:04:40.000Z"
  },
  {
    "id": 2463,
    "keyword": null,
    "link": null,
    "title": " java enum get nex",
    "description": "public static enum A {      X, Y, Z;     private static A[] vals = values();     public A next()     {         return vals[(this.ordinal()+1) % vals.length];     } }\n",
    "reg_date": "2021-10-12T12:04:40.000Z"
  },
  {
    "id": 2464,
    "keyword": null,
    "link": null,
    "title": " java equal method",
    "description": "In general both equals() and == operator in Java are used to compare  objects to check equality but here are some of the differences between the two:  1) .equals() and == is that one is a method and other is operator. 2) We can use == operator for reference comparison (address comparison)  and .equals() method for content comparison.   -> == checks if both objects point to the same memory location   -> .equals() evaluates to the comparison of values in the objects. 3) If a class does not override the equals method, then by default it  uses equals(Object o) method of the closest parent class  that has overridden this method.  // Java program to understand   // the concept of == operator  public class Test {      public static void main(String[] args)      {          String s1 = new String(\"HELLO\");          String s2 = new String(\"HELLO\");          System.out.println(s1 == s2);          System.out.println(s1.equals(s2));      }  }  Output: false true    Explanation: Here we are creating two (String) objects namely s1 and s2. Both s1 and s2 refers to different objects.  -> When we use == operator for s1 and s2 comparison then the result is false   as both have different addresses in memory.  -> Using equals, the result is true because its only comparing the   values given in s1 and s2.\nif(bob.equals(\"Sam\")){ // Checks if strings are equal.   // code }\n",
    "reg_date": "2021-10-12T12:04:40.000Z"
  },
  {
    "id": 2465,
    "keyword": null,
    "link": null,
    "title": " java equalsignorecase",
    "description": "public class JavaExample{    public static void main(String args[]){ \tString str1= new String(\"Apple\"); \tString str2= new String(\"MANGO\"); \tString str3= new String(\"APPLE\"); \tSystem.out.println(\"str1 equals to str2:\"+str1.equalsIgnoreCase(str2)); \tSystem.out.println(\"str1 equals to str3:\"+str1.equalsIgnoreCase(str3)); \tSystem.out.println(\"str1 equals to Welcome:\"+str1.equalsIgnoreCase(\"Welcome\")); \tSystem.out.println(\"str1 equals to Apple:\"+str1.equalsIgnoreCase(\"Apple\")); \tSystem.out.println(\"str2 equals to mango:\"+str2.equalsIgnoreCase(\"mango\"));    } }  this function doesn not differentiate caps and non caps letters.\n",
    "reg_date": "2021-10-12T12:04:41.000Z"
  },
  {
    "id": 2466,
    "keyword": null,
    "link": null,
    "title": " java escape html",
    "description": "public static String escapeHTML(String s) {     StringBuilder out = new StringBuilder(Math.max(16, s.length()));     for (int i = 0; i < s.length(); i++) {         char c = s.charAt(i);         if (c > 127 || c == '\"' || c == '\\'' || c == '<' || c == '>' || c == '&') {             out.append(\"&#\");             out.append((int) c);             out.append(';');         } else {             out.append(c);         }     }     return out.toString(); }\n",
    "reg_date": "2021-10-12T12:04:41.000Z"
  },
  {
    "id": 2467,
    "keyword": null,
    "link": null,
    "title": " java event",
    "description": "public void mouseDragged(MouseEvent e) { \tmouseX = e.getX(); \tmouseY = e.getY(); \tif (SwingUtilities.isLeftMouseButton(e)) { \t\tmouseB = 1; \t} \tif (SwingUtilities.isRightMouseButton(e)) { \t\tmouseB = 3; \t}  \tMouseDraggedEvent event = new MouseDraggedEvent(e.getX(), e.getY(), mouseB); \ttry { \t\teventListener.onEvent(event); \t} catch (Exception ex) {} }  \n",
    "reg_date": "2021-10-12T12:04:41.000Z"
  },
  {
    "id": 2468,
    "keyword": null,
    "link": null,
    "title": " java every second",
    "description": "Timer timer = new Timer(); timer.schedule(new TimerTask() {   @Override   public void run() {     //what you want to do   } }, 0, 1000);//wait 0 ms before doing the action and do it evry 1000ms (1second)  timer.cancel();//stop the timer\n",
    "reg_date": "2021-10-12T12:04:41.000Z"
  },
  {
    "id": 2469,
    "keyword": null,
    "link": null,
    "title": " java execute for cycle parallel thread",
    "description": "fooCollection.parallelStream().forEach(foo -> {   \t\t\t//DO things here             foo.count();         });  //Check exception version fooCollection.parallelStream().forEach(foo -> {   \t\t\t//DO things here   \t\t\ttry{             \tfoo.count();             }catch(Exception e){                throw new RuntimeException(e);             }         });\n",
    "reg_date": "2021-10-12T12:04:41.000Z"
  },
  {
    "id": 2470,
    "keyword": null,
    "link": null,
    "title": " java execute funtions at same time",
    "description": "new Thread(() -> [YOUR METHOD]()).start();\n",
    "reg_date": "2021-10-12T12:04:41.000Z"
  },
  {
    "id": 2471,
    "keyword": null,
    "link": null,
    "title": " java execution time",
    "description": "long start = System.currentTimeMillis(); class.method(); long time = System.currentTimeMillis() - start;\nlong startTime = System.nanoTime(); methodToTime(); long endTime = System.nanoTime();  long duration = (endTime - startTime);  //divide by 1000000 to get milliseconds.\nInstant start = Instant.now(); Thread.sleep(63553); Instant end = Instant.now(); System.out.println(Duration.between(start, end)); // prints PT1M3.553S \nlong startTime = System.nanoTime(); .....your program.... long endTime   = System.nanoTime(); long totalTime = endTime - startTime; System.out.println(totalTime); \n",
    "reg_date": "2021-10-12T12:04:41.000Z"
  },
  {
    "id": 2472,
    "keyword": null,
    "link": null,
    "title": " java exit",
    "description": "System.exit(0);\n",
    "reg_date": "2021-10-12T12:04:41.000Z"
  },
  {
    "id": 2473,
    "keyword": null,
    "link": null,
    "title": " java exit for loop",
    "description": "//Conclusion         break == jump out side the loop         continue == next loop cycle         return == return the method/end the method.              for(int i = 0; i < 5; i++) {       System.out.println(i +\"\");       if(i == 3){         break;                }     }   System.out.println(\"finish!\"); /* Output 0 1 2 3 finish! */\npublic class Test {     public static void main(String args[]) {       int [] numbers = {10, 20, 30, 40, 50};        for(int x : numbers ) {          if( x == 30 ) {             break;          }          System.out.print( x );          System.out.print(\"\\n\");       }    } }\nfor (int i = 0; i < 5; i++;) {   if(condition) {     // Do stuff   } else {     break; // Exit the loop   } } // After for loop or after break\n\t  int [] numbers = {10, 20, 30, 40, 50};       for(int x : numbers ) {          if( x == 30 ) {             break;          }          System.out.print( x );       }    } }\npublic void someMethod() {     //... a bunch of code ...     if (someCondition()) {         return; //break the funtion     }     //... otherwise do the following... }\n//how to exit loop in java while (true) {     if (obj == null) {         break;     } }\n",
    "reg_date": "2021-10-12T12:04:41.000Z"
  },
  {
    "id": 2474,
    "keyword": null,
    "link": null,
    "title": " java exponent operator",
    "description": "Math.pow(number, exponent)\nmath.pow(number, power);\n(int) Math.pow(first, second));\n",
    "reg_date": "2021-10-12T12:04:42.000Z"
  },
  {
    "id": 2475,
    "keyword": null,
    "link": null,
    "title": " java exponential",
    "description": "There is no exponential operator in Java, you will have to use Math.pow \n(int) Math.pow(first, second));\n",
    "reg_date": "2021-10-12T12:04:42.000Z"
  },
  {
    "id": 2476,
    "keyword": null,
    "link": null,
    "title": " java fast input",
    "description": "// this program gives you fast input, especially for competitive programming import java.util.*; import java.io.*;  public class PutYourClassNameHere { \tstatic BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); \tstatic StringTokenizer st;    \tpublic static void main(String[] args) throws IOException{     \t// write your code here \t}    \tstatic String next() throws IOException { \t\twhile (st == null || !st.hasMoreTokens()) \t\t\tst = new StringTokenizer(readLine()); \t\treturn st.nextToken(); \t} \tstatic long readLong() throws IOException { \t\treturn Long.parseLong(next()); \t} \tstatic int readInt() throws IOException { \t\treturn Integer.parseInt(next()); \t} \tstatic double readDouble() throws IOException { \t\treturn Double.parseDouble(next()); \t} \tstatic char readCharacter() throws IOException { \t\treturn next().charAt(0); \t} \tstatic String readLine() throws IOException { \t\treturn br.readLine().trim(); \t} }\n",
    "reg_date": "2021-10-12T12:04:42.000Z"
  },
  {
    "id": 2477,
    "keyword": null,
    "link": null,
    "title": " java fibonacci sequence without recursion",
    "description": "public class Fibonacci {      public static void main(String[] args) {          int n = 10, t1 = 0, t2 = 1;         System.out.print(\"First \" + n + \" terms: \");          for (int i = 1; i <= n; ++i)         {             System.out.print(t1 + \" + \");              int sum = t1 + t2;             t1 = t2;             t2 = sum;         }     } }\n",
    "reg_date": "2021-10-12T12:04:42.000Z"
  },
  {
    "id": 2478,
    "keyword": null,
    "link": null,
    "title": " java fibonacci series code",
    "description": "public class Fibonacci {      public static void main(String[] args) {          int n = 10, t1 = 0, t2 = 1;         System.out.print(\"First \" + n + \" terms: \");          for (int i = 1; i <= n; ++i)         {             System.out.print(t1 + \" + \");              int sum = t1 + t2;             t1 = t2;             t2 = sum;         }     } }\n// 1 2 3 5 8 13 21 34  public class Fibonacci {      public static void main(String[] args) {          int n = 10, t1 = 0, t2 = 1;         System.out.print(\"First \" + n + \" terms: \");          for (int i = 1; i <= n; ++i)         {             System.out.print(t1 + \" + \");              int sum = t1 + t2;             t1 = t2;             t2 = sum;         }     } }\n",
    "reg_date": "2021-10-12T12:04:42.000Z"
  },
  {
    "id": 2479,
    "keyword": null,
    "link": null,
    "title": " java fields",
    "description": "public class YourClass{ \tprivate int yourIntField=1337;   \tpublic static void main(String[] args){     \tSystem.out.println(yourIntField);     } }\n",
    "reg_date": "2021-10-12T12:04:42.000Z"
  },
  {
    "id": 2480,
    "keyword": null,
    "link": null,
    "title": " java file class",
    "description": "//when creating a new File(path) the path //will be from the src folder of the proj File path = new File(\"world\"); //this will give the path src/world  //also dont forget that // => /\nimport java.io.File;\n<a class=\"btn btn-primary\" data-bs-toggle=\"offcanvas\" href=\"#offcanvasExample\" role=\"button\" aria-controls=\"offcanvasExample\">   Link with href </a> <button class=\"btn btn-primary\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasExample\" aria-controls=\"offcanvasExample\">   Button with data-bs-target </button>  <div class=\"offcanvas offcanvas-start\" tabindex=\"-1\" id=\"offcanvasExample\" aria-labelledby=\"offcanvasExampleLabel\">   <div class=\"offcanvas-header\">     <h5 class=\"offcanvas-title\" id=\"offcanvasExampleLabel\">Offcanvas</h5>     <button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\"></button>   </div>   <div class=\"offcanvas-body\">     <div>       Some text as placeholder. In real life you can have the elements you have chosen. Like, text, images, lists, etc.     </div>     <div class=\"dropdown mt-3\">       <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-bs-toggle=\"dropdown\">         Dropdown button       </button>       <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">         <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>         <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>         <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>       </ul>     </div>   </div> </div>\n",
    "reg_date": "2021-10-12T12:04:42.000Z"
  },
  {
    "id": 2481,
    "keyword": null,
    "link": null,
    "title": " java file dialog",
    "description": "FileDialog fd = new FileDialog(yourJFrame, \"Choose a file\", FileDialog.LOAD); fd.setDirectory(\"C:\\\\\"); fd.setFile(\"*.xml\"); fd.setVisible(true); String filename = fd.getFile(); if (filename == null)   System.out.println(\"You cancelled the choice\"); else   System.out.println(\"You chose \" + filename);\nFileDialog fd = new FileDialog(yourJFrame, \"Choose a file\", FileDialog.LOAD); fd.setDirectory(\"C:\\\\\"); fd.setFile(\"*.xml\"); fd.setVisible(true); String filename = fd.getFile(); if (filename == null)     System.out.println(\"You cancelled the choice\"); else     System.out.println(\"You chose \" + filename);\n",
    "reg_date": "2021-10-12T12:04:42.000Z"
  },
  {
    "id": 2482,
    "keyword": null,
    "link": null,
    "title": " java file package import",
    "description": "import java.io.File;\n",
    "reg_date": "2021-10-12T12:04:43.000Z"
  },
  {
    "id": 2483,
    "keyword": null,
    "link": null,
    "title": " java file reader utf 8",
    "description": "// Java 7   BufferedReader reader = Files.newBufferedReader(path, StandardCharsets.UTF_8);    // Java 8   List<String> list = Files.readAllLines(path, StandardCharsets.UTF_8);    // Java 8   Stream<String> lines = Files.lines(path, StandardCharsets.UTF_8);    // Java 11   String s = Files.readString(path, StandardCharsets.UTF_8);\n",
    "reg_date": "2021-10-12T12:04:43.000Z"
  },
  {
    "id": 2484,
    "keyword": null,
    "link": null,
    "title": " java filedialog",
    "description": "FileDialog fd = new FileDialog(yourJFrame, \"Choose a file\", FileDialog.LOAD); fd.setDirectory(\"C:\\\\\"); fd.setFile(\"*.xml\"); fd.setVisible(true); String filename = fd.getFile(); if (filename == null)     System.out.println(\"You cancelled the choice\"); else     System.out.println(\"You chose \" + filename);\n",
    "reg_date": "2021-10-12T12:04:43.000Z"
  },
  {
    "id": 2485,
    "keyword": null,
    "link": null,
    "title": " java fileinputstream",
    "description": "InputStream pdf = // greate some input stream data try (FileOutputStream outputStream = new FileOutputStream(new File(\"/Users/kirkbrown/documents/my.pdf\"))) {  \t\t\tint read; \t\t\tbyte[] bytes = new byte[1024];  \t\t\twhile ((read = pdf.read(bytes)) != -1) { \t\t\t\toutputStream.write(bytes, 0, read); \t\t\t} \t\t}\n          try{                 FileInputStream fin=new FileInputStream(\"D:\\\\testout.txt\");                 int i=0;                 while((i=fin.read())!=-1){                  System.out.print((char)i);                 }                 fin.close();               }catch(Exception e){System.out.println(e);}   \n",
    "reg_date": "2021-10-12T12:04:43.000Z"
  },
  {
    "id": 2486,
    "keyword": null,
    "link": null,
    "title": " java filewriter new line",
    "description": "fileWriter.write(System.lineSeparator());\n",
    "reg_date": "2021-10-12T12:04:43.000Z"
  },
  {
    "id": 2487,
    "keyword": null,
    "link": null,
    "title": " java fill list",
    "description": "// -- Filling with fill() method example: List<String> arrlist = new ArrayList<String>();   //Add elements in the list   arrlist.add(\"one\");   arrlist.add(\"two\");   arrlist.add(\"three\");   // contents of list: [AAA, BBB, CCC]  //Fill the list with 'four'   Collections.fill(arrlist,\"four\");   // contents of list: [four, four, four]  // -- Second example                 List<Integer> arrList = Arrays.asList(1,2,3,4);       //Fill the list with 551   Collections.fill(arrList,42); // contents of list: [42, 42, 42]\n//x is the list and value is what it is to be set to for (int i = 0; i < x.length; i++) {   x[i] = value; }\n",
    "reg_date": "2021-10-12T12:04:43.000Z"
  },
  {
    "id": 2488,
    "keyword": null,
    "link": null,
    "title": " java filter array by even numbers",
    "description": "function even(t) {     return t.filter(function(x){ return x % 2 == 0; }); }\n",
    "reg_date": "2021-10-12T12:04:43.000Z"
  },
  {
    "id": 2489,
    "keyword": null,
    "link": null,
    "title": " java final meaning",
    "description": "Final is used to apply restrictions on class, method, and variable. The final class can't be inherited, final method can't be overridden, and final variable value can't be changed. Final is a keyword \nprivate final String hello = \"Hello World!\"; /* The keyword final states that the variable, method or class associated will not have it's value changed. */\npublic static final String Name = \"Jeff\";\n",
    "reg_date": "2021-10-12T12:04:43.000Z"
  },
  {
    "id": 2490,
    "keyword": null,
    "link": null,
    "title": " java find all of letter in string",
    "description": "String stringName = \"Hello\"; String characterToFind = \"l\"; //This example will find all the Ls in this string and will print the index of //it as soon as it is detected  for(int i = 0; i < stringName.length(); i++){   if(stringName.substring(i, i+1).equals(characterToFind)){     System.out.println(characterToFind + \"found at \" + i);   }    }\nint index = word.indexOf(guess); while (index >= 0) {     System.out.println(index);     index = word.indexOf(guess, index + 1); } \n",
    "reg_date": "2021-10-12T12:04:43.000Z"
  },
  {
    "id": 2491,
    "keyword": null,
    "link": null,
    "title": " java find biggest number in array",
    "description": "for (int counter = 1; counter < decMax.length; counter++) {      if (decMax[counter] > max)      {       max = decMax[counter];      } }  System.out.println(\"The highest maximum for the December is: \" + max);\npublic int getIndexOfLargest( int[] array ) {   if ( array == null || array.length == 0 ) return -1; // null or empty    int largest = 0;   for ( int i = 1; i < array.length; i++ )   {       if ( array[i] > array[largest] ) largest = i;   }   return largest; // position of the first largest found }\nint max = (The provided List).stream().max((i1,i2)->(i1>i2)?1:(i1<i2)-1:0).get();\n",
    "reg_date": "2021-10-12T12:04:44.000Z"
  },
  {
    "id": 2492,
    "keyword": null,
    "link": null,
    "title": " java find element in array",
    "description": "package com.mkyong.core;  import java.util.Arrays; import java.util.List;  public class StringArrayExample1 {      public static void main(String[] args) {          String[] alphabet = new String[]{\"A\", \"B\", \"C\"};          // Convert String Array to List         List<String> list = Arrays.asList(alphabet);                  if(list.contains(\"A\")){             System.out.println(\"Hello A\");         }      }  } Copy\nimport java.util.Scanner; public class Search_Element {     public static void main(String[] args)      {         int n, x, flag = 0, i = 0;         Scanner s = new Scanner(System.in);         System.out.print(\"Enter no. of elements you want in array:\");         n = s.nextInt();         int a[] = new int[n];         System.out.println(\"Enter all the elements:\");         for(i = 0; i < n; i++)         {             a[i] = s.nextInt();         }         System.out.print(\"Enter the element you want to find:\");         x = s.nextInt();         for(i = 0; i < n; i++)         {             if(a[i] == x)             {                 flag = 1;                 break;             }             else             {                 flag = 0;             }         }         if(flag == 1)         {             System.out.println(\"Element found at position:\"+(i + 1));         }         else         {             System.out.println(\"Element not found\");         }     } }\narray[array.indexOf(element)]\n\t// Convert to stream and test it \tboolean result = Arrays.stream(alphabet).anyMatch(\"A\"::equals); \tif (result) { \t\tSystem.out.println(\"Hello A\"); \t} Copy\npublic class Contains {      public static void main(String[] args) {         int[] num = {1, 2, 3, 4, 5};         int toFind = 3;         boolean found = false;          for (int n : num) {             if (n == toFind) {                 found = true;                 break;             }         }          if(found)             System.out.println(toFind + \" is found.\");         else             System.out.println(toFind + \" is not found.\");     } }\n",
    "reg_date": "2021-10-12T12:04:44.000Z"
  },
  {
    "id": 2493,
    "keyword": null,
    "link": null,
    "title": " java find first occurrence in string",
    "description": "// Use indexOf() String myStr = \"Hello planet earth, you are a great planet.\"; System.out.println(myStr.indexOf(\"planet\"));\n",
    "reg_date": "2021-10-12T12:04:44.000Z"
  },
  {
    "id": 2494,
    "keyword": null,
    "link": null,
    "title": " java find item in list by property",
    "description": "Customer james = customers.stream()   .filter(customer -> \"James\".equals(customer.getName()))   .findAny()   .orElse(null); \nOptional<Person> matchingObject = objects.stream().     filter(p -> p.email().equals(\"testemail\")).     findFirst();\n",
    "reg_date": "2021-10-12T12:04:44.000Z"
  },
  {
    "id": 2495,
    "keyword": null,
    "link": null,
    "title": " java find last element in array",
    "description": "firstNum = numbers[0]; lastNum = numbers[numbers.length-1];\nint [] numbers = {1, 2, 3, 4, 5};  firstElement = numbers[0]; lastElement = numbers[numbers.length-1];\nint[] arr = new int[5]; //length of the array is 5 int val = arr[arr.length - 1]; //here variable val stores the last element of arr\n// GIVE FIRST NUMBER AND LAST NUMBER firstNum = numbers[0]; lastNum = numbers[numbers.length-1];\n",
    "reg_date": "2021-10-12T12:04:44.000Z"
  },
  {
    "id": 2496,
    "keyword": null,
    "link": null,
    "title": " java find substring between two strings",
    "description": "StringUtils.substringBetween(str, \"<%=\", \"%>\");\n",
    "reg_date": "2021-10-12T12:04:44.000Z"
  },
  {
    "id": 2497,
    "keyword": null,
    "link": null,
    "title": " java find time between two dates",
    "description": "public static String getAge(String birthdate) throws ParseException { \t\tLocalDate parsed = LocalDate.parse(\"1970-01-01\"); \t\tLocalDate current = LocalDate.now(); \t\t \t\tPeriod p = Period.between(parsed, current);    \t\t// Returns time between date and now \t\treturn p.getYears() + \" Years, \" + p.getMonths() + \" Months, \" + p.getDays() + \" Days\"; \t}\nimport java.util.Date; import java.text.SimpleDateFormat; class Example{    public static void main(String args[]){ \t SimpleDateFormat myFormat = new SimpleDateFormat(\"dd MM yyyy\"); \t String dateBeforeString = \"31 01 2014\"; \t String dateAfterString = \"02 02 2014\";  \t try { \t       Date dateBefore = myFormat.parse(dateBeforeString); \t       Date dateAfter = myFormat.parse(dateAfterString); \t       long difference = dateAfter.getTime() - dateBefore.getTime(); \t       float daysBetween = (difference / (1000*60*60*24));                /* You can also convert the milliseconds to days using this method                 * float daysBetween =                  *         TimeUnit.DAYS.convert(difference, TimeUnit.MILLISECONDS)                 */ \t       System.out.println(\"Number of Days between dates: \"+daysBetween); \t } catch (Exception e) { \t       e.printStackTrace(); \t }    } }\n",
    "reg_date": "2021-10-12T12:04:44.000Z"
  },
  {
    "id": 2498,
    "keyword": null,
    "link": null,
    "title": " java first day of week",
    "description": "LocalDate now = LocalDate.now();  LocalDate firstDayOfWeek = now.with(TemporalAdjusters.previousOrSame(DayOfWeek.MONDAY));\nprivate static Date firstDayOfWeek(Date date) {    Calendar calendar = Calendar.getInstance();    calendar.setTime(date);    calendar.set(Calendar.DAY_OF_WEEK, 1);    return calendar.getTime(); }\n",
    "reg_date": "2021-10-12T12:04:44.000Z"
  },
  {
    "id": 2499,
    "keyword": null,
    "link": null,
    "title": " java first letter to upper case",
    "description": "String str = \"java\"; String cap = str.substring(0, 1).toUpperCase() + str.substring(1); // cap = \"Java\"\nStringUtils.capitalize(..)\nclass Main {   public static void main(String[] args) {      // create a string     String message = \"everyone loves java\";      // stores each characters to a char array     char[] charArray = message.toCharArray();     boolean foundSpace = true;      for(int i = 0; i < charArray.length; i++) {        // if the array element is a letter       if(Character.isLetter(charArray[i])) {          // check space is present before the letter         if(foundSpace) {            // change the letter into uppercase           charArray[i] = Character.toUpperCase(charArray[i]);           foundSpace = false;         }       }        else {         // if the new character is not character         foundSpace = true;       }     }      // convert the char array to the string     message = String.valueOf(charArray);     System.out.println(\"Message: \" + message);   } }\n",
    "reg_date": "2021-10-12T12:04:45.000Z"
  },
  {
    "id": 2500,
    "keyword": null,
    "link": null,
    "title": " java fizzbuzz and prime numbers program",
    "description": "  public static void main(String[] args) {         // FIZZ BUZZ          for (int num=1; num<=100; num++) {                            if(num%3 == 0 && num%5 == 0){                  System.out.println(\"FizzBuzz\");                                }else if(num%3 == 0){                  System.out.println(\"Fizz\");                                }else if(num%5 == 0){                  System.out.println(\"Buzz\");                                }else if(isPrime(num)== true){                  System.out.println(num + \" is prime\");              }else{                  System.out.println(num);              }          }     }        // Prime Number        public static boolean isPrime(int num){         if(num==1)             return false;         for(int i=2;i<num;i++){             if(num%i==0)                 return false;         }         return true;     }\n",
    "reg_date": "2021-10-12T12:04:45.000Z"
  },
  {
    "id": 2501,
    "keyword": null,
    "link": null,
    "title": " java flag",
    "description": "Inside the loop use this code only:  isFound = (a[i] == valueToRemove); if (isFound) {     a[i] = 0;     break; } isFound is the flag and it gets true if the array item a[i] is equal to valueToRemove. If this flag is true it changes the value of the item to 0 enter code hereand exits the loop. I used a for the array, change it to the name of your variable. I guess arraySize is a variable holding the size of the array.\n",
    "reg_date": "2021-10-12T12:04:45.000Z"
  },
  {
    "id": 2502,
    "keyword": null,
    "link": null,
    "title": " java flatten list",
    "description": "List<List<Object>> list = ... List<Object> flat =      list.stream()         .flatMap(List::stream)         .collect(Collectors.toList());\n",
    "reg_date": "2021-10-12T12:04:45.000Z"
  },
  {
    "id": 2503,
    "keyword": null,
    "link": null,
    "title": " java flood fill",
    "description": "// Java program to implement flood fill algorithm  class GFG  {     // Dimentions of paint screen  static int M = 8;  static int N = 8;     // A recursive function to replace previous color 'prevC' at '(x, y)'   // and all surrounding pixels of (x, y) with new color 'newC' and  static void floodFillUtil(int screen[][], int x, int y,                                       int prevC, int newC)  {      // Base cases      if (x < 0 || x >= M || y < 0 || y >= N)          return;      if (screen[x][y] != prevC)          return;         // Replace the color at (x, y)      screen[x][y] = newC;         // Recur for north, east, south and west      floodFillUtil(screen, x+1, y, prevC, newC);      floodFillUtil(screen, x-1, y, prevC, newC);      floodFillUtil(screen, x, y+1, prevC, newC);      floodFillUtil(screen, x, y-1, prevC, newC);  }     // It mainly finds the previous color on (x, y) and  // calls floodFillUtil()  static void floodFill(int screen[][], int x, int y, int newC)  {      int prevC = screen[x][y];      floodFillUtil(screen, x, y, prevC, newC);  }     public static void main(String[] args)   {      int screen[][] = {{1, 1, 1, 1, 1, 1, 1, 1},                      {1, 1, 1, 1, 1, 1, 0, 0},                      {1, 0, 0, 1, 1, 0, 1, 1},                      {1, 2, 2, 2, 2, 0, 1, 0},                      {1, 1, 1, 2, 2, 0, 1, 0},                      {1, 1, 1, 2, 2, 2, 2, 0},                      {1, 1, 1, 1, 1, 2, 1, 1},                      {1, 1, 1, 1, 1, 2, 2, 1},                      };      int x = 4, y = 4, newC = 3;      floodFill(screen, x, y, newC);         System.out.println(\"Updated screen after call to floodFill: \");      for (int i = 0; i < M; i++)      {          for (int j = 0; j < N; j++)          System.out.print(screen[i][j] + \" \");          System.out.println();      }      }  }     \n",
    "reg_date": "2021-10-12T12:04:45.000Z"
  },
  {
    "id": 2504,
    "keyword": null,
    "link": null,
    "title": " java folder of jar",
    "description": "return new File(MyClass.class.getProtectionDomain().getCodeSource().getLocation()     .toURI()).getPath(); \n",
    "reg_date": "2021-10-12T12:04:45.000Z"
  },
  {
    "id": 2505,
    "keyword": null,
    "link": null,
    "title": " java font",
    "description": "Font smallFont = new Font(\"Monospaced\", Font.PLAIN, 10);   Font bigFont = new Font(\"Serif\", Font.BOLD, 18);\nsetFont (new Font (\"TimesRoman\", Font.BOLD/Font.PLAIN/Font.ITALIC, 20));\npublic Font (java.lang.String name, int style, int size)\n",
    "reg_date": "2021-10-12T12:04:45.000Z"
  },
  {
    "id": 2506,
    "keyword": null,
    "link": null,
    "title": " java for",
    "description": "for(int i = 0; i < 10; i++) {   //do something      //NOTE: the integer name does not need to be i, and the loop   //doesn't need to start at 0. In addition, the 10 can be replaced   //with any value. In this case, the loop will run 10 times.   //Finally, the incrementation of i can be any value, in this case,   //i increments by one. To increment by 2, for example, you would   //use \"i += 2\", or \"i = i+2\" }\n// Starting on 0: for(int i = 0; i < 5; i++) {   System.out.println(i + 1); }  // Starting on 1: for(int i = 1; i <= 5; i++) {   System.out.println(i); }   // Both for loops will iterate 5 times, // printing the numbers 1 - 5.\nint values[] = {1,2,3,4}; for(int i = 0; i < values.length; i++) {  \tSystem.out.println(values[i]);  }\nString[] cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"}; for (String i : cars) {   System.out.println(i); }\nfor(int i=0; i<10; i++){\t//creates a counting vatiable i set to 0   \t\t\t\t\t\t\t//as long as i is < 10 (as long the condition is true)   \t\t\t\t\t\t\t// i is increased by one every cycle //do some stuff }\nfor (int i = 0; i < 5; i++) {   System.out.println(i); } \n",
    "reg_date": "2021-10-12T12:04:45.000Z"
  },
  {
    "id": 2507,
    "keyword": null,
    "link": null,
    "title": " java for character c in string iterate cout i",
    "description": "String s = \"...stuff...\";  for (int i = 0; i < s.length(); i++){     char c = s.charAt(i);             //Process char }\n",
    "reg_date": "2021-10-12T12:04:45.000Z"
  },
  {
    "id": 2508,
    "keyword": null,
    "link": null,
    "title": " java for each",
    "description": "int [] intArray = { 10, 20, 30, 40, 50 };          for( int value : intArray ) {    System.out.println( value ); }\n//itemset contains variables of type <Data Type> for(<Data Type> item : itemset) {   //loop }\nfor (String name : names) {     System.out.println(name); }\nList<String> someList = new ArrayList<String>(); // add \"monkey\", \"donkey\", \"skeleton key\" to someList for (String item : someList) {     System.out.println(item); }\n// definition eine Datenstruktur, hier ein Array mit 9 Werten int[] array = new int[]{4, 8, 4, 2, 2, 1, 1, 5, 9};  // ForEach Schleife for( int k: array ) { \tSystem.out.println(\"k = \"+k); } \npublic class ForEachLoopExample {    public static void main(String[] args)    {       int[] numbers = {2, 4, 6, 8, 10};       // for each loop       for(int n : numbers)       {          System.out.println(n);       }    } }\n",
    "reg_date": "2021-10-12T12:04:46.000Z"
  },
  {
    "id": 2509,
    "keyword": null,
    "link": null,
    "title": " java for each loop",
    "description": "int [] intArray = { 10, 20, 30, 40, 50 };          for( int value : intArray ) {    System.out.println( value ); }\n//itemset contains variables of type <Data Type> for(<Data Type> item : itemset) {   //loop }\nList<String> someList = new ArrayList<String>(); // add \"monkey\", \"donkey\", \"skeleton key\" to someList for (String item : someList) {     System.out.println(item); }\nfor (String name : names) {     System.out.println(name); }\n// definition eine Datenstruktur, hier ein Array mit 9 Werten int[] array = new int[]{4, 8, 4, 2, 2, 1, 1, 5, 9};  // ForEach Schleife for( int k: array ) { \tSystem.out.println(\"k = \"+k); } \npublic class ForEachLoopExample {    public static void main(String[] args)    {       int[] numbers = {2, 4, 6, 8, 10};       // for each loop       for(int n : numbers)       {          System.out.println(n);       }    } }\n",
    "reg_date": "2021-10-12T12:04:46.000Z"
  },
  {
    "id": 2510,
    "keyword": null,
    "link": null,
    "title": " java for increment by 2",
    "description": "int n = 2; //Or any other number  for (int i=0; i < 10; i+=n){ \tSystem.out.println(i) //This will print 0,2,4,6,8 }\n",
    "reg_date": "2021-10-12T12:04:46.000Z"
  },
  {
    "id": 2511,
    "keyword": null,
    "link": null,
    "title": " java for loop with index",
    "description": "int index = 0; for(Element song : question) {     System.out.println(\"Current index is: \" + (index++)); }\n",
    "reg_date": "2021-10-12T12:04:46.000Z"
  },
  {
    "id": 2512,
    "keyword": null,
    "link": null,
    "title": " java for map",
    "description": "Map<String, String> map = new HashMap<>();  for(Entry<String, String> entry:map.entrySet()) {   System.out.println(\"key: \"+entry.getKey()+\" value: \"+entry.getValue()); }\n//traditional way (long) for(map<string,int>::iterator it=m.begin(); it!=m.end(); ++it) \tif(it->second)cout<<it->first<<\" \"; //easy way(short) just works with c++11 or later versions for(auto &x:m) \tif(x.second)cout<<x.first<<\" \"; //condition is just an example of use\n",
    "reg_date": "2021-10-12T12:04:46.000Z"
  },
  {
    "id": 2513,
    "keyword": null,
    "link": null,
    "title": " java for range loop",
    "description": "import java.util.stream.IntStream;   IntStream.range(0, 3).forEachOrdered(n -> {     System.out.println(n); });\n",
    "reg_date": "2021-10-12T12:04:46.000Z"
  },
  {
    "id": 2514,
    "keyword": null,
    "link": null,
    "title": " java foreach",
    "description": "var colors = ['red', 'blue', 'green'];  colors.forEach(function(color) {   console.log(color); });\nint [] intArray = { 10, 20, 30, 40, 50 };          for( int value : intArray ) {    System.out.println( value ); }\n//itemset contains variables of type <Data Type> for(<Data Type> item : itemset) {   //loop }\nList<String> someList = new ArrayList<String>(); // add \"monkey\", \"donkey\", \"skeleton key\" to someList for (String item : someList) {     System.out.println(item); }\nfor (String name : names) {     System.out.println(name); }\n// definition eine Datenstruktur, hier ein Array mit 9 Werten int[] array = new int[]{4, 8, 4, 2, 2, 1, 1, 5, 9};  // ForEach Schleife for( int k: array ) { \tSystem.out.println(\"k = \"+k); } \n",
    "reg_date": "2021-10-12T12:04:46.000Z"
  },
  {
    "id": 2515,
    "keyword": null,
    "link": null,
    "title": " java foreach char",
    "description": "for (char ch: \"xyz\".toCharArray()) {   System.out.println(ch);  }\n",
    "reg_date": "2021-10-12T12:04:46.000Z"
  },
  {
    "id": 2516,
    "keyword": null,
    "link": null,
    "title": " java foreach list",
    "description": "list.forEach((MyType myObject) -> {/* code */});\nArrayList<String> namesList = new ArrayList<String>(Arrays.asList( \"alex\", \"brian\", \"charles\") );           for(String name : namesList) {     System.out.println(name); } \nfor (String name : names) {     System.out.println(name); }\nList<String> someList = new ArrayList<String>(); // add \"monkey\", \"donkey\", \"skeleton key\" to someList for (String item : someList) {     System.out.println(item); }\nfor (int i = 0; i < crunchifyList.size(); i++) {             System.out.println(crunchifyList.get(i));         }\nfor (E element : list) {     . . . } \n",
    "reg_date": "2021-10-12T12:04:46.000Z"
  },
  {
    "id": 2517,
    "keyword": null,
    "link": null,
    "title": " java foreach map",
    "description": "// 1. for-each with Entry Map<Integer, Integer> map = new HashMap<Integer, Integer>(); for (Map.Entry<Integer, Integer> entry : map.entrySet()) {     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); }   // 2. for-each with key or value each (faster) Map<Integer, Integer> map = new HashMap<Integer, Integer>(); //iterating over keys only for (Integer key : map.keySet()) {     System.out.println(\"Key = \" + key); }   //iterating over values only for (Integer value : map.values()) {     System.out.println(\"Value = \" + value); }   // 3. Using Iterator Map<Integer, Integer> map = new HashMap<Integer, Integer>(); // With Generic Iterator<Map.Entry<Integer, Integer>> entries = map.entrySet().iterator(); while (entries.hasNext()) {     Map.Entry<Integer, Integer> entry = entries.next();     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); }  // No Generic Map map = new HashMap(); Iterator entries = map.entrySet().iterator(); while (entries.hasNext()) {     Map.Entry entry = (Map.Entry) entries.next();     Integer key = (Integer)entry.getKey();     Integer value = (Integer)entry.getValue();     System.out.println(\"Key = \" + key + \", Value = \" + value); } \nMap<String, Integer> items = new HashMap<>(); items.put(\"A\", 10); items.put(\"B\", 20); items.put(\"C\", 30); items.put(\"D\", 40); items.put(\"E\", 50); items.put(\"F\", 60);  items.forEach((k,v)->System.out.println(\"Item : \" + k + \" Count : \" + v));  items.forEach((k,v)->{ \tSystem.out.println(\"Item : \" + k + \" Count : \" + v); \tif(\"E\".equals(k)){ \t\tSystem.out.println(\"Hello E\"); \t} });\nMap<String, String> map = ... for (Map.Entry<String, String> entry : map.entrySet()) {     System.out.println(entry.getKey() + \"/\" + entry.getValue()); }\nmap.forEach((k, v) -> System.out.printf( \" %s : %d \\n\" , k,v) );\npublic void iterateUsingLambda(Map<String, Integer> map) {     map.forEach((k, v) -> System.out.println((k + \":\" + v))); } \npublic void iterateUsingEntrySet(Map<String, Integer> map) {     for (Map.Entry<String, Integer> entry : map.entrySet()) {         System.out.println(entry.getKey() + \":\" + entry.getValue());     } } \n",
    "reg_date": "2021-10-12T12:04:46.000Z"
  },
  {
    "id": 2518,
    "keyword": null,
    "link": null,
    "title": " java format 2 decimal places",
    "description": "  package org.arpit.java2blog;   public class StringFromatformatDouble {       public static void main(String[] args) {         double d = 2.456534;         System.out.println(\"Double upto 2 decimal places: \"+String.format(\"%.2f\",d));     } }   \nDecimalFormat df = new DecimalFormat(\"#.00\"); \nnum = 1.234 print(\"{:.2f}\".format(num)) >> 1.23  print(f\"{num:.2f}\") >> 1.23\nprintf(%.2f);\nint x = (int) y\n",
    "reg_date": "2021-10-12T12:04:47.000Z"
  },
  {
    "id": 2519,
    "keyword": null,
    "link": null,
    "title": " java format money",
    "description": "public static void main(String[] args) {         Scanner scanner = new Scanner(System.in);         double payment = scanner.nextDouble();         scanner.close();         // Write your code here.         Locale.setDefault(new Locale(\"en\",\"IN\"));         String india = NumberFormat.getCurrencyInstance().format(payment);         Locale.setDefault(Locale.CHINA);         String china = NumberFormat.getCurrencyInstance().format(payment);         Locale.setDefault(Locale.US);         String us = NumberFormat.getCurrencyInstance().format(payment);         Locale.setDefault(Locale.FRANCE);         String france = NumberFormat.getCurrencyInstance().format(payment);         System.out.println(\"US: \" + us);         System.out.println(\"India: \" + india);         System.out.println(\"China: \" + china);         System.out.println(\"France: \" + france);     } \ndouble money = 100.1; NumberFormat formatter = NumberFormat.getCurrencyInstance(); String moneyString = formatter.format(money); System.out.println(moneyString);\n",
    "reg_date": "2021-10-12T12:04:47.000Z"
  },
  {
    "id": 2520,
    "keyword": null,
    "link": null,
    "title": " java format use same value multiple times",
    "description": "String.format(\"%1$s %1$s %2$s %2$s\", \"hello\", \"world\"); // hello hello world world\n",
    "reg_date": "2021-10-12T12:04:47.000Z"
  },
  {
    "id": 2521,
    "keyword": null,
    "link": null,
    "title": " java from string to int",
    "description": "String myString = \"1234\"; int foo = Integer.parseInt(myString);\nint result = Integer.parseInt(number);\nint result = Integer.parseInt(\"500\"); System.out.println(result) // prints 500 as int\n\tString number = \"10\"; \tint result = Integer.parseInt(number);\t\t\t \tSystem.out.println(result); \nInteger.parseInt(str);\nString myString = \"1234\"; int foo = Integer.parseInt(myString); \n",
    "reg_date": "2021-10-12T12:04:47.000Z"
  },
  {
    "id": 2522,
    "keyword": null,
    "link": null,
    "title": " java fullscreen jframe",
    "description": "frame.setExtendedState(JFrame.MAXIMIZED_BOTH);\nframe.setExtendedState(JFrame.MAXIMIZED_BOTH);  frame.setUndecorated(true); frame.setVisible(true);\n",
    "reg_date": "2021-10-12T12:04:47.000Z"
  },
  {
    "id": 2523,
    "keyword": null,
    "link": null,
    "title": " java function that returns the index of the largest value in an array",
    "description": "public int getIndexOfLargest( int[] array ) {   if ( array == null || array.length == 0 ) return -1; // null or empty    int largest = 0;   for ( int i = 1; i < array.length; i++ )   {       if ( array[i] > array[largest] ) largest = i;   }   return largest; // position of the first largest found }\nint largest = 0; for ( int i = 1; i < array. length; i++ ) { if ( array[i] > array[largest] ) largest = i; } return largest; // position of the first largest found. }\n",
    "reg_date": "2021-10-12T12:04:47.000Z"
  },
  {
    "id": 2524,
    "keyword": null,
    "link": null,
    "title": " java function without return",
    "description": "//The Function type is declared as  interface Function<T,R> {   R apply(T t); } //And the Consumer type is declared as  interface Consumer<T> {    void accept(T t); } //Consumer is compatible with methods that receive //a T and return nothing (void).\n",
    "reg_date": "2021-10-12T12:04:47.000Z"
  },
  {
    "id": 2525,
    "keyword": null,
    "link": null,
    "title": " java garbage collection",
    "description": "System.runFinalization(); Runtime.getRuntime().gc(); System.gc();\nGarbage collection means destroying or de-allocating unused objects in memory.\n",
    "reg_date": "2021-10-12T12:04:47.000Z"
  },
  {
    "id": 2526,
    "keyword": null,
    "link": null,
    "title": " java generate random id",
    "description": "String id = UUID.randomUUID().toString();\nimport java.util.UUID; public class UUIDExample. { public static void main(String[] args) { UUID uuid=UUID.randomUUID(); //Generates random UUID. System.out.println(uuid); } }\n",
    "reg_date": "2021-10-12T12:04:47.000Z"
  },
  {
    "id": 2527,
    "keyword": null,
    "link": null,
    "title": " java generate random integer in range",
    "description": "import java.util.Random;  Random rand = new Random(); int random_integer = rand.nextInt(upperbound-lowerbound) + lowerbound;\n\t(int)(Math.random() * ((max - min) + 1)) + min Copy\nimport java.util.concurrent.ThreadLocalRandom;  // nextInt is normally exclusive of the top value, // so add 1 to make it inclusive int randomNum = ThreadLocalRandom.current().nextInt(min, max + 1); \nint rand = ThreadLocalRandom.current().nextInt(x,y);\n",
    "reg_date": "2021-10-12T12:04:47.000Z"
  },
  {
    "id": 2528,
    "keyword": null,
    "link": null,
    "title": " java generate secure random password",
    "description": "public class PasswordUtils {      static char[] SYMBOLS = \"^$*.[]{}()?-\\\"!@#%&/\\\\,><':;|_~`\".toCharArray();     static char[] LOWERCASE = \"abcdefghijklmnopqrstuvwxyz\".toCharArray();     static char[] UPPERCASE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".toCharArray();     static char[] NUMBERS = \"0123456789\".toCharArray();     static char[] ALL_CHARS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789^$*.[]{}()?-\\\"!@#%&/\\\\,><':;|_~`\".toCharArray();     static Random rand = new SecureRandom();      public static String getPassword(int length) {         assert length >= 4;         char[] password = new char[length];          //get the requirements out of the way         password[0] = LOWERCASE[rand.nextInt(LOWERCASE.length)];         password[1] = UPPERCASE[rand.nextInt(UPPERCASE.length)];         password[2] = NUMBERS[rand.nextInt(NUMBERS.length)];         password[3] = SYMBOLS[rand.nextInt(SYMBOLS.length)];          //populate rest of the password with random chars         for (int i = 4; i < length; i++) {             password[i] = ALL_CHARS[rand.nextInt(ALL_CHARS.length)];         }          //shuffle it up         for (int i = 0; i < password.length; i++) {             int randomPosition = rand.nextInt(password.length);             char temp = password[i];             password[i] = password[randomPosition];             password[randomPosition] = temp;         }          return new String(password);     }      public static void main(String[] args) {         for (int i = 0; i < 100; i++) {             System.out.println(getPassword(8));         }     } } \n",
    "reg_date": "2021-10-12T12:04:48.000Z"
  },
  {
    "id": 2529,
    "keyword": null,
    "link": null,
    "title": " java generic array",
    "description": "public <T> T[] getArray(int size) {     T[] genericArray = (T[]) new Object[size];     return genericArray; }\nNode<T>[] arr = new Node[0];\n",
    "reg_date": "2021-10-12T12:04:48.000Z"
  },
  {
    "id": 2530,
    "keyword": null,
    "link": null,
    "title": " java generic type method",
    "description": "// generic methods  public <T> List<T> fromArrayToList(T[] a) {    \t    return Arrays.stream(a).collect(Collectors.toList()); \t}  public static <T, G> List<G> fromArrayToList(T[] a, Function<T, G> mapperFunction) { \t    return Arrays.stream(a) \t      .map(mapperFunction) \t      .collect(Collectors.toList()); \t}  // bounded generics  public <T extends Number> List<T> fromArrayToList(T[] a) { \t    ... \t}  //multiple bounds  <T extends Number & Comparable>  // upper bound wildcards  public static void paintAllBuildings(List<? extends Building> buildings) { \t    ... \t}      // lower bound wildcard  <? super T>\npublic static <T> T getRandomValue(List<T> listOfPossibleOutcomes, int numPossibilities) {     int r = RandomNumberGenerator.getRandIntBetween(0, numPossibilities);     return listOfPossibleOutcomes.get(r); }  public static <T> T getRandomValueFromGenericList(List<T> list) {     Collections.shuffle(list);     return list.get(0); }\n",
    "reg_date": "2021-10-12T12:04:48.000Z"
  },
  {
    "id": 2531,
    "keyword": null,
    "link": null,
    "title": " java generics",
    "description": "// generic methods  public <T> List<T> fromArrayToList(T[] a) {    \t    return Arrays.stream(a).collect(Collectors.toList()); \t}  public static <T, G> List<G> fromArrayToList(T[] a, Function<T, G> mapperFunction) { \t    return Arrays.stream(a) \t      .map(mapperFunction) \t      .collect(Collectors.toList()); \t}  // bounded generics  public <T extends Number> List<T> fromArrayToList(T[] a) { \t    ... \t}  //multiple bounds  <T extends Number & Comparable>  // upper bound wildcards  public static void paintAllBuildings(List<? extends Building> buildings) { \t    ... \t}      // lower bound wildcard  <? super T>\npublic class Tuple <T> {   // the T is a placeholder for any datatype   public T leftValue;   public T rightValue;      public Tuple(T leftValue, T rightValue){     // again, T is being used as a placeholder for any type     this.leftValue = leftValue;     this.rightValue = rightValue; }  public class Program{   public static void main (String args){     // And upon using Tuples we can fill in the T from the Tuple class with actual datatypes     Tuple <int> intTuple = new Tuple <int>(5, 500)     Tuple <String> stringTuple = new Tuple <String> (\"Hello\", \"World\")      // we can even put Tuples inside of Tuples!     Tuple<Tuple<int>> metaIntTuple = new Tuple <Tuple <int>> (intTuple, new Tuple <int> (456, 0));   } }\nJava Generic Type Naming convention helps us understanding code easily and having a naming convention is one of the best practices of Java programming language. So generics also comes with its own naming conventions. Usually, type parameter names are single, uppercase letters to make it easily distinguishable from java variables. The most commonly used type parameter names are:  E &ndash; Element (used extensively by the Java Collections Framework, for example ArrayList, Set etc.) K &ndash; Key (Used in Map) N &ndash; Number T &ndash; Type V &ndash; Value (Used in Map) S,U,V etc. &ndash; 2nd, 3rd, 4th types\nimport java.util.Scanner; import reader.*;  public class Main {     public static void main(String[] args) throws Exception {         Scanner scanner = new Scanner(System.in);         String filePath = scanner.nextLine().trim();         System.out.println(\"The file path is \" + filePath);         String type = filePath.substring(filePath.lastIndexOf('.') + 1).replaceAll(\"\\\\W\", \"\");         System.out.println(\"The reader type is \" + type);         AbstractReaderService reader = getReaderService(type);         // reader.read(filePath);         // reader.printContent();      }      private static AbstractReaderService getReaderService (String type) throws Exceptions.TypeNotFoundException {         switch (type) {             case \"txt\": return new TxtReaderService();             case \"json\": return new JsonReaderService();             default: throw new Exceptions().new TypeNotFoundException(\"There is no \\\"\" + type + \"\\\" type of reader.\");         }     } } \n",
    "reg_date": "2021-10-12T12:04:48.000Z"
  },
  {
    "id": 2532,
    "keyword": null,
    "link": null,
    "title": " java getTime",
    "description": "String formatCode = \"yyyy-MM-dd 'at' HH:mm:ss z\"; // Example SimpleDateFormat formatter = new SimpleDateFormat(formatCode); // Time Formatter Date date = new Date(System.currentTimeMillis);  String time = formatter.format(date); // e.g. time = 2021-04-15 at 11:11:11 UTC\n",
    "reg_date": "2021-10-12T12:04:48.000Z"
  },
  {
    "id": 2533,
    "keyword": null,
    "link": null,
    "title": " java get JComboBox value",
    "description": "JComboBox<Object> jcb = new JComboBox<Object>(); Object selected = jcb.getSelectedItem();\n",
    "reg_date": "2021-10-12T12:04:48.000Z"
  },
  {
    "id": 2534,
    "keyword": null,
    "link": null,
    "title": " java get all files in directory",
    "description": "List<String> results = new ArrayList<String>();   File[] files = new File(\"/path/to/the/directory\").listFiles(); //If this pathname does not denote a directory, then listFiles() returns null.   for (File file : files) {     if (file.isFile()) {         results.add(file.getName());     } }\npublic class Pathnames {      public static void main(String[] args) {         // Creates an array in which we will store the names of files and directories         String[] pathnames;          // Creates a new File instance by converting the given pathname string         // into an abstract pathname         File f = new File(\"D:/Programming\");          // Populates the array with names of files and directories         pathnames = f.list();          // For each pathname in the pathnames array         for (String pathname : pathnames) {             // Print the names of files and directories             System.out.println(pathname);         }     } } \n\tpublic static List<String> mapFolder(String path, boolean includeEmptyFolders) {     \tList<String> map = new ArrayList<String>();     \tList<String> unmappedDirs = new ArrayList<String>();     \tFile[] items = new File(path).listFiles();      \tif (!path.substring(path.length() - 1).equals(\"/\")) {     \t\tpath += \"/\";     \t}     \t\t     \tif (items != null) { \t    \tfor (File item : items) { \t    \t\tif (item.isFile()) \t    \t\t\t\tmap.add(path+item.getName()); \t    \t\telse \t    \t\t\tunmappedDirs.add(path+item.getName()); \t    \t} \t    \t \t    \tif (!unmappedDirs.isEmpty()) { \t    \t\tfor (String folder : unmappedDirs) { \t    \t\t\tList<String> temp = mapFolder(folder, includeEmptyFolders); \t    \t\t\tif (!temp.isEmpty()) { \t    \t\t\t\tfor (String item : temp) \t    \t\t\t\t\tmap.add(item);     \t\t\t\t} else if (includeEmptyFolders == true)     \t\t\t\t\tmap.add(folder+\"/\"); \t    \t\t} \t    \t}     \t}     \treturn map;     }\n",
    "reg_date": "2021-10-12T12:04:48.000Z"
  },
  {
    "id": 2535,
    "keyword": null,
    "link": null,
    "title": " java get all items from arraylist",
    "description": "for (int i = 0; i < arrlist.size(); i++) {   \t// Get each item (in this case print each item) \tSystem.out.println(arrlist.get(i)); }\n",
    "reg_date": "2021-10-12T12:04:48.000Z"
  },
  {
    "id": 2536,
    "keyword": null,
    "link": null,
    "title": " java get amount of enums",
    "description": "YOUR_ENUM.values().length;\n",
    "reg_date": "2021-10-12T12:04:48.000Z"
  },
  {
    "id": 2537,
    "keyword": null,
    "link": null,
    "title": " java get an int from a char",
    "description": "char charValue = '2'; int intValue = Character.getNumericValue(charValue); // 2\n",
    "reg_date": "2021-10-12T12:04:48.000Z"
  },
  {
    "id": 2538,
    "keyword": null,
    "link": null,
    "title": " java get appdata path",
    "description": "System.getenv(\"APPDATA\");\n",
    "reg_date": "2021-10-12T12:04:49.000Z"
  },
  {
    "id": 2539,
    "keyword": null,
    "link": null,
    "title": " java get attributes from class",
    "description": "List<Field> fields = Arrays.asList(filter.getClass().getDeclaredFields());\n",
    "reg_date": "2021-10-12T12:04:49.000Z"
  },
  {
    "id": 2540,
    "keyword": null,
    "link": null,
    "title": " java get bigger int",
    "description": "int biggerNum = max(int a, int b);\n",
    "reg_date": "2021-10-12T12:04:49.000Z"
  },
  {
    "id": 2541,
    "keyword": null,
    "link": null,
    "title": " java get class by string",
    "description": "//get an according class variable String className = \"MyClass\"; Class<?> cls = Class.forName(className);  //create instance of that class Object myInstance = cls.newInstance();\n//get an according class variable String className = \"MyClass\"; Class<?> cls = Class.forName(className);  //create instance of that class Object myInstance = scl.newInstance();\n",
    "reg_date": "2021-10-12T12:04:49.000Z"
  },
  {
    "id": 2542,
    "keyword": null,
    "link": null,
    "title": " java get class name of object",
    "description": "a.getClass().getName();\nString className = n.getClass().getName(); String name = className.substring(className.lastIndexOf('$')+1,className.length()-4); System.out.println(name);  \n//Just the name of the class myObject.getClass().getSimpleName();  //The name of the class with the package name myObject.getClass().getName();\nmyObject.getClass().getName()\n",
    "reg_date": "2021-10-12T12:04:49.000Z"
  },
  {
    "id": 2543,
    "keyword": null,
    "link": null,
    "title": " java get classname",
    "description": "a.getClass().getName();\n//Just the name of the class myObject.getClass().getSimpleName();  //The name of the class with the package name myObject.getClass().getName();\nmyObject.getClass().getName()\n",
    "reg_date": "2021-10-12T12:04:49.000Z"
  },
  {
    "id": 2544,
    "keyword": null,
    "link": null,
    "title": " java get color from string",
    "description": "Color color; try {     Field field = Class.forName(\"java.awt.Color\").getField(\"yellow\");     color = (Color)field.get(null); } catch (Exception e) {     color = null; // Not defined } \n",
    "reg_date": "2021-10-12T12:04:49.000Z"
  },
  {
    "id": 2545,
    "keyword": null,
    "link": null,
    "title": " java get creation date of file",
    "description": "Path file = ...; BasicFileAttributes attr = Files.readAttributes(file, BasicFileAttributes.class);  System.out.println(\"creationTime: \" + attr.creationTime()); System.out.println(\"lastAccessTime: \" + attr.lastAccessTime()); System.out.println(\"lastModifiedTime: \" + attr.lastModifiedTime());\nPath file = ...; BasicFileAttributes attr = Files.readAttributes(file, BasicFileAttributes.class);  System.out.println(\"creationTime: \" + attr.creationTime()); System.out.println(\"lastAccessTime: \" + attr.lastAccessTime()); System.out.println(\"lastModifiedTime: \" + attr.lastModifiedTime()); \n",
    "reg_date": "2021-10-12T12:04:49.000Z"
  },
  {
    "id": 2546,
    "keyword": null,
    "link": null,
    "title": " java get cunnect date time",
    "description": "  Date currentDate = new Date();   SimpleDateFormat dateFormat= new SimpleDateFormat(\"dd/MMM/yyyy\");   String dateOnly = dateFormat.format(currentDate);   dateTextView.setText(dateOnly);\n",
    "reg_date": "2021-10-12T12:04:49.000Z"
  },
  {
    "id": 2547,
    "keyword": null,
    "link": null,
    "title": " java get current date",
    "description": "import java.time.format.DateTimeFormatter;   import java.time.LocalDateTime;     public class CurrentDateTimeExample1 {       public static void main(String[] args) {        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm:ss\");      LocalDateTime now = LocalDateTime.now();      System.out.println(dtf.format(now));     }     }   \n// get current date and timein java using Calendar.getTime() method import java.util.Calendar; import java.util.Date; public class UsingCalendarClass {    public static void main(String[] args)    {       Date date = Calendar.getInstance().getTime();       System.out.println(date);    } }\nfrom datetime import date  today = date.today() print(\"Today's date:\", today) \n// Get current date and time in java 8 import java.time.LocalDate; import java.time.LocalDateTime; import java.time.LocalTime; public class CurrentDateTimeJava8  {    public static void main(String[] args)     {       LocalDate ld = LocalDate.now();       System.out.println(\"Current date: \" + ld);       // get current time value       LocalTime lt = LocalTime.now();       System.out.println(\"Current time: \" + lt);       // get current date-time value       LocalDateTime ldt = LocalDateTime.now();       System.out.println(\"Current date-time: \" + ldt);    } }\n  Date currentDate = new Date();   SimpleDateFormat dateFormat= new SimpleDateFormat(\"dd/MMM/yyyy\");   String dateOnly = dateFormat.format(currentDate);   dateTextView.setText(dateOnly);\nSimpleDateFormat formatter = new SimpleDateFormat(\"dd/MM/yyyy HH:mm:ss\");   Date date = new Date();   System.out.println(formatter.format(date));    // ------------------------  System.out.println(LocalDate.now()); \n",
    "reg_date": "2021-10-12T12:04:49.000Z"
  },
  {
    "id": 2548,
    "keyword": null,
    "link": null,
    "title": " java get current date without time",
    "description": "// get current date and timein java using Calendar.getTime() method import java.util.Calendar; import java.util.Date; public class UsingCalendarClass {    public static void main(String[] args)    {       Date date = Calendar.getInstance().getTime();       System.out.println(date);    } }\n// Get current date and time in java 8 import java.time.LocalDate; import java.time.LocalDateTime; import java.time.LocalTime; public class CurrentDateTimeJava8  {    public static void main(String[] args)     {       LocalDate ld = LocalDate.now();       System.out.println(\"Current date: \" + ld);       // get current time value       LocalTime lt = LocalTime.now();       System.out.println(\"Current time: \" + lt);       // get current date-time value       LocalDateTime ldt = LocalDateTime.now();       System.out.println(\"Current date-time: \" + ldt);    } }\n  Date currentDate = new Date();   SimpleDateFormat dateFormat= new SimpleDateFormat(\"dd/MMM/yyyy\");   String dateOnly = dateFormat.format(currentDate);   dateTextView.setText(dateOnly);\n// get current date and time in java using LocalDate.now() method import java.time.LocalDate; public class UsingLocalDate {    public static void main(String[] args)    {       System.out.println(LocalDate.now());    } }\n",
    "reg_date": "2021-10-12T12:04:50.000Z"
  },
  {
    "id": 2549,
    "keyword": null,
    "link": null,
    "title": " java get current desktop",
    "description": "File home = FileSystemView.getFileSystemView().getHomeDirectory(); home.getAbsolutePath();\n",
    "reg_date": "2021-10-12T12:04:50.000Z"
  },
  {
    "id": 2550,
    "keyword": null,
    "link": null,
    "title": " java get current hour",
    "description": "Try using Joda Time instead of standard java.util.Date classes. Joda Time library has much better API for handling dates.  DateTime dt = new DateTime();  // current time int month = dt.getMonth();     // gets the current month int hours = dt.getHourOfDay(); // gets hour of day See this question for pros and cons of using Joda Time library.  Joda Time may also be included to some future version of Java as a standard component, see JSR-310.  If you must use traditional java.util.Date and java.util.Calendar classes, see their JavaDoc's for help (java.util.Calendar and java.util.Date).  You can use the traditional classes like this to fetch fields from given Date instance.  Date date = new Date();   // given date Calendar calendar = GregorianCalendar.getInstance(); // creates a new calendar instance calendar.setTime(date);   // assigns calendar to given date  calendar.get(Calendar.HOUR_OF_DAY); // gets hour in 24h format calendar.get(Calendar.HOUR);        // gets hour in 12h format calendar.get(Calendar.MONTH);       // gets month number, NOTE this is zero based!\n",
    "reg_date": "2021-10-12T12:04:50.000Z"
  },
  {
    "id": 2551,
    "keyword": null,
    "link": null,
    "title": " java get current milliseconds",
    "description": "package com.tutorialspoint;  import java.lang.*;  public class SystemDemo {     public static void main(String[] args) {        // returns the current time in milliseconds       System.out.print(\"Current Time in milliseconds = \");       System.out.println(System.currentTimeMillis());    } } \n",
    "reg_date": "2021-10-12T12:04:50.000Z"
  },
  {
    "id": 2552,
    "keyword": null,
    "link": null,
    "title": " java get current time in seconds",
    "description": "// get current time in java using LocalTime.now() method  import java.time.LocalTime; public class UsingLocalDate {    public static void main(String[] args)    {       System.out.println(LocalTime.now());      // hr : min : sec.fimto sec    } }\nLocalDateTime date = LocalDateTime.now(); int seconds = date.toLocalTime().toSecondOfDay();\nimport java.util.Calendar; Date currentTime = Calendar.getInstance().getTime();\n",
    "reg_date": "2021-10-12T12:04:50.000Z"
  },
  {
    "id": 2553,
    "keyword": null,
    "link": null,
    "title": " java get current year",
    "description": "import java.util.Calendar;  int year = Calendar.getInstance().get(Calendar.YEAR);\nSimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\"); Date date = format.parse(datetime); SimpleDateFormat df = new SimpleDateFormat(\"yyyy\"); year = df.format(date); \nimport java.time.ZoneId; import java.util.Date;  new Date().toInstant().atZone(ZoneId.systemDefault()).toLocalDate().getYear();\n",
    "reg_date": "2021-10-12T12:04:50.000Z"
  },
  {
    "id": 2554,
    "keyword": null,
    "link": null,
    "title": " java get date in utc",
    "description": "OffsetDateTime now = OffsetDateTime.now(ZoneOffset.UTC); System.out.println(now);\nprivate static Date getCurrentUtcTime() throws ParseException {     SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyy-MMM-dd HH:mm:ss\");     simpleDateFormat.setTimeZone(TimeZone.getTimeZone(\"UTC\"));     SimpleDateFormat localDateFormat = new SimpleDateFormat(\"yyyy-MMM-dd HH:mm:ss\");     return localDateFormat.parse( simpleDateFormat.format(new Date()) ); }\n",
    "reg_date": "2021-10-12T12:04:50.000Z"
  },
  {
    "id": 2555,
    "keyword": null,
    "link": null,
    "title": " java get distinct values from list",
    "description": "List<String> distinctElements = list.stream()                         .distinct()                         .collect(Collectors.toList());\n",
    "reg_date": "2021-10-12T12:04:50.000Z"
  },
  {
    "id": 2556,
    "keyword": null,
    "link": null,
    "title": " java get domain from url",
    "description": "public static String getDomainName(String url) throws URISyntaxException {     URI uri = new URI(url);     String domain = uri.getHost();     return domain.startsWith(\"www.\") ? domain.substring(4) : domain; } \n",
    "reg_date": "2021-10-12T12:04:51.000Z"
  },
  {
    "id": 2557,
    "keyword": null,
    "link": null,
    "title": " java get enum from string",
    "description": "public enum Hello {   A, B, C };  val = Hello.valueOf(\"A\") // Case sensitive and cannot have spaces in the string val.equals(Hello.A) // returns true\n",
    "reg_date": "2021-10-12T12:04:51.000Z"
  },
  {
    "id": 2558,
    "keyword": null,
    "link": null,
    "title": " java get environment variables",
    "description": " public class Env {     public static void main (String[] args) {         for (String env: args) {             String value = System.getenv(env);             if (value != null) {                 System.out.format(\"%s=%s%n\",                                   env, value);             } else {                 System.out.format(\"%s is\"                     + \" not assigned.%n\", env);             }         }     } }  \nString environmentVariable = System.getEnv(\"environment_variable_name\");  //You can create environment variables on your computer manually //and then you must put the environment variable in the parantheses as a String\n",
    "reg_date": "2021-10-12T12:04:51.000Z"
  },
  {
    "id": 2559,
    "keyword": null,
    "link": null,
    "title": " java get everything before a character",
    "description": "// look at String.indexOf and String.substring.  String yourString = mathString.substring(start, end);\n",
    "reg_date": "2021-10-12T12:04:51.000Z"
  },
  {
    "id": 2560,
    "keyword": null,
    "link": null,
    "title": " java get excectuon time",
    "description": "long startTime = System.nanoTime(); methodToTime(); long endTime = System.nanoTime();  long duration = (endTime - startTime);  //divide by 1000000 to get milliseconds.\n",
    "reg_date": "2021-10-12T12:04:51.000Z"
  },
  {
    "id": 2561,
    "keyword": null,
    "link": null,
    "title": " java get filename without extension",
    "description": "FilenameUtils.removeExtension(fileNameWithExt);\nString fname = file.getName(); int pos = fname.lastIndexOf(\".\"); if (pos > 0) {     fname = fname.substring(0, pos); }\n",
    "reg_date": "2021-10-12T12:04:51.000Z"
  },
  {
    "id": 2562,
    "keyword": null,
    "link": null,
    "title": " java get files in directory",
    "description": "List<String> results = new ArrayList<String>();   File[] files = new File(\"/path/to/the/directory\").listFiles(); //If this pathname does not denote a directory, then listFiles() returns null.   for (File file : files) {     if (file.isFile()) {         results.add(file.getName());     } }\nFile folder = new File(\"/Users/you/folder/\"); File[] listOfFiles = folder.listFiles();  for (File file : listOfFiles) {     if (file.isFile()) {         System.out.println(file.getName());     } } \n",
    "reg_date": "2021-10-12T12:04:51.000Z"
  },
  {
    "id": 2563,
    "keyword": null,
    "link": null,
    "title": " java get first char",
    "description": "char fourth = \"Banana\".charAt(3);\n",
    "reg_date": "2021-10-12T12:04:51.000Z"
  },
  {
    "id": 2564,
    "keyword": null,
    "link": null,
    "title": " java get first day of the week",
    "description": "private static Date firstDayOfWeek(Date date) {    Calendar calendar = Calendar.getInstance();    calendar.setTime(date);    calendar.set(Calendar.DAY_OF_WEEK, 1);    return calendar.getTime(); }\n",
    "reg_date": "2021-10-12T12:04:51.000Z"
  },
  {
    "id": 2565,
    "keyword": null,
    "link": null,
    "title": " java get first element from arraylist",
    "description": " arrayName[arrayName.length() - 1];\nE e = list.get(list.size() - 1);\nimport java.util.ArrayList; public class FirstandLastElemets{    public static void main(String[] args){       ArrayList<String> list = new ArrayList<String>();       //Instantiating an ArrayList object       list.add(\"JavaFX\");       list.add(\"Java\");       list.add(\"WebGL\");       list.add(\"OpenCV\");       list.add(\"OpenNLP\");       list.add(\"JOGL\");       list.add(\"Hadoop\");       list.add(\"HBase\");       list.add(\"Flume\");       list.add(\"Mahout\");       list.add(\"Impala\");       System.out.println(\"Contents of the Array List: \\n\"+list);       //Removing the sub list       System.out.println(\"First element of the array list: \"+list.get(0));       System.out.println(\"Last element of the array list: \"+list.get(list.size()-1));    } }\nset.iterator().next();\n",
    "reg_date": "2021-10-12T12:04:51.000Z"
  },
  {
    "id": 2566,
    "keyword": null,
    "link": null,
    "title": " java get folder content",
    "description": "File file  = new File(\"Path to file\"); File[] files = file.listFiles();\n",
    "reg_date": "2021-10-12T12:04:51.000Z"
  },
  {
    "id": 2567,
    "keyword": null,
    "link": null,
    "title": " java get html from url",
    "description": "        URL oracle = new URL(\"http://www.oracle.com/\");         BufferedReader in = new BufferedReader(         new InputStreamReader(oracle.openStream()));          String inputLine;         while ((inputLine = in.readLine()) != null)             System.out.println(inputLine);         in.close();\n",
    "reg_date": "2021-10-12T12:04:52.000Z"
  },
  {
    "id": 2568,
    "keyword": null,
    "link": null,
    "title": " java get input",
    "description": "import java.util.Scanner; /* Required Import*/ public class reading{   public static void main(String[] args){     Scanner scan = new Scanner(System.in); // Create Reader      System.out.print(\"Enter Your Age\"); // Ask the user for something     int age = scan.nextInt(); // Read value from user     System.out.print(age); // Output the value   } } /*   Java Reading Options:   1_ reading int => nextInt();   2_ reading char => next().charAt(0); Single Character   3_ reading string => next();   4_ reading double => nextDouble(); */\nScanner sc = new Scanner(System.in);  // Create a Scanner object String userName = sc.nextLine();//read input string int age = sc.nextInt(); //read input integer long mobileNo = sc.nextLong(); //read input long double cgpa = sc.nextDouble(); //read input double System.out.println(userName);//output \nScanner sc = new Scanner(System.in); String s = sc.next(); int n = sc.nextInt(); double d = sc.nextDouble(); float f = sc.nextFloat();  // more fast way BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String s = br.readLine(); // read line int c = br.read();        // read single char\nimport java.util.*;   class UserInputDemo    {   public static void main(String[] args)   {   Scanner sc= new Scanner(System.in);    //System.in is a standard input stream   System.out.print(\"Enter first number- \");   int a= sc.nextInt();   System.out.print(\"Enter second number- \");   int b= sc.nextInt();   System.out.print(\"Enter third number- \");   int c= sc.nextInt();   int d=a+b+c;   System.out.println(\"Total= \" +d);   }   }  \nimport java.util.Scanner; ...   Scanner console = new Scanner(System.in);   int num = console.nextInt();   console.nextLine() // to take in the enter after the nextInt()    String str = console.nextLine();\n//For continues reading a line import java.util.Scanner;   Scanner in = new Scanner(System.in);  while(in.hasNextLine()) {    String line = in.nextLine();    System.out.println(\"Next line is is: \" + line);  }\n",
    "reg_date": "2021-10-12T12:04:52.000Z"
  },
  {
    "id": 2569,
    "keyword": null,
    "link": null,
    "title": " java get jar execution directory",
    "description": "return new File(MyClass.class.getProtectionDomain().getCodeSource().getLocation()     .toURI()).getPath(); \n",
    "reg_date": "2021-10-12T12:04:52.000Z"
  },
  {
    "id": 2570,
    "keyword": null,
    "link": null,
    "title": " java get jar path",
    "description": "//this worked for me File jarDir = new File(ClassLoader.getSystemClassLoader().getResource(\".\").toURI());  //this didn't work for me but it is often suggested File jar = new File(MyClass.class.getProtectionDomain().getCodeSource().getLocation().toURI());\nreturn new File(MyClass.class.getProtectionDomain().getCodeSource().getLocation()     .toURI()).getPath(); \n",
    "reg_date": "2021-10-12T12:04:52.000Z"
  },
  {
    "id": 2571,
    "keyword": null,
    "link": null,
    "title": " java get json from url",
    "description": "import java.io.BufferedReader; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.io.Reader; import java.net.URL; import java.nio.charset.Charset;  import org.json.JSONException; import org.json.JSONObject;  public class JsonReader {    private static String readAll(Reader rd) throws IOException {     StringBuilder sb = new StringBuilder();     int cp;     while ((cp = rd.read()) != -1) {       sb.append((char) cp);     }     return sb.toString();   }    public static JSONObject readJsonFromUrl(String url) throws IOException, JSONException {     InputStream is = new URL(url).openStream();     try {       BufferedReader rd = new BufferedReader(new InputStreamReader(is, Charset.forName(\"UTF-8\")));       String jsonText = readAll(rd);       JSONObject json = new JSONObject(jsonText);       return json;     } finally {       is.close();     }   } }\n//include org.json:json as a dependency try(BufferedReader br=new BufferedReader(new InputStreamReader(new URL(\"URL here\").openStream()))){ \tJSONObject json=new JSONObject(br.lines().collect(Collectors.joining()));     json.getString(\"hello\");//gets the String of the key named \"hello\"     json.getInt(\"world\");//gets the integer value of the key named \"world\"     json.getJSONObject(\"test\");//gets the JSONObject value representation of the key \"test\", you can use the getXXX methods on the returned object     json.getJSONObject(\"test\").getString(\"something\"); }  /* JSON data: { \t\"hello\": \"some string\",     \"world\": 1234,     \"test\":{     \t\"something\": \"else\"     } } */\n",
    "reg_date": "2021-10-12T12:04:52.000Z"
  },
  {
    "id": 2572,
    "keyword": null,
    "link": null,
    "title": " java get last char of string",
    "description": "String str = \"India\"; System.out.println(\"last char = \" + str.charAt(str.length() - 1));\npublic class Test {     public static void main(String args[]) {         String string = args[0];         System.out.println(\"last character: \" +                            string.substring(string.length() - 1));      } }\npublic class Test {     public static void main(String args[]) {         String string = args[0];         System.out.println(\"last character: \" +                            string.substring(string.length() - 1));      } } \n",
    "reg_date": "2021-10-12T12:04:52.000Z"
  },
  {
    "id": 2573,
    "keyword": null,
    "link": null,
    "title": " java get last element of list",
    "description": "firstNum = numbers[0]; lastNum = numbers[numbers.length-1];\n arrayName[arrayName.length() - 1];\nArrayList<Integer> list = new ArrayList<Integer>(5);  int last = list.get(list.size() - 1); \n# The smart way  list = [\"first item\", \"second item\", \"third item\"] print(list[len(list) - 1])  # The proper way print(list[-1])\nint[] arr = new int[5]; //length of the array is 5 int val = arr[arr.length - 1]; //here variable val stores the last element of arr\nlist1 = ['a','b','c'] print(list1[-1])  \n",
    "reg_date": "2021-10-12T12:04:52.000Z"
  },
  {
    "id": 2574,
    "keyword": null,
    "link": null,
    "title": " java get location of jar file",
    "description": "//this worked for me File jarDir = new File(ClassLoader.getSystemClassLoader().getResource(\".\").toURI());  //this didn't work for me but it is often suggested File jar = new File(MyClass.class.getProtectionDomain().getCodeSource().getLocation().toURI());\n",
    "reg_date": "2021-10-12T12:04:52.000Z"
  },
  {
    "id": 2575,
    "keyword": null,
    "link": null,
    "title": " java get longest string in array",
    "description": "int index = 0;  int elementLength = array[0].length(); for(int i=1; i< array.length(); i++) {     if(array[i].length() > elementLength) {         index = i; elementLength = array[i].length();     } } return array[index]; \n",
    "reg_date": "2021-10-12T12:04:52.000Z"
  },
  {
    "id": 2576,
    "keyword": null,
    "link": null,
    "title": " java get month",
    "description": "SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\"); Date date = format.parse(datetime); SimpleDateFormat df = new SimpleDateFormat(\"yyyy\"); year = df.format(date); \nimport java.time.ZoneId; import java.util.Date;  new Date().toInstant().atZone(ZoneId.systemDefault()).toLocalDate().getMonthValue();\n",
    "reg_date": "2021-10-12T12:04:52.000Z"
  },
  {
    "id": 2577,
    "keyword": null,
    "link": null,
    "title": " java get mouse coordinates",
    "description": "int x =  MouseInfo.getPointerInfo().getLocation().x; int y = MouseInfo.getPointerInfo().getLocation().y;\n",
    "reg_date": "2021-10-12T12:04:53.000Z"
  },
  {
    "id": 2578,
    "keyword": null,
    "link": null,
    "title": " java get mouse position on screen",
    "description": "double mouseX = MouseInfo.getPointerInfo().getLocation().getX(); double mouseY = MouseInfo.getPointerInfo().getLocation().getY();\n",
    "reg_date": "2021-10-12T12:04:53.000Z"
  },
  {
    "id": 2579,
    "keyword": null,
    "link": null,
    "title": " java get next enum",
    "description": "public static enum A {      X, Y, Z;     private static A[] vals = values();     public A next()     {         return vals[(this.ordinal()+1) % vals.length];     } }\n",
    "reg_date": "2021-10-12T12:04:53.000Z"
  },
  {
    "id": 2580,
    "keyword": null,
    "link": null,
    "title": " java get number of months between two dates",
    "description": "SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\"); \t\t Date birth = sdf.parse(\"2000-01-01\"); Date now = new Date(System.currentTimeMillis()); \t\t Calendar c = Calendar.getInstance(); c.setTimeInMillis(now.getTime() - birth.getTime()); int y = c.get(Calendar.YEAR)-1970; int m = c.get(Calendar.MONTH); int d = c.get(Calendar.DAY_OF_MONTH)-1;\nLocalDate jamesBirthDay = new LocalDate(1955, 5, 19); LocalDate now = new LocalDate(2015, 7, 30);          int monthsBetween = Months.monthsBetween(jamesBirthDay, now).getMonths(); int yearsBetween = Years.yearsBetween(jamesBirthDay, now).getYears();          System.out.println(\"Month since father of Java born : \"                      + monthsBetween); System.out.println(\"Number of years since father of Java born : \"                      + yearsBetween);\n\t\tLocalDate currentDay = LocalDate.of(1955, Month.MAY, 19); \t\tLocalDate desiredDay = LocalDate.now(); \t\tPeriod age = Period.between(currentDay, desiredDay); \t\tint years = age.getYears(); \t\tint months = age.getMonths();  \t\tint numberOfMonthsBetweenDates =  months+years*12;\n",
    "reg_date": "2021-10-12T12:04:53.000Z"
  },
  {
    "id": 2581,
    "keyword": null,
    "link": null,
    "title": " java get object",
    "description": "package com.tutorialspoint;  import java.lang.annotation.Retention; import java.lang.annotation.RetentionPolicy; import java.lang.reflect.Field;  public class FieldDemo {     public static void main(String[] args) throws NoSuchFieldException,        SecurityException, IllegalArgumentException, IllegalAccessException {                  SampleClass sampleObject = new SampleClass();       sampleObject.setSampleField(\"data\");              Field field = SampleClass.class.getField(\"sampleField\");       System.out.println(field.get(sampleObject));    } }  @CustomAnnotation(name = \"SampleClass\",  value = \"Sample Class Annotation\") class SampleClass {     @CustomAnnotation(name=\"sampleClassField\",  value = \"Sample Field Annotation\")    public String sampleField;         public String getSampleField() {       return sampleField;    }     public void setSampleField(String sampleField) {       this.sampleField = sampleField;    } }  @Retention(RetentionPolicy.RUNTIME) @interface CustomAnnotation {    public String name();    public String value(); }\n",
    "reg_date": "2021-10-12T12:04:53.000Z"
  },
  {
    "id": 2582,
    "keyword": null,
    "link": null,
    "title": " java get ram usage",
    "description": "MemoryUsage heapMemoryUsage = ManagementFactory.getMemoryMXBean().getHeapMemoryUsage(); long maxMB = heapMemoryUsage.getMax()/(1024*1024); long usedMB = heapMemoryUsage.getUsed()/(1024*1024);\n",
    "reg_date": "2021-10-12T12:04:53.000Z"
  },
  {
    "id": 2583,
    "keyword": null,
    "link": null,
    "title": " java get random",
    "description": "import java.util.Random;  Random rand = new Random();  // Obtain a number between [0 - 49]. int n = rand.nextInt(50);  // Add 1 to the result to get a number from the required range // (i.e., [1 - 50]). n += 1;\nimport java.util.Random;  Random rand = new Random(); int maxNumber = 10;  int randomNumber = rand.nextInt(maxNumber) + 1;  System.out.println(randomNumber);\n// Thread safe random number generator.  import java.util.concurrent.ThreadLocalRandom;    // Generate random integers   int val = ThreadLocalRandom.current().nextInt();    // Print random int System.out.println(\"Random Integer: \" + val);  \nint random = (int) (Math.random()*(max-min+1)+min);\nimport java.util.Random; class GenerateRandom {     public static void main( String args[] ) {       Random rand = new Random(); //instance of random class       int upperbound = 25;         //generate random values from 0-24       int int_random = rand.nextInt(upperbound);        double double_random=rand.nextDouble();       float float_random=rand.nextFloat();              System.out.println(\"Random integer value from 0 to\" + (upperbound-1) + \" : \"+ int_random);       System.out.println(\"Random float value between 0.0 and 1.0 : \"+float_random);       System.out.println(\"Random double value between 0.0 and 1.0 : \"+double_random);     } }\nint rand = ThreadLocalRandom.current().nextInt(x,y);\n",
    "reg_date": "2021-10-12T12:04:53.000Z"
  },
  {
    "id": 2584,
    "keyword": null,
    "link": null,
    "title": " java get random index from array",
    "description": "String[] available_cards = {\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"Queen\", \"King\", \"Jack\", \"Ace\"};   java.util.Random random = new java.util.Random(); int random_computer_card = random.nextInt(available_cards.length); System.out.println(available_cards[random_computer_card]);\nprivate int getRandomIndex(int arrayLength) {   Random r = new Random();   return r.nextInt(arrayLength); }\n",
    "reg_date": "2021-10-12T12:04:53.000Z"
  },
  {
    "id": 2585,
    "keyword": null,
    "link": null,
    "title": " java get relative path",
    "description": "String path = \"/var/data/stuff/xyz.dat\"; String base = \"/var/data\"; String relative = new File(base).toURI().relativize(new File(path).toURI()).getPath(); // relative == \"stuff/xyz.dat\"\n",
    "reg_date": "2021-10-12T12:04:53.000Z"
  },
  {
    "id": 2586,
    "keyword": null,
    "link": null,
    "title": " java get screen size",
    "description": "Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();  // the screen height screenSize.getHeight();  // the screen width screenSize.getWidth();\nint screenHeight = screenSize.height; int screenWidth = screenSize.width; \nDimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();\n",
    "reg_date": "2021-10-12T12:04:53.000Z"
  },
  {
    "id": 2587,
    "keyword": null,
    "link": null,
    "title": " java get set",
    "description": "this.getLukas();  public int getLukas() { return this.lukas }\nclass Employ {   public String name;\t\t\t\t\t\t//name of the employ      public String getName()\t\t\t\t\t//Get the name   {     return name;   }      public String setName(String newName)\t\t//Set the name   {     this.name = newName;   } }   \nclass Thing {   private int secret; // This is a field.    public int Secret { // This is a property.     get {       Debug.Print(\"Somebody is accessing the secret!\");       return secret;     }      set {       Debug.Print(\"Somebody is writing to the secret!\");       secret = value; // Note the use of the implicit variable \"value\" here.     }   } } \npublic setValue(value) {   this.value = value; }\npublic getValue() {   return value; }\n",
    "reg_date": "2021-10-12T12:04:53.000Z"
  },
  {
    "id": 2588,
    "keyword": null,
    "link": null,
    "title": " java get size of matrix",
    "description": "//Get rows size matrix matrix.length; //Get columns size of matrix matrix[0].length;\npublic static void main(String[] args) {      int[][] foo = new int[][] {         new int[] { 1, 2, 3 },         new int[] { 1, 2, 3, 4},     };      System.out.println(foo.length); //2     System.out.println(foo[0].length); //3     System.out.println(foo[1].length); //4 }\n",
    "reg_date": "2021-10-12T12:04:54.000Z"
  },
  {
    "id": 2589,
    "keyword": null,
    "link": null,
    "title": " java get system line separator",
    "description": "System.lineSeparator()\n",
    "reg_date": "2021-10-12T12:04:54.000Z"
  },
  {
    "id": 2590,
    "keyword": null,
    "link": null,
    "title": " java get temp dir",
    "description": "System.getProperty(\"java.io.tmpdir\")\n",
    "reg_date": "2021-10-12T12:04:54.000Z"
  },
  {
    "id": 2591,
    "keyword": null,
    "link": null,
    "title": " java get unique elements from array",
    "description": "String[] unique = Arrays.stream(array).distinct().toArray(String[]::new);\n",
    "reg_date": "2021-10-12T12:04:54.000Z"
  },
  {
    "id": 2592,
    "keyword": null,
    "link": null,
    "title": " java get year",
    "description": "import java.util.Calendar;  int year = Calendar.getInstance().get(Calendar.YEAR);\nimport java.time.ZoneId; import java.util.Date;  new Date().toInstant().atZone(ZoneId.systemDefault()).toLocalDate().getYear();\n",
    "reg_date": "2021-10-12T12:04:54.000Z"
  },
  {
    "id": 2593,
    "keyword": null,
    "link": null,
    "title": " java get year from date",
    "description": "import java.util.Calendar;  int year = Calendar.getInstance().get(Calendar.YEAR);\nSimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\"); Date date = format.parse(datetime); SimpleDateFormat df = new SimpleDateFormat(\"yyyy\"); year = df.format(date); \nimport java.time.ZoneId; import java.util.Date;  new Date().toInstant().atZone(ZoneId.systemDefault()).toLocalDate().getYear();\n",
    "reg_date": "2021-10-12T12:04:54.000Z"
  },
  {
    "id": 2594,
    "keyword": null,
    "link": null,
    "title": " java go troght loop object",
    "description": "import java.util.ArrayList;  ArrayList<String> list = new ArrayList<String>();  list.add('SUB TO') list.add('UNCODEABLE')    for(int i = 0; i > list.length(); i++){    print(list.get(i))    }\nimport java.util.List; import java.util.ArrayList;  List<String> list = new ArrayList<>();  list.add(\"first\"); list.add(\"last\");  for(String s : list) {   if (s != null) {     //do whaterver wanted     // example:     System.out.println(s);   } } \n",
    "reg_date": "2021-10-12T12:04:54.000Z"
  },
  {
    "id": 2595,
    "keyword": null,
    "link": null,
    "title": " java graphics interface",
    "description": "import javax.swing.*; class gui{     public static void main(String args[]){        JFrame frame = new JFrame(\"My First GUI\");        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);        frame.setSize(300,300);        JButton button = new JButton(\"Press\");        frame.getContentPane().add(button); // Adds Button to content pane of frame        frame.setVisible(true);     } } \n",
    "reg_date": "2021-10-12T12:04:54.000Z"
  },
  {
    "id": 2596,
    "keyword": null,
    "link": null,
    "title": " java gridpane background color",
    "description": "GridPane pane = new GridPane(); pane.setBackground(new Background(new BackgroundFill(Color.AQUA, CornerRadii.EMPTY, Insets.EMPTY)));\n",
    "reg_date": "2021-10-12T12:04:54.000Z"
  },
  {
    "id": 2597,
    "keyword": null,
    "link": null,
    "title": " java gui",
    "description": "import javax.swing.*; class gui{     public static void main(String args[]){        JFrame frame = new JFrame(\"My First GUI\");        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);        frame.setSize(300,300);        JButton button = new JButton(\"Click me\");        frame.getContentPane().add(button); // Adds Button to content pane of frame        frame.setVisible(true);     } } \nimport java.util.UUID;  public class RandomStringUUID {     public static void main(String[] args) {         // Creating a random UUID (Universally unique identifier).         UUID uuid = UUID.randomUUID();         String randomUUIDString = uuid.toString();          System.out.println(\"Random UUID String = \" + randomUUIDString);         System.out.println(\"UUID version       = \" + uuid.version());         System.out.println(\"UUID variant       = \" + uuid.variant());     } } \nimport javax.swing.*; class main {     public static void main(String args[]){        JFrame frame = new JFrame(\"Hello World\");        frame.setSize(300,300)          JButton button = new JButton(\"You should totally click me\");        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);        frame.getContentPane().add(button); // Adds Button to content pane of frame        frame.setVisible(true);     } }\nimport javax.swing.*;  public class Main {   public static void main(String []args) {          JFrame framing = new JFrame();     framing.setPSize     framing.setExtendedState()  \n",
    "reg_date": "2021-10-12T12:04:54.000Z"
  },
  {
    "id": 2598,
    "keyword": null,
    "link": null,
    "title": " java guid",
    "description": "String id = UUID.randomUUID().toString();\n",
    "reg_date": "2021-10-12T12:04:54.000Z"
  },
  {
    "id": 2599,
    "keyword": null,
    "link": null,
    "title": " java hash password",
    "description": "import java.security.NoSuchAlgorithmException; import java.security.SecureRandom; import java.security.spec.InvalidKeySpecException; import java.security.spec.KeySpec; import java.util.Arrays; import java.util.Base64; import java.util.regex.Matcher; import java.util.regex.Pattern;  import javax.crypto.SecretKeyFactory; import javax.crypto.spec.PBEKeySpec;  /**  * Hash passwords for storage, and test passwords against password tokens.  *   * Instances of this class can be used concurrently by multiple threads.  *    * @author erickson  * @see <a href=\"http://stackoverflow.com/a/2861125/3474\">StackOverflow</a>  */ public final class PasswordAuthentication {    /**    * Each token produced by this class uses this identifier as a prefix.    */   public static final String ID = \"$31$\";    /**    * The minimum recommended cost, used by default    */   public static final int DEFAULT_COST = 16;    private static final String ALGORITHM = \"PBKDF2WithHmacSHA1\";    private static final int SIZE = 128;    private static final Pattern layout = Pattern.compile(\"\\\\$31\\\\$(\\\\d\\\\d?)\\\\$(.{43})\");    private final SecureRandom random;    private final int cost;    public PasswordAuthentication()   {     this(DEFAULT_COST);   }    /**    * Create a password manager with a specified cost    *     * @param cost the exponential computational cost of hashing a password, 0 to 30    */   public PasswordAuthentication(int cost)   {     iterations(cost); /* Validate cost */     this.cost = cost;     this.random = new SecureRandom();   }    private static int iterations(int cost)   {     if ((cost < 0) || (cost > 30))       throw new IllegalArgumentException(\"cost: \" + cost);     return 1 << cost;   }    /**    * Hash a password for storage.    *     * @return a secure authentication token to be stored for later authentication     */   public String hash(char[] password)   {     byte[] salt = new byte[SIZE / 8];     random.nextBytes(salt);     byte[] dk = pbkdf2(password, salt, 1 << cost);     byte[] hash = new byte[salt.length + dk.length];     System.arraycopy(salt, 0, hash, 0, salt.length);     System.arraycopy(dk, 0, hash, salt.length, dk.length);     Base64.Encoder enc = Base64.getUrlEncoder().withoutPadding();     return ID + cost + '$' + enc.encodeToString(hash);   }    /**    * Authenticate with a password and a stored password token.    *     * @return true if the password and token match    */   public boolean authenticate(char[] password, String token)   {     Matcher m = layout.matcher(token);     if (!m.matches())       throw new IllegalArgumentException(\"Invalid token format\");     int iterations = iterations(Integer.parseInt(m.group(1)));     byte[] hash = Base64.getUrlDecoder().decode(m.group(2));     byte[] salt = Arrays.copyOfRange(hash, 0, SIZE / 8);     byte[] check = pbkdf2(password, salt, iterations);     int zero = 0;     for (int idx = 0; idx < check.length; ++idx)       zero |= hash[salt.length + idx] ^ check[idx];     return zero == 0;   }    private static byte[] pbkdf2(char[] password, byte[] salt, int iterations)   {     KeySpec spec = new PBEKeySpec(password, salt, iterations, SIZE);     try {       SecretKeyFactory f = SecretKeyFactory.getInstance(ALGORITHM);       return f.generateSecret(spec).getEncoded();     }     catch (NoSuchAlgorithmException ex) {       throw new IllegalStateException(\"Missing algorithm: \" + ALGORITHM, ex);     }     catch (InvalidKeySpecException ex) {       throw new IllegalStateException(\"Invalid SecretKeyFactory\", ex);     }   }    /**    * Hash a password in an immutable {@code String}.     *     * <p>Passwords should be stored in a {@code char[]} so that it can be filled     * with zeros after use instead of lingering on the heap and elsewhere.    *     * @deprecated Use {@link #hash(char[])} instead    */   @Deprecated   public String hash(String password)   {     return hash(password.toCharArray());   }    /**    * Authenticate with a password in an immutable {@code String} and a stored     * password token.     *     * @deprecated Use {@link #authenticate(char[],String)} instead.    * @see #hash(String)    */   @Deprecated   public boolean authenticate(String password, String token)   {     return authenticate(password.toCharArray(), token);   }  }\n",
    "reg_date": "2021-10-12T12:04:55.000Z"
  },
  {
    "id": 2600,
    "keyword": null,
    "link": null,
    "title": " java hashcode",
    "description": "@Overridepublic int hashCode() {    int hash = 7;    hash = 31 * hash + (int) id;    hash = 31 * hash + (name == null ? 0 : name.hashCode());    hash = 31 * hash + (email == null ? 0 : email.hashCode());    return hash;}\nimport java.io.*; public class IB {      public static void main(String args[]) {       String a = \"100\";       String b = \"100\";       if(a.equals(b))       {         System.out.println(\"Equal variables:\");         System.out.println(a.hashCode() + \"\\n\" + b.hashCode());       }              String c = \"100\";       String d = \"500\";         if(!c.equals(d))       {           System.out.println(\"\\nUn-equal variables:\");           System.out.println(c.hashCode() + \"\\n\" + d.hashCode());       }       String Str = new String(\"We are learning hashCode in Java\");       System.out.println(\"Hashcode for Str :\" + Str.hashCode() );    } }\n",
    "reg_date": "2021-10-12T12:04:55.000Z"
  },
  {
    "id": 2601,
    "keyword": null,
    "link": null,
    "title": " java hashmap entryset",
    "description": "for (Map.Entry<String, String> entry : yourHashMap.entrySet()) { \tSystem.out.println(entry.getKey() + \" = \" + entry.getValue()); }\n",
    "reg_date": "2021-10-12T12:04:55.000Z"
  },
  {
    "id": 2602,
    "keyword": null,
    "link": null,
    "title": " java hashmap example",
    "description": "// Import the HashMap class import java.util.HashMap;  \t// First Example     // Create a HashMap object called capitalCities     HashMap<String, String> capitalCities = new HashMap<String, String>();      // Add keys and values (Country, City)     \tcapitalCities.put(\"England\", \"London\");     \tcapitalCities.put(\"Germany\", \"Berlin\");     \tcapitalCities.put(\"Norway\", \"Oslo\");     \tcapitalCities.put(\"USA\", \"Washington DC\");     \tSystem.out.println(capitalCities);  \t//Second Example \t// Create a HashMap object called stGrade \tMap<String, Integer> stGrade = new HashMap<String, Integer>();   \t// Insert elements         \tstGrade.put(\"aaron\", new Integer(90));         \tstGrade.put(\"isaac\", new Integer(100));         \tstGrade.put(\"john\", new Integer(35));         \tstGrade.put(\"mohammad\", new Integer(100));   \t// Get value \t   \tstGrade.get(\"mohammad\"); \t// returns 100 \t\tstGrade.get(\"aaron\"); \t\t// returns 90 \t\tstGrade.get(\"john\");\t \t// returns 35 \t\tstGrade.get(\"isaac\"); \t\t// returns 100 \t\t\nimport java.util.HashMap; // import the HashMap class  // instantiate a HashMap instance HashMap<String, String> capitalCities = new HashMap<String, String>();  // SCROLL DOWN FOR LIST OF ALL METHODS -------------------------------------- // to use any methods below add the function name to the instance name // General Form: HashMapInstanceName.{functionName}({parameter list}); // Specific Example Using the Put Method:  capitalCities.put(\"California\", \"Sacramento\");  // SCROLL DOWN FOR LIST OF ALL METHODS --------------------------------------  1. void\tclear()    \t- Removes all of the mappings from this map.  2. Object clone()      - Returns a shallow copy of this HashMap instance: the keys and values themselves are not cloned.  3. boolean\tcontainsKey(Object key) \t- Returns true if this map contains a mapping for the specified key.  4. boolean\tcontainsValue(Object value) \t- Returns true if this map maps one or more keys to the specified value.  5. V\tget(Object key) \t- Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.  6. V\tgetOrDefault(Object key, V defaultValue) \t- Returns the value to which the specified key is mapped, or defaultValue if this map contains no mapping for the key.  7. boolean\tisEmpty() \t- Returns true if this map contains no key-value mappings.  8. Set<K>\tkeySet() \t- Returns a Set view of the keys contained in this map.        9. V\tput(K key, V value) \t- Associates the specified value with the specified key in this map.   10. V\tremove(Object key) \t- Removes the mapping for the specified key from this map if present.        11. boolean\tremove(Object key, Object value) \t- Removes the entry for the specified key only if it is currently mapped to the specified value.  12. V\treplace(K key, V value) \t- Replaces the entry for the specified key only if it is currently mapped to some value.  13. boolean\treplace(K key, V oldValue, V newValue) \t- Replaces the entry for the specified key only if currently mapped to the specified value.  14. int\tsize() \t- Returns the number of key-value mappings in this map.        15. Collection<V>\tvalues() \t- Returns a Collection view of the values contained in this map.\n//remember to first import java.util.*; first  //you can swap out string or integer for other data types Map<String, Integer> d = new HashMap<>(); \n//Hash map creation Map< String,Integer> hm =                           new HashMap< String,Integer>();  //inserting elements into hashmap        hm.put(\"a\", new Integer(100));         hm.put(\"b\", new Integer(200));         hm.put(\"c\", new Integer(300));         hm.put(\"d\", new Integer(400)); \nHashMap<Integer,String> map=new HashMap<Integer,String>();//key is integer, value is String\n",
    "reg_date": "2021-10-12T12:04:55.000Z"
  },
  {
    "id": 2603,
    "keyword": null,
    "link": null,
    "title": " java hashmap int int",
    "description": "Map<Integer, Integer> map = new HashMap<Integer, Integer>(); map.put(1, 0);\n",
    "reg_date": "2021-10-12T12:04:55.000Z"
  },
  {
    "id": 2604,
    "keyword": null,
    "link": null,
    "title": " java hashmap methods",
    "description": "// Import the HashMap class import java.util.HashMap;  \t// First Example     // Create a HashMap object called capitalCities     HashMap<String, String> capitalCities = new HashMap<String, String>();      // Add keys and values (Country, City)     \tcapitalCities.put(\"England\", \"London\");     \tcapitalCities.put(\"Germany\", \"Berlin\");     \tcapitalCities.put(\"Norway\", \"Oslo\");     \tcapitalCities.put(\"USA\", \"Washington DC\");     \tSystem.out.println(capitalCities);  \t//Second Example \t// Create a HashMap object called stGrade \tMap<String, Integer> stGrade = new HashMap<String, Integer>();   \t// Insert elements         \tstGrade.put(\"aaron\", new Integer(90));         \tstGrade.put(\"isaac\", new Integer(100));         \tstGrade.put(\"john\", new Integer(35));         \tstGrade.put(\"mohammad\", new Integer(100));   \t// Get value \t   \tstGrade.get(\"mohammad\"); \t// returns 100 \t\tstGrade.get(\"aaron\"); \t\t// returns 90 \t\tstGrade.get(\"john\");\t \t// returns 35 \t\tstGrade.get(\"isaac\"); \t\t// returns 100 \t\t\nimport java.util.HashMap; // import the HashMap class  // instantiate a HashMap instance HashMap<String, String> capitalCities = new HashMap<String, String>();  // SCROLL DOWN FOR LIST OF ALL METHODS -------------------------------------- // to use any methods below add the function name to the instance name // General Form: HashMapInstanceName.{functionName}({parameter list}); // Specific Example Using the Put Method:  capitalCities.put(\"California\", \"Sacramento\");  // SCROLL DOWN FOR LIST OF ALL METHODS --------------------------------------  1. void\tclear()    \t- Removes all of the mappings from this map.  2. Object clone()      - Returns a shallow copy of this HashMap instance: the keys and values themselves are not cloned.  3. boolean\tcontainsKey(Object key) \t- Returns true if this map contains a mapping for the specified key.  4. boolean\tcontainsValue(Object value) \t- Returns true if this map maps one or more keys to the specified value.  5. V\tget(Object key) \t- Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.  6. V\tgetOrDefault(Object key, V defaultValue) \t- Returns the value to which the specified key is mapped, or defaultValue if this map contains no mapping for the key.  7. boolean\tisEmpty() \t- Returns true if this map contains no key-value mappings.  8. Set<K>\tkeySet() \t- Returns a Set view of the keys contained in this map.        9. V\tput(K key, V value) \t- Associates the specified value with the specified key in this map.   10. V\tremove(Object key) \t- Removes the mapping for the specified key from this map if present.        11. boolean\tremove(Object key, Object value) \t- Removes the entry for the specified key only if it is currently mapped to the specified value.  12. V\treplace(K key, V value) \t- Replaces the entry for the specified key only if it is currently mapped to some value.  13. boolean\treplace(K key, V oldValue, V newValue) \t- Replaces the entry for the specified key only if currently mapped to the specified value.  14. int\tsize() \t- Returns the number of key-value mappings in this map.        15. Collection<V>\tvalues() \t- Returns a Collection view of the values contained in this map.\n//Hash map creation Map< String,Integer> hm =                           new HashMap< String,Integer>();  //inserting elements into hashmap        hm.put(\"a\", new Integer(100));         hm.put(\"b\", new Integer(200));         hm.put(\"c\", new Integer(300));         hm.put(\"d\", new Integer(400)); \nHashMap<Integer,String> map=new HashMap<Integer,String>();//key is integer, value is String\n- HasHMap can have null key, order is not guaranteed\n",
    "reg_date": "2021-10-12T12:04:55.000Z"
  },
  {
    "id": 2605,
    "keyword": null,
    "link": null,
    "title": " java hashmap syntax",
    "description": "// Import the HashMap class import java.util.HashMap;  \t// First Example     // Create a HashMap object called capitalCities     HashMap<String, String> capitalCities = new HashMap<String, String>();      // Add keys and values (Country, City)     \tcapitalCities.put(\"England\", \"London\");     \tcapitalCities.put(\"Germany\", \"Berlin\");     \tcapitalCities.put(\"Norway\", \"Oslo\");     \tcapitalCities.put(\"USA\", \"Washington DC\");     \tSystem.out.println(capitalCities);  \t//Second Example \t// Create a HashMap object called stGrade \tMap<String, Integer> stGrade = new HashMap<String, Integer>();   \t// Insert elements         \tstGrade.put(\"aaron\", new Integer(90));         \tstGrade.put(\"isaac\", new Integer(100));         \tstGrade.put(\"john\", new Integer(35));         \tstGrade.put(\"mohammad\", new Integer(100));   \t// Get value \t   \tstGrade.get(\"mohammad\"); \t// returns 100 \t\tstGrade.get(\"aaron\"); \t\t// returns 90 \t\tstGrade.get(\"john\");\t \t// returns 35 \t\tstGrade.get(\"isaac\"); \t\t// returns 100 \t\t\nimport java.util.HashMap; // import the HashMap class  // instantiate a HashMap instance HashMap<String, String> capitalCities = new HashMap<String, String>();  // SCROLL DOWN FOR LIST OF ALL METHODS -------------------------------------- // to use any methods below add the function name to the instance name // General Form: HashMapInstanceName.{functionName}({parameter list}); // Specific Example Using the Put Method:  capitalCities.put(\"California\", \"Sacramento\");  // SCROLL DOWN FOR LIST OF ALL METHODS --------------------------------------  1. void\tclear()    \t- Removes all of the mappings from this map.  2. Object clone()      - Returns a shallow copy of this HashMap instance: the keys and values themselves are not cloned.  3. boolean\tcontainsKey(Object key) \t- Returns true if this map contains a mapping for the specified key.  4. boolean\tcontainsValue(Object value) \t- Returns true if this map maps one or more keys to the specified value.  5. V\tget(Object key) \t- Returns the value to which the specified key is mapped, or null if this map contains no mapping for the key.  6. V\tgetOrDefault(Object key, V defaultValue) \t- Returns the value to which the specified key is mapped, or defaultValue if this map contains no mapping for the key.  7. boolean\tisEmpty() \t- Returns true if this map contains no key-value mappings.  8. Set<K>\tkeySet() \t- Returns a Set view of the keys contained in this map.        9. V\tput(K key, V value) \t- Associates the specified value with the specified key in this map.   10. V\tremove(Object key) \t- Removes the mapping for the specified key from this map if present.        11. boolean\tremove(Object key, Object value) \t- Removes the entry for the specified key only if it is currently mapped to the specified value.  12. V\treplace(K key, V value) \t- Replaces the entry for the specified key only if it is currently mapped to some value.  13. boolean\treplace(K key, V oldValue, V newValue) \t- Replaces the entry for the specified key only if currently mapped to the specified value.  14. int\tsize() \t- Returns the number of key-value mappings in this map.        15. Collection<V>\tvalues() \t- Returns a Collection view of the values contained in this map.\n//remember to first import java.util.*; first  //you can swap out string or integer for other data types Map<String, Integer> d = new HashMap<>(); \n//Hash map creation Map< String,Integer> hm =                           new HashMap< String,Integer>();  //inserting elements into hashmap        hm.put(\"a\", new Integer(100));         hm.put(\"b\", new Integer(200));         hm.put(\"c\", new Integer(300));         hm.put(\"d\", new Integer(400)); \nHashMap is the implementation of Map interface and it store elements in Key, value pair\n- HasHMap can have null key, order is not guaranteed\n",
    "reg_date": "2021-10-12T12:04:55.000Z"
  },
  {
    "id": 2606,
    "keyword": null,
    "link": null,
    "title": " java hashmap time complexity",
    "description": "On the other hand, a HashMap has an average time complexity of O(1)    for put() , contains() and remove() operations.    The worst-case time complexity for those operations is O(log n)    since Java 8, and O(n) before that. Space-complexity wise, both   have a complexity of O(n)\nOn the other hand, a HashMap has an average time complexity of O(1) for put() , contains() and remove() operations. The worst-case time complexity for those operations is O(log n) since Java 8, and O(n) before that. Space-complexity wise, both have a complexity of O(n)\n",
    "reg_date": "2021-10-12T12:04:55.000Z"
  },
  {
    "id": 2607,
    "keyword": null,
    "link": null,
    "title": " java hello world",
    "description": "public class Main {    public static void main(String[] args) {   \tSystem.out.println(\"Hello, World!\");    }    }\npublic class HelloWorld{      public static void main(String []args){         System.out.println(\"Hello World\");      } }\nclass Simple{       public static void main(String args[]){        System.out.println(\"Hello Java\");       }   }  \npublic class Main {   public static void main(String[] args) {     System.out.println(\"Hello, World!\");   } }\npublic class PrintHelloWorld  {   public static void main(String[] args)    {     //This is the print line. Anything in the Quotation Maks will be printed   \tSystem.out.println(\"Hello, World!\");    } }\n  public class HelloWorld  {          public static void main (String[] args)        {              // Ausgabe Hello World!              System.out.println(\"Hello World!\");        } }\npublic class Main {    public static void main(String[] args) { \t// Print out   \tSystem.out.println(\"Hello, World!\");    }    }\npublic class HelloWorld {     public static void main(String[] args) {        System.out.println(\"Hello, World\");    }  } \n",
    "reg_date": "2021-10-12T12:04:55.000Z"
  },
  {
    "id": 2608,
    "keyword": null,
    "link": null,
    "title": " java hex to rgb",
    "description": "int r = 20; int g = 99; int b = 155; String hex = String.format(\"#\u0002X\u0002X\u0002X\", r, g, b); System.out.println(hex);  //Output #14639B\nColor.decode(\"#FFCCEE\");\n",
    "reg_date": "2021-10-12T12:04:56.000Z"
  },
  {
    "id": 2609,
    "keyword": null,
    "link": null,
    "title": " java how to cast int to String",
    "description": "int x = 3;  Integer.toString(int) \nString s = String.ValueOf(x); //converts a int x to a String s\nint i = 1234;  String s = String.ValueOf(i)\n",
    "reg_date": "2021-10-12T12:04:56.000Z"
  },
  {
    "id": 2610,
    "keyword": null,
    "link": null,
    "title": " java how to center window",
    "description": "setLocationRelativeTo(null);\n",
    "reg_date": "2021-10-12T12:04:56.000Z"
  },
  {
    "id": 2611,
    "keyword": null,
    "link": null,
    "title": " java how to check string is number",
    "description": "public static boolean isNumeric(String strNum) {     if (strNum == null) {         return false;     }     try {         double d = Double.parseDouble(strNum);     } catch (NumberFormatException nfe) {         return false;     }     return true; }\n",
    "reg_date": "2021-10-12T12:04:56.000Z"
  },
  {
    "id": 2612,
    "keyword": null,
    "link": null,
    "title": " java how to compare strings",
    "description": "System.out.println(\"hey\".equals(\"hey\")); //prints true  /* \talways use .equals() instead of ==,     because == does the compare the string content but     loosely where the string is stored in. */\n// compare two strings in java using String.equals() method in java public class EqualsMethodDemo {    public static void main(String[] args)    {       String str1 = new String(\"HelloWorld\");       String str2 = new String(\"Flower\");       String str3 = new String(\"Hello\");       String str4 = new String(\"Hello\");       String str5 = new String(\"hello\");       // compare str1 != str2       System.out.println(\"Compare \" + str1 + \" and \" + str2 + \": \" + str1.equals(str2));       // compare str3 = str4       System.out.println(\"Compare \" + str3 + \" and \" + str4 + \": \" + str3.equals(str4));       // compare str4 != str5       System.out.println(\"Compare \" + str4 + \" and \" + str5 + \": \" + str4.equals(str5));       // compare str1 != str4       System.out.println(\"Compare \" + str1 + \" and \" + str4 + \": \" + str1.equals(str4));    } }\n******Java String compareTo()******    The Java String class compareTo() method compares the given    string with the current string lexicographically.    It returns a positive number, negative number, or 0.   ___________________________________________   \tif s1 > s2, it returns positive number   \tif s1 < s2, it returns negative number   \tif s1 == s2, it returns 0     ___________________________________________      \nif (aName.equals(anotherName))         {              System.out.println(aName + \" equals \" + anotherName);         }         else              {                  System.out.println(aName + \" does not equal \" +anotherName );                                         }\n// These two have the same value new String(\"test\").equals(\"test\") // --> true   // ... but they are not the same object new String(\"test\") == \"test\" // --> false   // ... neither are these new String(\"test\") == new String(\"test\") // --> false  \nString1.equals(String2)\n",
    "reg_date": "2021-10-12T12:04:56.000Z"
  },
  {
    "id": 2613,
    "keyword": null,
    "link": null,
    "title": " java how to continue outer loop",
    "description": "public class Test {     public static void main(String[] args) {         outerloop:         for (int i=0; i < 5; i++) {             for (int j=0; j < 5; j++) {                 if (i * j > 6) {                     System.out.println(\"Breaking\");                     break outerloop;                 }                 System.out.println(i + \" \" + j);             }         }         System.out.println(\"Done\");     } } \n",
    "reg_date": "2021-10-12T12:04:56.000Z"
  },
  {
    "id": 2614,
    "keyword": null,
    "link": null,
    "title": " java how to convert string to int",
    "description": "String myString = \"1234\"; int foo = Integer.parseInt(myString);\nint result = Integer.parseInt(number);\nint result = Integer.parseInt(\"500\"); System.out.println(result) // prints 500 as int\n\tString number = \"10\"; \tint result = Integer.parseInt(number);\t\t\t \tSystem.out.println(result); Copy\nString myString = \"1234\"; int number = Integer.parseInt(myString);\nclass Scratch{     public static void main(String[] args){         String str = \"50\";         System.out.println( Integer.parseInt( str ));   // Integer.parseInt()     } }\n",
    "reg_date": "2021-10-12T12:04:57.000Z"
  },
  {
    "id": 2615,
    "keyword": null,
    "link": null,
    "title": " java how to create arraylist",
    "description": "import java.util.ArrayList;\nArrayList<Integer> integerArray = new ArrayList<Integer>(); ArrayList<String> integerArray = new ArrayList<String>(); ArrayList<Double> integerArray = new ArrayList<Double>(); //... keep replacing what is inside the <> with the appropriate //data type \nimport java.util.ArrayList; //create ArrayList ArrayList<String> arrayList = new ArrayList<String>();\nList<Integer> list = new ArrayList<>();\n",
    "reg_date": "2021-10-12T12:04:57.000Z"
  },
  {
    "id": 2616,
    "keyword": null,
    "link": null,
    "title": " java how to create india currency",
    "description": "NumberFormat format = NumberFormat.getCurrencyInstance(new Locale(\"en\", \"in\")).format(d); \n",
    "reg_date": "2021-10-12T12:04:57.000Z"
  },
  {
    "id": 2617,
    "keyword": null,
    "link": null,
    "title": " java how to define a function",
    "description": "//declare a function like this: void function(int parameter1) { \t//function body } //call the function like this: function(1);\n",
    "reg_date": "2021-10-12T12:04:57.000Z"
  },
  {
    "id": 2618,
    "keyword": null,
    "link": null,
    "title": " java how to find length of int",
    "description": "int x = 1234;  int lengthOfInt = String.valueOf(x).length(); //convert integer to String \t\t\t\t\t\t\t\t\t\t\t  //and get length of the String\n",
    "reg_date": "2021-10-12T12:04:57.000Z"
  },
  {
    "id": 2619,
    "keyword": null,
    "link": null,
    "title": " java how to find the largest number in an arraylist",
    "description": "List<Integer> myList = new ArrayList<>();  for(int i = 0; i < 10; i++){     myList.add(i); } //gets highest number in the list int highestNumber = Collections.max(myList);  System.out.Println(highestNumber);  //output: 9\nint max = (The provided List).stream().max((i1,i2)->(i1>i2)?1:(i1<i2)-1:0).get();\n",
    "reg_date": "2021-10-12T12:04:57.000Z"
  },
  {
    "id": 2620,
    "keyword": null,
    "link": null,
    "title": " java how to generate guid",
    "description": "String guid = java.util.UUID.randomUUID().toString();\n",
    "reg_date": "2021-10-12T12:04:57.000Z"
  },
  {
    "id": 2621,
    "keyword": null,
    "link": null,
    "title": " java how to get all threads",
    "description": "Set<Thread> threadSet = Thread.getAllStackTraces().keySet();\n",
    "reg_date": "2021-10-12T12:04:57.000Z"
  },
  {
    "id": 2622,
    "keyword": null,
    "link": null,
    "title": " java how to get current date",
    "description": "import java.time.format.DateTimeFormatter;   import java.time.LocalDateTime;     public class CurrentDateTimeExample1 {       public static void main(String[] args) {        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm:ss\");      LocalDateTime now = LocalDateTime.now();      System.out.println(dtf.format(now));     }     }   \n",
    "reg_date": "2021-10-12T12:04:57.000Z"
  },
  {
    "id": 2623,
    "keyword": null,
    "link": null,
    "title": " java how to get current time",
    "description": "import java.time.format.DateTimeFormatter;   import java.time.LocalDateTime;     public class CurrentDateTimeExample1 {       public static void main(String[] args) {        DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm:ss\");      LocalDateTime now = LocalDateTime.now();      System.out.println(dtf.format(now));     }     }   \n// get current date and timein java using Calendar.getTime() method import java.util.Calendar; import java.util.Date; public class UsingCalendarClass {    public static void main(String[] args)    {       Date date = Calendar.getInstance().getTime();       System.out.println(date);    } }\nimport java.util.Calendar; Date currentTime = Calendar.getInstance().getTime();\n",
    "reg_date": "2021-10-12T12:04:57.000Z"
  },
  {
    "id": 2624,
    "keyword": null,
    "link": null,
    "title": " java how to go into newline while using print",
    "description": "// newline while using System.out.print(); System.out.print(\"First Line\\nSecond Line\"); //output: //First Line //Second Line\nSystem.out.println(\"<Your line here.>\");\n",
    "reg_date": "2021-10-12T12:04:58.000Z"
  },
  {
    "id": 2625,
    "keyword": null,
    "link": null,
    "title": " java how to initialize an array",
    "description": "int[] data = {10,20,30,40,50,60,71,80,90,91}; // or int[] data; data = new int[] {10,20,30,40,50,60,71,80,90,91}; // or int[] data = new int[10]; data = {10,20,30,40,50,60,71,80,90,91};\nint[] arr = new int[10];\t//Can hold 10 elements\nint[] arr = new int[5];\t // integer array of size 5 you can also change data type \nint[] numbers = new int[5]; /* size of the array is 5 */ int[] nums = new int[] {1, 2, 3, 4, 5}; /* Fill the array ny these numbers*/ String[] names = new String[10]; /* array of type string and size 10 */ String[] countries = new String[] {\"Germany\", \"US\"}; \nint[] data = {10,20,30,40,50,60,71,80,90,91};  // or  int[] data; data = new int[] {10,20,30,40,50,60,71,80,90,91}; \nint[] array=new int[5]; int[] array2=new int[]{1,2};\n",
    "reg_date": "2021-10-12T12:04:58.000Z"
  },
  {
    "id": 2626,
    "keyword": null,
    "link": null,
    "title": " java how to iterate through a arraylist",
    "description": "// Using Classic For Loop for (int i=0; i<myArrayList.size(); i++) {     System.out.println(myArrayList.get(i)); } /*****************************************************/ //Advanced For Loop - ArrayList<String>  for(String str : myArrayList) {     System.out.println(str); } /*****************************************************/ //Using Iterator Iterator arrayListIterator = myArrayList.iterator(); while (arrayListIterator.hasNext()) {     System.out.println(arrayListIterator.next()); } /*****************************************************/ //ForEach - java 8 - ArrayList<String> myArrayList.forEach( str -> System.out.println(str));     \n// will iterate through each index of the array list // using the size of the array list as the max. // (the last index is the size of the array list - 1)  for (int i = 0; i < myArrayList.size(); i++) {      System.out.println(myArrayList.get(i));   // will print each index as it loops }  \n",
    "reg_date": "2021-10-12T12:04:58.000Z"
  },
  {
    "id": 2627,
    "keyword": null,
    "link": null,
    "title": " java how to make a gui",
    "description": "import java.awt.BorderLayout; import java.awt.event.ActionEvent; import java.awt.event.ActionListener;  import javax.swing.JButton; import javax.swing.JFrame; import javax.swing.JTextArea;  public class Foo{    public static void main(String[] args) {      JFrame f = new JFrame(\"A JFrame\");     f.setSize(250, 250);     f.setLocation(300,200);     final JTextArea textArea = new JTextArea(10, 40);     f.getContentPane().add(BorderLayout.CENTER, textArea);     final JButton button = new JButton(\"Click Me\");     f.getContentPane().add(BorderLayout.SOUTH, button);     button.addActionListener(new ActionListener() {          @Override         public void actionPerformed(ActionEvent e) {             textArea.append(\"Button was clicked\\n\");          }     });      f.setVisible(true);    }  }\n",
    "reg_date": "2021-10-12T12:04:58.000Z"
  },
  {
    "id": 2628,
    "keyword": null,
    "link": null,
    "title": " java how to make a parameter optional",
    "description": "void foo(String a, Integer b) {     //... }  void foo(String a) {     foo(a, 0); // here, 0 is a default value for b }  foo(\"a\", 2); foo(\"a\");\nvoid foo(String a, Optional<Integer> bOpt) {     Integer b = bOpt.isPresent() ? bOpt.get() : 0;     //... }  foo(\"a\", Optional.of(2)); foo(\"a\", Optional.<Integer>absent());\nvoid foo(String a, Object... b) {     Integer b1 = 0;     String b2 = \"\";     if (b.length > 0) {       if (!(b[0] instanceof Integer)) {            throw new IllegalArgumentException(\"...\");       }       b1 = (Integer)b[0];     }     if (b.length > 1) {         if (!(b[1] instanceof String)) {              throw new IllegalArgumentException(\"...\");         }         b2 = (String)b[1];         //...     }     //... }  foo(\"a\"); foo(\"a\", 1); foo(\"a\", 1, \"b2\");\n//Java 9 and above only     @SuppressWarnings(\"unchecked\")     static <T> T getParm(Map<String, Object> map, String key, T defaultValue)     {         return (map.containsKey(key)) ? (T) map.get(key) : defaultValue;     }      void foo(Map<String, Object> parameters) {         String a = getParm(parameters, \"a\", \"\");         int b = getParm(parameters, \"b\", 0);         // d = ...     }      foo(Map.of(\"a\",\"a\",  \"b\",2,  \"d\",\"value\"));\n class Foo {      private final String a;       private final Integer b;       Foo(String a, Integer b) {        this.a = a;        this.b = b;      }       //...  }   class FooBuilder {    private String a = \"\";     private Integer b = 0;     FooBuilder setA(String a) {      this.a = a;      return this;    }     FooBuilder setB(Integer b) {      this.b = b;      return this;    }     Foo build() {      return new Foo(a, b);    }  }   Foo foo = new FooBuilder().setA(\"a\").build();\nvoid foo(String a, Integer b, Integer c) {     b = b != null ? b : 0;     c = c != null ? c : 0;     //... }  foo(\"a\", null, 2);\nvoid foo(Map<String, Object> parameters) {     String a = \"\";      Integer b = 0;     if (parameters.containsKey(\"a\")) {          if (!(parameters.get(\"a\") instanceof Integer)) {              throw new IllegalArgumentException(\"...\");         }         a = (Integer)parameters.get(\"a\");     }     if (parameters.containsKey(\"b\")) {          //...      }     //... }  foo(ImmutableMap.<String, Object>of(     \"a\", \"a\",     \"b\", 2,      \"d\", \"value\")); \nvoid foo(String a, Integer... b) {     Integer b1 = b.length > 0 ? b[0] : 0;     Integer b2 = b.length > 1 ? b[1] : 0;     //... }  foo(\"a\"); foo(\"a\", 1, 2);\n",
    "reg_date": "2021-10-12T12:04:58.000Z"
  },
  {
    "id": 2629,
    "keyword": null,
    "link": null,
    "title": " java how to make a string lowercase",
    "description": "/* to find the lowercase or uppercase of a string,  * we just .toLowerCase() or .toUpperCase() */  public class CaseDemonstration {   public static void main(String[] args) {         \tString testString = \"THIS IS AN EXAMPLE OF A STRING\";     String testStringLower = testString.toLowerCase(); // make a string lowercase     System.out.println(testStringLower); // \"this is an example of a string\"     String testStringUpper = testStringLower.toUpperCase(); // make it upper again     System.out.println(testStringUpper); // \"THIS IS AN EXAMPLE OF A STRING\"        } }\n",
    "reg_date": "2021-10-12T12:04:58.000Z"
  },
  {
    "id": 2630,
    "keyword": null,
    "link": null,
    "title": " java how to make a variable global",
    "description": "public class Example {     public static int a;     public static int b; } \npublic class Example {     public static int a;     public static int b; }\n",
    "reg_date": "2021-10-12T12:04:58.000Z"
  },
  {
    "id": 2631,
    "keyword": null,
    "link": null,
    "title": " java how to make set",
    "description": "//Creating HashSet  HashSet<String> set = new HashSet();   //adding elements   set.add(\"One\");     set.add(\"Two\");      //Removing element); set.remove(\"One\");   //Removing all the elements available in the set   set.clear();  \nimport java.util.*; public class SetDemo {    public static void main(String args[]) {        int count[] = {34, 22,10,60,30,22};       Set<Integer> set = new HashSet<Integer>();       try {          for(int i = 0; i < 5; i++) {             set.add(count[i]);          }          System.out.println(set);           TreeSet sortedSet = new TreeSet<Integer>(set);          System.out.println(\"The sorted list is:\");          System.out.println(sortedSet);           System.out.println(\"The First element of the set is: \"+ (Integer)sortedSet.first());          System.out.println(\"The last element of the set is: \"+ (Integer)sortedSet.last());       }       catch(Exception e) {}    } } \nimport java.util.Arrays; import java.util.HashSet; import java.util.Set; /* check a set size by set.size() */  public class MainClass {   public static void main(String[] a) {     String elements[] = { \"A\", \"B\", \"C\", \"D\", \"E\" };     Set set = new HashSet(Arrays.asList(elements));      System.out.println(set.size());   } } \n",
    "reg_date": "2021-10-12T12:04:58.000Z"
  },
  {
    "id": 2632,
    "keyword": null,
    "link": null,
    "title": " java how to open a link",
    "description": "Runtime rt = Runtime.getRuntime(); String url = \"https://www.example.com\"; try { \trt.exec(\"rundll32 url.dll,FileProtocolHandler \" + url); } catch (IOException ioException) { \tioException.printStackTrace(); }\n",
    "reg_date": "2021-10-12T12:04:58.000Z"
  },
  {
    "id": 2633,
    "keyword": null,
    "link": null,
    "title": " java how to output to a executable",
    "description": "Process process = new ProcessBuilder(\"D:\\\\path\\\\executable.exe\").start();  InputStream processInputStream = process.geInputStream(); OutputSteam processOutputStream = process.getOutputStream();  BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(processOutputStream));  BufferedReader reader = new BufferedReader(new InputStreamReader(processInputStream));\n",
    "reg_date": "2021-10-12T12:04:58.000Z"
  },
  {
    "id": 2634,
    "keyword": null,
    "link": null,
    "title": " java how to print",
    "description": "//print and create new line after System.out.println(\"text\"); System.out.println(String); //You can use any variable type, not just strings, although //they are the most common  //Print without creating a new line System.out.print(\"text\"); System.out.print(String);\nSystem.out.println(\"Hello, World!\"); /*type System the class, the .out the field, and the println short  for print line */ \nSystem.out.println(\"whatever you want\"); //you can type sysout and then ctrl + space \nSystem.out.println(\"Your text here.\");\npublic class ConsoleTest {     public static void main(String[] args) {         System.out.println(\"Console is: \" + System.console());     } }\nSystem.out.print(46); // prints on the same line System.out.println(\"Tree\"); // prints code on a new line\n",
    "reg_date": "2021-10-12T12:04:59.000Z"
  },
  {
    "id": 2635,
    "keyword": null,
    "link": null,
    "title": " java how to print a string[]",
    "description": "String[] array = new String[] {\"John\", \"Mary\", \"Bob\"}; System.out.println(Arrays.toString(array)); // [John, Mary, Bob]\n",
    "reg_date": "2021-10-12T12:04:59.000Z"
  },
  {
    "id": 2636,
    "keyword": null,
    "link": null,
    "title": " java how to print an array",
    "description": "import java.util.Arrays;  class Scratch{     public static void main(String[] args){         int[] arr = new int[3];         System.out.println( Arrays.toString( arr ));       \t//prints [0, 0, 0]     } }\nimport java.util.Arrays;  public class Array {      public static void main(String[] args) {         int[] array = {1, 2, 3, 4, 5};          System.out.println(Arrays.toString(array));     } }\nimport java.util.Arrays; //How to print Arrays in Java public class Printarray{        public static void main(String[] args){            String[] arr = new String[]{\"Mumbai\",\"Delhi\",\"Kolkata\",\"Chennai\"};          //Using for loop;     for(int i=0; i<arr.length;i++){       System.out.println(arr[i]);     }          //Using for-each loop;     for(String city:arr){       System.out.println(city);     }        //Using Arrays.toString() method     System.out.println(Arrays.toString(arr));                //Using Arrays.deepToString() method its also converting multidimensional arrays to strings.          System.out.println(Arrays.deepToString(arr));            //Using Array as list method     System.out.println(Arrays.asList(arr));          }    }\nSystem.out.println(Arrays.toString(arr));\npublic class Array {      public static void main(String[] args) {         int[] array = {1, 2, 3, 4, 5}; //Your array          for (int element: array) { //Advanced For Loop (For each)             System.out.println(element); //print each element of            \t\t\t\t\t\t\t     //the array for each iteration         }     } }\n",
    "reg_date": "2021-10-12T12:04:59.000Z"
  },
  {
    "id": 2637,
    "keyword": null,
    "link": null,
    "title": " java how to print without going into newline",
    "description": "System.out.print(\"Hello World!\"); System.out.print(\"Bonjour Le Monde!\"); // output: \"Hello World!Bonjour Le Monde!\" (all in one line) // the lines that are greyed out are comments and act as notes\n",
    "reg_date": "2021-10-12T12:04:59.000Z"
  },
  {
    "id": 2638,
    "keyword": null,
    "link": null,
    "title": " java how to read a text file",
    "description": " public static void main(String[] args) throws Exception    {      // pass the path to the file as a parameter      FileReader fr = new FileReader(\"C:\\\\Users\\\\pankaj\\\\Desktop\\\\test.txt\");         int i;      while ((i=fr.read()) != -1)        System.out.print((char) i);    } \nimport java.io.File; import java.io.FileNotFoundException; import java.util.Scanner;  class Scratch{     public static void main(String[] args) throws FileNotFoundException {         Scanner input = new Scanner(new File(\"filename\"));         input.next();       //returns next String         input.nextLine();   //returns next Line         input.nextBoolean();//returns next Boolean         input.nextInt();    //returns next Int         input.nextDouble(); //returns next double         ...     } }\n",
    "reg_date": "2021-10-12T12:04:59.000Z"
  },
  {
    "id": 2639,
    "keyword": null,
    "link": null,
    "title": " java how to read file extension",
    "description": "    private static String getFileExtension(File file) {         String extension = \"\";           try {             if (file != null && file.exists()) {                 String name = file.getName();                 extension = name.substring(name.lastIndexOf(\".\"));             }         } catch (Exception e) {             extension = \"\";         }           return extension;       }\n",
    "reg_date": "2021-10-12T12:04:59.000Z"
  },
  {
    "id": 2640,
    "keyword": null,
    "link": null,
    "title": " java how to reverse an array",
    "description": "int length = array.length; \t\tfor(int i=0;i<length/2;i++) { \t\t\tint swap = array[i]; \t\t\tarray[i] = array[length-i-1]; \t\t\tarray[length-i-1] = swap; \t\t} or Collections.reverse(Arrays.asList(array)); \nint length = array.length; \t\tfor(int i=0;i<length/2;i++) { \t\t\tint swap = array[i]; \t\t\tarray[i] = array[length-i-1]; \t\t\tarray[length-i-1] = swap; \t\t}\npublic class ReverseArray {       public static void main(String[] args) {           //Initialize array           int [] arr = new int [] {1, 2, 3, 4, 5};           System.out.println(\"Original array: \");           for (int i = 0; i < arr.length; i++) {               System.out.print(arr[i] + \" \");           }           System.out.println();           System.out.println(\"Array in reverse order: \");           //Loop through the array in reverse order           for (int i = arr.length-1; i >= 0; i--) {               System.out.print(arr[i] + \" \");           }       }   } \n// reverse array  for(int i=intArray.length-1;i>=0;i--)          System.out.print(intArray[i] + \"  \");\n",
    "reg_date": "2021-10-12T12:04:59.000Z"
  },
  {
    "id": 2641,
    "keyword": null,
    "link": null,
    "title": " java how to split a string into letters",
    "description": "//Java program to show the use of Split method (Java 8 and above) public class SplitString{    public static void main(String[] args)    {     //Initialize the String which needs to be split     String str = \"Enlighter\";          //Use the Split method and store the array of Strings returned in a String array.     String[] arr = str.split(\"\");          //Printing the characters using for-each loop     for(String character : arr)       System.out.print(char);\nString s=\"abcd\"; char[] a=s.toCharArray();\n",
    "reg_date": "2021-10-12T12:04:59.000Z"
  },
  {
    "id": 2642,
    "keyword": null,
    "link": null,
    "title": " java how to stop a thread",
    "description": "Thread t = new Thread(); try {   //{...your thread code here...} \t//at the end of the 'try{}' block.. \tt.interrupt(); } catch (InterruptedException e) {} //or whatever Exception your Thread will launch\n",
    "reg_date": "2021-10-12T12:04:59.000Z"
  },
  {
    "id": 2643,
    "keyword": null,
    "link": null,
    "title": " java how to stop code",
    "description": "System.exit(0);\n",
    "reg_date": "2021-10-12T12:04:59.000Z"
  },
  {
    "id": 2644,
    "keyword": null,
    "link": null,
    "title": " java http request",
    "description": "HttpClient client = HttpClient.newHttpClient(); HttpRequest request = HttpRequest.newBuilder()       .uri(URI.create(\"http://openjdk.java.net/\"))       .build(); client.sendAsync(request, BodyHandlers.ofString())       .thenApply(HttpResponse::body)       .thenAccept(System.out::println)       .join();\n// open a connection, the request method is \"GET\" by default URL url = new URL(\"http://example.com\"); HttpURLConnection connection = (HttpURLConnection) url.openConnection();  connection.setRequestMethod(\"GET\"); connection.setRequestProperty(\"Content-Type\", \"application/json\");  // you can use one of these methods to get the results connection.connect(); connection.getResponseCode(); connection.getInputStream(); connection.getOutputStream();  // close the connection connection.disconnect();\n",
    "reg_date": "2021-10-12T12:05:00.000Z"
  },
  {
    "id": 2645,
    "keyword": null,
    "link": null,
    "title": " java httpclient example",
    "description": "package com.zetcode;  import com.fasterxml.jackson.databind.ObjectMapper;  import java.io.IOException; import java.net.URI; import java.net.http.HttpClient; import java.net.http.HttpRequest; import java.net.http.HttpResponse; import java.util.HashMap;  public class PostRequest {      public static void main(String[] args) throws IOException, InterruptedException {          var values = new HashMap<String, String>() {{             put(\"name\", \"John Doe\");             put (\"occupation\", \"gardener\");         }};          var objectMapper = new ObjectMapper();         String requestBody = objectMapper                 .writeValueAsString(values);          HttpClient client = HttpClient.newHttpClient();         HttpRequest request = HttpRequest.newBuilder()                 .uri(URI.create(\"https://httpbin.org/post\"))                 .POST(HttpRequest.BodyPublishers.ofString(requestBody))                 .build();          HttpResponse<String> response = client.send(request,                 HttpResponse.BodyHandlers.ofString());          System.out.println(response.body());     } }\npackage com.zetcode;  import java.io.IOException; import java.net.URI; import java.net.http.HttpClient; import java.net.http.HttpRequest; import java.net.http.HttpResponse;  public class GetRequestJava11 {      public static void main(String[] args) throws IOException, InterruptedException {          HttpClient client = HttpClient.newHttpClient();         HttpRequest request = HttpRequest.newBuilder()                 .uri(URI.create(\"http://webcode.me\"))                 .build();          HttpResponse<String> response = client.send(request,                 HttpResponse.BodyHandlers.ofString());          System.out.println(response.body());     } } \n",
    "reg_date": "2021-10-12T12:05:00.000Z"
  },
  {
    "id": 2646,
    "keyword": null,
    "link": null,
    "title": " java if",
    "description": "else if statement is used to specify new condition if first condition is false. Syntax:  if(condition1) {    // execute if condition1 is true } else if (condition2) {    // execute if condition2 is true } else if (condition3) {    // execute if condition3 is true } else {    // execute if conditions 1, 2 and 3 becomes false }\nimport java.io.*; public class JavaIfElse {    public static void main(String[] args)    {       int number = 15;       // check if number is divisible by 2       if(number%2 == 0)       {          System.out.println(number + \" is even number\");       }       else       {          System.out.println(number + \" is odd number\");       }    } }\nif(a<b){ \t//if a<b you are here \t//do something }else if(a==b){ \t//if a==b you are here \t//do something }else{ \t//if none above conditions are matched you are here   \t//do something }\nif(x == 1 && y == 2){   println(\"x = 1 and y = 2\"); }\npublic class TestIfElse {      public static void main(String[] args) {         int a = 5, b = 6;         if (a > b) {             System.out.println(\"a is greater\");         } else {             System.out.println(\"b is greater\");         }     } }\nint x = 3;  if (x == 3) {   // block of code to be executed if the condition is true } else {   // block of code to be executed if the condition is false }\n",
    "reg_date": "2021-10-12T12:05:00.000Z"
  },
  {
    "id": 2647,
    "keyword": null,
    "link": null,
    "title": " java if ? operator",
    "description": "if(condition){ \t// block of code to be executed if the condition is true } else { \t// block of code to be executed if the condition is false }\nint x = 3;  if (x == 3) {   // block of code to be executed if the condition is true } else {   // block of code to be executed if the condition is false }\nint x = 3;  if (x == 3) {   // block of code to be executed if the condition is true }\n",
    "reg_date": "2021-10-12T12:05:00.000Z"
  },
  {
    "id": 2648,
    "keyword": null,
    "link": null,
    "title": " java if different ways",
    "description": "(condition) ? (what happens if true) : (what happens if false);  boolean party = friday ? play(\"what is love\") : play(\"The Sound of Silence\");\n",
    "reg_date": "2021-10-12T12:05:00.000Z"
  },
  {
    "id": 2649,
    "keyword": null,
    "link": null,
    "title": " java if one sting on array match",
    "description": "String[] fieldsToInclude = { \"id\", \"name\", \"location\" };  if ( ArrayUtils.contains( fieldsToInclude, \"id\" ) ) {     // Do some stuff. }\n",
    "reg_date": "2021-10-12T12:05:00.000Z"
  },
  {
    "id": 2650,
    "keyword": null,
    "link": null,
    "title": " java if string contains character",
    "description": "str_Sample.contains(\"Example\"));\nif (string.contains(character)\npublic boolean String.contains(CharSequence s);\n",
    "reg_date": "2021-10-12T12:05:00.000Z"
  },
  {
    "id": 2651,
    "keyword": null,
    "link": null,
    "title": " java image draw",
    "description": "package com.javacodegeeks.snippets.desktop;   import java.awt.Component; import java.awt.Frame; import java.awt.Graphics; import java.awt.Graphics2D; import java.awt.Image; import java.awt.Toolkit;   public class DrawImage {     static Image image;     public static void main(String[] args) {   // The image URL - change to where your image file is located!   String imageURL = \"image.png\";   // This call returns immediately and pixels are loaded in the background   image = Toolkit.getDefaultToolkit().getImage(imageURL);   // Create a frame   Frame frame = new Frame();   // Add a component with a custom paint method   frame.add(new CustomPaintComponent());   // Display the frame   int frameWidth = 300;   int frameHeight = 300;   frame.setSize(frameWidth, frameHeight);   frame.setVisible(true);    }    /**   * To draw on the screen, it is first necessary to subclass a Component    * and override its paint() method. The paint() method is automatically called    * by the windowing system whenever component's area needs to be repainted.   */   static class CustomPaintComponent extends Component {   public void paint(Graphics g) {     // Retrieve the graphics context; this object is used to paint shapes     Graphics2D g2d = (Graphics2D)g;     /**    * Draw an Image object    * The coordinate system of a graphics context is such that the origin is at the     * northwest corner and x-axis increases toward the right while the y-axis increases     * toward the bottom.    */     int x = 0;     int y = 0;     g2d.drawImage(image, x, y, this);   }     }   } \n",
    "reg_date": "2021-10-12T12:05:00.000Z"
  },
  {
    "id": 2652,
    "keyword": null,
    "link": null,
    "title": " java image to base64 example",
    "description": "public void imageEncoderDecoder() throws IOException {      // image path declaration     String imgPath = \"src/main/resources/images/bean.png\";      // read image from file     FileInputStream stream = new FileInputStream(imgPath);      // get byte array from image stream     int bufLength = 2048;     byte[] buffer = new byte[2048];     byte[] data;      ByteArrayOutputStream out = new ByteArrayOutputStream();     int readLength;     while ((readLength = stream.read(buffer, 0, bufLength)) != -1) {         out.write(buffer, 0, readLength);     }      data = out.toByteArray();     String imageString = Base64.getEncoder().withoutPadding().encodeToString(data);    byte[] decodeImg = Base64.getDecoder().decode(imageString);     out.close();     stream.close();      // System.out.println(\"Encode Image Result : \" + imageString);     System.out.println(\"Decode Image Result : \" + Arrays.toString(decodeImg)); }\n       public static void main(String[] args) throws Exception{              File f =  new File(\"/opt/myImage.jpg\");              String encodstring = encodeFileToBase64Binary(f);              System.out.println(encodstring);        }          private static String encodeFileToBase64Binary(File file) throws Exception{             FileInputStream fileInputStreamReader = new FileInputStream(file);             byte[] bytes = new byte[(int)file.length()];             fileInputStreamReader.read(bytes);             return new String(Base64.encodeBase64(bytes), \"UTF-8\");         } \n",
    "reg_date": "2021-10-12T12:05:00.000Z"
  },
  {
    "id": 2653,
    "keyword": null,
    "link": null,
    "title": " java implement equals and hashcode jpa",
    "description": "@Entity public class Book implements Identifiable<Long> {       @Id     @GeneratedValue     private Long id;       private String title;       @Override     public boolean equals(Object o) {         if (this == o) return true;           if (!(o instanceof Book))             return false;           Book other = (Book) o;           return id != null &&                 id.equals(other.getId());     }       @Override     public int hashCode() {         return getClass().hashCode();     }       //Getters and setters omitted for brevity } \n",
    "reg_date": "2021-10-12T12:05:00.000Z"
  },
  {
    "id": 2654,
    "keyword": null,
    "link": null,
    "title": " java implement interface",
    "description": "// interface in java example interface Vehicle {    public void accelerate(); } class BMW implements Vehicle {    public void accelerate()    {       System.out.println(\"BMW accelerating...\");    } } public class InterfaceDemo {    public static void main(String[] args)    {       BMW obj = new BMW();       obj.accelerate();    } }\n// Assume we have the simple interface: interface Appendable { \tvoid append(string content); } // We can implement it like that: class SimplePrinter implements Appendable {  \tpublic void append(string content) {    \t\tSystem.out.println(content);      } } // ... and maybe like that: class FileWriter implements Appendable {  \tpublic void append(string content) {    \t\t// Appends content into a file      } } // Both classes are Appendable.\ninterface methods{  public static hey();  }  class scratch implements methods{   // Required to implement all methods declared in an interface    // Or else the class becomes abstract   public static hey(){    System.out.println(\"Hey\");    } }\n/* File name : MammalInt.java */ public class MammalInt implements Animal {     public void eat() {       System.out.println(\"Mammal eats\");    }     public void travel() {       System.out.println(\"Mammal travels\");    }      public int noOfLegs() {       return 0;    }     public static void main(String args[]) {       MammalInt m = new MammalInt();       m.eat();       m.travel();    } } \nInterfaces specify what a class must do.  It is the blueprint of the class. It is used to achieve total abstraction.  We are using implements keyword for interface.  Basic statement we all know in Selenium is WebDriver driver = new FirefoxDriver(); WebDriver itself is an Interface. So we are initializing Firefox browser using Selenium WebDriver. It means we are creating a reference variable of the interface and creating an Object. So WebDriver is an Interface and FirefoxDriver is a class.  \n// interface syntax interface InterfaceName {    fields // by default interface fields are public, static final    methods // by default interface methods are abstract, public }\n",
    "reg_date": "2021-10-12T12:05:01.000Z"
  },
  {
    "id": 2655,
    "keyword": null,
    "link": null,
    "title": " java import biginteger",
    "description": "import java.math.BigInteger;\nThe java.math.BigInteger.compareTo(BigInteger value) method Compares this BigInteger with the BigInteger passed as the parameter.    ________________________________________ import java.math.BigInteger;    public class GFG {        public static void main(String[] args)     {         // Creating 2 BigInteger objects         BigInteger b1, b2;            b1 = new BigInteger(\"321456\");         b2 = new BigInteger(\"321456\");            // apply compareTo() method         int comparevalue = b1.compareTo(b2);            // print result         if (comparevalue == 0) {                System.out.println(\"BigInteger1 \"                                + b1 + \" and BigInteger2 \"                                + b2 + \" are equal\");         }         else if (comparevalue == 1) {                System.out.println(\"BigInteger1 \" + b1 + \"                  is greater than BigInteger2 \" + b2);         }         else {                System.out.println(\"BigInteger1 \" + b1 + \"                  is lesser than BigInteger2 \" + b2);         }     } }      \n",
    "reg_date": "2021-10-12T12:05:01.000Z"
  },
  {
    "id": 2656,
    "keyword": null,
    "link": null,
    "title": " java import decimalformat",
    "description": "import java.text.DecimalFormat;\nString pattern = \"###,###.###\"; DecimalFormat decimalFormat = new DecimalFormat(pattern); \n",
    "reg_date": "2021-10-12T12:05:01.000Z"
  },
  {
    "id": 2657,
    "keyword": null,
    "link": null,
    "title": " java import swing",
    "description": "import java.awt.*; import javax.swing.*;\n",
    "reg_date": "2021-10-12T12:05:01.000Z"
  },
  {
    "id": 2658,
    "keyword": null,
    "link": null,
    "title": " java import text file into arraylist",
    "description": "List<String> list = Files.readAllLines(new File(\"input.txt\").toPath(), Charset.defaultCharset() );\nScanner s = new Scanner(new File(\"filepath\")); ArrayList<String> list = new ArrayList<String>(); while (s.hasNext()){     list.add(s.next()); } s.close();\n",
    "reg_date": "2021-10-12T12:05:01.000Z"
  },
  {
    "id": 2659,
    "keyword": null,
    "link": null,
    "title": " java indexof all occurrences",
    "description": "String stringName = \"Hello\"; String characterToFind = \"l\"; //This example will find all the Ls in this string and will print the index of //it as soon as it is detected  for(int i = 0; i < stringName.length(); i++){   if(stringName.substring(i, i+1).equals(characterToFind)){     System.out.println(characterToFind + \"found at \" + i);   }    }\nint index = word.indexOf(guess); while (index >= 0) {     System.out.println(index);     index = word.indexOf(guess, index + 1); } \n",
    "reg_date": "2021-10-12T12:05:01.000Z"
  },
  {
    "id": 2660,
    "keyword": null,
    "link": null,
    "title": " java indexof array",
    "description": "java.util.Arrays.asList(theArray).indexOf(o)\n public int getArrayIndex(int[] arr,int value) {          int k=0;         for(int i=0;i<arr.length;i++){              if(arr[i]==value){                 k=i;                 break;             }         }     return k; } \npublic class Exercise6 {        public static int  findIndex (int[] my_array, int t) {         if (my_array == null) return -1;         int len = my_array.length;         int i = 0;         while (i < len) {             if (my_array[i] == t) return i;             else i=i+1;         }         return -1;     }     public static void main(String[] args) {       int[] my_array = {25, 14, 56, 15, 36, 56, 77, 18, 29, 49};       System.out.println(\"Index position of 25 is: \" + findIndex(my_array, 25));       System.out.println(\"Index position of 77 is: \" + findIndex(my_array, 77));        } }  \n",
    "reg_date": "2021-10-12T12:05:01.000Z"
  },
  {
    "id": 2661,
    "keyword": null,
    "link": null,
    "title": " java infinitew recursion",
    "description": "public static void MyClass {   System.out.println(\"Infinity\");   MyClass();   //calls class inside of the class, creating infinite loop   }\n",
    "reg_date": "2021-10-12T12:05:02.000Z"
  },
  {
    "id": 2662,
    "keyword": null,
    "link": null,
    "title": " java init arraylist string",
    "description": "List<String> places = Arrays.asList(\"Buenos Aires\", \"C&oacute;rdoba\", \"La Plata\");\n",
    "reg_date": "2021-10-12T12:05:02.000Z"
  },
  {
    "id": 2663,
    "keyword": null,
    "link": null,
    "title": " java initialize array with same value",
    "description": "Arrays.fill(array, -1); \n",
    "reg_date": "2021-10-12T12:05:02.000Z"
  },
  {
    "id": 2664,
    "keyword": null,
    "link": null,
    "title": " java initialize float to zero",
    "description": "float zero = 0.0f;\n",
    "reg_date": "2021-10-12T12:05:02.000Z"
  },
  {
    "id": 2665,
    "keyword": null,
    "link": null,
    "title": " java initialize int array",
    "description": "int[] data = {10,20,30,40,50,60,71,80,90,91}; // or int[] data; data = new int[] {10,20,30,40,50,60,71,80,90,91}; // or int[] data = new int[10]; data = {10,20,30,40,50,60,71,80,90,91};\nint[] arr = new int[10];\t//Can hold 10 elements\nint[] arr = new int[5];\t // integer array of size 5 you can also change data type \nint[] data = {10,20,30,40,50,60,71,80,90,91};  // or  int[] data; data = new int[] {10,20,30,40,50,60,71,80,90,91}; \nint[] arr = {3,6,9,12}; int[] arr = new int[]{1, 2, 3};\nint[] arr = new int[n];\n",
    "reg_date": "2021-10-12T12:05:02.000Z"
  },
  {
    "id": 2666,
    "keyword": null,
    "link": null,
    "title": " java initialize map with values in one line",
    "description": "Map<String, String> emptyMap = Map.of(); Map<String, String> singletonMap = Map.of(\"key1\", \"value\"); Map<String, String> map = Map.of(\"key1\",\"value1\", \"key2\", \"value2\"); \nMap<String, Integer> map = Stream.of(   new AbstractMap.SimpleEntry<>(\"idea\", 1),    new AbstractMap.SimpleEntry<>(\"mobile\", 2))   .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\nMap<String, Integer> map = Stream.of(   new AbstractMap.SimpleImmutableEntry<>(\"idea\", 1),       new AbstractMap.SimpleImmutableEntry<>(\"mobile\", 2))   .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue));\n",
    "reg_date": "2021-10-12T12:05:02.000Z"
  },
  {
    "id": 2667,
    "keyword": null,
    "link": null,
    "title": " java initialize object array",
    "description": "import java.util.stream.Stream;  class Example {      public static void main(String[] args) {     int len = 5;  // For example.          // Use Stream to initialize array.     Foo[] arr = Stream.generate(() -> new Foo(1))  // Lambda can be anything that returns Foo.                        .limit(len)                       .toArray(Foo[]::new);   }      // For example.   class Foo {     public int bar;      public Foo(int bar) {       this.bar = bar;     }   } } \n",
    "reg_date": "2021-10-12T12:05:02.000Z"
  },
  {
    "id": 2668,
    "keyword": null,
    "link": null,
    "title": " java initialize string array",
    "description": "String[] myStringArray = new String[3]; String[] myStringArray = {\"a\", \"b\", \"c\"}; String[] myStringArray = new String[]{\"a\", \"b\", \"c\"};\nString[] movies;\nString[] errorSoon = {\"Hello\", \"World\"}; \n",
    "reg_date": "2021-10-12T12:05:02.000Z"
  },
  {
    "id": 2669,
    "keyword": null,
    "link": null,
    "title": " java input character",
    "description": "import java.util.Scanner; Scanner inp = new Scanner(System.in); char character = inp.next().charAt(0);\nchar c = reader.next().charAt(0);\n",
    "reg_date": "2021-10-12T12:05:02.000Z"
  },
  {
    "id": 2670,
    "keyword": null,
    "link": null,
    "title": " java insert array",
    "description": "// ! IMPORTANTE ! // in JAVA an array is not the same as an ArrayList object!! // 1 - declare, instanciate and populate int arr[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };  // 2 - declare and instanciate an int array with maxSize // note: the index goes between 0 and maxSize-1 int newarr[] = new int[maxSize]; // 2.1 - insert the value n on the position pos newarr[pos] = n;  // 2.2 - insert values recursively for (i = 0; i < maxSize; i++) { newarr[i] = arr[i]; }\n",
    "reg_date": "2021-10-12T12:05:03.000Z"
  },
  {
    "id": 2671,
    "keyword": null,
    "link": null,
    "title": " java insert at index",
    "description": "myList.add(int index, E elemen);\n",
    "reg_date": "2021-10-12T12:05:03.000Z"
  },
  {
    "id": 2672,
    "keyword": null,
    "link": null,
    "title": " java insert into arraylist",
    "description": "ArrayList<Integer> str=new ArrayList<Integer>(); str.add(0); str.add(1);  // Result = [0, 1]      str.add(1, 11);  // Result = [0, 11, 1]\nArrayList<String> arrayList = new ArrayList<>(); // Adds element at the back of the list arrayList.add(\"foo\"); arrayList.add(\"bar\"); // Result = [\"foo\", \"bar\"]  // Adds element at the specified index arrayList.add(1, \"baz\"); // Result = [\"foo\", \"baz\", \"bar\"]\npublic void add(int index, E element) // adding element 25 at third position arrlist.add(2,25);\n",
    "reg_date": "2021-10-12T12:05:03.000Z"
  },
  {
    "id": 2673,
    "keyword": null,
    "link": null,
    "title": " java insertion sort",
    "description": "/** * Insertion sort algorithm, O(n^2) time complexity. */ public static void insertionSort(int[] arr) {   int n = arr.length;   for(int i = 1; i < n; i++) {     int key = arr[i];     int j = i - 1;     //shift until you find the position to place the element 'key'     while(j >= 0 && arr[j] > key) {       arr[j+1] = arr[j];       j--;     }     //place element 'key' in the correct position in the sorted part of the array     arr[j+1] = key;   } }\nInsertion program public class InsertionSortExample {    public void sort(int[] arrNum)    {       int number = arrNum.length;       for(int a = 1; a < number; ++a)       {          int keyValue = arrNum[a];          int b = a - 1;          while(b >= 0 && arrNum[b] > keyValue)          {             arrNum[b + 1] = arrNum[b];             b = b - 1;          }          arrNum[b + 1] = keyValue;       }    }    static void displayArray(int[] arrNum)    {       int num = arrNum.length;       for(int a = 0; a < num; ++a)       {          System.out.print(arrNum[a] + \" \");       }       System.out.println();    }    public static void main(String[] args)    {       int[] arrInput = { 50, 80, 10, 30, 90, 60 };       InsertionSortExample obj = new InsertionSortExample();       obj.sort(arrInput);       displayArray(arrInput);    } }\n// Java program for implementation of Insertion Sort public class InsertionSort {     /*Function to sort array using insertion sort*/     void sort(int arr[])     {         int n = arr.length;         for (int i=1; i<n; ++i)         {             int key = arr[i];             int j = i-1;                          /* Move elements of arr[0..i-1], that are             greater than key, to one position ahead             of their current position */             while (j>=0 && arr[j] > key)             {                 arr[j+1] = arr[j];                 j = j-1;             }             arr[j+1] = key;         }     }     /* A utility function to print array of size n*/     static void printArray(int arr[])     {         int n = arr.length;         for (int i=0; i<n; ++i)             System.out.print(arr[i] + \" \");         System.out.println();     }     // Driver method     public static void main(String args[])     {         int arr[] = {12, 11, 13, 5, 6};         InsertionSort ob = new InsertionSort();         ob.sort(arr);         printArray(arr);     } }\n",
    "reg_date": "2021-10-12T12:05:03.000Z"
  },
  {
    "id": 2674,
    "keyword": null,
    "link": null,
    "title": " java instant to localdatetime",
    "description": "covert localdatetime to Instant object  LocalDateTime().now().toInstant(ZoneOffset.UTC)\nimport java.time.Instant; import java.time.LocalDateTime; import java.time.ZoneOffset;  // ...  //Convert instant to LocalDateTime, no timezone, add a zero offset / UTC+0 LocalDateTime ldt = LocalDateTime.ofInstant(instant, ZoneOffset.UTC); \n",
    "reg_date": "2021-10-12T12:05:03.000Z"
  },
  {
    "id": 2675,
    "keyword": null,
    "link": null,
    "title": " java instantiate collection with values",
    "description": "    List<Integer> integerArray = Arrays.asList(2, 41, 42, 48);\n",
    "reg_date": "2021-10-12T12:05:03.000Z"
  },
  {
    "id": 2676,
    "keyword": null,
    "link": null,
    "title": " java int array",
    "description": "int[] array = new int[/*size*/]; // Works for double, char, etc.\nint intArray[];    //declaring array intArray = new int[20];  // allocating memory to array //OR int[] intArray = new int[20]; // combining both statements in one\nint number = 110101;  String temp = Integer.toString(number); int[] numbers = new int[temp.length()]; for (int i = 0; i < temp.length(); i++) {     numbers[i] = temp.charAt(i) - '0'; }\nint[] theNumbers = new int[5];  arr[0] = 4; arr[1] = 8; arr[2] = 15; arr[3] = 16; arr[4] = 23; arr[5] = 42;\nint[] arr = new int[10];\t//Can hold 10 elements\nint[] arr = new int[5];\t // integer array of size 5 you can also change data type \n",
    "reg_date": "2021-10-12T12:05:03.000Z"
  },
  {
    "id": 2677,
    "keyword": null,
    "link": null,
    "title": " java int stream min",
    "description": "list.stream().min(Integer::compare).get()\n",
    "reg_date": "2021-10-12T12:05:03.000Z"
  },
  {
    "id": 2678,
    "keyword": null,
    "link": null,
    "title": " java int to biginteger",
    "description": "yourInt = yourBigInteger.intValue();\n// Primitive int int myInt = 10 BigInteger bigInt = BigInteger.valueOf(myInt); // Integer object Integer integer = Integer.valueOf(myInt); BigInteger bigInt = BigInteger.valueOf(myInteger.intValue()); bigInt = BigInteger.valueOf(myInteger);\t\t// works too\n",
    "reg_date": "2021-10-12T12:05:03.000Z"
  },
  {
    "id": 2679,
    "keyword": null,
    "link": null,
    "title": " java int to binary",
    "description": "int n = 1000; String s = Integer.toBinaryString(n);\nimport java.util.*; import java.util.Scanner; public class IntegerToBinary {    public static void main(String[] args)    {       int num;       String str = \"\";       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter the a number : \");       num = sc.nextInt();       // convert int to binary java       while(num > 0)       {          int y = num % 2;          str = y + str;          num = num / 2;       }       System.out.println(\"The binary conversion is : \" + str);       sc.close();    } }\nString binary = Integer.toBinaryString(num);\npublic class DecimalToBinaryExample2{     public static void toBinary(int decimal){          int binary[] = new int[40];          int index = 0;          while(decimal > 0){            binary[index++] = decimal%2;            decimal = decimal/2;          }          for(int i = index-1;i >= 0;i--){            System.out.print(binary[i]);          }     System.out.println();//new line   }     public static void main(String args[]){       System.out.println(\"Decimal of 10 is: \");   toBinary(10);     System.out.println(\"Decimal of 21 is: \");   toBinary(21);     System.out.println(\"Decimal of 31 is: \");     toBinary(31);   }}    \npublic static String makeBinaryString(int n) { \tStringBuilder sb = new StringBuilder(); \twhile (n > 0) {     sb.append(n % 2); \t\tn /= 2; \t}   \tsb.reverse();  \t   \treturn sb.toString(); }\nInteger.toString(100,8) // prints 144 --octal representation  Integer.toString(100,2) // prints 1100100 --binary representation  Integer.toString(100,16) //prints 64 --Hex representation\n",
    "reg_date": "2021-10-12T12:05:03.000Z"
  },
  {
    "id": 2680,
    "keyword": null,
    "link": null,
    "title": " java int to binary string",
    "description": "int n = 1000; String s = Integer.toBinaryString(n);\nString binary = Integer.toBinaryString(num);\npublic static String makeBinaryString(int n) { \tStringBuilder sb = new StringBuilder(); \twhile (n > 0) {     sb.append(n % 2); \t\tn /= 2; \t}   \tsb.reverse();  \t   \treturn sb.toString(); }\nInteger.toString(100,8) // prints 144 --octal representation  Integer.toString(100,2) // prints 1100100 --binary representation  Integer.toString(100,16) //prints 64 --Hex representation\nimport java.util.*;  class Bin {      //fields     private Double number;      //constructors     public Bin(){         number = 0.0;     }      public Bin(Double num){         number = num;     }      //methods     public ArrayList<String> reverseArrayList(ArrayList<String> alist) {                  ArrayList<String> array = new ArrayList<String>();          int x = 0;         int i = alist.size() - 1;          while(x < alist.size()){             array.add(alist.get(i));             i -= 1;             x += 1;         }          return array;     }  \t//getter methods     public ArrayList<String> getBinVal(){         ArrayList<String> binaryVal = new ArrayList<String>();         ArrayList<String> array = new ArrayList<String>();         Double num = number;         Double sol1, check;           while( num > 0 ) {              sol1 = num/2;             check = sol1 - Math.floor(sol1);              if(check > 0) {                 binaryVal.add(\"1\");                 num = sol1 - 0.5;             }              else {                 binaryVal.add(\"0\");                 num = sol1;             }         }          while(binaryVal.size() < 4) {             binaryVal.add(\"0\");         }          array = reverseArrayList(binaryVal);         return array;     }  }  class MainClass {          public static void main(String[] args) { \t\t       \t//add the number in as a command line argument         Double num = Double.valueOf(args[0]); \t\t       \t//create an instance of Bin         Bin value = new Bin(num); \t\t       \t//print the binary value         System.out.println(value.getBinVal());     } }\n",
    "reg_date": "2021-10-12T12:05:04.000Z"
  },
  {
    "id": 2681,
    "keyword": null,
    "link": null,
    "title": " java int to double",
    "description": "// Primitive type int myInt = 5; double myDouble = (double)myInt;\t\t// explicit cast myDouble = myInt;\t\t\t\t\t\t// implicit cast // Object type Double myDouble = new Double(myInt)\t\t// via constructor myDouble = Double.valueOf(myInt)\t\t// via valueOf\nDouble d= new Double(i);//first way   Double d2=Double.valueOf(i);//second way  \ndouble d=i;\n",
    "reg_date": "2021-10-12T12:05:04.000Z"
  },
  {
    "id": 2682,
    "keyword": null,
    "link": null,
    "title": " java int to hex fixed length",
    "description": "//You can replace X with x to get lower case hex characters //Replace the 2 with the amount of digits you want String.format(\"\u0002X\", value);\n",
    "reg_date": "2021-10-12T12:05:04.000Z"
  },
  {
    "id": 2683,
    "keyword": null,
    "link": null,
    "title": " java int to int array",
    "description": "int number = 110101;  String temp = Integer.toString(number); int[] numbers = new int[temp.length()]; for (int i = 0; i < temp.length(); i++) {     numbers[i] = temp.charAt(i) - '0'; }\n",
    "reg_date": "2021-10-12T12:05:04.000Z"
  },
  {
    "id": 2684,
    "keyword": null,
    "link": null,
    "title": " java int to string",
    "description": "int x = 3;  Integer.toString(int) \nString s = String.ValueOf(x); //converts a int x to a String s\nString s = String.ValueOf(x); //converts a int x to a String s  //or  String s = Integer(x).toString();\t//converts a int x to a String s\nString s = String.valueOf(n); String s = Integer.toString(int);\nInteger.toString(n) // converts n to String\nInteger.toString(int)\n",
    "reg_date": "2021-10-12T12:05:04.000Z"
  },
  {
    "id": 2685,
    "keyword": null,
    "link": null,
    "title": " java integer compareto",
    "description": "public class IntegerCompareToExample {       public static void main(String[] args) {               // compares two Integer values numerically             Integer x = new Integer(\"90\");             Integer y= new Integer(\"58\");             int retResult =  x.compareTo(y);                   if(retResult > 0) {                System.out.println(\"x is greater than y\");             } else if(retResult< 0) {                System.out.println(\"x is less than y\");             } else {                System.out.println(\"x is equal to y\");             }       }   }  \n",
    "reg_date": "2021-10-12T12:05:04.000Z"
  },
  {
    "id": 2686,
    "keyword": null,
    "link": null,
    "title": " java integer division to float",
    "description": "instead of writing v = s/i (this does integer division) write v = (float)s / i\n",
    "reg_date": "2021-10-12T12:05:04.000Z"
  },
  {
    "id": 2687,
    "keyword": null,
    "link": null,
    "title": " java integer division tofloat",
    "description": "instead of writing v = s/i (this does integer division) write v = (float)s/i\n",
    "reg_date": "2021-10-12T12:05:04.000Z"
  },
  {
    "id": 2688,
    "keyword": null,
    "link": null,
    "title": " java integer to binary string",
    "description": "int n = 1000; String s = Integer.toBinaryString(n);\nimport java.util.*; import java.util.Scanner; public class IntegerToBinary {    public static void main(String[] args)    {       int num;       String str = \"\";       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter the a number : \");       num = sc.nextInt();       // convert int to binary java       while(num > 0)       {          int y = num % 2;          str = y + str;          num = num / 2;       }       System.out.println(\"The binary conversion is : \" + str);       sc.close();    } }\npublic static String makeBinaryString(int n) { \tStringBuilder sb = new StringBuilder(); \twhile (n > 0) {     sb.append(n % 2); \t\tn /= 2; \t}   \tsb.reverse();  \t   \treturn sb.toString(); }\n",
    "reg_date": "2021-10-12T12:05:04.000Z"
  },
  {
    "id": 2689,
    "keyword": null,
    "link": null,
    "title": " java integer to binary string with leading zeros",
    "description": "int n = 1000; String.format(\"\u0016s\", Integer.toBinaryString(n).replace(' ', '0');\n",
    "reg_date": "2021-10-12T12:05:05.000Z"
  },
  {
    "id": 2690,
    "keyword": null,
    "link": null,
    "title": " java intercept ctrl c",
    "description": "Runtime.getRuntime().addShutdownHook(new Thread() {     public void run() { /*        my shutdown code here     */ }  });\n",
    "reg_date": "2021-10-12T12:05:05.000Z"
  },
  {
    "id": 2691,
    "keyword": null,
    "link": null,
    "title": " java interfce",
    "description": "public interface YourInterface{   static void yourMethod(){     System.out.println(\"Method\");   } }\n",
    "reg_date": "2021-10-12T12:05:05.000Z"
  },
  {
    "id": 2692,
    "keyword": null,
    "link": null,
    "title": " java invoke method reflection",
    "description": "Object obj = /*Your Class instance*/ Method method = /*Your Method init - The method you want to invoke*/; method.invoke(obj, parameters);\n",
    "reg_date": "2021-10-12T12:05:05.000Z"
  },
  {
    "id": 2693,
    "keyword": null,
    "link": null,
    "title": " java ip regex pattern",
    "description": "String pattern = \"([01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\";\n",
    "reg_date": "2021-10-12T12:05:05.000Z"
  },
  {
    "id": 2694,
    "keyword": null,
    "link": null,
    "title": " java is digit",
    "description": "The java.lang.Character.isDigit(char ch) is an inbuilt method in java which determines whether a specified character is a digit or not.     // two characters         char c1 = 'A', c2 = '4';            // Function to check if the character         // is digit or not         System.out.println(             c1 + \" is a digit -> \"             + Character.isDigit(c1));         System.out.println(             c2 + \" is a digit -> \"             + Character.isDigit(c2));\n",
    "reg_date": "2021-10-12T12:05:05.000Z"
  },
  {
    "id": 2695,
    "keyword": null,
    "link": null,
    "title": " java is power of 2",
    "description": "boolean result = number > 0 && ((number & (number - 1)) == 0);\n",
    "reg_date": "2021-10-12T12:05:05.000Z"
  },
  {
    "id": 2696,
    "keyword": null,
    "link": null,
    "title": " java itemstatechanged called twice",
    "description": "comboBox.addItemListener(new ItemListener() { \t@Override     public void itemStateChanged(ItemEvent e) {       if(e.getStateChange() == ItemEvent.SELECTED) { // Check if the value got selected, ignore if it has been deselected         //Do stuff       }     } });\n",
    "reg_date": "2021-10-12T12:05:05.000Z"
  },
  {
    "id": 2697,
    "keyword": null,
    "link": null,
    "title": " java iterate enum",
    "description": " for (EnumClass value : EnumClass.values()) {      System.out.println(value);  }\nfor (Direction dir : Direction.values()) {   // do what you want }\nfor (enumerator s : enumerator.values()) {   // do abc } \nfor (DaysOfWeekEnum day : DaysOfWeekEnum.values()) {      System.out.println(day);  }\n",
    "reg_date": "2021-10-12T12:05:05.000Z"
  },
  {
    "id": 2698,
    "keyword": null,
    "link": null,
    "title": " java iterate hashmap",
    "description": "for (Map.Entry<String, String> entry : yourHashMap.entrySet()) { \tSystem.out.println(entry.getKey() + \" = \" + entry.getValue()); }\nfor (Map.Entry<String, String> entry : yourHashMap.entrySet()) { \tSystem.out.println(entry.getKey() + \" = \" + entry.getValue()); }  map.forEach((k, v) -> {     System.out.format(\"key: %s, value: %d%n\", k, v); });\nMap<String, String> map = new HashMap<>();  for(Entry<String, String> entry:map.entrySet()) {   System.out.println(\"key: \"+entry.getKey()+\" value: \"+entry.getValue()); }\nfor (Map.Entry<String, Object> entry : map.entrySet()) {     String key = entry.getKey();     Object value = entry.getValue();     // ... }\npublic static void printMap(Map mp) {     Iterator it = mp.entrySet().iterator();     while (it.hasNext()) {         Map.Entry pair = (Map.Entry)it.next();         System.out.println(pair.getKey() + \" = \" + pair.getValue());         it.remove(); // avoids a ConcurrentModificationException     } }\npublic static void printMap(Map mp) {     Iterator it = mp.entrySet().iterator();     while (it.hasNext()) {         Map.Entry pair = (Map.Entry)it.next();         System.out.println(pair.getKey() + \" = \" + pair.getValue());         it.remove(); // avoids a ConcurrentModificationException     } } \n",
    "reg_date": "2021-10-12T12:05:05.000Z"
  },
  {
    "id": 2699,
    "keyword": null,
    "link": null,
    "title": " java iterate map and remove",
    "description": "map.entrySet().removeIf(e -> <boolean expression>);\n",
    "reg_date": "2021-10-12T12:05:05.000Z"
  },
  {
    "id": 2700,
    "keyword": null,
    "link": null,
    "title": " java iterate over a string",
    "description": "String str = \"hello\"; for (char c : str.toCharArray())   //process c\nString scientistName = \"Isaac Newton\";   for (int i = 0; i < scientistName.length(); i++) {     System.out.print(scientistName.charAt(i) + \" \"); // I s a a c   N e w t o n }  //********************************************************* // you can cast a string into a char[] String str = \"strings are not primitive types!\";    for (char ch : str.toCharArray()) {     \tSystem.out.print(scientistName.charAt(i) + \" \");     } }     \n",
    "reg_date": "2021-10-12T12:05:06.000Z"
  },
  {
    "id": 2701,
    "keyword": null,
    "link": null,
    "title": " java iterate over list",
    "description": "ArrayList<String> namesList = new ArrayList<String>(Arrays.asList( \"alex\", \"brian\", \"charles\") );           for(String name : namesList) {     System.out.println(name); } \nfor (int i = 0; i < crunchifyList.size(); i++) {             System.out.println(crunchifyList.get(i));         }\nfor (E element : list) {     . . . } \n",
    "reg_date": "2021-10-12T12:05:06.000Z"
  },
  {
    "id": 2702,
    "keyword": null,
    "link": null,
    "title": " java iterate through hashmap",
    "description": "for (Map.Entry<String, String> entry : yourHashMap.entrySet()) { \tSystem.out.println(entry.getKey() + \" = \" + entry.getValue()); }\nfor (Map.Entry<String, String> entry : yourHashMap.entrySet()) { \tSystem.out.println(entry.getKey() + \" = \" + entry.getValue()); }  map.forEach((k, v) -> {     System.out.format(\"key: %s, value: %d%n\", k, v); });\nfor (Map.Entry<String, Object> entry : map.entrySet()) {     String key = entry.getKey();     Object value = entry.getValue();     // ... }\npublic static void printMap(Map mp) {     Iterator it = mp.entrySet().iterator();     while (it.hasNext()) {         Map.Entry pair = (Map.Entry)it.next();         System.out.println(pair.getKey() + \" = \" + pair.getValue());         it.remove(); // avoids a ConcurrentModificationException     } }\nfor(Map.Entry<String, Integer> entry : hashMap.entrySet()) {     String key = entry.getKey();     Integer value =  entry.getValue();     //do something with the key and value }\nMap<Integer, Integer> map = new HashMap<Integer, Integer>(); for (Map.Entry<Integer, Integer> entry : map.entrySet()) {     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); }\n",
    "reg_date": "2021-10-12T12:05:06.000Z"
  },
  {
    "id": 2703,
    "keyword": null,
    "link": null,
    "title": " java iterate through map",
    "description": "// 1. for-each with Entry Map<Integer, Integer> map = new HashMap<Integer, Integer>(); for (Map.Entry<Integer, Integer> entry : map.entrySet()) {     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); }   // 2. for-each with key or value each (faster) Map<Integer, Integer> map = new HashMap<Integer, Integer>(); //iterating over keys only for (Integer key : map.keySet()) {     System.out.println(\"Key = \" + key); }   //iterating over values only for (Integer value : map.values()) {     System.out.println(\"Value = \" + value); }   // 3. Using Iterator Map<Integer, Integer> map = new HashMap<Integer, Integer>(); // With Generic Iterator<Map.Entry<Integer, Integer>> entries = map.entrySet().iterator(); while (entries.hasNext()) {     Map.Entry<Integer, Integer> entry = entries.next();     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); }  // No Generic Map map = new HashMap(); Iterator entries = map.entrySet().iterator(); while (entries.hasNext()) {     Map.Entry entry = (Map.Entry) entries.next();     Integer key = (Integer)entry.getKey();     Integer value = (Integer)entry.getValue();     System.out.println(\"Key = \" + key + \", Value = \" + value); } \nMap<String, Integer> items = new HashMap<>(); items.put(\"A\", 10); items.put(\"B\", 20); items.put(\"C\", 30); items.put(\"D\", 40); items.put(\"E\", 50); items.put(\"F\", 60);  items.forEach((k,v)->System.out.println(\"Item : \" + k + \" Count : \" + v));  items.forEach((k,v)->{ \tSystem.out.println(\"Item : \" + k + \" Count : \" + v); \tif(\"E\".equals(k)){ \t\tSystem.out.println(\"Hello E\"); \t} });\nfor (Map.Entry<String, Object> entry : map.entrySet()) {     String key = entry.getKey();     Object value = entry.getValue();     // ... }\n",
    "reg_date": "2021-10-12T12:05:06.000Z"
  },
  {
    "id": 2704,
    "keyword": null,
    "link": null,
    "title": " java iterator backwards",
    "description": "ArrayList<...> a = new ArrayList<...>();  // Add elements to list.  // Generate an iterator. Start just after the last element. ListIterator li = a.listIterator(a.size());  // Iterate in reverse. while(li.hasPrevious()) {   System.out.println(li.previous()); } \n",
    "reg_date": "2021-10-12T12:05:06.000Z"
  },
  {
    "id": 2705,
    "keyword": null,
    "link": null,
    "title": " java jackson cast to list",
    "description": "ObjectMapper mapper = new ObjectMapper(); List<Object> participantJsonList = mapper.readValue(jsonString, new TypeReference<List<Object>>(){});\n",
    "reg_date": "2021-10-12T12:05:06.000Z"
  },
  {
    "id": 2706,
    "keyword": null,
    "link": null,
    "title": " java java.util.TimeZone to java.time.ZoneId",
    "description": "package com.javabrahman.java8.time; import java.time.ZoneId; import java.util.TimeZone; public class TimeZoneToZoneId {   public static void main(String args[]) {       //Converting system's 'default' java.util.TimeZone to java.time.ZoneId     ZoneId zoneId = TimeZone.getDefault().toZoneId();     System.out.println(\"ZoneId from default system TimeZone: \" + zoneId);       //Converting custom defined java.util.TimeZone to java.time.ZoneId     TimeZone timeZoneLA = TimeZone.getTimeZone(\"America/Los_Angeles\");     ZoneId zoneIdLA = timeZoneLA.toZoneId();     System.out.println(\"ZoneId from custom 'LA' TimeZone: \" + zoneIdLA);     } } \n",
    "reg_date": "2021-10-12T12:05:06.000Z"
  },
  {
    "id": 2707,
    "keyword": null,
    "link": null,
    "title": " java jcheckbox get value",
    "description": "boolean selected = checkBox.isSelected();\n",
    "reg_date": "2021-10-12T12:05:06.000Z"
  },
  {
    "id": 2708,
    "keyword": null,
    "link": null,
    "title": " java jcombobox",
    "description": "Official docs: https://docs.oracle.com/javase/tutorial/uiswing/components/combobox.html\n",
    "reg_date": "2021-10-12T12:05:06.000Z"
  },
  {
    "id": 2709,
    "keyword": null,
    "link": null,
    "title": " java jcombobox get selected item",
    "description": "String a = jcombobox.getselecteditem().toString();\n",
    "reg_date": "2021-10-12T12:05:06.000Z"
  },
  {
    "id": 2710,
    "keyword": null,
    "link": null,
    "title": " java jcombobox itemlistener only if value changed",
    "description": "comboBox.addItemListener(new ItemListener() { \t@Override     public void itemStateChanged(ItemEvent e) {       if(e.getStateChange() == ItemEvent.SELECTED) { // Check if the value got selected, ignore if it has been deselected         //Do stuff       }     } });\n",
    "reg_date": "2021-10-12T12:05:07.000Z"
  },
  {
    "id": 2711,
    "keyword": null,
    "link": null,
    "title": " java jdk java home home ubuntu openjdk-8-jdk",
    "description": "export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\n",
    "reg_date": "2021-10-12T12:05:07.000Z"
  },
  {
    "id": 2712,
    "keyword": null,
    "link": null,
    "title": " java jlabel border",
    "description": "textLabel.setBorder(BorderFactory.createLineBorder(Color.YELLOW, 5));\n",
    "reg_date": "2021-10-12T12:05:07.000Z"
  },
  {
    "id": 2713,
    "keyword": null,
    "link": null,
    "title": " java jlist",
    "description": "Official Docs: https://docs.oracle.com/javase/tutorial/uiswing/components/list.html\n",
    "reg_date": "2021-10-12T12:05:07.000Z"
  },
  {
    "id": 2714,
    "keyword": null,
    "link": null,
    "title": " java join list as string",
    "description": "List<String> list = Arrays.asList(\"a\",\"b\",\"c\"); String result = String.join(\",\", list);  System.out.println(result);\t\t//prints a,b,c\n",
    "reg_date": "2021-10-12T12:05:07.000Z"
  },
  {
    "id": 2715,
    "keyword": null,
    "link": null,
    "title": " java join list of strings",
    "description": "String string = list.stream().map(Object::toString).collect(Collectors.joining(\"\"));\nString result = String.join(\",\", list);\nList<String> list = Arrays.asList(\"a\",\"b\",\"c\"); String result = String.join(\",\", list);  System.out.println(result);\t\t//prints a,b,c\n",
    "reg_date": "2021-10-12T12:05:07.000Z"
  },
  {
    "id": 2716,
    "keyword": null,
    "link": null,
    "title": " java joptionpane",
    "description": "JOptionPane d = new JOptionPane(); d.showMessageDialog( laFrame, \"le message\",        \"le titre\", messageType); \nimport javax.swing.ImageIcon; import javax.swing.JFrame; import javax.swing.JOptionPane;  public class ShowMessageDialogExample1 {   public static void main(String[] args)   {     String backupDir = \"/Users/al/backups\";          // create a jframe     JFrame frame = new JFrame(\"JOptionPane showMessageDialog example\");          // show a joptionpane dialog using showMessageDialog     JOptionPane.showMessageDialog(frame,         \"Problem writing to backup directory: '\" + backupDir + \"'.\");     System.exit(0);   } } \nJOptionPane.showMessageDialog(frame, \"A basic JOptionPane message dialog\"); \nJOptionPane.showMessageDialog(frame, \"Eggs are not supposed to be green.\"); \n",
    "reg_date": "2021-10-12T12:05:07.000Z"
  },
  {
    "id": 2717,
    "keyword": null,
    "link": null,
    "title": " java jpa criteriabuilder in xample",
    "description": "CriteriaQuery<DeptEmployee> criteriaQuery =    criteriaBuilder.createQuery(DeptEmployee.class); Root<DeptEmployee> root = criteriaQuery.from(DeptEmployee.class); In<String> inClause = criteriaBuilder.in(root.get(\"title\")); for (String title : titles) {     inClause.value(title); } criteriaQuery.select(root).where(inClause); \ncriteriaQuery.select(root)   .where(root.get(\"title\")   .in(titles)); \n",
    "reg_date": "2021-10-12T12:05:07.000Z"
  },
  {
    "id": 2718,
    "keyword": null,
    "link": null,
    "title": " java jpanel message error messages",
    "description": "import javax.swing.JOptionPane; import javax.swing.JPanel;  public class JOptionPaneERROR_MESSAGE {    public static void main(String[] args) {     final JPanel panel = new JPanel();//create new Jpannel      JOptionPane.showMessageDialog(panel,             \"Could not open file\", \"Error\", JOptionPane.ERROR_MESSAGE);     //show gui message in object panel, message with ERROR icon and Error text    }\n",
    "reg_date": "2021-10-12T12:05:07.000Z"
  },
  {
    "id": 2719,
    "keyword": null,
    "link": null,
    "title": " java jprogressbar",
    "description": "Official Docs https://docs.oracle.com/javase/tutorial/uiswing/components/progress.html\n",
    "reg_date": "2021-10-12T12:05:07.000Z"
  },
  {
    "id": 2720,
    "keyword": null,
    "link": null,
    "title": " java jshell run string as code",
    "description": "save the string into a file named \"FileName\" then  /open \"FileName\"\n",
    "reg_date": "2021-10-12T12:05:08.000Z"
  },
  {
    "id": 2721,
    "keyword": null,
    "link": null,
    "title": " java json deserializer",
    "description": "private Car parseCar(JsonNode node) {         Car car;         ObjectMapper mapper = new ObjectMapper();         SimpleModule module = new SimpleModule().addDeserializer(Car.class, new CarDeserializer());         mapper.registerModule(module);         organization = mapper.convertValue(node, Car.class);         return car; }  //deserializer class public class CarDeserializer extends StdDeserializer<Car> {      public CarDeserializer() {         super(Car.class);     }      @Override     public Car deserialize(JsonParser jsonParser, DeserializationContext deserializationContext) throws IOException {         ObjectMapper objectMapper = new ObjectMapper();         objectMapper.registerModule(new JodaModule());          Car car = new Car();         car.setName(getValueAsText(root, \"carName\"));         car.setDoorCount(getValueAsInt(root,\"doorCount\"));         car.setColor(getValueAsText(root,\"color\")); \t\tcar.setType(getValueAsText(root,\"type\"));          return car;     }  }\npackage net.sghill.example;  import net.sghill.example.User; import org.codehaus.jackson.JsonNode; import org.codehaus.jackson.JsonParser; import org.codehaus.jackson.ObjectCodec; import org.codehaus.jackson.map.DeserializationContext; import org.codehaus.jackson.map.JsonDeserializer;  import java.io.IOException;  public class UserDeserializer extends JsonDeserializer<User> {      @Override     public User deserialize(JsonParser jsonParser, DeserializationContext deserializationContext) throws IOException {         ObjectCodec oc = jsonParser.getCodec();         JsonNode node = oc.readTree(jsonParser);         return new User(null, node.get(\"username\").getTextValue(), node.get(\"password\").getTextValue());     } }\n",
    "reg_date": "2021-10-12T12:05:08.000Z"
  },
  {
    "id": 2722,
    "keyword": null,
    "link": null,
    "title": " java json serializer",
    "description": "public class someClass { //your lcode and logic... ObjectMapper mapper = new ObjectMapper(); SimpleModule module = new SimpleModule(); module.addSerializer(MyAwesomeClass.class, new MyAwesomeSerializer()); mapper.registerModule(module);  jsonNode = mapper.convertValue(myAwesomeObject, JsonNode.class); //... your code and logic }    public class MyAwesomeSerializer extends StdSerializer<MyAwesomeClass> {      public MyAwesomeSerializer() {         super(MyAwesomeClass.class);     }      @Override     public void serialize(MyAwesomeClass myAwesomeClass, JsonGenerator jgen, SerializerProvider provider) throws IOException {         ObjectMapper mapper = new ObjectMapper();          jgen.writeStartObject();         jgen.writeStringField(\"name\", myAwesomeClass.getName());         jgen.writeStringField(\"age\", myAwesomeClass.getAge());            jgen.writeArrayFieldStart(\"hobbies\");           for (Hobby hobby : myAwesomeClass.getHobbies()) {               jgen.writeObject(mapper.convertValue(hobby, JsonNode.class));           }           jgen.writeEndArray();                jgen.writeEndObject();     }  }\npublic class someClass { //your lcode and logic... ObjectMapper mapper = new ObjectMapper(); SimpleModule module = new SimpleModule(); module.addSerializer(MyAwesomeClass.class, new MyAwesomeSerializer()); mapper.registerModule(module);  jsonNode = mapper.convertValue(myAwesomeObject, JsonNode.class); //... your code and logic }   //serializer class public class MyAwesomeSerializer extends StdSerializer<MyAwesomeClass> {      public MyAwesomeSerializer() {         super(MyAwesomeClass.class);     }      @Override     public void serialize(MyAwesomeClass myAwesomeClass, JsonGenerator jgen, SerializerProvider provider) throws IOException {         ObjectMapper mapper = new ObjectMapper();          jgen.writeStartObject();         jgen.writeStringField(\"name\", myAwesomeClass.getName());         jgen.writeStringField(\"age\", myAwesomeClass.getAge());            jgen.writeArrayFieldStart(\"hobbies\");           for (Hobby hobby : myAwesomeClass.getHobbies()) {               jgen.writeObject(mapper.convertValue(hobby, JsonNode.class));           }           jgen.writeEndArray();                jgen.writeEndObject();     }  }\n",
    "reg_date": "2021-10-12T12:05:08.000Z"
  },
  {
    "id": 2723,
    "keyword": null,
    "link": null,
    "title": " java jtextfield text bold",
    "description": "textfield.setFont(textfield.getFont().deriveFont(Font.BOLD, 14f));\n",
    "reg_date": "2021-10-12T12:05:08.000Z"
  },
  {
    "id": 2724,
    "keyword": null,
    "link": null,
    "title": " java junit",
    "description": "import org.junit.Assert; import org.junit.Test;  public class Test {      public static int square(int n) {         return n * n;     }      @Test     public void squareTest() {         Assert.assertEquals(25, square(5));         Assert.assertEquals(16, square(4));         Assert.assertEquals(9, square(3));         Assert.assertEquals(4, square(2));         Assert.assertEquals(1, square(1));     } } \nimport org.junit.Assert; import org.junit.Test;  public class Test {      public static int square(int n) {         return n * n;     }      @Test     public void squareTest() {         Assert.assertEquals(25, square(5));         Assert.assertEquals(16, square(4));         Assert.assertEquals(9, square(3));         Assert.assertEquals(4, square(2));         Assert.assertEquals(1, square(1));     } }\n-It is an open-source testing framework for java programmers.  -Test runner support to execute the test case -It is one of the unit testing framework. -Assertion support for checking the expected result. -Annotation support for test cases\n@Test\n",
    "reg_date": "2021-10-12T12:05:08.000Z"
  },
  {
    "id": 2725,
    "keyword": null,
    "link": null,
    "title": " java junit test",
    "description": "import org.junit.Assert; import org.junit.Test;  public class Test {      public static int square(int n) {         return n * n;     }      @Test     public void squareTest() {         Assert.assertEquals(25, square(5));         Assert.assertEquals(16, square(4));         Assert.assertEquals(9, square(3));         Assert.assertEquals(4, square(2));         Assert.assertEquals(1, square(1));     } } \nimport org.junit.Assert; import org.junit.Test;  public class Test {      public static int square(int n) {         return n * n;     }      @Test     public void squareTest() {         Assert.assertEquals(25, square(5));         Assert.assertEquals(16, square(4));         Assert.assertEquals(9, square(3));         Assert.assertEquals(4, square(2));         Assert.assertEquals(1, square(1));     } }\nimport static org.junit.jupiter.api.Assertions.assertEquals;  import org.junit.jupiter.api.Test;  public class MyTests {      @Test     public void multiplicationOfZeroIntegersShouldReturnZero() {         MyClass tester = new MyClass(); // MyClass is tested          // assert statements         assertEquals(0, tester.multiply(10, 0), \"10 x 0 must be 0\");         assertEquals(0, tester.multiply(0, 10), \"0 x 10 must be 0\");         assertEquals(0, tester.multiply(0, 0), \"0 x 0 must be 0\");     } }\nimport junit.framework.*;  public class JavaTest extends TestCase {    protected int value1, value2;        // assigning the values    protected void setUp(){       value1 = 3;       value2 = 3;    }     // test method to add two values    public void testAdd(){       double result = value1 + value2;       assertTrue(result == 6);    } }\n",
    "reg_date": "2021-10-12T12:05:08.000Z"
  },
  {
    "id": 2726,
    "keyword": null,
    "link": null,
    "title": " java klasse",
    "description": "MyClass luggasDerCoole = new MyClass(); \npublic class Klasse() {    }\n",
    "reg_date": "2021-10-12T12:05:08.000Z"
  },
  {
    "id": 2727,
    "keyword": null,
    "link": null,
    "title": " java kommentointi",
    "description": "    // T&auml;ss&auml; on kommentti, joka jatkuu rivin loppuun.      /*  T&auml;m&auml; kommentti puolestaan jatkuu         ja jatkuu, ...,         kunnes tulee vastaan merkkiyhdistelm&auml;: */      /** T&auml;llainen on ns. dokumentointikommentti, joka voi         esiinty&auml; luokan, interfacen, metodin, konstruktorin         tai kent&auml;n m&auml;&auml;rittelyn edess&auml;. Automaattinen html-         dokumentin generoija osaa liitt&auml;&auml; t&auml;llaiset          osaksi dokumenttia. */\n",
    "reg_date": "2021-10-12T12:05:08.000Z"
  },
  {
    "id": 2728,
    "keyword": null,
    "link": null,
    "title": " java lambda foreach multiple statements",
    "description": "items.forEach(item->{     System.out.println(item);     System.out.println(item.toLowerCase());   } });\n",
    "reg_date": "2021-10-12T12:05:08.000Z"
  },
  {
    "id": 2729,
    "keyword": null,
    "link": null,
    "title": " java lambda iterate list",
    "description": "List<String> items = new ArrayList<>(); items.add(\"A\"); items.add(\"B\"); items.add(\"C\"); items.add(\"D\"); items.add(\"E\");  //lambda //Output : A,B,C,D,E items.forEach(item->System.out.println(item));  //Output : C items.forEach(item->{ \tif(\"C\".equals(item)){ \t\tSystem.out.println(item); \t} });  //method reference //Output : A,B,C,D,E items.forEach(System.out::println);  //Stream and filter //Output : B items.stream() \t.filter(s->s.contains(\"B\")) \t.forEach(System.out::println);\n",
    "reg_date": "2021-10-12T12:05:08.000Z"
  },
  {
    "id": 2730,
    "keyword": null,
    "link": null,
    "title": " java last element in array",
    "description": "firstNum = numbers[0]; lastNum = numbers[numbers.length-1];\n arrayName[arrayName.length() - 1];\nint [] numbers = {1, 2, 3, 4, 5};  firstElement = numbers[0]; lastElement = numbers[numbers.length-1];\nE e = list.get(list.size() - 1);\n// GIVE FIRST NUMBER AND LAST NUMBER firstNum = numbers[0]; lastNum = numbers[numbers.length-1];\n",
    "reg_date": "2021-10-12T12:05:09.000Z"
  },
  {
    "id": 2731,
    "keyword": null,
    "link": null,
    "title": " java leap year expression",
    "description": "import java.util.Scanner; public class LeapYear {    public static void main(String[] args){       int year;       System.out.println(\"Enter an Year :: \");       Scanner sc = new Scanner(System.in);       year = sc.nextInt();        if (((year % 4 == 0) && (year % 100!= 0)) || (year@0 == 0))          System.out.println(\"Specified year is a leap year\");       else          System.out.println(\"Specified year is not a leap year\");    } }\npublic static boolean isLeapYear(int year) {   if (year % 4 != 0) {     return false;   } else if (year % 400 == 0) {     return true;   } else if (year % 100 == 0) {     return false;   } else {     return true;   } }\n(year % 4 == 0) && ((year % 100 != 0) || (year % 400 == 0))\npublic class LeapYear {      public static void main(String[] args) {          int year = 1900;         boolean leap = false;          if(year % 4 == 0)         {             if( year % 100 == 0)             {                 // year is divisible by 400, hence the year is a leap year                 if ( year % 400 == 0)                     leap = true;                 else                     leap = false;             }             else                 leap = true;         }         else             leap = false;          if(leap)             System.out.println(year + \" is a leap year.\");         else             System.out.println(year + \" is not a leap year.\");     } }\n",
    "reg_date": "2021-10-12T12:05:09.000Z"
  },
  {
    "id": 2732,
    "keyword": null,
    "link": null,
    "title": " java leap years",
    "description": "import java.util.Scanner; public class LeapYear {    public static void main(String[] args){       int year;       System.out.println(\"Enter an Year :: \");       Scanner sc = new Scanner(System.in);       year = sc.nextInt();        if (((year % 4 == 0) && (year % 100!= 0)) || (year@0 == 0))          System.out.println(\"Specified year is a leap year\");       else          System.out.println(\"Specified year is not a leap year\");    } }\npublic static boolean isLeapYear(int year) {   if (year % 4 != 0) {     return false;   } else if (year % 400 == 0) {     return true;   } else if (year % 100 == 0) {     return false;   } else {     return true;   } }\npublic static boolean isLeapYear(int year) {   if (year % 4 != 0) {     return false;   } else if (year % 100 != 0) {     return true;   } else if (year % 400 != 0) {     return false;   } else {     return true;   } }\npublic class LeapYear {      public static void main(String[] args) {          int year = 1900;         boolean leap = false;          if(year % 4 == 0)         {             if( year % 100 == 0)             {                 // year is divisible by 400, hence the year is a leap year                 if ( year % 400 == 0)                     leap = true;                 else                     leap = false;             }             else                 leap = true;         }         else             leap = false;          if(leap)             System.out.println(year + \" is a leap year.\");         else             System.out.println(year + \" is not a leap year.\");     } }\nimport java.util.Scanner; public class leapyear {     public static void main(String[] args)     {         Scanner myScanner = new Scanner(System.in);         System.out.println(\"Enter in the year \");         int year=myScanner.nextInt();          if(year%4==0)             if(year\u00100==0)                 if(year@0==0)                     System.out.println(\"It is a leap year\");                 else                     System.out.println(\"it is not a leap year\");             else System.out.println(\"It is a leap year\");         else             System.out.println(\"Is not a leap year\");\n",
    "reg_date": "2021-10-12T12:05:09.000Z"
  },
  {
    "id": 2733,
    "keyword": null,
    "link": null,
    "title": " java length of matrix",
    "description": "public static void main(String[] args) {      int[][] foo = new int[][] {         new int[] { 1, 2, 3 },         new int[] { 1, 2, 3, 4},     };      System.out.println(foo.length); //2     System.out.println(foo[0].length); //3     System.out.println(foo[1].length); //4 }\n",
    "reg_date": "2021-10-12T12:05:09.000Z"
  },
  {
    "id": 2734,
    "keyword": null,
    "link": null,
    "title": " java length of string",
    "description": "String data = \"Hello, World!\"; int nameLength = data.length(); // 13\npublic class Sample_String {     public static void main(String[] args) {         //declare the String as an object S1 S2         String S1 = \"Hello Java String Method\";         String S2 = \"RockStar\";          //length() method of String returns the length of a String S1.         int length = S1.length();         System.out.println(\"Length of a String is: \" + length);         //8 Length of a String RockStar         System.out.println(\"Length of a String is: \" + S2.length());     } } \nString data = \"Hello, World!\"; int nameLength = data.length(); \nstr.length();\nstring.length() \n// String length() method example public class StringLengthJava {    public static void main(String[] args)    {       String str1 = \"flowerbrackets\";       String str2 = \"helloworld\";       System.out.println(\"string length : \" + str1.length());       System.out.println(\"string length : \" + str2.length());    } }\n",
    "reg_date": "2021-10-12T12:05:09.000Z"
  },
  {
    "id": 2735,
    "keyword": null,
    "link": null,
    "title": " java lerp",
    "description": "float lerp(float point1, float point2, float alpha){    return point1 + alpha * (point2 - point1);}\n",
    "reg_date": "2021-10-12T12:05:09.000Z"
  },
  {
    "id": 2736,
    "keyword": null,
    "link": null,
    "title": " java letter alphabet index",
    "description": "String str = \"abcdef\"; char[] ch  = str.toCharArray(); for(char c : ch){     int temp = (int)c;     int temp_integer = 96; //for lower case     if(temp<=122 & temp>=97)         System.out.print(temp-temp_integer); }\n",
    "reg_date": "2021-10-12T12:05:09.000Z"
  },
  {
    "id": 2737,
    "keyword": null,
    "link": null,
    "title": " java linked list functions",
    "description": "import java.util.LinkedList; LinkedList<Integer> myList = new LinkedList<Integer>(); myList.add(0); myList.remove(0);//Remove at index 0 myList.size(); myList.get(0);//Return element at index 0\n",
    "reg_date": "2021-10-12T12:05:09.000Z"
  },
  {
    "id": 2738,
    "keyword": null,
    "link": null,
    "title": " java linked list iterator",
    "description": "public class BasicLinkedList<T> implements Iterable<T> {     public int size;      private class Node {         private T data;         private Node next;          private Node(T data) {             this.data = data;             next = null;         }     }      private Node head;     private Node tail;      public BasicLinkedList() {         head = tail = null;     } //Add, remove method   public Iterator<T> iterator() {         return new Iterator<T>() {              Node current = head;              @Override             public boolean hasNext() {                 return current != null;             }              @Override             public T next() {                 if(hasNext()){                     T data = current.data;                     current = current.next;                     return data;                 }                 return null;             }              @Override             public void remove(){                 throw new UnsupportedOperationException(\"Remove not implemented.\");             }          }; \n// Java code to illustrate listIterator()  import java.io.*;  import java.util.LinkedList;  import java.util.ListIterator;     public class LinkedListDemo {      public static void main(String args[])      {          // Creating an empty LinkedList          LinkedList<String> list = new LinkedList<String>();             // Use add() method to add elements in the list          list.add(\"Geeks\");          list.add(\"for\");          list.add(\"Geeks\");          list.add(\"10\");          list.add(\"20\");             // Displaying the linkedlist          System.out.println(\"LinkedList:\" + list);                     // Setting the ListIterator at a specified position          ListIterator list_Iter = list.listIterator(2);             // Iterating through the created list from the position          System.out.println(\"The list is as follows:\");          while(list_Iter.hasNext()){             System.out.println(list_Iter.next());          }      }  } \n",
    "reg_date": "2021-10-12T12:05:09.000Z"
  },
  {
    "id": 2739,
    "keyword": null,
    "link": null,
    "title": " java list",
    "description": "import java.util.ArrayList; import java.util.LinkedList; import java.util.List;  class scratch{     public static void main(String[] args) {         List<Integer> aList = new ArrayList<>();         List<Integer> lList = new LinkedList<>();     } }\nimport java.util.ArrayList; import java.util.Collections; import java.util.List; import java.util.ListIterator; public class Main {    public static void main(String[] args) {       List<String> list = new ArrayList<String>();       list.add(\"a\");       list.add(\"b\");       list.add(\"c\");       list.add(\"d\");       list.add(\"e\");       list.add(\"f\");              //On met la liste dans le d&eacute;sordre       Collections.shuffle(list);       System.out.println(list);              //On la remet dans l'ordre       Collections.sort(list);       System.out.println(list);              Collections.rotate(list, -1);       System.out.println(list);              //On r&eacute;cup&egrave;re une sous-liste       List<String> sub = list.subList(2, 5);       System.out.println(sub);       Collections.reverse(sub);       System.out.println(sub);              //On r&eacute;cup&egrave;re un ListIterator       ListIterator<String> it = list.listIterator();       while(it.hasNext()){          String str = it.next();          if(str.equals(\"d\"))             it.set(\"z\");       }       while(it.hasPrevious())          System.out.print(it.previous());           } } \nSet<Foo> foo = new HashSet<Foo>(myList);\nList<ArrayList<String>> listOfLists = new ArrayList<ArrayList<String>>();\nboolean add(E e)  Appends the specified element to the end of this list (optional operation).  Lists that support this operation may place limitations on what elements may be added to this list. In particular, some lists will refuse to add null elements, and others will impose restrictions on the type of elements that may be added. List classes should clearly specify in their documentation any restrictions on what elements may be added.  Specified by:     add in interface Collection<E> Parameters:     e - element to be appended to this list Returns:     true (as specified by Collection.add(E)) Throws:     UnsupportedOperationException - if the add operation is not supported by this list     ClassCastException - if the class of the specified element prevents it from being added to this list     NullPointerException - if the specified element is null and this list does not permit null elements     IllegalArgumentException - if some property of this element prevents it from being added to this list \nimport java.util.*; var list = new ArrayList<String>(); list.add(\"Hello World!\");\n",
    "reg_date": "2021-10-12T12:05:09.000Z"
  },
  {
    "id": 2740,
    "keyword": null,
    "link": null,
    "title": " java list addAll stream() filtereted",
    "description": "List<Person> beerDrinkers = persons.stream()     .filter(p -> p.getAge() > 16).collect(Collectors.toList()); \n",
    "reg_date": "2021-10-12T12:05:09.000Z"
  },
  {
    "id": 2741,
    "keyword": null,
    "link": null,
    "title": " java list all non directory files in the directory",
    "description": "public class Pathnames {      public static void main(String[] args) {         // Creates an array in which we will store the names of files and directories         String[] pathnames;          // Creates a new File instance by converting the given pathname string         // into an abstract pathname         File f = new File(\"D:/Programming\");          // Populates the array with names of files and directories         pathnames = f.list();          // For each pathname in the pathnames array         for (String pathname : pathnames) {             // Print the names of files and directories             System.out.println(pathname);         }     } } \n",
    "reg_date": "2021-10-12T12:05:10.000Z"
  },
  {
    "id": 2742,
    "keyword": null,
    "link": null,
    "title": " java list get index",
    "description": "yourArray.get(2);\n",
    "reg_date": "2021-10-12T12:05:10.000Z"
  },
  {
    "id": 2743,
    "keyword": null,
    "link": null,
    "title": " java list length",
    "description": "import java.util.ArrayList;  /*  * Java Program to find the length of ArrayList. *  */  public class ArrayListDemo{    public static void main(String[] args) {     System.out.println(\"Welcome to Java Program to find the length of array list\");      ArrayList<String> listOfBanks = new ArrayList<>();     int size = listOfBanks.size();     System.out.println(\"size of array list after creating: \" + size);      listOfBanks.add(\"Citibank\");     listOfBanks.add(\"Chase\");     listOfBanks.add(\"Bank of America\");     size = listOfBanks.size();      System.out.println(\"length of ArrayList after adding elements: \" + size);      listOfBanks.clear();     size = listOfBanks.size();     System.out.println(\"size of ArrayList after clearing elements: \" + size);   }  } Output Welcome to Java Program to find length of array list the size of array list after creating: 0 the length of ArrayList after adding elements: 3 the length of ArrayList after clearing elements: 0\nArrayList<String> listOfBanks = new ArrayList<>();  int size = listOfBanks.size();  System.out.println(\"size of array list after creating: \" + size);\nBefore operation: [1, 2, 3, 4, 5] Size of list = 5   \nimport java.util.ArrayList; import java.util.List; public class Demo {    public static void main(String[] args) {       List aList = new ArrayList();       aList.add(\"Apple\");       aList.add(\"Mango\");       aList.add(\"Guava\");       aList.add(\"Orange\");       aList.add(\"Peach\");       System.out.println(\"The size of the ArrayList is: \" + aList.size());    } }\na.size() where a is list\n",
    "reg_date": "2021-10-12T12:05:10.000Z"
  },
  {
    "id": 2744,
    "keyword": null,
    "link": null,
    "title": " java list of strings to string",
    "description": "String string = list.stream().map(Object::toString).collect(Collectors.joining(\"\"));\n        String[]result=stringList.toArray(new String[0]);\n",
    "reg_date": "2021-10-12T12:05:10.000Z"
  },
  {
    "id": 2745,
    "keyword": null,
    "link": null,
    "title": " java list remove",
    "description": "//create ArrayList ArrayList<String> arrayList = new ArrayList<String>(); //add item to ArrayList arrayList.add(\"item\"); //check if ArrayList contains item (returns boolean) System.out.println(arrayList.contains(\"item\")); //remove item from ArrayList arrayList.remove(\"item\");\nList<String> list = new ArrayList<>(); list.remove(key);\nhow to remove elements from java\n",
    "reg_date": "2021-10-12T12:05:10.000Z"
  },
  {
    "id": 2746,
    "keyword": null,
    "link": null,
    "title": " java list sort descending",
    "description": "import java.util.*; public class Details  {  \tpublic static void main(String args[]){ \t   ArrayList<String> arraylist = new ArrayList<String>(); \t   arraylist.add(\"AA\"); \t   arraylist.add(\"ZZ\"); \t   arraylist.add(\"CC\"); \t   arraylist.add(\"FF\");  \t   /*Unsorted List: ArrayList content before sorting*/ \t   System.out.println(\"Before Sorting:\"); \t   for(String str: arraylist){ \t\t\tSystem.out.println(str); \t\t}  \t   /* Sorting in decreasing order*/ \t   Collections.sort(arraylist, Collections.reverseOrder());  \t   /* Sorted List in reverse order*/ \t   System.out.println(\"ArrayList in descending order:\"); \t   for(String str: arraylist){ \t\t\tSystem.out.println(str); \t\t} \t} }\n",
    "reg_date": "2021-10-12T12:05:10.000Z"
  },
  {
    "id": 2747,
    "keyword": null,
    "link": null,
    "title": " java list string package import",
    "description": "import java.util.List; // import just the List interface import java.util.ArrayList; // import just the ArrayList class \n",
    "reg_date": "2021-10-12T12:05:10.000Z"
  },
  {
    "id": 2748,
    "keyword": null,
    "link": null,
    "title": " java list to array",
    "description": "String[] arr = list.toArray(new String[list.size()]);\nInteger[] spam = new Integer[] { 1, 2, 3 }; List<Integer> list = Arrays.asList(spam);\nList<String> list = new ArrayList<>(); list.add(\"a\"); list.add(\"ab\"); list.add(\"abc\"); list.add(\"abcd\"); // convert String[] array = list.toArray();\nArrays.asList(array);\nList<String> stockList = new ArrayList<String>(); stockList.add(\"stock1\"); stockList.add(\"stock2\");  String[] stockArr = new String[stockList.size()]; stockArr = stockList.toArray(stockArr);  for(String s : stockArr)     System.out.println(s);\nList<Foo> list = new ArrayList<>(); Foo[] array = list.toArray(new Foo[0]); \n",
    "reg_date": "2021-10-12T12:05:10.000Z"
  },
  {
    "id": 2749,
    "keyword": null,
    "link": null,
    "title": " java list to set",
    "description": "Set<Foo> foo = new HashSet<Foo>(myList);\npublic void givenUsingCoreJava_whenSetConvertedToList_thenCorrect() {    Set<Integer> sourceSet = Sets.newHashSet(0, 1, 2, 3, 4, 5);    List<Integer> targetList = new ArrayList<>(sourceSet); }\n",
    "reg_date": "2021-10-12T12:05:10.000Z"
  },
  {
    "id": 2750,
    "keyword": null,
    "link": null,
    "title": " java listener",
    "description": "public void mouseDragged(MouseEvent e) { \tmouseX = e.getX(); \tmouseY = e.getY(); \tif (SwingUtilities.isLeftMouseButton(e)) { \t\tmouseB = 1; \t} \tif (SwingUtilities.isRightMouseButton(e)) { \t\tmouseB = 3; \t}  \tMouseDraggedEvent event = new MouseDraggedEvent(e.getX(), e.getY(), mouseB); \ttry { \t\teventListener.onEvent(event); \t} catch (Exception ex) {} }  \n",
    "reg_date": "2021-10-12T12:05:10.000Z"
  },
  {
    "id": 2751,
    "keyword": null,
    "link": null,
    "title": " java load image",
    "description": "BufferedImage img = null;  try  {     img = ImageIO.read(new File(\"C:/ImageTest/pic2.jpg\")); // eventually C:\\\\ImageTest\\\\pic2.jpg }  catch (IOException e)  {     e.printStackTrace(); }\n",
    "reg_date": "2021-10-12T12:05:11.000Z"
  },
  {
    "id": 2752,
    "keyword": null,
    "link": null,
    "title": " java localdate zoneid example",
    "description": "ZoneId zone1 = ZoneId.of(\"Europe/Berlin\"); ZoneId zone2 = ZoneId.of(\"Brazil/East\");\n",
    "reg_date": "2021-10-12T12:05:11.000Z"
  },
  {
    "id": 2753,
    "keyword": null,
    "link": null,
    "title": " java localdatetime get milliseconds",
    "description": "#Date and time as String to Long (millis):  String dateTimeString = \"2021-09-12T16:55:18.000Z\";  DateTimeFormatter formatter = DateTimeFormatter                 .ofPattern(\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", Locale.ENGLISH);  LocalDateTime localDateTime = LocalDateTime         .parse(dateTimeString, formatter);  Long dateTimeMillis = localDateTime         .atZone(ZoneId.systemDefault())         .toInstant()         .toEpochMilli();\n",
    "reg_date": "2021-10-12T12:05:11.000Z"
  },
  {
    "id": 2754,
    "keyword": null,
    "link": null,
    "title": " java localtime",
    "description": "import java.time.LocalTime;   public class LocalTimeExample1 {     public static void main(String[] args) {       LocalTime time = LocalTime.now();       System.out.println(time);     }   }  \nimport java.time.LocalTime;   public class LocalTimeExample4 {     public static void main(String[] args) {       LocalTime time1 = LocalTime.of(10,43,12);       System.out.println(time1);       LocalTime time2=time1.plusHours(4);       LocalTime time3=time2.plusMinutes(18);       System.out.println(time3);     }   }  \n",
    "reg_date": "2021-10-12T12:05:11.000Z"
  },
  {
    "id": 2755,
    "keyword": null,
    "link": null,
    "title": " java log base 2",
    "description": "public static int log2(int x) {     return (int) (Math.log(x) / Math.log(2)); } \n",
    "reg_date": "2021-10-12T12:05:11.000Z"
  },
  {
    "id": 2756,
    "keyword": null,
    "link": null,
    "title": " java logger",
    "description": "private static final Logger LOGGER = Logger.getLogger( ClassName.class.getName() ); \nLogging is the process of writing log messages during the execution of a  program to a central place.This logging allows you to report and persist error and warning messages as well as info messages (e.g., runtime  statistics) so that the messages can later be retrieved and analyzed.\n",
    "reg_date": "2021-10-12T12:05:11.000Z"
  },
  {
    "id": 2757,
    "keyword": null,
    "link": null,
    "title": " java lombok constructor inject guice",
    "description": "@AllArgsConstructor(onConstructor = @__(@Inject)) @RequiredArgsConstructor(onConstructor = @__(@Inject))\n",
    "reg_date": "2021-10-12T12:05:11.000Z"
  },
  {
    "id": 2758,
    "keyword": null,
    "link": null,
    "title": " java long to double",
    "description": "long num = Double.valueOf(d).longValue()\nLong l = new Long(15552451L); double d = l.doubleValue();\n",
    "reg_date": "2021-10-12T12:05:11.000Z"
  },
  {
    "id": 2759,
    "keyword": null,
    "link": null,
    "title": " java long to int",
    "description": "import static java.lang.Math.toIntExact;  long foo = 10L; int bar = toIntExact(foo);\n    public class LongToIntExample2{            \tpublic static void main(String args[]){                    \tLong l= new Long(10);         \tint i=l.intValue();         \tSystem.out.println(i);     \t         }     }\n// auto-unboxing does not go from Long to int directly, so Integer i = (int) (long) theLong; \nlong foo = 10L; int bar = (int) foo;\n",
    "reg_date": "2021-10-12T12:05:11.000Z"
  },
  {
    "id": 2760,
    "keyword": null,
    "link": null,
    "title": " java long to integer",
    "description": "import static java.lang.Math.toIntExact;  long foo = 10L; int bar = toIntExact(foo);\nLong l= new Long(i); //first way Long l2=Long.valueOf(i); //second way\n    public class LongToIntExample2{            \tpublic static void main(String args[]){                    \tLong l= new Long(10);         \tint i=l.intValue();         \tSystem.out.println(i);     \t         }     }\n// auto-unboxing does not go from Long to int directly, so Integer i = (int) (long) theLong; \n",
    "reg_date": "2021-10-12T12:05:11.000Z"
  },
  {
    "id": 2761,
    "keyword": null,
    "link": null,
    "title": " java loop",
    "description": "for(int i = 0; i < 10; i++) {   //do something      //NOTE: the integer name does not need to be i, and the loop   //doesn't need to start at 0. In addition, the 10 can be replaced   //with any value. In this case, the loop will run 10 times.   //Finally, the incrementation of i can be any value, in this case,   //i increments by one. To increment by 2, for example, you would   //use \"i += 2\", or \"i = i+2\" }\n// Starting on 0: for(int i = 0; i < 5; i++) {   System.out.println(i + 1); }  // Starting on 1: for(int i = 1; i <= 5; i++) {   System.out.println(i); }   // Both for loops will iterate 5 times, // printing the numbers 1 - 5.\nint values[] = {1,2,3,4}; for(int i = 0; i < values.length; i++) {  \tSystem.out.println(values[i]);  }\nfor (int i = 0; i < 5; i++) {   System.out.println(i); } \nfor (int i = 0; i < 10; i++) {   System.out.println(i); }\nfor (String m : myList) {     ... }\n",
    "reg_date": "2021-10-12T12:05:11.000Z"
  },
  {
    "id": 2762,
    "keyword": null,
    "link": null,
    "title": " java loop hashmap",
    "description": "for (Map.Entry<String, String> entry : yourHashMap.entrySet()) { \tSystem.out.println(entry.getKey() + \" = \" + entry.getValue()); }\nMap<Integer, Integer> map = new HashMap<Integer, Integer>(); for (Map.Entry<Integer, Integer> entry : map.entrySet()) {     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); }\nmap.forEach((k, v) -> {     System.out.format(\"key: %s, value: %d%n\", k, v); });\n",
    "reg_date": "2021-10-12T12:05:12.000Z"
  },
  {
    "id": 2763,
    "keyword": null,
    "link": null,
    "title": " java loop object",
    "description": "MyObject objects[] = new MyObject[6]; for (MyObject o: objects) {      o = new MyObject(); }  MyObject objects[] = new MyObject[6]; for(int i = 0; i < objects.length; i++) {      objects[i] = new MyObject(); }\n// Using the range of int i we assign new objects to the List using i as the index List<Objects> objects = new ArrayList<>();   for (int i = 0; i < 10; i++) { \t// Generate or get variables     objects.add(i, new Object(variable, variable1)); } \nArrayList<String> namesList = new ArrayList<String>(Arrays.asList( \"alex\", \"brian\", \"charles\") );           for(int i = 0; i < namesList.size(); i++) {     System.out.println(namesList.get(i)); } \n",
    "reg_date": "2021-10-12T12:05:12.000Z"
  },
  {
    "id": 2764,
    "keyword": null,
    "link": null,
    "title": " java loop through arraylist",
    "description": "ArrayList<String> namesList = new ArrayList<String>(Arrays.asList( \"alex\", \"brian\", \"charles\") );           for(String name : namesList) {     System.out.println(name); } \n// Using Classic For Loop for (int i=0; i<myArrayList.size(); i++) {     System.out.println(myArrayList.get(i)); } /*****************************************************/ //Advanced For Loop - ArrayList<String>  for(String str : myArrayList) {     System.out.println(str); } /*****************************************************/ //Using Iterator Iterator arrayListIterator = myArrayList.iterator(); while (arrayListIterator.hasNext()) {     System.out.println(arrayListIterator.next()); } /*****************************************************/ //ForEach - java 8 - ArrayList<String> myArrayList.forEach( str -> System.out.println(str));     \nfor (int i = 0; i < crunchifyList.size(); i++) {             System.out.println(crunchifyList.get(i));         }\n      for (int counter = 0; counter < arrlist.size(); counter++) { \t\t                 System.out.println(arrlist.get(counter)); \t\t       }\n// will iterate through each index of the array list // using the size of the array list as the max. // (the last index is the size of the array list - 1)  for (int i = 0; i < myArrayList.size(); i++) {      System.out.println(myArrayList.get(i));   // will print each index as it loops }  \nIterator<String> crunchifyIterator = crunchifyList.iterator();         while (crunchifyIterator.hasNext()) {             System.out.println(crunchifyIterator.next());         }\n",
    "reg_date": "2021-10-12T12:05:12.000Z"
  },
  {
    "id": 2765,
    "keyword": null,
    "link": null,
    "title": " java loop through enum",
    "description": " for (EnumClass value : EnumClass.values()) {      System.out.println(value);  }\nfor (Direction dir : Direction.values()) {   // do what you want }\nfor (enumerator s : enumerator.values()) {   // do abc } \n",
    "reg_date": "2021-10-12T12:05:12.000Z"
  },
  {
    "id": 2766,
    "keyword": null,
    "link": null,
    "title": " java loop through file",
    "description": "/*  *\tFileLooper reads data from file and adds it to an ArrayList class  *\tfor later use.  */ import java.util.*; import java.io.*;  class FileLooper {   public static void main(String [] args) {     String fileName = \"file.txt\";     ArrayList<String> fileData = new ArrayList<>();     Scanner file = new Scanner(new File(fileName));          while (file.hasNext()) {        fileData.add(file.next());     }   } }\n",
    "reg_date": "2021-10-12T12:05:12.000Z"
  },
  {
    "id": 2767,
    "keyword": null,
    "link": null,
    "title": " java loop through list",
    "description": "Iterator itr=list.iterator(); while(itr.hasNext()){  system.out.println(itr.next);  }\nfor (int i = 0; i < crunchifyList.size(); i++) {             System.out.println(crunchifyList.get(i));         }\n// will iterate through each index of the array list // using the size of the array list as the max. // (the last index is the size of the array list - 1)  for (int i = 0; i < myArrayList.size(); i++) {      System.out.println(myArrayList.get(i));   // will print each index as it loops }  \nfor (E element : list) {     . . . } \nIterator<String> crunchifyIterator = crunchifyList.iterator();         while (crunchifyIterator.hasNext()) {             System.out.println(crunchifyIterator.next());         }\nimport java.util.ArrayList; import java.util.Iterator;  public class IteratorSample {    public static void main(String[] args) {       ArrayList<String> list = new ArrayList<String>();       list.add(\"JavaFx\");       list.add(\"Java\");       list.add(\"WebGL\");       list.add(\"OpenCV\");       Iterator iterator = list.iterator();       while(iterator.hasNext()) {          System.out.println(iterator.next());       }    } }\n",
    "reg_date": "2021-10-12T12:05:12.000Z"
  },
  {
    "id": 2768,
    "keyword": null,
    "link": null,
    "title": " java loop through object",
    "description": "MyObject objects[] = new MyObject[6]; for (MyObject o: objects) {      o = new MyObject(); }  MyObject objects[] = new MyObject[6]; for(int i = 0; i < objects.length; i++) {      objects[i] = new MyObject(); }\nimport java.util.ArrayList;  ArrayList<String> list = new ArrayList<String>();  list.add('SUB TO') list.add('UNCODEABLE')    for(int i = 0; i > list.length(); i++){    print(list.get(i))    }\nimport java.util.List; import java.util.ArrayList;  List<String> list = new ArrayList<>();  list.add(\"first\"); list.add(\"last\");  for(String s : list) {   if (s != null) {     //do whaterver wanted     // example:     System.out.println(s);   } } \nArrayList<String> namesList = new ArrayList<String>(Arrays.asList( \"alex\", \"brian\", \"charles\") );           for(int i = 0; i < namesList.size(); i++) {     System.out.println(namesList.get(i)); } \n",
    "reg_date": "2021-10-12T12:05:12.000Z"
  },
  {
    "id": 2769,
    "keyword": null,
    "link": null,
    "title": " java loop through object properties",
    "description": "for (var prop in obj) {     if (Object.prototype.hasOwnProperty.call(obj, prop)) {         // do stuff     } }\nimport java.lang.reflect.*;  public class DumpFields {     public static void main(String[] args) {         inspect(String.class);     }     static <T> void inspect(Class<T> klazz) {         Field[] fields = klazz.getDeclaredFields();         System.out.printf(\"%d fields:%n\", fields.length);         for (Field field : fields) {             System.out.printf(\"%s %s %s%n\",                 Modifier.toString(field.getModifiers()),                 field.getType().getSimpleName(),                 field.getName()             );         }     } }\nfor (var prop in obj) {     if (Object.prototype.hasOwnProperty.call(obj, prop)) {         // do stuff     } } \n",
    "reg_date": "2021-10-12T12:05:12.000Z"
  },
  {
    "id": 2770,
    "keyword": null,
    "link": null,
    "title": " java loop through string",
    "description": "String str = \"hello\"; for (char c : str.toCharArray())   //process c\nString scientistName = \"Isaac Newton\";   for (int i = 0; i < scientistName.length(); i++) {     System.out.print(scientistName.charAt(i) + \" \"); // I s a a c   N e w t o n }  //********************************************************* // you can cast a string into a char[] String str = \"strings are not primitive types!\";    for (char ch : str.toCharArray()) {     \tSystem.out.print(scientistName.charAt(i) + \" \");     } }     \nString s = \"...stuff...\";  for (int i = 0; i < s.length(); i++){     char c = s.charAt(i);             //Process char }\nString s = \"...stuff...\";  for (int i = 0; i < s.length(); i++){     char c = s.charAt(i);             //Process char } \nString s = \"Techie Delight\";  // convert string to `char[]` array char[] chars = s.toCharArray();  // iterate over `char[]` array using enhanced for-loop for (char ch: chars) {     System.out.print(ch); }\n",
    "reg_date": "2021-10-12T12:05:12.000Z"
  },
  {
    "id": 2771,
    "keyword": null,
    "link": null,
    "title": " java loop through string chars",
    "description": "String str = \"hello\"; for (char c : str.toCharArray())   //process c\n",
    "reg_date": "2021-10-12T12:05:12.000Z"
  },
  {
    "id": 2772,
    "keyword": null,
    "link": null,
    "title": " java lowercase",
    "description": "string.toLowerCase();  \nCharacter.toLowerCase(char ch) \n\"Hello World\".toLowerCase()\n/* to find the lowercase or uppercase of a string,  * we just .toLowerCase() or .toUpperCase() */  public class CaseDemonstration {   public static void main(String[] args) {         \tString testString = \"THIS IS AN EXAMPLE OF A STRING\";     String testStringLower = testString.toLowerCase(); // make a string lowercase     System.out.println(testStringLower); // \"this is an example of a string\"     String testStringUpper = testStringLower.toUpperCase(); // make it upper again     System.out.println(testStringUpper); // \"THIS IS AN EXAMPLE OF A STRING\"        } }\nString s1 = \"JAVATPOINT HELLO stRIng\";   String s1lower = s1.toLowerCase(); // s1lower = \"javatpoint hello string\" \nimport java.lang.*;  public class StringDemo {    public static void main(String[] args) {       // converts all upper case letters in to lower case letters       String str1 = \"SELF LEARNING CENTER\";       System.out.println(\"string value = \" + str1.toLowerCase());        str1 = \"TUTORIALS POINT\";       System.out.println(\"string value = \" + str1.toLowerCase());        // converts all lower case letters in to upper case letters       String str2 = \"This is TutorialsPoint\";        System.out.println(\"string value = \" + str2.toUpperCase());       str2 = \"www.tutorialspoint.com\";       System.out.println(\"string value = \" + str2.toUpperCase());    } }\n",
    "reg_date": "2021-10-12T12:05:13.000Z"
  },
  {
    "id": 2773,
    "keyword": null,
    "link": null,
    "title": " java main",
    "description": "class myClass {     public static void main(String[] args) {         // code     } }\npublic class Jacob {      public static void main(String[] args) { \t\t//code here     } } \npublic class Test {  public static void main(String[] args){  \tSystem.out.println(\"Hello World\"); \t } } \npublic class Program {   public static void main(String[] args){     System.out.println(\"Hello, World!\");   } }\npublic static void main(String args[]){}\npublic class Test {  public static void main(String[] args){  \tSystem.out.println(\"Hello Luggas\"); \t \t} }\n",
    "reg_date": "2021-10-12T12:05:13.000Z"
  },
  {
    "id": 2774,
    "keyword": null,
    "link": null,
    "title": " java main class",
    "description": "class myClass {     public static void main(String[] args) {         // code     } }\npublic class Jacob {      public static void main(String[] args) { \t\t//code here     } } \npublic class Test {  public static void main(String[] args){  \tSystem.out.println(\"Hello World\"); \t } } \npublic class Program {   public static void main(String[] args){     System.out.println(\"Hello, World!\");   } }\npublic static void main(String args[]){}\npublic class Main {         static void main(String[] args){                     }   }\n",
    "reg_date": "2021-10-12T12:05:13.000Z"
  },
  {
    "id": 2775,
    "keyword": null,
    "link": null,
    "title": " java main method",
    "description": "class myClass {     public static void main(String[] args) {         // code     } }\npublic class Jacob {      public static void main(String[] args) { \t\t//code here     } } \npublic class Test {  public static void main(String[] args){  \tSystem.out.println(\"Hello World\"); \t } } \npublic class Program {   public static void main(String[] args){     System.out.println(\"Hello, World!\");   } }\npublic static void main(String args[]){}\n// for autocomplete just type main // and a shortcut shoould apear\n",
    "reg_date": "2021-10-12T12:05:13.000Z"
  },
  {
    "id": 2776,
    "keyword": null,
    "link": null,
    "title": " java making a screen",
    "description": "//THIS IS A FIX OF THE ONE BY FRANCY FROG //THEY FIXED THEIRS import javax.swing.JFrame;  public class example {   public static void main(String[] args){     JFrame frame = new JFrame();     frame.setSize(100,100);     frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);     frame.setTitle(\"Example Frame\");     frame.setVisible(true);   } }\nimport java.awt.*; import javax.swing.*;  public class Screen{          private GraphicsDevice graphicsDevice;          public static void main(String[] args){                  Screen screen = new Screen();     }     public Screen(){         Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();         JFrame jFrame = new JFrame();                  MakeDefaultScreen(jFrame,screenSize);                  System.out.println(\"Program Started\");     }     public void MakeDefaultScreen (JFrame jFrame,Dimension screenSize){         jFrame.setSize(screenSize.width,screenSize.height);         jFrame.setVisible(true);         jFrame.setResizable(true);     } }\n",
    "reg_date": "2021-10-12T12:05:13.000Z"
  },
  {
    "id": 2777,
    "keyword": null,
    "link": null,
    "title": " java map declaration",
    "description": "Map< String,Integer> hm =                           new HashMap< String,Integer>();         hm.put(\"a\", new Integer(100));         hm.put(\"b\", new Integer(200));         hm.put(\"c\", new Integer(300));         hm.put(\"d\", new Integer(400)); \n",
    "reg_date": "2021-10-12T12:05:13.000Z"
  },
  {
    "id": 2778,
    "keyword": null,
    "link": null,
    "title": " java map default value",
    "description": "Map<String,String> data=new HashMap<>(); String someValue=data.getOrDefault(\"test\",\"\");//gets the value of \"test\" or \"\" if it does not exist\n",
    "reg_date": "2021-10-12T12:05:14.000Z"
  },
  {
    "id": 2779,
    "keyword": null,
    "link": null,
    "title": " java map foreach",
    "description": "// 1. for-each with Entry Map<Integer, Integer> map = new HashMap<Integer, Integer>(); for (Map.Entry<Integer, Integer> entry : map.entrySet()) {     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); }   // 2. for-each with key or value each (faster) Map<Integer, Integer> map = new HashMap<Integer, Integer>(); //iterating over keys only for (Integer key : map.keySet()) {     System.out.println(\"Key = \" + key); }   //iterating over values only for (Integer value : map.values()) {     System.out.println(\"Value = \" + value); }   // 3. Using Iterator Map<Integer, Integer> map = new HashMap<Integer, Integer>(); // With Generic Iterator<Map.Entry<Integer, Integer>> entries = map.entrySet().iterator(); while (entries.hasNext()) {     Map.Entry<Integer, Integer> entry = entries.next();     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); }  // No Generic Map map = new HashMap(); Iterator entries = map.entrySet().iterator(); while (entries.hasNext()) {     Map.Entry entry = (Map.Entry) entries.next();     Integer key = (Integer)entry.getKey();     Integer value = (Integer)entry.getValue();     System.out.println(\"Key = \" + key + \", Value = \" + value); } \nMap<String, Integer> items = new HashMap<>(); items.put(\"A\", 10); items.put(\"B\", 20); items.put(\"C\", 30); items.put(\"D\", 40); items.put(\"E\", 50); items.put(\"F\", 60);  items.forEach((k,v)->System.out.println(\"Item : \" + k + \" Count : \" + v));  items.forEach((k,v)->{ \tSystem.out.println(\"Item : \" + k + \" Count : \" + v); \tif(\"E\".equals(k)){ \t\tSystem.out.println(\"Hello E\"); \t} });\nMap<String, String> map = ... for (Map.Entry<String, String> entry : map.entrySet()) {     System.out.println(entry.getKey() + \"/\" + entry.getValue()); }\nmap.forEach((k, v) -> System.out.printf( \" %s : %d \\n\" , k,v) );\npublic void iterateUsingStreamAPI(Map<String, Integer> map) {     map.entrySet().stream()       // ...       .forEach(e -> System.out.println(e.getKey() + \":\" + e.getValue())); } \npublic void iterateUsingLambda(Map<String, Integer> map) {     map.forEach((k, v) -> System.out.println((k + \":\" + v))); } \n",
    "reg_date": "2021-10-12T12:05:14.000Z"
  },
  {
    "id": 2780,
    "keyword": null,
    "link": null,
    "title": " java map get the key from value",
    "description": "public static <T, E> Set<T> getKeyByValue(Map<T, E> map, E value) {     return map.entrySet()               .stream()               .filter(entry -> Objects.equals(entry.getValue(), value))               .map(Map.Entry::getKey)               .collect(Collectors.toSet()); }\n",
    "reg_date": "2021-10-12T12:05:14.000Z"
  },
  {
    "id": 2781,
    "keyword": null,
    "link": null,
    "title": " java map iteration",
    "description": "// 1. for-each with Entry Map<Integer, Integer> map = new HashMap<Integer, Integer>(); for (Map.Entry<Integer, Integer> entry : map.entrySet()) {     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); }   // 2. for-each with key or value each (faster) Map<Integer, Integer> map = new HashMap<Integer, Integer>(); //iterating over keys only for (Integer key : map.keySet()) {     System.out.println(\"Key = \" + key); }   //iterating over values only for (Integer value : map.values()) {     System.out.println(\"Value = \" + value); }   // 3. Using Iterator Map<Integer, Integer> map = new HashMap<Integer, Integer>(); // With Generic Iterator<Map.Entry<Integer, Integer>> entries = map.entrySet().iterator(); while (entries.hasNext()) {     Map.Entry<Integer, Integer> entry = entries.next();     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); }  // No Generic Map map = new HashMap(); Iterator entries = map.entrySet().iterator(); while (entries.hasNext()) {     Map.Entry entry = (Map.Entry) entries.next();     Integer key = (Integer)entry.getKey();     Integer value = (Integer)entry.getValue();     System.out.println(\"Key = \" + key + \", Value = \" + value); } \nMap<String, String> map = new HashMap<>();  for(Entry<String, String> entry:map.entrySet()) {   System.out.println(\"key: \"+entry.getKey()+\" value: \"+entry.getValue()); }\nMap<String, String> map = ... for (Map.Entry<String, String> entry : map.entrySet()) {     System.out.println(entry.getKey() + \"/\" + entry.getValue()); }\n",
    "reg_date": "2021-10-12T12:05:14.000Z"
  },
  {
    "id": 2782,
    "keyword": null,
    "link": null,
    "title": " java map print",
    "description": "map.forEach((key, value) -> System.out.println(key + \":\" + value));\n// 1. for-each with Entry Map<Integer, Integer> map = new HashMap<Integer, Integer>(); for (Map.Entry<Integer, Integer> entry : map.entrySet()) {     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); }   // 2. for-each with key or value each (faster) Map<Integer, Integer> map = new HashMap<Integer, Integer>(); //iterating over keys only for (Integer key : map.keySet()) {     System.out.println(\"Key = \" + key); }   //iterating over values only for (Integer value : map.values()) {     System.out.println(\"Value = \" + value); }   // 3. Using Iterator Map<Integer, Integer> map = new HashMap<Integer, Integer>(); // With Generic Iterator<Map.Entry<Integer, Integer>> entries = map.entrySet().iterator(); while (entries.hasNext()) {     Map.Entry<Integer, Integer> entry = entries.next();     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); }  // No Generic Map map = new HashMap(); Iterator entries = map.entrySet().iterator(); while (entries.hasNext()) {     Map.Entry entry = (Map.Entry) entries.next();     Integer key = (Integer)entry.getKey();     Integer value = (Integer)entry.getValue();     System.out.println(\"Key = \" + key + \", Value = \" + value); } \nimport java.util.HashMap; import java.util.Iterator; import java.util.Map; import java.util.stream.Stream;   class MapUtil {     // Program to print all keys present in the Map using keySet() in Java     public static void main (String[] args)     {         Map<Integer, String> map = new HashMap<>();         map.put(1, \"One\");         map.put(2, \"Two\");           // 1. using Iterator         Iterator<Integer> itr = map.keySet().iterator();         while (itr.hasNext()) {             System.out.println(itr.next());         }           // 2. For-each Loop         for (Integer key : map.keySet()) {             System.out.println(key);         }           // 3. Java 8 - Collection.iterator() + Iterator.forEachRemaining()         map.keySet().iterator()                 .forEachRemaining(System.out::println);           // 4. Java 8 - Collection.stream() + Stream.forEach()         map.keySet().stream()                 .forEach(System.out::println);           // Java 8 - Stream.of() + Collection.toArray() + Stream.forEach()         Stream.of(map.keySet().toArray())                 .forEach(System.out::println);           // 5. Convert to String         System.out.println(map.keySet().toString());           // Java 8         Stream.of(map.keySet().toString())                 .forEach(System.out::println);     } } \n// Java 8 - Collection.iterator() + Iterator.forEachRemaining()         map.keySet().iterator()                 .forEachRemaining(System.out::println);\nSystem.out.println(Arrays.toString(map.entrySet().toArray())); \n",
    "reg_date": "2021-10-12T12:05:14.000Z"
  },
  {
    "id": 2783,
    "keyword": null,
    "link": null,
    "title": " java map string to list",
    "description": "    Map<String, List<String>> myMaps = new HashMap<String, List<String>>();     for (DataObject item : myList) {         if (!myMaps.containsKey(item.getKey())) {             myMaps.put(item.getKey(), new ArrayList<String>());         }         myMaps.get(item.getKey()).add(item.getValue());     }\n",
    "reg_date": "2021-10-12T12:05:14.000Z"
  },
  {
    "id": 2784,
    "keyword": null,
    "link": null,
    "title": " java map values to list",
    "description": "List<Value> list = new ArrayList<Value>(map.values()); \n",
    "reg_date": "2021-10-12T12:05:14.000Z"
  },
  {
    "id": 2785,
    "keyword": null,
    "link": null,
    "title": " java math.ceil",
    "description": "Math.ceil(125.9)=126.0 Math.ceil(0.4873)=1.0 Math.ceil(-0.65)=-0.0 \nMath.ceil(value);\nThe ceiling of a floating point number is the smallest integer that is >= to the number.\nimport java.lang.Math; Math.ceil(a);\nimport java.lang.*;  public class Math {     public static void main(String[] args) {        // get two double numbers       double x = 125.9;       double y = 0.4873;           // call ceal for these these numbers       System.out.println(\"Math.ceil(\" + x + \")=\" + Math.ceil(x));       System.out.println(\"Math.ceil(\" + y + \")=\" + Math.ceil(y));       System.out.println(\"Math.ceil(-0.65)=\" + Math.ceil(-0.65));    } }\n",
    "reg_date": "2021-10-12T12:05:14.000Z"
  },
  {
    "id": 2786,
    "keyword": null,
    "link": null,
    "title": " java math.floor example",
    "description": "import java.lang.*;  public class Math {     public static void main(String[] args) {        // get two double numbers       double x = 60984.1;       double y = -497.99;           // call floor and print the result       System.out.println(\"Math.floor(\" + x + \")=\" + Math.floor(x));       System.out.println(\"Math.floor(\" + y + \")=\" + Math.floor(y));       System.out.println(\"Math.floor(0)=\" + Math.floor(0));    } } Let us compile and run the above program, this will produce the following result &minus;  Math.floor(60984.1)=60984.0 Math.floor(-497.99)=-498.0 Math.floor(0)=0.0\nMath.floor(value);\nThe floor of a floating point number is the largest integer that is <= to the number.\n",
    "reg_date": "2021-10-12T12:05:14.000Z"
  },
  {
    "id": 2787,
    "keyword": null,
    "link": null,
    "title": " java math.pi",
    "description": "import java.lang.Math.*;  double radius = 15; double area = Math.PI * radius * radius;\n",
    "reg_date": "2021-10-12T12:05:14.000Z"
  },
  {
    "id": 2788,
    "keyword": null,
    "link": null,
    "title": " java math.random",
    "description": "int rand = (int)(Math.random() * range) + min; \n// int rand = (int)(Math.random() * range) + min;  // Java program to demonstrate Math.random() working  // of java.lang.Math.random() method  import java.lang.Math;     class Gfg2 {         // driver code      public static void main(String args[])      {          // define the range          int max = 10;          int min = 1;          int range = max - min + 1;             // generate random numbers within 1 to 10          for (int i = 0; i < 10; i++) {              int rand = (int)(Math.random() * range) + min;                 // Output is different everytime this code is executed              System.out.println(rand);          }      }  } \n// Math.random() returns a random number between 0.0-0.99. double rnd = Math.random();  // rnd1 is an integer in the range 0-9 (including 9). int rnd1 = (int)(Math.random()*10);  // rnd2 is in the range 1-10 (including 10). The parentheses are necessary! int rnd2 = (int)(Math.random()*10) + 1;  // rnd3 is in the range 5-10 (including 10). The range is 10-5+1 = 6. int rnd3 = (int)(Math.random()*6) + 5;  // rnd4 is in the range -10 up to 9 (including 9). The range is doubled (9 - -10 + 1 = 20) and the minimum is -10. int rnd4 = (int)(Math.random()*20) - 10; \n(int)(Math.random() * max) + min; inclusive\n",
    "reg_date": "2021-10-12T12:05:14.000Z"
  },
  {
    "id": 2789,
    "keyword": null,
    "link": null,
    "title": " java math ceil",
    "description": "Math.ceil(125.9)=126.0 Math.ceil(0.4873)=1.0 Math.ceil(-0.65)=-0.0 \nMath.ceil(value);\nThe ceiling of a floating point number is the smallest integer that is >= to the number.\nimport java.lang.*;  public class Math {     public static void main(String[] args) {        // get two double numbers       double x = 125.9;       double y = 0.4873;           // call ceal for these these numbers       System.out.println(\"Math.ceil(\" + x + \")=\" + Math.ceil(x));       System.out.println(\"Math.ceil(\" + y + \")=\" + Math.ceil(y));       System.out.println(\"Math.ceil(-0.65)=\" + Math.ceil(-0.65));    } }\n",
    "reg_date": "2021-10-12T12:05:15.000Z"
  },
  {
    "id": 2790,
    "keyword": null,
    "link": null,
    "title": " java math random",
    "description": "import java.util.Random;  Random rand = new Random();  // Obtain a number between [0 - 49]. int n = rand.nextInt(50);  // Add 1 to the result to get a number from the required range // (i.e., [1 - 50]). n += 1;\nint rand = (int)(Math.random() * range) + min; \n// int rand = (int)(Math.random() * range) + min;  // Java program to demonstrate Math.random() working  // of java.lang.Math.random() method  import java.lang.Math;     class Gfg2 {         // driver code      public static void main(String args[])      {          // define the range          int max = 10;          int min = 1;          int range = max - min + 1;             // generate random numbers within 1 to 10          for (int i = 0; i < 10; i++) {              int rand = (int)(Math.random() * range) + min;                 // Output is different everytime this code is executed              System.out.println(rand);          }      }  } \n// Math.random() returns a random number between 0.0-0.99. double rnd = Math.random();  // rnd1 is an integer in the range 0-9 (including 9). int rnd1 = (int)(Math.random()*10);  // rnd2 is in the range 1-10 (including 10). The parentheses are necessary! int rnd2 = (int)(Math.random()*10) + 1;  // rnd3 is in the range 5-10 (including 10). The range is 10-5+1 = 6. int rnd3 = (int)(Math.random()*6) + 5;  // rnd4 is in the range -10 up to 9 (including 9). The range is doubled (9 - -10 + 1 = 20) and the minimum is -10. int rnd4 = (int)(Math.random()*20) - 10; \n(int)(Math.random() * max) + min; inclusive\n",
    "reg_date": "2021-10-12T12:05:15.000Z"
  },
  {
    "id": 2791,
    "keyword": null,
    "link": null,
    "title": " java max",
    "description": "public class Test {      public static void main(String args[]) {       System.out.println(Math.max(12.123, 12.456));             System.out.println(Math.max(23.12, 23.0));      } }\n (stores the maximum possible value for any integer variable)     public static void main(String[] arg)     {   \t\tSystem.out.println(\"Integer.MAX_VALUE = \"                            + Integer.MAX_VALUE);///output :-2147483647     } } Any integer variable cannot store any value beyond this limit\n        int[] arr = {2, 3, 4, 5, 6, 7, 8, 9,};         int max = arr[0]; // max tanimliyorsun         int min = arr[0];  // min tanimliyorsun          for (int i = 0; i < arr.length; i++) {             if (arr[i] > max){  // array's index are compared with each other, // whichever is greater will be assigned to max                 max = arr[i];             }             if(arr[i] < min){  //array's index are compared with each other, // whichever is smaller will be assigned to min                 min = arr[i];             }         }         System.out.println(max); // 9         System.out.println(min);  // 2\n",
    "reg_date": "2021-10-12T12:05:15.000Z"
  },
  {
    "id": 2792,
    "keyword": null,
    "link": null,
    "title": " java max array",
    "description": " // Initializing array of integers          Integer[] num = { 2, 4, 7, 5, 9 };  // using Collections.min() to find minimum element          // using only 1 line.          int min = Collections.min(Arrays.asList(num));             // using Collections.max() to find maximum element          // using only 1 line.          int max = Collections.max(Arrays.asList(num)); \npublic static double max(double[] arr) {   double result = arr[0];   for (int i = 1; i < arr.length; ++i) {     if (result < arr[i]) result = arr[i];   }   return result; }\npublic static String max(String[] arr) {   String result = arr[0];   for (int i = 1; i < arr.length; ++i) {     if (result.compareTo(arr[i]) < 0) result = arr[i];   }   return result; }\npublic static double arrayMax(double[] arr) {     double max = Double.NEGATIVE_INFINITY;      for(double cur: arr)         max = Math.max(max, cur);      return max; }\npublic static double max(double[] arr) {   double result = Double.NEGATIVE_INFINITY;   for (int i = 0; i < arr.length; ++i) {     if (result < arr[i]) result = arr[i];   }   return result; }\nimport java.util.Random;  public class Main {  public static void main(String[] args) {    int a[] = new int [100];    Random rnd = new Random ();      for (int i = 0; i< a.length; i++) {         a[i] = rnd.nextInt(99-0)+0;         System.out.println(a[i]);     }      int max = 0;                for (int i = 0; i < a.length; i++) {         a[i] = max;           for (int j = i+1; j<a.length; j++) {             if (a[j] > max) {                max = a[j];             }          }     }      System.out.println(\"Max element: \" + max); } }\n",
    "reg_date": "2021-10-12T12:05:15.000Z"
  },
  {
    "id": 2793,
    "keyword": null,
    "link": null,
    "title": " java max int value",
    "description": "Integer.MAX_VALUE //== 2147483647, once you increment past that, you   \t\t\t\t  //\"wrap around\" to Integer.MIN_VALUE\n//Integer.MAX_VALUE (MAX_VALUE Method In Integer Wrapper Class) \t-2,147,483,648 //(Value) In Java, the integer(long) is also 32 bits, but ranges from  -2,147,483,648 to +2,147,483,647.\nint a = Integer.MAX_VALUE; long a = Long.MAX_VALUE;\npublic class Test {    public static void main(String[] args)    {      System.out.println(Integer.MIN_VALUE);      System.out.println(Integer.MAX_VALUE);      System.out.println(Integer.MIN_VALUE - 1);      System.out.println(Integer.MAX_VALUE + 1);    } }\nInteger.MAX_VALUE\n",
    "reg_date": "2021-10-12T12:05:15.000Z"
  },
  {
    "id": 2794,
    "keyword": null,
    "link": null,
    "title": " java max integer",
    "description": "Integer.MAX_VALUE //== 2147483647, once you increment past that, you   \t\t\t\t  //\"wrap around\" to Integer.MIN_VALUE\nInteger.MAX_VALUE\n",
    "reg_date": "2021-10-12T12:05:15.000Z"
  },
  {
    "id": 2795,
    "keyword": null,
    "link": null,
    "title": " java meaning",
    "description": "if (you.mean.equals(\"java programming language\")) {   System.out.println(\"Java is a class-based, object-oriented programming language\"); } else if (you.mean.equals(\"java coffee\")) {   System.out.print(\"the term java comes from an island named 'java', a famous coffee source druing the 1600s \"); }\nif((min >= 2) {    someval =2; } else {    someval =1 } \n",
    "reg_date": "2021-10-12T12:05:15.000Z"
  },
  {
    "id": 2796,
    "keyword": null,
    "link": null,
    "title": " java measure execution time",
    "description": "long start = System.currentTimeMillis(); class.method(); long time = System.currentTimeMillis() - start;\nlong startTime = System.nanoTime(); methodToTime(); long endTime = System.nanoTime();  long duration = (endTime - startTime);  //divide by 1000000 to get milliseconds.\nInstant start = Instant.now(); Thread.sleep(63553); Instant end = Instant.now(); System.out.println(Duration.between(start, end)); // prints PT1M3.553S \n",
    "reg_date": "2021-10-12T12:05:15.000Z"
  },
  {
    "id": 2797,
    "keyword": null,
    "link": null,
    "title": " java memory arguments",
    "description": "-Xms: It is used for setting the initial and minimum heap size. It is recommended to set the minimum heap size equivalent to the maximum heap size in order to minimize the garbage collection.  -Xmx: It is used for setting the maximum heap size. The performance will decrease if the max heap value is set lower than the amount of live data. It will force frequent garbage collections in order to free up space.\n",
    "reg_date": "2021-10-12T12:05:15.000Z"
  },
  {
    "id": 2798,
    "keyword": null,
    "link": null,
    "title": " java method",
    "description": "public class Main {   public static void main(String args[]) {     SayHi();          int sum = AddNums(5, 6);     System.out.println(sum);   }      public static void SayHi() { //This method has no return value     System.out.println(\"Hi!\");   }      public static int AddNums(int a, int b) { //This method has a return value     return a + b; }\npublic class MyClass {   static int myMethod(int x) {     return 5 + x;   }    public static void main(String[] args) {     System.out.println(myMethod(3));   } } // Returns 8\nA method in java is a group of statements to carry out some operation also  known as functions.\nMethod is a collection of statements which returns a value upon its execution Method have a return and the method's name may or not be same as the class name. Method is invoked explicitly. Method is not provided by compiler in any case. Methods are inherited by child classes.\nMethod is a collection of statements which returns a value upon its execution.   Method have a return and the method's name may or not be same as the class name. Method is invoked explicitly. Method is not provided by compiler in any case. Methods are inherited by child classes.\npublic int addNum(int num1, int num2) {   total = num1 + num2;   System.out.println(\"Total: \" + total); }\n",
    "reg_date": "2021-10-12T12:05:16.000Z"
  },
  {
    "id": 2799,
    "keyword": null,
    "link": null,
    "title": " java method reference",
    "description": "public class Main {   public static void main(String args[]) {     SayHi();          int sum = AddNums(5, 6);     System.out.println(sum);   }      public static void SayHi() { //This method has no return value     System.out.println(\"Hi!\");   }      public static int AddNums(int a, int b) { //This method has a return value     return a + b; }\nJava provides a feature called method reference in Java 8. Method reference  is used to refer method of functional interface.   It is compact and easy form   of lambda expression. Each time when    you are using lambda expression to just   referring a method, you can replace your   lambda expression with method reference.  Types of Method References: - Reference to a static method.  Syntax ==> ContainingClass::staticMethodName   - Reference to an instance method.  Syntax ==> containingObject::instanceMethodName   - Reference to a constructor.  Syntax ==> ClassName::new  \n",
    "reg_date": "2021-10-12T12:05:16.000Z"
  },
  {
    "id": 2800,
    "keyword": null,
    "link": null,
    "title": " java method to capitalize first letter",
    "description": "String str = \"java\"; String cap = str.substring(0, 1).toUpperCase() + str.substring(1); // cap = \"Java\"\nStringUtils.capitalize(..)\nclass Main {   public static void main(String[] args) {      // create a string     String message = \"everyone loves java\";      // stores each characters to a char array     char[] charArray = message.toCharArray();     boolean foundSpace = true;      for(int i = 0; i < charArray.length; i++) {        // if the array element is a letter       if(Character.isLetter(charArray[i])) {          // check space is present before the letter         if(foundSpace) {            // change the letter into uppercase           charArray[i] = Character.toUpperCase(charArray[i]);           foundSpace = false;         }       }        else {         // if the new character is not character         foundSpace = true;       }     }      // convert the char array to the string     message = String.valueOf(charArray);     System.out.println(\"Message: \" + message);   } }\n",
    "reg_date": "2021-10-12T12:05:16.000Z"
  },
  {
    "id": 2801,
    "keyword": null,
    "link": null,
    "title": " java methods",
    "description": "public class Main {   public static void main(String args[]) {     SayHi();          int sum = AddNums(5, 6);     System.out.println(sum);   }      public static void SayHi() { //This method has no return value     System.out.println(\"Hi!\");   }      public static int AddNums(int a, int b) { //This method has a return value     return a + b; }\n//declare a function like this: void function(int parameter1) { \t//function body } //call the function like this: function(1);\npublic class MyClass {   static int myMethod(int x) {     return 5 + x;   }    public static void main(String[] args) {     System.out.println(myMethod(3));   } } // Returns 8\nA method in java is a group of statements to carry out some operation also  known as functions.\nMethod is a collection of statements which returns a value upon its execution Method have a return and the method's name may or not be same as the class name. Method is invoked explicitly. Method is not provided by compiler in any case. Methods are inherited by child classes.\nMethod is a collection of statements which returns a value upon its execution.   Method have a return and the method's name may or not be same as the class name. Method is invoked explicitly. Method is not provided by compiler in any case. Methods are inherited by child classes.\n",
    "reg_date": "2021-10-12T12:05:16.000Z"
  },
  {
    "id": 2802,
    "keyword": null,
    "link": null,
    "title": " java milliseconds to days hours minutes seconds",
    "description": "package com.roytuts.time; import java.util.concurrent.TimeUnit; public class MillisToDayHrMinSec { \tpublic static void main(String[] args) { \t\tfinal long milliseconds = 5478965412358l; \t\tfinal long dy = TimeUnit.MILLISECONDS.toDays(milliseconds); \t\tfinal long hr = TimeUnit.MILLISECONDS.toHours(milliseconds) \t\t\t\t- TimeUnit.DAYS.toHours(TimeUnit.MILLISECONDS.toDays(milliseconds)); \t\tfinal long min = TimeUnit.MILLISECONDS.toMinutes(milliseconds) \t\t\t\t- TimeUnit.HOURS.toMinutes(TimeUnit.MILLISECONDS.toHours(milliseconds)); \t\tfinal long sec = TimeUnit.MILLISECONDS.toSeconds(milliseconds) \t\t\t\t- TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(milliseconds)); \t\tfinal long ms = TimeUnit.MILLISECONDS.toMillis(milliseconds) \t\t\t\t- TimeUnit.SECONDS.toMillis(TimeUnit.MILLISECONDS.toSeconds(milliseconds)); \t\tSystem.out \t\t\t\t.println(String.format(\"%d Days %d Hours %d Minutes %d Seconds %d Milliseconds\", dy, hr, min, sec, ms)); \t} }\n",
    "reg_date": "2021-10-12T12:05:16.000Z"
  },
  {
    "id": 2803,
    "keyword": null,
    "link": null,
    "title": " java mockito any string import",
    "description": "import static org.mockito.Matchers.anyString;\n",
    "reg_date": "2021-10-12T12:05:16.000Z"
  },
  {
    "id": 2804,
    "keyword": null,
    "link": null,
    "title": " java modulus",
    "description": "Java has one important arithmetical operator you may not be familiar with, %, also known as the modulus or remainder operator. The % operator returns the remainder of two numbers. For instance: * 10 % 3 => 1 because 10 divided by 3 leaves a remainder of 1\n",
    "reg_date": "2021-10-12T12:05:16.000Z"
  },
  {
    "id": 2805,
    "keyword": null,
    "link": null,
    "title": " java mongodb find with multiple conditions",
    "description": "BasicDBObject criteria = new BasicDBObject(); criteria.append(\"color\", \"black\"); criteria.append(\"shape\", \"round\"); criteria.append(\"weight\", 100);  DBCursor cur = widgets.find(criteria);\nUser.find({$or:[{region: \"NA\"},{sector:\"Some Sector\"}]}, function(err, user)   {     if (err)     {         res.send(err);     }     console.log(user);     res.json(user);   });\n",
    "reg_date": "2021-10-12T12:05:16.000Z"
  },
  {
    "id": 2806,
    "keyword": null,
    "link": null,
    "title": " java mouseclick",
    "description": "public static void click(int x, int y) throws AWTException{     Robot bot = new Robot();     bot.mouseMove(x, y);         bot.mousePress(InputEvent.BUTTON1_DOWN_MASK);     bot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK); } \n",
    "reg_date": "2021-10-12T12:05:16.000Z"
  },
  {
    "id": 2807,
    "keyword": null,
    "link": null,
    "title": " java mouseevent",
    "description": "public void mouseDragged(MouseEvent e) { \tmouseX = e.getX(); \tmouseY = e.getY(); \tif (SwingUtilities.isLeftMouseButton(e)) { \t\tmouseB = 1; \t} \tif (SwingUtilities.isRightMouseButton(e)) { \t\tmouseB = 3; \t}  \tMouseDraggedEvent event = new MouseDraggedEvent(e.getX(), e.getY(), mouseB); \ttry { \t\teventListener.onEvent(event); \t} catch (Exception ex) {} }  \n",
    "reg_date": "2021-10-12T12:05:16.000Z"
  },
  {
    "id": 2808,
    "keyword": null,
    "link": null,
    "title": " java mouselistener get coordinates",
    "description": "int x =  MouseInfo.getPointerInfo().getLocation().x; int y = MouseInfo.getPointerInfo().getLocation().y;\nimplement MouseListener  @Override public void mouseClicked(MouseEvent e) {     int x=e.getX();     int y=e.getY();     System.out.println(x+\",\"+y);//these co-ords are relative to the component }\n",
    "reg_date": "2021-10-12T12:05:16.000Z"
  },
  {
    "id": 2809,
    "keyword": null,
    "link": null,
    "title": " java multiline string",
    "description": "//text blocks were introduced in Java 13 as a Preview feature and in Java 15 as a full feature: String a = \"\"\"\"\"\";   // no line terminator after opening delimiter String b = \"\"\" \"\"\";  // no line terminator after opening delimiter String c = \"\"\"            \";        // no closing delimiter (text block continues to EOF) String d = \"\"\"            abc \\ def            \"\"\";      // unescaped backslash (see below for escape processing)    String html = \"\"\"               <html>                   <body>                       <p>Hello, world</p>                   </body>               </html> \"\"\";\n",
    "reg_date": "2021-10-12T12:05:17.000Z"
  },
  {
    "id": 2810,
    "keyword": null,
    "link": null,
    "title": " java multiple extends",
    "description": "//You can only Extend a single class. And implement Interfaces from many sources.  public class CustomActivity extends Activity {       private AnotherClass mClass;       protected void onCreate(Bundle savedInstanceState) {          super.onCreate(savedInstanceState);          mClass = new AnotherClass(this);      }       //Implement each method you want to use.      public String getInfoFromOtherClass()      {         return mClass.getInfoFromOtherClass();      }  } \n",
    "reg_date": "2021-10-12T12:05:17.000Z"
  },
  {
    "id": 2811,
    "keyword": null,
    "link": null,
    "title": " java multiplication table nested loop",
    "description": "public class Main {   public static void main(String[] args) {     for (int y = 1; y < 12; ++y) {       for (int x = 1; x < 12; ++x) {         System.out.printf(\"M\", y*x);       }       System.out.println();     }   } }\n",
    "reg_date": "2021-10-12T12:05:17.000Z"
  },
  {
    "id": 2812,
    "keyword": null,
    "link": null,
    "title": " java naming conventions",
    "description": "Methods should be verbs, in mixed case with the first letter lowercase,  with the first letter of each internal word capitalized. Example: run(); runFast(); getBackground();\n // Class // It should start with the uppercase letter. It should be a noun such as Color, Button, System, Thread, etc. Use appropriate words, instead of acronyms. Example: public class Employee   {   //code snippet   }    // Interface // It should start with the uppercase letter. It should be an adjective such as Runnable, Remote, ActionListener. Use appropriate words, instead of acronyms. Example: interface Printable   {   //code snippet   }    // Method // It should start with lowercase letter. It should be a verb such as main(), print(), println(). If the name contains multiple words, start it with a lowercase letter followed by an uppercase letter such as actionPerformed(). Example:  class Employee   {   //method   \tvoid draw()   \t{   //code snippet   \t}   }   // Variable // It should start with a lowercase letter such as id, name. It should not start with the special characters like & (ampersand), $ (dollar), _ (underscore). If the name contains multiple words, start it with the lowercase letter followed by an uppercase letter such as firstName, lastName. Avoid using one-character variables such as x, y, z. Example :-   class Employee   {   //variable   \tint id;   //code snippet   }  // Package // It should be a lowercase letter such as java, lang. If the name contains multiple words, it should be separated by dots (.) such as java.util, java.lang. Example: package com.javatpoint; //package   class Employee   {   //code snippet   }  // Constant // It should be in uppercase letters such as RED, YELLOW. If the name contains multiple words, it should be separated by an underscore(_) such as MAX_PRIORITY. It may contain digits but not as the first letter. Example: class Employee   {   //constant    \tstatic final int MIN_AGE = 18;   //code snippet   }  \n",
    "reg_date": "2021-10-12T12:05:17.000Z"
  },
  {
    "id": 2813,
    "keyword": null,
    "link": null,
    "title": " java nested for loop",
    "description": "// This nested for loop will print 5 rows of 20 asterisks each  for(int i = 0; i < 5; i++) {   for(int j = 0; j < 20; j++) {     System.out.print(\"*\");   }   System.out.println(); }\nfor (int i = 0; i < 10; i++) { \tfor (int j = 0; j < 10; j++) { \t\tSystem.out.println(\"*\");     }   System.out.println(\"\"); }\n// outer loop for (int i = 1; i <= 5; ++i) {   // codes    // inner loop   for(int j = 1; j <=2; ++j) {     // codes   } .. }\n",
    "reg_date": "2021-10-12T12:05:17.000Z"
  },
  {
    "id": 2814,
    "keyword": null,
    "link": null,
    "title": " java nested loop",
    "description": "// This nested for loop will print 5 rows of 20 asterisks each  for(int i = 0; i < 5; i++) {   for(int j = 0; j < 20; j++) {     System.out.print(\"*\");   }   System.out.println(); }\nfor (int i = 0; i < 10; i++) { \tfor (int j = 0; j < 10; j++) { \t\tSystem.out.println(\"*\");     }   System.out.println(\"\"); }\n// outer loop for (int i = 1; i <= 5; ++i) {   // codes    // inner loop   for(int j = 1; j <=2; ++j) {     // codes   } .. }\n",
    "reg_date": "2021-10-12T12:05:17.000Z"
  },
  {
    "id": 2815,
    "keyword": null,
    "link": null,
    "title": " java new list string with values",
    "description": "List<String> list = Arrays.asList(\"foo\", \"bar\");\n",
    "reg_date": "2021-10-12T12:05:17.000Z"
  },
  {
    "id": 2816,
    "keyword": null,
    "link": null,
    "title": " java new localdatetime",
    "description": "import java.time.LocalDate; import java.time.LocalDateTime; import java.time.LocalTime; import java.time.Month;  /**  * Java Program to demonstrate How to use LocalDateTime class in Java 8.  * LocalDateTime is LocalDate + LocalTime, i.e. date with time   * @author WINDOWS 8  */ public class Java8Demo {      public static void main(String args[])  {          // LocalDate is date without time in Java 8         // LocalTime is time without date in Java 8         // LocalDateTime is both date and time e.g. LocalDate + LocalTime         // but without Timezone information                           // LocalDateTime.now() creates a LocalDateTieme object with current         // date and time         LocalDateTime rightNow = LocalDateTime.now();         System.out.println(\"current datetime : \" + rightNow);                           // LocalDateTime.of() method is a factory method to careate          // LocalDateTiem with specific date and time         LocalDateTime aDateTime = LocalDateTime.of(2015,                                             Month.JULY, 29, 19, 30, 40);         System.out.println(\"some datetime : \" + aDateTime);                  // You can also create LocalDateTime object by combining LocalDate         // and LocalTime         LocalDate currentDate = LocalDate.now();         LocalTime currentTime = LocalTime.now();         LocalDateTime fromDateAndTime = LocalDateTime.of(currentDate,                                                            currentTime);         System.out.println(\"LocalDateTime created by combining LocalDate\"                 + \" and LocalTime\" + fromDateAndTime);                           // You can also retrieve LocalDate and LocalTime from LocalDateTime         LocalDate retrievedDate = fromDateAndTime.toLocalDate();         LocalTime retrievedTime = fromDateAndTime.toLocalTime();         System.out.println(\"retreived LocalDate : \" + retrievedDate);         System.out.println(\"retreived LocalTime : \" + retrievedTime);              }  }  Output : current datetime : 2015-08-02T00:29:53.949 some datetime : 2015-07-29T19:30:40 LocalDateTime created by combining LocalDate   and LocalTime2015-08-02T00:29:53.949 retreived LocalDate : 2015-08-02 retreived LocalTime : 00:29:53.949\n",
    "reg_date": "2021-10-12T12:05:17.000Z"
  },
  {
    "id": 2817,
    "keyword": null,
    "link": null,
    "title": " java new string array",
    "description": "String[] myStringArray = new String[3]; String[] myStringArray = {\"a\", \"b\", \"c\"}; String[] myStringArray = new String[]{\"a\", \"b\", \"c\"};\nstring[] abc=new string[]{\"hai\",\"hello\"}  \ndataType[] arrayRefVar = new dataType[arraySize];\n",
    "reg_date": "2021-10-12T12:05:17.000Z"
  },
  {
    "id": 2818,
    "keyword": null,
    "link": null,
    "title": " java new string with values",
    "description": "new String[]{\"day\", \"week\", \"month\"}\n",
    "reg_date": "2021-10-12T12:05:17.000Z"
  },
  {
    "id": 2819,
    "keyword": null,
    "link": null,
    "title": " java next permutation",
    "description": "public static boolean next_permutation(int[] arr) { \tint len = arr.length; \tint i = len - 1;      // 1. find largest i where arr[i - 1] < arr[i] \twhile (i > 0) { \t\tif (arr[i - 1] < arr[i]) break;     \ti--;   \t}    \tif (i <= 0) return false;    \t// 2. find largest j where arr[i - 1] < arr[j] and j >= i   \tint j = len - 1;   \twhile (j >= i) {     \tif (arr[i - 1] < arr[j]) break;     \tj--;   \t}  \t// 3. swap elements between arr[i-1] and arr[j]   \tswap(i - 1, j, arr);    \t// 4. reverse elements from i to end of array   \tlen--;   \twhile (i < len) {     \tswap(i, len, arr);     \tlen--;     \ti++;   \t}   \treturn true; }  public static void swap(int x, int y, int[] arr) {   \tint temp = arr[x];   \tarr[x] = arr[y];   \tarr[y] = temp; }\n",
    "reg_date": "2021-10-12T12:05:18.000Z"
  },
  {
    "id": 2820,
    "keyword": null,
    "link": null,
    "title": " java nextpermutation",
    "description": "public static boolean next_permutation(int[] arr) { \tint len = arr.length; \tint i = len - 1;      // 1. find largest i where arr[i - 1] < arr[i] \twhile (i > 0) { \t\tif (arr[i - 1] < arr[i]) break;     \ti--;   \t}    \tif (i <= 0) return false;    \t// 2. find largest j where arr[i - 1] < arr[j] and j >= i   \tint j = len - 1;   \twhile (j >= i) {     \tif (arr[i - 1] < arr[j]) break;     \tj--;   \t}  \t// 3. swap elements between arr[i-1] and arr[j]   \tswap(i - 1, j, arr);    \t// 4. reverse elements from i to end of array   \tlen--;   \twhile (i < len) {     \tswap(i, len, arr);     \tlen--;     \ti++;   \t}   \treturn true; }  public static void swap(int x, int y, int[] arr) {   \tint temp = arr[x];   \tarr[x] = arr[y];   \tarr[y] = temp; }\n",
    "reg_date": "2021-10-12T12:05:18.000Z"
  },
  {
    "id": 2821,
    "keyword": null,
    "link": null,
    "title": " java not equal to",
    "description": "if(5 != 4) // != means \"not equal to\"   \treturn true;\n// Int version int i = 2; if (i != 3) {}  // String version String s = \"a\"; if(!s.equals(\"b\")) {}\n",
    "reg_date": "2021-10-12T12:05:18.000Z"
  },
  {
    "id": 2822,
    "keyword": null,
    "link": null,
    "title": " java not equals string",
    "description": "if (!\"success\".equals(statusCheck)) \nString name = \"John\";    // prints true to standard system output.  System.out.print(!name.equals(\"Alex\")); \nif(5 != 4) // != means \"not equal to\"   \treturn true;\n// Int version int i = 2; if (i != 3) {}  // String version String s = \"a\"; if(!s.equals(\"b\")) {}\n",
    "reg_date": "2021-10-12T12:05:18.000Z"
  },
  {
    "id": 2823,
    "keyword": null,
    "link": null,
    "title": " java not instanceof",
    "description": "if ( !(obj instanceof Array) ) {   console.log('obj is not an Array') }\nif(!(example instanceof blarg))\n",
    "reg_date": "2021-10-12T12:05:18.000Z"
  },
  {
    "id": 2824,
    "keyword": null,
    "link": null,
    "title": " java notimplementedexception",
    "description": "public class NotYetImplementedException extends RuntimeException {     /**      * @deprecated Deprecated to remind you to implement the corresponding code      *             before releasing the software.      */     @Deprecated     public NotYetImplementedException() {     }      /**      * @deprecated Deprecated to remind you to implement the corresponding code      *             before releasing the software.      */     @Deprecated     public NotYetImplementedException(String message) {         super(message);     } }\n",
    "reg_date": "2021-10-12T12:05:18.000Z"
  },
  {
    "id": 2825,
    "keyword": null,
    "link": null,
    "title": " java notnull returns null",
    "description": "Objects.requireNonNull(<Function>)\n",
    "reg_date": "2021-10-12T12:05:18.000Z"
  },
  {
    "id": 2826,
    "keyword": null,
    "link": null,
    "title": " java nth fibonacci number",
    "description": "// Using following formula you can find nth Fibonacci Number without using any loops; // Created by using resources from \" https://math.hmc.edu/funfacts/fibonacci-number-formula/ \"  class Find {     public int nFibo(int n)     {         double Phi=((1+Math.sqrt(5))/2);         double phi=((1-Math.sqrt(5))/2);                  int ans=(int)((Math.pow(Phi,n)-(Math.pow(phi,n)))/Math.sqrt(5));                  return ans;     } }\nfor (loop = 0; loop < n; loop ++) {     fibonacci = num + num2;     num = num2;     num2 = fibonacci; } System.out.print(num); \n",
    "reg_date": "2021-10-12T12:05:18.000Z"
  },
  {
    "id": 2827,
    "keyword": null,
    "link": null,
    "title": " java number of days between dates",
    "description": "LocalDate start = LocalDate.parse(\"2020-11-03\"); LocalDate end = LocalDate.parse(\"2020-12-15\");  long diff = DAYS.between(start, end);\nimport java.util.Date; import java.text.SimpleDateFormat; class Example{    public static void main(String args[]){ \t SimpleDateFormat myFormat = new SimpleDateFormat(\"dd MM yyyy\"); \t String dateBeforeString = \"31 01 2014\"; \t String dateAfterString = \"02 02 2014\";  \t try { \t       Date dateBefore = myFormat.parse(dateBeforeString); \t       Date dateAfter = myFormat.parse(dateAfterString); \t       long difference = dateAfter.getTime() - dateBefore.getTime(); \t       float daysBetween = (difference / (1000*60*60*24));                /* You can also convert the milliseconds to days using this method                 * float daysBetween =                  *         TimeUnit.DAYS.convert(difference, TimeUnit.MILLISECONDS)                 */ \t       System.out.println(\"Number of Days between dates: \"+daysBetween); \t } catch (Exception e) { \t       e.printStackTrace(); \t }    } }\n",
    "reg_date": "2021-10-12T12:05:18.000Z"
  },
  {
    "id": 2828,
    "keyword": null,
    "link": null,
    "title": " java number padding zeros",
    "description": "System.out.println(String.format(\"\u0003d\", 4)); // 004\n",
    "reg_date": "2021-10-12T12:05:18.000Z"
  },
  {
    "id": 2829,
    "keyword": null,
    "link": null,
    "title": " java observable",
    "description": "setChanged(); notifyObservers(object_to_send_to_observer);\nsetChanged(); notifyObservers(object_that_u_want_to_send_to_Observer);\n",
    "reg_date": "2021-10-12T12:05:19.000Z"
  },
  {
    "id": 2830,
    "keyword": null,
    "link": null,
    "title": " java observable to observer",
    "description": "setChanged(); notifyObservers(object_to_send_to_observer);\nsetChanged(); notifyObservers(object_that_u_want_to_send_to_Observer);\n",
    "reg_date": "2021-10-12T12:05:19.000Z"
  },
  {
    "id": 2831,
    "keyword": null,
    "link": null,
    "title": " java obtain list string from list object",
    "description": "List<String> ids =    foos.stream().map(foo -> foo.getId()).collect(Collectors.toList());\n",
    "reg_date": "2021-10-12T12:05:19.000Z"
  },
  {
    "id": 2832,
    "keyword": null,
    "link": null,
    "title": " java one line if else",
    "description": "statement ? true \t: \tfalse   ^\t\t  |\t ^\t\t\t  ^ condition |   (instruction)   \t\t  |  If the statement:     \t\t  |\tis true | is false --------------------------------------------------------------------------------  Example: int i = 10;  String out = i > 8 ? \"Bigger than Eight!\" : \"Smaller than Eight!\"; System.out.println(out); \nstatement ? true : false\n",
    "reg_date": "2021-10-12T12:05:19.000Z"
  },
  {
    "id": 2833,
    "keyword": null,
    "link": null,
    "title": " java only close socket outputstream",
    "description": "socket.shutdownOutput()\n",
    "reg_date": "2021-10-12T12:05:19.000Z"
  },
  {
    "id": 2834,
    "keyword": null,
    "link": null,
    "title": " java opts",
    "description": "JAVA_OPTS \"-Xms1536m  -Xmx1536m -XX:NewSize=256m -XX:MaxNewSize=256m -XX:PermSize=256m  -XX:MaxPermSize=256m -XX:+DisableExplicitGC\"\n",
    "reg_date": "2021-10-12T12:05:19.000Z"
  },
  {
    "id": 2835,
    "keyword": null,
    "link": null,
    "title": " java or",
    "description": "int num = 9;  if (num == 1 || num == 2) {   System.out.println(\"Nope\");   }  if (num == 1 || num == 9) {   System.out.println(\"Yep\");   }\nif(5 != 4) // != means \"not equal to\"   \treturn true;\nif(a || b){   doSomething(); }  /* For if queries: || (OR), && (AND), == (EQUALS), != (DOES NOT EQUAL) \t\t\t\t< (LESS THAN), > (GREATER THAN), <= (LESS THAN OR EQUAL TO),                 >= (GREATER THAN OR EQUAL TO) */\n",
    "reg_date": "2021-10-12T12:05:19.000Z"
  },
  {
    "id": 2836,
    "keyword": null,
    "link": null,
    "title": " java or symbol",
    "description": "//logical OR is || in Java public static boolean or(boolean a,boolean b){ \treturn a||b; } //bitwise OR is | in Java public static int bitwiseOr(int a,int b){ \treturn a|b; }\n",
    "reg_date": "2021-10-12T12:05:19.000Z"
  },
  {
    "id": 2837,
    "keyword": null,
    "link": null,
    "title": " java output array lists to file",
    "description": "import java.io.FileWriter; ... FileWriter writer = new FileWriter(\"output.txt\");  for(String str: arr) {   writer.write(str + System.lineSeparator()); } writer.close();\n",
    "reg_date": "2021-10-12T12:05:19.000Z"
  },
  {
    "id": 2838,
    "keyword": null,
    "link": null,
    "title": " java override equals and hashcode",
    "description": "// EXAMPLE CLASS public class User {     private String name;     private int age;     private String passport; \t \t@Override public boolean equals(Object o) {         if (o == this)  {           return true;         }         if (!(o instanceof User)) {             return false;         }          User user = (User) o;          return user.name.equals(name) &&  \t\t\t\tuser.age == age &&            \t\tuser.passport.equals(passport);     }        @Override public int hashCode() {         int result = 17;         result = 31 * result + name.hashCode();         result = 31 * result + age;         result = 31 * result + passport.hashCode();         return result;     }\n",
    "reg_date": "2021-10-12T12:05:19.000Z"
  },
  {
    "id": 2839,
    "keyword": null,
    "link": null,
    "title": " java packages example",
    "description": "Package is a mechanism to group related classes ,interfaces and enums  in to a single module. Package can be declared using the following statement : Syntax : package <package-name> Coding Convention : package name should be declared in small letters. package statement defines the namespace. The main use of package is 1) To resolve naming conflicts 2) For visibility control : We can define classes and interfaces that are  not accessible outside the class\n// import <package>\t\t\t-> Imports the whole package // import <package>.<class> -> Imports a certain class import java.util.Scanner;\n",
    "reg_date": "2021-10-12T12:05:19.000Z"
  },
  {
    "id": 2840,
    "keyword": null,
    "link": null,
    "title": " java par o impar",
    "description": "int intA = 0;  if(intA%2 == 0) { //segun la resta de division entre 2, decirme si un numero es par o impar \t\t\t \t\t\tSystem.out.println(\"El numero: \"+intA+\" es par\"); \t\t}else { \t\t\tSystem.out.println(\"El numero: \"+intA+\" es impar\"); \t\t}\n",
    "reg_date": "2021-10-12T12:05:20.000Z"
  },
  {
    "id": 2841,
    "keyword": null,
    "link": null,
    "title": " java parse boolean to string",
    "description": "String.valueOf(booleanValue)\n",
    "reg_date": "2021-10-12T12:05:20.000Z"
  },
  {
    "id": 2842,
    "keyword": null,
    "link": null,
    "title": " java parse xml string",
    "description": "public static Document loadXMLFromString(String xml) throws Exception {     DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();     DocumentBuilder builder = factory.newDocumentBuilder();     InputSource is = new InputSource(new StringReader(xml));     return builder.parse(is); }\n",
    "reg_date": "2021-10-12T12:05:20.000Z"
  },
  {
    "id": 2843,
    "keyword": null,
    "link": null,
    "title": " java pass array as method parameter",
    "description": "/* In java, you can create an array like this: \tnew int[]{1, 2, 3}; replace `int` with whatever you want */  public static void doSomething(int[] list) { \tSystem.out.println(\"Something is done.\");  }  public static void main(String[] args) {   \tdoSomething(new int[]{1, 2, 3}); }\n",
    "reg_date": "2021-10-12T12:05:20.000Z"
  },
  {
    "id": 2844,
    "keyword": null,
    "link": null,
    "title": " java pass method as parameter",
    "description": "public void setAllComponents(Component[] myComponentArray, Consumer<Component> myMethod) {     for (Component leaf : myComponentArray) {         if (leaf instanceof Container) {              Container node = (Container) leaf;             setAllComponents(node.getComponents(), myMethod);         }          myMethod.accept(leaf);     }  } \nsetAllComponents(this.getComponents(), this::changeColor); setAllComponents(this.getComponents(), this::changeSize);  \npublic interface Function4<A, B, C, D, R> {      R apply(A a, B b, C c, D d); } \n",
    "reg_date": "2021-10-12T12:05:20.000Z"
  },
  {
    "id": 2845,
    "keyword": null,
    "link": null,
    "title": " java password",
    "description": " public static String generateRandomPassword(int length) {         Object[][] characterSets = {                 {'1', '2', '3', '4', '5', '6', '7', '8', '9', '0'},                 {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'},                 {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'}         };         List<Character> passwordCharacters = new ArrayList<>();         ThreadLocalRandom random = ThreadLocalRandom.current();         for (Object[] characters : characterSets){             for (int i = 0; i < length / 3; i++){                 passwordCharacters.add((Character) characters[random.nextInt(0, characters.length)]);             }         }         for (int i =0; i < length % 3; i++){             Object[] characters = characterSets[random.nextInt(0, characterSets.length)];             passwordCharacters.add((Character) characters[random.nextInt(0, characters.length)]);         }         Collections.shuffle(passwordCharacters);         StringBuilder stringBuilder = new StringBuilder(length);         passwordCharacters.forEach(stringBuilder::append);         return stringBuilder.toString();     }\n",
    "reg_date": "2021-10-12T12:05:20.000Z"
  },
  {
    "id": 2846,
    "keyword": null,
    "link": null,
    "title": " java pause",
    "description": "//deprecated in main thread: try {   Thread.sleep(1000);//time is in ms (1000 ms = 1 second) } catch (InterruptedException e) {e.printStackTrace();}  //please use bellow instead: Timer timer = new Timer(); timer.schedule(new TimerTask() {   @Override   public void run() {     //what you want to do   } }, 1000);//wait 1000ms before doing the action\n",
    "reg_date": "2021-10-12T12:05:20.000Z"
  },
  {
    "id": 2847,
    "keyword": null,
    "link": null,
    "title": " java pause 1 second",
    "description": "Syntax : ========================================================= \tThread.sleep(1000); // 1000 milliseconds..          | ========================================================= int i=0; for(;;){ \tThread.sleep(2000); // set time delay to 2 seconds..    \tSystem.out.println(i++); // output : every output will display after 2 seconds..   \t }\n//deprecated in main thread: try {   Thread.sleep(1000);//time is in ms (1000 ms = 1 second) } catch (InterruptedException e) {e.printStackTrace();}  //please use bellow instead: Timer timer = new Timer(); timer.schedule(new TimerTask() {   @Override   public void run() {     //what you want to do   } }, 1000);//wait 1000ms before doing the action\n",
    "reg_date": "2021-10-12T12:05:20.000Z"
  },
  {
    "id": 2848,
    "keyword": null,
    "link": null,
    "title": " java pause console",
    "description": "try{System.in.read();} catch(Exception e){}\n",
    "reg_date": "2021-10-12T12:05:20.000Z"
  },
  {
    "id": 2849,
    "keyword": null,
    "link": null,
    "title": " java pause program until key pressed",
    "description": "System.in.read()\n",
    "reg_date": "2021-10-12T12:05:20.000Z"
  },
  {
    "id": 2850,
    "keyword": null,
    "link": null,
    "title": " java permutation",
    "description": "public static boolean next_permutation(int[] arr) { \tint len = arr.length; \tint i = len - 1;      // 1. find largest i where arr[i - 1] < arr[i] \twhile (i > 0) { \t\tif (arr[i - 1] < arr[i]) break;     \ti--;   \t}    \tif (i <= 0) return false;    \t// 2. find largest j where arr[i - 1] < arr[j] and j >= i   \tint j = len - 1;   \twhile (j >= i) {     \tif (arr[i - 1] < arr[j]) break;     \tj--;   \t}  \t// 3. swap elements between arr[i-1] and arr[j]   \tswap(i - 1, j, arr);    \t// 4. reverse elements from i to end of array   \tlen--;   \twhile (i < len) {     \tswap(i, len, arr);     \tlen--;     \ti++;   \t}   \treturn true; }  public static void swap(int x, int y, int[] arr) {   \tint temp = arr[x];   \tarr[x] = arr[y];   \tarr[y] = temp; }\nvoid permute(string a, int l, int r)   {       // Base case       if (l == r)           cout<<a<<endl;       else     {           // Permutations made           for (int i = l; i <= r; i++)           {                  // Swapping done               swap(a[l], a[i]);                  // Recursion called               permute(a, l+1, r);                  //backtrack               swap(a[l], a[i]);           }       }   }  \n",
    "reg_date": "2021-10-12T12:05:21.000Z"
  },
  {
    "id": 2851,
    "keyword": null,
    "link": null,
    "title": " java php object",
    "description": "$a = array('foo' => 'bar'); $o = (object) $a; var_dump($o instanceof stdClass); // bool(true) var_dump($o->foo); // string(3) \"bar\"\n",
    "reg_date": "2021-10-12T12:05:21.000Z"
  },
  {
    "id": 2852,
    "keyword": null,
    "link": null,
    "title": " java pointer",
    "description": "Java does not have pointers.\nJava doesn't support pointers explicitly. But java uses pointer implicitly:-   Java uses pointers for manipulations of references   but these pointers are not available for outside use.  A pointer is only used as an address of a memory location. The java variales of oject type store the reference of the oject.  Basically the programmer can't write the pointer program in java.\nThere are no pointers in Java. However, there is a Pointer class in JNA, which is very likely NOT what are you looking for. The only way to get and use pointers is through using Unsafe. The mechanisms are implementation-dependent between JDKs and the Unsafe class may be available at sun.misc.Unsafe or at jdk.internal.misc.Unsafe.\n",
    "reg_date": "2021-10-12T12:05:21.000Z"
  },
  {
    "id": 2853,
    "keyword": null,
    "link": null,
    "title": " java polimorfismo",
    "description": "class Animal {   public void makeSound() {     System.out.println(\"Grr...\");   } } class Cat extends Animal {   public void makeSound() {     System.out.println(\"Meow\");   } } class Dog extends Animal {   public void makeSound() {     System.out.println(\"Woof\");   } }  \n",
    "reg_date": "2021-10-12T12:05:21.000Z"
  },
  {
    "id": 2854,
    "keyword": null,
    "link": null,
    "title": " java potencia",
    "description": "Math.pow(double a, double b)\n",
    "reg_date": "2021-10-12T12:05:21.000Z"
  },
  {
    "id": 2855,
    "keyword": null,
    "link": null,
    "title": " java pow",
    "description": "import java.lang.Math;     class Gfg {         // driver code      public static void main(String args[])      {          double a = 30;          double b = 2;          System.out.println(Math.pow(a, b));             a = 3;          b = 4;          System.out.println(Math.pow(a, b));             a = 2;          b = 6;          System.out.println(Math.pow(a, b));      }  \n// It prints 2^3 = 8 System.out.println(Math.pow(2,3)); // Output: 8\n",
    "reg_date": "2021-10-12T12:05:21.000Z"
  },
  {
    "id": 2856,
    "keyword": null,
    "link": null,
    "title": " java prev permutation",
    "description": "public static boolean prev_permutation(int[] arr) { \tint len = arr.length; \tint i = len - 1;      // 1. find largest i where arr[i - 1] > arr[i] \twhile (i > 0) { \t\tif (arr[i - 1] > arr[i]) break;     \ti--;   \t}    \tif (i <= 0) return false;    \t// 2. find largest j where arr[i - 1] > arr[j] and j >= i   \tint j = len - 1;   \twhile (j >= i) {     \tif (arr[i - 1] > arr[j]) break;     \tj--;   \t}  \t// 3. swap elements between arr[i-1] and arr[j]   \tswap(i - 1, j, arr);    \t// 4. reverse elements from i to end of array   \tlen--;   \twhile (i < len) {     \tswap(i, len, arr);     \tlen--;     \ti++;   \t}   \treturn true; }  public static void swap(int x, int y, int[] arr) {   \tint temp = arr[x];   \tarr[x] = arr[y];   \tarr[y] = temp; }\n",
    "reg_date": "2021-10-12T12:05:21.000Z"
  },
  {
    "id": 2857,
    "keyword": null,
    "link": null,
    "title": " java previous permutation",
    "description": "public static boolean prev_permutation(int[] arr) { \tint len = arr.length; \tint i = len - 1;      // 1. find largest i where arr[i - 1] > arr[i] \twhile (i > 0) { \t\tif (arr[i - 1] > arr[i]) break;     \ti--;   \t}    \tif (i <= 0) return false;    \t// 2. find largest j where arr[i - 1] > arr[j] and j >= i   \tint j = len - 1;   \twhile (j >= i) {     \tif (arr[i - 1] > arr[j]) break;     \tj--;   \t}  \t// 3. swap elements between arr[i-1] and arr[j]   \tswap(i - 1, j, arr);    \t// 4. reverse elements from i to end of array   \tlen--;   \twhile (i < len) {     \tswap(i, len, arr);     \tlen--;     \ti++;   \t}   \treturn true; }  public static void swap(int x, int y, int[] arr) {   \tint temp = arr[x];   \tarr[x] = arr[y];   \tarr[y] = temp; }\n",
    "reg_date": "2021-10-12T12:05:21.000Z"
  },
  {
    "id": 2858,
    "keyword": null,
    "link": null,
    "title": " java prime numbers",
    "description": "public class Main {   public static void main(String[] args) {     for (int i = 2; i < 1_000_000; ++i) {       boolean isPrime = true;       int sqrt = (int)Math.ceil(Math.sqrt(i));       for (int divisor = 2; divisor <= sqrt; ++divisor) {         if (i % divisor == 0) {           isPrime = false;           break;         }       }       if (isPrime) {         System.out.println(i);       }     }   } }\npublic class Prime {     public static void main(String[] args) {          int num = 29;         boolean flag = false;         for(int i = 2; i <= num/2; ++i){             if(num % i == 0){                 flag = true;                 break;             }         }          if (!flag)             System.out.println(num + \" is a prime number.\");         else             System.out.println(num + \" is not a prime number.\"); }}\npublic class Prime {     public static void main(String[] args) {          int num = 29;         boolean flag = false;         for(int i = 2; i <= num/2; ++i){             if(num % i == 0){                 flag = true;                 break;             }         }          if (!flag)             System.out.println(num + \" is a prime number.\");         else             System.out.println(num + \" is not a prime number.\"); }} Source:www.progra \npublic class Prime {      public static void main(String[] args) {          int num = 29;         boolean flag = false;         for(int i = 2; i <= num/2; ++i)         {             // condition for nonprime number             if(num % i == 0)             {                 flag = true;                 break;             }         }          if (!flag)             System.out.println(num + \" is a prime number.\");         else             System.out.println(num + \" is not a prime number.\");     } }\npublic class PrimeNumberInJava {    public static void main(String[] args)    {       int a, b = 0, flag = 0;       int number = 17;       b = number / 2;       if(number == 0 || number == 1)       {          System.out.println(number + \" is not prime number\");       }       else       {          for(a = 2; a <= b; a++)          {             if(number % a == 0)             {                System.out.println(number + \" is not prime number.\");                flag = 1;                break;             }          }          if(flag == 0)          {             System.out.println(number + \" is prime number.\");          }       }    } }\nIt will display the prime numbers between 1 and 100.  class PrimeNumbers {    public static void main (String[] args)    {\t\t        int i =0;        int num =0;        //Empty String        String  primeNumbers = \"\";         for (i = 1; i <= 100; i++)                 { \t\t  \t             int counter=0; \t             for(num =i; num>=1; num--) \t  {              if(i%num==0) \t     {  \t\tcounter = counter + 1; \t     } \t  } \t  if (counter ==2) \t  { \t     //Appended the Prime number to the String \t     primeNumbers = primeNumbers + i + \" \"; \t  }\t        }\t        System.out.println(\"Prime numbers from 1 to 100 are :\");        System.out.println(primeNumbers);    } }\n",
    "reg_date": "2021-10-12T12:05:21.000Z"
  },
  {
    "id": 2859,
    "keyword": null,
    "link": null,
    "title": " java prime numbers 1 to 1000000",
    "description": "public class Main {   public static void main(String[] args) {     for (int i = 2; i < 1_000_000; ++i) {       boolean isPrime = true;       int sqrt = (int)Math.ceil(Math.sqrt(i));       for (int divisor = 2; divisor <= sqrt; ++divisor) {         if (i % divisor == 0) {           isPrime = false;           break;         }       }       if (isPrime) {         System.out.println(i);       }     }   } }\n",
    "reg_date": "2021-10-12T12:05:21.000Z"
  },
  {
    "id": 2860,
    "keyword": null,
    "link": null,
    "title": " java prime numbers from 1 to 100",
    "description": "public class Main {   public static void main(String[] args) {     for (int i = 2; i < 100; ++i) {       boolean isPrime = true;       int sqrt = (int)Math.ceil(Math.sqrt(i));       for (int divisor = 2; divisor <= sqrt; ++divisor) {         if (i % divisor == 0) {           isPrime = false;           break;         }       }       if (isPrime) {         System.out.println(i);       }     }   } }\n",
    "reg_date": "2021-10-12T12:05:22.000Z"
  },
  {
    "id": 2861,
    "keyword": null,
    "link": null,
    "title": " java print",
    "description": "//print and create new line after System.out.println(\"text\"); System.out.println(String); //You can use any variable type, not just strings, although //they are the most common  //Print without creating a new line System.out.print(\"text\"); System.out.print(String);\nSystem.out.println(\"Hello, World!\"); /*type System the class, the .out the field, and the println short  for print line */ \nSystem.out.println(\"whatever you want\"); //you can type sysout and then ctrl + space \nSystem.out.println(\"Your text here.\");\nString[] array = new String[] {\"John\", \"Mary\", \"Bob\"}; System.out.println(Arrays.toString(array)); // [John, Mary, Bob]\nSystem.out.print(<string>); //prints in the same line as the previous print System.out.println(<string>); //prints in a new line  // Example System.out.print(\"This \"); System.out.print(\"will \"); System.out.print(\"be \"); System.out.print(\"all \"); System.out.print(\"in \"); System.out.print(\"one \"); System.out.print(\"line.\");  System.out.println(\"Hello World!\"); System.out.println(\"second line\");\n",
    "reg_date": "2021-10-12T12:05:22.000Z"
  },
  {
    "id": 2862,
    "keyword": null,
    "link": null,
    "title": " java print 2d array as table",
    "description": "for (int row = 0; row < arr.length; row++)//Cycles through rows {   for (int col = 0; col < arr[row].length; col++)//Cycles through columns   {     System.out.printf(\"]\", arr[row][col]); //change the ] to however much space you want   }   System.out.println(); //Makes a new row } //This allows you to print the array as matrix\nint[][] array = new int[rows][columns]; System.out.println(Arrays.deepToString(array)); \nstatic void debugV2(Object... obj) {         System.out.println(Arrays.deepToString(obj)                 .replace(\"],\", \"\\n\").replace(\",\", \"\\t\")                 .replaceAll(\"[\\\\[\\\\]]\", \" \"));     }      static void debug(Object... obj) {         System.err.println(Arrays.deepToString(obj).replace(\"], \", \"]\\n\"));     }\n",
    "reg_date": "2021-10-12T12:05:22.000Z"
  },
  {
    "id": 2863,
    "keyword": null,
    "link": null,
    "title": " java print 2d char array",
    "description": "public static void printGrid(char arr[][]) {         for (int row = 0; row < arr.length; row++) {             for (int col = 0; col < arr[row].length; col++) {                 System.out.printf(arr[row][col] + \"\");             }             System.out.println();         }     }\n",
    "reg_date": "2021-10-12T12:05:22.000Z"
  },
  {
    "id": 2864,
    "keyword": null,
    "link": null,
    "title": " java print Apostrophes",
    "description": "System.out.print(\"\\\"Hello\\\"\");\n",
    "reg_date": "2021-10-12T12:05:22.000Z"
  },
  {
    "id": 2865,
    "keyword": null,
    "link": null,
    "title": " java print array",
    "description": "import java.util.Arrays;  class Scratch{     public static void main(String[] args){         int[] arr = new int[3];         System.out.println( Arrays.toString( arr ));       \t//prints [0, 0, 0]     } }\nimport java.util.Arrays;  public class Array {      public static void main(String[] args) {         int[] array = {1, 2, 3, 4, 5};          System.out.println(Arrays.toString(array));     } }\nString[] array = new String[] {\"John\", \"Mary\", \"Bob\"}; System.out.println(Arrays.toString(array)); // [John, Mary, Bob]\nimport java.util.Arrays; //How to print Arrays in Java public class Printarray{        public static void main(String[] args){            String[] arr = new String[]{\"Mumbai\",\"Delhi\",\"Kolkata\",\"Chennai\"};          //Using for loop;     for(int i=0; i<arr.length;i++){       System.out.println(arr[i]);     }          //Using for-each loop;     for(String city:arr){       System.out.println(city);     }        //Using Arrays.toString() method     System.out.println(Arrays.toString(arr));                //Using Arrays.deepToString() method its also converting multidimensional arrays to strings.          System.out.println(Arrays.deepToString(arr));            //Using Array as list method     System.out.println(Arrays.asList(arr));          }    }\nSystem.out.println(Arrays.toString(arr));\npublic class Array {      public static void main(String[] args) {         int[] array = {1, 2, 3, 4, 5}; //Your array          for (int element: array) { //Advanced For Loop (For each)             System.out.println(element); //print each element of            \t\t\t\t\t\t\t     //the array for each iteration         }     } }\n",
    "reg_date": "2021-10-12T12:05:22.000Z"
  },
  {
    "id": 2866,
    "keyword": null,
    "link": null,
    "title": " java print array of objects",
    "description": "Arrays.toString(myArray); \n",
    "reg_date": "2021-10-12T12:05:22.000Z"
  },
  {
    "id": 2867,
    "keyword": null,
    "link": null,
    "title": " java print default options",
    "description": "java -XX:+UnlockDiagnosticVMOptions -XX:+PrintFlagsFinal -version\n",
    "reg_date": "2021-10-12T12:05:22.000Z"
  },
  {
    "id": 2868,
    "keyword": null,
    "link": null,
    "title": " java print each line of a list",
    "description": "//To print each item in a list we use the print line function //First we need a list, i will be using an array list to start String[] animals = {\"dog\", \"cat\", \"elephant\", \"moose\"};  //Next we need a way to go trhough each value in the list 1 by 1 //We will be using a for loop  for(int i = 0; i < animals.size(); i++){   //Explaining above: while i is less than the amount of values in the list   //AKA the code still has values to check, it will keep looping through the list   //Now we just need to print out the values(you can do whatever you want with the values)   System.out.println(animals[i]);   //The line above prints out a word in the list   //Based off of the index(the number assinged to the word) of the word itself   //ex. The index for the word cat in the list is 1 (java starts count at 0)   //The index being printed in the list is whatever index of the list the loop is currently at   //So if the for loop has looped 3 times it will be at elephant      //:) } \n",
    "reg_date": "2021-10-12T12:05:22.000Z"
  },
  {
    "id": 2869,
    "keyword": null,
    "link": null,
    "title": " java print method",
    "description": "public void print(String message) { \tSystem.out.println(message); }  // Call it like this print(String);\n",
    "reg_date": "2021-10-12T12:05:22.000Z"
  },
  {
    "id": 2870,
    "keyword": null,
    "link": null,
    "title": " java print out int and string",
    "description": "public class Test  {      public static void main(String[] args)      {          System.out.println(45+5 + \"=\" +45+5);      }  }\n",
    "reg_date": "2021-10-12T12:05:22.000Z"
  },
  {
    "id": 2871,
    "keyword": null,
    "link": null,
    "title": " java print quotes",
    "description": "System.out.print(\"\\\"Hello\\\"\");\n",
    "reg_date": "2021-10-12T12:05:23.000Z"
  },
  {
    "id": 2872,
    "keyword": null,
    "link": null,
    "title": " java print stack trace to string",
    "description": "StringWriter sw = new StringWriter(); e.printStackTrace(new PrintWriter(sw)); String exceptionAsString = sw.toString(); \n",
    "reg_date": "2021-10-12T12:05:23.000Z"
  },
  {
    "id": 2873,
    "keyword": null,
    "link": null,
    "title": " java print stacktrace to file",
    "description": "//printStackTrace() can accept PrintWriter or PrintStream as argument catch (Exception e) {      PrintWriter pw = new PrintWriter(new File(\"file.txt\"));     e.printStackTrace(pw);     pw.close(); }  /*Credits:  Stackoverflow Users:  Less (https://stackoverflow.com/users/587318/less) Qnan (https://stackoverflow.com/users/190670/qnan)*/\n",
    "reg_date": "2021-10-12T12:05:23.000Z"
  },
  {
    "id": 2874,
    "keyword": null,
    "link": null,
    "title": " java print statement",
    "description": "//print and create new line after System.out.println(\"text\"); System.out.println(String); //You can use any variable type, not just strings, although //they are the most common  //Print without creating a new line System.out.print(\"text\"); System.out.print(String);\nSystem.out.println(\"Hello, World!\"); /*type System the class, the .out the field, and the println short  for print line */ \nSystem.out.println(\"Your text here.\");\n//print in Java System.out.println(\"Welcome to Java\"); \nSystem.out.println(\"print your String\");\n",
    "reg_date": "2021-10-12T12:05:23.000Z"
  },
  {
    "id": 2875,
    "keyword": null,
    "link": null,
    "title": " java print system out into string",
    "description": "// Create a stream to hold the output ByteArrayOutputStream baos = new ByteArrayOutputStream(); PrintStream ps = new PrintStream(baos); // IMPORTANT: Save the old System.out! PrintStream old = System.out; // Tell Java to use your special stream System.setOut(ps); // Print some output: goes to your special stream System.out.println(\"Foofoofoo!\"); // Put things back System.out.flush(); System.setOut(old); // Show what happened System.out.println(\"Here: \" + baos.toString());\n",
    "reg_date": "2021-10-12T12:05:23.000Z"
  },
  {
    "id": 2876,
    "keyword": null,
    "link": null,
    "title": " java print text with variables",
    "description": "System.out.println(\"You have \"+variable+\" points\");\n",
    "reg_date": "2021-10-12T12:05:23.000Z"
  },
  {
    "id": 2877,
    "keyword": null,
    "link": null,
    "title": " java print treemap",
    "description": "for (Map.Entry<K, V> entry : myMap.entrySet()) {      System.out.println(\"Key: \" + entry.getKey() + \". Value: \" + entry.getValue()); }\n",
    "reg_date": "2021-10-12T12:05:23.000Z"
  },
  {
    "id": 2878,
    "keyword": null,
    "link": null,
    "title": " java print type of object",
    "description": "//Example: Integer number = 15; System.out.println(number.getClass().getName());  //This print to console the fully qualified name of the class, which for the example is: java.lang.Integer  //If you want a more concise output, you can use instead: System.out.println(number.getClass().getSimpleName());  //getSimpleName() give you only the name of the class: Integer  //Printing the type of primitive variables is a bit more complex: see this  //https://stackoverflow.com/questions/180097/dynamically-find-the-class-that-represents-a-primitive-java-type //for details.\n((Object) myVar).getClass().getName() //OR ((Object) myInt).getClass().getSimpleName()\n",
    "reg_date": "2021-10-12T12:05:23.000Z"
  },
  {
    "id": 2879,
    "keyword": null,
    "link": null,
    "title": " java print variable type",
    "description": "System.out.println(((Object)x).getClass().getName());\n((Object) myVar).getClass().getName() //OR ((Object) myInt).getClass().getSimpleName()\n",
    "reg_date": "2021-10-12T12:05:23.000Z"
  },
  {
    "id": 2880,
    "keyword": null,
    "link": null,
    "title": " java printf double 2 decimal places",
    "description": "System.out.printf(\"%.2f\", value);\nprintf(\"%. 2f\", value);\ndouble input = 3.14159265359; System.out.format(\"double : %.2f\", input); // 3.14 System.out.println(\"double : \" + String.format(\"%.2f\", input)); // 3.14\n",
    "reg_date": "2021-10-12T12:05:23.000Z"
  },
  {
    "id": 2881,
    "keyword": null,
    "link": null,
    "title": " java printf format string and int",
    "description": "import java.util.Scanner;  public class Solution {      public static void main(String[] args) {             Scanner sc=new Scanner(System.in);             System.out.println(\"================================\");             for(int i=0;i<3;i++){                 String s1=sc.next();                 int x=sc.nextInt();                 //Complete this line                                 System.out.printf(\"%-15s\u0003d%n\",s1,x);             }             System.out.println(\"================================\");      } } \n",
    "reg_date": "2021-10-12T12:05:23.000Z"
  },
  {
    "id": 2882,
    "keyword": null,
    "link": null,
    "title": " java printf tab",
    "description": "String prefix1 = \"short text:\"; String prefix2 = \"looooooooooooooong text:\"; String msg = \"indented\"; /* * The second string begins after 40 characters. The dash means that the * first string is left-justified. */ String format = \"%-40s%s%n\"; System.out.printf(format, prefix1, msg); System.out.printf(format, prefix2, msg);  result: short text:                             indented looooooooooooooong text:                indented \n",
    "reg_date": "2021-10-12T12:05:24.000Z"
  },
  {
    "id": 2883,
    "keyword": null,
    "link": null,
    "title": " java println",
    "description": "//print and create new line after System.out.println(\"text\"); System.out.println(String); //You can use any variable type, not just strings, although //they are the most common  //Print without creating a new line System.out.print(\"text\"); System.out.print(String);\nSystem.out.println(\"Hello, World!\"); /*type System the class, the .out the field, and the println short  for print line */ \npublic static void main(String[] args){ \tSystem.out.println(\"Hello World\");  }\nSystem.out.println(\"whatever you want\"); //you can type sysout and then ctrl + space \nSystem.out.println(\"LUL\");\nSystem.out.print(<string>); //prints in the same line as the previous print System.out.println(<string>); //prints in a new line  // Example System.out.print(\"This \"); System.out.print(\"will \"); System.out.print(\"be \"); System.out.print(\"all \"); System.out.print(\"in \"); System.out.print(\"one \"); System.out.print(\"line.\");  System.out.println(\"Hello World!\"); System.out.println(\"second line\");\n",
    "reg_date": "2021-10-12T12:05:24.000Z"
  },
  {
    "id": 2884,
    "keyword": null,
    "link": null,
    "title": " java priority queue",
    "description": "PriorityQueue<E> pq = new PriorityQueue<E>();\nclass TestMultiPriority1 extends Thread{    public void run(){      System.out.println(\"running thread name is:\"+Thread.currentThread().getName());      System.out.println(\"running thread priority is:\"+Thread.currentThread().getPriority());        }    public static void main(String args[]){     TestMultiPriority1 m1=new TestMultiPriority1();     TestMultiPriority1 m2=new TestMultiPriority1();     m1.setPriority(Thread.MIN_PRIORITY);     m2.setPriority(Thread.MAX_PRIORITY);     m1.start();     m2.start();        }   }     \n//Sol1 PriorityQueue<Integer> queue = new PriorityQueue<>(10, Collections.reverseOrder());   //Sol2 // PriorityQueue<Integer> pq = new PriorityQueue<>((x, y) -> y - x); PriorityQueue<Integer> pq =new PriorityQueue<>((x, y) -> Integer.compare(y, x));   //Sol3 PriorityQueue<Integer> pq = new PriorityQueue<Integer>(defaultSize, new Comparator<Integer>() {     public int compare(Integer lhs, Integer rhs) {         if (lhs < rhs) return +1;         if (lhs.equals(rhs)) return 0;         return -1;     } });\n",
    "reg_date": "2021-10-12T12:05:24.000Z"
  },
  {
    "id": 2885,
    "keyword": null,
    "link": null,
    "title": " java processbuilder example",
    "description": "public static void main(String[] args) {         ProcessBuilder processBuilder = new ProcessBuilder();          // Run this on Windows, cmd, /c = terminate after this run         processBuilder.command(\"cmd.exe\", \"/c\", \"ping -n 3 google.com\");          try {             Process process = processBuilder.start(); \t\t\t//This will block other tasks             BufferedReader reader =                     new BufferedReader(new InputStreamReader(process.getInputStream()));             String line;             while ((line = reader.readLine()) != null) {                 System.out.println(line);             }             int exitCode = process.waitFor();             System.out.println(\"\\nExited with error code : \" + exitCode);          } catch (Exception e) {             e.printStackTrace();         }  } \n",
    "reg_date": "2021-10-12T12:05:24.000Z"
  },
  {
    "id": 2886,
    "keyword": null,
    "link": null,
    "title": " java product 1 to n",
    "description": "public class Main {   public static void main(String[] args) {     var scanner = new java.util.Scanner(System.in);     System.out.print(\"What is n? \");     int n = scanner.nextInt();     int product = 1;     for (int i = 2; i <= n; ++i) {       product *= i;     }     System.out.println(\"The product of 1..n is \" + product);   } }\n",
    "reg_date": "2021-10-12T12:05:24.000Z"
  },
  {
    "id": 2887,
    "keyword": null,
    "link": null,
    "title": " java program for try catch finally",
    "description": "class JavaException {  public static void main(String args[]) {   int d = 0;   int n = 20;   try {    int fraction = n / d;    System.out.println(\"This line will not be Executed\");   } catch (ArithmeticException e) {    System.out.println(\"In the catch Block due to Exception = \" + e);   }   System.out.println(\"End Of Main\");  } }\n",
    "reg_date": "2021-10-12T12:05:24.000Z"
  },
  {
    "id": 2888,
    "keyword": null,
    "link": null,
    "title": " java program to add two numbers using method",
    "description": "// addition program in java import java.util.Scanner; public class AddTwoNumbers {    public static void main(String[] args)    {       int num1, num2, sum;       Scanner sc = new Scanner(System.in);       System.out.println(\"First number : \");       num1 = sc.nextInt();       System.out.println(\"Second number : \");       num2 = sc.nextInt();       sum = addTwo(num1, num2);       System.out.println(\"Sum : \" + sum);       sc.close();    }    public static int addTwo(int a, int b)    {       int sum = a + b;       return sum;    } }\n",
    "reg_date": "2021-10-12T12:05:24.000Z"
  },
  {
    "id": 2889,
    "keyword": null,
    "link": null,
    "title": " java program to calculate Volume of Sphere",
    "description": "package com.tcc.java.programs;   import java.util.Scanner;   /**  * Java Program to find volume and surface area of sphere  */ public class VolumeOfSphere {       public static void main(String[] args) {         double radius, volume, surfaceArea;         Scanner scanner;         scanner = new Scanner(System.in);         // Take input from user         System.out.println(\"Enter Radius of Sphere\");         radius = scanner.nextDouble();           /*          * Surface area of Sphere = 4 X PI X Radius X Radius          */         surfaceArea = 4 * Math.PI * radius * radius;         /*          * Volume of Sphere = 4/3 X PI X Radius X Radius X Radius          */         volume = (4.0 / 3) * Math.PI * radius * radius * radius;           System.out.format(\"Surface Area of Sphere = %.3f\\n\", surfaceArea);         System.out.format(\"Volume of Sphere = %.3f\\n\", volume);     } } \n",
    "reg_date": "2021-10-12T12:05:24.000Z"
  },
  {
    "id": 2890,
    "keyword": null,
    "link": null,
    "title": " java program to calculate distance between two points",
    "description": "import java.util.Scanner;  public class Main {      public static void main(String[] args) {          // distance between two points          Scanner scanner = new Scanner(System.in);          System.out.print(\"Enter coordinates of first point (x1,y1): \");         int x1 = scanner.nextInt(), y1 = scanner.nextInt();          System.out.print(\"Enter coordinates of second point (x2,y2): \");         int x2 = scanner.nextInt(), y2 = scanner.nextInt();          double distance = Math.sqrt( Math.pow(x2 - x1 ,2) + Math.pow(y2 - y1, 2) );          System.out.println(\"Distance between the points is \" + distance);     } }\n",
    "reg_date": "2021-10-12T12:05:24.000Z"
  },
  {
    "id": 2891,
    "keyword": null,
    "link": null,
    "title": " java program to display characters from a to z using loop",
    "description": "public class Characters {      public static void main(String[] args) {          char c;          for(c = 'A'; c <= 'Z'; ++c)             System.out.print(c + \" \");     } }\n",
    "reg_date": "2021-10-12T12:05:24.000Z"
  },
  {
    "id": 2892,
    "keyword": null,
    "link": null,
    "title": " java program to find factorial of a number",
    "description": "import java.util.Scanner; public class FindingFactorial {     public static void main(String[] args) {         int num;         System.out.println(\"Enter the number: \");         Scanner in = new Scanner(System.in);         num = in.nextInt();         in.close();         long fact = 1;         int i = 1;         while(i<=num)         {             fact = fact * i;             i++;         }         System.out.println(\"Factorial of \"+num+\" is: \"+fact);     } }\nimport java.math.BigInteger;  public class Factorial {      public static void main(String[] args) {          int num = 30;         BigInteger factorial = BigInteger.ONE;         for(int i = 1; i <= num; ++i)         {             // factorial = factorial * i;             factorial = factorial.multiply(BigInteger.valueOf(i));         }         System.out.printf(\"Factorial of %d = %d\", num, factorial);     } }\npublic class Main { public static void main(String[] args) { int num = 15; long factorial = 1; for(int i = 1; i <= num; ++i) { factorial = factorial * i; } System.out.printf(\"Factorial of %d is\", factorial); } }\n int num1 = 6;   int num2 = 1;     for(int a = 1; a<=num1; a++) {         num2 = num2 * a;     }         System.out.println(num2);\n// Factorial program using recursion public class FactorialRecursion {    public static void main(String[] args)    {       int factorial = 1;       int number = 6;       factorial = factorialFunction(number);       System.out.println(\"Factorial of \" + number + \" is : \" + factorial);    }    static int factorialFunction(int num)    {       if(num == 0)       {          return 1;       }       else       {          return(num * factorialFunction(num - 1));       }    } }\npublic class FactorialDemo {    public static void main(String[] args)    {       int number = 6, factorial = 1;       for(int a = 1; a <= number; a++)       {          factorial = factorial * a;       }       System.out.println(\"Factorial of \" + number + \" is : \" + factorial);    } }\n",
    "reg_date": "2021-10-12T12:05:25.000Z"
  },
  {
    "id": 2893,
    "keyword": null,
    "link": null,
    "title": " java program to find perimeter of rectangle",
    "description": "Scanner sc = new Scanner(System.in); System.out.println(\"Enter Width of the rectangle: \"); double width = sc.nextDouble(); System.out.println(\"Enter Height of the rectangle: \"); double height = sc.nextDouble(); sc.close(); // Logic for finding the perimeter of the rectangle double perimeter = 2 * (width + height); System.out.println(\"Perimeter of Rectangle: \" + perimeter);\n",
    "reg_date": "2021-10-12T12:05:25.000Z"
  },
  {
    "id": 2894,
    "keyword": null,
    "link": null,
    "title": " java program to find transpose of a matrix",
    "description": "import java.util.Scanner; public class MatrixTransposeInJava {    public static void main(String[] args)    {       int[][] arrGiven = {{2,4,6},{8,1,3},{5,7,9}};\t           // another matrix to store transpose of matrix         int[][] arrTranspose = new int[3][3];\t           // transpose matrix code         for(int a = 0; a < 3; a++)       {              for(int b = 0; b < 3; b++)          {                 arrTranspose[a][b] = arrGiven[b][a];            }        }\t         System.out.println(\"Before matrix transpose: \");         for(int a = 0; a < 3; a++)       {              for(int b = 0; b < 3; b++)          {                 System.out.print(arrGiven[a][b] + \" \");              }           System.out.println();       }           System.out.println(\"After matrix transpose: \");         for(int a = 0; a < 3; a++)       {              for(int b = 0; b < 3; b++)          {                 System.out.print(arrTranspose[a][b] + \" \");              }           System.out.println();       }    } }\n  //Transpose a Matrix    for (int row = 0; row < matrix.length; row++) {         for (int col = row; row < matrix[row].length; col++)     {     \t// Swap       \tint data = matrix[row][col];     \tmatrix[row][col] = matrix[col][row];    \t\tmatrix[col][row] = data;    }      }\n// transpose of a matrix in java without using second matrix import java.util.Scanner; public class WithoutSecondMatrix {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       int a, b, row, column, temp;       System.out.println(\"Please enter number of rows: \");       row = sc.nextInt();       System.out.println(\"Please enter the number of columns: \");       column = sc.nextInt();       int[][] matrix = new int[row][column];       System.out.println(\"Please enter elements of matrix: \");       for(a = 0; a < row; a++)       {          for(b = 0; b < column; b++)          {             matrix[a][b] = sc.nextInt();          }       }       System.out.println(\"Elements of the matrix: \");       for(a = 0; a < row; a++)       {          for(b = 0; b < column; b++)          {             System.out.print(matrix[a][b] + \"\\t\");          }          System.out.println(\"\");       }       // transpose of a matrix       for(a = 0; a < row; a++)       {          for(b = 0; b < a; b++)          {             temp = matrix[a][b];             matrix[a][b] = matrix[b][a];             matrix[b][a] = temp;          }       }       System.out.println(\"transpose of a matrix without using second matrix: \");       for(a = 0; a < row; a++)       {          for(b = 0; b < column; b++)          {             System.out.print(matrix[a][b] + \"\\t\");          }          System.out.println(\"\");       }       sc.close();    } }\nfor (int row = 0; row < matrix.length; row++) {         for (int col = row; col < matrix[row].length; col++)     {     \t// Swap       \tint data = matrix[row][col];     \tmatrix[row][col] = matrix[col][row];    \t\tmatrix[col][row] = data;    }      }\n",
    "reg_date": "2021-10-12T12:05:25.000Z"
  },
  {
    "id": 2895,
    "keyword": null,
    "link": null,
    "title": " java program to get the circle radius",
    "description": "import java.util.Scanner; public class AreaOfCircle {    public static void main(String args[]){       int radius;       double area;       Scanner sc = new Scanner(System.in);       System.out.println(\"Enter the radius of the circle ::\");       radius = sc.nextInt();       area = (radius*radius)*Math.PI;       System.out.println(\"Area of the circle is ::\"+area);    } }\n",
    "reg_date": "2021-10-12T12:05:25.000Z"
  },
  {
    "id": 2896,
    "keyword": null,
    "link": null,
    "title": " java program to print 1 to 100 using for loop",
    "description": "class JavaExample {    public static void main(String args[]) { \tint n = 100; \tSystem.out.print(\"Numbers from 1 to \"+n+\" are: \"); \tfor (int i = 1; i <= n; i++) { \t\tSystem.out.print(i + \" \"); \t}    } }\n",
    "reg_date": "2021-10-12T12:05:25.000Z"
  },
  {
    "id": 2897,
    "keyword": null,
    "link": null,
    "title": " java program to remove duplicate words in a string",
    "description": "public static void main(String[] args) {          String result = removeDup(\"AAABBBCCC\");         System.out.println(result); // ABC  public static  String  removeDup( String  str) {         String result = \"\";         for (int i = 0; i < str.length(); i++)             if (!result.contains(\"\" + str.charAt(i)))                 result += \"\" + str.charAt(i);         return result;     } }\nString fullString = \"lol lol\"; String[] words = fullString.split(\"\\\\W+\"); StringBuilder stringBuilder = new StringBuilder(); Set<String> wordsHashSet = new HashSet<>();  for (String word : words) {     if (wordsHashSet.contains(word.toLowerCase())) continue;     wordsHashSet.add(word.toLowerCase());     stringBuilder.append(word).append(\" \"); } String nonDuplicateString = stringBuilder.toString().trim();\nString str1 = \"ABCDABCD\"; String result1 = \"\";  for (int a = 0; a <= str1.length()-1; a++) { if (result1.contains(\"\" + str1.charAt(a))) {  // charAt methodda you provide index number ve sana character olarak donuyor, // If the string result does not contains str.CharAt(i),  // then we concate it to the result. if it does we will not    continue; } result1 += str1.charAt(a); } System.out.println(result1);\n",
    "reg_date": "2021-10-12T12:05:25.000Z"
  },
  {
    "id": 2898,
    "keyword": null,
    "link": null,
    "title": " java programming",
    "description": "Refer to this website: http://allaboutjava.com/\nJava is a general-purpose programming language that is  class-based, object-oriented, and designed to have as  few implementation dependencies as possible.  Hello World in Java: public class FileName {   public static void main(String args[]) {     System.out.println(\"Hello World!\");   } }\nJava is dynamic. It&rsquo;s an object oriented programming language. architecture-neutral. Because applications written in java are convenient  across many platforms.\nclass Anupam {   public static void main(String...args)   {     System.out.println(\"HI this is Anupam Guin from Kolkata,INDIA\");   } }\n",
    "reg_date": "2021-10-12T12:05:25.000Z"
  },
  {
    "id": 2899,
    "keyword": null,
    "link": null,
    "title": " java programming language",
    "description": "Here is a basic tutorial: https://www.w3schools.com/java\nJava is dynamic. It&rsquo;s an object oriented programming language. architecture-neutral. Because applications written in java are convenient  across many platforms.\n",
    "reg_date": "2021-10-12T12:05:25.000Z"
  },
  {
    "id": 2900,
    "keyword": null,
    "link": null,
    "title": " java programming tutorial",
    "description": "Refer to this website: http://allaboutjava.com/\nRefer to these sites  1) https://www.tutorialspoint.com/java/index.htm  2) https://www.w3schools.com/java/\npublic class MyFirstJavaProgram {     /* This is my first java program.     * This will print 'Hello World' as the output     */     public static void main(String []args) {       System.out.println(\"Hello World\"); // prints Hello World    } }\n= Output: 10 += Output: 20 -= Output: 10 *= Output: 200 /= Output: 10 %= Output: 0\nYou 'r right  \tReply to: NO! dont get stuck in tutorial land. it is hard to get out\n",
    "reg_date": "2021-10-12T12:05:25.000Z"
  },
  {
    "id": 2901,
    "keyword": null,
    "link": null,
    "title": " java progress bar show percentage",
    "description": "progressBar.setStringPainted(true);\n",
    "reg_date": "2021-10-12T12:05:26.000Z"
  },
  {
    "id": 2902,
    "keyword": null,
    "link": null,
    "title": " java project structure",
    "description": "You can use like this type - src         - main                 - java                 - groovy                 - resources         - test                 - java                 - groovy - lib - build         - test                  - reports                 - classes - doc\n",
    "reg_date": "2021-10-12T12:05:26.000Z"
  },
  {
    "id": 2903,
    "keyword": null,
    "link": null,
    "title": " java prompt name",
    "description": "public class Main {   public static void main(String[] args) {     var scanner = new java.util.Scanner(System.in);     System.out.print(\"What is your name? \");     var name = scanner.nextLine();     System.out.println(\"Hello \" + name + \"!\"):   } }\n",
    "reg_date": "2021-10-12T12:05:26.000Z"
  },
  {
    "id": 2904,
    "keyword": null,
    "link": null,
    "title": " java protected",
    "description": "/* similar to private keyword, but also lets both:   - subclasses   - classes in same package   access the variable, method or constructor */  class Superclass {   protected int myNumber = 5; }  class Subclass extends SuperClass {   // has access to myNumber }  class InAnotherPackage {   // doesn't have access to myNumber }\n//The protected keyword is an access modifier used for attributes,  //methods and constructors,  //making them accessible in the same package and subclasses.  class Person {   protected String fname = \"John\";   protected String lname = \"Doe\";   protected String email = \"john@doe.com\";   protected int age = 24; }  class Student extends Person {   private int graduationYear = 2018;   public static void main(String[] args) {     Student myObj = new Student();     System.out.println(\"Name: \" + myObj.fname + \" \" + myObj.lname);     System.out.println(\"Email: \" + myObj.email);     System.out.println(\"Age: \" + myObj.age);     System.out.println(\"Graduation Year: \" + myObj.graduationYear);   } }\n",
    "reg_date": "2021-10-12T12:05:26.000Z"
  },
  {
    "id": 2905,
    "keyword": null,
    "link": null,
    "title": " java protected private public",
    "description": "public      >> class, package, subclass (same pkg), subclass (diff pkg), world protected   >> class, package, subclass (same pkg), subclass (diff pkg) no modifier >> class, package, subclass (same pkg) private     >> class\n",
    "reg_date": "2021-10-12T12:05:26.000Z"
  },
  {
    "id": 2906,
    "keyword": null,
    "link": null,
    "title": " java public static void main",
    "description": "public class Jacob {      public static void main(String[] args) { \t\t//code here     } } \npublic class Test {  public static void main(String[] args){  \tSystem.out.println(\"Hello World\"); \t } } \nClass main {   Public static void main(String[] args) {     //Write your code here   } }\npublic class Test {  static void main(String[] args){  \tSystem.out.println(\"Hello World\"); \t } } \npublic static void main(String[] args){ }\nPUBLIC- is access modifier. visible to the world. Public means that the method is visible and can be called from other objects of other types. STATIC- is specifier, any feature that has static , belongs to the class.This means that you can call a static method without creating an object of the class.  VOID- is a return type, the method does not return any value. void means that  the method has no return value.\n",
    "reg_date": "2021-10-12T12:05:26.000Z"
  },
  {
    "id": 2907,
    "keyword": null,
    "link": null,
    "title": " java put a char array into a string",
    "description": "char[] arr = { 'p',\" \",'q', 'r', 's' };       String str = String.valueOf(arr);       System.out.println(str);//\"p qrs\"\n",
    "reg_date": "2021-10-12T12:05:26.000Z"
  },
  {
    "id": 2908,
    "keyword": null,
    "link": null,
    "title": " java question mark operator",
    "description": "//ternary operator // takes in a conditional statement // a is returned when the condition is true and vice versa return (a == b) ? a : b;  int n = (a < b) ? a + 10: b;\nboolean statement ? true result : false result;  /* For example, if we take this if statement: */ if (a > b) {     result = x; } else {     result = y; } // can be also writen: result = a > b ? x : y;\n",
    "reg_date": "2021-10-12T12:05:26.000Z"
  },
  {
    "id": 2909,
    "keyword": null,
    "link": null,
    "title": " java queue",
    "description": "import java.util.*;  Queue<Integer> queue = new LinkedList<Integer>(); // use non-primative types when constructing  // to add a value to the back of queue: queue.add(7);  // to remove and return front value: int next = queue.remove();  // to just return front value without removing: int peek = queue.peek();\nQueue<Integer> queue=new ArrayList<Integer>();\nwhile (!QUEUE.isEmpty()) {   QUEUE.remove();  }\nThe Queue interface is available in java.util package and extends the Collection interface. The queue collection is used to hold the elements about to be processed and provides various operations like the insertion, removal etc. It is an ordered list of objects with its use limited to insert elements at the end of the list and deleting elements from the start of list i.e. it follows the FIFO or the First-In-First-Out principle.  LinkedList, ArrayBlockingQueue and PriorityQueue are the most frequently used implementations.   \n",
    "reg_date": "2021-10-12T12:05:26.000Z"
  },
  {
    "id": 2910,
    "keyword": null,
    "link": null,
    "title": " java quit application",
    "description": "System.exit(0);\nSystem.exit(n);\n",
    "reg_date": "2021-10-12T12:05:26.000Z"
  },
  {
    "id": 2911,
    "keyword": null,
    "link": null,
    "title": " java quotes in string",
    "description": "String value = \"\\\"ROM\\\"\"; \n",
    "reg_date": "2021-10-12T12:05:26.000Z"
  },
  {
    "id": 2912,
    "keyword": null,
    "link": null,
    "title": " java radians to degrees",
    "description": "package com.tutorialspoint;  import java.lang.*;  public class MathDemo {     public static void main(String[] args) {        // get two double numbers numbers       double x = 45;       double y = -180;        // convert them in degrees       x = Math.toDegrees(x);       y = Math.toDegrees(y);        // print the hyperbolic tangent of these doubles       System.out.println(\"Math.tanh(\" + x + \")=\" + Math.tanh(x));       System.out.println(\"Math.tanh(\" + y + \")=\" + Math.tanh(y));    } }\n",
    "reg_date": "2021-10-12T12:05:27.000Z"
  },
  {
    "id": 2913,
    "keyword": null,
    "link": null,
    "title": " java radnom",
    "description": "import java.util.Random; int rndNumber;  Random rnd = new Random(); //rnd is the name of the randomizer rndNumber = 1 + rnd.nextInt(9); //int between 1-9\n",
    "reg_date": "2021-10-12T12:05:27.000Z"
  },
  {
    "id": 2914,
    "keyword": null,
    "link": null,
    "title": " java random.nextint",
    "description": "import java.util.Random; public class Example {    public static void main(String[] args) {       Random rd = new Random(); // creating Random object       System.out.println(rd.nextFloat()); // displaying a random float value between 0.0 and 1.0    } }\npublic class Random {      public static void main(String[] args) {          Random random = new Random(long seed);     int bound = 5;          System.out.println(random.nextInt(bound));        }    } /* Returns a pseudorandom, uniformly distributed int value between 0 (inclusive) and the specified value 5 (exclusive), drawn from this random number generator's sequence.\n",
    "reg_date": "2021-10-12T12:05:27.000Z"
  },
  {
    "id": 2915,
    "keyword": null,
    "link": null,
    "title": " java random",
    "description": "import java.util.Random;  Random rand = new Random();  // Obtain a number between [0 - 49]. int n = rand.nextInt(50);  // Add 1 to the result to get a number from the required range // (i.e., [1 - 50]). n += 1;\nimport java.util.Random;  class scratch{     public static void main(String[] args) {         Random rand = new Random();         System.out.println( rand.nextInt(5) );         //prints a random Int between 0 - 4 (including 0 & 4);     } }\nimport java.util.Random(); Random <name> = new Random(); <variable> = <name>.nextInt(<excuslive top limit>);\nimport java.util.Random; public class Example {    public static void main(String[] args) {       Random rd = new Random(); // creating Random object       System.out.println(rd.nextFloat()); // displaying a random float value between 0.0 and 1.0    } }\nString id = UUID.randomUUID().toString();\nRandom rand = new Random(System.currentTimeMillis());\n",
    "reg_date": "2021-10-12T12:05:27.000Z"
  },
  {
    "id": 2916,
    "keyword": null,
    "link": null,
    "title": " java random 6 digit number",
    "description": "public static String getRandomNumberString() {     // It will generate 6 digit random Number.     // from 0 to 999999     Random rnd = new Random();     int number = rnd.nextInt(999999);      // this will convert any number sequence into 6 character.     return String.format(\"\u0006d\", number); }\n",
    "reg_date": "2021-10-12T12:05:27.000Z"
  },
  {
    "id": 2917,
    "keyword": null,
    "link": null,
    "title": " java random Double between",
    "description": "double random = ThreadLocalRandom.current().nextDouble(min, max); \n",
    "reg_date": "2021-10-12T12:05:27.000Z"
  },
  {
    "id": 2918,
    "keyword": null,
    "link": null,
    "title": " java random between two strings",
    "description": "import java.util.Random; public class RandomSelect {      public static void main (String [] args) {           String [] arr = {\"A\", \"B\", \"C\", \"D\"};          Random random = new Random();           // randomly selects an index from the arr          int select = random.nextInt(arr.length);            // prints out the value at the randomly selected index          System.out.println(\"Random String selected: \" + arr[select]);      } }\nString[] s = {\"your\", \"array\", \"of\", \"strings\"};  Random ran = new Random(); String s_ran = s[ran.nextInt(s.length)];\n",
    "reg_date": "2021-10-12T12:05:27.000Z"
  },
  {
    "id": 2919,
    "keyword": null,
    "link": null,
    "title": " java random boolean",
    "description": "import java.util.Random; public class Example {    public static void main(String[] args) {       Random rd = new Random(); // creating Random object       System.out.println(rd.nextBoolean()); // displaying a random boolean    } }\nreturn Math.random() < 0.5;\n",
    "reg_date": "2021-10-12T12:05:27.000Z"
  },
  {
    "id": 2920,
    "keyword": null,
    "link": null,
    "title": " java random double between 0 and 1",
    "description": "Random r = new Random(); double randomValue = r.nextDouble(); \n",
    "reg_date": "2021-10-12T12:05:27.000Z"
  },
  {
    "id": 2921,
    "keyword": null,
    "link": null,
    "title": " java random guid",
    "description": "String id = UUID.randomUUID().toString();\n",
    "reg_date": "2021-10-12T12:05:27.000Z"
  },
  {
    "id": 2922,
    "keyword": null,
    "link": null,
    "title": " java random number",
    "description": "import java.util.Random;  Random rand = new Random();  // Obtain a number between [0 - 49]. int n = rand.nextInt(50);  // Add 1 to the result to get a number from the required range // (i.e., [1 - 50]). n += 1;\nimport java.util.Random;  Random rand = new Random(); int maxNumber = 10;  int randomNumber = rand.nextInt(maxNumber) + 1;  System.out.println(randomNumber);\nimport java.util.Random;  class scratch{     public static void main(String[] args) {         Random rand = new Random();         System.out.println( rand.nextInt(5) );         //prints a random Int between 0 - 4 (including 0 & 4);     } }\nimport java.lang.Math;  int randomNumber;  int minimum = 1; int maximum = 10 - minimum;  randomNumber = (int)((Math.random()*maximum) + minimum);  System.out.println(\"Random Number (Between 1-10): \" + randomNumber);\n// java.util.random example import java.util.Random; public class JavaRandomClass {    public static void main(String[] args)    {       Random random = new Random();       // random integers in range 0 to 999        int randInt1 = random.nextInt(1000);        int randInt2 = random.nextInt(1000);       // printing random integers       System.out.println(\"Random Integers: \" + randInt1);        System.out.println(\"Random Integers: \" + randInt2);       // here we are generating Random doubles       double randDou1 = random.nextDouble();        double randDou2 = random.nextDouble();       // printing random doubles       System.out.println(\"Random Doubles: \" + randDou1);        System.out.println(\"Random Doubles: \" + randDou2);    } }\nimport java.util.Random(); Random <name> = new Random(); <variable> = <name>.nextInt(<excuslive top limit>);\n",
    "reg_date": "2021-10-12T12:05:28.000Z"
  },
  {
    "id": 2923,
    "keyword": null,
    "link": null,
    "title": " java random number between 1 and 10",
    "description": "import java.util.Random;  Random rand = new Random();  // Obtain a number between [0 - 49]. int n = rand.nextInt(50);  // Add 1 to the result to get a number from the required range // (i.e., [1 - 50]). n += 1;\nimport java.util.Random;  Random rand = new Random(); int random_integer = rand.nextInt(upperbound-lowerbound) + lowerbound;\n/* First Method */ int random = (int) (Math.random() * 100 + 1); /* Random number between 1 and 100*/ int random = (int) (Math.random() * 65 + 1); /* Random number between 1 and 65*/ /* Second Method */ import java.util.Random; Random randnumber = new Random(); int number = randnumber.nextInt(100); /* between 1 and 100*/ system.out.println(number);\n((int) (Math.random()*(maximum - minimum))) + minimum;\npublic int getRandomNumber(int min, int max) {     return (int) ((Math.random() * (max - min)) + min); }\n",
    "reg_date": "2021-10-12T12:05:28.000Z"
  },
  {
    "id": 2924,
    "keyword": null,
    "link": null,
    "title": " java random number generator in range",
    "description": "int rand = ThreadLocalRandom.current().nextInt(x,y);\n",
    "reg_date": "2021-10-12T12:05:28.000Z"
  },
  {
    "id": 2925,
    "keyword": null,
    "link": null,
    "title": " java random numbers in specific range",
    "description": "import java.util.Random;  Random rand = new Random(); int random_integer = rand.nextInt(upperbound-lowerbound) + lowerbound;\nint rand = ThreadLocalRandom.current().nextInt(x,y);\n",
    "reg_date": "2021-10-12T12:05:28.000Z"
  },
  {
    "id": 2926,
    "keyword": null,
    "link": null,
    "title": " java random primary key",
    "description": "String id = UUID.randomUUID().toString();\n",
    "reg_date": "2021-10-12T12:05:28.000Z"
  },
  {
    "id": 2927,
    "keyword": null,
    "link": null,
    "title": " java random seed",
    "description": "import java.util.Random; public class Example {    public static void main(String[] args) {       Random rd = new Random(); // creating Random object       System.out.println(rd.nextFloat()); // displaying a random float value between 0.0 and 1.0    } }\nRandom rand = new Random(System.currentTimeMillis());\n",
    "reg_date": "2021-10-12T12:05:28.000Z"
  },
  {
    "id": 2928,
    "keyword": null,
    "link": null,
    "title": " java random string",
    "description": "import java.util.Random;  public class Generator { \tpublic static String generateRandomPassword(int len) { \t\tString chars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijk\"           +\"lmnopqrstuvwxyz!@#$%&\"; \t\tRandom rnd = new Random(); \t\tStringBuilder sb = new StringBuilder(len); \t\tfor (int i = 0; i < len; i++) \t\t\tsb.append(chars.charAt(rnd.nextInt(chars.length()))); \t\treturn sb.toString(); \t} }\npublic static String getRandomString(int size) {   \t// The string that we will return \tString rand = \"\";   \t// The chars that are used to generate the random string \tString chars = \"1234567890-=!@#$%^&*()_+qwertyuiop[]\\\\QWERTYUIOP{}|asdfghjkl;'ASDFGHJKL:\\\"zxcvbnm,./ZXCVBNM<>?\";   \t// Loop based on the requested size   \tfor (int i = 0; i < size; i++) {       \t// Add a random char from the chars string to the rand string \t\trand += chars.toCharArray()[new Random().nextInt(chars.length())]; \t}   \t// Return the random string \treturn rand; }\n@Test public void givenUsingJava8_whenGeneratingRandomAlphanumericString_thenCorrect() {     int leftLimit = 48; // numeral '0'     int rightLimit = 122; // letter 'z'     int targetStringLength = 10;     Random random = new Random();       String generatedString = random.ints(leftLimit, rightLimit + 1)       .filter(i -> (i <= 57 || i >= 65) && (i <= 90 || i >= 97))       .limit(targetStringLength)       .collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append)       .toString();       System.out.println(generatedString); } \n@Test public void givenUsingJava8_whenGeneratingRandomAlphabeticString_thenCorrect() {     int leftLimit = 97; // letter 'a'     int rightLimit = 122; // letter 'z'     int targetStringLength = 10;     Random random = new Random();      String generatedString = random.ints(leftLimit, rightLimit + 1)       .limit(targetStringLength)       .collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append)       .toString();      System.out.println(generatedString); }\n",
    "reg_date": "2021-10-12T12:05:28.000Z"
  },
  {
    "id": 2929,
    "keyword": null,
    "link": null,
    "title": " java random unique key",
    "description": "String id = UUID.randomUUID().toString();\n",
    "reg_date": "2021-10-12T12:05:28.000Z"
  },
  {
    "id": 2930,
    "keyword": null,
    "link": null,
    "title": " java random unique number",
    "description": "String id = UUID.randomUUID().toString();\n",
    "reg_date": "2021-10-12T12:05:28.000Z"
  },
  {
    "id": 2931,
    "keyword": null,
    "link": null,
    "title": " java random usage",
    "description": "import java.util.Random;  Random rand = new Random(); int maxNumber = 10;  int randomNumber = rand.nextInt(maxNumber) + 1;  System.out.println(randomNumber);\nimport java.util.Random;  Random rndm = new Random(); int mnmbr = 10;  int rndNumber = rndm.nextInt(mnumber) + 1;  System.out.println(rndNumber);\nint rand = ThreadLocalRandom.current().nextInt(x,y);\n",
    "reg_date": "2021-10-12T12:05:29.000Z"
  },
  {
    "id": 2932,
    "keyword": null,
    "link": null,
    "title": " java random uuid",
    "description": "import java.util.UUID;  public class RandomStringUUID {     public static void main(String[] args) {         // Creating a random UUID (Universally unique identifier).         UUID uuid = UUID.randomUUID();         String randomUUIDString = uuid.toString();          System.out.println(\"Random UUID String = \" + randomUUIDString);         System.out.println(\"UUID version       = \" + uuid.version());         System.out.println(\"UUID variant       = \" + uuid.variant());     } } \nString id = UUID.randomUUID().toString();\n",
    "reg_date": "2021-10-12T12:05:29.000Z"
  },
  {
    "id": 2933,
    "keyword": null,
    "link": null,
    "title": " java random w3",
    "description": "for (int i = 0; i < 5; i++) {   System.out.println(i); } \n",
    "reg_date": "2021-10-12T12:05:29.000Z"
  },
  {
    "id": 2934,
    "keyword": null,
    "link": null,
    "title": " java random word from list",
    "description": "private static String[] names = { \"Terminator\", \"Slicer\",\"Ninja\", \"cow\", \"Robot\", \"littlegirl\" }; name = names[(int) (Math.random() * names.length)]; System.out.println(name); \n",
    "reg_date": "2021-10-12T12:05:29.000Z"
  },
  {
    "id": 2935,
    "keyword": null,
    "link": null,
    "title": " java reached end of file while parsing",
    "description": "The Java error message Reached End of File While Parsing results if a closing curly bracket for a block of code (e.g, method, class) is missing. The fix is easy &mdash; just proofread your code.\nprivate void doClientStuff(final FMLClientSetupEvent event) { }\nerror: reached end of file while parsing     private void doClientStuff(final FMLClientSetupEvent event) { }\n",
    "reg_date": "2021-10-12T12:05:29.000Z"
  },
  {
    "id": 2936,
    "keyword": null,
    "link": null,
    "title": " java read console",
    "description": "String str = System.console().readLine();\npublic static void main(String[] args) throws IOException {                  BufferedReader reader = new BufferedReader(             new InputStreamReader(System.in));           String name = reader.readLine();           System.out.println(name); }\nvariable = input()\n",
    "reg_date": "2021-10-12T12:05:29.000Z"
  },
  {
    "id": 2937,
    "keyword": null,
    "link": null,
    "title": " java read csv file into arraylist",
    "description": "import java.io.BufferedReader; import java.io.IOException; import java.nio.charset.StandardCharsets; import java.nio.file.Files; import java.nio.file.Path; import java.nio.file.Paths; import java.util.ArrayList; import java.util.List;  /**  * Simple Java program to read CSV file in Java. In this program we will read  * list of books stored in CSV file as comma separated values.  *   * @author WINDOWS 8  *  */ public class CSVReaderInJava {      public static void main(String... args) {         List<Book> books = readBooksFromCSV(\"books.txt\");          // let's print all the person read from CSV file         for (Book b : books) {             System.out.println(b);         }     }      private static List<Book> readBooksFromCSV(String fileName) {         List<Book> books = new ArrayList<>();         Path pathToFile = Paths.get(fileName);          // create an instance of BufferedReader         // using try with resource, Java 7 feature to close resources         try (BufferedReader br = Files.newBufferedReader(pathToFile,                 StandardCharsets.US_ASCII)) {              // read the first line from the text file             String line = br.readLine();              // loop until all lines are read             while (line != null) {                  // use string.split to load a string array with the values from                 // each line of                 // the file, using a comma as the delimiter                 String[] attributes = line.split(\",\");                  Book book = createBook(attributes);                  // adding book into ArrayList                 books.add(book);                  // read next line before looping                 // if end of file reached, line would be null                 line = br.readLine();             }          } catch (IOException ioe) {             ioe.printStackTrace();         }          return books;     }      private static Book createBook(String[] metadata) {         String name = metadata[0];         int price = Integer.parseInt(metadata[1]);         String author = metadata[2];          // create and return book of this metadata         return new Book(name, price, author);     }  }  class Book {     private String name;     private int price;     private String author;      public Book(String name, int price, String author) {         this.name = name;         this.price = price;         this.author = author;     }      public String getName() {         return name;     }      public void setName(String name) {         this.name = name;     }      public int getPrice() {         return price;     }      public void setPrice(int price) {         this.price = price;     }      public String getAuthor() {         return author;     }      public void setAuthor(String author) {         this.author = author;     }      @Override     public String toString() {         return \"Book [name=\" + name + \", price=\" + price + \", author=\" + author                 + \"]\";     }  }  Output Book [name=Effective Java, price=42, author=Joshua Bloch] Book [name=Head First Java, price=39, author=Kathy Sierra] Book [name=Head First Design Pattern, price=44, author=Kathy Sierra] Book [name=Introduction to Algorithm, price=72, author=Thomas Cormen]\n",
    "reg_date": "2021-10-12T12:05:29.000Z"
  },
  {
    "id": 2938,
    "keyword": null,
    "link": null,
    "title": " java read each lines in file",
    "description": "        BufferedReader br = null;         try {             File file = new File(\"myfile.txt\"); // java.io.File             FileReader fr = new FileReader(file); // java.io.FileReader             br = new BufferedReader(fr); // java.io.BufferedReader             String line;             while ((line = br.readLine()) != null) {               // process the line             }           }           catch(IOException e) { e.printStackTrace();}           finally           {               try { if (br != null) br.close(); }               catch(IOException e) { e.printStackTrace(); }           }\n        Scanner sc = null;         try {             File file = new File(\"myfile.txt\"); // java.io.File             sc = new Scanner(file);     // java.util.Scanner             String line;             while (sc.hasNextLine()) {               line = sc.nextLine();               // process the line             }           }           catch(FileNotFoundException e)           {               e.printStackTrace();           }           finally {             if (sc != null) sc.close();           }\n",
    "reg_date": "2021-10-12T12:05:29.000Z"
  },
  {
    "id": 2939,
    "keyword": null,
    "link": null,
    "title": " java read file",
    "description": "try(BufferedReader br = new BufferedReader(new FileReader(\"file.txt\"))) {     StringBuilder sb = new StringBuilder();     String line = br.readLine();      while (line != null) {         sb.append(line);         sb.append(System.lineSeparator());         line = br.readLine();     }     String everything = sb.toString(); }\nimport java.io.*;  public class openFile {      public static void main(String[] args) {         try{             File file = new File(\"C:\\\\file.txt\");         }catch(Exception e){             e.printStackTrace();         }     }      }\ntry (Stream<String> stream = Files.lines(Paths.get(String.valueOf(new File(\"yourFile.txt\"))))) { \tstream.forEach(System.out::println); } catch (IOException e) { \te.printStackTrace(); }\n",
    "reg_date": "2021-10-12T12:05:29.000Z"
  },
  {
    "id": 2940,
    "keyword": null,
    "link": null,
    "title": " java read file bufferedreader",
    "description": "try { \tFile file = new File(\"data.txt\"); \tBufferedReader reader = new BufferedReader(new FileReader(file)); \tString line;  \twhile((line = reader.readLine()) != null) { \t \t System.out.println(line); \t} } catch(IOException e) {   \te.printStackTrace(); }\nimport java.io.BufferedReader; // BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); System.out.println(reader.readLine());\nclass Main { \tpublic static void main (String[] args) throws IOException{                        \t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in)); \t\tString[] str = br.readLine().split(\" \");      // 6 2 \t\tString[] input = br.readLine().split(\" \");   // 1 2 3 4 5 6   \t\tint n = Integer.parseInt(str[0]);  // 6 \t\tint k = Integer.parseInt(str[1]);  // 2  \t\t       \tint [] arr = new int [n]; \t\t       \tfor(int i=0; i<n; i++)  \t\t{          arr[i] = Integer.parseInt(input[i]);  // 1 2 3 4 5 6         } \t   \t   \t} } \nprivate static BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); private static StringTokenizer st; static String next() throws IOException {     while (st==null||!st.hasMoreTokens()) {         st = new StringTokenizer(br.readLine().trim());     }     return st.nextToken(); } static long readLong() throws IOException {     return Long.parseLong(next()); } static int readInt() throws IOException {     return Integer.parseInt(next()); } static double readDouble() throws IOException {     return Double.parseDouble(next()); } static String readLine() throws IOException {     return br.readLine().trim(); }\n",
    "reg_date": "2021-10-12T12:05:29.000Z"
  },
  {
    "id": 2941,
    "keyword": null,
    "link": null,
    "title": " java read file text",
    "description": "try(BufferedReader br = new BufferedReader(new FileReader(\"file.txt\"))) {     StringBuilder sb = new StringBuilder();     String line = br.readLine();      while (line != null) {         sb.append(line);         sb.append(System.lineSeparator());         line = br.readLine();     }     String everything = sb.toString(); }\n",
    "reg_date": "2021-10-12T12:05:29.000Z"
  },
  {
    "id": 2942,
    "keyword": null,
    "link": null,
    "title": " java read file to string",
    "description": "public String readFile(String filePath) {     String result = \"\";     try {         result = Files.readString(Paths.get(filePath));     } catch (IOException e) {         e.printStackTrace();     }     return result; }\npackage test;  import java.io.BufferedReader; import java.io.FileInputStream; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.nio.charset.StandardCharsets; import java.nio.file.Files; import java.nio.file.Paths;   /**  * Java Program to demonstrate different ways to loop over collection in   * pre Java 8 and Java 8 world using Stream's forEach method.  * @author Javin Paul  */ public class FileToStringJava8 {      public static void main(String args[]) throws IOException {          // How to read file into String before Java 7         InputStream is = new FileInputStream(\"manifest.mf\");         BufferedReader buf = new BufferedReader(new InputStreamReader(is));                  String line = buf.readLine();         StringBuilder sb = new StringBuilder();                  while(line != null){             sb.append(line).append(\"\\n\");             line = buf.readLine();         }                  String fileAsString = sb.toString();         System.out.println(\"Contents (before Java 7) : \" + fileAsString);                           // Reading file into Stirng in one line in JDK 7         String contents = new String(Files.readAllBytes(Paths.get(\"manifest.mf\")));         System.out.println(\"Contents (Java 7) : \" + contents);                                    // Reading file into String using proper character encoding         String fileString = new String(Files.readAllBytes(Paths.get(\"manifest.mf\")), StandardCharsets.UTF_8);         System.out.println(\"Contents (Java 7 with character encoding ) : \" + fileString);                   // It's even easier in Java 8         Files.lines(Paths.get(\"manifest.mf\"), StandardCharsets.UTF_8).forEach(System.out::println);              }   } \npublic static String loadFileAsString(String path) {   InputStream stream = YourClassName.class.getResourceAsStream(path);   try {     String result = new String(stream.readAllBytes());     return result;   } catch (IOException e) {     e.printStackTrace();     return null;   } } \n",
    "reg_date": "2021-10-12T12:05:30.000Z"
  },
  {
    "id": 2943,
    "keyword": null,
    "link": null,
    "title": " java read input from user",
    "description": "import java.util.Scanner; /* Required Import*/ public class reading{   public static void main(String[] args){     Scanner scan = new Scanner(System.in); // Create Reader      System.out.print(\"Enter Your Age\"); // Ask the user for something     int age = scan.nextInt(); // Read value from user     System.out.print(age); // Output the value   } } /*   Java Reading Options:   1_ reading int => nextInt();   2_ reading char => next().charAt(0); Single Character   3_ reading string => next();   4_ reading double => nextDouble(); */\nScanner sc = new Scanner(System.in);  // Create a Scanner object String userName = sc.nextLine();//read input string int age = sc.nextInt(); //read input integer long mobileNo = sc.nextLong(); //read input long double cgpa = sc.nextDouble(); //read input double System.out.println(userName);//output \nScanner sc = new Scanner(System.in); String s = sc.next(); int n = sc.nextInt(); double d = sc.nextDouble(); float f = sc.nextFloat();  // more fast way BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String s = br.readLine(); // read line int c = br.read();        // read single char\nimport java.util.*;   class UserInputDemo    {   public static void main(String[] args)   {   Scanner sc= new Scanner(System.in);    //System.in is a standard input stream   System.out.print(\"Enter first number- \");   int a= sc.nextInt();   System.out.print(\"Enter second number- \");   int b= sc.nextInt();   System.out.print(\"Enter third number- \");   int c= sc.nextInt();   int d=a+b+c;   System.out.println(\"Total= \" +d);   }   }  \n//For continues reading a line import java.util.Scanner;   Scanner in = new Scanner(System.in);  while(in.hasNextLine()) {    String line = in.nextLine();    System.out.println(\"Next line is is: \" + line);  }\n",
    "reg_date": "2021-10-12T12:05:30.000Z"
  },
  {
    "id": 2944,
    "keyword": null,
    "link": null,
    "title": " java read integer from text file into array scanner",
    "description": "Scanner scanner = new Scanner(new File(\"input.txt\")); int [] tall = new int [100]; int i = 0; while(scanner.hasNextInt()) {      tall[i++] = scanner.nextInt(); }\n",
    "reg_date": "2021-10-12T12:05:30.000Z"
  },
  {
    "id": 2945,
    "keyword": null,
    "link": null,
    "title": " java read last line of file",
    "description": " String lastLine = \"\";      while ((sCurrentLine = br.readLine()) != null)      {         System.out.println(sCurrentLine);         lastLine = sCurrentLine;     }\n",
    "reg_date": "2021-10-12T12:05:30.000Z"
  },
  {
    "id": 2946,
    "keyword": null,
    "link": null,
    "title": " java read lines from file",
    "description": "private ArrayList<String> readFileLines(String filepath) throws FileNotFoundException, IOException{   File fp = new File(filepath);   FileReader fr = new FileReader(fp);   BufferedReader br = new BufferedReader(fr);    ArrayList<String> lines = new ArrayList<>();   String line;   while((line = br.readLine()) != null) { lines.add(line); }    fr.close();   return lines; }\n        BufferedReader br = null;         try {             File file = new File(\"myfile.txt\"); // java.io.File             FileReader fr = new FileReader(file); // java.io.FileReader             br = new BufferedReader(fr); // java.io.BufferedReader             String line;             while ((line = br.readLine()) != null) {               // process the line             }           }           catch(IOException e) { e.printStackTrace();}           finally           {               try { if (br != null) br.close(); }               catch(IOException e) { e.printStackTrace(); }           }\n        Scanner sc = null;         try {             File file = new File(\"myfile.txt\"); // java.io.File             sc = new Scanner(file);     // java.util.Scanner             String line;             while (sc.hasNextLine()) {               line = sc.nextLine();               // process the line             }           }           catch(FileNotFoundException e)           {               e.printStackTrace();           }           finally {             if (sc != null) sc.close();           }\n",
    "reg_date": "2021-10-12T12:05:30.000Z"
  },
  {
    "id": 2947,
    "keyword": null,
    "link": null,
    "title": " java read next line",
    "description": "// its \\r\\n String a = \"Hello, \" String b = \"there!\" System.out.println(a+b);//returns Hello, there System.out.println(a+\"\\r\\n\"+b);//returns Hello,  //there! //it will be on the next line!\nScanner scanner = new Scanner(new File(\"filename\")); while (scanner.hasNextLine()) {    String line = scanner.nextLine();    // process the line } \n",
    "reg_date": "2021-10-12T12:05:30.000Z"
  },
  {
    "id": 2948,
    "keyword": null,
    "link": null,
    "title": " java read string input",
    "description": "import java.util.Scanner;   public class YourClass {     public static void main(String[] args) {         Scanner scanner = new Scanner(System.in);         String inputString = scanner.nextLine();         System.out.println(\"Your string: \" + inputString);     } } \n",
    "reg_date": "2021-10-12T12:05:30.000Z"
  },
  {
    "id": 2949,
    "keyword": null,
    "link": null,
    "title": " java read xml",
    "description": "String dir = System.getProperty(\"user.dir\"); File inputFile = new File(dir + File.separator + \"dats.xml\"); DocumentBuilderFactory dbFactory = \tDocumentBuilderFactory.newInstance(); DocumentBuilder dBuilder = dbFactory.newDocumentBuilder(); Document doc = dBuilder.parse(inputFile); doc.getDocumentElement().normalize(); /* Elimina nodos vac&iacute;os y combina adyacentes en caso de que los hubiera */\n",
    "reg_date": "2021-10-12T12:05:30.000Z"
  },
  {
    "id": 2950,
    "keyword": null,
    "link": null,
    "title": " java real random",
    "description": "\"https://www.random.org/\"\n",
    "reg_date": "2021-10-12T12:05:30.000Z"
  },
  {
    "id": 2951,
    "keyword": null,
    "link": null,
    "title": " java recuperer le nom de la classe",
    "description": "a.getClass().getName();\n",
    "reg_date": "2021-10-12T12:05:31.000Z"
  },
  {
    "id": 2952,
    "keyword": null,
    "link": null,
    "title": " java reduce array",
    "description": "Arrays.stream(array).reduce((str1, str2) -> str1 + str2);\n",
    "reg_date": "2021-10-12T12:05:31.000Z"
  },
  {
    "id": 2953,
    "keyword": null,
    "link": null,
    "title": " java regex",
    "description": "import java.util.regex.*;   public class RegexExample1{   public static void main(String args[]){   //1st way   Pattern p = Pattern.compile(\".s\");//. represents single character   Matcher m = p.matcher(\"as\");   boolean b = m.matches();      //2nd way   boolean b2=Pattern.compile(\".s\").matcher(\"as\").matches();      //3rd way   boolean b3 = Pattern.matches(\".s\", \"as\");      System.out.println(b+\" \"+b2+\" \"+b3);   }}  \n//Ther are three type of REGULAR EXPRESSION         //first    ^(.+)@(.+)$   \"^(.+)@(.+)$\\\"\"    //second    ^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}$      //third    ^[\\\\w!#$%&'*+/=?`{|}~^-]+(?:\\\\.[\\\\w!#$%&'*+/=?`{|}~^-]+)*@(?!-)(?:[a-zA-Z0-9-]+\\\\.)+[a-zA-Z]{2,6}$  \nimport java.io.*; import java.util.regex.*;  public class testRegex {      private static Pattern pattern;     private static Matcher matcher;      public static void main(String args[]) {         pattern = Pattern.compile(\"Hugo\");         matcher = pattern.matcher(\"Hugo Eti&eacute;vant\");         while(matcher.find()) {             System.out.println(\"Trouv&eacute; !\");         }     } }\nx.replaceAll(\"\\\\s+\", \"\"); \n",
    "reg_date": "2021-10-12T12:05:31.000Z"
  },
  {
    "id": 2954,
    "keyword": null,
    "link": null,
    "title": " java regex email address validation",
    "description": "\"^[\\\\w!#$%&'*+/=?`{|}~^-]+(?:\\\\.[\\\\w!#$%&'*+/=?`{|}~^-]+)*@(?!-)(?:[a-zA-Z0-9-]+\\\\.)+[a-zA-Z]{2,6}$\" \n",
    "reg_date": "2021-10-12T12:05:31.000Z"
  },
  {
    "id": 2955,
    "keyword": null,
    "link": null,
    "title": " java regex ip",
    "description": "String pattern = \"([01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\";\npublic static boolean isIP(String ip)  {     Pattern p = Pattern.compile(\"(([01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\\\\.){3}([01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])\");     Matcher m = p.matcher(ip);     return m.matches(); }\n",
    "reg_date": "2021-10-12T12:05:31.000Z"
  },
  {
    "id": 2956,
    "keyword": null,
    "link": null,
    "title": " java regex matcher example",
    "description": "import java.util.regex.Pattern; import java.util.regex.Matcher;  public class MatcherExample {      public static void main(String[] args) {          String text    =             \"This is the text to be searched \" +             \"for occurrences of the http:// pattern.\";          String patternString = \".*http://.*\";          Pattern pattern = Pattern.compile(patternString);          Matcher matcher = pattern.matcher(text);         boolean matches = matcher.matches();              \tint count = 0;         while(matcher.find()) {             count++;             System.out.println(\"found: \" + count + \" : \"                     + matcher.start() + \" - \" + matcher.end());         }     } }\nimport java.util.regex.*;   public class RegexExample1{   public static void main(String args[]){   //1st way   Pattern p = Pattern.compile(\".s\");//. represents single character   Matcher m = p.matcher(\"as\");   boolean b = m.matches();      //2nd way   boolean b2=Pattern.compile(\".s\").matcher(\"as\").matches();      //3rd way   boolean b3 = Pattern.matches(\".s\", \"as\");      System.out.println(b+\" \"+b2+\" \"+b3);   }}  \n",
    "reg_date": "2021-10-12T12:05:31.000Z"
  },
  {
    "id": 2957,
    "keyword": null,
    "link": null,
    "title": " java regex replace all characters before",
    "description": "String s = \"the text=text\"; String s1 = s.substring(s.indexOf(\"=\")+1); s1.trim();\n",
    "reg_date": "2021-10-12T12:05:31.000Z"
  },
  {
    "id": 2958,
    "keyword": null,
    "link": null,
    "title": " java remainder sign",
    "description": "n%2=0; //this is the remainder sign n/2; // this is division sign  \n",
    "reg_date": "2021-10-12T12:05:31.000Z"
  },
  {
    "id": 2959,
    "keyword": null,
    "link": null,
    "title": " java remote debug",
    "description": "java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000 OurApplication\n",
    "reg_date": "2021-10-12T12:05:31.000Z"
  },
  {
    "id": 2960,
    "keyword": null,
    "link": null,
    "title": " java remove List null element",
    "description": "dataList.removeAll(Collections.singleton(null));\n",
    "reg_date": "2021-10-12T12:05:31.000Z"
  },
  {
    "id": 2961,
    "keyword": null,
    "link": null,
    "title": " java remove character from string after",
    "description": "String result = input.split(\"-\")[0];\n",
    "reg_date": "2021-10-12T12:05:31.000Z"
  },
  {
    "id": 2962,
    "keyword": null,
    "link": null,
    "title": " java remove duplicates",
    "description": "public static void main(String[] args) {          String result = removeDup(\"AAABBBCCC\");         System.out.println(result); // ABC  public static  String  removeDup( String  str) {         String result = \"\";         for (int i = 0; i < str.length(); i++)             if (!result.contains(\"\" + str.charAt(i)))                 result += \"\" + str.charAt(i);         return result;     } }\nimport java.util.*;  public class RemoveDuplicatesFromArrayList {      public static void main(String[] args) {         List<Integer> numbers = Arrays.asList(1,2,2,2,3,5);          System.out.println(numbers);          Set<Integer> hashSet = new LinkedHashSet(numbers);         ArrayList<Integer> removedDuplicates = new ArrayList(hashSet);          System.out.println(removedDuplicates);     } } \npublic static <T> ArrayList<T> removeDuplicates(ArrayList<T> list){   Set<T> set = new LinkedHashSet<>(list);   return new ArrayList<T>(set); }\nString str2 = \"ABABABCDEF\";// ABCDEF         String[] arr2 = str2.split(\"\"); str2 = new LinkedHashSet<>(Arrays.asList(arr2)).toString().replace(\", \", \"\");         System.out.println(str2); // ABCDEF\n",
    "reg_date": "2021-10-12T12:05:32.000Z"
  },
  {
    "id": 2963,
    "keyword": null,
    "link": null,
    "title": " java remove empty lines from string",
    "description": "String text = \"line 1\\n\\nline 3\\n\\n\\nline 5\"; String adjusted = text.replaceAll(\"(?m)^[ \\t]*\\r?\\n\", \"\"); // ... \n",
    "reg_date": "2021-10-12T12:05:32.000Z"
  },
  {
    "id": 2964,
    "keyword": null,
    "link": null,
    "title": " java remove equal element of a list",
    "description": "public static <T> List<T> removeDuplicates(List<T> list){   Set<T> set = new LinkedHashSet<>(list);   return new ArrayList<T>(set); }\npublic static <T> ArrayList<T> removeDuplicates(ArrayList<T> list){   Set<T> set = new LinkedHashSet<>(list);   return new ArrayList<T>(set); }\n",
    "reg_date": "2021-10-12T12:05:32.000Z"
  },
  {
    "id": 2965,
    "keyword": null,
    "link": null,
    "title": " java remove file extension from file name",
    "description": "fileNameWithOutExt = \"test.xml\".replaceFirst(\"[.][^.]+$\", \"\");\n",
    "reg_date": "2021-10-12T12:05:32.000Z"
  },
  {
    "id": 2966,
    "keyword": null,
    "link": null,
    "title": " java remove first character",
    "description": "String string = \"Hello World\";  //Remove first character string.substring(1); //ello World  //Remove last character string.substring(0, string.length()-1); //Hello Worl  //Remove first and last character string.substring(1, string.length()-1); //ello Worl\n\"Hello World\".substring(1)  // ello World\n",
    "reg_date": "2021-10-12T12:05:32.000Z"
  },
  {
    "id": 2967,
    "keyword": null,
    "link": null,
    "title": " java remove first character from string",
    "description": "var str = \"Hello\";  var newString = str.substring(0, str.length - 1); //newString = Hell\nString string = \"Hello World\";  //Remove first character string.substring(1); //ello World  //Remove last character string.substring(0, string.length()-1); //Hello Worl  //Remove first and last character string.substring(1, string.length()-1); //ello Worl\nprivate static String removeLastChar(String str) {     return str.substring(0, str.length() - 1); }\ns = \"hello\" print s[1:]\nString str = \"Hello World\"; String str2 = str.substring(1,str.length());\n\"Hello World\".substring(1)  // ello World\n",
    "reg_date": "2021-10-12T12:05:32.000Z"
  },
  {
    "id": 2968,
    "keyword": null,
    "link": null,
    "title": " java remove first element from array",
    "description": "String[] stringArray = {\"foo\", \"bar\", \"baz\"}; String[] modifiedArray = Arrays.copyOfRange(stringArray, 1, stringArray.length);\n",
    "reg_date": "2021-10-12T12:05:32.000Z"
  },
  {
    "id": 2969,
    "keyword": null,
    "link": null,
    "title": " java remove from arraylist while iterating",
    "description": "ListIterator<Book> iter = books.listIterator(); while(iter.hasNext()){     if(iter.next().getIsbn().equals(isbn)){         iter.remove();     } }\n",
    "reg_date": "2021-10-12T12:05:32.000Z"
  },
  {
    "id": 2970,
    "keyword": null,
    "link": null,
    "title": " java remove last character",
    "description": "String s = \"Hello Worlds\"; String end = \"\"; end = s.substring((0, s.length()-1));\nprivate static String removeLastChar(String str) {     return str.substring(0, str.length() - 1); }\nstr = str.substring(0, str.length() - 1);\npublic static String removeLastCharacter(String str) {    \tString result = null;        if ((str != null) && (str.length() > 0)) {           \tresult = str.substring(0, str.length() - 1);        }             return result; }\nString s = \"Hello Worlds\"; String end = \"\"; end = s.substring((0, s.length()-1)); \npublic String method(String str) {     if (str.charAt(str.length()-1)=='x'){         str = str.replace(str.substring(str.length()-1), \"\");         return str;     } else{         return str;     } }\n",
    "reg_date": "2021-10-12T12:05:32.000Z"
  },
  {
    "id": 2971,
    "keyword": null,
    "link": null,
    "title": " java remove last character from string",
    "description": "String s = \"Hello Worlds\"; String end = \"\"; end = s.substring((0, s.length()-1));\nprivate static String removeLastChar(String str) {     return str.substring(0, str.length() - 1); }\nString str = \"India\"; System.out.println(\"last char = \" + str.charAt(str.length() - 1));\nlet str = \"12345.00\"; str = str.substring(0, str.length - 1); \nstr = str.substring(0, str.length() - 1);\nimport java.util.*; class LastCharRemove { public static void main(String str[]) { Scanner sc=new Scanner(System.in); String str1=sc.nextLine(); int n=str1.length(); StringBuilder b= new StringBuilder(); b.append(str1); b.delete(n-1,n); System.out.println(b.toString()); } }\n",
    "reg_date": "2021-10-12T12:05:32.000Z"
  },
  {
    "id": 2972,
    "keyword": null,
    "link": null,
    "title": " java remove non numbers from string",
    "description": "String str = \"a12.334tyz.78x\"; str = str.replaceAll(\"[^\\\\d.]\", \"\");\n",
    "reg_date": "2021-10-12T12:05:33.000Z"
  },
  {
    "id": 2973,
    "keyword": null,
    "link": null,
    "title": " java remove punctuation from string",
    "description": "inputString.replaceAll(\"\\\\p{Punct}\", \"\");\n",
    "reg_date": "2021-10-12T12:05:33.000Z"
  },
  {
    "id": 2974,
    "keyword": null,
    "link": null,
    "title": " java remove space at the end of string",
    "description": "a.replaceAll(\"\\\\s+\",\"\");\nString withSpaces = \"  Hi  \"; String withoutSpaces = withSpaces.trim();\nString str = \"Hello \"; System.out.println(str.trim()); // \"Hello\"\n",
    "reg_date": "2021-10-12T12:05:33.000Z"
  },
  {
    "id": 2975,
    "keyword": null,
    "link": null,
    "title": " java remove string from character",
    "description": "// remove last character from string in java public class SubstringDemo {    public static void main(String[] args)    {       String strInput = \"Flower Brackets!\";       String strOutput = strInput.substring(0, strInput.length() - 1);       System.out.println(strOutput);    } }\n String str = \"abcdDCBA123\"; String strNew = str.replace(\"a\", \"\"); // strNew is 'bcdDCBA123' \n",
    "reg_date": "2021-10-12T12:05:33.000Z"
  },
  {
    "id": 2976,
    "keyword": null,
    "link": null,
    "title": " java rename file extension",
    "description": "// java rename file extension import java.io.File; import java.io.IOException; import java.util.regex.Matcher; import java.util.regex.Pattern; public class RenameFileExtension  {    public static boolean renameExtension(String strSource, String strNewExtension)    {       String target;       String strCurrent = findExtension(strSource);       if(strCurrent.equals(\"\"))       {          target = strSource + \".\" + strNewExtension;       }       else        {          target = strSource.replaceFirst(Pattern.quote(\".\" + strCurrent) + \"$\",Matcher.quoteReplacement(\".\" + strNewExtension));       }       return new File(strSource).renameTo(new File(target));    }    public static String findExtension(String strFile)     {       String strExtension = \"\";       int a = strFile.lastIndexOf('.');       if(a > 0 &&  a < strFile.length() - 1)        {          strExtension = strFile.substring(a + 1);       }       return strExtension;    }    public static void main(String[] args) throws IOException     {       System.out.println(RenameFileExtension.renameExtension(\"A:\\\\java.txt\", \"pdf\"));    } }\n",
    "reg_date": "2021-10-12T12:05:33.000Z"
  },
  {
    "id": 2977,
    "keyword": null,
    "link": null,
    "title": " java repeat loop cycle for",
    "description": "for(int  i = 0; i < 10; i++) {   \t//your code \tif(random.nextInt(5) == 0) { i--; } //1 in 5 chance to repeat loop cycle }\n",
    "reg_date": "2021-10-12T12:05:33.000Z"
  },
  {
    "id": 2978,
    "keyword": null,
    "link": null,
    "title": " java replace all space with underscore",
    "description": "myString = myString.replaceAll(\" \", \"_\")\n",
    "reg_date": "2021-10-12T12:05:33.000Z"
  },
  {
    "id": 2979,
    "keyword": null,
    "link": null,
    "title": " java replace all xml decoding",
    "description": "String prefixedString = xmlString.replaceAll(\"<(?![/?])\", \"<mb:\");\n",
    "reg_date": "2021-10-12T12:05:33.000Z"
  },
  {
    "id": 2980,
    "keyword": null,
    "link": null,
    "title": " java replace character",
    "description": "String s = \"new String\"; String replaced = s.replace(\"new\",\"Test\"); \t\t\t\t\t\t\t  ^\t\t ^                              old    new char\npublic static void main(String args[]){   String s1=\"my name is khan my name is java\";   String replaceString=s1.replace(\"is\",\"was\");//replaces all occurrences of \"is\" to \"was\"   System.out.println(replaceString);   }}   \n// We want to replace every # with a 8 String larry = \"Larry is # years old\"; String newString = larry.replace(\"#\", \"8\");\nString str = \"..............................\";           int index = 5;             char ch = '|';            StringBuilder string = new StringBuilder(str);          string.setCharAt(index, ch);           System.out.println(string); \npublic class JavaExample{    public static void main(String args[]){ \tString str = new String(\"Site is BeginnersBook.com\");  \tSystem.out.print(\"String after replacing com with net :\" ); \tSystem.out.println(str.replaceFirst(\"com\", \"net\"));  \tSystem.out.print(\"String after replacing Site name:\" ); \tSystem.out.println(str.replaceFirst(\"Beginners(.*)\", \"XYZ.com\"));    } }\n",
    "reg_date": "2021-10-12T12:05:33.000Z"
  },
  {
    "id": 2981,
    "keyword": null,
    "link": null,
    "title": " java replace character in string",
    "description": "//short answer: you cannot individually change any specific character //of a String in java. You can however do this:  String s1 = \"This is a String\"; String s2 = s1.substring(0, 8) + \"o\" + s1.substring(9); System.out.println(s2); //Prints \"This is o String\", replaced the 8th character with an o\nString s = \"new String\"; String replaced = s.replace(\"new\",\"Test\"); \t\t\t\t\t\t\t  ^\t\t ^                              old    new char\nString str = in.nextLine();\t//Original String char cr = in.next().charAt(0); // character to replace int index = in.nextInt();\t// Index where replaced str = str.substring(0, index) + cr + str.substring(index + 1);// modified string \n// We want to replace every # with a 8 String larry = \"Larry is # years old\"; String newString = larry.replace(\"#\", \"8\");\nString str = \"..............................\";           int index = 5;             char ch = '|';            StringBuilder string = new StringBuilder(str);          string.setCharAt(index, ch);           System.out.println(string); \npublic class JavaExample{    public static void main(String args[]){ \tString str = new String(\"Site is BeginnersBook.com\");  \tSystem.out.print(\"String after replacing com with net :\" ); \tSystem.out.println(str.replaceFirst(\"com\", \"net\"));  \tSystem.out.print(\"String after replacing Site name:\" ); \tSystem.out.println(str.replaceFirst(\"Beginners(.*)\", \"XYZ.com\"));    } }\n",
    "reg_date": "2021-10-12T12:05:33.000Z"
  },
  {
    "id": 2982,
    "keyword": null,
    "link": null,
    "title": " java replace element in list",
    "description": "list.set(1,\"new value\");  //example ..  List<String> list = new ArrayList<>(); list.add(\"one\"); list.add(\"two\"); list.add(\"three\"); System.out.println(list); // [one,two,three] list.set(1,\"new\"); System.out.println(list); //[one,new,three]\nlist.set(4, \"element at index 4 is replaced by this string\");\n",
    "reg_date": "2021-10-12T12:05:33.000Z"
  },
  {
    "id": 2983,
    "keyword": null,
    "link": null,
    "title": " java replace substring between two strings",
    "description": "/**      *       * @param firstString the string where you wan      * @param lastString      * @param replace the string between the firstString and lastString      * @param xml      * @return       */     public static String replaceStringBtwn(String firstString,String lastString,String replace,String stringBody){         return stringBody.split(firstString)[0]                 +replace                 +stringBody.split(lastString)[1];              }\nStringUtils.substringBetween(str, \"<%=\", \"%>\");\n",
    "reg_date": "2021-10-12T12:05:34.000Z"
  },
  {
    "id": 2984,
    "keyword": null,
    "link": null,
    "title": " java replace whitespace",
    "description": "a.replaceAll(\"\\\\s+\",\"\");\nst = st.replaceAll(\"\\\\s+\",\"\") \n",
    "reg_date": "2021-10-12T12:05:34.000Z"
  },
  {
    "id": 2985,
    "keyword": null,
    "link": null,
    "title": " java repository sql find not in list",
    "description": "@Query( \"select o from MyObject o where inventoryId in :ids\" ) List<MyObject> findByInventoryIds(@Param(\"ids\") List<Long> inventoryIdList);\n    @Query(\"FROM entity AS e WHERE e.id NOT IN ?1\")     List<ObjectName> findByNotId(List<Long> ids); \n",
    "reg_date": "2021-10-12T12:05:34.000Z"
  },
  {
    "id": 2986,
    "keyword": null,
    "link": null,
    "title": " java resource file",
    "description": "File file = new File( \tgetClass().getClassLoader().getResource(\"database.properties\").getFile() );\nInputStream inputStream = getClass() \t\t.getClassLoader().getResourceAsStream(\"database.properties\");\n",
    "reg_date": "2021-10-12T12:05:34.000Z"
  },
  {
    "id": 2987,
    "keyword": null,
    "link": null,
    "title": " java restart while loop",
    "description": "//use continue keyword  while (true) {   //do stuff   if (condition) continue; //goes to the top of while loop   //do other stuff }\n",
    "reg_date": "2021-10-12T12:05:34.000Z"
  },
  {
    "id": 2988,
    "keyword": null,
    "link": null,
    "title": " java resultset length",
    "description": "int size =0; if (rs != null)  {   rs.last();    // moves cursor to the last row   size = rs.getRow(); // get row id  } \n",
    "reg_date": "2021-10-12T12:05:34.000Z"
  },
  {
    "id": 2989,
    "keyword": null,
    "link": null,
    "title": " java retirer derniere caractere sting",
    "description": "public static String removeLastChar(String s) {     return (s == null || s.length() == 0)       ? null       : (s.substring(0, s.length() - 1)); }\n",
    "reg_date": "2021-10-12T12:05:34.000Z"
  },
  {
    "id": 2990,
    "keyword": null,
    "link": null,
    "title": " java return if",
    "description": "public void test(){ \tif(something){     \treturn;//this ends the method     }      \t//do whatever you want }\n",
    "reg_date": "2021-10-12T12:05:34.000Z"
  },
  {
    "id": 2991,
    "keyword": null,
    "link": null,
    "title": " java return tuple",
    "description": "public Map.Entry<String,String> getSomeTuple(){ \treturn Map.entry<>(\"Hello\",\"World\"); } public Map.Entry<String,String> getSomeTupleJava8(){   \treturn new AbstractMap.SimpleEntry<>(\"Hello\",\"World\"); }\n",
    "reg_date": "2021-10-12T12:05:35.000Z"
  },
  {
    "id": 2992,
    "keyword": null,
    "link": null,
    "title": " java reverse a string",
    "description": "public class ReverseString {     public static void main(String[] args) {         String s1 = \"neelendra\";         for(int i=s1.length()-1;i>=0;i--)             {                 System.out.print(s1.charAt(i));             }     } }\nString string=\"whatever\"; String reverse = new StringBuffer(string).reverse().toString(); System.out.println(reverse); \n// Library approach public static String solution(String str) { \t// StringBuilder is not thread-safe, use StringBuffer \treturn new StringBuffer(str).reverse().toString(); }  // DIY approach public static String solution(String str) { \tchar[] chars = str.toCharArray(); \tfor(int i = 0, j = str.length() - 1; i < j; i++, j--) { \t\tchar ch = chars[i]; \t\tchars[i] = chars[j]; \t\tchars[j] = ch; \t} \treturn new String(chars); }\n// reverse a string using reverse() method of StringBuilder class class ReverseUsingReverseMethod {    public static void main(String[] args)    {       String str = \"Hello world Java\";       StringBuilder sb = new StringBuilder();       // append string to StringBuilder       sb.append(str);       sb = sb.reverse();       // printing reversed String       System.out.println(sb);    } }\nString rev = new StringBuilder(\"Your String\").reverse().toString();\nString str = \"Hello\"; String reverse(String str){   StringBuilder sb = new StringBuilder();   sb.append(str);   sb.reverse();   return sb.toString(); }\n",
    "reg_date": "2021-10-12T12:05:35.000Z"
  },
  {
    "id": 2993,
    "keyword": null,
    "link": null,
    "title": " java rgb color to int",
    "description": "//If your RGB values are in form of a float percentage between  //0 and 1 consider the following method:  public int getIntFromColor(float Red, float Green, float Blue){     int R = Math.round(255 * Red);     int G = Math.round(255 * Green);     int B = Math.round(255 * Blue);      R = (R << 16) & 0x00FF0000;     G = (G << 8) & 0x0000FF00;     B = B & 0x000000FF;      return 0xFF000000 | R | G | B; }\n",
    "reg_date": "2021-10-12T12:05:35.000Z"
  },
  {
    "id": 2994,
    "keyword": null,
    "link": null,
    "title": " java robot left click",
    "description": "public static void click(int x, int y) throws AWTException{     Robot bot = new Robot();     bot.mouseMove(x, y);         bot.mousePress(InputEvent.BUTTON1_DOWN_MASK);     bot.mouseRelease(InputEvent.BUTTON1_DOWN_MASK); } \n",
    "reg_date": "2021-10-12T12:05:35.000Z"
  },
  {
    "id": 2995,
    "keyword": null,
    "link": null,
    "title": " java round double to 2 decimal places",
    "description": "double roundOff = Math.round(a * 100.0) / 100.0; // Or double roundOff = (double) Math.round(a * 100) / 100; // both have the same output.\nString result = String.format(\"%.2f\", value);\npackage com.mkyong;  import java.math.RoundingMode; import java.text.DecimalFormat;  public class DecimalExample {      private static DecimalFormat df2 = new DecimalFormat(\"#.##\");      public static void main(String[] args) {          double input = 3.14159265359;         System.out.println(\"double : \" + input);         System.out.println(\"double : \" + df2.format(input));    //3.14          // DecimalFormat, default is RoundingMode.HALF_EVEN         df2.setRoundingMode(RoundingMode.DOWN);         System.out.println(\"\\ndouble : \" + df2.format(input));  //3.14          df2.setRoundingMode(RoundingMode.UP);         System.out.println(\"double : \" + df2.format(input));    //3.15      }  } Copy\nclass round{     public static void main(String args[]){      double a = 123.13698;     double roundOff = Math.round(a*100)/100;      System.out.println(roundOff); } } \nimport java.math.RoundingMode; import java.text.DecimalFormat;  public class DecimalExample {     private static DecimalFormat df = new DecimalFormat(\"0.00\");     public static void main(String[] args) {         double input = 1205.6358;                System.out.println(\"salary : \" + input);                // DecimalFormat, default is RoundingMode.HALF_EVEN         System.out.println(\"salary : \" + df.format(input));      //1205.64                  df.setRoundingMode(RoundingMode.DOWN);         System.out.println(\"salary : \" + df.format(input));      //1205.63          df.setRoundingMode(RoundingMode.UP);         System.out.println(\"salary : \" + df.format(input));      //1205.64     } }\nint a = (int) Math.round(doubleVar);\n",
    "reg_date": "2021-10-12T12:05:35.000Z"
  },
  {
    "id": 2996,
    "keyword": null,
    "link": null,
    "title": " java round double to 2 decimals",
    "description": "double roundOff = Math.round(a * 100.0) / 100.0; // Or double roundOff = (double) Math.round(a * 100) / 100; // both have the same output.\nString result = String.format(\"%.2f\", value);\nclass round{     public static void main(String args[]){      double a = 123.13698;     double roundOff = Math.round(a*100)/100;      System.out.println(roundOff); } } \nimport java.math.RoundingMode; import java.text.DecimalFormat;  public class DecimalExample {     private static DecimalFormat df = new DecimalFormat(\"0.00\");     public static void main(String[] args) {         double input = 1205.6358;                System.out.println(\"salary : \" + input);                // DecimalFormat, default is RoundingMode.HALF_EVEN         System.out.println(\"salary : \" + df.format(input));      //1205.64                  df.setRoundingMode(RoundingMode.DOWN);         System.out.println(\"salary : \" + df.format(input));      //1205.63          df.setRoundingMode(RoundingMode.UP);         System.out.println(\"salary : \" + df.format(input));      //1205.64     } }\nint a = (int) Math.round(doubleVar);\nclass round{     public static void main(String args[]){        double a = 123.13698;       double roundOff = Math.round(a*100)/100;        System.out.println(roundOff); \t} } \n",
    "reg_date": "2021-10-12T12:05:35.000Z"
  },
  {
    "id": 2997,
    "keyword": null,
    "link": null,
    "title": " java round to 2 decimal",
    "description": "String.format(\"%.2f\", d)\nclass round{     public static void main(String args[]){      double a = 123.13698;     double roundOff = Math.round(a*100)/100;      System.out.println(roundOff); } } \nimport java.math.RoundingMode; import java.text.DecimalFormat;  public class DecimalExample {     private static DecimalFormat df = new DecimalFormat(\"0.00\");     public static void main(String[] args) {         double input = 1205.6358;                System.out.println(\"salary : \" + input);                // DecimalFormat, default is RoundingMode.HALF_EVEN         System.out.println(\"salary : \" + df.format(input));      //1205.64                  df.setRoundingMode(RoundingMode.DOWN);         System.out.println(\"salary : \" + df.format(input));      //1205.63          df.setRoundingMode(RoundingMode.UP);         System.out.println(\"salary : \" + df.format(input));      //1205.64     } }\nclass round{     public static void main(String args[]){        double a = 123.13698;       double roundOff = Math.round(a*100)/100;        System.out.println(roundOff); \t} } \n",
    "reg_date": "2021-10-12T12:05:35.000Z"
  },
  {
    "id": 2998,
    "keyword": null,
    "link": null,
    "title": " java round up",
    "description": "int x = 3.14;  Math.round(x); //Rounds to nearest int Math.ceil(x); //Rounds up to int Math.floor(x); //Rounds down to int\ndouble test = 0.01; // rounds up to the next INTEGER test = Math.ceil(test);  // 1.0   double test2 = 1.0; // does not round if decimal is 0 test2 = Math.ceil(test2);  // 1.0\n",
    "reg_date": "2021-10-12T12:05:35.000Z"
  },
  {
    "id": 2999,
    "keyword": null,
    "link": null,
    "title": " java run cmd",
    "description": "javac MyFisrtProgam.java // enter to compile    java MyfirstProgram // run program  \npublic void excCommand(String new_dir){     Runtime rt = Runtime.getRuntime();     try {         rt.exec(new String[]{\"cmd.exe\",\"/c\",\"start\"});      } catch (IOException e) {         // TODO Auto-generated catch block         e.printStackTrace();     } } \n C:\\Users\\Your Name>javac MyClass.java \n",
    "reg_date": "2021-10-12T12:05:35.000Z"
  },
  {
    "id": 3000,
    "keyword": null,
    "link": null,
    "title": " java run code at interval",
    "description": "   /* Perform this runnable code every 5 seconds  in this example*/    Runnable runnable = new Runnable() { \t\t\tpublic void run() { \t\t\t\t// task to run goes here \t\t\t\tSystem.out.println(\"Hello !!\"); \t\t\t} \t\t}; \t\tScheduledExecutorService service = Executors \t\t\t\t.newSingleThreadScheduledExecutor(); \t\tservice.scheduleAtFixedRate(runnable, 0, 5, TimeUnit.SECONDS);\n",
    "reg_date": "2021-10-12T12:05:35.000Z"
  },
  {
    "id": 3001,
    "keyword": null,
    "link": null,
    "title": " java run main of another class",
    "description": "public class CallClass{      public void call(){        ToBeCalledClass.main(null); //or whatever args you want     } }\n",
    "reg_date": "2021-10-12T12:05:36.000Z"
  },
  {
    "id": 3002,
    "keyword": null,
    "link": null,
    "title": " java run project from command line",
    "description": "javac MyFisrtProgam.java // enter to compile    java MyfirstProgram // run program  \n// Assuming that you have an executable jar java -jar myJavaProject.jar  // Assuming that you have packaged jar java -jar target/myJavaProject.jar\n",
    "reg_date": "2021-10-12T12:05:36.000Z"
  },
  {
    "id": 3003,
    "keyword": null,
    "link": null,
    "title": " java run system command",
    "description": "Runtime.getRuntime().exec(cmdAttribs);\n",
    "reg_date": "2021-10-12T12:05:36.000Z"
  },
  {
    "id": 3004,
    "keyword": null,
    "link": null,
    "title": " java running sum of array",
    "description": "class Solution {     public int[] runningSum(int[] nums) {         int[] sol = new int[nums.length];         sol[0] = nums[0];         for(int i = 1; i < nums.length; i++) {             sol[i] = sol[i-1] + nums[i];         }         return sol;     } }  // Example: runningSum([1,3,6,9]) = [1, 4, 10, 19] = [1, 1+3, 1+3+6, 1+3+6+9]\n",
    "reg_date": "2021-10-12T12:05:36.000Z"
  },
  {
    "id": 3005,
    "keyword": null,
    "link": null,
    "title": " java runtime exec get output",
    "description": "private static void execCommand() {   String[] command = {\"echo\", \"Hello\", \"world.\"};      new Thread(() -> {     try {       ProcessBuilder builder = new ProcessBuilder(command);       builder.redirectErrorStream(true);       final Process proc = builder.start();       BufferedReader in = new BufferedReader(new InputStreamReader(proc.getInputStream()));       String s = null;       while ((s = in.readLine()) != null) {         System.out.println(s);       }     } catch (IOException e) {       e.printStackTrace();     }   }).start(); }\nprivate static void GetOutput(final Process process) {     new Thread() {         public void run() {             BufferedReader input = new BufferedReader(new InputStreamReader(process.getInputStream()));             String line = null;              try {                 while ((line = input.readLine()) != null) {                     System.out.println(line);                 }             } catch (IOException e) {                 e.printStackTrace();             }         }     }.start(); }\n",
    "reg_date": "2021-10-12T12:05:36.000Z"
  },
  {
    "id": 3006,
    "keyword": null,
    "link": null,
    "title": " java save file",
    "description": "import java.io.FileWriter;   // Import the FileWriter class import java.io.IOException;  // Import the IOException class to handle errors  public class WriteToFile {   public static void main(String[] args) {     try {       FileWriter myWriter = new FileWriter(\"filename.txt\");       myWriter.write(\"Files in Java might be tricky, but it is fun enough!\");       myWriter.close();       System.out.println(\"Successfully wrote to the file.\");     } catch (IOException e) {       System.out.println(\"An error occurred.\");       e.printStackTrace();     }   } }\n//Create a text file and write to it immediately //stackoverflow  PrintWriter writer = new PrintWriter(\"the-file-name.txt\", \"UTF-8\"); writer.println(\"The first line\"); writer.println(\"The second line\"); writer.close(); \n@Test public void givenUsingJava7_whenWritingToFile_thenCorrect()    throws IOException {     String str = \"Hello\";       Path path = Paths.get(fileName);     byte[] strToBytes = str.getBytes();       Files.write(path, strToBytes);       String read = Files.readAllLines(path).get(0);     assertEquals(str, read); } \n",
    "reg_date": "2021-10-12T12:05:36.000Z"
  },
  {
    "id": 3007,
    "keyword": null,
    "link": null,
    "title": " java scanner",
    "description": "import java.util.Scanner;  // import scanner   Scanner myScanner = new Scanner(System.in); // Make scanner obj  String inputString = myScanner.nextLine(); // Take whole line  boolean inputBoolean = myScanner.nextBoolean(); //Boolean input  long inputLong = myScanner.nextLong(); //Interger,long ... input\nimport java.util.Scanner;\t\t//Import Scanner in java  class classname{   public void methodname(){     Scanner s_name = new Scanner(System.in);\t//Scanner declaration     //Use Scanner object to take input     int val1    =  s_name.nextInt();\t\t\t//int     float val2  =  s_name.nextFloat();\t\t\t//float     double val3 =  s_name.nextDouble();\t\t\t//double     string name =  s_name.nextLine();\t\t\t//string     char ch     =  s_name.nextLine().charAt(0);\t//character   }}\nimport java.util.Scanner;  Public class Scanner { \tPublic static void main(String[] args) {     \t// Scanner *scanner name here* = new Scanner(System.in);       \tScanner scan = new Scanner(System.in);       \tSystem.out.println(\"Type anything and the scanner will take that input and print it\");       \tString next = scan.next();       \tSystem.out.println(next);     }  }\nimport java.util.Scanner;//import Scanner  Scanner input=new Scanner(System.in);//Create the scanner Obj  float numF = input.nextFloat();//Returns float int num1 = input.nextInt(); //Returns int byte byte1 = input.nextByte();//Returns Byte long lg1 = input.nextLong();//Returns long boolean b1 = input.nextBoolean();//Returns bool double num2 = input.nextDouble();//Returns Double String nome = input.nextLine();//Returns String  //execution is pause until you give input  \n// import Scanner import java.util.Scanner;  // Initialize Scanner Scanner input = new Scanner(System.in);  // Test program with Scanner System.out.println(\"What is your name?\"); String name = input.nextLine();  System.out.println(\"Hello,\" + name + \" , it is nice to meet you!\");\nimport java.util.Scanner; public class AddTwoNumbers2 {      public static void main(String[] args) {                  int num1, num2, sum;         Scanner sc = new Scanner(System.in);         System.out.println(\"Enter First Number: \");         num1 = sc.nextInt();                  System.out.println(\"Enter Second Number: \");         num2 = sc.nextInt();                  sc.close();         sum = num1 + num2;         System.out.println(\"Sum of these numbers: \"+sum);     } }  Output:\n",
    "reg_date": "2021-10-12T12:05:36.000Z"
  },
  {
    "id": 3008,
    "keyword": null,
    "link": null,
    "title": " java scanner functions",
    "description": "import java.util.Scanner;  // import scanner   Scanner myScanner = new Scanner(System.in); // Make scanner obj  String inputString = myScanner.nextLine(); // Take whole line  boolean inputBoolean = myScanner.nextBoolean(); //Boolean input  long inputLong = myScanner.nextLong(); //Interger,long ... input\nimport java.util.Scanner;\t\t//Import Scanner in java  class classname{   public void methodname(){     Scanner s_name = new Scanner(System.in);\t//Scanner declaration     //Use Scanner object to take input     int val1    =  s_name.nextInt();\t\t\t//int     float val2  =  s_name.nextFloat();\t\t\t//float     double val3 =  s_name.nextDouble();\t\t\t//double     string name =  s_name.nextLine();\t\t\t//string     char ch     =  s_name.nextLine().charAt(0);\t//character   }}\nimport java.util.Scanner;  Public class Scanner { \tPublic static void main(String[] args) {     \t// Scanner *scanner name here* = new Scanner(System.in);       \tScanner scan = new Scanner(System.in);       \tSystem.out.println(\"Type anything and the scanner will take that input and print it\");       \tString next = scan.next();       \tSystem.out.println(next);     }  }\nIf you use the nextLine() method immediately following the nextInt() method,  nextInt() reads integer tokens; because of this, the last newline character for  that line of integer input is still queued in the input buffer and the next  nextLine() will be reading the remainder of the integer line (which is empty).  So we read can read the empty space to another string might work. Check below  code. import java.util.Scanner;  public class Solution {      public static void main(String[] args) {         Scanner scan = new Scanner(System.in);         int i = scan.nextInt();          // Write your code here.         double d = scan.nextDouble();         String f = scan.nextLine();         String s = scan.nextLine();          System.out.println(\"String: \" + s);         System.out.println(\"Double: \" + d);         System.out.println(\"Int: \" + i);     } }\n// import Scanner import java.util.Scanner;  // Initialize Scanner Scanner input = new Scanner(System.in);  // Test program with Scanner System.out.println(\"What is your name?\"); String name = input.nextLine();  System.out.println(\"Hello,\" + name + \" , it is nice to meet you!\");\nimport java.util.Scanner; public class scanners{   public static void main(String[] args){     Scanner scan = new Scanner(System.in);      // Reading int     System.out.print(\"Enter your age\");     int age = scan.nextInt();     // Reading double     System.out.print(\"Enter your salary\");     double salary = scan.nextDouble();     // Reading float     System.out.print(\"Enter employees average salary\");     float average = scan.nextFloat();     // Reading Single Character     System.out.print(\"Enter any character from a to z\");     char charcter = scan.next().charAt(0);     // Reading string     System.out.print(\"Enter your full name\");     String fullname = scan.next();     // Reading long     System.out.print(\"enter a long number\");     long number = scan.nextLong();   } }\n",
    "reg_date": "2021-10-12T12:05:36.000Z"
  },
  {
    "id": 3009,
    "keyword": null,
    "link": null,
    "title": " java scanner stack overflow",
    "description": "import java.util.Scanner;  // import scanner   Scanner myScanner = new Scanner(System.in); // Make scanner obj  String inputString = myScanner.nextLine(); // Take whole line  boolean inputBoolean = myScanner.nextBoolean(); //Boolean input  long inputLong = myScanner.nextLong(); //Interger,long ... input\nimport java.util.Scanner;\t\t//Import Scanner in java  class classname{   public void methodname(){     Scanner s_name = new Scanner(System.in);\t//Scanner declaration     //Use Scanner object to take input     int val1    =  s_name.nextInt();\t\t\t//int     float val2  =  s_name.nextFloat();\t\t\t//float     double val3 =  s_name.nextDouble();\t\t\t//double     string name =  s_name.nextLine();\t\t\t//string     char ch     =  s_name.nextLine().charAt(0);\t//character   }}\nThe Java Scanner class is widely used to parse text for strings  and primitive types using a regular expression. It is the simplest way to get input in Java.  By the help of Scanner in Java, we can get input from the user  in primitive types such as int, long, double, byte, float, short, etc.     Scanner in = new Scanner(System.in);   \n",
    "reg_date": "2021-10-12T12:05:36.000Z"
  },
  {
    "id": 3010,
    "keyword": null,
    "link": null,
    "title": " java scanner string nextline after nextint",
    "description": "//The problem is with the input.nextInt() method - it only reads the int value. So when you continue reading with input.nextLine() you receive the \"\\n\" Enter key. So to skip this you have to add the input.nextLine(). Hope this should be clear now.  //Try it like that:  System.out.print(\"Insert a number: \"); int number = input.nextInt(); input.nextLine(); // This line you have to add (It consumes the \\n character) System.out.print(\"Text1: \"); String text1 = input.nextLine(); System.out.print(\"Text2: \"); String text2 = input.nextLine();\nint option = input.nextInt(); input.nextLine();  // Consume newline left-over String str1 = input.nextLine();\n",
    "reg_date": "2021-10-12T12:05:36.000Z"
  },
  {
    "id": 3011,
    "keyword": null,
    "link": null,
    "title": " java script find screen size of device",
    "description": "// Size of browser viewport. $(window).height(); $(window).width();  // Size of HTML document (same as pageHeight/pageWidth in screenshot). $(document).height(); $(document).width();\n",
    "reg_date": "2021-10-12T12:05:36.000Z"
  },
  {
    "id": 3012,
    "keyword": null,
    "link": null,
    "title": " java script print date in YYYY-MM-DD HH:MM:SS format",
    "description": "let date_ob = new Date();  // adjust 0 before single digit date let date = (\"0\" + date_ob.getDate()).slice(-2);  // current month let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);  // current year let year = date_ob.getFullYear();  // current hours let hours = date_ob.getHours();  // current minutes let minutes = date_ob.getMinutes();  // current seconds let seconds = date_ob.getSeconds();  // prints date & time in YYYY-MM-DD HH:MM:SS format console.log(year + \"-\" + month + \"-\" + date + \" \" + hours + \":\" + minutes + \":\" + seconds);\n",
    "reg_date": "2021-10-12T12:05:37.000Z"
  },
  {
    "id": 3013,
    "keyword": null,
    "link": null,
    "title": " java search arraylist",
    "description": "import java.util.ArrayList; import java.util.List; public class Demo {    public static void main(String[] args) {       List aList = new ArrayList();       aList.add(\"A\");       aList.add(\"B\");       aList.add(\"C\");       aList.add(\"D\");       aList.add(\"E\");       int index1 = aList.indexOf(\"C\");       int index2 = aList.indexOf(\"Z\");       if(index1 == -1)          System.out.println(\"The element C is not in the ArrayList\");       else          System.out.println(\"The element C is in the ArrayList at index \" + index1);       if(index2 == -1)          System.out.println(\"The element Z is not in the ArrayList\");       else          System.out.println(\"The element Z is in the ArrayList at index \" + index2);    } }\n//create ArrayList ArrayList<String> arrayList = new ArrayList<String>(); //add item to ArrayList arrayList.add(\"item\"); //check if ArrayList contains item (returns boolean) System.out.println(arrayList.contains(\"item\")); //remove item from ArrayList arrayList.remove(\"item\");\n",
    "reg_date": "2021-10-12T12:05:37.000Z"
  },
  {
    "id": 3014,
    "keyword": null,
    "link": null,
    "title": " java search file in folder",
    "description": "import java.io.File;  public class Main {    public static void main(String[] argv) throws Exception {       File dir = new File(\"directoryName\");       String[] children = dir.list();              if (children == null) {          System.out.println(\"does not exist or           is not a directory\");       } else {          for (int i = 0; i < children.length; i++) {             String filename = children[i];             System.out.println(filename);          }       }    } }\n",
    "reg_date": "2021-10-12T12:05:37.000Z"
  },
  {
    "id": 3015,
    "keyword": null,
    "link": null,
    "title": " java search string in string",
    "description": "You can use contains(), indexOf() and lastIndexOf() method to check if one String contains another String in Java or not. If a String contains another String then it's known as a substring. The indexOf() method accepts a String and returns the starting position of the string if it exists, otherwise, it will return -1.\n",
    "reg_date": "2021-10-12T12:05:37.000Z"
  },
  {
    "id": 3016,
    "keyword": null,
    "link": null,
    "title": " java send an image over a socket",
    "description": "public class Send {      public static void main(String[] args) throws Exception {         Socket socket = new Socket(\"localhost\", 13085);         OutputStream outputStream = socket.getOutputStream();          BufferedImage image = ImageIO.read(new File(\"C:\\\\Users\\\\Jakub\\\\Pictures\\\\test.jpg\"));          ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();         ImageIO.write(image, \"jpg\", byteArrayOutputStream);          byte[] size = ByteBuffer.allocate(4).putInt(byteArrayOutputStream.size()).array();         outputStream.write(size);         outputStream.write(byteArrayOutputStream.toByteArray());         outputStream.flush();         System.out.println(\"Flushed: \" + System.currentTimeMillis());          Thread.sleep(120000);         System.out.println(\"Closing: \" + System.currentTimeMillis());         socket.close();     } }   public class Receive {      public static void main(String[] args) throws Exception {         ServerSocket serverSocket = new ServerSocket(13085);         Socket socket = serverSocket.accept();         InputStream inputStream = socket.getInputStream();          System.out.println(\"Reading: \" + System.currentTimeMillis());          byte[] sizeAr = new byte[4];         inputStream.read(sizeAr);         int size = ByteBuffer.wrap(sizeAr).asIntBuffer().get();          byte[] imageAr = new byte[size];         inputStream.read(imageAr);          BufferedImage image = ImageIO.read(new ByteArrayInputStream(imageAr));          System.out.println(\"Received \" + image.getHeight() + \"x\" + image.getWidth() + \": \" + System.currentTimeMillis());         ImageIO.write(image, \"jpg\", new File(\"C:\\\\Users\\\\Jakub\\\\Pictures\\\\test2.jpg\"));          serverSocket.close();     }  } \n",
    "reg_date": "2021-10-12T12:05:37.000Z"
  },
  {
    "id": 3017,
    "keyword": null,
    "link": null,
    "title": " java serialize object to json",
    "description": "public class someClass { //your lcode and logic... ObjectMapper mapper = new ObjectMapper(); SimpleModule module = new SimpleModule(); module.addSerializer(MyAwesomeClass.class, new MyAwesomeSerializer()); mapper.registerModule(module);  jsonNode = mapper.convertValue(myAwesomeObject, JsonNode.class); //... your code and logic }    public class MyAwesomeSerializer extends StdSerializer<MyAwesomeClass> {      public MyAwesomeSerializer() {         super(MyAwesomeClass.class);     }      @Override     public void serialize(MyAwesomeClass myAwesomeClass, JsonGenerator jgen, SerializerProvider provider) throws IOException {         ObjectMapper mapper = new ObjectMapper();          jgen.writeStartObject();         jgen.writeStringField(\"name\", myAwesomeClass.getName());         jgen.writeStringField(\"age\", myAwesomeClass.getAge());            jgen.writeArrayFieldStart(\"hobbies\");           for (Hobby hobby : myAwesomeClass.getHobbies()) {               jgen.writeObject(mapper.convertValue(hobby, JsonNode.class));           }           jgen.writeEndArray();                jgen.writeEndObject();     }  }\n",
    "reg_date": "2021-10-12T12:05:37.000Z"
  },
  {
    "id": 3018,
    "keyword": null,
    "link": null,
    "title": " java serializer",
    "description": "public class someClass { //your lcode and logic... ObjectMapper mapper = new ObjectMapper(); SimpleModule module = new SimpleModule(); module.addSerializer(MyAwesomeClass.class, new MyAwesomeSerializer()); mapper.registerModule(module);  jsonNode = mapper.convertValue(myAwesomeObject, JsonNode.class); //... your code and logic }    public class MyAwesomeSerializer extends StdSerializer<MyAwesomeClass> {      public MyAwesomeSerializer() {         super(MyAwesomeClass.class);     }      @Override     public void serialize(MyAwesomeClass myAwesomeClass, JsonGenerator jgen, SerializerProvider provider) throws IOException {         ObjectMapper mapper = new ObjectMapper();          jgen.writeStartObject();         jgen.writeStringField(\"name\", myAwesomeClass.getName());         jgen.writeStringField(\"age\", myAwesomeClass.getAge());            jgen.writeArrayFieldStart(\"hobbies\");           for (Hobby hobby : myAwesomeClass.getHobbies()) {               jgen.writeObject(mapper.convertValue(hobby, JsonNode.class));           }           jgen.writeEndArray();                jgen.writeEndObject();     }  }\nimport java.io.Serializable;\n        serialize(empObj);\n",
    "reg_date": "2021-10-12T12:05:37.000Z"
  },
  {
    "id": 3019,
    "keyword": null,
    "link": null,
    "title": " java set example",
    "description": "//Creating HashSet  HashSet<String> set = new HashSet();   //adding elements   set.add(\"One\");     set.add(\"Two\");      //Removing element); set.remove(\"One\");   //Removing all the elements available in the set   set.clear();  \nimport java.util.*; public class SetDemo {    public static void main(String args[]) {        int count[] = {34, 22,10,60,30,22};       Set<Integer> set = new HashSet<Integer>();       try {          for(int i = 0; i < 5; i++) {             set.add(count[i]);          }          System.out.println(set);           TreeSet sortedSet = new TreeSet<Integer>(set);          System.out.println(\"The sorted list is:\");          System.out.println(sortedSet);           System.out.println(\"The First element of the set is: \"+ (Integer)sortedSet.first());          System.out.println(\"The last element of the set is: \"+ (Integer)sortedSet.last());       }       catch(Exception e) {}    } }   OUTPUT:                [34, 22, 10, 60, 30]               The sorted list is:               [10, 22, 30, 34, 60]               The First element of the set is: 10               The last element of the set is: 60\nimport java.util.*; public class SetDemo {    public static void main(String args[]) {        int count[] = {34, 22,10,60,30,22};       Set<Integer> set = new HashSet<Integer>();       try {          for(int i = 0; i < 5; i++) {             set.add(count[i]);          }          System.out.println(set);           TreeSet sortedSet = new TreeSet<Integer>(set);          System.out.println(\"The sorted list is:\");          System.out.println(sortedSet);           System.out.println(\"The First element of the set is: \"+ (Integer)sortedSet.first());          System.out.println(\"The last element of the set is: \"+ (Integer)sortedSet.last());       }       catch(Exception e) {}    } } \nA Set is a Collection that cannot contain duplicate elements.    The Set interface contains only methods inherited from Collection  and adds the restriction that duplicate elements are prohibited.\nimport java.util.Arrays; import java.util.HashSet; import java.util.Set; /* check a set size by set.size() */  public class MainClass {   public static void main(String[] a) {     String elements[] = { \"A\", \"B\", \"C\", \"D\", \"E\" };     Set set = new HashSet(Arrays.asList(elements));      System.out.println(set.size());   } } \ns1.containsAll(s2) &mdash; returns true if s2 is a subset of s1. (s2 is a subset of s1 if set s1 contains all of the elements in s2.) s1.addAll(s2) &mdash; transforms s1 into the union of s1 and s2. (The union of two sets is the set containing all of the elements contained in either set.) s1.retainAll(s2) &mdash; transforms s1 into the intersection of s1 and s2. (The intersection of two sets is the set containing only the elements common to both sets.) s1.removeAll(s2) &mdash; transforms s1 into the (asymmetric) set difference of s1 and s2. (For example, the set difference of s1 minus s2 is the set containing all of the elements found in s1 but not in s2.)\n",
    "reg_date": "2021-10-12T12:05:37.000Z"
  },
  {
    "id": 3020,
    "keyword": null,
    "link": null,
    "title": " java set foreach",
    "description": "List<String> items = new ArrayList<>(); items.add(\"A\"); items.add(\"B\"); items.add(\"C\"); items.add(\"D\"); items.add(\"E\");  //lambda //Output : A,B,C,D,E items.forEach(item->System.out.println(item));  //Output : C items.forEach(item->{ \tif(\"C\".equals(item)){ \t\tSystem.out.println(item); \t} });  //method reference //Output : A,B,C,D,E items.forEach(System.out::println);  //Stream and filter //Output : B items.stream() \t.filter(s->s.contains(\"B\")) \t.forEach(System.out::println);\nnames.forEach(name -> System.out.println(name));\nSet<String> set = new HashSet<String>();  //populate set  for (String s : set) {     System.out.println(s); } \n",
    "reg_date": "2021-10-12T12:05:38.000Z"
  },
  {
    "id": 3021,
    "keyword": null,
    "link": null,
    "title": " java set textview color",
    "description": "textview.setTextColor(this.getResources().getColor(R.color.orange)); \n",
    "reg_date": "2021-10-12T12:05:38.000Z"
  },
  {
    "id": 3022,
    "keyword": null,
    "link": null,
    "title": " java set textview style",
    "description": "textview.setTypeface(Typeface.DEFAULT_BOLD); \n",
    "reg_date": "2021-10-12T12:05:38.000Z"
  },
  {
    "id": 3023,
    "keyword": null,
    "link": null,
    "title": " java set value of arraylist",
    "description": "import java.util.ArrayList;  public class SetExample {   public static void main(String args[]) {     ArrayList<Integer> arraylist = new ArrayList<Integer>();     arraylist.add(1);     System.out.println(arrayList.get(0));     //1 \tarrayList.set(0, 2)     System.out.println(arrayList.get(0));     //2   } }\n",
    "reg_date": "2021-10-12T12:05:38.000Z"
  },
  {
    "id": 3024,
    "keyword": null,
    "link": null,
    "title": " java setinterval equivalent",
    "description": "new Timer().scheduleAtFixedRate(new TimerTask(){     @Override     public void run(){        Log.i(\"tag\", \"A Kiss every 5 seconds\");     } },0,5000); // SETINTERVAL \n// Param is optional, to run task on UI thread.      Handler handler = new Handler(Looper.getMainLooper()); Runnable runnable = new Runnable() {     @Override     public void run() {         // Do the task...         handler.postDelayed(this, milliseconds) // Optional, to repeat the task.     } }; handler.postDelayed(runnable, milliseconds);  // Stop a repeating task like this. handler.removeCallbacks(runnable);\n",
    "reg_date": "2021-10-12T12:05:38.000Z"
  },
  {
    "id": 3025,
    "keyword": null,
    "link": null,
    "title": " java sha256 hex digest",
    "description": "import org.apache.commons.codec.digest.DigestUtils;  String password = \"123456\"; String result = DigestUtils.sha256Hex(password);\nString password = \"123456\";  MessageDigest md = MessageDigest.getInstance(\"SHA-256\"); byte[]hashInBytes = md.digest(password.getBytes(StandardCharsets.UTF__8));  //bytes to hex StringBuilder sb = new StringBuilder(); for (byte b : hashInBytes) { \tsb.append(String.format(\"\u0002x\", b)); } System.out.println(sb.toString());\n",
    "reg_date": "2021-10-12T12:05:38.000Z"
  },
  {
    "id": 3026,
    "keyword": null,
    "link": null,
    "title": " java shortest if else statement",
    "description": " (myNumber == 12) ? \"true\" : \"false\"\n",
    "reg_date": "2021-10-12T12:05:38.000Z"
  },
  {
    "id": 3027,
    "keyword": null,
    "link": null,
    "title": " java shorthand if",
    "description": "//Clear example with good readabilty String var = \"Text\"; String shortHand = (var.equals(\"Text\") ? \"Returns this if true\" : \"Returns this if false\");  //Other example that is less readable int var = 9; int shortHand = var == 9 ? 1 : var++;  //Pseudo code // CONDITION ? returns when true : returns when false\nstatement ? true \t: \tfalse   ^\t\t  |\t ^\t\t\t  ^ condition |   (instruction)   \t\t  |  If the statement:     \t\t  |\tis true | is false --------------------------------------------------------------------------------  Example: int i = 10;  String out = i > 8 ? \"Bigger than Eight!\" : \"Smaller than Eight!\"; System.out.println(out); \nstatement ? true : false\n",
    "reg_date": "2021-10-12T12:05:38.000Z"
  },
  {
    "id": 3028,
    "keyword": null,
    "link": null,
    "title": " java simple jframe example",
    "description": "import javax.swing.*; import java.awt.FlowLayout; import java.awt.GridBagConstraints; import java.awt.GridBagLayout; import java.awt.Insets; import java.awt.event.*;   public class JFrameExample{           public static void main(String[] args){         // Create frame with title Registration Demo         JFrame frame= new JFrame();          frame.setTitle(\"JFrame Demo\");         frame.pack();         frame.setExtendedState(JFrame.MAXIMIZED_BOTH);         frame.setLocationRelativeTo(null);         frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);         frame.setVisible(true);     } } \n",
    "reg_date": "2021-10-12T12:05:39.000Z"
  },
  {
    "id": 3029,
    "keyword": null,
    "link": null,
    "title": " java simpledateformat example",
    "description": "String pattern = \"yyyy-MM-dd\"; SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern);  String date = simpleDateFormat.format(new Date()); System.out.println(date); \nString pattern = \"yyyy-MM-dd\"; SimpleDateFormat simpleDateFormat = new SimpleDateFormat(pattern); \n",
    "reg_date": "2021-10-12T12:05:39.000Z"
  },
  {
    "id": 3030,
    "keyword": null,
    "link": null,
    "title": " java singleton",
    "description": "public class SingletonClass {     private static final SingletonClass SINGLE_INSTANCE = new SingletonClass();     private SingletonClass() {}   public static SingletonClass getInstance() {       return SINGLE_INSTANCE;     } }\n- A private constructor - A static field containing its only instance - A static factory method for obtaining the instance  public final class ClassSingleton  {      private static ClassSingleton INSTANCE;     private String info = \"Initial info class\";          private ClassSingleton()  \t{             }          public static ClassSingleton getInstance()  \t{         if(INSTANCE == null)          {             INSTANCE = new ClassSingleton();         }            return INSTANCE;     }      // getters and setters }                        =============Usage============                           To use our ClassSingleton, we simply need to get the instance statically:  ClassSingleton classSingleton1 = ClassSingleton.getInstance();  System.out.println(classSingleton1.getInfo()); //Initial class info  ClassSingleton classSingleton2 = ClassSingleton.getInstance(); classSingleton2.setInfo(\"New class info\");  System.out.println(classSingleton1.getInfo()); //New class info System.out.println(classSingleton2.getInfo()); //New class info \npublic class SingletonOnDemand { \t \tprivate SingletonOnDemand () {} \tprivate static class Singleton { \t\tprivate static final SingletonOnDemand instance = new SingletonOnDemand(); \t} \t \tpublic static SingletonOnDemand getInstance () { \t\tSystem.out.println(\"create instance\"); \t\treturn Singleton.instance; \t} }\npublic final class SomeSingleton {    public static final SomeSingleton INSTANCE;     private SomeSingleton() {       INSTANCE = (SomeSingleton)this;       System.out.println(\"init complete\");    }     static {       new SomeSingleton();    } }\npublic final class ClassSingleton {      private static ClassSingleton INSTANCE;     private String info = \"Initial info class\";          private ClassSingleton() {             }          public static ClassSingleton getInstance() {         if(INSTANCE == null) {             INSTANCE = new ClassSingleton();         }                  return INSTANCE;     }      // getters and setters }\n",
    "reg_date": "2021-10-12T12:05:39.000Z"
  },
  {
    "id": 3031,
    "keyword": null,
    "link": null,
    "title": " java singleton implementation",
    "description": "public class SingletonClass {     private static final SingletonClass SINGLE_INSTANCE = new SingletonClass();     private SingletonClass() {}   public static SingletonClass getInstance() {       return SINGLE_INSTANCE;     } }\n- A private constructor - A static field containing its only instance - A static factory method for obtaining the instance  public final class ClassSingleton  {      private static ClassSingleton INSTANCE;     private String info = \"Initial info class\";          private ClassSingleton()  \t{             }          public static ClassSingleton getInstance()  \t{         if(INSTANCE == null)          {             INSTANCE = new ClassSingleton();         }            return INSTANCE;     }      // getters and setters }                        =============Usage============                           To use our ClassSingleton, we simply need to get the instance statically:  ClassSingleton classSingleton1 = ClassSingleton.getInstance();  System.out.println(classSingleton1.getInfo()); //Initial class info  ClassSingleton classSingleton2 = ClassSingleton.getInstance(); classSingleton2.setInfo(\"New class info\");  System.out.println(classSingleton1.getInfo()); //New class info System.out.println(classSingleton2.getInfo()); //New class info \npublic class SingletonOnDemand { \t \tprivate SingletonOnDemand () {} \tprivate static class Singleton { \t\tprivate static final SingletonOnDemand instance = new SingletonOnDemand(); \t} \t \tpublic static SingletonOnDemand getInstance () { \t\tSystem.out.println(\"create instance\"); \t\treturn Singleton.instance; \t} }\n",
    "reg_date": "2021-10-12T12:05:39.000Z"
  },
  {
    "id": 3032,
    "keyword": null,
    "link": null,
    "title": " java sleep in code",
    "description": "import java.util.concurrent.TimeUnit  TimeUnit.SECONDS.sleep(1); or TimeUnit.MINUTES.sleep(1);\n package com.journaldev.threads;  public class ThreadSleep {      public static void main(String[] args) throws InterruptedException {         long start = System.currentTimeMillis();         Thread.sleep(2000);         System.out.println(\"Sleep time in ms = \"+(System.currentTimeMillis()-start));              }  } \nThread.sleep(2000);\n",
    "reg_date": "2021-10-12T12:05:39.000Z"
  },
  {
    "id": 3033,
    "keyword": null,
    "link": null,
    "title": " java socket get ip address of client",
    "description": "String ip=(((InetSocketAddress) socket.getRemoteSocketAddress()).getAddress()).toString().replace(\"/\",\"\"); \n",
    "reg_date": "2021-10-12T12:05:39.000Z"
  },
  {
    "id": 3034,
    "keyword": null,
    "link": null,
    "title": " java socket timeout",
    "description": "Socket socket = new Socket();\t\t\t\t\t\t// 1000 milliseconds socket.connect(new InetSocketAddress(ipAddress, port), 1000);\n",
    "reg_date": "2021-10-12T12:05:39.000Z"
  },
  {
    "id": 3035,
    "keyword": null,
    "link": null,
    "title": " java solution milk the cow",
    "description": "import java.util.*; import java.io.*; /* ID: coconut LANG: JAVA TASK: milk2 */ public class milk2 {     static farmer[] farmers;     public static void main(String[] args) throws Exception  {         Scanner sc = new Scanner(new File(\"milk2.in\"));         farmers = new farmer[sc.nextInt()];             for (int i = 0; i < farmers.length; i++){             int temp = sc.nextInt();             int temp2 = sc.nextInt();             farmers[i] = new farmer(temp, temp2);         }                      sc.close();         //         int longestMilk = longestMilk();         int longestNoMilk = longestNoMilk();         //         PrintWriter out = new PrintWriter(new File(\"milk2.out\"));         out.print(longestMilk + \" \");         out.println(longestNoMilk + \"\");         out.close();     }     static int longestMilk() {         mergeSort(farmers);          int[] allInterval = new int[farmers.length];          int lastMAX = -1;          int lastIndex = 0;          for(int i = 0;i < farmers.length; i++) {                             if(lastMAX >= farmers[i].start) {                  if( farmers[i].end > lastMAX){                      allInterval[lastIndex] += farmers[i].end - lastMAX;                      lastMAX = farmers[i].end;                  }                                                     } else {                  //create a new interval                  allInterval[i] = farmers[i].end - farmers[i].start;                  lastMAX = farmers[i].end;                  lastIndex = i;              }                       }          lastMAX = -1;                   for(int i : allInterval){              if(i > lastMAX)                 lastMAX = i;          }          return lastMAX;                  }     static int longestNoMilk() {         int[] aMI = new int[farmers.length * 2];         Arrays.fill(aMI, -1);         int point = 0;         for(farmer i : farmers){             boolean newIn = true;             for(int j = 0; j < point; j+=2){                                    if(aMI[j] == i.start){                     if(aMI[j+1] < i.end)                          aMI[j+1] = i.end;                     newIn = false;                     break;                                                                 } else if (i.start > aMI[j] && i.start < aMI[j+1]) {                      if(i.end > aMI[j+1])                          aMI[j+1] = i.end;                     newIn = false;                      break;                  } else if (i.start < aMI[j] && i.end > aMI[j]){                      if(i.end > aMI[j+1])                         aMI[j+1] = i.end;                      newIn = false;                      break;                  }             }             if (newIn){                 aMI[point++] = i.start;                 aMI[point++] = i.end;             }                       }         //point -> smol         point = -1;         int biggestNoCow = 0;         for(int i = 1; i < aMI.length; i++){              if(point == -1)                 point = aMI[i];             else {                 int temp = Math.max(0, aMI[i] - point);                 if(temp >biggestNoCow)                     biggestNoCow = temp;                 point = -1;             }         }         return biggestNoCow;     }     static void mergeSort(farmer[] list){         if(list.length > 1) { \t\t\tfarmer[] firstHalf = new farmer[list.length/2]; \t\t\tfarmer[] secondHalf = new farmer[list.length - firstHalf.length]; \t\t\tSystem.arraycopy(list, 0, firstHalf, 0, firstHalf.length); \t\t\t \t\t\tSystem.arraycopy(list, firstHalf.length, secondHalf,0 , secondHalf.length); \t\t\tmergeSort(firstHalf); \t\t\tmergeSort(secondHalf); \t\t\tmerge0(firstHalf, secondHalf, list); \t\t}     }     static void merge0(farmer[] f, farmer[] s , farmer[] source ) { \t\tint c1 = 0,c2=0,c3=0; \t\twhile(c1 < f.length && c2 < s.length) { \t\t\tif (f[c1].start < s[c2].start) { \t\t\t\tsource[c3] = f[c1];\t \t\t\t\tc1++; \t\t\t} else { \t\t\t\tsource[c3] = s[c2]; \t\t\t\tc2++; \t\t\t} \t\t\tc3++; \t\t} \t\twhile (c1 < f.length) { \t\t\tsource[c3] = f[c1]; \t\t\tc1++; \t\t\tc3++; \t\t} \t\twhile (c2 < s.length) { \t\t\tsource[c3] = s[c2]; \t\t\tc2++; \t\t\tc3++; \t\t} \t} } class farmer{     public int start = 0;     public int end = 0;     public farmer(int start, int end){         this.start = start;         this.end = end;     } }    \n",
    "reg_date": "2021-10-12T12:05:39.000Z"
  },
  {
    "id": 3036,
    "keyword": null,
    "link": null,
    "title": " java sort 2d array",
    "description": "Arrays.sort(myArr, (a, b) -> a[0] - b[0]); \nArrays.sort(myArr,(double[] a,double[] b)->{                 //here multiple lines of code can be placed                 return a[0]-b[0];              });\nArrays.sort(contests, (a, b) -> Integer.compare(b[0],a[0])); //decreasing order      Arrays.sort(contests, (a, b) -> Integer.compare(a[0],b[0]); //increasing order \nArrays.sort(myArr, (a, b) -> a[0] - b[0]);\n",
    "reg_date": "2021-10-12T12:05:40.000Z"
  },
  {
    "id": 3037,
    "keyword": null,
    "link": null,
    "title": " java sort array descending",
    "description": "Integer[] cubes = new Integer[] { 8, 27, 64, 125, 256 }; Arrays.sort(cubes, Collections.reverseOrder());  Read more: https://www.java67.com/2016/07/how-to-sort-array-in-descending-order-in-java.html#ixzz6MX60xZLb\nArrays.sort();//this method is an inbuild function in java //to sort the array\n// A sample Java program to sort a subarray  // in descending order using Arrays.sort().  import java.util.Arrays;  import java.util.Collections;     public class SortExample  {      public static void main(String[] args)      {          // Note that we have Integer here instead of          // int[] as Collections.reverseOrder doesn't          // work for primitive types.          Integer[] arr = {13, 7, 6, 45, 21, 9, 2, 100};             // Sorts arr[] in descending order          Arrays.sort(arr, Collections.reverseOrder());             System.out.printf(\"Modified arr[] : %s\",                            Arrays.toString(arr));      }  }\n",
    "reg_date": "2021-10-12T12:05:40.000Z"
  },
  {
    "id": 3038,
    "keyword": null,
    "link": null,
    "title": " java sort list",
    "description": "List<Object> copy = new ArrayList<>(original_list); \nimport java. util. Arrays; Arrays. sort(array);\n//METHOD RETURNS VOID Collections.sort(arrayList);\nList<String> entries = new ArrayList<>(); entries = entries.stream().sorted().collect(Collectors.toList());\n",
    "reg_date": "2021-10-12T12:05:40.000Z"
  },
  {
    "id": 3039,
    "keyword": null,
    "link": null,
    "title": " java sort list alphabetically",
    "description": "import java.util.Scanner; public class SortNamesAlphabeticalOrder {    public static void main(String[] args)    {       int number;       String str;       Scanner sc1 = new Scanner(System.in);       System.out.println(\"Please enter number of strings: \");       number = sc1.nextInt();       String[] names = new String[number];       Scanner sc2 = new Scanner(System.in);       System.out.println(\"Enter all strings: \");       for(int a = 0; a < number; a++)       {          names[a] = sc2.nextLine();       }       for(int a = 0; a < number; a++)       {          for(int b = a + 1; b < number; b++)          {             // java alphabetical sort             if(names[a].compareTo(names[b]) > 0)             {                str = names[a];                names[a] = names[b];                names[b] = str;             }          }       }       System.out.println(\"After sorting names in an alphabetical order: \");       for(int a = 0; a < number - 1; a++)       {          System.out.println(names[a] + \", \");       }       System.out.print(names[number - 1]);       sc1.close();       sc2.close();    } }\nAssuming that those are Strings, use the convenient static method sort&hellip;   java.util.Collections.sort(listOfCountryNames)\n",
    "reg_date": "2021-10-12T12:05:40.000Z"
  },
  {
    "id": 3040,
    "keyword": null,
    "link": null,
    "title": " java sort method",
    "description": "import java. util. Arrays; Arrays. sort(array);\nHere&rsquo;s the java program to sort an array using Arrays.sort() method.  import java.util.Arrays; public class JavaArraySortMethod {    public static void main(String[] args)    {       String[] strGiven = {\"Great Barrier Reef\", \"Paris\", \"borabora\", \"Florence\",\"tokyo\", \"Cusco\"};       Arrays.sort(strGiven);       System.out.println(\"Output(case sensitive) : \" + Arrays.toString(strGiven));    } }\n// how to sort an array in java without using sort() method (ascending order) public class WithoutSortMethod {    public static void main(String[] args)    {       int temp;       int[] arrNumbers = {14, 8, 5, 54, 41, 10, 1, 500};       System.out.println(\"Before sort: \");       for(int num : arrNumbers)       {          System.out.println(num);       }       for(int a = 0; a < arrNumbers.length; a++)       {          for(int b = a + 1; b < arrNumbers.length; b++)          {             if(arrNumbers[a] > arrNumbers[b])             {                temp = arrNumbers[a];                arrNumbers[a] = arrNumbers[b];                arrNumbers[b] = temp;             }          }       }       System.out.println(\"---------------\");       System.out.println(\"After sort: \");       for(int num : arrNumbers)       {          System.out.println(num);       }    } }\n// how to sort an array in java without using sort method public class WithoutUsingSortMethod {    public static void main(String[] args)     {       int temp;       int[] arrNumbers = {14, 8, 5, 54, 41, 10, 1, 500};       System.out.println(\"Before sort: \");       for(int num : arrNumbers)       {          System.out.println(num);       }       for(int a = 0; a <= arrNumbers.length - 1; a++)       {          for(int b = 0; b <= arrNumbers.length - 2; b++)          {             if(arrNumbers[b] < arrNumbers[b + 1])             {                temp = arrNumbers[b];                arrNumbers[b] = arrNumbers[b + 1];                arrNumbers[b + 1] = temp;             }          }       }       System.out.println(\"---------------\");       System.out.println(\"After sort: \");       for(int num : arrNumbers)         {          System.out.println(num);       }    } }\n// how to sort an array of strings in descending import java.util.Arrays; import java.util.Collections; public class SortStringAlphabeticalOrder  {    public static void main(String[] args)     {       String[] strDesc = {\"Bear\",\"Fox\",\"Deer\",\"Cheetah\",\"Anteater\",\"Elephant\"};       System.out.println(\"Before sorting: \");       for(String string : strDesc)       {          System.out.println(string);       }       // arrays.sort       Arrays.sort(strDesc, Collections.reverseOrder());          System.out.println(\"-----------------------------------\");       System.out.println(\"Sorting string array in descending or reverse order: \");       for(String string : strDesc)       {          System.out.println(string);       }    } }\nArrays.sort();//this method is an inbuild function in java //to sort the array\n",
    "reg_date": "2021-10-12T12:05:40.000Z"
  },
  {
    "id": 3041,
    "keyword": null,
    "link": null,
    "title": " java sort string characters alphabetically",
    "description": "// java sort string characters alphabetically import java.util.Arrays; public class CharactersAlphabetically {    public static void main(String[] args)    {       String strInput = \"flowerbrackets\";       // converting string to char array       char[] ch = strInput.toCharArray();       // sorting char array       Arrays.sort(ch);       // converting char array to string       String strSorted = String.valueOf(ch);       System.out.println(\"sort string characters alphabetically: \" + strSorted);    } }\nimport java.util.Scanner; public class SortNamesAlphabeticalOrder {    public static void main(String[] args)    {       int number;       String str;       Scanner sc1 = new Scanner(System.in);       System.out.println(\"Please enter number of strings: \");       number = sc1.nextInt();       String[] names = new String[number];       Scanner sc2 = new Scanner(System.in);       System.out.println(\"Enter all strings: \");       for(int a = 0; a < number; a++)       {          names[a] = sc2.nextLine();       }       for(int a = 0; a < number; a++)       {          for(int b = a + 1; b < number; b++)          {             // java alphabetical sort             if(names[a].compareTo(names[b]) > 0)             {                str = names[a];                names[a] = names[b];                names[b] = str;             }          }       }       System.out.println(\"After sorting names in an alphabetical order: \");       for(int a = 0; a < number - 1; a++)       {          System.out.println(names[a] + \", \");       }       System.out.print(names[number - 1]);       sc1.close();       sc2.close();    } }\nAssuming that those are Strings, use the convenient static method sort&hellip;   java.util.Collections.sort(listOfCountryNames)\n// Arrange words of a sentence in alphabetical order in java import java.util.Set; import java.util.StringTokenizer; import java.util.TreeSet; public class ArrangeInAlphabeticalOrder  {    public static void main(String[] args)     {       Set set = new TreeSet();       String strInput = \"hi all welcome to flower brackets blog\";       System.out.println(\"Before arranging sentence in alphabetical order: \" + strInput);       StringTokenizer strToken = new StringTokenizer(strInput,\" \");       while(strToken.hasMoreElements())       {          set.add(strToken.nextElement());       }       System.out.println(\"After arranging sentence in alphabetical order: \" + set);    } }\n",
    "reg_date": "2021-10-12T12:05:40.000Z"
  },
  {
    "id": 3042,
    "keyword": null,
    "link": null,
    "title": " java split array into two",
    "description": "String[] array = {\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"}; String[] a = Arrays.copyOfRange(array, 0, 4); //<- (targetArray, start, to) String[] b = Arrays.copyOfRange(array, 4, array.length);  Output: a: 0,1,2,3 b: 4,5,6,7,8,9\n",
    "reg_date": "2021-10-12T12:05:40.000Z"
  },
  {
    "id": 3043,
    "keyword": null,
    "link": null,
    "title": " java split for multiple characters",
    "description": "String input = \"Hi,X How-how are:any you?\"; String[] parts = input.split(\"[\\\\W]\");\n",
    "reg_date": "2021-10-12T12:05:40.000Z"
  },
  {
    "id": 3044,
    "keyword": null,
    "link": null,
    "title": " java split string",
    "description": "String string = \"004-034556\"; String[] parts = string.split(\"-\"); String part1 = parts[0]; // 004 String part2 = parts[1]; // 034556 \nString yourString = \"Hello/Test/World\"; String[] strings = yourString.split(\"/\" /*<- Regex */);   Output: strings = [Hello, Test, World]\nstring phrase = \"The quick brown    fox     jumps over the lazy dog.\"; string[] words = phrase.Split(' ');  foreach (var word in words) {     System.Console.WriteLine($\"<{word}>\"); } \n//Java program to show the use of Split method (Java 8 and above) public class SplitString{    public static void main(String[] args)    {     //Initialize the String which needs to be split     String str = \"Enlighter\";          //Use the Split method and store the array of Strings returned in a String array.     String[] arr = str.split(\"\");          //Printing the characters using for-each loop     for(String character : arr)       System.out.print(char);\npublic class SplitExample2 {      public static void main(String args[])      {          String str = \"My name is Chaitanya\";         //regular expression is a whitespace here          String[] arr = str.split(\" \");             for (String s : arr)              System.out.println(s);      }  }\nconst str = 'The quick brown fox jumps over the lazy dog.'; console.log(str.split('')); console.log(str.split(' ')); console.log(str.split('ox')); > Array [\"T\", \"h\", \"e\", \" \", \"q\", \"u\", \"i\", \"c\", \"k\", \" \", \"b\", \"r\", \"o\", \"w\", \"n\", \" \", \"f\", \"o\", \"x\", \" \", \"j\", \"u\", \"m\", \"p\", \"s\", \" \", \"o\", \"v\", \"e\", \"r\", \" \", \"t\", \"h\", \"e\", \" \", \"l\", \"a\", \"z\", \"y\", \" \", \"d\", \"o\", \"g\", \".\"]  > Array [\"The\", \"quick\", \"brown\", \"fox\", \"jumps\", \"over\", \"the\", \"lazy\", \"dog.\"]  > Array [\"The quick brown f\", \" jumps over the lazy dog.\"]\n",
    "reg_date": "2021-10-12T12:05:40.000Z"
  },
  {
    "id": 3045,
    "keyword": null,
    "link": null,
    "title": " java split string on two or more spaces except for words in quotes",
    "description": "[Location, \"Welcome  to india\", Bangalore, Channai, \"IT city\", Mysore]\nString str = \"Location \\\"Welcome  to india\\\" Bangalore \" +              \"Channai \\\"IT city\\\"  Mysore\";  List<String> list = new ArrayList<String>(); Matcher m = Pattern.compile(\"([^\\\"]\\\\S*|\\\".+?\\\")\\\\s*\").matcher(str); while (m.find())     list.add(m.group(1)); // Add .replace(\"\\\"\", \"\") to remove surrounding quotes.   System.out.println(list);\n",
    "reg_date": "2021-10-12T12:05:41.000Z"
  },
  {
    "id": 3046,
    "keyword": null,
    "link": null,
    "title": " java spring boot json deserialize date inaccurate",
    "description": "@JsonFormat(pattern = \"yyyy-MM-dd'T'HH:mm:ss\", timezone = \"Europe/Madrid\")\n",
    "reg_date": "2021-10-12T12:05:42.000Z"
  },
  {
    "id": 3047,
    "keyword": null,
    "link": null,
    "title": " java spring username encode and decode",
    "description": "private static final String ALGO = \"AES\"; private static final byte[] keyValue = new byte[] { 'T', 'E', 'S', 'T' };   /**  * Encrypt a string using AES encryption algorithm.  *  * @param pwd the password to be encrypted  * @return the encrypted string  */ public static String encrypt(String pwd) {     String encodedPwd = \"\";     try {         Key key = generateKey();         Cipher c = Cipher.getInstance(ALGO);         c.init(Cipher.ENCRYPT_MODE, key);         byte[] encVal = c.doFinal(pwd.getBytes());         encodedPwd = Base64.getEncoder().encodeToString(encVal);      } catch (Exception e) {          e.printStackTrace();     }     return encodedPwd;  }  /**  * Decrypt a string with AES encryption algorithm.  *  * @param encryptedData the data to be decrypted  * @return the decrypted string  */ public static String decrypt(String encryptedData) {     String decodedPWD = \"\";     try {         Key key = generateKey();         Cipher c = Cipher.getInstance(ALGO);         c.init(Cipher.DECRYPT_MODE, key);         byte[] decordedValue = Base64.getDecoder().decode(encryptedData);         byte[] decValue = c.doFinal(decordedValue);         decodedPWD = new String(decValue);      } catch (Exception e) {      }     return decodedPWD; }  /**  * Generate a new encryption key.  */ private static Key generateKey() {     SecretKeySpec key = new SecretKeySpec(keyValue, ALGO);     return key; } \n",
    "reg_date": "2021-10-12T12:05:42.000Z"
  },
  {
    "id": 3048,
    "keyword": null,
    "link": null,
    "title": " java sql connection example",
    "description": "import java.sql.*;  class MySQLConnection{  public static final String DBNAME = \"name_of_the_database\";  // Like \"testDB\"  /** JDBC driver name and database URL */ public static final String JDBC_DRIVER = \"com.mysql.jdbc.Driver\";  /** Gives access to all Databases */ static final String ALL_DBS_URL = \"jdbc:mysql://localhost/?allowPublicKeyRetrieval=true&autoReconnect=true&useSSL=false\";  /** Gives access to a given DB */ static final String GIVEN_DB_URL = \"jdbc:mysql://localhost/\"+DBNAME+\"?allowPublicKeyRetrieval=true&autoReconnect=true&useSSL=false\";  // Below are the USERNAME and PASSWORD used in mysql public static final String USER = \"myUserName\"; public static final String PASS = \"myGoodPassWord\";  /** A variable for connecting to MySQL Server */ public static Connection conn = null;  /** A variable for Preparing Statements */ public static PreparedStatement ps = null;  public static void main(String[] args)  \t\t\tthrows ClassNotFoundException, SQLException { \t\t// Register JDBC driver \t\tClass.forName(JDBC_DRIVER); \t\t \t\t// Open a connection with MySQL server \t\tSystem.out.println(\"Connecting to all Databases path...\"); \t\tconn = DriverManager.getConnection(ALL_DBS_URL, USER, PASS); \t\tSystem.out.println(\"Connected to all Databases!\"); \t\t \t\t// Test if there is the db in MySQL Server \t\t// if not then create one \t\tSystem.out.println(\"Testing if \"+DBNAME+\" exists...\"); \t\tps = conn.prepareStatement(\"CREATE DATABASE IF NOT EXISTS \"+DBNAME+\";\"); \t\tps.executeUpdate(); \t\t// Now db exists for sure! \t\t \t\t// Open a connection with given DB \t\tSystem.out.println(\"Connecting to \"+DBNAME+\" path...\"); \t\tconn = DriverManager.getConnection(GIVEN_DB_URL, USER, PASS); \t\tSystem.out.println(\"Connected to \"+DBNAME+\"!\");   \t\t   \t\t// then you can do all sort of queries that you want to do } }\npublic void commit() throws SQLException {   getConn().commit();   if (logger.isTraceEnabled()) {     logger.trace(\"Batch executor commit \" + idx.get() + \" rows\");   }   idx.set(0); } \n",
    "reg_date": "2021-10-12T12:05:42.000Z"
  },
  {
    "id": 3049,
    "keyword": null,
    "link": null,
    "title": " java sql date format",
    "description": "// This is an example to get the current date in java, with an sql date format  /* I am using the imports below: import java.time.LocalDateTime import java.time.format.DateTimeFormatter */  DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");   LocalDateTime now = LocalDateTime.now(); String dateTime = dtf.format(now);  // the dateTime variable is now ready to be inserted in mysql // insert it as a String and it will be inserted in mysql as a dateTime\n",
    "reg_date": "2021-10-12T12:05:42.000Z"
  },
  {
    "id": 3050,
    "keyword": null,
    "link": null,
    "title": " java square a number",
    "description": "//To square: int i = 2; int square = Math.pow(i, 2);  //To cube: int i = 2; int cube = Math.pow(i, 3);  //To nth power: int i = 2; int nthPower = Math.pow(i, 4);\n",
    "reg_date": "2021-10-12T12:05:42.000Z"
  },
  {
    "id": 3051,
    "keyword": null,
    "link": null,
    "title": " java srting array to string",
    "description": "Arrays.toString(charArr);\npublic class ArrayOfStrings {    public static void main(String args[]) {       String stringArray[] = {\"Hello \", \" how\", \" are\", \" you\", \" welcome\", \" to\", \" Tutorialspoint\"};       StringBuffer sb = new StringBuffer();       for(int i = 0; i < stringArray.length; i++) {          sb.append(stringArray[i]);       }       String str = sb.toString();       System.out.println(str);    } }\n",
    "reg_date": "2021-10-12T12:05:43.000Z"
  },
  {
    "id": 3052,
    "keyword": null,
    "link": null,
    "title": " java ssl",
    "description": "String host = getHost(...);Integer port = getPort(...);SSLSocketFactory sslsocketfactory = SSLSocketFactory.getDefault();SSLSocket sslsocket = (SSLSocket) sslsocketfactory  .createSocket(host, port);InputStream in = sslsocket.getInputStream();OutputStream out = sslsocket.getOutputStream(); out.write(1);while (in.available() > 0) {    System.out.print(in.read());} System.out.println(\"Secured connection performed successfully\"); \n",
    "reg_date": "2021-10-12T12:05:43.000Z"
  },
  {
    "id": 3053,
    "keyword": null,
    "link": null,
    "title": " java stack",
    "description": "// construct with non-primative elements only! Stack<String> stack = new Stack<String>();  // to add a value to the top of the stack: stack.push(\"Hello\");  // to return and remove a value from the top: String top = stack.pop();  // to return a value without removing it: String peek = stack.peek();\nimport java.util.Stack<E>; Stack<Integer> myStack = new Stack<Integer>(); myStack.push(1); myStack.pop(); myStack.peek(); myStack.empty(); // True if stack is empty\nimport java.util.Stack; class Main {     public static void main(String[] args) {         Stack<String> animals= new Stack<>();         // Add elements to Stack         animals.push(\"Dog\");         animals.push(\"Horse\");         // Remove element from Stack       \tanimals.pop();       \t// Access element from top of Stack       \tanimals.peek();     } }\n// Java code for stack implementation   import java.io.*;  import java.util.*;   class Test  {  \t// Pushing element on the top of the stack  \tstatic void stack_push(Stack<Integer> stack)  \t{  \t\tfor(int i = 0; i < 5; i++)  \t\t{  \t\t\tstack.push(i);  \t\t}  \t}  \t \t// Popping element from the top of the stack  \tstatic void stack_pop(Stack<Integer> stack)  \t{  \t\tSystem.out.println(\"Pop Operation:\");   \t\tfor(int i = 0; i < 5; i++)  \t\t{  \t\t\tInteger y = (Integer) stack.pop();  \t\t\tSystem.out.println(y);  \t\t}  \t}   \t// Displaying element on the top of the stack  \tstatic void stack_peek(Stack<Integer> stack)  \t{  \t\tInteger element = (Integer) stack.peek();  \t\tSystem.out.println(\"Element on stack top: \" + element);  \t}  \t \t// Searching element in the stack  \tstatic void stack_search(Stack<Integer> stack, int element)  \t{  \t\tInteger pos = (Integer) stack.search(element);   \t\tif(pos == -1)  \t\t\tSystem.out.println(\"Element not found\");  \t\telse \t\t\tSystem.out.println(\"Element is found at position: \" + pos);  \t}    \tpublic static void main (String[] args)  \t{  \t\tStack<Integer> stack = new Stack<Integer>();   \t\tstack_push(stack);  \t\tstack_pop(stack);  \t\tstack_push(stack);  \t\tstack_peek(stack);  \t\tstack_search(stack, 2);  \t\tstack_search(stack, 6);  \t}  }  \n",
    "reg_date": "2021-10-12T12:05:43.000Z"
  },
  {
    "id": 3054,
    "keyword": null,
    "link": null,
    "title": " java stack methods",
    "description": "// construct with non-primative elements only! Stack<String> stack = new Stack<String>();  // to add a value to the top of the stack: stack.push(\"Hello\");  // to return and remove a value from the top: String top = stack.pop();  // to return a value without removing it: String peek = stack.peek();\nimport java.util.Stack<E>; Stack<Integer> myStack = new Stack<Integer>(); myStack.push(1); myStack.pop(); myStack.peek(); myStack.empty(); // True if stack is empty\nimport java.util.Stack; class Main {     public static void main(String[] args) {         Stack<String> animals= new Stack<>();         // Add elements to Stack         animals.push(\"Dog\");         animals.push(\"Horse\");         // Remove element from Stack       \tanimals.pop();       \t// Access element from top of Stack       \tanimals.peek();     } }\n// Java code for stack implementation   import java.io.*;  import java.util.*;   class Test  {  \t// Pushing element on the top of the stack  \tstatic void stack_push(Stack<Integer> stack)  \t{  \t\tfor(int i = 0; i < 5; i++)  \t\t{  \t\t\tstack.push(i);  \t\t}  \t}  \t \t// Popping element from the top of the stack  \tstatic void stack_pop(Stack<Integer> stack)  \t{  \t\tSystem.out.println(\"Pop Operation:\");   \t\tfor(int i = 0; i < 5; i++)  \t\t{  \t\t\tInteger y = (Integer) stack.pop();  \t\t\tSystem.out.println(y);  \t\t}  \t}   \t// Displaying element on the top of the stack  \tstatic void stack_peek(Stack<Integer> stack)  \t{  \t\tInteger element = (Integer) stack.peek();  \t\tSystem.out.println(\"Element on stack top: \" + element);  \t}  \t \t// Searching element in the stack  \tstatic void stack_search(Stack<Integer> stack, int element)  \t{  \t\tInteger pos = (Integer) stack.search(element);   \t\tif(pos == -1)  \t\t\tSystem.out.println(\"Element not found\");  \t\telse \t\t\tSystem.out.println(\"Element is found at position: \" + pos);  \t}    \tpublic static void main (String[] args)  \t{  \t\tStack<Integer> stack = new Stack<Integer>();   \t\tstack_push(stack);  \t\tstack_pop(stack);  \t\tstack_push(stack);  \t\tstack_peek(stack);  \t\tstack_search(stack, 2);  \t\tstack_search(stack, 6);  \t}  }  \n",
    "reg_date": "2021-10-12T12:05:43.000Z"
  },
  {
    "id": 3055,
    "keyword": null,
    "link": null,
    "title": " java stdin",
    "description": "public static void main(String[] args) {         StdOut.print(\"Type an int: \");         int a = StdIn.readInt();         StdOut.println(\"Your int was: \" + a);         StdOut.println();     } }\n",
    "reg_date": "2021-10-12T12:05:43.000Z"
  },
  {
    "id": 3056,
    "keyword": null,
    "link": null,
    "title": " java stdin and stdout ii",
    "description": "//for java8   import java.util.Scanner;  public class Solution {     public static void main(String[] args) {         /* Read input */         Scanner scan = new Scanner(System.in);         int i    = scan.nextInt();         double d = scan.nextDouble();         scan.nextLine();              // gets rid of the pesky newline         String s = scan.nextLine();         scan.close();                  /* Print output */         System.out.println(\"String: \" + s);         System.out.println(\"Double: \" + d);         System.out.println(\"Int: \" + i);     } } \n",
    "reg_date": "2021-10-12T12:05:44.000Z"
  },
  {
    "id": 3057,
    "keyword": null,
    "link": null,
    "title": " java stop script",
    "description": "public void onClick() {     if(condition == true) {         return;     }     string.setText(\"This string should not change if condition = true\"); } \n",
    "reg_date": "2021-10-12T12:05:44.000Z"
  },
  {
    "id": 3058,
    "keyword": null,
    "link": null,
    "title": " java stream().filter()",
    "description": "NowJava8.java package com.ricky.java8;  import java.util.Arrays; import java.util.List; import java.util.stream.Collectors;  public class NowJava8 {      public static void main(String[] args) {          List<String> lines = Arrays.asList(\"spring\", \"node\", \"ricky\");          List<String> result = lines.stream()                // convert list to stream                 .filter(line -> !\"ricky\".equals(line))     // we dont like ricky                 .collect(Collectors.toList());              // collect the output and convert streams to a List          result.forEach(System.out::println);                //output : spring, node      }  }12345678910111213141516171819202122\n",
    "reg_date": "2021-10-12T12:05:44.000Z"
  },
  {
    "id": 3059,
    "keyword": null,
    "link": null,
    "title": " java stream and filter",
    "description": "List<String> result = lines.stream()                                .filter(line -> \"theLineIWant\".equals(line))                 .collect(Collectors.toList());\nitems.stream() \t.filter(s->s.contains(\"B\")) \t.forEach(System.out::println);\n",
    "reg_date": "2021-10-12T12:05:44.000Z"
  },
  {
    "id": 3060,
    "keyword": null,
    "link": null,
    "title": " java stream collect to string",
    "description": "List<Integer> numbers = Arrays.asList( 4, 8, 15, 16, 23, 42 ); return numbers.stream()         .map( n -> n.toString() )         .collect( Collectors.joining( \",\" ) );\n",
    "reg_date": "2021-10-12T12:05:44.000Z"
  },
  {
    "id": 3061,
    "keyword": null,
    "link": null,
    "title": " java stream filter",
    "description": "List<String> result = lines.stream()                                .filter(line -> \"theLineIWant\".equals(line))                 .collect(Collectors.toList());\nNowJava8.java package com.ricky.java8;  import java.util.Arrays; import java.util.List; import java.util.stream.Collectors;  public class NowJava8 {      public static void main(String[] args) {          List<String> lines = Arrays.asList(\"spring\", \"node\", \"ricky\");          List<String> result = lines.stream()                // convert list to stream                 .filter(line -> !\"ricky\".equals(line))     // we dont like ricky                 .collect(Collectors.toList());              // collect the output and convert streams to a List          result.forEach(System.out::println);                //output : spring, node      }  }12345678910111213141516171819202122\nitems.stream() \t.filter(s->s.contains(\"B\")) \t.forEach(System.out::println);\npublic class StreamBuilders  {      public static void main(String[] args)      {          Stream<Integer> stream = Stream.of( new Integer[]{1,2,3,4,5,6,7,8,9} );          stream.forEach(p -> System.out.println(p));      } } \n",
    "reg_date": "2021-10-12T12:05:45.000Z"
  },
  {
    "id": 3062,
    "keyword": null,
    "link": null,
    "title": " java stream find specific element",
    "description": "Customer james = customers.stream()   .filter(customer -> \"James\".equals(customer.getName()))   .findAny()   .orElse(null);\n",
    "reg_date": "2021-10-12T12:05:45.000Z"
  },
  {
    "id": 3063,
    "keyword": null,
    "link": null,
    "title": " java stream get list of one field",
    "description": "List<String> names =      personList.stream()               .map(Person::getName)               .collect(Collectors.toList()); \n",
    "reg_date": "2021-10-12T12:05:45.000Z"
  },
  {
    "id": 3064,
    "keyword": null,
    "link": null,
    "title": " java stream limit items",
    "description": "int maxNumberOfElements = 10;  list.stream()     .limit(maxNumberOfElements); \n",
    "reg_date": "2021-10-12T12:05:45.000Z"
  },
  {
    "id": 3065,
    "keyword": null,
    "link": null,
    "title": " java stream order by property",
    "description": "List<String> sorted = original.stream().sorted((o1,o2)-> o1.compareTo(o2)).collect(Collectors.toList());\nList<String> sorted = original.stream().sorted().collect(Collectors.toList());\n",
    "reg_date": "2021-10-12T12:05:45.000Z"
  },
  {
    "id": 3066,
    "keyword": null,
    "link": null,
    "title": " java stream remove",
    "description": "// there is no meaning to remove an item from a stream // It only make sense to remove an item from a collection. // Internally, removeIf uses an Iterator to iterate over the list and match  // the elements using the predicate itemList.removeIf(isQualified);\n",
    "reg_date": "2021-10-12T12:05:46.000Z"
  },
  {
    "id": 3067,
    "keyword": null,
    "link": null,
    "title": " java stream skip first item",
    "description": "int numberOfElementsToSkip = 5;  list.stream()     .skip(numberOfElementsToSkip);\n",
    "reg_date": "2021-10-12T12:05:46.000Z"
  },
  {
    "id": 3068,
    "keyword": null,
    "link": null,
    "title": " java stream sort",
    "description": "List<String> sorted = original.stream().sorted().collect(Collectors.toList());\nCollator coll = Collator.getInstance(new Locale(\"tr\",\"TR\")); coll.setStrength(Collator.PRIMARY); List<AClass> sorted = names.stream()                            .sorted(Comparator.comparing(AClass::getName,coll))                            .collect(Collectors.toList());\n",
    "reg_date": "2021-10-12T12:05:46.000Z"
  },
  {
    "id": 3069,
    "keyword": null,
    "link": null,
    "title": " java stream sorted reverse",
    "description": "list.stream().sorted(Comparator.reverseOrder()) \n",
    "reg_date": "2021-10-12T12:05:46.000Z"
  },
  {
    "id": 3070,
    "keyword": null,
    "link": null,
    "title": " java stream to list",
    "description": "List<String> temp = toCheck.stream().map((a -> a.getFoo())).collect(Collectors.toList());\n.collect(Collectors.toList());\n",
    "reg_date": "2021-10-12T12:05:46.000Z"
  },
  {
    "id": 3071,
    "keyword": null,
    "link": null,
    "title": " java stream write to file",
    "description": "@Test public void givenWritingStringToFile_whenUsingPrintWriter_thenCorrect()    throws IOException {     FileWriter fileWriter = new FileWriter(fileName);     PrintWriter printWriter = new PrintWriter(fileWriter);     printWriter.print(\"Some String\");     printWriter.printf(\"Product name is %s and its price is %d $\", \"iPhone\", 1000);     printWriter.close(); }\n",
    "reg_date": "2021-10-12T12:05:46.000Z"
  },
  {
    "id": 3072,
    "keyword": null,
    "link": null,
    "title": " java strin to int",
    "description": "String myString = \"1234\"; int foo = Integer.parseInt(myString);\n",
    "reg_date": "2021-10-12T12:05:47.000Z"
  },
  {
    "id": 3073,
    "keyword": null,
    "link": null,
    "title": " java string  builder",
    "description": "StringBuilder stringBuilder = new StringBuilder();  stringBuilder.append(\"string\");  System.out.println(\"String = \" + stringBuilder.toString());\n",
    "reg_date": "2021-10-12T12:05:47.000Z"
  },
  {
    "id": 3074,
    "keyword": null,
    "link": null,
    "title": " java string array",
    "description": "m(new String[]{\"blah\", \"hey\", \"yo\"});\n// array of 5 strings String[] arr = new String[5]  arr[0] = \"Happy\"; arr[1] = \"Birthday\"; arr[2] = \"To\"; // etc...\n//method 1 int[] age = new int[3];         age[0] = 1;         age[1] = 3;         age[2] = 6;          for (int i=0; i < 3; i++)             System.out.println(age[i]);  //method 2         int[] num = {3,3,5};         //int num[] = {3,3,5}; also works the same          System.out.println(num[0]);\nint[] intArray = new int[20]; String[] cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\nstring[] abc=new string[]{\"hai\",\"hello\"}  \nString[] errorSoon = {\"Hello\", \"World\"}; \n",
    "reg_date": "2021-10-12T12:05:47.000Z"
  },
  {
    "id": 3075,
    "keyword": null,
    "link": null,
    "title": " java string array add element",
    "description": "ArrayList<String> ar = new ArrayList<String>(); String s1 =\"Test1\"; String s2 =\"Test2\"; String s3 =\"Test3\"; ar.add(s1); ar.add(s2); ar.add(s3);  String s4 =\"Test4\"; ar.add(s4); \nArrays in Java have a defined size, you cannot change it later by adding or removing elements (you can read some basics here). Instead, use a List : ArrayList<String> mylist = new ArrayList<String>(); mylist. add(mystring); //this adds an element to the list. \n// A better solution would be to use an ArrayList which can grow as you need it.  // The method ArrayList.toArray( T[] a )  // gives you back your array if you need it in this form.  List<String> where = new ArrayList<String>(); where.add(element); where.add(element);  // If you need to convert it to a simple array...  String[] simpleArray = new String[ where.size() ]; where.toArray( simpleArray );\nArrayList<String> ar = new ArrayList<String>(); String s1 =\"Test1\"; String s2 =\"Test2\"; String s3 =\"Test3\"; ar.add(s1); ar.add(s2); ar.add(s3);  String s4 =\"Test4\"; ar.add(s4);\nin java, once you declared an array you cannot change its size. so that adding an element to the array is not possible. you can declare an arraylist, which is the same as array but its resizable. meaning that you can add or remove at any time and as much you want. for example: ArrayList<String> languages = new ArrayList<String>();  languages.add(\"PHP\"); languages.add(\"JAVA\"); languages.add(\"C#\"); ArrayList<int> numbers = new ArrayList<int>();  numbers.add(9); numbers.add(14); numbers.add(2);\n",
    "reg_date": "2021-10-12T12:05:47.000Z"
  },
  {
    "id": 3076,
    "keyword": null,
    "link": null,
    "title": " java string array to arraylist",
    "description": "new ArrayList<>(Arrays.asList(array));\nArrayList<String> al = new ArrayList<String>();       al.add(\"Hello\");       al.add(\"Wor\");       al.add(\"ld\");       StringBuffer sb = new StringBuffer();              for (String s : al) {          sb.append(s);          sb.append(\" \");       }       String str = sb.toString();       System.out.println(str);//\"Hello wor ld\" \nString [] strings = new String [] {\"1\", \"2\" }; List<String> stringList = new ArrayList<String>(Arrays.asList(strings)); //new ArrayList is only needed if you absolutely need an ArrayList \nnew ArrayList( Arrays.asList( new String[]{\"abc\", \"def\"} ) );\n",
    "reg_date": "2021-10-12T12:05:48.000Z"
  },
  {
    "id": 3077,
    "keyword": null,
    "link": null,
    "title": " java string array to one string",
    "description": "Arrays.toString(charArr);\npublic class ArrayOfStrings {    public static void main(String args[]) {       String stringArray[] = {\"Hello \", \" how\", \" are\", \" you\", \" welcome\", \" to\", \" Tutorialspoint\"};       StringBuffer sb = new StringBuffer();       for(int i = 0; i < stringArray.length; i++) {          sb.append(stringArray[i]);       }       String str = sb.toString();       System.out.println(str);    } }\n",
    "reg_date": "2021-10-12T12:05:48.000Z"
  },
  {
    "id": 3078,
    "keyword": null,
    "link": null,
    "title": " java string contains at beginning",
    "description": "public class StringExample  {     public static void main(String[] args)      {         String blogName = \"howtodoinjava.com\";                   System.out.println( blogName.startsWith(\"how\") );               //true                   System.out.println( \"howtodoinjava.com\".startsWith(\"howto\") );  //true                   System.out.println( \"howtodoinjava.com\".startsWith(\"hello\") );  //false     } } \npublic class StringExample  {     public static void main(String[] args)      {         String blogName = \"howtodoinjava.com\";                   blogName.startsWith(null);     } } \n",
    "reg_date": "2021-10-12T12:05:48.000Z"
  },
  {
    "id": 3079,
    "keyword": null,
    "link": null,
    "title": " java string contains char",
    "description": "String s1 = \"My name is GFG\";     // prints true  System.out.println(s1.contains(\"GFG\"));     // prints false  System.out.println(s1.contains(\"geeks\"));      \nif (string.contains(character)\nstring.indexOf('a')\n javaCopyimport java.util.*; import java.lang.*; import java.io.*;  public class Example1 {     public static void main(String[] args) {         String str = \"Character\";         System.out.println(str.contains(\"h\"));         System.out.println(str.contains(\"Char\"));         System.out.println(str.contains(\"ac\"));         System.out.println(str.contains(\"v\"));         System.out.println(str.contains(\"vl\"));      } }   \n /*     This method returns true if the given string contains     the char n. It is necessary due to the     obsolescence of some compilers, which requires us     to write our own contains method.     */     public static boolean contains_char (String main, char secondary)     {         boolean contains_result = false;         for (int i = 0 ; i < input.length () ; i++)         {             if (input.charAt (i) == secondary)             {                 contains_result = true;                 break;             }         }         return contains_result;     }  /* for two chars: */ public static boolean contains_dualchar (String main, String secondary)     {         boolean contains_result = false;         for (int i = 0 ; i < input.length () ; i++)         {             if (input.charAt (i) == secondary.charAt (0))             {                 if (input.charAt (i + 1) == secondary.charAt (1))                 {                     contains_result = true;                     break;                 }             }         }         return contains_result;     } \n",
    "reg_date": "2021-10-12T12:05:48.000Z"
  },
  {
    "id": 3080,
    "keyword": null,
    "link": null,
    "title": " java string count",
    "description": "String line = \"Your string here\"; String stringToCount = \"?\"; int count = line.length() - line.replace(stringToCount, \"\").length();\npublic static void main(String[] args) { \t\tint wordCount = 0; \t\tString word = \"hill\"; \t\tfor (char letter = 'a'; letter <= 'z'; letter++) { \t\t\tfor (int i = 0; i < word.length(); i++) { \t\t\t\tif (word.charAt(i) == letter) { \t\t\t\t\twordCount++; \t\t\t\t} \t\t\t} \t\t\tif (wordCount > 0) { \t\t\t\tSystem.out.println(letter + \"=\" + wordCount); \t\t\t\twordCount = 0; \t\t\t} \t\t} \t}\npublic class StringNumberOfOccurenceLetter {      private static int countOccurences(String word, char character){          int count = 0;         for (int i = 0; i < word.length() ; i++) {             if (word.charAt(i)==character){                 count++;             }         }         return count;      }          public static void main(String[] args) {           int count = countOccurences(\"dddssad\", 'a');     }   }\n",
    "reg_date": "2021-10-12T12:05:49.000Z"
  },
  {
    "id": 3081,
    "keyword": null,
    "link": null,
    "title": " java string default value",
    "description": "It's initialized to null if you do nothing, as are all reference types.\n",
    "reg_date": "2021-10-12T12:05:49.000Z"
  },
  {
    "id": 3082,
    "keyword": null,
    "link": null,
    "title": " java string enum",
    "description": "package test;  /**  * @author The Elite Gentleman  *  */ public enum Strings {     STRING_ONE(\"ONE\"),     STRING_TWO(\"TWO\")     ;      private final String text;      /**      * @param text      */     Strings(final String text) {         this.text = text;     }      /* (non-Javadoc)      * @see java.lang.Enum#toString()      */     @Override     public String toString() {         return text;     } }\npublic static class Status {     public const string Awesome = \"Awesome\";     public const string Cool = \"Cool\"; } //Not an enum but has a similar effect without needing to convert ints \npublic enum EXIT_CODE {     A(104), B(203);      private int numVal;      EXIT_CODE(int numVal) {         this.numVal = numVal;     }      public int getNumVal() {         return numVal;     } }\n",
    "reg_date": "2021-10-12T12:05:49.000Z"
  },
  {
    "id": 3083,
    "keyword": null,
    "link": null,
    "title": " java string equal vs ==",
    "description": "Case1) String s1 = \"Stack Overflow\"; String s2 = \"Stack Overflow\"; s1 == s1;      // true s1.equals(s2); // true Reason: String literals created without null are stored in the string pool in the permgen area of the heap. So both s1 and s2 point to the same object in the pool. Case2) String s1 = new String(\"Stack Overflow\"); String s2 = new String(\"Stack Overflow\"); s1 == s2;      // false s1.equals(s2); // true Reason: If you create a String object using the `new` keyword a separate space is allocated to it on the heap.\n",
    "reg_date": "2021-10-12T12:05:49.000Z"
  },
  {
    "id": 3084,
    "keyword": null,
    "link": null,
    "title": " java string extract words",
    "description": "String test = \"My first arg test\"; String[] words = test.split(\" \");  for (String word : words) System.out.println(word);\n",
    "reg_date": "2021-10-12T12:05:49.000Z"
  },
  {
    "id": 3085,
    "keyword": null,
    "link": null,
    "title": " java string format .2f",
    "description": "String.format(\"%.2f\", 3.45);\n",
    "reg_date": "2021-10-12T12:05:49.000Z"
  },
  {
    "id": 3086,
    "keyword": null,
    "link": null,
    "title": " java string format 2 decimal places",
    "description": "String.format(\"%.2f\", 3.45);\n  package org.arpit.java2blog;   public class StringFromatformatDouble {       public static void main(String[] args) {         double d = 2.456534;         System.out.println(\"Double upto 2 decimal places: \"+String.format(\"%.2f\",d));     } }   \nString strDouble = String.format(\"%.2f\", 1.23456);  DecimalFormat df = new DecimalFormat(\"#.##\"); String formatted = df.format(2.456345);  System.out.println(formatted);\nNumberFormat formatter = new DecimalFormat(\"#0.00\");      System.out.println(formatter.format(4.0));\nDecimalFormat df = new DecimalFormat(\"#.00\"); \nprintf(%.2f);\n",
    "reg_date": "2021-10-12T12:05:49.000Z"
  },
  {
    "id": 3087,
    "keyword": null,
    "link": null,
    "title": " java string format with placeholder",
    "description": "String s = \"hello %s!\"; s = String.format(s, \"world\"); assertEquals(s, \"hello world!\"); // should be true\n",
    "reg_date": "2021-10-12T12:05:49.000Z"
  },
  {
    "id": 3088,
    "keyword": null,
    "link": null,
    "title": " java string from byte array",
    "description": "byte[] bytes = \"hello\".getBytes(); String s = new String(bytes, StandardCharsets.UTF_8);\n String str = \"Example String\";  byte[] b = str.getBytes();\n String s = new String(bytes, StandardCharsets.UTF_8);\n",
    "reg_date": "2021-10-12T12:05:50.000Z"
  },
  {
    "id": 3089,
    "keyword": null,
    "link": null,
    "title": " java string from int",
    "description": "String myString = \"1234\"; int foo = Integer.parseInt(myString);\nint i = 1234;  String s = String.ValueOf(i)\nclass Scratch{     public static void main(String[] args){         String str = \"50\";         System.out.println( Integer.parseInt( str ));   // Integer.parseInt()     } }\nInteger.toString(n) // converts n to String\nString.valueOf(i)\n",
    "reg_date": "2021-10-12T12:05:50.000Z"
  },
  {
    "id": 3090,
    "keyword": null,
    "link": null,
    "title": " java string is null or empty",
    "description": "if(str != null && !str.isEmpty()) { /* do your stuffs here */ }\npublic class Null {   \tpublic static boolean isNullOrEmpty(String str) {         if(str != null && !str.isEmpty())             return false;         return true;     } }\nif(str != null && !str.isEmpty()) Be sure to use the parts of && in this order, because java will not proceed to evaluate the second part if the first part of && fails, thus ensuring you will not get a null pointer exception from str.isEmpty() if str is null.\nif (myString == null || myString.equals(\"\")) \t\t\tthrow new IllegalArgumentException(\"empty string\");\n",
    "reg_date": "2021-10-12T12:05:50.000Z"
  },
  {
    "id": 3091,
    "keyword": null,
    "link": null,
    "title": " java string join arraylist",
    "description": "// You can't just do String.join(\", \", list) because // the list has to be a String[]. This code works on // everything.  list.stream().map(Object::toString).collect(Collectors.joining(\", \"));\nList<String> list = Arrays.asList(\"a\",\"b\",\"c\"); String result = String.join(\",\", list);  System.out.println(result);\t\t//prints a,b,c\n",
    "reg_date": "2021-10-12T12:05:50.000Z"
  },
  {
    "id": 3092,
    "keyword": null,
    "link": null,
    "title": " java string length validation regex",
    "description": "//Password validation example public static Boolean validPassword(String password) throws IllegalArgumentException {    if (!password.matches(\"\\\\w{6,}\"))/*Or '(password.matches(\"\\\\w{6,}\") == false)'*/ {       throw new IllegalArgumentException(\"Password must be at least 6 characters long.\");        //'(\"\\\\w{int}\")' => Must be int characters long.    //'(\"\\\\w{int,}\")' => Must be AT LEAST int characters long and can be longer.    //'(\"\\\\w{int1,int2}\")' => Must be BETWEEN int1 AND int2 characters long.        }    return true; }\n",
    "reg_date": "2021-10-12T12:05:50.000Z"
  },
  {
    "id": 3093,
    "keyword": null,
    "link": null,
    "title": " java string lowercase",
    "description": "string.toLowerCase();  \nCharacter.toLowerCase(char ch) \n\"Hello World\".toLowerCase()\n/* to find the lowercase or uppercase of a string,  * we just .toLowerCase() or .toUpperCase() */  public class CaseDemonstration {   public static void main(String[] args) {         \tString testString = \"THIS IS AN EXAMPLE OF A STRING\";     String testStringLower = testString.toLowerCase(); // make a string lowercase     System.out.println(testStringLower); // \"this is an example of a string\"     String testStringUpper = testStringLower.toUpperCase(); // make it upper again     System.out.println(testStringUpper); // \"THIS IS AN EXAMPLE OF A STRING\"        } }\nString s1 = \"JAVATPOINT HELLO stRIng\";   String s1lower = s1.toLowerCase(); // s1lower = \"javatpoint hello string\" \n",
    "reg_date": "2021-10-12T12:05:50.000Z"
  },
  {
    "id": 3094,
    "keyword": null,
    "link": null,
    "title": " java string multiply",
    "description": "\"*\".repeat(times); \n",
    "reg_date": "2021-10-12T12:05:50.000Z"
  },
  {
    "id": 3095,
    "keyword": null,
    "link": null,
    "title": " java string next line",
    "description": "// its \\r\\n String a = \"Hello, \" String b = \"there!\" System.out.println(a+b);//returns Hello, there System.out.println(a+\"\\r\\n\"+b);//returns Hello,  //there! //it will be on the next line!\nScanner scanner = new Scanner(new File(\"filename\")); while (scanner.hasNextLine()) {    String line = scanner.nextLine();    // process the line } \n",
    "reg_date": "2021-10-12T12:05:50.000Z"
  },
  {
    "id": 3096,
    "keyword": null,
    "link": null,
    "title": " java string not equal",
    "description": "if (!\"success\".equals(statusCheck)) \nString name = \"John\";    // prints true to standard system output.  System.out.print(!name.equals(\"Alex\")); \n// Int version int i = 2; if (i != 3) {}  // String version String s = \"a\"; if(!s.equals(\"b\")) {}\n",
    "reg_date": "2021-10-12T12:05:50.000Z"
  },
  {
    "id": 3097,
    "keyword": null,
    "link": null,
    "title": " java string padding",
    "description": "Have a look at org.apache.commons.lang.StringUtils#rightPad(String str, int size, char padChar).  But the algorithm is very simple (pad right up to size chars):  public String pad(String str, int size, char padChar) {   StringBuilder padded = new StringBuilder(str);   while (padded.length() < size)   {     padded.append(padChar);   }   return padded.toString(); }\n",
    "reg_date": "2021-10-12T12:05:50.000Z"
  },
  {
    "id": 3098,
    "keyword": null,
    "link": null,
    "title": " java string regexp replace",
    "description": "String input = \"abcd\"; Pattern p = Pattern.compile(\"regexp\"); String output = p.matcher(input).replaceAll(\"replacement\");\n",
    "reg_date": "2021-10-12T12:05:51.000Z"
  },
  {
    "id": 3099,
    "keyword": null,
    "link": null,
    "title": " java string remove character",
    "description": "// remove last character from string in java public class SubstringDemo {    public static void main(String[] args)    {       String strInput = \"Flower Brackets!\";       String strOutput = strInput.substring(0, strInput.length() - 1);       System.out.println(strOutput);    } }\n// how to remove particular character from string public class RemoveParticularCharacter {    public static void main(String[] args)    {       String strInput = \"Hello world java\";       System.out.println(removeCharacter(strInput, 6));    }    public static String removeCharacter(String strRemove, int r)    {       return strRemove.substring(0, r) + strRemove.substring(r + 1);    } }\nString str = \"abcdDCBA123\"; String strNew = str.replace(\"a\", \"\"); // strNew is 'bcdDCBA123'\n# subString(int start, int end);  String a = \"Hello!\"; b = a.subString(0,a.length()-1) #Remove the last String # b should be \"Hello\" then\n String str = \"abcdDCBA123\"; String strNew = str.replace(\"a\", \"\"); // strNew is 'bcdDCBA123' \n// Java remove character from string public class RemoveOnlyLetters {    public static void main(String[] args)    {       String strExample = \"jd15352kLJJD55185716kdkLJJJ\";       System.out.println(\"Before: \" + strExample);       strExample = strExample.replaceAll(\"[a-zA-Z]\", \"\");       System.out.println(\"After: \" + strExample);    } }\n",
    "reg_date": "2021-10-12T12:05:51.000Z"
  },
  {
    "id": 3100,
    "keyword": null,
    "link": null,
    "title": " java string repalce",
    "description": "String str1 = \"abc123abc123\"; String str2 = str1.replace(\"abc\", \"0\"); System.out.println(str2); // 01230123 \n",
    "reg_date": "2021-10-12T12:05:51.000Z"
  },
  {
    "id": 3101,
    "keyword": null,
    "link": null,
    "title": " java string replace character at position",
    "description": "String str = in.nextLine();\t//Original String char cr = in.next().charAt(0); // character to replace int index = in.nextInt();\t// Index where replaced str = str.substring(0, index) + cr + str.substring(index + 1);// modified string \n",
    "reg_date": "2021-10-12T12:05:51.000Z"
  },
  {
    "id": 3102,
    "keyword": null,
    "link": null,
    "title": " java string reverse",
    "description": "public class ReverseString {     public static void main(String[] args) {         String s1 = \"neelendra\";         for(int i=s1.length()-1;i>=0;i--)             {                 System.out.print(s1.charAt(i));             }     } }\n// Library approach public static String solution(String str) { \t// StringBuilder is not thread-safe, use StringBuffer \treturn new StringBuffer(str).reverse().toString(); }  // DIY approach public static String solution(String str) { \tchar[] chars = str.toCharArray(); \tfor(int i = 0, j = str.length() - 1; i < j; i++, j--) { \t\tchar ch = chars[i]; \t\tchars[i] = chars[j]; \t\tchars[j] = ch; \t} \treturn new String(chars); }\nString rev = new StringBuilder(\"Your String\").reverse().toString();\nString str = \"Hello\"; String reverse(String str){   StringBuilder sb = new StringBuilder();   sb.append(str);   sb.reverse();   return sb.toString(); }\nString str = \"Reverse this strings\"; //for loop for (int i = str.length() - 1; i >= 0; i--) { \tSystem.out.print(str.charAt(i)); }  // StringBuffer for multi thread StringBuffer sb = new StringBuffer();  sb.append(str); System.out.print(sb.reverse().toString());  // StringBuffer for single thread StringBuilder sb = new StringBuilder();  sb.append(str); System.out.print(sb.reverse().toString());\n// reverse a string using character array class ReverseUsingCharacterArray {    public static void main(String[] args)    {       String str = \"HelloWorldJava\";       char[] ch = str.toCharArray();       for(int a = ch.length - 1; a >= 0; a--)          System.out.print(ch[a]);    } }\n",
    "reg_date": "2021-10-12T12:05:51.000Z"
  },
  {
    "id": 3103,
    "keyword": null,
    "link": null,
    "title": " java string split from input string",
    "description": "String line = scann.nextLine(); String[] info = line.split(\"\t\"); \t\t\t\t for( String s : info) { \tSystem.out.println(s); }\n",
    "reg_date": "2021-10-12T12:05:51.000Z"
  },
  {
    "id": 3104,
    "keyword": null,
    "link": null,
    "title": " java string to boolean",
    "description": "String value = \"true\";  boolean b = Boolean.parseBoolean(value);  System.out.println(b);  Read more: https://www.java67.com/2018/03/java-convert-string-to-boolean.html#ixzz6HF3C1ERb\nboolean bool = Boolean.parseBoolean(str);\n",
    "reg_date": "2021-10-12T12:05:51.000Z"
  },
  {
    "id": 3105,
    "keyword": null,
    "link": null,
    "title": " java string to byte array utf8",
    "description": "String s = \"some text here\"; byte[] b = s.getBytes(StandardCharsets.UTF_8);\n",
    "reg_date": "2021-10-12T12:05:51.000Z"
  },
  {
    "id": 3106,
    "keyword": null,
    "link": null,
    "title": " java string to char array",
    "description": "String str = \"example\"; char[] ch = str.toCharArray(); \nchar[] a = {'h', 'e', 'l', 'l', 'o', ' ', 'w', 'o', 'r', 'l', 'd'}; String str = new String(a);\n// java convert array of char to string public class CharArrayToString {    public static void main(String[] args)    {       char[] charArray = new char[]{'F','l','o','w','e','r','B','r','a','c','k','e','t','s'};       String str = new String(charArray);       System.out.println(str);    } }\n    final char[] charArray = { 'g','e','e','k','s','f','o','r','g','e','e','k','s' };     String string = new String(charArray);  \tSystem.out.println(string);  \t// -> \"geeksforgeeks\"\nString myString = \"Hello, world!\"; char[] myCharArray = myString.toCharArray();\n       // Method 1: Using String object       char[] ch = {'g', 'o', 'o', 'd', ' ', 'm', 'o', 'r', 'n', 'i', 'n', 'g'};       String str = new String(ch);       System.out.println(str);  \n",
    "reg_date": "2021-10-12T12:05:51.000Z"
  },
  {
    "id": 3107,
    "keyword": null,
    "link": null,
    "title": " java string to decimal",
    "description": "String strDecimal = \"0.00000008880000\"; double f = Double.parseDouble(strDecimal); System.out.println(f); System.out.println(String.format(\"%.7f\", f)); System.out.println(String.format(\"%.9f\", new BigDecimal(f))); System.out.println(String.format(\"%.35f\", new BigDecimal(f))); System.out.println(String.format(\"%.2f\", new BigDecimal(f)));\n",
    "reg_date": "2021-10-12T12:05:52.000Z"
  },
  {
    "id": 3108,
    "keyword": null,
    "link": null,
    "title": " java string to double",
    "description": "public class stringtodouble { \tpublic static void main(String args) {     \tString string = \"1.23\";       \tdouble decimal = Double.parseDouble(string);     } }\nString str=\"122.202\"; double dnum = Double.parseDouble(str);\nDouble d = Double.valueOf(String str);\nString s = \"10.1\"; Double d = Double.parseDouble(s);\nDouble myDouble = Double.parseDouble(\"23.5\");\ndouble d = Double.parseDouble(aString);\n",
    "reg_date": "2021-10-12T12:05:52.000Z"
  },
  {
    "id": 3109,
    "keyword": null,
    "link": null,
    "title": " java string to double comma",
    "description": "NumberFormat format = NumberFormat.getInstance(Locale.FRANCE); Number number = format.parse(\"1,234\"); double d = number.doubleValue(); \nNumberFormat format = NumberFormat.getInstance(Locale.getDefault()); \n",
    "reg_date": "2021-10-12T12:05:52.000Z"
  },
  {
    "id": 3110,
    "keyword": null,
    "link": null,
    "title": " java string to float",
    "description": "String yourString = \"23.7\"; float yourFloat = Float.parseFloat(yourString);\nString output = Float.parseFloat(floatNum); /** convert float to string using objName.parse(ObjName) <--capitalized usually. */\nFloat myFloat = Float.parseFloat(\"23.5\")\n",
    "reg_date": "2021-10-12T12:05:52.000Z"
  },
  {
    "id": 3111,
    "keyword": null,
    "link": null,
    "title": " java string to instant",
    "description": "// Java program to demonstrate  // Instant.parse() method     import java.time.*;     public class GFG {      public static void main(String[] args)      {             // get Instant using parse method          Instant instant              = Instant.parse(\"2018-11-30T18:35:24.00Z\");             // print result          System.out.println(\"Instant: \"                            + instant);      }  }    \n",
    "reg_date": "2021-10-12T12:05:52.000Z"
  },
  {
    "id": 3112,
    "keyword": null,
    "link": null,
    "title": " java string to int",
    "description": "String myString = \"1234\"; int foo = Integer.parseInt(myString);\nint result = Integer.parseInt(number);\nint result = Integer.parseInt(\"500\"); System.out.println(result) // prints 500 as int\n\tString number = \"10\"; \tint result = Integer.parseInt(number);\t\t\t \tSystem.out.println(result); Copy\nint i = Integer.parseInt(myString);\nString myString = \"1234\"; int number = Integer.parseInt(myString);\n",
    "reg_date": "2021-10-12T12:05:52.000Z"
  },
  {
    "id": 3113,
    "keyword": null,
    "link": null,
    "title": " java string to integer",
    "description": "String myString = \"1234\"; int foo = Integer.parseInt(myString);\nint result = Integer.parseInt(number);\nint result = Integer.parseInt(\"500\"); System.out.println(result) // prints 500 as int\n\tString number = \"10\"; \tint result = Integer.parseInt(number);\t\t\t \tSystem.out.println(result); Copy\nint i = Integer.parseInt(myString);\nString example = \"1\"; int converted = Integer.parseInt(example);\n",
    "reg_date": "2021-10-12T12:05:52.000Z"
  },
  {
    "id": 3114,
    "keyword": null,
    "link": null,
    "title": " java string to long",
    "description": "int result = Integer.parseInt(number);\npublic class Example {    public static void main(String[] args)    {        String str = \"11111\";        String str2 = \"88888\";        //Conversion using valueOf(String) method        long num = Long.valueOf(str);        long num2 = Long.valueOf(str2);        System.out.println(num+num2);\t\t    } } Output: 99999\n Long.parseLong(\"0\", 10)        // returns 0L  Long.parseLong(\"473\", 10)      // returns 473L  Long.parseLong(\"-0\", 10)       // returns 0L  Long.parseLong(\"-FF\", 16)      // returns -255L  Long.parseLong(\"1100110\", 2)   // returns 102L  Long.parseLong(\"99\", 8)        // throws a NumberFormatException  Long.parseLong(\"Hazelnut\", 10) // throws a NumberFormatException  Long.parseLong(\"Hazelnut\", 36) // returns 1356099454469L  Long.parseLong(\"999\")          // returns 999L\npublic class Example {    public static void main(String[] args)    {        String str = \"10000\";        String str2 = \"22222\";        //Conversion using Long(String s) constructor        long num = new Long(str);        long num2 = new Long(str2);        System.out.println(num*num2);\t\t    } } Output: 222220000\n",
    "reg_date": "2021-10-12T12:05:52.000Z"
  },
  {
    "id": 3115,
    "keyword": null,
    "link": null,
    "title": " java string to lower case",
    "description": "string.toLowerCase();  \n\"Hello World\".toLowerCase()\nString s1 = \"JAVATPOINT HELLO stRIng\";   String s1lower = s1.toLowerCase(); // s1lower = \"javatpoint hello string\" \n// check lowercase or not in java..  public class Test {     public static void main(String args[]) {       System.out.println(Character.isLowerCase('c')); //true       System.out.println(Character.isLowerCase('C')); //false       System.out.println(Character.isLowerCase('\\n')); //false       System.out.println(Character.isLowerCase('\\t')); //false    } }\n",
    "reg_date": "2021-10-12T12:05:52.000Z"
  },
  {
    "id": 3116,
    "keyword": null,
    "link": null,
    "title": " java string to path",
    "description": "Path path = Paths.get(textPath); \n",
    "reg_date": "2021-10-12T12:05:53.000Z"
  },
  {
    "id": 3117,
    "keyword": null,
    "link": null,
    "title": " java string to uuid",
    "description": "// Import Java UUID Utils import java.utils.UUID;  // Execute function fromString() with your string as argument. // Returns an uuid, which is your string converted into an UUID. UUID uuid = UUID.fromString(string);\nimport java.utils.UUID;  String strInput = \"-1068942631\"; String uuidFromString = UUID.nameUUIDFromBytes( String.valueOf( strInput ).getBytes() ).toString();  System.out.println(uuidFromString);\nUUID.fromString(string);\n",
    "reg_date": "2021-10-12T12:05:53.000Z"
  },
  {
    "id": 3118,
    "keyword": null,
    "link": null,
    "title": " java string valueof",
    "description": "public static String valueOf(Object obj) {   \treturn (obj == null) ? \"null\" : obj.toString();   } \n",
    "reg_date": "2021-10-12T12:05:53.000Z"
  },
  {
    "id": 3119,
    "keyword": null,
    "link": null,
    "title": " java string vs stringbuilder",
    "description": "A String can be used when immutability is required, or concatenation operation is not required. A StringBuilder can be used when a mutable string is needed without the performance overhead of constructing lots of strings along the way.\n",
    "reg_date": "2021-10-12T12:05:53.000Z"
  },
  {
    "id": 3120,
    "keyword": null,
    "link": null,
    "title": " java stringbuilder to string",
    "description": "StringBuilder.toString(); //the text will be whatever information you gave in the constructor\nString singleString = sb.toString(); //the text will be whatever information you gave in the constructor\n",
    "reg_date": "2021-10-12T12:05:53.000Z"
  },
  {
    "id": 3121,
    "keyword": null,
    "link": null,
    "title": " java struct",
    "description": "Java 14 has added support for Records, which are structured data types that are very easy to build.  You can declare a Java record like this:  public record AuditInfo(     LocalDateTime createdOn,     String createdBy,     LocalDateTime updatedOn,     String updatedBy ) {}   public record PostInfo(     Long id,     String title,     AuditInfo auditInfo ) {}\n",
    "reg_date": "2021-10-12T12:05:53.000Z"
  },
  {
    "id": 3122,
    "keyword": null,
    "link": null,
    "title": " java structure example",
    "description": "   class Employee {        private String name;        private int code;     // constructor    public Employee(String name, int code) {       this.name = name;       this.code = code;    }         // getter        public String getName() { return name; }        public int getCode() { return code; }        // setter         public void setName(String name) { this.name = name; }        public void setCode(int code) { this.code = code; }     }      Employee[] arr = new Employee[100];  // new stands for create an array object arr[0] = new Employee(\"Peter\", 100); // new stands for create an employee object arr[1] = new Employee(\"Mary\", 90); \n",
    "reg_date": "2021-10-12T12:05:53.000Z"
  },
  {
    "id": 3123,
    "keyword": null,
    "link": null,
    "title": " java subarray",
    "description": "import java.util.Arrays;   class Main {     // Generic function to get sub-array of a non-primitive array     // between specified indices     public static<T> T[] subArray(T[] array, int beg, int end) {         return Arrays.copyOfRange(array, beg, end + 1);     }       public static void main(String[] args)     {         String[] arr = { \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\" };         int beg = 1, end = 4;           String[] subarray = subArray(arr, beg, end);         System.out.println(Arrays.toString(subarray));     } } \n",
    "reg_date": "2021-10-12T12:05:53.000Z"
  },
  {
    "id": 3124,
    "keyword": null,
    "link": null,
    "title": " java subscript",
    "description": "const str = 'substr';  console.log(str.substr(1, 2)); // (1, 2): ub console.log(str.substr(1)); // (1): ubstr  /* Percorrendo de tr&aacute;s para frente */ console.log(str.substr(-3, 2)); // (-3, 2): st console.log(str.substr(-3)); // (-3): str \n// Java Subscript Numbers //\tBase\tChar\tCode \t0\t\t₀\t\t\\u2080 \t1\t\t₁\t\t\\u2081 \t2\t\t₂\t\t\\u2082 \t3\t\t₃\t\t\\u2083 \t4\t\t₄\t\t\\u2084     5\t\t₅\t\t\\u2085     6\t\t₆\t\t\\u2086     7\t\t₇\t\t\\u2087     8\t\t₈\t\t\\u2088     9\t\t₉\t\t\\u2089\n//str.substr(start[, length]) var str = 'abcdefghij';  console.log('(1, 2): '   + str.substr(1, 2));   // '(1, 2): bc' console.log('(-3, 2): '  + str.substr(-3, 2));  // '(-3, 2): hi' console.log('(-3): '     + str.substr(-3));     // '(-3): hij' console.log('(1): '      + str.substr(1));      // '(1): bcdefghij' console.log('(-20, 2): ' + str.substr(-20, 2)); // '(-20, 2): ab' console.log('(20, 2): '  + str.substr(20, 2));  // '(20, 2): '\n",
    "reg_date": "2021-10-12T12:05:53.000Z"
  },
  {
    "id": 3125,
    "keyword": null,
    "link": null,
    "title": " java subset of array",
    "description": "Arrays.copyOfRange(array, 1, array.length);\nimport java.util.Arrays;   class Main {     // Generic function to get sub-array of a non-primitive array     // between specified indices     public static<T> T[] subArray(T[] array, int beg, int end) {         return Arrays.copyOfRange(array, beg, end + 1);     }       public static void main(String[] args)     {         String[] arr = { \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\" };         int beg = 1, end = 4;           String[] subarray = subArray(arr, beg, end);         System.out.println(Arrays.toString(subarray));     } } \n",
    "reg_date": "2021-10-12T12:05:54.000Z"
  },
  {
    "id": 3126,
    "keyword": null,
    "link": null,
    "title": " java substring",
    "description": "String s = \"Let's Get This Bread\";  String subString = s.substring(6, 9); \t\t\t\t// (start index inclusive, end index exclusive)  // subString == \"Get\"\nclass Main {   public static void main (String[] args) {          String str = \"Hello World!\";          String firstWord = str.substring(0, 5);     //two parameters are start and end index: (inclusive, non-inclusive)          String secondWord = str.substring(6, 11);          //firstWord has string \"Hello\"     //secondWord has string \"World\"   } }\nclass scratch{     public static void main(String[] args) {         String hey = \"Hello World\";         System.out.println( hey.substring(0, 5) );         // prints Hello;     } }\nimport java.lang.*;  public class StringDemo { public static void main(String[] args) { String str = \"This is tutorials point\"; String substr = \"\";  // prints the substring after index 8 till index 17 substr = str.substring(8, 17); System.out.println(\"substring = \" + substr);  // prints the substring after index 0 till index 8 substr = str.substring(0, 8); System.out.println(\"substring = \" + substr); } }\n// substring(int begin, int end) String n = \"hello there general kenobi\"; System.out.println(n.substring(6, 11)); // -> \"there\"\n//Object... (here String...) means that you can give //in parameter one or many objects of same type  func();  func(\"arg1\", \"arg2\", \"arg3\");  String[] args = new String[]{\"arg1\", \"arg2\", \"arg3\"} func(args);  void func(String... args);\n",
    "reg_date": "2021-10-12T12:05:54.000Z"
  },
  {
    "id": 3127,
    "keyword": null,
    "link": null,
    "title": " java substring one parameter",
    "description": "String s = \"Let's Get This Bread\";  String subString = s.substring(6, 9); \t\t\t\t// (start index inclusive, end index exclusive)  // subString == \"Get\"\n\"Chaitanya\".substring(2)//=>aitanya  //make me a SubString starting from index 2 to the end of the string!\nclass Main {   public static void main (String[] args) {          String str = \"Hello World!\";          String firstWord = str.substring(0, 5);     //two parameters are start and end index: (inclusive, non-inclusive)          String secondWord = str.substring(6, 11);          //firstWord has string \"Hello\"     //secondWord has string \"World\"   } }\nclass scratch{     public static void main(String[] args) {         String hey = \"Hello World\";         System.out.println( hey.substring(0, 5) );         // prints Hello;     } }\n",
    "reg_date": "2021-10-12T12:05:54.000Z"
  },
  {
    "id": 3128,
    "keyword": null,
    "link": null,
    "title": " java sum 1 to n",
    "description": "public class Main {   public static void main(String[] args) {     var scanner = new java.util.Scanner(System.in);     System.out.print(\"What is n? \");     int n = scanner.nextInt();     int sum = 0;     for (int i = 1; i <= n; ++i) {       sum += i;     }     System.out.println(\"The sum of 1..n is \" + sum);   } }\n",
    "reg_date": "2021-10-12T12:05:54.000Z"
  },
  {
    "id": 3129,
    "keyword": null,
    "link": null,
    "title": " java sum of two numbers program intellij",
    "description": "import java.util.Scanner; public class AddTwoNumbers2 {      public static void main(String[] args) {                  int num1, num2, sum;         Scanner sc = new Scanner(System.in);         System.out.println(\"Enter First Number: \");         num1 = sc.nextInt();                  System.out.println(\"Enter Second Number: \");         num2 = sc.nextInt();                  sc.close();         sum = num1 + num2;         System.out.println(\"Sum of these numbers: \"+sum);     } }  Output:\nint x=5; int y=10; int z=x+y; \n",
    "reg_date": "2021-10-12T12:05:54.000Z"
  },
  {
    "id": 3130,
    "keyword": null,
    "link": null,
    "title": " java swing absolute position",
    "description": "frame.setLayout(null); JLabel label = new JLabel(\"First Name:\"); label.setBounds(20, 20, 100, 20);\n",
    "reg_date": "2021-10-12T12:05:54.000Z"
  },
  {
    "id": 3131,
    "keyword": null,
    "link": null,
    "title": " java swing alert window",
    "description": "alert('Message');\nJOptionPane.showMessageDialog(yourFrame,     \"WARNING.\",     \"Warning\",     JOptionPane.WARNING_MESSAGE);\n",
    "reg_date": "2021-10-12T12:05:54.000Z"
  },
  {
    "id": 3132,
    "keyword": null,
    "link": null,
    "title": " java swing array of buttons",
    "description": "import javax.swing.*; //do it public class test {      public static void main(String[] args) {         JButton[] buttons = new JButton[10];          buttons[0] = new JButton(\"0\");          System.out.println(buttons[0].getText());     }  } \n",
    "reg_date": "2021-10-12T12:05:54.000Z"
  },
  {
    "id": 3133,
    "keyword": null,
    "link": null,
    "title": " java swing button on click",
    "description": "JButton b = new JButton(\"push me\"); b.addActionListener(new ActionListener() {      @Override     public void actionPerformed(ActionEvent e) {         //your actions     } });\n",
    "reg_date": "2021-10-12T12:05:54.000Z"
  },
  {
    "id": 3134,
    "keyword": null,
    "link": null,
    "title": " java swing dialog box",
    "description": "import javax.swing.JOptionPane;  public class Main {   public static void main(String[] argv) throws Exception {      JOptionPane.showMessageDialog(null, \"I am happy.\");    } } \nJOptionPane.showMessageDialog(null, \"java is fun\");\n",
    "reg_date": "2021-10-12T12:05:54.000Z"
  },
  {
    "id": 3135,
    "keyword": null,
    "link": null,
    "title": " java swing get resource from image",
    "description": "image = ImageIO.read(getClass().getResource(\"/resources/icon.gif\")); \n",
    "reg_date": "2021-10-12T12:05:55.000Z"
  },
  {
    "id": 3136,
    "keyword": null,
    "link": null,
    "title": " java swing jprogressbar setmaximum",
    "description": "progressBar.setMaximum(x); progressBar.setMinimum(x);\n",
    "reg_date": "2021-10-12T12:05:55.000Z"
  },
  {
    "id": 3137,
    "keyword": null,
    "link": null,
    "title": " java swing jprogressbar setminimum",
    "description": "progressBar.setMaximum(x); progressBar.setMinimum(x);\n",
    "reg_date": "2021-10-12T12:05:55.000Z"
  },
  {
    "id": 3138,
    "keyword": null,
    "link": null,
    "title": " java swing jslider",
    "description": "static final int FPS_MIN = 0; static final int FPS_MAX = 30; static final int FPS_INIT = 15;    //initial frames per second . . . JSlider framesPerSecond = new JSlider(JSlider.HORIZONTAL,FPS_MIN, FPS_MAX, FPS_INIT); framesPerSecond.addChangeListener(this);  //Turn on labels at major tick marks. framesPerSecond.setMajorTickSpacing(10); framesPerSecond.setMinorTickSpacing(1); framesPerSecond.setPaintTicks(true); framesPerSecond.setPaintLabels(true);\n",
    "reg_date": "2021-10-12T12:05:55.000Z"
  },
  {
    "id": 3139,
    "keyword": null,
    "link": null,
    "title": " java swing make window not resizable",
    "description": "JFrame frame = new JFrame();  frame.setResizable(false);\n",
    "reg_date": "2021-10-12T12:05:55.000Z"
  },
  {
    "id": 3140,
    "keyword": null,
    "link": null,
    "title": " java swing menu click event",
    "description": "JMenuItem menuItem = new JMenuItem(new AbstractAction(\"My Menu Item\") {     public void actionPerformed(ActionEvent e) {         // Button pressed logic goes here     } });\n",
    "reg_date": "2021-10-12T12:05:55.000Z"
  },
  {
    "id": 3141,
    "keyword": null,
    "link": null,
    "title": " java swing pic",
    "description": "BufferedImage myPicture = ImageIO.read(new File(\"path-to-file\")); JLabel picLabel = new JLabel(new ImageIcon(myPicture)); add(picLabel);\n",
    "reg_date": "2021-10-12T12:05:55.000Z"
  },
  {
    "id": 3142,
    "keyword": null,
    "link": null,
    "title": " java swing timer sleep",
    "description": "System.out.println(\"Hi\"); //Now it will pause try{   Thread.sleep(5000)//Time in milliseconds->5000==5 seconds    //^freezes whole program for amount of time   System.out.println(\"Hola\");//Appears after 5 seconds } catch(InterruptedException e){   System.err.println(e.getMessage()); }\n",
    "reg_date": "2021-10-12T12:05:55.000Z"
  },
  {
    "id": 3143,
    "keyword": null,
    "link": null,
    "title": " java switch",
    "description": "int day = 4; switch (day) {   case 6:     System.out.println(\"Today is Saturday\");     break;   case 7:     System.out.println(\"Today is Sunday\");     break;   default:     System.out.println(\"Looking forward to the Weekend\"); } // Outputs \"Looking forward to the Weekend\"\n// switch case in java example programs public class SwitchStatementExample {    public static void main(String[] args)    {       char grade = 'A';       switch(grade) {           case 'A' :               System.out.println(\"Distinction.\");               break;           case 'B' :           case 'C' :               System.out.println(\"First class.\");               break;           case 'D' :               System.out.println(\"You have passed.\");           case 'F' :               System.out.println(\"Fail. Try again.\");               break;           default :               System.out.println(\"Invalid grade\");       }       System.out.println(\"Grade is: \" + grade);    } }\nswitch(x){ \tcase(0):\t\t//if x == 0     \t//do some stuff     \tbreak;     //add more cases   default:\t\t\t//when x does not match any case     //do some stuff     break; }\n//the cooler looking edition (with input example) Scanner scn = new Scanner(System.in); int asd = scn.nextInt();  switch(asd) {   case 1 -> System.out.println(\"case 1\");   case 2 -> System.out.println(\"case 2\");   case 5 -> System.out.println(\"case 5\");   //case n...   default -> case 1 -> System.out.println(\"check out tunalad.bandcamp.com\"); }  /* Output: asd = 1: \"case 1\" asd = 2: \"case 2\" asd = 5: \"case 5\" asd = 33213: \"check out tunalad.bandcamp.com\" */\nSystem.out.println(         switch (day) {             case MONDAY, FRIDAY, SUNDAY -> 6;             case TUESDAY                -> 7;             case THURSDAY, SATURDAY     -> 8;             case WEDNESDAY              -> 9;             default -> throw new IllegalStateException(\"Invalid day: \" + day);         }     );\n// syntax of switch statement in java switch(expression) {    case 1 value :    // code goes here    break;     case 2 value :    // code goes here    break;     case 3 value :    // code goes here    break;    .    .    .    .        default: // optional    // default code goes here }\n",
    "reg_date": "2021-10-12T12:05:56.000Z"
  },
  {
    "id": 3144,
    "keyword": null,
    "link": null,
    "title": " java switch case",
    "description": "int day = 4; switch (day) {   case 6:     System.out.println(\"Today is Saturday\");     break;   case 7:     System.out.println(\"Today is Sunday\");     break;   default:     System.out.println(\"Looking forward to the Weekend\"); } // Outputs \"Looking forward to the Weekend\"\n// switch case in java example programs public class SwitchStatementExample {    public static void main(String[] args)    {       char grade = 'A';       switch(grade) {           case 'A' :               System.out.println(\"Distinction.\");               break;           case 'B' :           case 'C' :               System.out.println(\"First class.\");               break;           case 'D' :               System.out.println(\"You have passed.\");           case 'F' :               System.out.println(\"Fail. Try again.\");               break;           default :               System.out.println(\"Invalid grade\");       }       System.out.println(\"Grade is: \" + grade);    } }\nswitch(x){ \tcase(0):\t\t//if x == 0     \t//do some stuff     \tbreak;     //add more cases   default:\t\t\t//when x does not match any case     //do some stuff     break; }\n//the cooler looking edition (with input example) Scanner scn = new Scanner(System.in); int asd = scn.nextInt();  switch(asd) {   case 1 -> System.out.println(\"case 1\");   case 2 -> System.out.println(\"case 2\");   case 5 -> System.out.println(\"case 5\");   //case n...   default -> case 1 -> System.out.println(\"check out tunalad.bandcamp.com\"); }  /* Output: asd = 1: \"case 1\" asd = 2: \"case 2\" asd = 5: \"case 5\" asd = 33213: \"check out tunalad.bandcamp.com\" */\nSystem.out.println(         switch (day) {             case MONDAY, FRIDAY, SUNDAY -> 6;             case TUESDAY                -> 7;             case THURSDAY, SATURDAY     -> 8;             case WEDNESDAY              -> 9;             default -> throw new IllegalStateException(\"Invalid day: \" + day);         }     );\n// syntax of switch statement in java switch(expression) {    case 1 value :    // code goes here    break;     case 2 value :    // code goes here    break;     case 3 value :    // code goes here    break;    .    .    .    .        default: // optional    // default code goes here }\n",
    "reg_date": "2021-10-12T12:05:56.000Z"
  },
  {
    "id": 3145,
    "keyword": null,
    "link": null,
    "title": " java switch multiple values",
    "description": "  switch (num) {             case 5:             case 2:             case 3:                 System.out.println(\"5,2,3\");                 break;             case 4:             case 6:                 System.out.println(\"4,6\");                 break;             case 1:                 System.out.println(\"1\");                 break;             default:                 System.out.println(\"Inavlid number\");                 break;         }\n",
    "reg_date": "2021-10-12T12:05:56.000Z"
  },
  {
    "id": 3146,
    "keyword": null,
    "link": null,
    "title": " java system.out.println",
    "description": "public static void main(String[] args){ \tSystem.out.println(\"Hello World\");  }\nSystem.out.println(\"whatever you want\"); //you can type sysout and then ctrl + space \nSystem.out.print(<string>); //prints in the same line as the previous print System.out.println(<string>); //prints in a new line  // Example System.out.print(\"This \"); System.out.print(\"will \"); System.out.print(\"be \"); System.out.print(\"all \"); System.out.print(\"in \"); System.out.print(\"one \"); System.out.print(\"line.\");  System.out.println(\"Hello World!\"); System.out.println(\"second line\");\nSystem.out.println(\"Hello World\");\n",
    "reg_date": "2021-10-12T12:05:56.000Z"
  },
  {
    "id": 3147,
    "keyword": null,
    "link": null,
    "title": " java system.out.println shortcut",
    "description": "// Shortcut on Netbeans. Type sout and press Tab key. // Shortcut on Eclipse. Type syso and press Ctrl+space. // Shortcut on JDeveloper. Type sop and press Ctrl+Enter. // Shortcut on Intellij IDEA Type sout and press Tab key\n--eclipse syso: ctrl+Space --intelij sysout: ctrl+space\n--intelij sout: tab\n",
    "reg_date": "2021-10-12T12:05:56.000Z"
  },
  {
    "id": 3148,
    "keyword": null,
    "link": null,
    "title": " java system out format left justify",
    "description": "// Add the \"-\" tag! System.out.format(\"%-64s%-10d\", String1, int1);\n",
    "reg_date": "2021-10-12T12:05:56.000Z"
  },
  {
    "id": 3149,
    "keyword": null,
    "link": null,
    "title": " java take arbitrary number of arguments",
    "description": "// In order to define vararg, ... (three dots) is used in the formal  // parameter of a method. This essentially creates an array.  accessModifier methodName(datatype&hellip; arg) {     // method body }\n",
    "reg_date": "2021-10-12T12:05:56.000Z"
  },
  {
    "id": 3150,
    "keyword": null,
    "link": null,
    "title": " java take out cn from dn",
    "description": "String dn = \"CN=Jimmy Blooptoop,OU=Someplace,OU=Employees,DC=Bloopsoft-Inc\"; LdapName ln = new LdapName(dn);  for(Rdn rdn : ln.getRdns()) {     if(rdn.getType().equalsIgnoreCase(\"CN\")) {         System.err.println(\"CN is: \" + rdn.getValue());         break;     } }\n",
    "reg_date": "2021-10-12T12:05:56.000Z"
  },
  {
    "id": 3151,
    "keyword": null,
    "link": null,
    "title": " java take screenshot",
    "description": "BufferedImage image = new Robot().createScreenCapture(new Rectangle(Toolkit.getDefaultToolkit().getScreenSize())); ImageIO.write(image, \"png\", new File(\"/screenshot.png\")); \n",
    "reg_date": "2021-10-12T12:05:56.000Z"
  },
  {
    "id": 3152,
    "keyword": null,
    "link": null,
    "title": " java taking console input",
    "description": "String str = System.console().readLine();\n",
    "reg_date": "2021-10-12T12:05:57.000Z"
  },
  {
    "id": 3153,
    "keyword": null,
    "link": null,
    "title": " java tamanho de um vetor",
    "description": "int tamanho;        int[] array1 = {10, 11, 12, 13, 14, 15, 16, 17, 18, 19};  tamanho = array1.length;  System.out.printf(\"Tamanho do array1: %d\", tamanho);\n",
    "reg_date": "2021-10-12T12:05:57.000Z"
  },
  {
    "id": 3154,
    "keyword": null,
    "link": null,
    "title": " java temp folder property",
    "description": "System.getProperty(\"java.io.tmpdir\")\n",
    "reg_date": "2021-10-12T12:05:57.000Z"
  },
  {
    "id": 3155,
    "keyword": null,
    "link": null,
    "title": " java template string",
    "description": "String message = String.format(\"Hello! My name is %s, I'm %s.\", name, age); \nString template = \"status is %s, data key is %s\" String result = String.format(template, status, key); \n",
    "reg_date": "2021-10-12T12:05:57.000Z"
  },
  {
    "id": 3156,
    "keyword": null,
    "link": null,
    "title": " java terminal colors",
    "description": "public class ConsoleColors {     // Reset     public static final String RESET = \"\\033[0m\";  // Text Reset      // Regular Colors     public static final String BLACK = \"\\033[0;30m\";   // BLACK     public static final String RED = \"\\033[0;31m\";     // RED     public static final String GREEN = \"\\033[0;32m\";   // GREEN     public static final String YELLOW = \"\\033[0;33m\";  // YELLOW     public static final String BLUE = \"\\033[0;34m\";    // BLUE     public static final String PURPLE = \"\\033[0;35m\";  // PURPLE     public static final String CYAN = \"\\033[0;36m\";    // CYAN     public static final String WHITE = \"\\033[0;37m\";   // WHITE      // Bold     public static final String BLACK_BOLD = \"\\033[1;30m\";  // BLACK     public static final String RED_BOLD = \"\\033[1;31m\";    // RED     public static final String GREEN_BOLD = \"\\033[1;32m\";  // GREEN     public static final String YELLOW_BOLD = \"\\033[1;33m\"; // YELLOW     public static final String BLUE_BOLD = \"\\033[1;34m\";   // BLUE     public static final String PURPLE_BOLD = \"\\033[1;35m\"; // PURPLE     public static final String CYAN_BOLD = \"\\033[1;36m\";   // CYAN     public static final String WHITE_BOLD = \"\\033[1;37m\";  // WHITE      // Underline     public static final String BLACK_UNDERLINED = \"\\033[4;30m\";  // BLACK     public static final String RED_UNDERLINED = \"\\033[4;31m\";    // RED     public static final String GREEN_UNDERLINED = \"\\033[4;32m\";  // GREEN     public static final String YELLOW_UNDERLINED = \"\\033[4;33m\"; // YELLOW     public static final String BLUE_UNDERLINED = \"\\033[4;34m\";   // BLUE     public static final String PURPLE_UNDERLINED = \"\\033[4;35m\"; // PURPLE     public static final String CYAN_UNDERLINED = \"\\033[4;36m\";   // CYAN     public static final String WHITE_UNDERLINED = \"\\033[4;37m\";  // WHITE      // Background     public static final String BLACK_BACKGROUND = \"\\033[40m\";  // BLACK     public static final String RED_BACKGROUND = \"\\033[41m\";    // RED     public static final String GREEN_BACKGROUND = \"\\033[42m\";  // GREEN     public static final String YELLOW_BACKGROUND = \"\\033[43m\"; // YELLOW     public static final String BLUE_BACKGROUND = \"\\033[44m\";   // BLUE     public static final String PURPLE_BACKGROUND = \"\\033[45m\"; // PURPLE     public static final String CYAN_BACKGROUND = \"\\033[46m\";   // CYAN     public static final String WHITE_BACKGROUND = \"\\033[47m\";  // WHITE      // High Intensity     public static final String BLACK_BRIGHT = \"\\033[0;90m\";  // BLACK     public static final String RED_BRIGHT = \"\\033[0;91m\";    // RED     public static final String GREEN_BRIGHT = \"\\033[0;92m\";  // GREEN     public static final String YELLOW_BRIGHT = \"\\033[0;93m\"; // YELLOW     public static final String BLUE_BRIGHT = \"\\033[0;94m\";   // BLUE     public static final String PURPLE_BRIGHT = \"\\033[0;95m\"; // PURPLE     public static final String CYAN_BRIGHT = \"\\033[0;96m\";   // CYAN     public static final String WHITE_BRIGHT = \"\\033[0;97m\";  // WHITE      // Bold High Intensity     public static final String BLACK_BOLD_BRIGHT = \"\\033[1;90m\"; // BLACK     public static final String RED_BOLD_BRIGHT = \"\\033[1;91m\";   // RED     public static final String GREEN_BOLD_BRIGHT = \"\\033[1;92m\"; // GREEN     public static final String YELLOW_BOLD_BRIGHT = \"\\033[1;93m\";// YELLOW     public static final String BLUE_BOLD_BRIGHT = \"\\033[1;94m\";  // BLUE     public static final String PURPLE_BOLD_BRIGHT = \"\\033[1;95m\";// PURPLE     public static final String CYAN_BOLD_BRIGHT = \"\\033[1;96m\";  // CYAN     public static final String WHITE_BOLD_BRIGHT = \"\\033[1;97m\"; // WHITE      // High Intensity backgrounds     public static final String BLACK_BACKGROUND_BRIGHT = \"\\033[0;100m\";// BLACK     public static final String RED_BACKGROUND_BRIGHT = \"\\033[0;101m\";// RED     public static final String GREEN_BACKGROUND_BRIGHT = \"\\033[0;102m\";// GREEN     public static final String YELLOW_BACKGROUND_BRIGHT = \"\\033[0;103m\";// YELLOW     public static final String BLUE_BACKGROUND_BRIGHT = \"\\033[0;104m\";// BLUE     public static final String PURPLE_BACKGROUND_BRIGHT = \"\\033[0;105m\"; // PURPLE     public static final String CYAN_BACKGROUND_BRIGHT = \"\\033[0;106m\";  // CYAN     public static final String WHITE_BACKGROUND_BRIGHT = \"\\033[0;107m\";   // WHITE }\n// Define color constants public static final String TEXT_RESET = \"\\u001B[0m\"; public static final String TEXT_BLACK = \"\\u001B[30m\"; public static final String TEXT_RED = \"\\u001B[31m\"; public static final String TEXT_GREEN = \"\\u001B[32m\"; public static final String TEXT_YELLOW = \"\\u001B[33m\"; public static final String TEXT_BLUE = \"\\u001B[34m\"; public static final String TEXT_PURPLE = \"\\u001B[35m\"; public static final String TEXT_CYAN = \"\\u001B[36m\"; public static final String TEXT_WHITE = \"\\u001B[37m\";  // Implementation System.out.println(TEXT_RED + \"This text is red!\" + TEXT_RESET);\npublic static final String ANSI_BLACK_BACKGROUND = \"\\u001B[40m\"; public static final String ANSI_RED_BACKGROUND = \"\\u001B[41m\"; public static final String ANSI_GREEN_BACKGROUND = \"\\u001B[42m\"; public static final String ANSI_YELLOW_BACKGROUND = \"\\u001B[43m\"; public static final String ANSI_BLUE_BACKGROUND = \"\\u001B[44m\"; public static final String ANSI_PURPLE_BACKGROUND = \"\\u001B[45m\"; public static final String ANSI_CYAN_BACKGROUND = \"\\u001B[46m\"; public static final String ANSI_WHITE_BACKGROUND = \"\\u001B[47m\";\n",
    "reg_date": "2021-10-12T12:05:57.000Z"
  },
  {
    "id": 3157,
    "keyword": null,
    "link": null,
    "title": " java ternary operator",
    "description": "int val1 = 10; int val2 = 20;  int max = val1 >= val2 ? val1 : val2; \nObject myObject = booleanExpression ? valueIfTrue : valueIfFalse;\n// variable= condition ? value if condition is True : value if condition is false // only ternary operator in java int max,a=1,b=2; max= a>b ? a : b;  //will result in max = b\nbooleanExpression ? expression1 : expression2; //expression1 if booleanExpression==true //expression2 if booleanExpression==false\nbooleanExpression ? expression1 : expression2;\nThe condition part of a ternary operator is followed by a question mark (?).  After the question mark are the two values the ternary operator can return, separated by a colon (:).  The values part consists of two values. The first value is returned if the condition parts evaluates to true. The second value is returned if the condition part evaluates to false.\n",
    "reg_date": "2021-10-12T12:05:57.000Z"
  },
  {
    "id": 3158,
    "keyword": null,
    "link": null,
    "title": " java test",
    "description": "import org.junit.Assert; import org.junit.Test;  public class Test {      public static int square(int n) {         return n * n;     }      @Test     public void squareTest() {         Assert.assertEquals(25, square(5));         Assert.assertEquals(16, square(4));         Assert.assertEquals(9, square(3));         Assert.assertEquals(4, square(2));         Assert.assertEquals(1, square(1));     } } \n\tAn incredible language that receives far more hate than it deserves because of it's poor beginnings. \tEveryone remembers the slow java applets but often fail to understand Java's many positives including:  - compatability with many different systems  - Just-In-Time compilation making it almost as fast as a native language  - the wide range of high-quality and open source libraries developed over    many years  \tSure, it may not look as sexy as Python or NodeJS, but when you're debugging the call stack 50 functions deep, you'll be glad you picked Java\nimport org.junit.Assert; import org.junit.Test;  public class Test {      public static int square(int n) {         return n * n;     }      @Test     public void squareTest() {         Assert.assertEquals(25, square(5));         Assert.assertEquals(16, square(4));         Assert.assertEquals(9, square(3));         Assert.assertEquals(4, square(2));         Assert.assertEquals(1, square(1));     } }\n",
    "reg_date": "2021-10-12T12:05:57.000Z"
  },
  {
    "id": 3159,
    "keyword": null,
    "link": null,
    "title": " java test file exist",
    "description": "File tempFile = new File(\"c:/temp/temp.txt\"); boolean exists = tempFile.exists();\n",
    "reg_date": "2021-10-12T12:05:58.000Z"
  },
  {
    "id": 3160,
    "keyword": null,
    "link": null,
    "title": " java test if a string is a int",
    "description": "public static boolean isInt(String str) { \t   \ttry {       \t@SuppressWarnings(\"unused\")     \tint x = Integer.parseInt(str);       \treturn true; //String is an Integer \t} catch (NumberFormatException e) {     \treturn false; //String is not an Integer \t}   \t }\n",
    "reg_date": "2021-10-12T12:05:58.000Z"
  },
  {
    "id": 3161,
    "keyword": null,
    "link": null,
    "title": " java test if strings are equal",
    "description": "//This expression is true if str1 and str2 are equal, and false if they're not str1.equals(str2)  //example use case: String location = \"London\"; String destination = \"London\"; if (location.equals(destination)) { \tSystem.out.println(\"You have arrived!\"); }\n",
    "reg_date": "2021-10-12T12:05:58.000Z"
  },
  {
    "id": 3162,
    "keyword": null,
    "link": null,
    "title": " java testing with assertions",
    "description": "import org.junit.jupiter.api.Assertions; import org.junit.jupiter.api.Test;  public class AssertionExample {      /**      * The assertionExample function      * uses multiple assertions for the purpose of example;      * Usually in one method it is recommended to have 1 assertion;      */     @Test     public void assertionExample()     {         Assertions.assertEquals(2+2,4);          Assertions.assertNotEquals(6+3,10);          Assertions.assertTrue(\"Radu\".length()==4);          String tester = null;          Assertions.assertThrows(NullPointerException.class,()->tester.equals(\"emptyString\"));     } } \n",
    "reg_date": "2021-10-12T12:05:58.000Z"
  },
  {
    "id": 3163,
    "keyword": null,
    "link": null,
    "title": " java text file to arraylist",
    "description": "List<String> list = Files.readAllLines(new File(\"input.txt\").toPath(), Charset.defaultCharset() );\nScanner s = new Scanner(new File(\"filepath\")); ArrayList<String> list = new ArrayList<String>(); while (s.hasNext()){     list.add(s.next()); } s.close();\n",
    "reg_date": "2021-10-12T12:05:58.000Z"
  },
  {
    "id": 3164,
    "keyword": null,
    "link": null,
    "title": " java text ouput to console",
    "description": "System.out.println(\"Hello world!\");  //This will be printed out to the console and requires no imports.\n",
    "reg_date": "2021-10-12T12:05:58.000Z"
  },
  {
    "id": 3165,
    "keyword": null,
    "link": null,
    "title": " java thread",
    "description": " package com.journaldev.threads;  public class ThreadSleep {      public static void main(String[] args) throws InterruptedException {         long start = System.currentTimeMillis();         Thread.sleep(2000);         System.out.println(\"Sleep time in ms = \"+(System.currentTimeMillis()-start));              }  } \nclass ThreadJoining extends Thread  {      @Override     public void run()      {          for (int i = 0; i < 2; i++)          {              try             {                  Thread.sleep(500);                  System.out.println(\"Current Thread: \"                         + Thread.currentThread().getName());              }                 catch(Exception ex)              {                  System.out.println(\"Exception has\" +                                  \" been caught\" + ex);              }              System.out.println(i);          }      }  }     class GFG  {      public static void main (String[] args)      {          ThreadJoining t1 = new ThreadJoining();          ThreadJoining t2 = new ThreadJoining();          ThreadJoining t3 = new ThreadJoining();          t1.start();          try         {              System.out.println(\"Current Thread: \"                   + Thread.currentThread().getName());              t1.join();          }          catch(Exception ex)          {              System.out.println(\"Exception has \" +                                  \"been caught\" + ex);          }          t2.start();          try         {              System.out.println(\"Current Thread: \"                  + Thread.currentThread().getName());              t2.join();          }          catch(Exception ex)          {              System.out.println(\"Exception has been\" +                                      \" caught\" + ex);          }          t3.start();      }  } \npublic class ClassName extends Thread{   public void run(){     super.run();     //Your Code   } }  public class Main{   public static void main(String[] args){     ClassName thread = new ClassName();     thread.start();   } }\n// Copy and test // They run simultaneously  public static void main(String[] args) {   \t\t// How to create a thread         Thread thread = new Thread(new Runnable() {             @Override \t\t\t// Loop running in thread             public void run() {                 for (int i = 0; i < 20; i++) {                     System.out.println(\"Printing plus \" + i + \" in a worker thread.\");                     try {                         Thread.sleep(1000);                     } catch(Exception e) {                         e.printStackTrace();                     }                 }             }         });         thread.start();   \t\t// Loop running in main thread          for (int j = 0; j < 20 ; j++) {             System.out.println(\"Printing plus \" + j + \" in a main thread.\");             try {                 Thread.sleep(900);             } catch(Exception e) {                 e.printStackTrace();             }         }         }\nclass RunnableObject implements Runnable {    private Thread t;    private String threadName;        RunnableObject( String name) {       System.out.println(\"Creating \" +  threadName );       threadName = name;       t = new Thread (this, threadName);    }        public void run() {       System.out.println(\"Running \" +  threadName );    }        public void start () {       System.out.println(\"Starting \" +  threadName );       t.start ();    } }  public class TestThread {     public static void main(String args[]) {       RunnableObject R1 = new RunnableObject( \"Thread-1\");       R1.start();    }    }\npublic static void main(String[] args {    ...    Thread t1= new Thread(...);    t1.start();    ... }\n",
    "reg_date": "2021-10-12T12:05:58.000Z"
  },
  {
    "id": 3166,
    "keyword": null,
    "link": null,
    "title": " java thread class sleep",
    "description": " package com.journaldev.threads;  public class ThreadSleep {      public static void main(String[] args) throws InterruptedException {         long start = System.currentTimeMillis();         Thread.sleep(2000);         System.out.println(\"Sleep time in ms = \"+(System.currentTimeMillis()-start));              }  } \nThread.sleep(2000);\n",
    "reg_date": "2021-10-12T12:05:58.000Z"
  },
  {
    "id": 3167,
    "keyword": null,
    "link": null,
    "title": " java throw an exception",
    "description": "public static void foo() throws IOException {     // some code here, when something goes wrong, you might do:     throw new IOException(\"error message\"); }  public static void main(String[] args) {     try {         foo();     } catch (IOException e) {         System.out.println(e.getMessage());     } }\npublic void doChangePin(int oldPin, int pin) throws Exception {\t//need to add throws followed by exception name \t\tif (oldPin == pinCode) { \t\t\tpinCode = pin; \t\t} else { \t\t\tthrow new Exception(\"some message\");\t//throwing the exception by creating its new object \t\t} \t}\npublic static void main(String[] args) { \tScanner kb = new Scanner(System.in);     System.out.println(\"Enter a number\");     try {     \tdouble nb1 = kb.nextDouble();     \tif(nb1<0)         \tthrow new ArithmeticException();         else System.out.println( \"result : \" + Math.sqrt(nb1) );     } catch (ArithmeticException e) {         System.out.println(\"You tried an impossible sqrt\");     } }\n/* In this program we are checking the Student age  * if the student age<12 and weight <40 then our program   * should return that the student is not eligible for registration.  */ public class ThrowExample {    static void checkEligibilty(int stuage, int stuweight){        if(stuage<12 && stuweight<40) {          throw new ArithmeticException(\"Student is not eligible for registration\");        }       else {          System.out.println(\"Student Entry is Valid!!\");        }    }      public static void main(String args[]){       System.out.println(\"Welcome to the Registration process!!\");      checkEligibilty(10, 39);       System.out.println(\"Have a nice day..\");   }  }\nthrow new java.lang.Error(\"this is very bad\"); throw new java.lang.RuntimeException(\"this is not quite as bad\");\n",
    "reg_date": "2021-10-12T12:05:58.000Z"
  },
  {
    "id": 3168,
    "keyword": null,
    "link": null,
    "title": " java throws exception on method",
    "description": "/* In this program we are checking the Student age  * if the student age<12 and weight <40 then our program   * should return that the student is not eligible for registration.  */ public class ThrowExample {    static void checkEligibilty(int stuage, int stuweight){        if(stuage<12 && stuweight<40) {          throw new ArithmeticException(\"Student is not eligible for registration\");        }       else {          System.out.println(\"Student Entry is Valid!!\");        }    }      public static void main(String args[]){       System.out.println(\"Welcome to the Registration process!!\");      checkEligibilty(10, 39);       System.out.println(\"Have a nice day..\");   }  }\nstatic void testMethod() throws Exception {     String test = null;     test.toString(); }\n",
    "reg_date": "2021-10-12T12:05:59.000Z"
  },
  {
    "id": 3169,
    "keyword": null,
    "link": null,
    "title": " java throws multiple exceptions",
    "description": "// Before java 7 - syntax Java catch multiple exceptions and rethrow exception try {    // code that throw exceptions 1 and 3 } catch(SQLException e) {    logger.log(e); } catch(IOException e) {    logger.log(e); } catch(Exception e) {    logger.severe(e); }\n catch(IOException | SQLException ex){      logger.error(ex);      throw new MyException(ex.getMessage()); } \npublic class MyClass implements MyInterface {   public void find(int x) throws A_Exception, B_Exception{     ----     ----     ---   } }\n// syntax in java 7 Java catch multiple exceptions and rethrow exception try {    // code that throw exceptions 1 and 3 } catch(SQLException | IOException e) {    logger.log(e); } catch(Exception e) {    logger.severe(e); }\n",
    "reg_date": "2021-10-12T12:05:59.000Z"
  },
  {
    "id": 3170,
    "keyword": null,
    "link": null,
    "title": " java time",
    "description": "final long startTime = System.currentTimeMillis(); for (int i = 0; i < length; i++) {   // Do something } final long endTime = System.currentTimeMillis();  System.out.println(\"Total execution time: \" + (endTime - startTime));\nimport java.time.format.DateTimeFormatter; import java.time.LocalDateTime;   public class CurrentDateTimeExample1 {     public static void main(String[] args) {      DateTimeFormatter dtf = DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm:ss\");    LocalDateTime now = LocalDateTime.now();    System.out.println(dtf.format(now));   }   }   \nimport java.time.LocalTime; // import the LocalTime class ... // To display the current time (hour, minute, second, and nanoseconds) LocalTime time = LocalTime.now(); System.out.println(time); // 11:04:57.416546\n",
    "reg_date": "2021-10-12T12:05:59.000Z"
  },
  {
    "id": 3171,
    "keyword": null,
    "link": null,
    "title": " java time code",
    "description": "final long startTime = System.currentTimeMillis(); for (int i = 0; i < length; i++) {   // Do something } final long endTime = System.currentTimeMillis();  System.out.println(\"Total execution time: \" + (endTime - startTime));\n",
    "reg_date": "2021-10-12T12:05:59.000Z"
  },
  {
    "id": 3172,
    "keyword": null,
    "link": null,
    "title": " java time type",
    "description": "import java.time.LocalTime; // import the LocalTime class ... // To display the current time (hour, minute, second, and nanoseconds) LocalTime time = LocalTime.now(); System.out.println(time); // 11:04:57.416546\n",
    "reg_date": "2021-10-12T12:05:59.000Z"
  },
  {
    "id": 3173,
    "keyword": null,
    "link": null,
    "title": " java timer",
    "description": "timer.schedule(new TimerTask() {   @Override   public void run() {     // Your database code here   } }, 2*60*1000); // Since Java-8 timer.schedule(() -> /* your database code here */, 2*60*1000); \nimport java.util.Timer; \n",
    "reg_date": "2021-10-12T12:05:59.000Z"
  },
  {
    "id": 3174,
    "keyword": null,
    "link": null,
    "title": " java timestamp",
    "description": "Timestamp timestamp = new Timestamp(System.currentTimeMillis()); //2016-11-16 06:43:19.77 Copy\n   // 2021-03-24 16:48:05.591   Timestamp timestamp = new Timestamp(System.currentTimeMillis());    // 2021-03-24 16:48:05.591   Date date = new Date();   Timestamp timestamp2 = new Timestamp(date.getTime());    // convert Instant to Timestamp   Timestamp ts = Timestamp.from(Instant.now())    // convert ZonedDateTime to Instant to Timestamp   Timestamp ts = Timestamp.from(ZonedDateTime.now().toInstant()));    // convert Timestamp to Instant   Instant instant = ts.toInstant(); \npackage com.mkyong.date;  import java.sql.Timestamp; import java.text.SimpleDateFormat; import java.util.Date;  public class TimeStampExample {      private static final SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy.MM.dd.HH.mm.ss\");      public static void main(String[] args) {          //method 1         Timestamp timestamp = new Timestamp(System.currentTimeMillis());         System.out.println(timestamp);          //method 2 - via Date         Date date = new Date();         System.out.println(new Timestamp(date.getTime()));          //return number of milliseconds since January 1, 1970, 00:00:00 GMT         System.out.println(timestamp.getTime());          //format timestamp         System.out.println(sdf.format(timestamp));              }  } Copy\n package com.mkyong.app;  import java.sql.Timestamp; import java.text.SimpleDateFormat; import java.util.Date;  public class TimeStampExample {      // 2021.03.24.16.34.26     private static final SimpleDateFormat sdf1 = new SimpleDateFormat(\"yyyy.MM.dd.HH.mm.ss\");      // 2021-03-24T16:44:39.083+08:00     private static final SimpleDateFormat sdf2 = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\");      // 2021-03-24 16:48:05     private static final SimpleDateFormat sdf3 = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");      public static void main(String[] args) {          // method 1         Timestamp timestamp = new Timestamp(System.currentTimeMillis());         System.out.println(timestamp);                      // 2021-03-24 16:34:26.666          // method 2 - via Date         Date date = new Date();         System.out.println(new Timestamp(date.getTime()));  // 2021-03-24 16:34:26.666                                                             // number of milliseconds since January 1, 1970, 00:00:00 GMT         System.out.println(timestamp.getTime());            // 1616574866666          System.out.println(sdf1.format(timestamp));         // 2021.03.24.16.34.26          System.out.println(sdf2.format(timestamp));         // 2021-03-24T16:48:05.591+08:00          System.out.println(sdf3.format(timestamp));         // 2021-03-24 16:48:05      } } \n",
    "reg_date": "2021-10-12T12:05:59.000Z"
  },
  {
    "id": 3175,
    "keyword": null,
    "link": null,
    "title": " java timestamp from string",
    "description": "//parse ISO local date time String LocalDateTime timestamp=LocalDateTime.parse(\"2007-12-03T10:15:30\"); //parse custom String DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy MM dd HH:mm\"); LocalDate parsedDate = LocalDate.parse(\"1970 01 01 00:00\", formatter);\n",
    "reg_date": "2021-10-12T12:05:59.000Z"
  },
  {
    "id": 3176,
    "keyword": null,
    "link": null,
    "title": " java timestamp now",
    "description": "Timestamp timestamp = new Timestamp(System.currentTimeMillis()); //2016-11-16 06:43:19.77 Copy\n   // 2021-03-24 16:48:05.591   Timestamp timestamp = new Timestamp(System.currentTimeMillis());    // 2021-03-24 16:48:05.591   Date date = new Date();   Timestamp timestamp2 = new Timestamp(date.getTime());    // convert Instant to Timestamp   Timestamp ts = Timestamp.from(Instant.now())    // convert ZonedDateTime to Instant to Timestamp   Timestamp ts = Timestamp.from(ZonedDateTime.now().toInstant()));    // convert Timestamp to Instant   Instant instant = ts.toInstant(); \npackage com.mkyong.date;  import java.sql.Timestamp; import java.text.SimpleDateFormat; import java.util.Date;  public class TimeStampExample {      private static final SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy.MM.dd.HH.mm.ss\");      public static void main(String[] args) {          //method 1         Timestamp timestamp = new Timestamp(System.currentTimeMillis());         System.out.println(timestamp);          //method 2 - via Date         Date date = new Date();         System.out.println(new Timestamp(date.getTime()));          //return number of milliseconds since January 1, 1970, 00:00:00 GMT         System.out.println(timestamp.getTime());          //format timestamp         System.out.println(sdf.format(timestamp));              }  } Copy\n   // 2021-03-24 16:48:05.591   Timestamp timestamp = new Timestamp(System.currentTimeMillis());    // 2021-03-24 16:48:05.591   Date date = new Date();   Timestamp timestamp2 = new Timestamp(date.getTime());    // convert Instant to Timestamp   Timestamp ts = Timestamp.from(Instant.now())    // convert ZonedDateTime to Instant to Timestamp   Timestamp ts = Timestamp.from(ZonedDateTime.now().toInstant()));    // convert Timestamp to Instant   Instant instant = ts.toInstant();\n package com.mkyong.app;  import java.sql.Timestamp; import java.text.SimpleDateFormat; import java.util.Date;  public class TimeStampExample {      // 2021.03.24.16.34.26     private static final SimpleDateFormat sdf1 = new SimpleDateFormat(\"yyyy.MM.dd.HH.mm.ss\");      // 2021-03-24T16:44:39.083+08:00     private static final SimpleDateFormat sdf2 = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\");      // 2021-03-24 16:48:05     private static final SimpleDateFormat sdf3 = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");      public static void main(String[] args) {          // method 1         Timestamp timestamp = new Timestamp(System.currentTimeMillis());         System.out.println(timestamp);                      // 2021-03-24 16:34:26.666          // method 2 - via Date         Date date = new Date();         System.out.println(new Timestamp(date.getTime()));  // 2021-03-24 16:34:26.666                                                             // number of milliseconds since January 1, 1970, 00:00:00 GMT         System.out.println(timestamp.getTime());            // 1616574866666          System.out.println(sdf1.format(timestamp));         // 2021.03.24.16.34.26          System.out.println(sdf2.format(timestamp));         // 2021-03-24T16:48:05.591+08:00          System.out.println(sdf3.format(timestamp));         // 2021-03-24 16:48:05      } } \n",
    "reg_date": "2021-10-12T12:05:59.000Z"
  },
  {
    "id": 3177,
    "keyword": null,
    "link": null,
    "title": " java to check if its a number scanner",
    "description": "Scanner sc = new Scanner(System.in); int number; do {     System.out.println(\"Please enter a positive number!\");     while (!sc.hasNextInt()) {         System.out.println(\"That's not a number!\");         sc.next(); // this is important!     }     number = sc.nextInt(); } while (number <= 0); System.out.println(\"Thank you! Got \" + number);\n",
    "reg_date": "2021-10-12T12:06:00.000Z"
  },
  {
    "id": 3178,
    "keyword": null,
    "link": null,
    "title": " java tomorrow date",
    "description": "LocalDate today = LocalDate.now(); LocalDate tomorrow = today.plusDays(1);  // In string format LocalDate today = LocalDate.now(); String tomorrow = (today.plusDays(1)).format(DateTimeFormatter.ISO_DATE);\nDate dt = new Date(); DateTime dtOrg = new DateTime(dt); DateTime dtPlusOne = dtOrg.plusDays(1);\nLocalDate tomorrow = today.plusDays(1);\n",
    "reg_date": "2021-10-12T12:06:00.000Z"
  },
  {
    "id": 3179,
    "keyword": null,
    "link": null,
    "title": " java transform hashmap to list",
    "description": "List<Value> list = new ArrayList<Value>(map.values()); \n",
    "reg_date": "2021-10-12T12:06:00.000Z"
  },
  {
    "id": 3180,
    "keyword": null,
    "link": null,
    "title": " java treemap sort by value in reverse",
    "description": "Map<String, Integer> unSortedMap = getUnSortedMap();           System.out.println(\"Unsorted Map : \" + unSortedMap);   //LinkedHashMap preserve the ordering of elements in which they are inserted LinkedHashMap<String, Integer> sortedMap = new LinkedHashMap<>();   unSortedMap.entrySet()     .stream()     .sorted(Map.Entry.comparingByValue())     .forEachOrdered(x -> sortedMap.put(x.getKey(), x.getValue()));   System.out.println(\"Sorted Map   : \" + sortedMap);   Output:   Unsorted Map : {alex=1, charles=4, david=2, brian=5, elle=3} Sorted Map   : {alex=1, david=2, elle=3, charles=4, brian=5} \n",
    "reg_date": "2021-10-12T12:06:00.000Z"
  },
  {
    "id": 3181,
    "keyword": null,
    "link": null,
    "title": " java trim string to length",
    "description": "string.abbreviate(desired_length);\n",
    "reg_date": "2021-10-12T12:06:00.000Z"
  },
  {
    "id": 3182,
    "keyword": null,
    "link": null,
    "title": " java try catch",
    "description": "try {   // Code that may have error } catch(ErrorName e){   // Another code }\npublic class MyClass {   public static void main(String[ ] args) {     try {       int[] myNumbers = {1, 2, 3, 4, 5, 6};       System.out.println(myNumbers[10]);     } catch (Exception e) {       System.out.println(\"Something went wrong. check again\");     }   } }  \ntry {   // Code to try, which is throwing an Exception, e.g.   /*example*/ Thread.sleep(100) } catch (InterruptedException e /*Or any other exception*/) {   // Handle Exception, usually:   e.printStackTrace(); // Print the StackTrace of the exception to see what cause it } finally {   // Code executed after try / catch, used to close streams   /*example*/ in.close(); }\ntry {   //  Block of code to try } catch(Exception e) {   //  Block of code to handle errors }\ntry block: code that is protected for any exceptions. and it is mandatory  (only try) catch block: if any exception happens during runtime in the try block,  the catch block will catch that exception. if any exception happens during runtime in the try block,  control will be given to catch block. An optional finally block gives us a chance to run the code which  we want to execute EVERYTIME a try-catch block is completed  &ndash; either with errors or without any error.\n",
    "reg_date": "2021-10-12T12:06:00.000Z"
  },
  {
    "id": 3183,
    "keyword": null,
    "link": null,
    "title": " java try catch integer.parseint",
    "description": "public static Integer tryParse(String text) {   try {     return Integer.parseInt(text);   } catch (NumberFormatException e) {     return null;   } }\n",
    "reg_date": "2021-10-12T12:06:00.000Z"
  },
  {
    "id": 3184,
    "keyword": null,
    "link": null,
    "title": " java try with resources",
    "description": "// It was introduced because of some resources used in Java  // (like SQL connections or streams being difficult to be handled  // properly; as an example, in java 6 to handle a InputStream  // properly you had to do something like:  InputStream stream = new MyInputStream(...); try {     // ... use stream } catch(IOException e) {    // handle exception } finally {     try {         if(stream != null) {             stream.close();         }     } catch(IOException e) {         // handle yet another possible exception     } } // Do you notice that ugly double try? now with try-with-resources  // you can do this:  try (InputStream stream = new MyInputStream(...)){     // ... use stream } catch(IOException e) {    // handle exception }  // and close() is automatically called, if it throws an IOException,  // it will be supressed (as specified in the Java Language  // Specification 14.20.3). Same happens for java.sql.Connection\ntry (PrintWriter writer = new PrintWriter(new File(\"test.txt\"))) {   writer.println(\"Hello World\"); }\n",
    "reg_date": "2021-10-12T12:06:00.000Z"
  },
  {
    "id": 3185,
    "keyword": null,
    "link": null,
    "title": " java turn string into int",
    "description": "String myString = \"1234\"; int foo = Integer.parseInt(myString);\nint result = Integer.parseInt(number);\nint result = Integer.parseInt(\"500\"); System.out.println(result) // prints 500 as int\nString myString = \"1234\"; int number = Integer.parseInt(myString);\n\tString number = \"10\"; \tint result = Integer.parseInt(number);\t\t\t \tSystem.out.println(result); \n//parsing string to int String numberToParse = \"420\"; int number = 0;  try{   \tnumber = Integer.parseInt(numberToParse); }catch(NumberFormatException e){ \t//the string cannot be parsed into a number   \t//ex Integer.parseInt(\"d15\");   \te.printStackTrace(); }  System.out.println(number);\n",
    "reg_date": "2021-10-12T12:06:00.000Z"
  },
  {
    "id": 3186,
    "keyword": null,
    "link": null,
    "title": " java two dimensional arrays",
    "description": "// two dimensional string array in java example public class TwoDimensionalStringArray  {    public static void main(String[] args)     {       String[][] animals = {               { \"Lion\", \"Tiger\", \"Cheetah\" },               { \"Deer\", \"Jackal\", \"Bear\" },               { \"Hyena\", \"Fox\", \"Elephant\" } };       for(int a = 0; a < animals.length; a++)        {          System.out.print(animals[a][0] + \" \");          for(int b = 1; b < animals[a].length; b++)           {             System.out.print(animals[a][b] + \" \");          }          System.out.println();       }    } }\nint[][] multiples = new int[4][2];     // 2D integer array with 4 rows                                            and 2 columns String[][] cities = new String[3][3];  // 2D String array with 3 rows                                            and 3 columns\nclass MultidimensionalArray {     public static void main(String[] args) {          int[][] a = {             {1, -2, 3},              {-4, -5, 6, 9},              {7},          };                for (int i = 0; i < a.length; ++i) {             for(int j = 0; j < a[i].length; ++j) {                 System.out.println(a[i][j]);             }         }     } }\nint[][] 2darray = new int[rangee][colonne];\n",
    "reg_date": "2021-10-12T12:06:00.000Z"
  },
  {
    "id": 3187,
    "keyword": null,
    "link": null,
    "title": " java type casting",
    "description": "Primitive Type casting and Reference Type casting  PRIMITIVE CASTING: implicit casting (casting smaller type to larger int a = 100; double c = a;)  explicit casting (casting larger to smaller   byte b = (byte) a;  REFERENCE CASTING:  upcasting - implicitly done (casting smaller type to larger) Collection<Integer> collection = new ArrayList<>();  downcasting (cast larger type to smaller one ) List <Integer> list = ( ArrayList ) collection; FRAMEWORK EXAMPLE: Up Casting, Down Casting in Multi Browser testing.  WebDriver, Chrome Driver, Firefox Driver object  I casted to WebDriver to making reference type.  Whenever you taking Screenshots,  whenever executing Java script command. \nAssigning a value of one type to a variable of another type is known as Type Casting. Auto-boxing; is a process when you take a primitive value and assign into wrapper class object. Un-boxing; is a process when you take Wrapper class object and convert to primitive.   \n// You can typecast to convert a variable of one data type to another. // Wide Casting converts small data types to larger ones. // Narrow Casting converts large data types to smaller ones. // Java can automatically Wide Cast. // Java will throw an error when trying to automatically Narrow Cast. // This is because data is often lost when Narrow Casting. // Narrow Casting must be done manually.  //Wide Cast: int SomeNumber = 5; double WideCastedNumber = (double)SomeNumber;  //Narrow Cast: double SomeNumber = 5.39; int NarrowCastedNumber = (int)SomeNumber; //Note: The data that holds the decimal places will be lost!\nJAVA: Example of cast:  int SomeNumber = 5; //int  double WideCastedNumber = (double)SomeNumber; //from int to double  double myDouble = 9.78; int myInt = (int) myDouble; // from double to int\nByte-->short-->char-->Int-->long-->float-->double\n",
    "reg_date": "2021-10-12T12:06:01.000Z"
  },
  {
    "id": 3188,
    "keyword": null,
    "link": null,
    "title": " java typeof",
    "description": "Object obj = null; obj = new ArrayList<String>(); System.out.println(obj.getClass());  obj = \"dummy\"; System.out.println(obj.getClass());  obj = 4; System.out.println(obj.getClass());\n",
    "reg_date": "2021-10-12T12:06:01.000Z"
  },
  {
    "id": 3189,
    "keyword": null,
    "link": null,
    "title": " java types of list",
    "description": "There are four types of lists in Java i.e. Stack, LinkedList, ArrayList, and Vector.    Hence, when you have to implement list Interface,  you can implement any of the above list type class depending on the requirements.  To include the functionality of the list interface in your program,  you will have to import the package java.util. * that contain list interface and other classes definitions as follows:  import java.util.*;    \n",
    "reg_date": "2021-10-12T12:06:01.000Z"
  },
  {
    "id": 3190,
    "keyword": null,
    "link": null,
    "title": " java union type",
    "description": "Does not exist due to security reasons\n",
    "reg_date": "2021-10-12T12:06:01.000Z"
  },
  {
    "id": 3191,
    "keyword": null,
    "link": null,
    "title": " java unique id",
    "description": "String uuid = UUID.randomUUID().toString();\nimport java.util.UUID; public class UUIDExample. { public static void main(String[] args) { UUID uuid=UUID.randomUUID(); //Generates random UUID. System.out.println(uuid); } }\n",
    "reg_date": "2021-10-12T12:06:01.000Z"
  },
  {
    "id": 3192,
    "keyword": null,
    "link": null,
    "title": " java unit test an api",
    "description": "@Test public void   givenUserExists_whenUserInformationIsRetrieved_thenRetrievedResourceIsCorrect()   throws ClientProtocolException, IOException {        // Given     HttpUriRequest request = new HttpGet( \"https://api.github.com/users/eugenp\" );       // When     HttpResponse response = HttpClientBuilder.create().build().execute( request );       // Then     GitHubUser resource = RetrieveUtil.retrieveResourceFromResponse(       response, GitHubUser.class);     assertThat( \"eugenp\", Matchers.is( resource.getLogin() ) ); } \n",
    "reg_date": "2021-10-12T12:06:01.000Z"
  },
  {
    "id": 3193,
    "keyword": null,
    "link": null,
    "title": " java unsigned int",
    "description": "import com.google.common.primitives.UnsignedInteger; import com.google.common.primitives.UnsignedInts;   public class Guava_example { public static void main(String args[]) {     int a = UnsignedInts.parseUnsignedInt(UnsignedInteger.MAX_VALUE.toString());     String maxInt = UnsignedInts.toString(a);     System.out.println(maxInt);  } }\n",
    "reg_date": "2021-10-12T12:06:01.000Z"
  },
  {
    "id": 3194,
    "keyword": null,
    "link": null,
    "title": " java uppercase",
    "description": "string s=\"hello\"; s = Character.toUpperCase(s.charAt(0)) + s.substring(1); The output will be: Hello\n\"Hello World\".toUpperCase()\nconst upperCase = function(names){     const toLower = names.toLowerCase().split(' ');     const namesUpper = [];     for(const wordName of toLower){         namesUpper.push(wordName[0].toUpperCase() + wordName.slice(1));     }     return namesUpper.join(' '); }\npublic class Guru99 {        public static void main(String args[]) {                String S1 = new String(\"min&uacute;sculas convertidas en may&uacute;sculas\");                  // Convertir a UpperCase             System.out.println(S1.toUpperCase());        } } \npublic class StringToUppercaseDemo {    public static void main(String[] args)    {       String str = \"flower brackets\";       String strUpper = str.toUpperCase();       System.out.println(strUpper);    } }\n",
    "reg_date": "2021-10-12T12:06:01.000Z"
  },
  {
    "id": 3195,
    "keyword": null,
    "link": null,
    "title": " java usaco code",
    "description": "/* Use the slash-star style comments or the system won't see your    identification information */ /* ID: your_id_here LANG: JAVA TASK: test */ import java.io.*; import java.util.*;  class test {   public static void main (String [] args) throws IOException {     // Use BufferedReader rather than RandomAccessFile; it's much faster     BufferedReader f = new BufferedReader(new FileReader(\"test.in\"));                                                   // input file name goes above     PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(\"test.out\")));     // Use StringTokenizer vs. readLine/split -- lots faster     StringTokenizer st = new StringTokenizer(f.readLine()); \t\t\t\t\t\t  // Get line, break into tokens     int i1 = Integer.parseInt(st.nextToken());    // first integer     int i2 = Integer.parseInt(st.nextToken());    // second integer     out.println(i1+i2);                           // output result     out.close();                                  // close the output file   } }\n",
    "reg_date": "2021-10-12T12:06:01.000Z"
  },
  {
    "id": 3196,
    "keyword": null,
    "link": null,
    "title": " java use external enum in another class switch statement",
    "description": "Determine the enum value represented by the int value and then switch on the enum value.  enum GuideView {     SEVEN_DAY,     NOW_SHOWING,     ALL_TIMESLOTS }  // Working on the assumption that your int value is  // the ordinal value of the items in your enum public void onClick(DialogInterface dialog, int which) {     // do your own bounds checking     GuideView whichView = GuideView.values()[which];     switch (whichView) {         case SEVEN_DAY:             ...             break;         case NOW_SHOWING:             ...             break;     } }\nprivate enum FooNum {   //Options for your enum   A,    B   }  public void foo(FooNum fooNum){  switch(fooNum){ \tcase A:\t\t \t    //you selected A     \tbreak;   \tcase B:     \t//you selected B \t\tbreak;     \tdefault:\t\t\t \t    //do some stuff \t    break; \t}  } \n",
    "reg_date": "2021-10-12T12:06:01.000Z"
  },
  {
    "id": 3197,
    "keyword": null,
    "link": null,
    "title": " java use method in another class",
    "description": "class A {         public void a1 ( ) {      }        private void a2 ( ) {      }  }    class B {        private A objA = new A ( );        public void b1 ( ) {          // Call to method a1. This works.          objA.a1 ();      }        void b2 ( ) {          // Call to method a2. This will give compile error.          objA.a2 ();      }  } \n",
    "reg_date": "2021-10-12T12:06:02.000Z"
  },
  {
    "id": 3198,
    "keyword": null,
    "link": null,
    "title": " java use thread pool executor",
    "description": "import java.util.concurrent.Executors; import java.util.concurrent.ThreadPoolExecutor; import java.util.concurrent.TimeUnit;  public class TestThread { \t    public static void main(final String[] arguments) throws InterruptedException {       ThreadPoolExecutor executor = (ThreadPoolExecutor)Executors.newCachedThreadPool();        //Stats before tasks execution       System.out.println(\"Largest executions: \"          + executor.getLargestPoolSize());       System.out.println(\"Maximum allowed threads: \"          + executor.getMaximumPoolSize());       System.out.println(\"Current threads in pool: \"          + executor.getPoolSize());       System.out.println(\"Currently executing threads: \"          + executor.getActiveCount());       System.out.println(\"Total number of threads(ever scheduled): \"          + executor.getTaskCount());        executor.submit(new Task());       executor.submit(new Task());        //Stats after tasks execution       System.out.println(\"Core threads: \" + executor.getCorePoolSize());       System.out.println(\"Largest executions: \"          + executor.getLargestPoolSize());       System.out.println(\"Maximum allowed threads: \"          + executor.getMaximumPoolSize());       System.out.println(\"Current threads in pool: \"          + executor.getPoolSize());       System.out.println(\"Currently executing threads: \"          + executor.getActiveCount());       System.out.println(\"Total number of threads(ever scheduled): \"          + executor.getTaskCount());        executor.shutdown();    }       static class Task implements Runnable {        public void run() {           try {             Long duration = (long) (Math.random() * 5);             System.out.println(\"Running Task! Thread Name: \" +                Thread.currentThread().getName());             TimeUnit.SECONDS.sleep(duration);             System.out.println(\"Task Completed! Thread Name: \" +                Thread.currentThread().getName());          } catch (InterruptedException e) {             e.printStackTrace();          }       }    } }\n",
    "reg_date": "2021-10-12T12:06:02.000Z"
  },
  {
    "id": 3199,
    "keyword": null,
    "link": null,
    "title": " java user defined exception example",
    "description": "class InvalidAgeException extends Exception{    InvalidAgeException(String s){     super(s);    }   }   class TestCustomException1{         static void validate(int age)throws InvalidAgeException{        if(age<18)         throw new InvalidAgeException(\"not valid\");        else         System.out.println(\"welcome to vote\");      }            public static void main(String args[]){         try{         validate(13);         }catch(Exception m){System.out.println(\"Exception occured: \"+m);}            System.out.println(\"rest of the code...\");     }   }   Output:Exception occured: InvalidAgeException:not valid        rest of the code...\n",
    "reg_date": "2021-10-12T12:06:02.000Z"
  },
  {
    "id": 3200,
    "keyword": null,
    "link": null,
    "title": " java using .indexof to fin a space",
    "description": "class Sample{ public static void main(String[] args) {     String s = \"1110 001\";     int index = -1;     for(int i = 0; i < s.length(); i++ ){         if(Character.isWhitespace(s.charAt(i))){             index = i;             break;         }     }      System.out.println(\"Required Index : \" + index); } }\n",
    "reg_date": "2021-10-12T12:06:02.000Z"
  },
  {
    "id": 3201,
    "keyword": null,
    "link": null,
    "title": " java uuid",
    "description": "// Import Java UUID Utils import java.utils.UUID;  // Execute function fromString() with your string as argument. // Returns an uuid, which is your string converted into an UUID. UUID uuid = UUID.fromString(string);\nimport java.util.UUID;  public class RandomStringUUID {     public static void main(String[] args) {         // Creating a random UUID (Universally unique identifier).         UUID uuid = UUID.randomUUID();         String randomUUIDString = uuid.toString();          System.out.println(\"Random UUID String = \" + randomUUIDString);         System.out.println(\"UUID version       = \" + uuid.version());         System.out.println(\"UUID variant       = \" + uuid.variant());     } } \nString id = UUID.randomUUID().toString();\n",
    "reg_date": "2021-10-12T12:06:02.000Z"
  },
  {
    "id": 3202,
    "keyword": null,
    "link": null,
    "title": " java uuid from string",
    "description": "// Import Java UUID Utils import java.utils.UUID;  // Execute function fromString() with your string as argument. // Returns an uuid, which is your string converted into an UUID. UUID uuid = UUID.fromString(string);\nimport java.utils.UUID;  String strInput = \"-1068942631\"; String uuidFromString = UUID.nameUUIDFromBytes( String.valueOf( strInput ).getBytes() ).toString();  System.out.println(uuidFromString);\nUUID.fromString(string);\n",
    "reg_date": "2021-10-12T12:06:02.000Z"
  },
  {
    "id": 3203,
    "keyword": null,
    "link": null,
    "title": " java variable declaration",
    "description": "/* Depending on what variables you want to declare */ String hello = \"hello\"; //characters short one = 12;//shorter integers int two = 2000; //complete integer up too 32 bits long number = 2000000; //complete integer up to 64 bits float decimal = 1.512 //up to 7 decimal digits double million = 1.387892847395 //up tp 16 decmial digits Bool condition = true; // true or false char a = \"a\"; // unicode character\njava decleration  float simpleInterest; //Declaring float variable\nint i(0);\nint myVariable = 42;    //This is the most commonly used variable. Only use other variables if you have a good reason to.\njava decleartion   int a, b, c;         // Declares three ints, a, b, and c. int a = 10, b = 10;  // Example of initialization byte B = 22;         // initializes a byte type variable B. double pi = 3.14159; // declares and assigns a value of PI. char a = 'a';        // the char variable a iis initialized with value 'a'\n",
    "reg_date": "2021-10-12T12:06:02.000Z"
  },
  {
    "id": 3204,
    "keyword": null,
    "link": null,
    "title": " java variable in string",
    "description": "String string = String.format(\"A string %s\", aVariable);\n",
    "reg_date": "2021-10-12T12:06:02.000Z"
  },
  {
    "id": 3205,
    "keyword": null,
    "link": null,
    "title": " java variables",
    "description": "/* Depending on what variables you want to declare */ String hello = \"hello\"; //characters short one = 12;//shorter integers int two = 2000; //complete integer up too 32 bits long number = 2000000; //complete integer up to 64 bits float decimal = 1.512 //up to 7 decimal digits double million = 1.387892847395 //up tp 16 decmial digits Bool condition = true; // true or false char a = \"a\"; // unicode character\njava decleration  float simpleInterest; //Declaring float variable\n/* ##\tVariable - Container which holds the value while the Java program is executed.  - Assigned with a data type.  - Name of memory location.   ##\tThere are three types of variables in java:  1) Local variable  2) Static (or class) variable  3) Instance variable */\nint myVariable = 42;    //This is the most commonly used variable. Only use other variables if you have a good reason to.\nclass Variables {     public static void main(String[] args) {         String msg = \"Hello World\"; // Strings         int number = 10; // Integers         float decimal = 7.369f; // Make sure to end the decimal with an f.         char letter = 'A'; // Characters         boolean result = true; // Booleans     } }\n",
    "reg_date": "2021-10-12T12:06:02.000Z"
  },
  {
    "id": 3206,
    "keyword": null,
    "link": null,
    "title": " java variables in annotations",
    "description": "import org.junit.Test; import static org.junit.Assert.*;  public class MyTestClass {     private static final int TEST_TIMEOUT = 60000; // one minute per test      @Test(timeout=TEST_TIMEOUT)     public void testJDK()     {         assertTrue(\"Something is very wrong\", Boolean.TRUE);     } }\n",
    "reg_date": "2021-10-12T12:06:03.000Z"
  },
  {
    "id": 3207,
    "keyword": null,
    "link": null,
    "title": " java vector push back",
    "description": "// push_back equivalent ArrayList<int> a = new ArrayList<int>(); a.add(2);             // Add element to the ArrayList. a.add(4);  // pop_back equivalent. a.remove(a.size()-1); // Remove the last element from the ArrayList.\n",
    "reg_date": "2021-10-12T12:06:03.000Z"
  },
  {
    "id": 3208,
    "keyword": null,
    "link": null,
    "title": " java vector remove all elements",
    "description": "Vector.clear()\n",
    "reg_date": "2021-10-12T12:06:03.000Z"
  },
  {
    "id": 3209,
    "keyword": null,
    "link": null,
    "title": " java version command",
    "description": "java --version\njava -version\n",
    "reg_date": "2021-10-12T12:06:03.000Z"
  },
  {
    "id": 3210,
    "keyword": null,
    "link": null,
    "title": " java vs c",
    "description": "// C is a procedural, low level, and compiled language. Java is an object-oriented, high level, and interpreted language. Java uses objects, while C uses functions. Java is easier to learn and use because it's high level, while C can do more and perform faster because it's closer to machine code\n",
    "reg_date": "2021-10-12T12:06:03.000Z"
  },
  {
    "id": 3211,
    "keyword": null,
    "link": null,
    "title": " java vs python",
    "description": "// Both languages are great for beginners. However, they have their // differences. Java is an object-oriented programming language, // whereas Python is often considered to be a scripting language.\nGetting input from user , python & java  JAVA:   class HelloWorld {   public static void main(String[] args) {     Scanner myObj = new Scanner(System.in);  // Create a Scanner object     System.out.println(\"Enter username\");      String userName = myObj.nextLine();  // Read user input     System.out.println(\"Username is: \" + userName);  // Output user input   } }  PYTHON:  input = input('Enter username:') print('Username is:', input)\n",
    "reg_date": "2021-10-12T12:06:03.000Z"
  },
  {
    "id": 3212,
    "keyword": null,
    "link": null,
    "title": " java wait 2 seconds",
    "description": "try         {     Thread.sleep(1000); }  catch(InterruptedException ex)  {     Thread.currentThread().interrupt(); } \nSyntax : ========================================================= \tThread.sleep(1000); // 1000 milliseconds..          | ========================================================= int i=0; for(;;){ \tThread.sleep(2000); // set time delay to 2 seconds..    \tSystem.out.println(i++); // output : every output will display after 2 seconds..   \t }\n/** from: java.util.concurrent.TimeUnit **/  // Sleep for 1 second TimeUnit.SECONDS.sleep(1);  // Sleep for 1 minute TimeUnit.MINUTES.sleep(1);\n",
    "reg_date": "2021-10-12T12:06:03.000Z"
  },
  {
    "id": 3213,
    "keyword": null,
    "link": null,
    "title": " java wait a second",
    "description": "try         {     Thread.sleep(1000); }  catch(InterruptedException ex)  {     Thread.currentThread().interrupt(); } \n// Java program to demonstrate  // sleep() method of TimeUnit Class     import java.util.concurrent.*;     class WaitASecond {      public static void main(String args[])      {          // Get time to sleep          long timeToSleep = 0L;             // Create a TimeUnit object          TimeUnit time = TimeUnit.SECONDS;             try {                 System.out.println(\"Going to sleep for \"                                + timeToSleep                                 + \" seconds\");                 // using sleep() method              time.sleep(timeToSleep);                 System.out.println(\"Slept for \"                                + timeToSleep                                 + \" seconds\");          }             catch (InterruptedException e) {              System.out.println(\"Interrupted \"                                + \"while Sleeping\");          }      }  } \n",
    "reg_date": "2021-10-12T12:06:04.000Z"
  },
  {
    "id": 3214,
    "keyword": null,
    "link": null,
    "title": " java wait for user input",
    "description": "public class ScannerTest {      public static void main(String[] args) {         Scanner scanner = new Scanner(System.in);         try {             while (true) {                 System.out.println(\"Please input a line\");                 long then = System.currentTimeMillis();                 String line = scanner.nextLine();                 long now = System.currentTimeMillis();                 System.out.printf(\"Waited %.3fs for user input%n\", (now - then) / 1000d);                 System.out.printf(\"User input was: %s%n\", line);             }         } catch(IllegalStateException | NoSuchElementException e) {             // System.in has been closed             System.out.println(\"System.in was closed; exiting\");         }     } } \n",
    "reg_date": "2021-10-12T12:06:04.000Z"
  },
  {
    "id": 3215,
    "keyword": null,
    "link": null,
    "title": " java what is integer",
    "description": "int i = 0;\n",
    "reg_date": "2021-10-12T12:06:04.000Z"
  },
  {
    "id": 3216,
    "keyword": null,
    "link": null,
    "title": " java what is name",
    "description": "public class Main {   public static void main(String[] args) {     var scanner = new java.util.Scanner(System.in);     System.out.print(\"What is your name? \");     var name = scanner.nextLine();     System.out.println(\"Hello \" + name + \"!\"):   } }\n",
    "reg_date": "2021-10-12T12:06:04.000Z"
  },
  {
    "id": 3217,
    "keyword": null,
    "link": null,
    "title": " java what is static",
    "description": "//Java Program to get the cube of a given number using the static method   using static before a method or variable we can access it by not creating a  instance of it.in the program we directly used student.cube(5) class Calculate{     static int cube(int x){     return x*x*x;     }        public static void main(String args[]){     int result=Calculate.cube(5);     System.out.println(result);     }   }  \nStatic keyword is used a lot in java.   Static means, you can access those static variables without creating an object, just by using a class name. This means that only one instance of that static member is created which is shared across all instances of the class. Basically we use static keyword when all members share same instance.\nIn Java, static keyword is mainly used for memory management. It can be used with variables, methods, blocks and nested classes. It is a keyword which is used to share the same variable or method of a given class. Basically, static is used for a constant variable or a method that is same for every instance of a class\nThe static keyword in Java is used for memory management mainly. We can apply static keyword with variables, methods, blocks and nested classes. The static keyword belongs to the class    than an instance of the class.  The static can be:  Variable (also known as a class variable) Method (also known as a class method) Block Nested class\nstatic keyword is a non-access modifier. static keyword can be used with  class level variable, block, method and inner class or nested class.\nIn the Java programming language, the keyword static indicates that the particular member belongs to a type itself, rather than to an instance of that type. This means that only one instance of that static member is created which is shared across all instances of the class.\n",
    "reg_date": "2021-10-12T12:06:04.000Z"
  },
  {
    "id": 3218,
    "keyword": null,
    "link": null,
    "title": " java while schleife",
    "description": "int i = 0;  do{ \ti++; \tSystem.out.println(i); }while(int i < 9);\nint i = 0;  while(i < 9){   i++;   System.out.println(i); }\n",
    "reg_date": "2021-10-12T12:06:04.000Z"
  },
  {
    "id": 3219,
    "keyword": null,
    "link": null,
    "title": " java windowlistener close window",
    "description": "thisWindow.addWindowListener(new WindowAdapter() {                     @Override                     public void windowClosing(WindowEvent we) {                         //Do stuff                     }                 } );\n",
    "reg_date": "2021-10-12T12:06:04.000Z"
  },
  {
    "id": 3220,
    "keyword": null,
    "link": null,
    "title": " java word count",
    "description": "package com.company; import java.util.*;  public class Main{     public static int countWords(String s)     {         int count=0;          char ch[]= new char[s.length()];         for(int i=0;i<s.length();i++)         {             ch[i]= s.charAt(i);             if( ((i>0)&&(ch[i]!=' ')&&(ch[i-1]==' ')) || ((ch[0]!=' ')&&(i==0)) )                 count++;         }         return count;     }     public static void main(String[] args) {         Scanner in = new Scanner(System.in);         System.out.print(\"Give word:\");         String word = in.nextLine();         System.out.println(countWords(word) + \" words.\");     } }\n public static void main(String[] args)     {          //return the number of words in a string                  String example = \"This is a good exercise\";                 int length = example.split(\" \").length;                System.out.println(\"The string is \" + length + \" words long.\");                       }\n String name = \"Carmen is a fantastic play\"; //arbitrary sentence                  int numWords = (name.split(\"\\\\s+\")).length; //split string based on whitespace                                                 //split returns array - find legth of array                  System.out.println(numWords);\npublic static void main(String[] args)     {          //Scanner object instantiation          Scanner dude = new Scanner(System.in);                 //variable declaration         String string1 = \"\";         int count = 0;         boolean isWord = false;                         //user prompt and input         System.out.println(\"Enter in your string\");         string1 = dude.nextLine();                 int endOfLine = string1.length()-1;         char ch [] = string1.toCharArray();                 for (int i = 0; i < string1.length(); i++)        {             if(Character.isLetter(ch[i]) && i != endOfLine)            {//if character is letter and not end of line                isWord = true; //it is part of a word             }              if (!Character.isLetter(ch[i]) && isWord)            { //if character is not a letter, and previous               //character is a letter i.e. non-letter is               //preceded by character                count++; //add to word count                isWord = false; //get ready to detect new word              }            if (Character.isLetter(ch[i]) && i == endOfLine)            { //if character is letter               //and at end of line                 count++; //add to word count                 isWord = false;             }                    }         System.out.println(\"There are \" +count+ \" words\");          }\n",
    "reg_date": "2021-10-12T12:06:04.000Z"
  },
  {
    "id": 3221,
    "keyword": null,
    "link": null,
    "title": " java write in a file without overwriting",
    "description": "PrintWriter pw = new PrintWriter(new FileWriter(file, true))\n",
    "reg_date": "2021-10-12T12:06:04.000Z"
  },
  {
    "id": 3222,
    "keyword": null,
    "link": null,
    "title": " java write on hdfs",
    "description": "Configuration configuration = new Configuration(); configuration.set(\"fs.defaultFS\", \"hdfs://localhost:9000\"); FileSystem fileSystem = FileSystem.get(configuration); //Create a path String fileName = \"my_text.txt\"; // using \"/\" in the start of the path will ensure to get the exact path that I want Path hdfsWritePath = new Path(\"/my/dirr/\" + fileName); FSDataOutputStream fsDataOutputStream = fileSystem.create(hdfsWritePath,true); BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(fsDataOutputStream,StandardCharsets.UTF_8)); /** Output the results to the HDFS **/ bufferedWriter.write(\"Hello from java\"); bufferedWriter.newLine(); bufferedWriter.close(); fileSystem.close();\n",
    "reg_date": "2021-10-12T12:06:05.000Z"
  },
  {
    "id": 3223,
    "keyword": null,
    "link": null,
    "title": " java write string",
    "description": "System.out.println(\"Hello Console\");\n",
    "reg_date": "2021-10-12T12:06:05.000Z"
  },
  {
    "id": 3224,
    "keyword": null,
    "link": null,
    "title": " java write to file",
    "description": "import java.io.FileWriter;   // Import the FileWriter class import java.io.IOException;  // Import the IOException class to handle errors  public class WriteToFile {   public static void main(String[] args) {     try {       FileWriter myWriter = new FileWriter(\"filename.txt\");       myWriter.write(\"Files in Java might be tricky, but it is fun enough!\");       myWriter.close();       System.out.println(\"Successfully wrote to the file.\");     } catch (IOException e) {       System.out.println(\"An error occurred.\");       e.printStackTrace();     }   } }\nFile myObj = new File(\"path\"); myObj.createNewFile(); FileWriter myWriter = new FileWriter(\"path\"); myWriter.write(\"text\"); myWriter.close();\nimport java.io.FileWriter;   // Import the FileWriter class import java.io.IOException;  // Import the IOException class to handle errors  public class WriteToFile {   public static void main(String[] args) {     try {       FileWriter fw = new FileWriter(\"C:/path/to/filename.txt\");       fw.write(\"this is how u write a string\"); \t  fw.write(String.valueOf(108)); // cast number to string       myWriter.close();     } catch (IOException e) {         ..     }   } } \nPrintWriter writer = new PrintWriter(\"the-file-name.txt\", \"UTF-8\"); writer.println(\"The first line\"); writer.println(\"The second line\"); writer.close(); \n@Test public void givenUsingJava7_whenWritingToFile_thenCorrect()    throws IOException {     String str = \"Hello\";       Path path = Paths.get(fileName);     byte[] strToBytes = str.getBytes();       Files.write(path, strToBytes);       String read = Files.readAllLines(path).get(0);     assertEquals(str, read); } \nFile file = new File(\"Z:\\\\results\\\\results.txt\");\n",
    "reg_date": "2021-10-12T12:06:05.000Z"
  },
  {
    "id": 3225,
    "keyword": null,
    "link": null,
    "title": " java xml element get attribute value",
    "description": "import java.io.File;  import javax.xml.parsers.DocumentBuilder; import javax.xml.parsers.DocumentBuilderFactory;  import org.w3c.dom.Document; import org.w3c.dom.NodeList;  public class Demo {      public static void main(String[] args) throws Exception {         DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();         DocumentBuilder db = dbf.newDocumentBuilder();         Document document = db.parse(new File(\"input.xml\"));         NodeList nodeList = document.getElementsByTagName(\"Item\");         for(int x=0,size= nodeList.getLength(); x<size; x++) {             System.out.println(nodeList.item(x).getAttributes().getNamedItem(\"name\").getNodeValue());         }     } }\n",
    "reg_date": "2021-10-12T12:06:05.000Z"
  },
  {
    "id": 3226,
    "keyword": null,
    "link": null,
    "title": " java xmx vs xms",
    "description": "-Xms: It is used for setting the initial and minimum heap size. It is recommended to set the minimum heap size equivalent to the maximum heap size in order to minimize the garbage collection.  -Xmx: It is used for setting the maximum heap size. The performance will decrease if the max heap value is set lower than the amount of live data. It will force frequent garbage collections in order to free up space.\n",
    "reg_date": "2021-10-12T12:06:05.000Z"
  },
  {
    "id": 3227,
    "keyword": null,
    "link": null,
    "title": " java xor",
    "description": "boolean b1 = true; boolean b2 = true; if (b1 ^ b2) {   /* \tIs called if exactly one of the two booleans is true    \tTruth table:     0\t0\t|\t0     0\t1\t|\t1     1\t0\t|\t1     1\t1\t|\t0     \tis basically the same as '!='   */\t }\n",
    "reg_date": "2021-10-12T12:06:05.000Z"
  },
  {
    "id": 3228,
    "keyword": null,
    "link": null,
    "title": " java yesterday date",
    "description": "LocalDate today = LocalDate.now(); LocalDate yesterday = today.minusDays(1);  // In string format LocalDate today = LocalDate.now(); String yesterday = (today.minusDays(1)).format(DateTimeFormatter.ISO_DATE);\nDate date = DateUtils.addDays(new Date(), -1); SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\"); return sdf.format(date); \n",
    "reg_date": "2021-10-12T12:06:05.000Z"
  },
  {
    "id": 3229,
    "keyword": null,
    "link": null,
    "title": " java zoneddatetime",
    "description": "LocalDateTime now = LocalDateTime.now(); System.out.println(now); System.out.println(\"ZoneId.systemDefault(): \" + ZoneId.systemDefault());  // convert LocalDateTime to ZonedDateTime, with default system zone id ZonedDateTime zonedDateTime = now.atZone(ZoneId.systemDefault());  // convert LocalDateTime to ZonedDateTime, with specified zoneId ZonedDateTime europeDateTime = zonedDateTime.withZoneSameInstant(ZoneId.of(\"Europe/Kaliningrad\")); System.out.println(europeDateTime);  // convert LocalDateTime to ZonedDateTime, with specified off set ZonedDateTime offSetNegative5 = now.atOffset(ZoneOffset.of(\"-05:00\")).toZonedDateTime(); System.out.println(offSetNegative5);  // display all zone ids //ZoneId.getAvailableZoneIds().forEach(System.out::println);  // output /* 2021-03-23T16:43:32.010069453 ZoneId.systemDefault(): Asia/Kuala_Lumpur 2021-03-23T10:43:32.010069453+02:00[Europe/Kaliningrad] 2021-03-23T16:43:32.010069453-05:00 */\n",
    "reg_date": "2021-10-12T12:06:05.000Z"
  },
  {
    "id": 3230,
    "keyword": null,
    "link": null,
    "title": " javac encoding utf-8",
    "description": "javac -encoding utf8 Test.java \n",
    "reg_date": "2021-10-12T12:06:05.000Z"
  },
  {
    "id": 3231,
    "keyword": null,
    "link": null,
    "title": " javaee .jsp get value of object with EL",
    "description": "${object.attribute} // This will automatically call the getter method of the variable\n",
    "reg_date": "2021-10-12T12:06:05.000Z"
  },
  {
    "id": 3232,
    "keyword": null,
    "link": null,
    "title": " javaee jsp convert int to string",
    "description": "String str = String.valueOf(ivar);\n",
    "reg_date": "2021-10-12T12:06:05.000Z"
  },
  {
    "id": 3233,
    "keyword": null,
    "link": null,
    "title": " javafx action event enter key",
    "description": "import javafx.event.ActionEvent; import javafx.event.EventHandler; import javafx.scene.input.KeyEvent; import javafx.scene.input.KeyCode;  btn.setOnKeyPressed(new EventHandler<KeyEvent>() {         @Override         public void handle(KeyEvent k) {             if (k.getCode().equals(KeyCode.ENTER)) {                 doSomething();             }         } });\n",
    "reg_date": "2021-10-12T12:06:06.000Z"
  },
  {
    "id": 3234,
    "keyword": null,
    "link": null,
    "title": " javafx add event handler to button",
    "description": "Button subscribeBtn = new Button(\"Subscribe\"); subscribeBtn.setOnAction((event) -> {  });\n",
    "reg_date": "2021-10-12T12:06:06.000Z"
  },
  {
    "id": 3235,
    "keyword": null,
    "link": null,
    "title": " javafx application fxml",
    "description": "FXMLLoader loader = new FXMLLoader(); loader.setLocation(Main.class.getResource(\"Path/To/file.fxml\")); root = loader.load();  Scene scene = new Scene(root, width, height); primaryStage.setScene(scene);  primaryStage.setTitle(\"Title\"); primaryStage.show();\n",
    "reg_date": "2021-10-12T12:06:06.000Z"
  },
  {
    "id": 3236,
    "keyword": null,
    "link": null,
    "title": " javafx center node in gridpane",
    "description": "//center grid pane: GridPane pane = new GridPane(); pane.setAlignment(Pos.CENTER); //center element: GridPane.setHalignment(node, HPos.CENTER); GridPane.setValignment(node, VPos.CENTER);\n",
    "reg_date": "2021-10-12T12:06:06.000Z"
  },
  {
    "id": 3237,
    "keyword": null,
    "link": null,
    "title": " javafx choicebox",
    "description": "ChoiceBox cb = new ChoiceBox(FXCollections.observableArrayList(     \"First\", \"Second\", \"Third\") ); \n",
    "reg_date": "2021-10-12T12:06:06.000Z"
  },
  {
    "id": 3238,
    "keyword": null,
    "link": null,
    "title": " javafx detect collision",
    "description": "if(rectangle1.getBoundsInParent.intersects(rectangle2.getBoundsInParent)){  //do something  }\n",
    "reg_date": "2021-10-12T12:06:06.000Z"
  },
  {
    "id": 3239,
    "keyword": null,
    "link": null,
    "title": " javafx edit list",
    "description": "list.setEditable(true); list.setCellFactory(TextFieldListCell.forListView());\n",
    "reg_date": "2021-10-12T12:06:06.000Z"
  },
  {
    "id": 3240,
    "keyword": null,
    "link": null,
    "title": " javafx event resize",
    "description": "Stage stage = new Stage();  stage.widthProperty().addListener((obs, oldVal, newVal) -> {   //on change width });  stage.heightProperty().addListener((obs, oldVal, newVal) -> {   //on change height });\n",
    "reg_date": "2021-10-12T12:06:06.000Z"
  },
  {
    "id": 3241,
    "keyword": null,
    "link": null,
    "title": " javafx every second",
    "description": "Timeline timeline = new Timeline(new KeyFrame(Duration.seconds(1), ev -> {     //what you want to do })); timeline.setCycleCount(1);//do it x times timeline.setCycleCount(Animation.INDEFINITE);//or indefinitely  //play: timeline.play(); //pause: timeline.pause(); //stop: timeline.stop();\n",
    "reg_date": "2021-10-12T12:06:06.000Z"
  },
  {
    "id": 3242,
    "keyword": null,
    "link": null,
    "title": " javafx file to image",
    "description": "Image image = new Image(\"file:\" + path); // \"file:src/resource/photo.jpg\"\n  Image image = new Image(new FileInputStream(selectedFile));   previewPicture.setImage(image);\n",
    "reg_date": "2021-10-12T12:06:06.000Z"
  },
  {
    "id": 3243,
    "keyword": null,
    "link": null,
    "title": " javafx filechooser specific file",
    "description": "FileChooser fc = new FileChooser();  FileChooser.ExtensionFilter fileExtensions =    new FileChooser.ExtensionFilter(     \"Web pages\", \"*.tpl\", \"*.html\", \"*.htm\");  fc.getExtensionFilters().add(fileExtensions); \n",
    "reg_date": "2021-10-12T12:06:07.000Z"
  },
  {
    "id": 3244,
    "keyword": null,
    "link": null,
    "title": " javafx fill fxml tableview with data",
    "description": "public class MyController implements Initializable {      @FXML private TableView<User> tableView;     @FXML private TableColumn<User, String> UserId;     @FXML private TableColumn<User, String> UserName;     @FXML private TableColumn<User, String> Active;      @Override     public void initialize(URL location, ResourceBundle resources) {         UserId.setCellValueFactory(new PropertyValueFactory<User, String>(\"id\"));         UserName.setCellValueFactory(new PropertyValueFactory<User, String>(\"name\"));         Active.setCellValueFactory(new PropertyValueFactory<User, String>(\"active\"));          tableView.getItems().setAll(parseUserList());     }     private List<User> parseUserList(){         // parse and construct User datamodel list by looping your ResultSet rs         // and return the list        } }\n",
    "reg_date": "2021-10-12T12:06:07.000Z"
  },
  {
    "id": 3245,
    "keyword": null,
    "link": null,
    "title": " javafx fill tableview with data",
    "description": "import java.sql.Connection; import java.sql.ResultSet; import javafx.application.Application; import javafx.beans.property.SimpleStringProperty; import javafx.beans.value.ObservableValue; import javafx.collections.FXCollections; import javafx.collections.ObservableList; import javafx.scene.Scene; import javafx.scene.control.TableColumn; import javafx.scene.control.TableColumn.CellDataFeatures; import javafx.scene.control.TableView; import javafx.stage.Stage; import javafx.util.Callback;  /**  *   * @author Narayan  */  public class DynamicTable extends Application{      //TABLE VIEW AND DATA     private ObservableList<ObservableList> data;     private TableView tableview;      //MAIN EXECUTOR     public static void main(String[] args) {         launch(args);     }      //CONNECTION DATABASE     public void buildData(){           Connection c ;           data = FXCollections.observableArrayList();           try{             c = DBConnect.connect();             //SQL FOR SELECTING ALL OF CUSTOMER             String SQL = \"SELECT * from CUSTOMer\";             //ResultSet             ResultSet rs = c.createStatement().executeQuery(SQL);              /**********************************              * TABLE COLUMN ADDED DYNAMICALLY *              **********************************/             for(int i=0 ; i<rs.getMetaData().getColumnCount(); i++){                 //We are using non property style for making dynamic table                 final int j = i;                                 TableColumn col = new TableColumn(rs.getMetaData().getColumnName(i+1));                 col.setCellValueFactory(new Callback<CellDataFeatures<ObservableList,String>,ObservableValue<String>>(){                                         public ObservableValue<String> call(CellDataFeatures<ObservableList, String> param) {                                                                                                                       return new SimpleStringProperty(param.getValue().get(j).toString());                                             }                                     });                  tableview.getColumns().addAll(col);                  System.out.println(\"Column [\"+i+\"] \");             }              /********************************              * Data added to ObservableList *              ********************************/             while(rs.next()){                 //Iterate Row                 ObservableList<String> row = FXCollections.observableArrayList();                 for(int i=1 ; i<=rs.getMetaData().getColumnCount(); i++){                     //Iterate Column                     row.add(rs.getString(i));                 }                 System.out.println(\"Row [1] added \"+row );                 data.add(row);              }              //FINALLY ADDED TO TableView             tableview.setItems(data);           }catch(Exception e){               e.printStackTrace();               System.out.println(\"Error on Building Data\");                        }       }         @Override       public void start(Stage stage) throws Exception {         //TableView         tableview = new TableView();         buildData();          //Main Scene         Scene scene = new Scene(tableview);                  stage.setScene(scene);         stage.show();       } }\n",
    "reg_date": "2021-10-12T12:06:07.000Z"
  },
  {
    "id": 3246,
    "keyword": null,
    "link": null,
    "title": " javafx get screen size",
    "description": "Rectangle2D screenBounds = Screen.getPrimary().getBounds(); System.out.println(\"Height: \" + screenBounds.getHeight() + \" Width: \" + screenBounds.getWidth());  Output: Height: 1440.0 Width: 2560.0\n",
    "reg_date": "2021-10-12T12:06:07.000Z"
  },
  {
    "id": 3247,
    "keyword": null,
    "link": null,
    "title": " javafx how to change label colour",
    "description": "label.setTextFill(Color)\n",
    "reg_date": "2021-10-12T12:06:07.000Z"
  },
  {
    "id": 3248,
    "keyword": null,
    "link": null,
    "title": " javafx how to change shape color",
    "description": "setFill(Color.valueOf(\"F5D760\"));\n",
    "reg_date": "2021-10-12T12:06:07.000Z"
  },
  {
    "id": 3249,
    "keyword": null,
    "link": null,
    "title": " javafx live date and time",
    "description": "@FXML public void initialize() {      Timeline clock = new Timeline(new KeyFrame(Duration.ZERO, e -> {                 LocalTime currentTime = LocalTime.now();         time.setText(currentTime.getHour() + \":\" + currentTime.getMinute() + \":\" + currentTime.getSecond());     }),          new KeyFrame(Duration.seconds(1))     );     clock.setCycleCount(Animation.INDEFINITE);     clock.play(); } \n",
    "reg_date": "2021-10-12T12:06:07.000Z"
  },
  {
    "id": 3250,
    "keyword": null,
    "link": null,
    "title": " javafx location is required",
    "description": "Moving the file to the main/resources directory worked.\n",
    "reg_date": "2021-10-12T12:06:07.000Z"
  },
  {
    "id": 3251,
    "keyword": null,
    "link": null,
    "title": " javafx object rectangle",
    "description": "Rectangle rectangle = new Rectangle(100,100)\n",
    "reg_date": "2021-10-12T12:06:07.000Z"
  },
  {
    "id": 3252,
    "keyword": null,
    "link": null,
    "title": " javafx resizable window",
    "description": "scene.widthProperty().addListener(new ChangeListener<Number>() {     @Override public void changed(ObservableValue<? extends Number> observableValue, Number oldSceneWidth, Number newSceneWidth) {         System.out.println(\"Width: \" + newSceneWidth);     } }); scene.heightProperty().addListener(new ChangeListener<Number>() {     @Override public void changed(ObservableValue<? extends Number> observableValue, Number oldSceneHeight, Number newSceneHeight) {         System.out.println(\"Height: \" + newSceneHeight);     } });\n",
    "reg_date": "2021-10-12T12:06:07.000Z"
  },
  {
    "id": 3253,
    "keyword": null,
    "link": null,
    "title": " javafx scrollpane",
    "description": "ScrollPane scrollPane = new ScrollPane(); scrollPane.setContent(theThingYouWantToBeScrollable);\n",
    "reg_date": "2021-10-12T12:06:08.000Z"
  },
  {
    "id": 3254,
    "keyword": null,
    "link": null,
    "title": " javafx set min window size",
    "description": "stage.setMinWidth(value); stage.setMaxWidth(value); stage.setMinHeight(value); stage.setMaxHeight(value);\n",
    "reg_date": "2021-10-12T12:06:08.000Z"
  },
  {
    "id": 3255,
    "keyword": null,
    "link": null,
    "title": " javafx stackpane set position",
    "description": "Label topLeftLabel = new Label(\"Top Left\"); StackPane stack = new StackPane(); stack.getChildren().add(topLeftLabel);  StackPane.setAlignment(topLeftLabel, Pos.TOP_LEFT);\n",
    "reg_date": "2021-10-12T12:06:08.000Z"
  },
  {
    "id": 3256,
    "keyword": null,
    "link": null,
    "title": " javafx tableview clear all data",
    "description": "tableView.getItems().clear()\n",
    "reg_date": "2021-10-12T12:06:08.000Z"
  },
  {
    "id": 3257,
    "keyword": null,
    "link": null,
    "title": " javafx tableview remove all rows",
    "description": "tableView.getItems().clear()\n",
    "reg_date": "2021-10-12T12:06:08.000Z"
  },
  {
    "id": 3258,
    "keyword": null,
    "link": null,
    "title": " javafx tableview remove clear all data",
    "description": "tableView.getItems().clear()\n",
    "reg_date": "2021-10-12T12:06:08.000Z"
  },
  {
    "id": 3259,
    "keyword": null,
    "link": null,
    "title": " javafx textarea font size",
    "description": "textArea.setStyle(\"-fx-font-size: 20\");\n",
    "reg_date": "2021-10-12T12:06:08.000Z"
  },
  {
    "id": 3260,
    "keyword": null,
    "link": null,
    "title": " javafx textarea how to make smaller",
    "description": "import javafx.scene.control.TextArea;  TextArea textArea = new TextArea(); //making a TextArea object  textArea.setPrefHeight(400);  //sets height of the TextArea to 400 pixels  textArea.setPrefWidth(300);    //sets width of the TextArea to 300 pixels\n",
    "reg_date": "2021-10-12T12:06:08.000Z"
  },
  {
    "id": 3261,
    "keyword": null,
    "link": null,
    "title": " javafx textarea new line with shift+enter",
    "description": "/* This gist might help: https://gist.github.com/jewelsea/2894725 */\n",
    "reg_date": "2021-10-12T12:06:08.000Z"
  },
  {
    "id": 3262,
    "keyword": null,
    "link": null,
    "title": " javafx textarea size",
    "description": "textArea.setStyle(\"-fx-font-size: 20\");\nimport javafx.scene.control.TextArea;  TextArea textArea = new TextArea(); //making a TextArea object  textArea.setPrefHeight(400);  //sets height of the TextArea to 400 pixels  textArea.setPrefWidth(300);    //sets width of the TextArea to 300 pixels\nTextArea textArea = new TextArea(); //making a TexrArea object double height = 400; //making a variable called height with a value 400 double width = 300;  //making a variable called height with a value 300  //You can use these methods textArea.setPrefHeight(height);  //sets height of the TextArea to 400 pixels  textArea.setPrefWidth(width);    //sets width of the TextArea to 300 pixels\n",
    "reg_date": "2021-10-12T12:06:08.000Z"
  },
  {
    "id": 3263,
    "keyword": null,
    "link": null,
    "title": " javafx vbox remove child",
    "description": "vBox.getChildren().clear();\n",
    "reg_date": "2021-10-12T12:06:09.000Z"
  },
  {
    "id": 3264,
    "keyword": null,
    "link": null,
    "title": " javafx window resize to screen",
    "description": "   primaryStage.setMaximized(true);\n",
    "reg_date": "2021-10-12T12:06:09.000Z"
  },
  {
    "id": 3265,
    "keyword": null,
    "link": null,
    "title": " javascript print to console",
    "description": "console.log(\"string\") \nconst varName = 'this variable';  console.log(varName);\nconsole.log(\"message here\")\nconsole.log('string');\nconsole.log(\"To Print\");\n",
    "reg_date": "2021-10-12T12:06:09.000Z"
  },
  {
    "id": 3266,
    "keyword": null,
    "link": null,
    "title": " javascript remove specific character from string",
    "description": "var newString = oldString.replaceAll(\"character/string goes here\", \"\");  // Example var oldString = \"Hello World!\"; var newString = oldString.replaceAll(\"o\", \"\"); console.log(newString); // Prints 'Hell Wrld!' to console.\n",
    "reg_date": "2021-10-12T12:06:09.000Z"
  },
  {
    "id": 3267,
    "keyword": null,
    "link": null,
    "title": " javax.persistence.persistenceexception: org.hibernate.exception.sqlgrammarexception: could not execute statement",
    "description": "Query query = this.entityManager.createNativeQuery(\"YourQuery\"); List<ObjectName> list = query.getResultList(); return list; \nQuery query = this.entityManager.createNativeQuery(searchQuery, \"TicketMapping\"); //--------------------------------------------------------------------^^ //This should be the ObjectName.class \nQuery query = this.entityManager.createNativeQuery(\"YourQuery\", ObjectName.class); \n",
    "reg_date": "2021-10-12T12:06:09.000Z"
  },
  {
    "id": 3268,
    "keyword": null,
    "link": null,
    "title": " javax.xml.bind does not exist",
    "description": "<dependency>   <groupId>jakarta.xml.bind</groupId>   <artifactId>jakarta.xml.bind-api</artifactId>   <version>2.3.3</version> </dependency>\n",
    "reg_date": "2021-10-12T12:06:09.000Z"
  },
  {
    "id": 3269,
    "keyword": null,
    "link": null,
    "title": " javax notblank not working",
    "description": "add in pom.xml  <dependency>      <groupId>org.springframework.boot</groupId>      <artifactId>spring-boot-starter-validation</artifactId>  </dependency>  need restart intellij ide\n",
    "reg_date": "2021-10-12T12:06:09.000Z"
  },
  {
    "id": 3270,
    "keyword": null,
    "link": null,
    "title": " jaxb exclude field",
    "description": "import javax.xml.bind.annotation.XmlTransient;   @XmlTransient private String somefield; //field to be excluded\n",
    "reg_date": "2021-10-12T12:06:09.000Z"
  },
  {
    "id": 3271,
    "keyword": null,
    "link": null,
    "title": " jbutton border size java",
    "description": "Border border = new LineBorder(Color.WHITE, 12); JButton button = new JButton(\"12 Pixel\");  button.setBorder(border);\n",
    "reg_date": "2021-10-12T12:06:09.000Z"
  },
  {
    "id": 3272,
    "keyword": null,
    "link": null,
    "title": " jbutton open jframe java",
    "description": "private void btnButtonActionPerformed(java.awt.event.ActionEvent evt) {                                         \tjFrame.setVisible(true); }    \n",
    "reg_date": "2021-10-12T12:06:09.000Z"
  },
  {
    "id": 3273,
    "keyword": null,
    "link": null,
    "title": " jbutton remove selection border",
    "description": "yourJButton.setFocusPainted(false);\n",
    "reg_date": "2021-10-12T12:06:10.000Z"
  },
  {
    "id": 3274,
    "keyword": null,
    "link": null,
    "title": " jbutton set background transparent",
    "description": "button.setOpaque(false); button.setContentAreaFilled(false); button.setBorderPainted(false);\n",
    "reg_date": "2021-10-12T12:06:10.000Z"
  },
  {
    "id": 3275,
    "keyword": null,
    "link": null,
    "title": " jcenter is at end of life",
    "description": "repositories {     google()  //  jcenter()       // <- removed in future     mavenCentral()  // <- added in future } \n",
    "reg_date": "2021-10-12T12:06:10.000Z"
  },
  {
    "id": 3276,
    "keyword": null,
    "link": null,
    "title": " jcolorchooser in java",
    "description": "Color choice = JColorChooser.showDialog(this,\"Select a color\",initialcolor);\n",
    "reg_date": "2021-10-12T12:06:10.000Z"
  },
  {
    "id": 3277,
    "keyword": null,
    "link": null,
    "title": " jdbc ResultSet test null",
    "description": "int iVal = 0; ResultSet rs = magicallyAppearingStmt.executeQuery(query); if (rs.next()) {     iVal = rs.getInt(\"ID_PARENT\");     if (rs.wasNull()) {         // handle NULL field value     } }\n",
    "reg_date": "2021-10-12T12:06:10.000Z"
  },
  {
    "id": 3278,
    "keyword": null,
    "link": null,
    "title": " jdbc create a delete statement",
    "description": "//STEP 1. Import required packages import java.sql.*;  public class JDBCExample {    // JDBC driver name and database URL    static final String JDBC_DRIVER = \"com.mysql.jdbc.Driver\";      static final String DB_URL = \"jdbc:mysql://localhost/STUDENTS\";     //  Database credentials    static final String USER = \"username\";    static final String PASS = \"password\";        public static void main(String[] args) {    Connection conn = null;    Statement stmt = null;    try{       //STEP 2: Register JDBC driver       Class.forName(\"com.mysql.jdbc.Driver\");        //STEP 3: Open a connection       System.out.println(\"Connecting to a selected database...\");       conn = DriverManager.getConnection(DB_URL, USER, PASS);       System.out.println(\"Connected database successfully...\");              //STEP 4: Execute a query       System.out.println(\"Creating statement...\");       stmt = conn.createStatement();       String sql = \"DELETE FROM Registration \" +                    \"WHERE id = 101\";       stmt.executeUpdate(sql);        // Now you can extract all the records       // to see the remaining records       sql = \"SELECT id, first, last, age FROM Registration\";       ResultSet rs = stmt.executeQuery(sql);        while(rs.next()){          //Retrieve by column name          int id  = rs.getInt(\"id\");          int age = rs.getInt(\"age\");          String first = rs.getString(\"first\");          String last = rs.getString(\"last\");           //Display values          System.out.print(\"ID: \" + id);          System.out.print(\", Age: \" + age);          System.out.print(\", First: \" + first);          System.out.println(\", Last: \" + last);       }       rs.close();    }catch(SQLException se){       //Handle errors for JDBC       se.printStackTrace();    }catch(Exception e){       //Handle errors for Class.forName       e.printStackTrace();    }finally{       //finally block used to close resources       try{          if(stmt!=null)             conn.close();       }catch(SQLException se){       }// do nothing       try{          if(conn!=null)             conn.close();       }catch(SQLException se){          se.printStackTrace();       }//end finally try    }//end try    System.out.println(\"Goodbye!\"); }//end main }//end JDBCExample\n",
    "reg_date": "2021-10-12T12:06:10.000Z"
  },
  {
    "id": 3279,
    "keyword": null,
    "link": null,
    "title": " jdbc dependency",
    "description": "<dependency> <groupId>oracle</groupId> <artifactId>ojdbc6</artifactId> <version>11.2.0.3</version> </dependency>\n",
    "reg_date": "2021-10-12T12:06:10.000Z"
  },
  {
    "id": 3280,
    "keyword": null,
    "link": null,
    "title": " jdbc driver servertimezone configuration property",
    "description": "jdbc:mysql://localhost/db?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC\n",
    "reg_date": "2021-10-12T12:06:11.000Z"
  },
  {
    "id": 3281,
    "keyword": null,
    "link": null,
    "title": " jdbc interface",
    "description": "-Connection = Helps our java project connect to database  -Statement = Helps to write and execute SQL query  -ResultSet = A DataStructure where the data from query result stored\nConnection =    Helps our java project connect to database Statement =    Helps to write and execute SQL query ResultSet =    A DataStructure where the data from query result stored +++++++++++++++++++++++++++++++++++++++++++++++++++++++++         After succesfully created the connect next step is STATEMENT  Statement statement = connection.createStatement(); We use createStatement() method to create the statement from our connection. -The result we get from this type of statement can only move from top to bottom, not other way around  Statement statement = connection. createStatement(ResultSet TYPE_SCROLL_INSENSITIVE ,ResultSet CONCUR_READ_ONLY);  -The result we get from this type of statement can freely move between rows  Once we have statement we can run the query and get the result to ResultSet format  \t\timport java.sql.ResultSet;          We use the method executeQuery() to execute our queries  ResultSet result = statement.               executeQuery(\"Select * from employees\"); \n",
    "reg_date": "2021-10-12T12:06:11.000Z"
  },
  {
    "id": 3282,
    "keyword": null,
    "link": null,
    "title": " jdbc prepared statement example",
    "description": "String query = \"INSERT INTO artikel VALUES (?, ?, ?, ?, ?)\"; try {   PreparedStatement ps = con.prepareStatement(query);   ps.setInt(1, aNumb);   ps.setString(2, aName);   ps.setFloat(3, aPrice);   ps.setInt(4, aAvailable);   ps.setString(5, aInfo);   ps.executeUpdate();    ps.close();   disconnectDB(); }catch(SQLException e){   System.out.println(e.getMessage()); }\n",
    "reg_date": "2021-10-12T12:06:11.000Z"
  },
  {
    "id": 3283,
    "keyword": null,
    "link": null,
    "title": " jdk 15 download brew",
    "description": " $ brew cask install oracle-jdk \n",
    "reg_date": "2021-10-12T12:06:11.000Z"
  },
  {
    "id": 3284,
    "keyword": null,
    "link": null,
    "title": " jdk path ubuntu",
    "description": "export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\n",
    "reg_date": "2021-10-12T12:06:11.000Z"
  },
  {
    "id": 3285,
    "keyword": null,
    "link": null,
    "title": " jenkins decrypt password script console",
    "description": "for standard secrets: println(hudson.util.Secret.decrypt(\"{XXX=}\"))  for SecretBytes: println(new String(com.cloudbees.plugins.credentials.SecretBytes.fromString(\"{....}\").getPlainData(), \"ASCII\"))\n",
    "reg_date": "2021-10-12T12:06:11.000Z"
  },
  {
    "id": 3286,
    "keyword": null,
    "link": null,
    "title": " jenna fischer that 70s show",
    "description": "Jenna is a hot your lady\n",
    "reg_date": "2021-10-12T12:06:11.000Z"
  },
  {
    "id": 3287,
    "keyword": null,
    "link": null,
    "title": " jersey test dependency",
    "description": "#Jersey Test Dependency // https://mvnrepository.com/artifact/org.glassfish.jersey.test-framework/jersey-test-framework-core compile group: 'org.glassfish.jersey.test-framework', name: 'jersey-test-framework-core', version: '2.6'\n",
    "reg_date": "2021-10-12T12:06:11.000Z"
  },
  {
    "id": 3288,
    "keyword": null,
    "link": null,
    "title": " jframe border",
    "description": "YourFrame.getRootPane().setBorder(   \tBorderFactory.createMatteBorder(4, 4, 4, 4, Color.RED));\n.setBorder(BorderFactory.createMatteBorder(4, 4, 4, 4, Color.RED));\n",
    "reg_date": "2021-10-12T12:06:11.000Z"
  },
  {
    "id": 3289,
    "keyword": null,
    "link": null,
    "title": " jframe color",
    "description": "getContentPane().setBackground(Color.YELLOW);  //Whatever color\npackage Exaple;  import java.awt.Color;  import javax.swing.JFrame;  public class Window {  \tpublic static void main(String[] args) { \t\t \t\tJFrame frame = new JFrame();  \t\tframe.setExtendedState(JFrame.MAXIMIZED_BOTH);  \t\tframe.setVisible(true); \t\tframe.setTitle(\"Expaple\"); \t\tframe.setBackground(Color.BLUE); \t}  }\nprivate JFrame frame; frame.getContentPane().setBackground(Color.BLACK);\nimport java.awt.Color; import java.awt.Dimension; import javax.swing.JFrame; public class SwingDemo {    public static void main(String[] args) {       JFrame frame = new JFrame();       frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);       frame.setPreferredSize(new Dimension(550, 300));       frame.getContentPane().setBackground(Color.BLUE);       frame.pack();       frame.setVisible(true);    } }\n",
    "reg_date": "2021-10-12T12:06:12.000Z"
  },
  {
    "id": 3290,
    "keyword": null,
    "link": null,
    "title": " jlabel on the center of a jpanel",
    "description": "panel.setLayout(new GridBagLayout()); panel.add(label);\n",
    "reg_date": "2021-10-12T12:06:12.000Z"
  },
  {
    "id": 3291,
    "keyword": null,
    "link": null,
    "title": " jlabel text center",
    "description": "JLabel label = new JLabel(\"The Label\", SwingConstants.CENTER);\n",
    "reg_date": "2021-10-12T12:06:12.000Z"
  },
  {
    "id": 3292,
    "keyword": null,
    "link": null,
    "title": " join array java",
    "description": "String joinedString = String.join(\", \", strArray);\n",
    "reg_date": "2021-10-12T12:06:12.000Z"
  },
  {
    "id": 3293,
    "keyword": null,
    "link": null,
    "title": " join two lists java",
    "description": "List<String> newList = Stream.concat(listOne.stream(), listTwo.stream())                              .collect(Collectors.toList());\nList mylist.addAll(secondList);\n",
    "reg_date": "2021-10-12T12:06:12.000Z"
  },
  {
    "id": 3294,
    "keyword": null,
    "link": null,
    "title": " joining an array of strings in java",
    "description": "// my linkedin : https://www.linkedin.com/in/vaalarivan-prasanna-3a07bb203/ array = new ArrayList<String> {\"daddy\", \"Mummy\", \"Son\"};  //array initialisation String str = String.join(\"\", array); //str = daddyMummySon\n",
    "reg_date": "2021-10-12T12:06:12.000Z"
  },
  {
    "id": 3295,
    "keyword": null,
    "link": null,
    "title": " joptionpane.showconfirmdialog yes no example",
    "description": "int answer = JOptionPane.showConfirmDialog(parentComponent,  \t\t\"Your message goes here\", \"Your title goes here\",          JOptionPane.YES_NO_OPTION);  if (answer == JOptionPane.NO_OPTION) { \t// do something } else if(answer == JOptionPane.YES_OPTION) {   \t// do something else }\n",
    "reg_date": "2021-10-12T12:06:12.000Z"
  },
  {
    "id": 3296,
    "keyword": null,
    "link": null,
    "title": " joptionpane fonctionnement java",
    "description": "JOptionPane d = new JOptionPane(); d.showMessageDialog( laFrame, \"le message\",        \"le titre\", messageType); \n",
    "reg_date": "2021-10-12T12:06:12.000Z"
  },
  {
    "id": 3297,
    "keyword": null,
    "link": null,
    "title": " jpa default value",
    "description": "@Entity public class User {       @Id       Long id;           @Column(columnDefinition = \"varchar(255) default 'John Snow'\")       private String name;           @Column(columnDefinition = \"integer default 25\")       private Integer age;           @Column(columnDefinition = \"boolean default false\")       private Boolean locked; }\n",
    "reg_date": "2021-10-12T12:06:12.000Z"
  },
  {
    "id": 3298,
    "keyword": null,
    "link": null,
    "title": " jpa page sort",
    "description": "Pageable sortedByName = PageRequest.of(0, 3, Sort.by(\"name\"));  Pageable sortedByPriceDesc = PageRequest.of(0, 3, Sort.by(\"price\").descending());  Pageable sortedByPriceDescNameAsc = PageRequest.of(0, 5, Sort.by(\"price\").descending().and(Sort.by(\"name\")));\n",
    "reg_date": "2021-10-12T12:06:12.000Z"
  },
  {
    "id": 3299,
    "keyword": null,
    "link": null,
    "title": " jpa validation string only number",
    "description": "@Pattern(regexp=\"[\\\\d]{6}\")\n",
    "reg_date": "2021-10-12T12:06:13.000Z"
  },
  {
    "id": 3300,
    "keyword": null,
    "link": null,
    "title": " jpql spring boot",
    "description": "@Query(\"SELECT u FROM User u WHERE u.status = :status and u.name = :name\")User findUserByStatusAndNameNamedParams(  @Param(\"status\") Integer status,   @Param(\"name\") String name);\n",
    "reg_date": "2021-10-12T12:06:13.000Z"
  },
  {
    "id": 3301,
    "keyword": null,
    "link": null,
    "title": " jquery set data attribute value",
    "description": "//<div id=\"myElementID\" data-myvalue=\"37\"></div> var a = $('#myElementID').data('myvalue'); //get myvalue $('#myElementID').data('myvalue',38); //set myvalue\nalert($('#outer').html());   // alerts <div id=\"mydiv\" data-myval=\"10\"> </div> var a = $('#mydiv').data('myval'); //getter $('#mydiv').attr(\"data-myval\",\"20\"); //setter alert($('#outer').html());   //alerts <div id=\"mydiv\" data-myval=\"20\"> </div>\n//set the custom data value let mainDiv = $('#yourDivId').data('anyName', value); //access the custom data value mainDiv.data('anyName'); \n<a data-id=\"123\">link</a>   var id = $(this).data(\"id\"); // Will set id to 123\n",
    "reg_date": "2021-10-12T12:06:13.000Z"
  },
  {
    "id": 3302,
    "keyword": null,
    "link": null,
    "title": " jre",
    "description": "JRE stands for Java Runtime Environment.  It is the implementation of JVM. The Java Runtime Environment  is a set of software tools which are used for developing Java applications.  It is used to provide the runtime environment.  It is the implementation of JVM. It physically exists.  It contains a set of libraries + other files that JVM uses at runtime.\n&bull; Java Runtime Environment : JRE is what we need to run a Java program  and containsset of libraries and other files that JVM uses at run time.  JRE = JVM + Library Classes \n",
    "reg_date": "2021-10-12T12:06:13.000Z"
  },
  {
    "id": 3303,
    "keyword": null,
    "link": null,
    "title": " json array get json object",
    "description": "int n = 0; JSONObject jsonObject = jsonArray.getJSONObject(n);\n",
    "reg_date": "2021-10-12T12:06:13.000Z"
  },
  {
    "id": 3304,
    "keyword": null,
    "link": null,
    "title": " json array to List in java",
    "description": "JSONArray data = new JSONArray(); //create data from this -> [{\"thumb_url\":\"tb-1370913834.jpg\",\"event_id\":...}]  List<JSONObject> list = data.stream().map(o -> (JSONObject) o).collect(Collectors.toList()); \nList<Employee> list = mapper.readValue(jsonString, TypeFactory.defaultInstance().constructCollectionType(List.class,      Employee.class)); \ndataArray = [{\"Value\":10,\"ValuePourcent\":2},{\"Value\":20,\"ValuePourcent\":3},{\"Value\":51,\"ValuePourcent\":1}]  newFormat = dataArray.map(function(e){                   return [e[\"Value\"], e[\"ValuePourcent\"]]                   });\n// Top of file import java.lang.reflect.Type;  // ...  private void parseJSON() {     Gson gson = new Gson();     Type type = new TypeToken<List<ContactModel>>(){}.getType();     List<ContactModel> contactList = gson.fromJson(jsonString, type);     for (ContactModel contact : contactList){         Log.i(\"Contact Details\", contact.id + \"-\" + contact.name + \"-\" + contact.email);     } }\n",
    "reg_date": "2021-10-12T12:06:13.000Z"
  },
  {
    "id": 3305,
    "keyword": null,
    "link": null,
    "title": " json to hashmap java stream",
    "description": "Map<String, Object> retMap = new Gson().fromJson(     jsonString, new TypeToken<HashMap<String, Object>>() {}.getType() );\n",
    "reg_date": "2021-10-12T12:06:13.000Z"
  },
  {
    "id": 3306,
    "keyword": null,
    "link": null,
    "title": " json to object gson",
    "description": "User user= gson.fromJson(jsonInString, User.class);  // where jsonInString is your json {\"userId\":\"1\",\"userName\":\"Yasir\"} \n",
    "reg_date": "2021-10-12T12:06:13.000Z"
  },
  {
    "id": 3307,
    "keyword": null,
    "link": null,
    "title": " jsonarray to List in java",
    "description": "JSONArray data = new JSONArray(); //create data from this -> [{\"thumb_url\":\"tb-1370913834.jpg\",\"event_id\":...}]  List<JSONObject> list = data.stream().map(o -> (JSONObject) o).collect(Collectors.toList()); \nList<Employee> list = mapper.readValue(jsonString, TypeFactory.defaultInstance().constructCollectionType(List.class,      Employee.class)); \n// Top of file import java.lang.reflect.Type;  // ...  private void parseJSON() {     Gson gson = new Gson();     Type type = new TypeToken<List<ContactModel>>(){}.getType();     List<ContactModel> contactList = gson.fromJson(jsonString, type);     for (ContactModel contact : contactList){         Log.i(\"Contact Details\", contact.id + \"-\" + contact.name + \"-\" + contact.email);     } }\n",
    "reg_date": "2021-10-12T12:06:13.000Z"
  },
  {
    "id": 3308,
    "keyword": null,
    "link": null,
    "title": " jsonarray to list java",
    "description": "JSONArray data = new JSONArray(); //create data from this -> [{\"thumb_url\":\"tb-1370913834.jpg\",\"event_id\":...}]  List<JSONObject> list = data.stream().map(o -> (JSONObject) o).collect(Collectors.toList()); \nList<Employee> list = mapper.readValue(jsonString, TypeFactory.defaultInstance().constructCollectionType(List.class,      Employee.class)); \n// Top of file import java.lang.reflect.Type;  // ...  private void parseJSON() {     Gson gson = new Gson();     Type type = new TypeToken<List<ContactModel>>(){}.getType();     List<ContactModel> contactList = gson.fromJson(jsonString, type);     for (ContactModel contact : contactList){         Log.i(\"Contact Details\", contact.id + \"-\" + contact.name + \"-\" + contact.email);     } }\n",
    "reg_date": "2021-10-12T12:06:13.000Z"
  },
  {
    "id": 3309,
    "keyword": null,
    "link": null,
    "title": " jsonnode change field value",
    "description": "//to work with a field directly ((ObjectNode)carNode).put(\"color\", \"red\");  //to work with an object ((ObjectNode)rootNode.get(\"car\")).put(\"color\", \"red\");\n",
    "reg_date": "2021-10-12T12:06:14.000Z"
  },
  {
    "id": 3310,
    "keyword": null,
    "link": null,
    "title": " jsp import",
    "description": "<%@ page import=\"java.util.List\" %>\n",
    "reg_date": "2021-10-12T12:06:14.000Z"
  },
  {
    "id": 3311,
    "keyword": null,
    "link": null,
    "title": " jstl core tags",
    "description": "<%@ taglib prefix = \"c\" uri = \"http://java.sun.com/jsp/jstl/core\" %> \n<%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\n",
    "reg_date": "2021-10-12T12:06:14.000Z"
  },
  {
    "id": 3312,
    "keyword": null,
    "link": null,
    "title": " jstl for",
    "description": "<c:forEach var=\"i\" begin=\"0\" end=\"10\" step=\"2\">     <p>Un message n&deg;<c:out value=\"${ i }\" /> !</p> </c:forEach> \n",
    "reg_date": "2021-10-12T12:06:14.000Z"
  },
  {
    "id": 3313,
    "keyword": null,
    "link": null,
    "title": " jstl spring taglib",
    "description": "<%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\n",
    "reg_date": "2021-10-12T12:06:14.000Z"
  },
  {
    "id": 3314,
    "keyword": null,
    "link": null,
    "title": " jtable get get row",
    "description": "public String[] getRowAt(int row) {      String[] result = new String[colNumber];       for (int i = 0; i < colNumber; i++) {          result[i] = table.getModel().getValueAt(row, col);      }       return result; }\n",
    "reg_date": "2021-10-12T12:06:14.000Z"
  },
  {
    "id": 3315,
    "keyword": null,
    "link": null,
    "title": " junit.jupiter create test",
    "description": "@Test public void doStuffTest() {   // test content }\n",
    "reg_date": "2021-10-12T12:06:14.000Z"
  },
  {
    "id": 3316,
    "keyword": null,
    "link": null,
    "title": " junit 5 assert exception message",
    "description": "Throwable exceptionThatWasThrown = assertThrows(NullPointerException.class, () -> {     codeThatThrows; });  assertThat(exceptionThatWasThrown.getMessage(), equalTo(\"Message I expected to be thrown\"));\n",
    "reg_date": "2021-10-12T12:06:14.000Z"
  },
  {
    "id": 3317,
    "keyword": null,
    "link": null,
    "title": " junit 5 expected exception",
    "description": "@Test void testExpectedException() {     Assertions.assertThrows(NumberFormatException.class, () -> {     Integer.parseInt(\"One\");   });   }\nThrowable exceptionThatWasThrown = assertThrows(NullPointerException.class, () -> {     codeThatThrows; });  assertThat(exceptionThatWasThrown.getMessage(), equalTo(\"Message I expected to be thrown\"));\n@Test(expected = SomeException.class) public void testName() { \t//some code }\n",
    "reg_date": "2021-10-12T12:06:14.000Z"
  },
  {
    "id": 3318,
    "keyword": null,
    "link": null,
    "title": " junit asserttrue",
    "description": "import static org.junit.jupiter.api.Assertions.assertTrue; class testing { \t@Test     public void test() {     \tassertTrue(1 == 1);     }  }\n",
    "reg_date": "2021-10-12T12:06:14.000Z"
  },
  {
    "id": 3319,
    "keyword": null,
    "link": null,
    "title": " junit order",
    "description": "By adding @TestMethodOrder annotation on top of class and  than @Order tag on each test with giving them number   // these are all available option for ordering your tests //@TestMethodOrder(OrderAnnotation.class) //@TestMethodOrder(Random.class) //randomly run //@TestMethodOrder(MethodName.class) // default options  For Example :  @TestMethodOrder(MethodOrderer.OrderAnnotation.class) public class TestOrderingInJunit5 {      @Order(3)     @DisplayName(\"3. Test A method\")     @Test     public void testA(){         System.out.println(\"running test A\");     }     @Order(1)     @DisplayName(\"1. Test C method\")     @Test     public void testC(){         System.out.println(\"running test C\");     }     @Order(4)     @DisplayName(\"4. Test D method\")     @Test     public void testD(){         System.out.println(\"running test D\");     }     @Order(2)     @DisplayName(\"2. Test B method\")     @Test     public void testB(){         System.out.println(\"running test B\");     }               In this case it will print      1. Test C     2. Test B     3. Test A     4. Test D\n",
    "reg_date": "2021-10-12T12:06:15.000Z"
  },
  {
    "id": 3320,
    "keyword": null,
    "link": null,
    "title": " junit test ignored",
    "description": "@Ignore public class TestClass {   \t[...] \t//JUnit will ignore this class for tests }\n",
    "reg_date": "2021-10-12T12:06:15.000Z"
  },
  {
    "id": 3321,
    "keyword": null,
    "link": null,
    "title": " junit testcase run in order",
    "description": "@TestMethodOrder(OrderAnnotation.class) public class OrderAnnotationUnitTest {     private static StringBuilder output = new StringBuilder(\"\");           @Test     @Order(1)         public void firstTest() {         output.append(\"a\");     }           @Test     @Order(2)         public void secondTest() {         output.append(\"b\");     }        @Test     @Order(3)         public void thirdTest() {         output.append(\"c\");     }        @AfterAll     public static void assertOutput() {         assertEquals(output.toString(), \"abc\");     } } \n",
    "reg_date": "2021-10-12T12:06:15.000Z"
  },
  {
    "id": 3322,
    "keyword": null,
    "link": null,
    "title": " jwt claims example coding in java",
    "description": "public String createToken(String username, List<Role> roles, String country) {      Claims claims = Jwts.claims().setSubject(username);     claims.put(\"auth\", roles.stream().map(s -> new SimpleGrantedAuthority(s.getAuthority())).filter(Objects::nonNull).collect(Collectors.toList()));     claims.put(\"Country\", country);          Date now = new Date();     Date validity = new Date(now.getTime() + validityInMilliseconds);      return Jwts.builder()//         .setClaims(claims)//         .setIssuedAt(now)//         .setExpiration(validity)//         .signWith(SignatureAlgorithm.HS256, secretKey)//         .compact();   } \n",
    "reg_date": "2021-10-12T12:06:15.000Z"
  },
  {
    "id": 3323,
    "keyword": null,
    "link": null,
    "title": " keyset sort java",
    "description": "List<whatever> keys = new ArrayList<whatever>(myMap.keySet()); Collections.sort(keys);\n",
    "reg_date": "2021-10-12T12:06:15.000Z"
  },
  {
    "id": 3324,
    "keyword": null,
    "link": null,
    "title": " keytool command sha256",
    "description": "keytool -list -v -keystore \"%USERPROFILE%\\.android\\debug.keystore\" -alias androiddebugkey -storepass android -keypass android\n",
    "reg_date": "2021-10-12T12:06:15.000Z"
  },
  {
    "id": 3325,
    "keyword": null,
    "link": null,
    "title": " kill all java processes linux",
    "description": "// You can change the to kill other processes  search_terms='java'   kill $(ps aux | grep \"$search_terms\" | grep -v 'grep' | awk '{print $2}')\n",
    "reg_date": "2021-10-12T12:06:15.000Z"
  },
  {
    "id": 3326,
    "keyword": null,
    "link": null,
    "title": " kjk;ok",
    "description": "sudo update-alternatives --config java \npostgresql:// postgresql://localhost postgresql://localhost:5433 postgresql://localhost/mydb postgresql://user@localhost postgresql://user:secret@localhost postgresql://other@localhost/otherdb?connect_timeout=10&application_name=myapp postgresql://host1:123,host2:456/somedb?target_session_attrs=any&application_name=myapp \nPQconninfoOption *PQconninfo(PGconn *conn); \nPGconn *PQsetdbLogin(const char *pghost,                      const char *pgport,                      const char *pgoptions,                      const char *pgtty,                      const char *dbName,                      const char *login,                      const char *pwd); \nint PQresetStart(PGconn *conn);  PostgresPollingStatusType PQresetPoll(PGconn *conn); \nswitch(PQstatus(conn)) {         case CONNECTION_STARTED:             feedback = \"Connecting...\";             break;          case CONNECTION_MADE:             feedback = \"Connected to server...\";             break; . . .         default:             feedback = \"Connecting...\"; } \nOutputThere are 2 choices for the alternative java (providing /usr/bin/java).    Selection    Path                                         Priority   Status ------------------------------------------------------------   0            /usr/lib/jvm/java-11-openjdk-amd64/bin/java   1111      auto mode   1            /usr/lib/jvm/java-11-openjdk-amd64/bin/java   1111      manual mode * 2            /usr/lib/jvm/java-11-oracle/bin/java          1091      manual mode  Press <enter> to keep the current choice[*], or type selection number: \nPQconninfoOption *PQconninfoParse(const char *conninfo, char **errmsg); \nPGconn *PQconnectdbParams(const char * const *keywords,                           const char * const *values,                           int expand_dbname); \nvoid PQfinish(PGconn *conn); \n",
    "reg_date": "2021-10-12T12:06:15.000Z"
  },
  {
    "id": 3327,
    "keyword": null,
    "link": null,
    "title": " kmp java",
    "description": "    static int KMPSearch(String pat, String txt) {         ArrayList<Integer> matchAtIndexs = new ArrayList<>();         int M = pat.length();         int N = txt.length();         int lps[] = new int[M];         int j = 0;         computeLPSArray(pat, M, lps);         int i = 0;         while (i < N) {             if (pat.charAt(j) == txt.charAt(i)) {                 j++;                 i++;             }             if (j == M) {                 matchAtIndexs.add(i - j);                 j = lps[j - 1];             } else if (i < N && pat.charAt(j) != txt.charAt(i)) {                 if (j != 0)                     j = lps[j - 1];                 else                     i = i + 1;             }         }         return matchAtIndexs.size();     }      static void computeLPSArray(String pat, int M, int lps[]) {         int len = 0;         int i = 1;         lps[0] = 0;         while (i < M) {             if (pat.charAt(i) == pat.charAt(len)) {                 len++;                 lps[i] = len;                 i++;             } else {                 if (len != 0) {                     len = lps[len - 1];                  } else {                     lps[i] = len;                     i++;                 }             }         }     } \n    ArrayList<Integer> matachedAtindex;      void KMPSearch(char[] pat, char[] txt) {         int m = pat.length;         int n = txt.length;         int j = 0;         int i = 0;         matachedAtindex = new ArrayList<>();         lpsCompute(pat);         while (i < n) {             if (pat[j] == txt[i]) {                 j++;                 i++;             }             if (j == m) {                 matachedAtindex.add((i - j));                 j = lps[j - 1];             } else if (i < n && pat[j] != txt[i]) {                 if (j != 0)                     j = lps[j - 1];                 else                     i = i + 1;             }         }     }          static int lps[];      static void lpsCompute(char[] pat) {         int n = pat.length;         lps = new int[n];         int j = 0;         int i = 1;         while (i < n) {             if (pat[i] == pat[j]) {                 j++;                 lps[i] = j;                 i++;             } else {                 if (j != 0) {                     j = lps[j - 1];                 } else {                     lps[i] = j;                     i++;                 }             }         }     } \n",
    "reg_date": "2021-10-12T12:06:16.000Z"
  },
  {
    "id": 3328,
    "keyword": null,
    "link": null,
    "title": " know the version of maven",
    "description": "mvn --version\n",
    "reg_date": "2021-10-12T12:06:16.000Z"
  },
  {
    "id": 3329,
    "keyword": null,
    "link": null,
    "title": " kotlin android intent pass data",
    "description": "//Send value from HomeActivity  val intent = Intent(this@HomeActivity,ProfileActivity::class.java) intent.putExtra(\"Username\",\"John Doe\") startActivity(intent)  //Get values in ProfileActivity  val profileName=intent.getStringExtra(\"Username\")\n",
    "reg_date": "2021-10-12T12:06:16.000Z"
  },
  {
    "id": 3330,
    "keyword": null,
    "link": null,
    "title": " kotlin binding views to activity",
    "description": "// Android Studio 4.0 android {     buildFeatures {         viewBinding = true     } }\n// Adding this to your build.gradle (Module level)  plugins {     id 'com.android.application'     id 'kotlin-android'     //Added:     id 'kotlin-kapt'     id 'kotlin-android-extensions' }   // And having this in your layout <Button \tandroid:id=\"@+id/btn_finish\"     (...)  // You ca use this in the .kt file btn_finish.setOnClickListener { \t// Do Something }\n",
    "reg_date": "2021-10-12T12:06:16.000Z"
  },
  {
    "id": 3331,
    "keyword": null,
    "link": null,
    "title": " kotlin enable and disable parents view children",
    "description": "private static void setViewAndChildrenEnabled(View view, boolean enabled) {     view.setEnabled(enabled);     if (view instanceof ViewGroup) {         ViewGroup viewGroup = (ViewGroup) view;         for (int i = 0; i < viewGroup.getChildCount(); i++) {             View child = viewGroup.getChildAt(i);             setViewAndChildrenEnabled(child, enabled);         }     } }\n",
    "reg_date": "2021-10-12T12:06:16.000Z"
  },
  {
    "id": 3332,
    "keyword": null,
    "link": null,
    "title": " kotlin get current date",
    "description": "val currentDate=LocalDate.now();\n",
    "reg_date": "2021-10-12T12:06:16.000Z"
  },
  {
    "id": 3333,
    "keyword": null,
    "link": null,
    "title": " kotlin jsonobject get nested",
    "description": "val jsonString = \"\"\" {   \"urls\": {      \"raw\": \"https://images.unsplash.com/photo-1461988320302-91bde64fc8e4?ixid=2yJhcHBfaWQiOjEyMDd9\",      \"full\": \"https://images.unsplash.com/photo-1461988320302-91bde64fc8e4?ixid=2yJhcHBfaWQiOjEyMDd9&fm=jpg&q=80\",      \"regular\": \"https://images.unsplash.com/photo-1461988320302-91bde64fc8e4?ixid=2yJhcHBfaWQiOjEyMDd9&fm=jpg&fit=crop&w=1080&q=80&fit=max\",      \"small\": \"https://images.unsplash.com/photo-1461988320302-91bde64fc8e4?ixid=2yJhcHBfaWQiOjEyMDd9&&fm=jpg&w=400&fit=max\",      \"thumb\": \"https://images.unsplash.com/photo-1461988320302-91bde64fc8e4?ixid=2yJhcHBfaWQiOjEyMDd9&fm=jpg&w=200&fit=max\"   } } \"\"\".trimIndent()  val json = JSONObject(jsonString) val rawUrl = json.getJSONObject(\"urls\").getString(\"raw\")\n",
    "reg_date": "2021-10-12T12:06:16.000Z"
  },
  {
    "id": 3334,
    "keyword": null,
    "link": null,
    "title": " kotlin list remove",
    "description": "val nums = mutableListOf(-3, -2, 4, -1, 0, 1, 2, 3, 4, 2, 5, 6, 5, 8)  nums.removeAt(4) // [-3, -2, 4, -1, 1, 2, 3, 4, 2, 5, 6, 5, 8]  nums.remove(4) // [-3, -2, -1, 1, 2, 3, 4, 2, 5, 6, 5, 8]  nums.removeAll(listOf(1, 2, 3)) // [-3, -2, -1, 4, 5, 6, 5, 8]  nums.removeAll({ it < -1 }) // [-1, 4, 5, 6, 5, 8]  nums -= listOf(4, 5) // [-1, 6, 8]  nums.removeAt(0) // remove first element // [6, 8]  nums.removeAt(nums.size - 1) // remove last element // [6]  nums.clear() // []\n",
    "reg_date": "2021-10-12T12:06:16.000Z"
  },
  {
    "id": 3335,
    "keyword": null,
    "link": null,
    "title": " kotlin print statement",
    "description": "//Kotlin print statement  //print on its own line println(\"Hello world\")    //regular print statement, will go on top of last line print(\"Hello world\")\n//Kotlin is a very special coding language //In order to print it needs a main function or else the code will error //I did this in vs code without a function and it reacted weirdly giving a bunch of error lines  fun main(args: Array<String>) {  println(\"Hello Bob\")  }  //you can print in two ways! println(\"hi world\")     print(\"hello print\")   /* In vs code I did fun main(){  }  And it worked great! */  \n",
    "reg_date": "2021-10-12T12:06:16.000Z"
  },
  {
    "id": 3336,
    "keyword": null,
    "link": null,
    "title": " kotlin string contains integer",
    "description": "str.matches(\".*\\\\d.*\"); \n",
    "reg_date": "2021-10-12T12:06:16.000Z"
  },
  {
    "id": 3337,
    "keyword": null,
    "link": null,
    "title": " kotlin variable in string",
    "description": "//Kotlin variable in string  //variables go in a ${} in a string, example println(\"Happy ${age}th birdthday, ${name}!\"\n// Use the $ sign to get the variable value inside a string:  //Example 1: println(\"$days days and $hours hours to go!\")    //You can also use {} to contain expressions: println(\"${days*24} hours to go!\") println(\"${myList}\")\n",
    "reg_date": "2021-10-12T12:06:17.000Z"
  },
  {
    "id": 3338,
    "keyword": null,
    "link": null,
    "title": " l,og in android studio",
    "description": "Log.e(String, String); //(error) Log.w(String, String); //(warning) Log.i(String, String); //(information) Log.d(String, String); //(debug) Log.v(String, String); //(verbose)\n",
    "reg_date": "2021-10-12T12:06:17.000Z"
  },
  {
    "id": 3339,
    "keyword": null,
    "link": null,
    "title": " lambda expressions in java",
    "description": "A lambda expression is a short block  of code which takes in parameters and returns a value. Lambda expressions are similar to methods, but they do not need a name and they can be implemented right in the body of a method.  parameter -> expression  To use more than one parameter, wrap them in parentheses:  (parameter1, parameter2) -> expression  Example Use a lamba expression in the ArrayList's  forEach() method to print every item in the list:  import java.util.ArrayList;  public class Main {   public static void main(String[] args) {     ArrayList<Integer> numbers = new ArrayList<Integer>();     numbers.add(5);     numbers.add(9);     numbers.add(8);     numbers.add(1);     numbers.forEach( (n) -> { System.out.println(n); } );   } } \nA lambda expression is a short block  of code which takes in parameters and returns a value. Lambda expressions are similar to methods, but they do not need a name and they can be implemented right in the body of a method.  parameter -> expression  To use more than one parameter, wrap them in parentheses:  (parameter1, parameter2) -> expression  Example Use a lamba expression in the ArrayList's  forEach() method to print every item in the list:  import java.util.ArrayList;  public class Main {   public static void main(String[] args) {     ArrayList<Integer> numbers = new ArrayList<Integer>();     numbers.add(5);     numbers.add(9);     numbers.add(8);     numbers.add(1);     numbers.forEach( (n) -> { System.out.println(n); } );   } }\nComparator<Developer> byName = \t(Developer o1, Developer o2)->o1.getName().compareTo(o2.getName());\nStateOwner stateOwner = new StateOwner();  stateOwner.addStateListener(     (oldState, newState) -> System.out.println(\"State changed\") ); \npublic class TestLambda {     public static void main(String args[]) {       List<String> lowerCaseStringsList = Arrays.asList(\"a\",\"b\",\"c\");      // the :: notation is the lambda expression      // it's the same as the anonymous function s -> s.toUpperCase()       List<String> upperCaseStringsList = lowerCaseStringsList.stream().         map(String::toUpperCase).         collect(Collectors.toList());    }    }\nLambda Expression\n",
    "reg_date": "2021-10-12T12:06:17.000Z"
  },
  {
    "id": 3340,
    "keyword": null,
    "link": null,
    "title": " lambda loop java fetch first element",
    "description": "yourStream     .filter(/* your criteria */)     .findFirst()     .get(); \n",
    "reg_date": "2021-10-12T12:06:17.000Z"
  },
  {
    "id": 3341,
    "keyword": null,
    "link": null,
    "title": " languages for android app development",
    "description": "Kotlin or Java even c++!\n",
    "reg_date": "2021-10-12T12:06:17.000Z"
  },
  {
    "id": 3342,
    "keyword": null,
    "link": null,
    "title": " last char in string java",
    "description": "String str = \"India\"; System.out.println(\"last char = \" + str.charAt(str.length() - 1));\npublic class Test {     public static void main(String args[]) {         String string = args[0];         System.out.println(\"last character: \" +                            string.substring(string.length() - 1));      } }\npublic class Test {     public static void main(String args[]) {         String string = args[0];         System.out.println(\"last character: \" +                            string.substring(string.length() - 1));      } } \n",
    "reg_date": "2021-10-12T12:06:17.000Z"
  },
  {
    "id": 3343,
    "keyword": null,
    "link": null,
    "title": " last day of month from localdate java",
    "description": " LocalDate monthstart = LocalDate.of(year,month,1);  LocalDate monthend = monthstart.plusDays(monthstart.lengthOfMonth()-1); \n",
    "reg_date": "2021-10-12T12:06:17.000Z"
  },
  {
    "id": 3344,
    "keyword": null,
    "link": null,
    "title": " last method in jdbc",
    "description": "last() -> jumps to last row\n",
    "reg_date": "2021-10-12T12:06:17.000Z"
  },
  {
    "id": 3345,
    "keyword": null,
    "link": null,
    "title": " latest dependency for snackbar android",
    "description": "implementation \"com.google.android.material:material:1.1.0-alpha06\"\n",
    "reg_date": "2021-10-12T12:06:17.000Z"
  },
  {
    "id": 3346,
    "keyword": null,
    "link": null,
    "title": " leap year checker java",
    "description": "import java.util.Scanner; public class LeapYear {    public static void main(String[] args){       int year;       System.out.println(\"Enter an Year :: \");       Scanner sc = new Scanner(System.in);       year = sc.nextInt();        if (((year % 4 == 0) && (year % 100!= 0)) || (year@0 == 0))          System.out.println(\"Specified year is a leap year\");       else          System.out.println(\"Specified year is not a leap year\");    } }\npublic class LeapYear {      public static void main(String[] args) {          int year = 1900;         boolean leap = false;          if(year % 4 == 0)         {             if( year % 100 == 0)             {                 // year is divisible by 400, hence the year is a leap year                 if ( year % 400 == 0)                     leap = true;                 else                     leap = false;             }             else                 leap = true;         }         else             leap = false;          if(leap)             System.out.println(year + \" is a leap year.\");         else             System.out.println(year + \" is not a leap year.\");     } }\nimport java.time.LocalDate; import java.time.LocalDateTime; import java.time.Year; import java.time.ZonedDateTime;   public class Main  {     public static void main(String[] args)      {         // 1. ZonedDateTime           ZonedDateTime currentTime = ZonedDateTime.now();           if (currentTime.toLocalDate().isLeapYear())          {             System.out.println(currentTime.getYear() + \" is a leap year\");         } else {             System.out.println(currentTime.getYear() + \" is NOT a leap year\");         }           // 2. LocalDateTime           LocalDateTime localDateTime = LocalDateTime.now();           if (localDateTime.toLocalDate().isLeapYear())          {             System.out.println(localDateTime.getYear() + \" is a leap year\");         } else {             System.out.println(localDateTime.getYear() + \" is NOT a leap year\");         }                   // 3. LocalDate           LocalDate localDate = LocalDate.now();           if (localDate.isLeapYear())          {             System.out.println(localDate.getYear() + \" is a leap year\");         } else {             System.out.println(localDate.getYear() + \" is NOT a leap year\");         }                   //4. Check current year is leap year or not           if (Year.now().isLeap())          {             System.out.println(\"Current year is a leap year\");         } else {             System.out.println(\"Current year is NOT a leap year\");         }     } } \n",
    "reg_date": "2021-10-12T12:06:17.000Z"
  },
  {
    "id": 3347,
    "keyword": null,
    "link": null,
    "title": " leap year program in java",
    "description": "import java.util.Scanner; public class LeapYear {    public static void main(String[] args){       int year;       System.out.println(\"Enter an Year :: \");       Scanner sc = new Scanner(System.in);       year = sc.nextInt();        if (((year % 4 == 0) && (year % 100!= 0)) || (year@0 == 0))          System.out.println(\"Specified year is a leap year\");       else          System.out.println(\"Specified year is not a leap year\");    } }\npublic static boolean isLeapYear(int year) {   if (year % 4 != 0) {     return false;   } else if (year % 400 == 0) {     return true;   } else if (year % 100 == 0) {     return false;   } else {     return true;   } }\npublic static boolean isLeapYear(int year) {   if (year % 4 != 0) {     return false;   } else if (year % 100 != 0) {     return true;   } else if (year % 400 != 0) {     return false;   } else {     return true;   } }\n(year % 4 == 0) && ((year % 100 != 0) || (year % 400 == 0))\npublic class LeapYear {      public static void main(String[] args) {          int year = 1900;         boolean leap = false;          if(year % 4 == 0)         {             if( year % 100 == 0)             {                 // year is divisible by 400, hence the year is a leap year                 if ( year % 400 == 0)                     leap = true;                 else                     leap = false;             }             else                 leap = true;         }         else             leap = false;          if(leap)             System.out.println(year + \" is a leap year.\");         else             System.out.println(year + \" is not a leap year.\");     } }\nimport java.util.Scanner;public class Main{public static void main(String[] args){int year;System.out.println(\"Enter the year\");Scanner sc = new Scanner(System.in);year = sc.nextInt();if (((year % 4 == 0) && (year % 100!= 0)) || (year@0 == 0))System.out.println(\"it is a leap year\");elseSystem.out.println(\"it is not a leap year\");}}\n",
    "reg_date": "2021-10-12T12:06:18.000Z"
  },
  {
    "id": 3348,
    "keyword": null,
    "link": null,
    "title": " learn java",
    "description": " ===== Links for reading ==== #Tutorial https://docs.oracle.com/javase/tutorial/ https://www.w3schools.com/java/ https://www.tutorialspoint.com/java https://www.programiz.com/java-programming https://www.javatpoint.com/java-tutorial https://www.edureka.co/blog/java-tutorial/ https://beginnersbook.com/ https://www.baeldung.com/java-tutorial\t https://algorithms.tutorialhorizon.com/  #Interactive tutorial https://exercism.org/ https://www.sololearn.com/learning/1068 https://www.learnjavaonline.org/  #Course https://www.edx.org/learn/java https://www.udemy.com/topic/java/ https://www.coursera.org/courses?query=java https://www.udacity.com/ Youtube  #Blog https://mkyong.com/ https://www.javacodegeeks.com/ https://vladmihalcea.com/ https://www.programcreek.com/ https://blog.jooq.org/ https://www.infoworld.com/category/java/ https://javarevisited.blogspot.com/  #IDE  https://www.onlinegdb.com/ IntelliJ  Eclipse NetBeans   If it helpful, upvote me! Thanks ~\n\"\"\" Great foundation for basics  https://www.w3schools.com/python/default.asp\" \"\"\"\n= Output: 10 += Output: 20 -= Output: 10 *= Output: 200 /= Output: 10 %= Output: 0\nint[] marks = {50, 55, 60, 70, 80}; System.out.println(marks[0]);// Output: 50 System.out.println(marks[4]);// Output: 80\n",
    "reg_date": "2021-10-12T12:06:18.000Z"
  },
  {
    "id": 3349,
    "keyword": null,
    "link": null,
    "title": " left fold java",
    "description": "# https://apocalisp.wordpress.com/2008/04/22/left-fold-in-java/ # now that there is lambdas in Java it's certainly easier but # this one should stay with us for it is beautiful!      public static <A, B> A fold(F<A, F<B, A>> f, A z, Iterable<B> xs)     { A p = z;       for (B x : xs)         { p = f.f(p).f(x); }       return p; }\n",
    "reg_date": "2021-10-12T12:06:18.000Z"
  },
  {
    "id": 3350,
    "keyword": null,
    "link": null,
    "title": " len of number in java",
    "description": "int length = (int) (Math.log10(number) + 1); \nScanner s = new Scanner(System.in); \t\tint n = s.nextInt(); \t\t \t\tint length = String.valueOf(n).length(); \t\tSystem.out.print(length);\nint length = 0; long temp = 1; while (temp <= number) {     length++;     temp *= 10; } return length; \n",
    "reg_date": "2021-10-12T12:06:18.000Z"
  },
  {
    "id": 3351,
    "keyword": null,
    "link": null,
    "title": " length of array in java",
    "description": "/** * An Example to get the Array Length is Java */ public class ArrayLengthJava { public static void main(String[] args) { String[] myArray = { \"I\", \"Love\", \"Music\" }; int arrayLength = myArray.length; //array length attribute System.out.println(\"The length of the array is: \" + arrayLength); } } \nInt[] array = {1,2,3}; int lengthOfArray = array.length; /** Finding the length of the array and storing it */ System.out.println(String.valueOf(lengthOfArray)); /** Should print out 3, String.value Of() is optional as printLn does this automatically. */\nlet coolCars = ['ford', 'chevy']; //to find length, use the array's built in method let length = coolCars.length; //length == 2.\narr.length;\nclass Main {   public static void main(String[] args) {     // Creating an array called x.     String[] x = new String[]{\"This\", \"Should\", \"return\", \"4\"};     // \"x.length\" finds the length of the array \"x\".     System.out.println(x.length);     // returns 4   } }\nint[] num = new int[5];\n",
    "reg_date": "2021-10-12T12:06:18.000Z"
  },
  {
    "id": 3352,
    "keyword": null,
    "link": null,
    "title": " length of string java",
    "description": "String data = \"Hello, World!\"; int nameLength = data.length(); // 13\npublic class Sample_String {     public static void main(String[] args) {         //declare the String as an object S1 S2         String S1 = \"Hello Java String Method\";         String S2 = \"RockStar\";          //length() method of String returns the length of a String S1.         int length = S1.length();         System.out.println(\"Length of a String is: \" + length);         //8 Length of a String RockStar         System.out.println(\"Length of a String is: \" + S2.length());     } } \nstr.length();\nString data = \"Hello, World!\"; int nameLength = data.length(); \nstring.length() \nString txt = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"; System.out.println(\"The length of the txt string is: \" + txt.length()); \n",
    "reg_date": "2021-10-12T12:06:18.000Z"
  },
  {
    "id": 3353,
    "keyword": null,
    "link": null,
    "title": " libgdx move camera with touch",
    "description": "@Override public boolean touchDragged(int screenX, int screenY, int pointer) {     //difference between the current pointer location and the last pointer location on X axis     float x = Gdx.input.getDeltaX();     //difference between the current pointer location and the last pointer location on Y axis     float y = Gdx.input.getDeltaY();      camera.translate(-x,y);     return true; }\n",
    "reg_date": "2021-10-12T12:06:18.000Z"
  },
  {
    "id": 3354,
    "keyword": null,
    "link": null,
    "title": " like in cypher query",
    "description": "MATCH (n) where n.Name =~ '.*SUBSTRING.*' return n.Name, n; \nstart n = node(*) where n.Name contains \"substring\" return n.Name, n; \n",
    "reg_date": "2021-10-12T12:06:18.000Z"
  },
  {
    "id": 3355,
    "keyword": null,
    "link": null,
    "title": " line chart animation android studio mpandoridchart",
    "description": "lineDataSet.setMode(LineDataSet.Mode.CUBIC_BEZIER); \n",
    "reg_date": "2021-10-12T12:06:18.000Z"
  },
  {
    "id": 3356,
    "keyword": null,
    "link": null,
    "title": " linear layout element to center",
    "description": "android:gravity=\"center\"\nandroid:gravity takes care of its children, android:layout_gravity takes care of itself\n",
    "reg_date": "2021-10-12T12:06:18.000Z"
  },
  {
    "id": 3357,
    "keyword": null,
    "link": null,
    "title": " linearlayout horizontal in recyclerview",
    "description": "mRecyclerView.setLayoutManager(new LinearLayoutManager(this, LinearLayoutManager.HORIZONTAL, true)); \n",
    "reg_date": "2021-10-12T12:06:19.000Z"
  },
  {
    "id": 3358,
    "keyword": null,
    "link": null,
    "title": " link to method javadoc",
    "description": "/** See also {@link com.mypackage.MyClass#myMethod(String)}. */\n",
    "reg_date": "2021-10-12T12:06:19.000Z"
  },
  {
    "id": 3359,
    "keyword": null,
    "link": null,
    "title": " linkedhashmap in java",
    "description": "LinkedHashMap is same as HasHMap just additionally maintains the insertion order.\nLinkedHashMap can have null key, keeps order\nMain difference between HashMap and LinkedHashMap I remember is that LinkedHashMap maintains insertion order of keys,  On the other hand HashMap doesn't maintain any order or keys or values. Also LinkedHashMap requires more memory than HashMap because of the ordering feature. LinkedHashMap doublly Linked List to  maintain order of elements.\n",
    "reg_date": "2021-10-12T12:06:19.000Z"
  },
  {
    "id": 3360,
    "keyword": null,
    "link": null,
    "title": " linux change java",
    "description": "sudo update-alternatives --config java\nsudo update-java-alternatives -s java-8-oracle export JAVA_HOME=/usr/lib/jvm/java-8-oracle/ export PATH=$PATH:$JAVA_HOME 123\n",
    "reg_date": "2021-10-12T12:06:19.000Z"
  },
  {
    "id": 3361,
    "keyword": null,
    "link": null,
    "title": " linux command to see all the java version installed",
    "description": "sudo update-alternatives --display java \nsudo update-alternatives --config java \n",
    "reg_date": "2021-10-12T12:06:19.000Z"
  },
  {
    "id": 3362,
    "keyword": null,
    "link": null,
    "title": " list class type java",
    "description": "List<String> myList = new ArrayList<String>(); return (Class<List<String>>)myList.getClass();\n",
    "reg_date": "2021-10-12T12:06:19.000Z"
  },
  {
    "id": 3363,
    "keyword": null,
    "link": null,
    "title": " list in java",
    "description": "import java.util.ArrayList; import java.util.Collections; import java.util.List; import java.util.ListIterator; public class Main {    public static void main(String[] args) {       List<String> list = new ArrayList<String>();       list.add(\"a\");       list.add(\"b\");       list.add(\"c\");       list.add(\"d\");       list.add(\"e\");       list.add(\"f\");              //On met la liste dans le d&eacute;sordre       Collections.shuffle(list);       System.out.println(list);              //On la remet dans l'ordre       Collections.sort(list);       System.out.println(list);              Collections.rotate(list, -1);       System.out.println(list);              //On r&eacute;cup&egrave;re une sous-liste       List<String> sub = list.subList(2, 5);       System.out.println(sub);       Collections.reverse(sub);       System.out.println(sub);              //On r&eacute;cup&egrave;re un ListIterator       ListIterator<String> it = list.listIterator();       while(it.hasNext()){          String str = it.next();          if(str.equals(\"d\"))             it.set(\"z\");       }       while(it.hasPrevious())          System.out.print(it.previous());           } } \n//Creating arraylist example  ArrayList<String> list = new ArrayList<String>();     //Adding objects in arraylist  list.add(\"Mango\");     list.add(\"Banana\");     //Change the element (index,\"new value\") list.set(1,\"Dates\");   //Return the 2nd element, because index starts from 0 System.out.println(\"Returning element: \" + list.get(1)); \nimport java.util.*; var list = new ArrayList<String>(); list.add(\"Hello World!\");\n",
    "reg_date": "2021-10-12T12:06:19.000Z"
  },
  {
    "id": 3364,
    "keyword": null,
    "link": null,
    "title": " list java initialize",
    "description": "List<MyType> myList = new ArrayList<MyType>(); \nArrayList<String> list=new ArrayList<String>();//Creating arraylist           list.add(\"Mango\");//Adding object in arraylist           list.add(\"Apple\");           list.add(\"Banana\");           list.add(\"Grapes\");           //Printing the arraylist object          System.out.println(list);  \n",
    "reg_date": "2021-10-12T12:06:19.000Z"
  },
  {
    "id": 3365,
    "keyword": null,
    "link": null,
    "title": " list java processes",
    "description": "ps aux | grep java\n",
    "reg_date": "2021-10-12T12:06:19.000Z"
  },
  {
    "id": 3366,
    "keyword": null,
    "link": null,
    "title": " list java versions mac",
    "description": "/usr/libexec/java_home -V\n",
    "reg_date": "2021-10-12T12:06:19.000Z"
  },
  {
    "id": 3367,
    "keyword": null,
    "link": null,
    "title": " list of BigInteger to list of long",
    "description": "List<Long> longList = bigIntegerList.stream().map(BigInteger::longValue).collect(Collectors.toList());\n",
    "reg_date": "2021-10-12T12:06:20.000Z"
  },
  {
    "id": 3368,
    "keyword": null,
    "link": null,
    "title": " list of arrays java",
    "description": "List<int[]> A = new List<int[]>(); \nArrayList: part of Collections         does not support primitives, only support none primitives size is dynamic, automatically adjusted has index numbers ArrayList <DataType>  listName = new ArrayList <DataType> (); methods: add(): adds Objects to the arraylist get(index): gets the object at the given index, returns the object as it is size(): returns the length (size) of the arraylist as an int add(Object): adds objects to the arraylist add(index, Object): adds the object at the given index set(index, Object):  replacing the original object at given index with the new given object remove(int index): object at the given index will be removed. ONLY one  remove(Object): given object will be removed, returns boolean. ONLY one  clear(): remove everything from arraylist, size will be 0 indexOf(Object): returns the index number of the object, int contains(Object): returns boolean  equals(ArrayListName): compares two arrayList  isEmpty(): returns boolean, depeding on the size  Data Structures: \t\t1. Array  ==>    Arrays (java.util) \t\t2. Collection ==> Collections (java.util), does not support primitive \t\t3. Maps  ==> does not support primitive   Methods: Bulk Operations: containsAll(CollectionType): verifies if all objects in CollectionType are contained in the list or not, returns boolean   addAll(CollectionType): adds multiple objects, adds all the objects from given collection type   removeAll(CollectionType): removes multiple objetcs, removes all the matching objects   retainAll(CollectionType): removes all the unmatching objects \t\t\t\t\t{1,2,3,4,5,6,7,1,2,3,4} \t\t\t\t\tremoveAll(1,2,3,4) ==> {5,6,7} \t\t\t\t\tretainAll(1,2,3,4) ==> {1,2,3,4,1,2,3,4 }                Arrays.asList(object1, object2 ..): returns the collection type (List)    ArrayList<Integer> numList = new ArrayList<>(CollectionType);    sorting arrayList: \tCollections.sort(ArrayListName); ==> Ascending order   \tCollections: presented in \"java.util\" package \t\timport PakageName.Classname; \t\timport java.util.Collections;      Collections Class: sort(CollectionType): sorting any given collectionType   frequency(CollectionType, Object): returns the frequency of the given object from the given collectionType   max(CollectionType): return the max object from collectiontype   min(CollectionType): return the min object from collectiontype   swap(CollectionType, index1, index2): swaps the elemnts at the given indexs from the CollectionType \t\t\t\tlist: {1,2,3,4,5} \t\t\t\tCollections.swap(list, 1, 2); ==> {1,3,2,4,5}   replaceAll(CollectionType, oldValue, newValue): \t\t\t\tlist: {1,1,1,2,3,4,5} \t\t\t\tCollections.replaceAll(list, 1, 10); ==>{10,10,10,2,3,4,5}  Predicate:  can be applied to any collection-Type \t\tnumber % 2 != 0   \t\tPredicate<Ineteger>  oddNumber =  p -> p %2 != 0;   ArrayLisst method: remove If(Predicate): removes everything that's matching with the expression of predicate \nList<Object[]> list = new ArrayList<>(); list.add(new String[5]); list.add(new Integer[5]); Object[] objects = list.get(0); \n",
    "reg_date": "2021-10-12T12:06:20.000Z"
  },
  {
    "id": 3369,
    "keyword": null,
    "link": null,
    "title": " list of string to string array in java",
    "description": "String string = list.stream().map(Object::toString).collect(Collectors.joining(\"\"));\n        String[]result=stringList.toArray(new String[0]);\nArrayList<String> al = new ArrayList<String>();       al.add(\"Hello\");       al.add(\"Wor\");       al.add(\"ld\");       StringBuffer sb = new StringBuffer();              for (String s : al) {          sb.append(s);          sb.append(\" \");       }       String str = sb.toString();       System.out.println(str);//\"Hello wor ld\" \nlist.toArray(new String[0]);\nArrayList<String> list = new ArrayList<String>(); list.add(\"one\"); list.add(\"two\"); list.add(\"three\");  StringBuilder sb = new StringBuilder(); for (String s : list) {     sb.append(s);     sb.append(\"\\t\"); }  System.out.println(sb.toString()); \n",
    "reg_date": "2021-10-12T12:06:20.000Z"
  },
  {
    "id": 3370,
    "keyword": null,
    "link": null,
    "title": " list of strings java",
    "description": "String string = list.stream().map(Object::toString).collect(Collectors.joining(\"\"));\nList<MyType> myList = new ArrayList<MyType>(); \nList<MyType> myList = new ArrayList<>();\nString[] list = data.split(\",\");\n//Creating arraylist example  ArrayList<String> list = new ArrayList<String>();     //Adding objects in arraylist  list.add(\"Mango\");     list.add(\"Banana\");     //Change the element (index,\"new value\") list.set(1,\"Dates\");   //Return the 2nd element, because index starts from 0 System.out.println(\"Returning element: \" + list.get(1)); \nArrayList<String> list=new ArrayList<String>();//Creating arraylist           list.add(\"Mango\");//Adding object in arraylist           list.add(\"Apple\");           list.add(\"Banana\");           list.add(\"Grapes\");           //Printing the arraylist object          System.out.println(list);  \n",
    "reg_date": "2021-10-12T12:06:20.000Z"
  },
  {
    "id": 3371,
    "keyword": null,
    "link": null,
    "title": " list shuffle java",
    "description": "import java.util.*;  public class List{         public static void main(String[] args){         LinkedList<Integer> ListOfNumbers = new LinkedList<Integer>();         ListOfNumbers.add(1);         ListOfNumbers.add(2);         ListOfNumbers.add(3);         ListOfNumbers.add(4);         ListOfNumbers.add(5);         System.out.println(\"The Original Sequence of numbers was : \\n\" + ListOfNumbers);         Collections.shuffle(ListOfNumbers);         System.out.println(\"\\n The shuffled list is : \\n\" +ListOfNumbers );     } } \n",
    "reg_date": "2021-10-12T12:06:20.000Z"
  },
  {
    "id": 3372,
    "keyword": null,
    "link": null,
    "title": " list size in java",
    "description": "        Collection<Object> list = new ArrayList<>();         list.size();                  // All collections use size()         // array use array. length  \nBefore operation: [1, 2, 3, 4, 5] Size of list = 5   \nimport java.util.ArrayList; import java.util.List; public class Demo {    public static void main(String[] args) {       List aList = new ArrayList();       aList.add(\"Apple\");       aList.add(\"Mango\");       aList.add(\"Guava\");       aList.add(\"Orange\");       aList.add(\"Peach\");       System.out.println(\"The size of the ArrayList is: \" + aList.size());    } }\n",
    "reg_date": "2021-10-12T12:06:20.000Z"
  },
  {
    "id": 3373,
    "keyword": null,
    "link": null,
    "title": " list to int array in java 8",
    "description": "int[] array = list.stream().mapToInt(i->i).toArray();\nList<Integer> al = new ArrayList<Integer>();  Integer[] arr = new Integer[al.size()];  arr = al.toArray(arr); \n",
    "reg_date": "2021-10-12T12:06:20.000Z"
  },
  {
    "id": 3374,
    "keyword": null,
    "link": null,
    "title": " list to lowercase java",
    "description": "List<String> result = strings.stream()                              .map(String::toLowerCase)                              .collect(Collectors.toList()); \n",
    "reg_date": "2021-10-12T12:06:20.000Z"
  },
  {
    "id": 3375,
    "keyword": null,
    "link": null,
    "title": " list to map of list java 8",
    "description": "   Map<String,Set<String>> map =  list.stream().            collect(Collectors.groupingBy(                     Student::getName,                     Collectors.mapping(e->getNum(e.getAddr()), Collectors.toSet())                 ));     System.out.println(\"Map : \"+map); \n",
    "reg_date": "2021-10-12T12:06:20.000Z"
  },
  {
    "id": 3376,
    "keyword": null,
    "link": null,
    "title": " listener annotation in testng",
    "description": "Listener annotation is used in selenium to generate logs or customize the  TestNG reports. We have to add first <listeners> class-name=\"Listener\"/> tag into our  testng.xml file. Then create a Listener class which implements ITestListener  interface and override all the abstract methods from there.  The Listener class can be under any folder however Utilities package is  more proper to store it.   ITestListener has  methods like: - onStart- OnStart method is called when any Test starts. - onTestSuccess- onTestSuccess method is called on the success of any Test. - onTestFailure- onTestFailure method is called on the failure of any Test. - onTestSkipped- onTestSkipped method is called on skipped of any Test. - onTestFailedButWithinSuccessPercentage- method is called each time Test fails  but is within success percentage. - onFinish- onFinish method is called after all Tests are executed  \nListener annotation is used in selenium to generate logs or customize the  TestNG reports. We have to add first <listeners> class-name=\"Listener\"/> tag into our  testng.xml file. Then create a Listener class which implements ITestListener  interface and override all the abstract methods from there.  The Listener class can be under any folder however Utilities package is  more proper to store it.   ITestListener has  methods like: - onStart- OnStart method is called when any Test starts. - onTestSuccess- onTestSuccess method is called on the success of any Test. - onTestFailure- onTestFailure method is called on the failure of any Test. - onTestSkipped- onTestSkipped method is called on skipped of any Test. - onTestFailedButWithinSuccessPercentage- method is called each time Test fails  but is within success percentage. - onFinish- onFinish method is called after all Tests are executed\n● configure reports and logging. ● widely used listeners : ITestListener interface. ● It has methods like onTestStart, onTestSucess. onTestFailure, on TestSkipped ● we should implement this interface creating a listener class of our own, ● Next, we should add the listeners annotation (@Listeners) in the class\n",
    "reg_date": "2021-10-12T12:06:20.000Z"
  },
  {
    "id": 3377,
    "keyword": null,
    "link": null,
    "title": " listin looping in java",
    "description": "Iterator itr=list.iterator(); while(itr.hasNext()){  system.out.println(itr.next);  }\nfor (E element : list) {     . . . } \nIterator itr=list.iterator(); while(itr.hasNext) {  system.out.println(itr.next);  }\n",
    "reg_date": "2021-10-12T12:06:21.000Z"
  },
  {
    "id": 3378,
    "keyword": null,
    "link": null,
    "title": " listview get selected java",
    "description": "ListView.getSelectionModel().getSelectedItem();\n",
    "reg_date": "2021-10-12T12:06:21.000Z"
  },
  {
    "id": 3379,
    "keyword": null,
    "link": null,
    "title": " listview refresh android adapter",
    "description": "youradapter.notifyDataSetChanged(); \n",
    "reg_date": "2021-10-12T12:06:21.000Z"
  },
  {
    "id": 3380,
    "keyword": null,
    "link": null,
    "title": " literals in java",
    "description": "Literals are number, text, or anything that represent a value. In other words, Literals in Java are the constant values  assigned to the variable. It is also called as constants........\n",
    "reg_date": "2021-10-12T12:06:21.000Z"
  },
  {
    "id": 3381,
    "keyword": null,
    "link": null,
    "title": " livedata and viewmodel dependency",
    "description": "dependencies {     def lifecycle_version = \"2.2.0\"     def arch_version = \"2.1.0\"      // ViewModel     implementation \"androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version\"     // LiveData     implementation \"androidx.lifecycle:lifecycle-livedata:$lifecycle_version\"     // Lifecycles only (without ViewModel or LiveData)     implementation \"androidx.lifecycle:lifecycle-runtime:$lifecycle_version\"      // Saved state module for ViewModel     implementation \"androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version\"      // Annotation processor     annotationProcessor \"androidx.lifecycle:lifecycle-compiler:$lifecycle_version\"     // alternately - if using Java8, use the following instead of lifecycle-compiler     implementation \"androidx.lifecycle:lifecycle-common-java8:$lifecycle_version\"      // optional - helpers for implementing LifecycleOwner in a Service     implementation \"androidx.lifecycle:lifecycle-service:$lifecycle_version\"      // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process     implementation \"androidx.lifecycle:lifecycle-process:$lifecycle_version\"      // optional - ReactiveStreams support for LiveData     implementation \"androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version\"      // optional - Test helpers for LiveData     testImplementation \"androidx.arch.core:core-testing:$arch_version\" } \n// ViewModel and LiveData implementation \"androidx.lifecycle:lifecycle-extensions:$lifecycle_version\" // alternatively - just ViewModel implementation \"androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version\" // For Kotlin use lifecycle-viewmodel-ktx // alternatively - just LiveData implementation \"androidx.lifecycle:lifecycle-livedata:$lifecycle_version\" // alternatively - Lifecycles only (no ViewModel or LiveData). Some UI //     AndroidX libraries use this lightweight import for Lifecycle implementation \"androidx.lifecycle:lifecycle-runtime:$lifecycle_version\"  annotationProcessor \"androidx.lifecycle:lifecycle-compiler:$lifecycle_version\" // For Kotlin use kapt instead of annotationProcessor // alternately - if using Java8, use the following instead of lifecycle-compiler implementation \"androidx.lifecycle:lifecycle-common-java8:$lifecycle_version\"  // optional - ReactiveStreams support for LiveData implementation \"androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version\" // For Kotlin use lifecycle-reactivestreams-ktx  // optional - Test helpers for LiveData testImplementation \"androidx.arch.core:core-testing:$lifecycle_version\" \n",
    "reg_date": "2021-10-12T12:06:21.000Z"
  },
  {
    "id": 3382,
    "keyword": null,
    "link": null,
    "title": " load a file from classpath spring boot",
    "description": "\tpublic void testResourceFile() throws IOException { \t\tFile resource = new ClassPathResource(\"test.json\").getFile(); \t\tString text = new String(Files.readAllBytes(resource.toPath())); \t} \n    private void testResource(Resource resource) { \t\ttry { \t\t\tInputStream resourcee = resource.getInputStream(); \t\t\tString text = null; \t\t\ttry (final Reader reader = new InputStreamReader(resourcee)) { \t\t\t\ttext = CharStreams.toString(reader); \t\t\t} \t\t\tSystem.out.println(text);   \t\t} catch (IOException e) { \t\t\te.printStackTrace(); \t\t} \t} \n",
    "reg_date": "2021-10-12T12:06:21.000Z"
  },
  {
    "id": 3383,
    "keyword": null,
    "link": null,
    "title": " load contents of file into string java",
    "description": "package test;  import java.io.BufferedReader; import java.io.FileInputStream; import java.io.IOException; import java.io.InputStream; import java.io.InputStreamReader; import java.nio.charset.StandardCharsets; import java.nio.file.Files; import java.nio.file.Paths;   /**  * Java Program to demonstrate different ways to loop over collection in   * pre Java 8 and Java 8 world using Stream's forEach method.  * @author Javin Paul  */ public class FileToStringJava8 {      public static void main(String args[]) throws IOException {          // How to read file into String before Java 7         InputStream is = new FileInputStream(\"manifest.mf\");         BufferedReader buf = new BufferedReader(new InputStreamReader(is));                  String line = buf.readLine();         StringBuilder sb = new StringBuilder();                  while(line != null){             sb.append(line).append(\"\\n\");             line = buf.readLine();         }                  String fileAsString = sb.toString();         System.out.println(\"Contents (before Java 7) : \" + fileAsString);                           // Reading file into Stirng in one line in JDK 7         String contents = new String(Files.readAllBytes(Paths.get(\"manifest.mf\")));         System.out.println(\"Contents (Java 7) : \" + contents);                                    // Reading file into String using proper character encoding         String fileString = new String(Files.readAllBytes(Paths.get(\"manifest.mf\")), StandardCharsets.UTF_8);         System.out.println(\"Contents (Java 7 with character encoding ) : \" + fileString);                   // It's even easier in Java 8         Files.lines(Paths.get(\"manifest.mf\"), StandardCharsets.UTF_8).forEach(System.out::println);              }   } \n",
    "reg_date": "2021-10-12T12:06:21.000Z"
  },
  {
    "id": 3384,
    "keyword": null,
    "link": null,
    "title": " loc.getworld().playsound( ",
    "description": "@EventHandler(ignoreCancelled = true) public void onPickupToQuickSlot(PlayerPickupItemEvent event) {     Player player = event.getPlayer();      if (!InventoryManager.playerIsLoaded(player) || !ItemManager.allowedForPlayer(player, event.getItem().getItemStack(), false)) {         return;     }      for (Slot quickSlot : SlotManager.instance().getQuickSlots()) {         int slotId = quickSlot.getQuickSlot();         if (quickSlot.isCup(player.getInventory().getItem(slotId)) && quickSlot.isValidItem(event.getItem().getItemStack())) {             player.getInventory().setItem(slotId, event.getItem().getItemStack());             event.getItem().remove();              player.playSound(player.getLocation(), Sound.ENTITY_ITEM_PICKUP, .3f, 1.7f);             if (Config.getConfig().getBoolean(\"attack.auto-held\")) {                 player.getInventory().setHeldItemSlot(quickSlot.getQuickSlot());             }              event.setCancelled(true);         }     } }  \n",
    "reg_date": "2021-10-12T12:06:21.000Z"
  },
  {
    "id": 3385,
    "keyword": null,
    "link": null,
    "title": " localdate to date java",
    "description": "public static Calendar toCalendar(Date date){    Calendar cal = Calendar.getInstance();   cal.setTime(date);   return cal; }\npackage com.mkyong.date;  import java.time.LocalDate;  public class JavaDateExample1 {      public static void main(String[] args) {          String date = \"2016-08-16\";          //default, ISO_LOCAL_DATE         LocalDate localDate = LocalDate.parse(date);          System.out.println(localDate);      } } Copy\n// Localdate to Date Date.from(localdate.atStartOfDay(ZoneId.systemDefault()).toInstant())\n   DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"d/MM/yyyy\");   String date = \"16/08/2016\";    //convert String to LocalDate   LocalDate localDate = LocalDate.parse(date, formatter); \ndateToConvert.toInstant()       .atZone(ZoneId.systemDefault())       .toLocalDate();\npublic LocalDateTime convertToLocalDateTimeViaInstant(Date dateToConvert) {     return dateToConvert.toInstant()       .atZone(ZoneId.systemDefault())       .toLocalDateTime(); }\n",
    "reg_date": "2021-10-12T12:06:21.000Z"
  },
  {
    "id": 3386,
    "keyword": null,
    "link": null,
    "title": " localdate to string java",
    "description": "LocalDate today = LocalDate.now();   String formattedDate = today.format(DateTimeFormatter.ofPattern(\"dd-MMM-yy\"));   System.out.println(formattedDate);\nLocalDate today = LocalDate.now();           System.out.println(today.toString()); \n",
    "reg_date": "2021-10-12T12:06:21.000Z"
  },
  {
    "id": 3387,
    "keyword": null,
    "link": null,
    "title": " localdate to timestamp in java",
    "description": "Timestamp timestamp = Timestamp.valueOf(localDate.atStartOfDay());\n",
    "reg_date": "2021-10-12T12:06:22.000Z"
  },
  {
    "id": 3388,
    "keyword": null,
    "link": null,
    "title": " localdatetime java example",
    "description": "LocalDateTime current=LocalDateTime.now();//gets current LocalDateTime LocalDateTime dateTime=LocalDateTime.of(year,month,day,hour,minute,second);//gets specific LocalDateTime dateTime.getHour();//get the hour of a DateTime dateTime.getDayOfWeek();//get number of current day in week dateTime.isBefore(someOtherDateTime);//checks if it is before another LocalDateTime dateTime.toLocalDate();//converts it to a LocalDate dateTime.toLocalTime();//converts it to a LocalTime\n",
    "reg_date": "2021-10-12T12:06:22.000Z"
  },
  {
    "id": 3389,
    "keyword": null,
    "link": null,
    "title": " log10 in java",
    "description": "Math.log10()\n",
    "reg_date": "2021-10-12T12:06:22.000Z"
  },
  {
    "id": 3390,
    "keyword": null,
    "link": null,
    "title": " log4j maven",
    "description": "package com.howtodoinjava;   import org.apache.log4j.BasicConfigurator; import org.apache.log4j.Logger;   public class Log4jHelloWorld {       static final Logger logger = Logger.getLogger(Log4jHelloWorld.class);       public static void main(String[] args)     {         //Configure logger         BasicConfigurator.configure();         logger.debug(\"Hello World!\");     } } \n",
    "reg_date": "2021-10-12T12:06:22.000Z"
  },
  {
    "id": 3391,
    "keyword": null,
    "link": null,
    "title": " logcat android",
    "description": "adb logcat\nLogcat is a command-line tool that dumps a log of system messages,  including stack traces when the device throws an error and messages  that you have written from your app with the Log class. \n",
    "reg_date": "2021-10-12T12:06:22.000Z"
  },
  {
    "id": 3392,
    "keyword": null,
    "link": null,
    "title": " logging in java",
    "description": "private static final Logger LOGGER = Logger.getLogger( ClassName.class.getName() ); \nLogging is the process of writing log messages during the execution of a  program to a central place.This logging allows you to report and persist error and warning messages as well as info messages (e.g., runtime  statistics) so that the messages can later be retrieved and analyzed.\n",
    "reg_date": "2021-10-12T12:06:22.000Z"
  },
  {
    "id": 3393,
    "keyword": null,
    "link": null,
    "title": " logging to a file log4j",
    "description": " // How to log to a file using log4j :    String filePath = \"D:/Logs/MyFirstLog.log\";  PatternLayout layout = new PatternLayout(\"%-5p %d %m%n\");  RollingFileAppender appender = new RollingFileAppender(layout, filePath);  appender.setName(\"MyFirstLog\");  appender.setMaxFileSize(\"20MB\");  appender.activateOptions();  logger.addAppender(appender);  logger.info(\"this will be printed in the provided log file\");\n",
    "reg_date": "2021-10-12T12:06:22.000Z"
  },
  {
    "id": 3394,
    "keyword": null,
    "link": null,
    "title": " login and logout react native and firebase",
    "description": "distributionBase=GRADLE_USER_HOMEdistributionPath=wrapper/distszipStoreBase=GRADLE_USER_HOMEzipStorePath=wrapper/distsdistributionUrl=https\\://services.gradle.org/distributions/gradle-4.4-all.zip\n",
    "reg_date": "2021-10-12T12:06:22.000Z"
  },
  {
    "id": 3395,
    "keyword": null,
    "link": null,
    "title": " lombok ignore getter e setter",
    "description": "@Getter(AccessLevel.NONE) @Setter(AccessLevel.NONE) private Object obj;\n",
    "reg_date": "2021-10-12T12:06:22.000Z"
  },
  {
    "id": 3396,
    "keyword": null,
    "link": null,
    "title": " lombok maven",
    "description": "<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --> <dependency>     <groupId>org.projectlombok</groupId>     <artifactId>lombok</artifactId>     <version>1.18.10</version>     <scope>provided</scope> </dependency> \n<dependency> \t<groupId>org.projectlombok</groupId> \t<artifactId>lombok</artifactId> \t<version>1.18.16</version> \t<scope>provided</scope> </dependency>\n<dependencies>     ...     <dependency>         <groupId>org.projectlombok</groupId>         <artifactId>lombok</artifactId>         <version>1.18.20</version>         <scope>provided</scope>     </dependency>     ... </dependencies>\n<annotationProcessorPaths> \t<path> \t\t<groupId>org.projectlombok</groupId> \t\t<artifactId>lombok</artifactId> \t\t<version>1.18.16</version> \t</path> </annotationProcessorPaths> \n",
    "reg_date": "2021-10-12T12:06:22.000Z"
  },
  {
    "id": 3397,
    "keyword": null,
    "link": null,
    "title": " lombok maven dependency",
    "description": "<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --> <dependency>     <groupId>org.projectlombok</groupId>     <artifactId>lombok</artifactId>     <version>1.18.10</version>     <scope>provided</scope> </dependency> \n<dependency> \t<groupId>org.projectlombok</groupId> \t<artifactId>lombok</artifactId> \t<version>1.18.16</version> \t<scope>provided</scope> </dependency>\n<dependencies>     ...     <dependency>         <groupId>org.projectlombok</groupId>         <artifactId>lombok</artifactId>         <version>1.18.20</version>         <scope>provided</scope>     </dependency>     ... </dependencies>\n<annotationProcessorPaths> \t<path> \t\t<groupId>org.projectlombok</groupId> \t\t<artifactId>lombok</artifactId> \t\t<version>1.18.16</version> \t</path> </annotationProcessorPaths> \n",
    "reg_date": "2021-10-12T12:06:23.000Z"
  },
  {
    "id": 3398,
    "keyword": null,
    "link": null,
    "title": " lombok maven plugin",
    "description": "<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok --> <dependency>     <groupId>org.projectlombok</groupId>     <artifactId>lombok</artifactId>     <version>1.18.10</version>     <scope>provided</scope> </dependency> \n<dependency> \t<groupId>org.projectlombok</groupId> \t<artifactId>lombok</artifactId> \t<version>1.18.16</version> \t<scope>provided</scope> </dependency>\n<annotationProcessorPaths> \t<path> \t\t<groupId>org.projectlombok</groupId> \t\t<artifactId>lombok</artifactId> \t\t<version>1.18.16</version> \t</path> </annotationProcessorPaths> \n",
    "reg_date": "2021-10-12T12:06:23.000Z"
  },
  {
    "id": 3399,
    "keyword": null,
    "link": null,
    "title": " long input in JAVA",
    "description": "Scanner scr=new Scanner(System.in); long l=scr.nextInt();\n",
    "reg_date": "2021-10-12T12:06:23.000Z"
  },
  {
    "id": 3400,
    "keyword": null,
    "link": null,
    "title": " long max value java",
    "description": "Long.MAX_VALUE == 9_223_372_036_854_775_807L // (9223372036854775807) Long.MIN_VALUE == -9_223_372_036_854_775_808L // (-9223372036854775808)\n/**  * A simple application that looks up the value of Long.MAX_VALUE and outputs it to the user.  **/ public class Test { \tpublic static void main(String[] args) { \t\tSystem.out.println(\"The maximum Long value is: \"+Long.MAX_VALUE); \t} }\n",
    "reg_date": "2021-10-12T12:06:23.000Z"
  },
  {
    "id": 3401,
    "keyword": null,
    "link": null,
    "title": " long to int java 8",
    "description": "import static java.lang.Math.toIntExact;  long foo = 10L; int bar = toIntExact(foo);\n",
    "reg_date": "2021-10-12T12:06:23.000Z"
  },
  {
    "id": 3402,
    "keyword": null,
    "link": null,
    "title": " long vs int java",
    "description": "An int is a 32-bit integer; a long is a 64-bit integer. Which one to use depends on how large the numbers are that you expect to work with.  int and long are primitive types, while Integer and Long are objects.       Primitive types are more efficient, but sometimes you need to use objects; for example, Java's collection classes can only work with objects,  so if you need a list of integers you have to make it a List<Integer>, for example (you can't use int in a List directly).\n",
    "reg_date": "2021-10-12T12:06:23.000Z"
  },
  {
    "id": 3403,
    "keyword": null,
    "link": null,
    "title": " loop hash map",
    "description": "public static void printMap(Map mp) {     Iterator it = mp.entrySet().iterator();     while (it.hasNext()) {         Map.Entry pair = (Map.Entry)it.next();         System.out.println(pair.getKey() + \" = \" + pair.getValue());         it.remove(); // avoids a ConcurrentModificationException     } }\n",
    "reg_date": "2021-10-12T12:06:23.000Z"
  },
  {
    "id": 3404,
    "keyword": null,
    "link": null,
    "title": " loop in java 8",
    "description": "List<String> someList = new ArrayList<String>(); // add \"monkey\", \"donkey\", \"skeleton key\" to someList for (String item : someList) {     System.out.println(item); }\nList<Integer> data = new ArrayList<>();  //Indexed Loop for(int i = 0,size=data.size();i<size;i++){ \tSystem.out.println(data.get(i));   }  //For each loop for(Integer element : data){ \tSystem.out.println(element); }  //Using forEach data.forEach(System.out::println);  //Using Stream data.stream().forEach(System.out::println)    //While loop int i = 0; while(i<data.size()){ \tSystem.out.println(data.get(i++));   }      \nnames.forEach(name -> System.out.println(name));\n",
    "reg_date": "2021-10-12T12:06:23.000Z"
  },
  {
    "id": 3405,
    "keyword": null,
    "link": null,
    "title": " loop java",
    "description": "for(int i = 0; i < 10; i++) {   //do something      //NOTE: the integer name does not need to be i, and the loop   //doesn't need to start at 0. In addition, the 10 can be replaced   //with any value. In this case, the loop will run 10 times.   //Finally, the incrementation of i can be any value, in this case,   //i increments by one. To increment by 2, for example, you would   //use \"i += 2\", or \"i = i+2\" }\n// Starting on 0: for(int i = 0; i < 5; i++) {   System.out.println(i + 1); }  // Starting on 1: for(int i = 1; i <= 5; i++) {   System.out.println(i); }   // Both for loops will iterate 5 times, // printing the numbers 1 - 5.\nint values[] = {1,2,3,4}; for(int i = 0; i < values.length; i++) {  \tSystem.out.println(values[i]);  }\nfor(int i=0; i<10; i++){\t//creates a counting vatiable i set to 0   \t\t\t\t\t\t\t//as long as i is < 10 (as long the condition is true)   \t\t\t\t\t\t\t// i is increased by one every cycle //do some stuff }\n//Main two types of loops: //For loop: for(/*index declaration*/int i=0; /*runs as long as this is true*/    i<=5; /*change number at end of loop*/i++){ doStuff();  } //While loop: //runs as long as the condition is true while(condition){ //do what you want in here doStuff() }\nfor (int i = 0; i < 3; i++) {} \n",
    "reg_date": "2021-10-12T12:06:23.000Z"
  },
  {
    "id": 3406,
    "keyword": null,
    "link": null,
    "title": " loop through array java",
    "description": "For(<DataType of array/List><Temp variable name>   : <Array/List to be iterated>){     System.out.println(); //Any other operation can be done with this temp variable. }\n public class HelloWorld {   public static void main(String[] args) {          // init array     String[] family = new String[] {\"Member1\", \"Member2\", \"Member3\", \"Member4\", \"Member5\"};          // print array      for(String name : family)     {     \tSystem.out.println(name);     }          } } \n\t\tScanner scanner = new Scanner( System.in );         int n = scanner.nextInt();         int[] a=new int[ n + 1 ];         for( int k = 1; k <= n; k ++ ){             a[ k ] = scanner.nextInt();         }         Arrays.sort( a );         for( int k = 1; k <= n; k ++ ){             System.out.print( a[k] + \" \" );         }\nimport java.util.*;  public class HelloWorld {   public static void main(String[] args) {          // you can define the type of list you want to init - String int etc inside <yourType> eg. <String>     List<String> family = new ArrayList();          family.add(\"Member1\");     family.add(\"Member2\");     family.add(\"Member3\");     family.add(\"Member4\");     family.add(\"Member5\");          // print array      for(String name : family)     {     \tSystem.out.println(name);     }          } } \n// Java program to iterate over an array  // using for loop  import java.io.*;  class GFG {         public static void main(String args[]) throws IOException      {          int ar[] = { 1, 2, 3, 4, 5, 6, 7, 8 };          int i, x;             // iterating over an array          for (i = 0; i < ar.length; i++) {                 // accessing each element of array              x = ar[i];              System.out.print(x + \" \");          }      }  } \nclass LoopThroughArray { \tpublic static void main(String[] args) \t{  \t\tint[] myArr = {1, 2, 3, 4};  \t\tfor(int i : myArr){  \t\t\tSystem.out.println(i + \"\\n\")  \t\t}  \t\t/* Output: \t\t1 \t\t2 \t\t3 \t\t4 \t\t*/  \t} }\n",
    "reg_date": "2021-10-12T12:06:23.000Z"
  },
  {
    "id": 3407,
    "keyword": null,
    "link": null,
    "title": " loop through dictionary java",
    "description": "for (Map.Entry<String, Object> entry : objects.entrySet()) {     String key = entry.getKey();     Object val = entry.getValue(); } \n",
    "reg_date": "2021-10-12T12:06:24.000Z"
  },
  {
    "id": 3408,
    "keyword": null,
    "link": null,
    "title": " loop through string in java",
    "description": "String str = \"hello\"; for (char c : str.toCharArray())   //process c\nString s = \"...stuff...\";  for (int i = 0; i < s.length(); i++){     char c = s.charAt(i);             //Process char }\nString s = \"...stuff...\";  for (int i = 0; i < s.length(); i++){     char c = s.charAt(i);             //Process char } \n",
    "reg_date": "2021-10-12T12:06:24.000Z"
  },
  {
    "id": 3409,
    "keyword": null,
    "link": null,
    "title": " loop types",
    "description": "1-For (for each)    2-While Loop  3-Do-While loop\n",
    "reg_date": "2021-10-12T12:06:24.000Z"
  },
  {
    "id": 3410,
    "keyword": null,
    "link": null,
    "title": " loop while in java",
    "description": "//runs as long as the condition is true while(condition){ //do what you want in here doStuff() }\nwhile(i < 5) //while i < 5 stay in the loop {   System.out.print(i);   i++; } /* \tdo someting \tchange variable     call methods     etc... */\n",
    "reg_date": "2021-10-12T12:06:24.000Z"
  },
  {
    "id": 3411,
    "keyword": null,
    "link": null,
    "title": " loops in java",
    "description": "for(int i = 0; i < 10; i++) {   //do something      //NOTE: the integer name does not need to be i, and the loop   //doesn't need to start at 0. In addition, the 10 can be replaced   //with any value. In this case, the loop will run 10 times.   //Finally, the incrementation of i can be any value, in this case,   //i increments by one. To increment by 2, for example, you would   //use \"i += 2\", or \"i = i+2\" }\n// Starting on 0: for(int i = 0; i < 5; i++) {   System.out.println(i + 1); }  // Starting on 1: for(int i = 1; i <= 5; i++) {   System.out.println(i); }   // Both for loops will iterate 5 times, // printing the numbers 1 - 5.\nint values[] = {1,2,3,4}; for(int i = 0; i < values.length; i++) {  \tSystem.out.println(values[i]);  }\nString[] cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"}; for (String i : cars) {   System.out.println(i); }\nfor(int i=0; i<10; i++){\t//creates a counting vatiable i set to 0   \t\t\t\t\t\t\t//as long as i is < 10 (as long the condition is true)   \t\t\t\t\t\t\t// i is increased by one every cycle //do some stuff }\n1-For (for each)    2-While Loop  3-Do-While loop\n",
    "reg_date": "2021-10-12T12:06:24.000Z"
  },
  {
    "id": 3412,
    "keyword": null,
    "link": null,
    "title": " lopp array java",
    "description": "For(<DataType of array/List><Temp variable name>   : <Array/List to be iterated>){     System.out.println(); //Any other operation can be done with this temp variable. }\n",
    "reg_date": "2021-10-12T12:06:24.000Z"
  },
  {
    "id": 3413,
    "keyword": null,
    "link": null,
    "title": " maf-9dfodfhgdok[sdfjyug",
    "description": "if u find this doom\n",
    "reg_date": "2021-10-12T12:06:24.000Z"
  },
  {
    "id": 3414,
    "keyword": null,
    "link": null,
    "title": " main class java",
    "description": "class myClass {     public static void main(String[] args) {         // code     } }\npublic class Jacob {      public static void main(String[] args) { \t\t//code here     } } \npublic class Test {  public static void main(String[] args){  \tSystem.out.println(\"Hello World\"); \t } } \npublic class Program {   public static void main(String[] args){     System.out.println(\"Hello, World!\");   } }\npublic class Test {  static void main(String[] args){  \tSystem.out.println(\"Hello World\"); \t } } \npublic static void main(String[] args) {}\n",
    "reg_date": "2021-10-12T12:06:24.000Z"
  },
  {
    "id": 3415,
    "keyword": null,
    "link": null,
    "title": " main method java",
    "description": "class myClass {     public static void main(String[] args) {         // code     } }\npublic class Jacob {      public static void main(String[] args) { \t\t//code here     } } \npublic class Test {  public static void main(String[] args){  \tSystem.out.println(\"Hello World\"); \t } } \npublic class Program {   public static void main(String[] args){     System.out.println(\"Hello, World!\");   } }\npublic class Test {  static void main(String[] args){  \tSystem.out.println(\"Hello World\"); \t } } \nIt's an execution start point\n",
    "reg_date": "2021-10-12T12:06:24.000Z"
  },
  {
    "id": 3416,
    "keyword": null,
    "link": null,
    "title": " main methode java",
    "description": "class myClass {     public static void main(String[] args) {         // code     } }\npublic class Jacob {      public static void main(String[] args) { \t\t//code here     } } \npublic class Test {  public static void main(String[] args){  \tSystem.out.println(\"Hello World\"); \t } } \npublic class Test {  public static void main(String[] args){  \tSystem.out.println(\"Hello Luggas\"); \t \t} }\nMain() method is starting point of execution for all java applications. public static void main(String[] args) {}  String args[] are array of string objects we need to pass from command line  arguments. Every Java application must have atleast one main method.    public : &ldquo;public&rdquo; is an access specifier which can be used outside the class.  When main method is declared public it means it can be used outside class. static : To call a method we require object. Sometimes it may be required  to call a method without the help of object. Then we declare that method as static. JVM calls the main()  method without creating object by declaring keyword static. void : void return type is used when a method does&rsquo;nt return any value .  main() method does&rsquo;nt return any value, so main() is declared as void. \n// for autocomplete just type main // and a shortcut shoould apear\n",
    "reg_date": "2021-10-12T12:06:25.000Z"
  },
  {
    "id": 3417,
    "keyword": null,
    "link": null,
    "title": " make a post request call using HttpClient in java",
    "description": "HttpClientPostJSON.java  package com.mkyong.java11.jep321;  import java.io.IOException; import java.net.URI; import java.net.http.HttpClient; import java.net.http.HttpRequest; import java.net.http.HttpResponse; import java.time.Duration;  public class HttpClientPostJSON {      private static final HttpClient httpClient = HttpClient.newBuilder()             .version(HttpClient.Version.HTTP_2)             .connectTimeout(Duration.ofSeconds(10))             .build();      public static void main(String[] args) throws IOException, InterruptedException {          // json formatted data         String json = new StringBuilder()                 .append(\"{\")                 .append(\"\\\"name\\\":\\\"mkyong\\\",\")                 .append(\"\\\"notes\\\":\\\"hello\\\"\")                 .append(\"}\").toString();          // add json header         HttpRequest request = HttpRequest.newBuilder()                 .POST(HttpRequest.BodyPublishers.ofString(json))                 .uri(URI.create(\"https://httpbin.org/post\"))                 .setHeader(\"User-Agent\", \"Java 11 HttpClient Bot\") // add request header                 .header(\"Content-Type\", \"application/json\")                 .build();          HttpResponse<String> response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());          // print status code         System.out.println(response.statusCode());          // print response body         System.out.println(response.body());      }  }\npackage com.zetcode;  import com.fasterxml.jackson.databind.ObjectMapper;  import java.io.IOException; import java.net.URI; import java.net.http.HttpClient; import java.net.http.HttpRequest; import java.net.http.HttpResponse; import java.util.HashMap;  public class HttpClientPost {      public static void main(String[] args) throws IOException, InterruptedException {          var values = new HashMap<String, String>() {{             put(\"name\", \"John Doe\");             put (\"occupation\", \"gardener\");         }};          var objectMapper = new ObjectMapper();         String requestBody = objectMapper                 .writeValueAsString(values);          HttpClient client = HttpClient.newHttpClient();         HttpRequest request = HttpRequest.newBuilder()                 .uri(URI.create(\"https://httpbin.org/post\"))                 .POST(HttpRequest.BodyPublishers.ofString(requestBody))                 .build();          HttpResponse<String> response = client.send(request,                 HttpResponse.BodyHandlers.ofString());          System.out.println(response.body());     } } \n",
    "reg_date": "2021-10-12T12:06:25.000Z"
  },
  {
    "id": 3418,
    "keyword": null,
    "link": null,
    "title": " make an array java",
    "description": "int[] intArray = new int[]{ 1,2,3,4,5,6,7,8,9,10 }\n",
    "reg_date": "2021-10-12T12:06:25.000Z"
  },
  {
    "id": 3419,
    "keyword": null,
    "link": null,
    "title": " make an object in java",
    "description": "Car mycar = new Car();\npublic class Puppy {    public Puppy(String name) {       // This constructor has one parameter, name.       System.out.println(\"Passed Name is :\" + name );    }     public static void main(String []args) {       // Following statement would create an object myPuppy       Puppy myPuppy = new Puppy( \"tommy\" );    } }\n",
    "reg_date": "2021-10-12T12:06:25.000Z"
  },
  {
    "id": 3420,
    "keyword": null,
    "link": null,
    "title": " make javafx open full screen",
    "description": "stage.setMaximized(boolean)\n//for max screen size stage.setMaximized(true);  //to prevent max screen size stage.setMaximized(false);\n",
    "reg_date": "2021-10-12T12:06:25.000Z"
  },
  {
    "id": 3421,
    "keyword": null,
    "link": null,
    "title": " make recycler view non scrollable",
    "description": "//Override your LayoutManager's canScrollVertically::boolean linearLayoutManager = new LinearLayoutManager(context) {  @Override  public boolean canScrollVertically() {   return false;  } };\n",
    "reg_date": "2021-10-12T12:06:25.000Z"
  },
  {
    "id": 3422,
    "keyword": null,
    "link": null,
    "title": " making android activity fullscreen android studio",
    "description": "res -> values -> styles.xml <resources> \t<style name ...>     \t.     \t.     \t.     \t<item name=\"android:windowFullscreen\">true</item>     </style> </resources>\n",
    "reg_date": "2021-10-12T12:06:25.000Z"
  },
  {
    "id": 3423,
    "keyword": null,
    "link": null,
    "title": " making list of prime numbers java",
    "description": "Now let&rsquo;s see print first 10 prime numbers in java.  public class FirstTenPrimeNumbers {    public static void main(String[] args)     {       int count = 0, number = 0, a = 1, b = 1;         while(number < 10)         {            b = 1;            count = 0;            while(b <= a)            {               if(a%b == 0)                   count++;               b++;          }            if(count == 2)            {               System.out.printf(\"%d \", a);               number++;            }            a++;         }    } }\npublic class Prime {      public static void main(String[] args) {          int num = 29;         boolean flag = false;         for(int i = 2; i <= num/2; ++i)         {             // condition for nonprime number             if(num % i == 0)             {                 flag = true;                 break;             }         }          if (!flag)             System.out.println(num + \" is a prime number.\");         else             System.out.println(num + \" is not a prime number.\");     } }\n",
    "reg_date": "2021-10-12T12:06:25.000Z"
  },
  {
    "id": 3424,
    "keyword": null,
    "link": null,
    "title": " map.keyset in java",
    "description": "Method returns a set having the keys of the hash map.\n",
    "reg_date": "2021-10-12T12:06:25.000Z"
  },
  {
    "id": 3425,
    "keyword": null,
    "link": null,
    "title": " map in java",
    "description": "Map<String, String> map = new HashMap<>();  for(Entry<String, String> entry:map.entrySet()) {   System.out.println(\"key: \"+entry.getKey()+\" value: \"+entry.getValue()); }\n MAP : is a (key-value format)        and keys are always unique,        and value can be duplicated.  - HashTable don't have null key, sychronized(thread-safe) - LinkedHashMap can have null key, keeps order - HasHMap can have null key, order is not guaranteed - TreeMap doesn't have null key and keys are sorted\nimport java.util.HashMap; import java.util.Iterator; import java.util.LinkedHashMap; import java.util.Map; import java.util.Map.Entry; import java.util.Set;   public class Main {    public static void main(String[] args) {        //La fameuse syntaxe en diamant de Java 7       Map<Integer, String> hm = new HashMap<>();       hm.put(10, \"1\");       hm.put(20, \"2\");       hm.put(30, \"3\");       hm.put(40, \"4\");       hm.put(50, \"5\");       //Ceci va &eacute;craser la valeur 5       hm.put(50, \"6\");              System.out.println(\"Parcours de l'objet HashMap : \");       Set<Entry<Integer, String>> setHm = hm.entrySet();       Iterator<Entry<Integer, String>> it = setHm.iterator();       while(it.hasNext()){          Entry<Integer, String> e = it.next();          System.out.println(e.getKey() + \" : \" + e.getValue());       }              System.out.println(\"Valeur pour la cl&eacute; 8 : \" + hm.get(8));              Map<Integer, String> lhm = new LinkedHashMap<>();       lhm.put(10, \"1\");       lhm.put(20, \"2\");       lhm.put(30, \"3\");       lhm.put(40, \"4\");       lhm.put(50, \"5\");              System.out.println(\"Parcours de l'objet LinkedHashMap : \");             Set<Entry<Integer, String>> setLhm = lhm.entrySet();       Iterator<Entry<Integer, String>> it2 = setLhm.iterator();       while(it2.hasNext()){          Entry<Integer, String> e = it2.next();          System.out.println(e.getKey() + \" : \" + e.getValue());       }    } } \nMap< String,Integer> hm =                           new HashMap< String,Integer>();         hm.put(\"a\", new Integer(100));         hm.put(\"b\", new Integer(200));         hm.put(\"c\", new Integer(300));         hm.put(\"d\", new Integer(400)); \n",
    "reg_date": "2021-10-12T12:06:25.000Z"
  },
  {
    "id": 3426,
    "keyword": null,
    "link": null,
    "title": " map initialization java",
    "description": "Map<String, String> myMap = new HashMap<String, String>() {{         put(\"a\", \"b\");         put(\"c\", \"d\");     }};\nMap<String, String> emptyMap = Map.of(); Map<String, String> singletonMap = Map.of(\"key1\", \"value\"); Map<String, String> map = Map.of(\"key1\",\"value1\", \"key2\", \"value2\"); \npublic static Map<String, String> articleMapOne; static {     articleMapOne = new HashMap<>();     articleMapOne.put(\"ar01\", \"Intro to Map\");     articleMapOne.put(\"ar02\", \"Some article\"); }\n",
    "reg_date": "2021-10-12T12:06:26.000Z"
  },
  {
    "id": 3427,
    "keyword": null,
    "link": null,
    "title": " map interation in java",
    "description": "Map map = new HashMap(); Iterator entries = map.entrySet().iterator(); while (entries.hasNext()) {     Map.Entry entry = (Map.Entry) entries.next();     Integer key = (Integer)entry.getKey();     Integer value = (Integer)entry.getValue();     System.out.println(\"Key = \" + key + \", Value = \" + value); } \nMap<Integer, Integer> map = new HashMap<Integer, Integer>();  // Iterating over keys only for (Integer key : map.keySet()) {     System.out.println(\"Key = \" + key); }  // Iterating over values only for (Integer value : map.values()) {     System.out.println(\"Value = \" + value); } \nMap<Integer, Integer> map = new HashMap<Integer, Integer>(); for (Map.Entry<Integer, Integer> entry : map.entrySet()) {     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); } \n",
    "reg_date": "2021-10-12T12:06:26.000Z"
  },
  {
    "id": 3428,
    "keyword": null,
    "link": null,
    "title": " map java",
    "description": "    Map<String, String> map = new HashMap<>();      map.put(\"1\", \"Foo\");     //search for the entry with key==1, since present, returns foo     System.out.println(map.getOrDefault(\"1\", \"dumnba\"));     //search for the entry with key==2, since not present, returns dumnba     System.out.println(map.getOrDefault(\"2\", \"dumnba\"));\nMap <Integer, Point2D.Double> hm = new HashMap<Integer, Point2D>(); hm.put(1, new Point2D.Double(50, 50));\n MAP : is a (key-value format)        and keys are always unique,        and value can be duplicated.  - HashTable don't have null key, sychronized(thread-safe) - LinkedHashMap can have null key, keeps order - HasHMap can have null key, order is not guaranteed - TreeMap doesn't have null key and keys are sorted\n//Hash map creation Map< String,Integer> hm =                           new HashMap< String,Integer>();  //inserting elements into hashmap        hm.put(\"a\", new Integer(100));         hm.put(\"b\", new Integer(200));         hm.put(\"c\", new Integer(300));         hm.put(\"d\", new Integer(400)); \nimport java.util.HashMap; import java.util.Iterator; import java.util.LinkedHashMap; import java.util.Map; import java.util.Map.Entry; import java.util.Set;   public class Main {    public static void main(String[] args) {        //La fameuse syntaxe en diamant de Java 7       Map<Integer, String> hm = new HashMap<>();       hm.put(10, \"1\");       hm.put(20, \"2\");       hm.put(30, \"3\");       hm.put(40, \"4\");       hm.put(50, \"5\");       //Ceci va &eacute;craser la valeur 5       hm.put(50, \"6\");              System.out.println(\"Parcours de l'objet HashMap : \");       Set<Entry<Integer, String>> setHm = hm.entrySet();       Iterator<Entry<Integer, String>> it = setHm.iterator();       while(it.hasNext()){          Entry<Integer, String> e = it.next();          System.out.println(e.getKey() + \" : \" + e.getValue());       }              System.out.println(\"Valeur pour la cl&eacute; 8 : \" + hm.get(8));              Map<Integer, String> lhm = new LinkedHashMap<>();       lhm.put(10, \"1\");       lhm.put(20, \"2\");       lhm.put(30, \"3\");       lhm.put(40, \"4\");       lhm.put(50, \"5\");              System.out.println(\"Parcours de l'objet LinkedHashMap : \");             Set<Entry<Integer, String>> setLhm = lhm.entrySet();       Iterator<Entry<Integer, String>> it2 = setLhm.iterator();       while(it2.hasNext()){          Entry<Integer, String> e = it2.next();          System.out.println(e.getKey() + \" : \" + e.getValue());       }    } } \nMap< String,Integer> hm =                           new HashMap< String,Integer>();         hm.put(\"a\", new Integer(100));         hm.put(\"b\", new Integer(200));         hm.put(\"c\", new Integer(300));         hm.put(\"d\", new Integer(400)); \n",
    "reg_date": "2021-10-12T12:06:26.000Z"
  },
  {
    "id": 3429,
    "keyword": null,
    "link": null,
    "title": " map streams java",
    "description": "import java.util.Arrays; import java.util.List; import java.util.stream.Collectors;   public class Main  {     public static void main(String[] args)      {         List<String> listOfStrings = Arrays.asList(\"1\", \"2\", \"3\", \"4\", \"5\");                   List<Integer> listOfIntegers = listOfStrings.stream()                         .map(Integer::valueOf)                         .collect(Collectors.toList());                   System.out.println(listOfIntegers);     } } \n",
    "reg_date": "2021-10-12T12:06:26.000Z"
  },
  {
    "id": 3430,
    "keyword": null,
    "link": null,
    "title": " map string list string in java",
    "description": "    Map<String, List<String>> myMaps = new HashMap<String, List<String>>();     for (DataObject item : myList) {         if (!myMaps.containsKey(item.getKey())) {             myMaps.put(item.getKey(), new ArrayList<String>());         }         myMaps.get(item.getKey()).add(item.getValue());     } \n    Map<String, List<String>> myMaps = new HashMap<String, List<String>>();     for (DataObject item : myList) {         if (!myMaps.containsKey(item.getKey())) {             myMaps.put(item.getKey(), new ArrayList<String>());         }         myMaps.get(item.getKey()).add(item.getValue());     }\n",
    "reg_date": "2021-10-12T12:06:26.000Z"
  },
  {
    "id": 3431,
    "keyword": null,
    "link": null,
    "title": " map string string to java object",
    "description": "final ObjectMapper mapper = new ObjectMapper(); // jackson's objectmapper final MyPojo pojo = mapper.convertValue(map, MyPojo.class);\n",
    "reg_date": "2021-10-12T12:06:26.000Z"
  },
  {
    "id": 3432,
    "keyword": null,
    "link": null,
    "title": " margin recyclerview android",
    "description": "class MarginItemDecoration(private val spaceHeight: Int) : RecyclerView.ItemDecoration() {    override fun getItemOffsets(outRect: Rect, view: View,         parent: RecyclerView, state: RecyclerView.State) {        with(outRect) {            if (parent.getChildAdapterPosition(view) == 0) {                top = spaceHeight            }            left =  spaceHeight            right = spaceHeight            bottom = spaceHeight        }    }}\n",
    "reg_date": "2021-10-12T12:06:26.000Z"
  },
  {
    "id": 3433,
    "keyword": null,
    "link": null,
    "title": " marker annotations in java",
    "description": "/*The only purpose is to mark a declaration. These annotations contain no members and do not consist any data.  Thus, its presence as an annotation is sufficient.  Since, marker interface contains no members, simply determining whether it is present or absent is sufficient.   @Override is an example of Marker Annotation.  Example: - */  @TestAnnotation()\n",
    "reg_date": "2021-10-12T12:06:26.000Z"
  },
  {
    "id": 3434,
    "keyword": null,
    "link": null,
    "title": " material design android dependency androidx",
    "description": "dependencies {     // ...     implementation 'com.google.android.material:material:<version>'     // ...   }\n",
    "reg_date": "2021-10-12T12:06:26.000Z"
  },
  {
    "id": 3435,
    "keyword": null,
    "link": null,
    "title": " math.random",
    "description": "// Between any two numbers Math.floor(Math.random() * (max - min + 1)) + min;  // Between 0 and max Math.floor(Math.random() * (max + 1));  // Between 1 and max Math.floor(Math.random() * max) + 1;\n//To genereate a number between 0-1 Math.random(); //To generate a number that is a whole number rounded down Math.floor(Math.random()) /*To generate a number that is a whole number rounded down between 1 and 10 */ Math.floor(Math.random() * 10) + 1 //the + 1 makes it so its not 0.\nfunction getRandomInt(min, max) {   return Math.floor(Math.random() * (max - min)) + min; }\nMath.random()  // will return a number between 0 and 1, you can then time it up to get larger numbers. //When using bigger numbers remember to use Math.floor if you want it to be a integer Math.floor(Math.random() * 10) // Will return a integer between 0 and 9 Math.floor(Math.random() * 11) // Will return a integer between 0 and 10  // You can make functions aswell  function randomNum(min, max) { \treturn Math.floor(Math.random() * (max - min)) + min; // You can remove the Math.floor if you don't want it to be an integer }\nfunction randomNumber(min, max) {   return Math.floor(Math.random() * (max - min)) + min; }\nint random = (int) (Math.random()*(max-min+1)+min);\n",
    "reg_date": "2021-10-12T12:06:26.000Z"
  },
  {
    "id": 3436,
    "keyword": null,
    "link": null,
    "title": " math.random every number no range",
    "description": "int jj = reader.nextInt();\nfuntion getRandomNumber(min, max) { min = Math.ceil(min); max = Math.floor(max); return Math.floor(Math.random() * (max-min) ) }\n",
    "reg_date": "2021-10-12T12:06:27.000Z"
  },
  {
    "id": 3437,
    "keyword": null,
    "link": null,
    "title": " math.random java",
    "description": "import java.util.Random;  Random rand = new Random();  // Obtain a number between [0 - 49]. int n = rand.nextInt(50);  // Add 1 to the result to get a number from the required range // (i.e., [1 - 50]). n += 1;\nint rand = (int)(Math.random() * range) + min; \nimport java.util.Random(); Random <name> = new Random(); <variable> = <name>.nextInt(<excuslive top limit>);\n// int rand = (int)(Math.random() * range) + min;  // Java program to demonstrate Math.random() working  // of java.lang.Math.random() method  import java.lang.Math;     class Gfg2 {         // driver code      public static void main(String args[])      {          // define the range          int max = 10;          int min = 1;          int range = max - min + 1;             // generate random numbers within 1 to 10          for (int i = 0; i < 10; i++) {              int rand = (int)(Math.random() * range) + min;                 // Output is different everytime this code is executed              System.out.println(rand);          }      }  } \n// Math.random() returns a random number between 0.0-0.99. double rnd = Math.random();  // rnd1 is an integer in the range 0-9 (including 9). int rnd1 = (int)(Math.random()*10);  // rnd2 is in the range 1-10 (including 10). The parentheses are necessary! int rnd2 = (int)(Math.random()*10) + 1;  // rnd3 is in the range 5-10 (including 10). The range is 10-5+1 = 6. int rnd3 = (int)(Math.random()*6) + 5;  // rnd4 is in the range -10 up to 9 (including 9). The range is doubled (9 - -10 + 1 = 20) and the minimum is -10. int rnd4 = (int)(Math.random()*20) - 10; \n(int)(Math.random() * max) + min; inclusive\n",
    "reg_date": "2021-10-12T12:06:27.000Z"
  },
  {
    "id": 3438,
    "keyword": null,
    "link": null,
    "title": " math.random java between 1 and 10",
    "description": "// Genereates a number between 0 to 1; Math.random();  // to gerate a randome rounded number between 1 to 10; var theRandomNumber = Math.floor(Math.random() * 10) + 1;\nimport java.util.Random;  Random rand = new Random(); int random_integer = rand.nextInt(upperbound-lowerbound) + lowerbound;\n((int) (Math.random()*(maximum - minimum))) + minimum;\nint rand = ThreadLocalRandom.current().nextInt(x,y);\n",
    "reg_date": "2021-10-12T12:06:27.000Z"
  },
  {
    "id": 3439,
    "keyword": null,
    "link": null,
    "title": " math.sin java",
    "description": "double pi = Math.PI; double ans = Math.sin(pi/2);  //Input is in radians ans == 1;\n",
    "reg_date": "2021-10-12T12:06:27.000Z"
  },
  {
    "id": 3440,
    "keyword": null,
    "link": null,
    "title": " math class in java",
    "description": "double random = Math.random(); // chooses random number between 0 and 1 ( * 100 to make it in 100)\ndouble roundedDown = Math.round(23.445); double roundedUp   = Math.round(23.545); // rounds up and down from float or double\ndouble floor = Math.floor(7.343);  // floor = 7.0 //rounds to the value down to the nearest integer value (returned as double)\nint max = Math.max(10, 20); //returns largest of two value in parameter\n",
    "reg_date": "2021-10-12T12:06:27.000Z"
  },
  {
    "id": 3441,
    "keyword": null,
    "link": null,
    "title": " math maximum java",
    "description": "Math.max(a, b);  // a & b = int, double, float, or long\n",
    "reg_date": "2021-10-12T12:06:27.000Z"
  },
  {
    "id": 3442,
    "keyword": null,
    "link": null,
    "title": " math minimum java",
    "description": "Math.min(a, b);  // a & b = int, double, long, or float\n",
    "reg_date": "2021-10-12T12:06:27.000Z"
  },
  {
    "id": 3443,
    "keyword": null,
    "link": null,
    "title": " math round down java",
    "description": "Math.floor(num);  \n",
    "reg_date": "2021-10-12T12:06:27.000Z"
  },
  {
    "id": 3444,
    "keyword": null,
    "link": null,
    "title": " matrix multiplication in java",
    "description": "public class Matrix {   private double[][] multiply(double[][] matrixOne, double[][] matrixTwo) {             assert matrixOne[0].length == matrixTwo.length: \"width of matrix one must be equal to height of matrix two\";             double[][] product = new double[matrixOne.length][matrixTwo[0].length];     \t\t//fills output matrix with 0's             for(short l = 0; l<matrixOne.length; l++) {                 for(short m = 0; m<matrixTwo[0].length; m++) {                     product[l][m] = 0;                 }             }     \t\t//takes the dot product of the rows and columns and adds them to output matrix             for(short i = 0; i<matrixOne.length; i++) {                 for(short j = 0; j<matrixTwo[0].length; j++) {                     for(short k = 0; k<matrixOne[0].length; k++) {                         product[i][j] += matrixOne[i][k] * matrixTwo[k][j];                     }                 }             }             return product;         } }\n    public class MatrixMultiplicationExample{       public static void main(String args[]){       //creating two matrices         int a[][]={{1,1,1},{2,2,2},{3,3,3}};         int b[][]={{1,1,1},{2,2,2},{3,3,3}};                  //creating another matrix to store the multiplication of two matrices         int c[][]=new int[3][3];  //3 rows and 3 columns                //multiplying and printing multiplication of 2 matrices         for(int i=0;i<3;i++){         for(int j=0;j<3;j++){         c[i][j]=0;           for(int k=0;k<3;k++)           {           c[i][j]+=a[i][k]*b[k][j];           }//end of k loop       System.out.print(c[i][j]+\" \");  //printing matrix element       }//end of j loop       System.out.println();//new line         }         }}  \n// matrix multiplication java public class MatrixMultiplicationJavaDemo  {    public static int[][] multiplyMatrix(int[][] matrix1, int[][] matrix2, int row, int column, int col)    {       int[][] multiply = new int[row][col];       for(int a = 0; a < row; a++)        {          for(int b = 0; b < col; b++)           {             for(int k = 0; k < column; k++)              {                multiply[a][b] += matrix1[a][k] * matrix2[k][b];             }          }       }       return multiply;    }    public static void printMatrix(int[][] multiply)     {       System.out.println(\"Multiplication of two matrices: \");       for(int[] row : multiply)        {          for(int column : row)           {             System.out.print(column + \"    \");          }          System.out.println();       }    }    public static void main(String[] args)     {       int row = 2, col = 3;       int column = 2;       int[][] matrixOne = {{1, 2, 3}, {4, 5, 6}};       int[][] matrixTwo = {{7, 8}, {9, 1}, {2, 3}};       int[][] product = multiplyMatrix(matrixOne, matrixTwo, row, col, column);       printMatrix(product);    } }\n",
    "reg_date": "2021-10-12T12:06:27.000Z"
  },
  {
    "id": 3445,
    "keyword": null,
    "link": null,
    "title": " matrix multiplication javascrpt",
    "description": "function multiplyMatrix(matrixA, matrixB) {     var result = new Array();//declare an array         //var numColsRows=$(\"#matrixRC\").val();     numColsRows=2;          //iterating through first matrix rows     for (var i = 0; i < numColsRows; i++)      {         //iterating through second matrix columns         for (var j = 0; j < numColsRows; j++)          {              var matrixRow = new Array();//declare an array             var rrr = new Array();             var resu = new Array();             //calculating sum of pairwise products             for (var k = 0; k < numColsRows; k++)              {                 rrr.push(parseInt(matrixA[i][k])*parseInt(matrixB[k][j]));             }//for 3             resu.push(parseInt(rrr[i])+parseInt(rrr[i+1]));              result.push(resu);             //result.push(matrixRow);         }//for 2     }//for 1     return result; }// function multiplyMatrix\n",
    "reg_date": "2021-10-12T12:06:27.000Z"
  },
  {
    "id": 3446,
    "keyword": null,
    "link": null,
    "title": " maven compiler plugin for java 13",
    "description": "<project> ...  <properties>     <maven.compiler.source>1.8</maven.compiler.source>     <maven.compiler.target>1.8</maven.compiler.target>   </properties> ... </project>\n<plugin> \t<groupId>org.apache.maven.plugins</groupId> \t<artifactId>maven-compiler-plugin</artifactId> \t<version>3.8.0</version> \t<configuration> \t\t<release>13</release> \t\t<compilerArgs> \t\t\t--enable-preview \t\t</compilerArgs> \t</configuration> </plugin>\n<properties>    <maven.compiler.target>1.8</maven.compiler.target>    <maven.compiler.source>1.8</maven.compiler.source></properties>\n",
    "reg_date": "2021-10-12T12:06:28.000Z"
  },
  {
    "id": 3447,
    "keyword": null,
    "link": null,
    "title": " maven import jars in local repository",
    "description": "mvn install:install-file  -Dfile=<path-to-file>  -DgroupId=<group-id>  -DartifactId=<artifact-id>  -Dversion=<version>  -Dpackaging=<packaging>  -DgeneratePom=true Where: <path-to-file>  the path to the file to load       <group-id>      the group that the file should be registered under       <artifact-id>   the artifact name for the file       <version>       the version of the file       <packaging>     the packaging of the file e.g. jar     \n",
    "reg_date": "2021-10-12T12:06:28.000Z"
  },
  {
    "id": 3448,
    "keyword": null,
    "link": null,
    "title": " maven in 5 minutes",
    "description": "my-app|-- pom.xml`-- src    |-- main    |   `-- java    |       `-- com    |           `-- mycompany    |               `-- app    |                   `-- App.java    `-- test        `-- java            `-- com                `-- mycompany                    `-- app                        `-- AppTest.java\n",
    "reg_date": "2021-10-12T12:06:28.000Z"
  },
  {
    "id": 3449,
    "keyword": null,
    "link": null,
    "title": " maven pom java 11",
    "description": "<plugin>     <groupId>org.apache.maven.plugins</groupId>     <artifactId>maven-compiler-plugin</artifactId>     <version>3.8.0</version>     <configuration>         <release>11</release>     </configuration> </plugin> \n",
    "reg_date": "2021-10-12T12:06:28.000Z"
  },
  {
    "id": 3450,
    "keyword": null,
    "link": null,
    "title": " maven source option 5 is no longer supported use 7 or later",
    "description": "    <plugin>         <groupId>org.apache.maven.plugins</groupId>         <artifactId>maven-compiler-plugin</artifactId>         <configuration>             <source>1.7</source>             <target>1.7</target>         </configuration>     </plugin> \n",
    "reg_date": "2021-10-12T12:06:28.000Z"
  },
  {
    "id": 3451,
    "keyword": null,
    "link": null,
    "title": " maven test class",
    "description": "mvn install -Dmaven.test.skip=true  # or  mvn install -DskipTests  # If -Dmaven.test.skip=true (or simply -Dmaven.test.skip) is specified,  # the test-jars aren't built, and any module that relies on them will  # fail its build.  # In contrast, when you use -DskipTests, Maven does not run the tests,  # but it does compile them and build the test-jar, making it available  # for the subsequent modules.\nprivate final ByteArrayOutputStream outContent = new ByteArrayOutputStream(); private final ByteArrayOutputStream errContent = new ByteArrayOutputStream(); private final PrintStream originalOut = System.out; private final PrintStream originalErr = System.err;  @Before public void setUpStreams() {     System.setOut(new PrintStream(outContent));     System.setErr(new PrintStream(errContent)); }  @After public void restoreStreams() {     System.setOut(originalOut);     System.setErr(originalErr); }  sample test cases:  @Test public void out() {     System.out.print(\"hello\");     assertEquals(\"hello\", outContent.toString()); }  @Test public void err() {     System.err.print(\"hello again\");     assertEquals(\"hello again\", errContent.toString()); }\n# Run all the unit test classes. $ mvn test  # Run a single test class. $ mvn -Dtest=TestApp1 test  # Run multiple test classes. $ mvn -Dtest=TestApp1,TestApp2 test  # Run a single test method from a test class. $ mvn -Dtest=TestApp1#methodname test  # Run all test methods that match pattern 'testHello*' from a test class. $ mvn -Dtest=TestApp1#testHello* test  # Run all test methods match pattern 'testHello*' and 'testMagic*' from a test class. $ mvn -Dtest=TestApp1#testHello*+testMagic* test\n",
    "reg_date": "2021-10-12T12:06:28.000Z"
  },
  {
    "id": 3452,
    "keyword": null,
    "link": null,
    "title": " max and min array number in java",
    "description": " // Initializing array of integers          Integer[] num = { 2, 4, 7, 5, 9 };  // using Collections.min() to find minimum element          // using only 1 line.          int min = Collections.min(Arrays.asList(num));             // using Collections.max() to find maximum element          // using only 1 line.          int max = Collections.max(Arrays.asList(num)); \npublic static double max(double[] arr) {   double result = arr[0];   for (int i = 1; i < arr.length; ++i) {     if (result < arr[i]) result = arr[i];   }   return result; }\npublic static String max(String[] arr) {   String result = arr[0];   for (int i = 1; i < arr.length; ++i) {     if (result.compareTo(arr[i]) < 0) result = arr[i];   }   return result; }\npublic static double max(double[] arr) {   double result = Double.NEGATIVE_INFINITY;   for (int i = 0; i < arr.length; ++i) {     if (result < arr[i]) result = arr[i];   }   return result; }\nInteger[] num = { 2, 4, 7, 5, 9 };         // using Collections.min() to find minimum element         // using only 1 line.         int min1 = Collections.min(Arrays.asList(num));          // using Collections.max() to find maximum element         // using only 1 line.         int max1 = Collections.max(Arrays.asList(num));          System.out.println(min1); // 2          System.out.println(max1); // 9\nimport java.util.Random;  public class Main {  public static void main(String[] args) {    int a[] = new int [100];    Random rnd = new Random ();      for (int i = 0; i< a.length; i++) {         a[i] = rnd.nextInt(99-0)+0;         System.out.println(a[i]);     }      int max = 0;                for (int i = 0; i < a.length; i++) {         a[i] = max;           for (int j = i+1; j<a.length; j++) {             if (a[j] > max) {                max = a[j];             }          }     }      System.out.println(\"Max element: \" + max); } }\n",
    "reg_date": "2021-10-12T12:06:28.000Z"
  },
  {
    "id": 3453,
    "keyword": null,
    "link": null,
    "title": " max heap java",
    "description": "import java.util.PriorityQueue;  public class MaxHeapWithPriorityQueue {      public static void main(String args[]) {         // create priority queue         PriorityQueue<Integer> prq = new PriorityQueue<>(Comparator.reverseOrder());          // insert values in the queue         prq.add(6);         prq.add(9);         prq.add(5);         prq.add(64);         prq.add(6);          //print values         while (!prq.isEmpty()) {             System.out.print(prq.poll()+\" \");         }     }  }\n// min heap: PriorityQueue implementation from the JDK PriorityQueue<Integer> prq = new PriorityQueue<>();  // max heap: PriorityQueue implementation WITH CUSTOM COMPARATOR PASSED // Method 1: Using Collections (recommended) PriorityQueue<Integer> prq = new PriorityQueue<>(Collections.reverseOrder()); // Method 2: Using Lambda function (may cause Integer Overflow) PriorityQueue<Integer> prq = new PriorityQueue<>((a, b) -> b - a);\n",
    "reg_date": "2021-10-12T12:06:28.000Z"
  },
  {
    "id": 3454,
    "keyword": null,
    "link": null,
    "title": " max in array java",
    "description": " // Initializing array of integers          Integer[] num = { 2, 4, 7, 5, 9 };  // using Collections.min() to find minimum element          // using only 1 line.          int min = Collections.min(Arrays.asList(num));             // using Collections.max() to find maximum element          // using only 1 line.          int max = Collections.max(Arrays.asList(num)); \npublic static double max(double[] arr) {   double result = arr[0];   for (int i = 1; i < arr.length; ++i) {     if (result < arr[i]) result = arr[i];   }   return result; }\npublic static String max(String[] arr) {   String result = arr[0];   for (int i = 1; i < arr.length; ++i) {     if (result.compareTo(arr[i]) < 0) result = arr[i];   }   return result; }\npublic static double arrayMax(double[] arr) {     double max = Double.NEGATIVE_INFINITY;      for(double cur: arr)         max = Math.max(max, cur);      return max; }\npublic static double max(double[] arr) {   double result = Double.NEGATIVE_INFINITY;   for (int i = 0; i < arr.length; ++i) {     if (result < arr[i]) result = arr[i];   }   return result; }\nInteger[] num = { 2, 4, 7, 5, 9 };         // using Collections.min() to find minimum element         // using only 1 line.         int min1 = Collections.min(Arrays.asList(num));          // using Collections.max() to find maximum element         // using only 1 line.         int max1 = Collections.max(Arrays.asList(num));          System.out.println(min1); // 2          System.out.println(max1); // 9\n",
    "reg_date": "2021-10-12T12:06:28.000Z"
  },
  {
    "id": 3455,
    "keyword": null,
    "link": null,
    "title": " max int in java",
    "description": "Integer.MAX_VALUE //== 2147483647, once you increment past that, you   \t\t\t\t  //\"wrap around\" to Integer.MIN_VALUE\n//Integer.MAX_VALUE (MAX_VALUE Method In Integer Wrapper Class) \t-2,147,483,648 //(Value) In Java, the integer(long) is also 32 bits, but ranges from  -2,147,483,648 to +2,147,483,647.\nint a = Integer.MAX_VALUE; long a = Long.MAX_VALUE;\npublic class Test {    public static void main(String[] args)    {      System.out.println(Integer.MIN_VALUE);      System.out.println(Integer.MAX_VALUE);      System.out.println(Integer.MIN_VALUE - 1);      System.out.println(Integer.MAX_VALUE + 1);    } }\nInteger.MAX_VALUE\n",
    "reg_date": "2021-10-12T12:06:28.000Z"
  },
  {
    "id": 3456,
    "keyword": null,
    "link": null,
    "title": " max long",
    "description": "long MaxLong = 9223372036854775807; // 9,223,372,036,854,775,807\nint min = INT_MIN;\n",
    "reg_date": "2021-10-12T12:06:28.000Z"
  },
  {
    "id": 3457,
    "keyword": null,
    "link": null,
    "title": " max value in java",
    "description": "public class Test {      public static void main(String args[]) {       System.out.println(Math.max(12.123, 12.456));             System.out.println(Math.max(23.12, 23.0));      } }\n (stores the maximum possible value for any integer variable)     public static void main(String[] arg)     {   \t\tSystem.out.println(\"Integer.MAX_VALUE = \"                            + Integer.MAX_VALUE);///output :-2147483647     } } Any integer variable cannot store any value beyond this limit\n",
    "reg_date": "2021-10-12T12:06:29.000Z"
  },
  {
    "id": 3458,
    "keyword": null,
    "link": null,
    "title": " max value of double java",
    "description": "System.out.println(Double.MAX_VALUE);//(2-2^52)^21023, maximum value < Infinity System.out.println(Double.POSITIVE_INFINITY);//Infinity\n",
    "reg_date": "2021-10-12T12:06:29.000Z"
  },
  {
    "id": 3459,
    "keyword": null,
    "link": null,
    "title": " maximum arrays size in java",
    "description": "int arr[] = new int[N];// Maximum Value Of N:2,147,483,647 (max int size)\n",
    "reg_date": "2021-10-12T12:06:29.000Z"
  },
  {
    "id": 3460,
    "keyword": null,
    "link": null,
    "title": " maximum difference in array java",
    "description": "public class maxDifference {  public static void main(String[] args) {    int[] a = {1,4,8,15,17};    int diff = 0;    for(int i = 0; i < a.length-1 ; i++){       if(a[i+1] - a[i] > diff)    {        diff = a[i+1] - a[i];                }               }    System.out.println(diff);\npublic class maxDifference {  public static void main(String[] args) {    int[] a = {1,4,8,15,17};    int diff = 0;    for(int i = 0; i < a.length-1 ; i++){       if(a[i+1] - a[i] > diff)    {        diff = a[i+1] - a[i];                }               }    System.out.println(diff);  \n",
    "reg_date": "2021-10-12T12:06:29.000Z"
  },
  {
    "id": 3461,
    "keyword": null,
    "link": null,
    "title": " maximum number from Array",
    "description": "Array -- Find Maximum Write a method that can find the maximum number from an int Array Solution 1: public static void main(String[] args) {     int[] arr = new int[]{2,4,6,8,20};     System.out.println(maxValue(arr));  public static int maxValue( int[]  n ) { int max = Integer.MIN_VALUE; for(int each: n) if(each > max) max = each;   return max; }   Solution 2: public static int maxValue( int[]  n ) { Arrays.sort( n ); return  n [ n.lenth-1 ]; } \nfunction getMaxOfArray(numArray) {     return Math.max.apply(null, numArray); }\n---without sort method--- public static int maxValue( int[]  n ) {  int max = Integer.MIN_VALUE;  for(int each: n)  if(each > max)  max = each;    return max;    ---with sort method--- public static int maxValue( int[]  n ) {  Arrays.sort( n );  return  n [ n.lenth-1 ];  }\nvar arr = [1, 2, 3]; var max = Math.max(...arr); \n",
    "reg_date": "2021-10-12T12:06:29.000Z"
  },
  {
    "id": 3462,
    "keyword": null,
    "link": null,
    "title": " menghitung luas segitiga",
    "description": "int luas = 1/2 * ALAS * Tinggi;\n",
    "reg_date": "2021-10-12T12:06:29.000Z"
  },
  {
    "id": 3463,
    "keyword": null,
    "link": null,
    "title": " menu android",
    "description": "@Override public boolean onCreateOptionsMenu(Menu menu) {     getMenuInflater().inflate(R.menu.main_menu, menu);     return true; }\n // main xml  <androidx.appcompat.widget.Toolbar         android:id=\"@+id/activity_main_toolbar\"         android:minHeight=\"?attr/actionBarSize\"         android:layout_width=\"match_parent\"         android:layout_height=\"wrap_content\"         app:titleTextColor=\"@android:color/white\"         android:background=\"?attr/colorPrimary\"/>  // menu menu/..menu.xml     <menu xmlns:android=\"http://schemas.android.com/apk/res/android\"     xmlns:app=\"http://schemas.android.com/apk/res-auto\">     <item         android:id=\"@+id/menu_activity_main_search\"         android:icon=\"@drawable/ic_search_white_24dp\"         app:showAsAction=\"ifRoom\"         android:title=\"Rechercher\">     </item>     <item         android:id=\"@+id/menu_activity_main_params\"         android:icon=\"@drawable/ic_more_vert_white_24dp\"         app:showAsAction=\"ifRoom\"         android:title=\"Param&egrave;tres\">     </item> </menu> \n",
    "reg_date": "2021-10-12T12:06:29.000Z"
  },
  {
    "id": 3464,
    "keyword": null,
    "link": null,
    "title": " merge sort iterative (string)",
    "description": "//Joshua Khumalo import java.util.Arrays; public class Demo{    public static void merge_sort(int[] my_arr){       if(my_arr == null){          return;       }       if(my_arr.length > 1){          int mid = my_arr.length / 2;          int[] left = new int[mid];          for(int i = 0; i < mid; i++){             left[i] = my_arr[i];          }          int[] right = new int[my_arr.length - mid];          for(int i = mid; i < my_arr.length; i++){             right[i - mid] = my_arr[i];          }          merge_sort(left);          merge_sort(right);          int i = 0;          int j = 0;          int k = 0;          while(i < left.length && j < right.length){             if(left[i] < right[j]){                my_arr[k] = left[i];                i++;             } else {                my_arr[k] = right[j];                j++;             }             k++;          }          while(i < left.length){             my_arr[k] = left[i];             i++;             k++;          }          while(j < right.length){             my_arr[k] = right[j];             j++;             k++;          }       }    }    public static void main(String[] args){       int my_arr[] = {56, 78, 91, 21, 34, 0, 11};       int i=0;       merge_sort(my_arr);       System.out.println(\"The array after sorting is \");       for(i=0; i<my_arr.length; i++)       System.out.print(my_arr[i]+\" \");    } }\n",
    "reg_date": "2021-10-12T12:06:29.000Z"
  },
  {
    "id": 3465,
    "keyword": null,
    "link": null,
    "title": " method hiding in java",
    "description": "class Demo{    public static void demoMethod() {       System.out.println(\"method of super class\");    } } public class Sample extends Demo {    public static void demoMethod() {       System.out.println(\"method of sub class\");    }    public static void main(String args[] ) {       Sample.demoMethod();      Demo sm= new Sample();      sm.demoMethod();    } }\n",
    "reg_date": "2021-10-12T12:06:29.000Z"
  },
  {
    "id": 3466,
    "keyword": null,
    "link": null,
    "title": " method overloading vs overriding",
    "description": "Method Overloading  Method overloading is providing two separate methods in a class  with the same name but different arguments, while the method return type  may or may not be different, which allows us to reuse the same method name. 1) Method Overloading occurs with in the same class 2) Since it involves with only one class inheritance is not involved. 3)In overloading return type need not be the same  4) Parameters must be different when we do overloading 5) Static polymorphism can be acheived using method overloading 6) In overloading one method can&rsquo;t hide the another  Method Overriding Overriding means same method name and same parameter,  occur in different class that has inheritance relationship.  we use method overriding to implement specific functionality to the method. 1) Method Overriding occurs between two classes superclass and subclass 2) Since method overriding occurs between superclass and subclass inheritance is involved. 3) In overriding return type must be same. 4) Parameters must be same. 5) Dynamic polymorphism can be acheived using method overriding. 6) In overriding subclass method hides that of the superclass method\nWhen you have two methods of the same name but having different properties, the case is called Overloading. On the other hand, Overriding refers to a situation where two methods with the same name and properties occur, but the two occurring in a parent and child class respectively.\nMethod Overloading:  Access modifier can be same or different,  Return-Type can be same or different,  Parameters MUST be different, Method name MUST be same,  any method can be overloaded  Method Overriding: After a method is inherited it is possible to change  the implantation of the method in the child class.  This concept is called overriding. Method name,  Parameter, and Return-Type MUST be same MUST happen in the sub class, access modifier MUST be same  or more visible, ONLY the instance methods can be overridden @Override annotation MUST be applicable.  Static and Constructor cannot be override. We can use the @Override annotation before the method  to declare the overriding. This annotation will allow  the compiler to help ensure the method is overridden correctly  EXAMPLE: get method WebDriver driver = new ChromeDriver();  driver.get(\"URL\") ==> opens the url from chrome  \nMethod Overloading  Method overloading is providing two separate methods in a class  with the same name but different arguments, while the method return type  may or may not be different, which allows us to reuse the same method name. 1) Method Overloading occurs with in the same class 2) Since it involves with only one class inheritance is not involved. 3)In overloading return type need not be the same  4) Parameters must be different when we do overloading 5) Static polymorphism can be acheived using method overloading 6) In overloading one method can&rsquo;t hide the another  Method Overriding Overriding means same method name and same parameter,  occur in different class that has inheritance relationship.  we use method overriding to implement specific functionality to the method. 1) Method Overriding occurs between two classes superclass and subclass 2) Since method overriding occurs between superclass and subclass inheritance is involved. 3) In overriding return type must be same. 4) Parameters must be same. 5) Dynamic polymorphism can be acheived using method overriding. 6) In overriding subclass method hides that of the superclass method \nMethod Overloading  Method overloading is providing two separate methods in a class with the same name but different arguments, while the method return type  may or may not be different, which allows us to reuse the same method name. 1) Method Overloading occurs with in the same class 2) Since it involves with only one class inheritance is not involved. 3)In overloading return type need not be the same  4) Parameters must be different when we do overloading 5) Static polymorphism can be acheived using method overloading 6) In overloading one method can&rsquo;t hide the another  Method Overriding Overriding means same method name and same parameter,  occur in different class that has inheritance relationship.  we use method overriding to implement specific functionality to the method. 1) Method Overriding occurs between two classes superclass and subclass 2) Since method overriding occurs between superclass and subclass inheritance is involved. 3) In overriding return type must be same. 4) Parameters must be same. 5) Dynamic polymorphism can be acheived using method overriding. 6) In overriding subclass method hides that of the superclass method\nMethod overloading is providing two separate methods in a class with the same name but different arguments, while the method return type may or may not be different, which allows us to reuse the same method name.  Method overriding means defining a method in a child class that is already defined in the parent class with the same method signature, same name, arguments, and return type \n",
    "reg_date": "2021-10-12T12:06:29.000Z"
  },
  {
    "id": 3467,
    "keyword": null,
    "link": null,
    "title": " method overriding java",
    "description": "Method overloading is providing two separate methods in a class with the same name but different arguments, while the method return type may or may not be different, which allows us to reuse the same method name.  Method overriding means defining a method in a child class that is already defined in the parent class with the same method signature, same name, arguments, and return type\nMethod overloading is providing  two separate methods in a class  with the same name but different arguments, while the method return type  may or may not be different, which allows us to reuse the same method name. In my framework== I use implicit wait in Selenium. Implicit wait is an example of overloading. In Implicit wait we use different time stamps such as SECONDS, MINUTES, HOURS etc., A class having multiple methods with same name but different parameters  is called Method Overloading\nMethod Overloading:  Access modifier can be same or different,  Return-Type can be same or different,  Parameters MUST be different, Method name MUST be same,  any method can be overloaded  Method Overriding: After a method is inherited it is possible to change  the implantation of the method in the child class.  This concept is called overriding.  Method name, Parameter, and Return-Type MUST be same access modifier MUST be same or more visible,  MUST happen in the sub class,  ONLY the instance methods can be overridden @Override annotation MUST be applicable.  Static and Constructor cannot be override. We can use the @Override annotation before the method  to declare the overriding. EXAMPLE: get method WebDriver driver = new ChromeDriver();  driver.get(\"URL\") ==> opens the url from chrome  \nOverriding means same method name and same parameter,  occur in different class that has inheritance relationship.  we use method overriding to implement specific functionality to the method.  Example: get method WebDriver driver = new ChromeDriver(); driver.get(\"URL\") ==> opens the url from chrome  WebDriver driver = new FireFoxDriver(); driver.get(\"URL\") ==> opens the url from Firefox  we can only override instance methods and method override  takes place in sub class. instance method that we are going to override cannot be private and final\nOverriding means same method name and same parameter,  occur in different class that has  inheritance relationship.  we use method overriding to implement  specific functionality to the method.   Examples are get and navigate methods of different drivers in Selenium .  Example: get method WebDriver driver = new ChromeDriver(); driver.get(\"URL\") ==> opens the url from chrome  WebDriver driver = new FireFoxDriver(); driver.get(\"URL\") ==> opens the url from Firefox  we can only override instance methods and method override  takes place in sub class. instance method that we are going to override cannot be private and final Example: get method WebDriver driver = new ChromeDriver(); driver.get(\"URL\") ==> opens the url from chrome  WebDriver driver = new FireFoxDriver(); driver.get(\"URL\") ==> opens the url from Firefox  we can only override instance methods and method override  takes place in sub class. instance method that we are going to override cannot be private and final\nOverriding means same method name and same parameter,  occur in different class that has  inheritance relationship.  we use method overriding to implement  specific functionality to the method. \n",
    "reg_date": "2021-10-12T12:06:30.000Z"
  },
  {
    "id": 3468,
    "keyword": null,
    "link": null,
    "title": " method reference in java",
    "description": "Java provides a feature called method reference in Java 8. Method reference  is used to refer method of functional interface.   It is compact and easy form   of lambda expression. Each time when    you are using lambda expression to just   referring a method, you can replace your   lambda expression with method reference.  Types of Method References: - Reference to a static method.  Syntax ==> ContainingClass::staticMethodName   - Reference to an instance method.  Syntax ==> containingObject::instanceMethodName   - Reference to a constructor.  Syntax ==> ClassName::new  \n",
    "reg_date": "2021-10-12T12:06:30.000Z"
  },
  {
    "id": 3469,
    "keyword": null,
    "link": null,
    "title": " method resolve file in java",
    "description": "private File initUsersText() throws Exception {     Path dir = testdir.getPath().toRealPath();     FS.ensureDirExists(dir.toFile());     File users = dir.resolve(\"users.txt\").toFile();      writeUser( users );     return users; }   private File initUsersText() throws Exception {     Path dir = testdir.getPath().toRealPath();     FS.ensureDirExists(dir.toFile());     File users = dir.resolve(\"users.txt\").toFile();      writeUser( users );     return users; }\n",
    "reg_date": "2021-10-12T12:06:30.000Z"
  },
  {
    "id": 3470,
    "keyword": null,
    "link": null,
    "title": " methods in java",
    "description": "public class Main {   public static void main(String args[]) {     SayHi();          int sum = AddNums(5, 6);     System.out.println(sum);   }      public static void SayHi() { //This method has no return value     System.out.println(\"Hi!\");   }      public static int AddNums(int a, int b) { //This method has a return value     return a + b; }\n//declare a function like this: void function(int parameter1) { \t//function body } //call the function like this: function(1);\npublic class MyClass {   static int myMethod(int x) {     return 5 + x;   }    public static void main(String[] args) {     System.out.println(myMethod(3));   } } // Returns 8\nA method in java is a group of statements to carry out some operation also  known as functions.\nMethod is a collection of statements which returns a value upon its execution Method have a return and the method's name may or not be same as the class name. Method is invoked explicitly. Method is not provided by compiler in any case. Methods are inherited by child classes.\nMethod is a collection of statements which returns a value upon its execution.   Method have a return and the method's name may or not be same as the class name. Method is invoked explicitly. Method is not provided by compiler in any case. Methods are inherited by child classes.\n",
    "reg_date": "2021-10-12T12:06:30.000Z"
  },
  {
    "id": 3471,
    "keyword": null,
    "link": null,
    "title": " min in java",
    "description": "Math.min(a, b);  // a & b = int, double, long, or float\nSystem.out.println(Math.min(a, b));\nMath.log10()\nvoid shift_solution(int & x, int & y, int a, int b, int cnt) {     x += cnt * b;     y -= cnt * a; }  int find_all_solutions(int a, int b, int c, int minx, int maxx, int miny, int maxy) {     int x, y, g;     if (!find_any_solution(a, b, c, x, y, g))         return 0;     a /= g;     b /= g;      int sign_a = a > 0 ? +1 : -1;     int sign_b = b > 0 ? +1 : -1;      shift_solution(x, y, a, b, (minx - x) / b);     if (x < minx)         shift_solution(x, y, a, b, sign_b);     if (x > maxx)         return 0;     int lx1 = x;      shift_solution(x, y, a, b, (maxx - x) / b);     if (x > maxx)         shift_solution(x, y, a, b, -sign_b);     int rx1 = x;      shift_solution(x, y, a, b, -(miny - y) / a);     if (y < miny)         shift_solution(x, y, a, b, -sign_a);     if (y > maxy)         return 0;     int lx2 = x;      shift_solution(x, y, a, b, -(maxy - y) / a);     if (y > maxy)         shift_solution(x, y, a, b, sign_a);     int rx2 = x;      if (lx2 > rx2)         swap(lx2, rx2);     int lx = max(lx1, lx2);     int rx = min(rx1, rx2);      if (lx > rx)         return 0;     return (rx - lx) / abs(b) + 1; } \n",
    "reg_date": "2021-10-12T12:06:30.000Z"
  },
  {
    "id": 3472,
    "keyword": null,
    "link": null,
    "title": " min max heap java",
    "description": "import java.util.PriorityQueue;  public class MaxHeapWithPriorityQueue {      public static void main(String args[]) {         // create priority queue         PriorityQueue<Integer> prq = new PriorityQueue<>(Comparator.reverseOrder());          // insert values in the queue         prq.add(6);         prq.add(9);         prq.add(5);         prq.add(64);         prq.add(6);          //print values         while (!prq.isEmpty()) {             System.out.print(prq.poll()+\" \");         }     }  }\n// min heap: PriorityQueue implementation from the JDK PriorityQueue<Integer> prq = new PriorityQueue<>();  // max heap: PriorityQueue implementation WITH CUSTOM COMPARATOR PASSED // Method 1: Using Collections (recommended) PriorityQueue<Integer> prq = new PriorityQueue<>(Collections.reverseOrder()); // Method 2: Using Lambda function (may cause Integer Overflow) PriorityQueue<Integer> prq = new PriorityQueue<>((a, b) -> b - a);\n",
    "reg_date": "2021-10-12T12:06:30.000Z"
  },
  {
    "id": 3473,
    "keyword": null,
    "link": null,
    "title": " minecraft chunk size",
    "description": "A chunk is a 256-block tall 16&times;16 segment of a Minecraft world and is the method used by the world generator to divided maps into manageable pieces.\n",
    "reg_date": "2021-10-12T12:06:30.000Z"
  },
  {
    "id": 3474,
    "keyword": null,
    "link": null,
    "title": " minmax algorithm implementation in java",
    "description": "class Board {      List<Point> availablePoints;     Scanner scan = new Scanner(System.in);     int[][] board = new int[3][3];      public Board() {     }      public boolean isGameOver() {         return (hasXWon() || hasOWon() || getAvailableStates().isEmpty());     }      public boolean hasXWon() {         if ((board[0][0] == board[1][1] && board[0][0] == board[2][2] && board[0][0] == 1) || (board[0][2] == board[1][1] && board[0][2] == board[2][0] && board[0][2] == 1)) {             return true;         }         for (int i = 0; i < 3; ++i) {             if (((board[i][0] == board[i][1] && board[i][0] == board[i][2] && board[i][0] == 1)                     || (board[0][i] == board[1][i] && board[0][i] == board[2][i] && board[0][i] == 1))) {                 return true;             }         }         return false;     }      public boolean hasOWon() {         if ((board[0][0] == board[1][1] && board[0][0] == board[2][2] && board[0][0] == 2) || (board[0][2] == board[1][1] && board[0][2] == board[2][0] && board[0][2] == 2)) {             return true;         }         for (int i = 0; i < 3; ++i) {             if ((board[i][0] == board[i][1] && board[i][0] == board[i][2] && board[i][0] == 2)                     || (board[0][i] == board[1][i] && board[0][i] == board[2][i] && board[0][i] == 2)) {                 return true;             }         }          return false;     }      public List<Point> getAvailableStates() {         availablePoints = new ArrayList<>();         for (int i = 0; i < 3; ++i) {             for (int j = 0; j < 3; ++j) {                 if (board[i][j] == 0) {                     availablePoints.add(new Point(i, j));                 }             }         }         return availablePoints;     }      public void placeAMove(Point point, int player) {         board[point.x][point.y] = player; //player = 1 for X, 2 for O     }      void takeHumanInput() {         System.out.println(\"Your move: \");         int x = scan.nextInt();         int y = scan.nextInt();         Point point = new Point(x, y);         placeAMove(point, 2);     }      public void displayBoard() {         System.out.println();          for (int i = 0; i < 3; ++i) {             for (int j = 0; j < 3; ++j) {                 System.out.print(board[i][j] + \" \");             }             System.out.println();          }     }      Point computersMove;      public int minimax(int depth, int turn) {         if (hasXWon()) return +1;         if (hasOWon()) return -1;          List<Point> pointsAvailable = getAvailableStates();         if (pointsAvailable.isEmpty()) return 0;          int min = Integer.MAX_VALUE, max = Integer.MIN_VALUE;          for (int i = 0; i < pointsAvailable.size(); ++i) {             Point point = pointsAvailable.get(i);             if (turn == 1) {                 placeAMove(point, 1);                 int currentScore = minimax(depth + 1, 2);                 max = Math.max(currentScore, max);                  if(depth == 0)System.out.println(\"Score for position \"+(i+1)+\" = \"+currentScore);                 if(currentScore >= 0){ if(depth == 0) computersMove = point;}                 if(currentScore == 1){board[point.x][point.y] = 0; break;}                 if(i == pointsAvailable.size()-1 && max < 0){if(depth == 0)computersMove = point;}             } else if (turn == 2) {                 placeAMove(point, 2);                 int currentScore = minimax(depth + 1, 1);                 min = Math.min(currentScore, min);                 if(min == -1){board[point.x][point.y] = 0; break;}             }             board[point.x][point.y] = 0; //Reset this point         }         return turn == 1?max:min;     } } \n",
    "reg_date": "2021-10-12T12:06:30.000Z"
  },
  {
    "id": 3475,
    "keyword": null,
    "link": null,
    "title": " mitmproxy on mac and android device",
    "description": "1- https://medium.com/@gaikwadchetan93/monitoring-modifying-android-app-network-traffic-via-mitm-proxy-part-1-886f6324f705  2- https://www.andyibanez.com/posts/intercepting-network-mitmproxy/\n",
    "reg_date": "2021-10-12T12:06:30.000Z"
  },
  {
    "id": 3476,
    "keyword": null,
    "link": null,
    "title": " mobile number validation to edittext in android",
    "description": "public boolean isValidPhone(CharSequence phone) { if (TextUtils.isEmpty(phone)) { return false; } else { return android.util.Patterns.PHONE.matcher(phone).matches(); } } \n",
    "reg_date": "2021-10-12T12:06:30.000Z"
  },
  {
    "id": 3477,
    "keyword": null,
    "link": null,
    "title": " mock ParameterizedTypeReference",
    "description": "eq(new ParameterizedTypeReference<SearchResultsDTO<SolrDocumentDTO>>() {}))\n",
    "reg_date": "2021-10-12T12:06:30.000Z"
  },
  {
    "id": 3478,
    "keyword": null,
    "link": null,
    "title": " mockito mock void methods",
    "description": "Mockito.doThrow().when(mockObject).methodReturningVoid(any()); \nTestedClass tc = spy(new TestedClass()); LoginContext lcMock = mock(LoginContext.class); when(tc.login(anyString(), anyString())).thenReturn(lcMock);\n",
    "reg_date": "2021-10-12T12:06:31.000Z"
  },
  {
    "id": 3479,
    "keyword": null,
    "link": null,
    "title": " mockito throw exception void method",
    "description": "doThrow(new Exception()).when(mockedObject).methodReturningVoid(...);\n",
    "reg_date": "2021-10-12T12:06:31.000Z"
  },
  {
    "id": 3480,
    "keyword": null,
    "link": null,
    "title": " mockito verify more than once",
    "description": "verify(mock, times(5)).someMethod(\"was called five times\"); verify(mock, never()).someMethod(\"was never called\"); verify(mock, atLeastOnce()).someMethod(\"was called at least once\"); verify(mock, atLeast(2)).someMethod(\"was called at least twice\"); verify(mock, atMost(3)).someMethod(\"was called at most 3 times\"); verify(mock, atLeast(0)).someMethod(\"was called any number of times\"); // useful with captors verify(mock, only()).someMethod(\"no other method has been called on the mock\");\n",
    "reg_date": "2021-10-12T12:06:31.000Z"
  },
  {
    "id": 3481,
    "keyword": null,
    "link": null,
    "title": " mockito verify not called",
    "description": "import static org.mockito.Mockito.never; import static org.mockito.Mockito.verify;  // ...  verify(dependency, never()).someMethod(); \n",
    "reg_date": "2021-10-12T12:06:31.000Z"
  },
  {
    "id": 3482,
    "keyword": null,
    "link": null,
    "title": " mongo express docker compose",
    "description": "version: \"3.5\"  services:   mongo:     image: mongo:latest     container_name: mongo     environment:       MONGO_INITDB_ROOT_USERNAME: admin       MONGO_INITDB_ROOT_PASSWORD: admin     ports:       - \"0.0.0.0:27017:27017\"     networks:       - MONGO     volumes:       - type: volume         source: MONGO_DATA         target: /data/db       - type: volume         source: MONGO_CONFIG         target: /data/configdb   mongo-express:     image: mongo-express:latest     container_name: mongo-express     environment:       ME_CONFIG_MONGODB_ADMINUSERNAME: admin       ME_CONFIG_MONGODB_ADMINPASSWORD: admin       ME_CONFIG_MONGODB_SERVER: mongo       ME_CONFIG_MONGODB_PORT: \"27017\"     ports:       - \"0.0.0.0:8081:8081\"     networks:       - MONGO     depends_on:       - mongo  networks:   MONGO:     name: MONGO  volumes:   MONGO_DATA:     name: MONGO_DATA   MONGO_CONFIG:     name: MONGO_CONFIG\n",
    "reg_date": "2021-10-12T12:06:31.000Z"
  },
  {
    "id": 3483,
    "keyword": null,
    "link": null,
    "title": " mongodb java read array",
    "description": "MongoClient client = new MongoClient(\"localhost\", 27017); MongoDatabase database = client.getDatabase(\"employee_db\"); MongoCollection<Document> collection = database \t\t\t\t.getCollection(\"employees\");  List<Document> employees = (List<Document>) collection.find().into(   new ArrayList<Document>());  for (Document employee : employees) {    // courses is a List in a DB   List<Document> courses = (List<Document>) employee.get(\"courses\");   for (Document course : courses) {     System.out.println(\"name = \" + employee.getString(\"name\")                        + \" course details below\");     System.out.println(\"course name = \" + course.getString(\"name\"));     System.out.println(\"cours type = \" + course.getString(\"type\"));   }  }\n",
    "reg_date": "2021-10-12T12:06:31.000Z"
  },
  {
    "id": 3484,
    "keyword": null,
    "link": null,
    "title": " mono command to compile C# library code",
    "description": "mcs hello.cs -pkg:gtk-sharp-2.0 \nmono hello.exe \n",
    "reg_date": "2021-10-12T12:06:31.000Z"
  },
  {
    "id": 3485,
    "keyword": null,
    "link": null,
    "title": " moving text in textview android",
    "description": "<TextView         android:id=\"@+id/YOURID\"         android:layout_width=\"15dp\"         android:layout_height=\"wrap_content\"         android:ellipsize=\"marquee\"         android:focusable=\"true\"         android:focusableInTouchMode=\"true\"         android:marqueeRepeatLimit=\"marquee_forever\"         android:scrollHorizontally=\"true\"         android:singleLine=\"true\"         />\n",
    "reg_date": "2021-10-12T12:06:31.000Z"
  },
  {
    "id": 3486,
    "keyword": null,
    "link": null,
    "title": " multiple case switch java",
    "description": "switch (variable) {     case 5:     case 6:     etc.     case 100:         doSomething();     break; }\n",
    "reg_date": "2021-10-12T12:06:31.000Z"
  },
  {
    "id": 3487,
    "keyword": null,
    "link": null,
    "title": " multiple catch in java 8",
    "description": " catch(IOException | SQLException ex){      logger.error(ex);      throw new MyException(ex.getMessage()); } \n",
    "reg_date": "2021-10-12T12:06:31.000Z"
  },
  {
    "id": 3488,
    "keyword": null,
    "link": null,
    "title": " multiplication program java",
    "description": "int i,k; \t\t\tScanner sc = new Scanner(System.in); \t\t\tSystem.out.println(\"Enter the Number for the table: \");  \t\t\tint n = sc.nextInt(); \t\t\tfor (i=1;i<=10;i++){ \t\t\t\t k = n * i; \t\t\t\t//n + \"*\" + c + \" = \" + (n*c)) \t\t\t\tSystem.out.println(n + \"*\"+ i + \" = \" + k);\t \t\t\t}\n",
    "reg_date": "2021-10-12T12:06:32.000Z"
  },
  {
    "id": 3489,
    "keyword": null,
    "link": null,
    "title": " multiply matrices java",
    "description": "public class Matrix {   private double[][] multiply(double[][] matrixOne, double[][] matrixTwo) {             assert matrixOne[0].length == matrixTwo.length: \"width of matrix one must be equal to height of matrix two\";             double[][] product = new double[matrixOne.length][matrixTwo[0].length];     \t\t//fills output matrix with 0's             for(short l = 0; l<matrixOne.length; l++) {                 for(short m = 0; m<matrixTwo[0].length; m++) {                     product[l][m] = 0;                 }             }     \t\t//takes the dot product of the rows and columns and adds them to output matrix             for(short i = 0; i<matrixOne.length; i++) {                 for(short j = 0; j<matrixTwo[0].length; j++) {                     for(short k = 0; k<matrixOne[0].length; k++) {                         product[i][j] += matrixOne[i][k] * matrixTwo[k][j];                     }                 }             }             return product;         } }\n// matrix multiplication java public class MatrixMultiplicationJavaDemo  {    public static int[][] multiplyMatrix(int[][] matrix1, int[][] matrix2, int row, int column, int col)    {       int[][] multiply = new int[row][col];       for(int a = 0; a < row; a++)        {          for(int b = 0; b < col; b++)           {             for(int k = 0; k < column; k++)              {                multiply[a][b] += matrix1[a][k] * matrix2[k][b];             }          }       }       return multiply;    }    public static void printMatrix(int[][] multiply)     {       System.out.println(\"Multiplication of two matrices: \");       for(int[] row : multiply)        {          for(int column : row)           {             System.out.print(column + \"    \");          }          System.out.println();       }    }    public static void main(String[] args)     {       int row = 2, col = 3;       int column = 2;       int[][] matrixOne = {{1, 2, 3}, {4, 5, 6}};       int[][] matrixTwo = {{7, 8}, {9, 1}, {2, 3}};       int[][] product = multiplyMatrix(matrixOne, matrixTwo, row, col, column);       printMatrix(product);    } }\n",
    "reg_date": "2021-10-12T12:06:32.000Z"
  },
  {
    "id": 3490,
    "keyword": null,
    "link": null,
    "title": " multithreading in java",
    "description": "package com.mkyong.io;  import java.util.Scanner;  public class JavaScanner {      public static void main(String[] args) {          Scanner scanner = new Scanner(System.in);          String input = \"\";         while (!\"q\".equalsIgnoreCase(input)) {              System.out.print(\"Enter something (q to quite): \");              input = scanner.nextLine();             System.out.println(\"input : \" + input);         }          System.out.println(\"bye bye!\");     }  }\n//Bless anyone who decides to follow this path\nMultithreading is a model of program execution  that allows for multiple threads to be created  within a process, executing independently but  concurrently sharing process resources.  Depending on the hardware, threads can run  fully parallel if they are distributed to their own CPU core.\nimport threading  def func1(): \t# your function def func2(): \t# your function if __name__ == '__main__': \tthreading.Thread(target=func1).start() \tthreading.Thread(target=func2).start()\nclass Count implements Runnable {    Thread mythread ;    Count()    {        mythread = new Thread(this, \"my runnable thread\");       System.out.println(\"my thread created\" + mythread);       mythread.start();    }    public void run()    {       try       {         for (int i=0 ;i<10;i++)         {           System.out.println(\"Printing the count \" + i);           Thread.sleep(1000);         }      }      catch(InterruptedException e)      {         System.out.println(\"my thread interrupted\");      }      System.out.println(\"mythread run is over\" );    } } class RunnableExample {     public static void main(String args[])     {        Count cnt = new Count();        try        {           while(cnt.mythread.isAlive())           {             System.out.println(\"Main thread will be alive till the child thread is live\");              Thread.sleep(1500);           }        }        catch(InterruptedException e)        {           System.out.println(\"Main thread interrupted\");        }        System.out.println(\"Main thread run is over\" );     } }\nMath.pow(base, esponente)\n",
    "reg_date": "2021-10-12T12:06:32.000Z"
  },
  {
    "id": 3491,
    "keyword": null,
    "link": null,
    "title": " murtaza jafari",
    "description": "Murtaza JAFARI - Sydney Australia  Web Developer :)    \n",
    "reg_date": "2021-10-12T12:06:32.000Z"
  },
  {
    "id": 3492,
    "keyword": null,
    "link": null,
    "title": " music loop java",
    "description": "// Makes a music loop Thread music = new Thread() { \tpublic void run() { \t\tClip clip; \t\ttry { \t\t\tAudioInputStream input = AudioSystem.getAudioInputStream(new File(\"music.wav\")); \t\t\tclip = AudioSystem.getClip(); \t\t\tclip.open(input); \t\t\tclip.loop(Clip.LOOP_CONTINUOUSLY); \t\t\tclip.start(); \t\t} catch (UnsupportedAudioFileException e) { \t\t\te.printStackTrace(); \t\t} catch (IOException e) { \t\t\te.printStackTrace(); \t\t} catch (LineUnavailableException e) { \t\t\te.printStackTrace(); \t\t} \t} }; music.start();\n",
    "reg_date": "2021-10-12T12:06:32.000Z"
  },
  {
    "id": 3493,
    "keyword": null,
    "link": null,
    "title": " mutable string in java",
    "description": "StringBuilder str = new StringBuilder();  str.append(\"GFG\"); \n",
    "reg_date": "2021-10-12T12:06:32.000Z"
  },
  {
    "id": 3494,
    "keyword": null,
    "link": null,
    "title": " naming a package java",
    "description": "//if your domain name is google.com, name your package as com.google so that your package is unique across the world as domain names are unique package com.google\n",
    "reg_date": "2021-10-12T12:06:32.000Z"
  },
  {
    "id": 3495,
    "keyword": null,
    "link": null,
    "title": " naming conventions methods java",
    "description": "Methods should be verbs, in mixed case with the first letter lowercase,  with the first letter of each internal word capitalized. Example: run(); runFast(); getBackground();\n // Class // It should start with the uppercase letter. It should be a noun such as Color, Button, System, Thread, etc. Use appropriate words, instead of acronyms. Example: public class Employee   {   //code snippet   }    // Interface // It should start with the uppercase letter. It should be an adjective such as Runnable, Remote, ActionListener. Use appropriate words, instead of acronyms. Example: interface Printable   {   //code snippet   }    // Method // It should start with lowercase letter. It should be a verb such as main(), print(), println(). If the name contains multiple words, start it with a lowercase letter followed by an uppercase letter such as actionPerformed(). Example:  class Employee   {   //method   \tvoid draw()   \t{   //code snippet   \t}   }   // Variable // It should start with a lowercase letter such as id, name. It should not start with the special characters like & (ampersand), $ (dollar), _ (underscore). If the name contains multiple words, start it with the lowercase letter followed by an uppercase letter such as firstName, lastName. Avoid using one-character variables such as x, y, z. Example :-   class Employee   {   //variable   \tint id;   //code snippet   }  // Package // It should be a lowercase letter such as java, lang. If the name contains multiple words, it should be separated by dots (.) such as java.util, java.lang. Example: package com.javatpoint; //package   class Employee   {   //code snippet   }  // Constant // It should be in uppercase letters such as RED, YELLOW. If the name contains multiple words, it should be separated by an underscore(_) such as MAX_PRIORITY. It may contain digits but not as the first letter. Example: class Employee   {   //constant    \tstatic final int MIN_AGE = 18;   //code snippet   }  \n",
    "reg_date": "2021-10-12T12:06:32.000Z"
  },
  {
    "id": 3496,
    "keyword": null,
    "link": null,
    "title": " navigate to another activity in android",
    "description": "Intent intent = new Intent(this, DisplayMessageActivity.class);         intent.putExtra(key:,value:);         startActivity(intent);\nOnClickListener onClickListener = new OnClickListener() {     @Override     public void onClick(View v) {         startActivity(new Intent(action));     } };  Button button = (Button) findViewById(id); button.setOnClickListener(onClickListener);\n",
    "reg_date": "2021-10-12T12:06:32.000Z"
  },
  {
    "id": 3497,
    "keyword": null,
    "link": null,
    "title": " ndroid.support.v4.content.FileProvider",
    "description": "androidx.core.content.FileProvider;\n",
    "reg_date": "2021-10-12T12:06:33.000Z"
  },
  {
    "id": 3498,
    "keyword": null,
    "link": null,
    "title": " nested for loop in java",
    "description": "// This nested for loop will print 5 rows of 20 asterisks each  for(int i = 0; i < 5; i++) {   for(int j = 0; j < 20; j++) {     System.out.print(\"*\");   }   System.out.println(); }\nfor (int i = 0; i < 10; i++) { \tfor (int j = 0; j < 10; j++) { \t\tSystem.out.println(\"*\");     }   System.out.println(\"\"); }\n// outer loop for (int i = 1; i <= 5; ++i) {   // codes    // inner loop   for(int j = 1; j <=2; ++j) {     // codes   } .. }\n",
    "reg_date": "2021-10-12T12:06:33.000Z"
  },
  {
    "id": 3499,
    "keyword": null,
    "link": null,
    "title": " nested if statement in java",
    "description": "if(something){ \tif(somethingElse){     \tdoSomething();     }//else (if) block possible here }//else (if) block possible here\n",
    "reg_date": "2021-10-12T12:06:33.000Z"
  },
  {
    "id": 3500,
    "keyword": null,
    "link": null,
    "title": " netbeans using file reader",
    "description": "package net.codejava.io;   import java.io.BufferedReader; import java.io.FileReader; import java.io.IOException;   /**  * This program demonstrates how to read characters from a text file  * using a BufferedReader for efficiency.  * @author www.codejava.net  *  */ public class TextFileReadingExample3 {       public static void main(String[] args) {         try {             FileReader reader = new FileReader(\"MyFile.txt\");             BufferedReader bufferedReader = new BufferedReader(reader);               String line;               while ((line = bufferedReader.readLine()) != null) {                 System.out.println(line);             }             reader.close();           } catch (IOException e) {             e.printStackTrace();         }     }   } \n",
    "reg_date": "2021-10-12T12:06:33.000Z"
  },
  {
    "id": 3501,
    "keyword": null,
    "link": null,
    "title": " never gonna give you up",
    "description": "never gonna let you down\nWe're no strangers to love You know the rules and so do I A full commitment's what I'm thinking of You wouldn't get this from any other guy I just wanna tell you how I'm feeling Gotta make you understand Never gonna give you up Never gonna let you down Never gonna run around and desert you Never gonna make you cry Never gonna say goodbye Never gonna tell a lie and hurt you We've known each other for so long Your heart's been aching but you're too shy to say it Inside we both know what's been going on We know the game and we're gonna play it And if you ask me how I'm feeling Don't tell me you're too blind to see Never gonna give you up Never gonna let you down Never gonna run around and desert you Never gonna make you cry Never gonna say goodbye Never gonna tell a lie and hurt you Never gonna give you up Never gonna let you down Never gonna run around and desert you Never gonna make you cry Never gonna say goodbye Never gonna tell a lie and hurt you Never gonna give, never gonna give (Give you up) We've known each other for so long Your heart's been aching but you're too shy to say it Inside we both know what's been going on We know the game and we're gonna play it I just wanna tell you how I'm feeling Gotta make you understand Never gonna give you up Never gonna let you down Never gonna run around and desert you Never gonna make you cry Never gonna say goodbye Never gonna tell a lie and hurt you Never gonna give you up Never gonna let you down Never gonna run around and desert you Never gonna make you cry Never gonna say goodbye Never gonna tell a lie and hurt you Never gonna give you up Never gonna let you down Never gonna run around and desert you Never gonna make you cry Never gonna say goodbye\nWe're no strangers to love You know the rules and so do I A full commitment's what I'm thinking of You wouldn't get this from any other guy I just wanna tell you how I'm feeling Gotta make you understand Never gonna give you up Never gonna let you down Never gonna run around and desert you Never gonna make you cry Never gonna say goodbye Never gonna tell a lie and hurt you We've known each other for so long Your heart's been aching but you're too shy to say it Inside we both know what's been going on We know the game and we're gonna play it And if you ask me how I'm feeling Don't tell me you're too blind to see Never gonna give you up Never gonna let you down Never gonna run around and desert you Never gonna make you cry Never gonna say goodbye Never gonna tell a lie and hurt you Never gonna give you up Never gonna let you down Never gonna run around and desert you Never gonna make you cry Never gonna say goodbye Never gonna tell a lie and hurt you Never gonna give, never gonna give (Give you up) (Ooh) Never gonna give, never gonna give (Give you up) We've known each other for so long Your heart's been aching but you're too shy to say it Inside we both know what's been going on We know the game and we're gonna play it I just wanna tell you how I'm feeling Gotta make you understand Never gonna give you up Never gonna let you down Never gonna run around and desert you Never gonna make you cry Never gonna say goodbye Never gonna tell a lie and hurt you Never gonna give you up Never gonna let you down Never gonna run around and desert you Never gonna make you cry Never gonna say goodbye Never gonna tell a lie and hurt you Never gonna give you up Never gonna let you down Never gonna run around and desert you Never gonna make you cry\noh no no\nBest song\nYou are legally obliged to rick roll someone \n2 3 4 5 \nthis is a beautifull song\nWhy would you do this to yourself..\n// https://www.youtube.com/watch?v=dQw4w9WgXcQ\n",
    "reg_date": "2021-10-12T12:06:33.000Z"
  },
  {
    "id": 3502,
    "keyword": null,
    "link": null,
    "title": " new date to utc string java",
    "description": " myJavaUtilDate.toInstant().toString()    // output = \"2020-05-05T19:46:12.912Z\"\n",
    "reg_date": "2021-10-12T12:06:33.000Z"
  },
  {
    "id": 3503,
    "keyword": null,
    "link": null,
    "title": " new hashmap java",
    "description": "Map<String, String> myMap = new HashMap<String, String>() {{         put(\"a\", \"b\");         put(\"c\", \"d\");     }};\nMap<String, String> emptyMap = Map.of(); Map<String, String> singletonMap = Map.of(\"key1\", \"value\"); Map<String, String> map = Map.of(\"key1\",\"value1\", \"key2\", \"value2\"); \n//remember to first import java.util.*; first  //you can swap out string or integer for other data types Map<String, Integer> d = new HashMap<>(); \n   HashMap<Integer,String> map=new HashMap<Integer,String>();//Creating HashMap     \nHashMap<Integer,String> map=new HashMap<Integer,String>();//key is integer, value is String\n",
    "reg_date": "2021-10-12T12:06:33.000Z"
  },
  {
    "id": 3504,
    "keyword": null,
    "link": null,
    "title": " new in japanese",
    "description": "atarashii \n",
    "reg_date": "2021-10-12T12:06:33.000Z"
  },
  {
    "id": 3505,
    "keyword": null,
    "link": null,
    "title": " nextchar in java",
    "description": "Scanner scanner = new Scanner(System.in); char ch = scanner.next().charAt(0);\n",
    "reg_date": "2021-10-12T12:06:33.000Z"
  },
  {
    "id": 3506,
    "keyword": null,
    "link": null,
    "title": " nginx change root directory",
    "description": "edit file  > sudo vim /etc/nginx/sites-available/default  server {     listen 80;     listen [::]:80;     root /mnt/volume-mn1/html; # # # change this # # #     index  index.php index.html index.htm;     server_name  example.com www.example.com;      location / {     try_files $uri $uri/ /index.php?$args;             }     ... }  save file  make sure file is ok  > sudo nginx -t  restart nginx  > sudo systemctl reload nginx.service\n",
    "reg_date": "2021-10-12T12:06:33.000Z"
  },
  {
    "id": 3507,
    "keyword": null,
    "link": null,
    "title": " no java development kit (jdk) found flutter",
    "description": "$ flutter doctor  No Java Development Kit (JDK) found; You must have the environment variable JAVA_HOME set and the java binary in your PATH. You can download the JDK from https://www.oracle.com/technetwork/java/javase/downloads/. \n",
    "reg_date": "2021-10-12T12:06:33.000Z"
  },
  {
    "id": 3508,
    "keyword": null,
    "link": null,
    "title": " no suitable driver found for jdbc:mysql",
    "description": "This error occurs if JDBC is not able to find a suitable driver for the URL format passed to the getConnection() method e.g.\"jdbc:mysql://\" in our case.  In order to solve this error, you need the MySQL JDBC driver like \"mysql-connector-java-5.1.36.jar\" in your classpath.\nConnection con = null; try {     //registering the jdbc driver here, your string to use      //here depends on what driver you are using.     Class.forName(\"something.jdbc.driver.YourFubarDriver\");        con = DriverManager.getConnection(\"jdbc:apache:commons:dbcp:test\"); } catch (SQLException e) {     throw new RuntimeException(e); }\n",
    "reg_date": "2021-10-12T12:06:34.000Z"
  },
  {
    "id": 3509,
    "keyword": null,
    "link": null,
    "title": " not equal java",
    "description": "if(5 != 4) // != means \"not equal to\"   \treturn true;\n// Int version int i = 2; if (i != 3) {}  // String version String s = \"a\"; if(!s.equals(\"b\")) {}\n",
    "reg_date": "2021-10-12T12:06:34.000Z"
  },
  {
    "id": 3510,
    "keyword": null,
    "link": null,
    "title": " not running on tomcat manager app",
    "description": "package com.onclickinfo.tnoadmin;  import java.io.IOException; import javax.servlet.Filter; import javax.servlet.FilterChain; import javax.servlet.FilterConfig; import javax.servlet.ServletException; import javax.servlet.ServletRequest; import javax.servlet.ServletResponse; import javax.servlet.http.HttpServletRequest; import javax.servlet.http.HttpServletResponse; import org.slf4j.Logger; import org.slf4j.LoggerFactory; import org.springframework.stereotype.Component;  @Component public class SimpleCORSFilter implements Filter {  \tprivate final Logger log = LoggerFactory.getLogger(SimpleCORSFilter.class);  \tpublic SimpleCORSFilter() { \t\tlog.info(\"SimpleCORSFilter initiliazed!\"); \t}  \t@Override \tpublic void doFilter(ServletRequest req, ServletResponse res, FilterChain chain) throws IOException, ServletException { \t\tlog.info(\"SimpleCORSFilter doFilter START \"); \t\tHttpServletRequest request = (HttpServletRequest) req; \t\tHttpServletResponse response = (HttpServletResponse) res;  \t\tresponse.setHeader(\"Access-Control-Allow-Origin\", request.getHeader(\"Origin\")); \t\tresponse.setHeader(\"Access-Control-Allow-Credentials\", \"true\"); \t\tresponse.setHeader(\"Access-Control-Allow-Methods\", \"POST, GET, OPTIONS, DELETE\"); \t\tresponse.setHeader(\"Access-Control-Max-Age\", \"3600\"); \t\tresponse.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type, Accept, X-Requested-With, remember-me\");  \t\tchain.doFilter(req, res); \t\tlog.info(\"SimpleCORSFilter doFilter END\"); \t}  \t/* \t@Override \tpublic void init(FilterConfig filterConfig) { \t}  \t@Override \tpublic void destroy() { \t} \t*/  } \nTomcat manager/html is not available?   You have to check if you have the folder with name manager inside the folder webapps in your tomcat.  Rubens-MacBook-Pro:tomcat rfanjul$ ls -la webapps/ total 16 drwxr-xr-x   8 rfanjul  staff   272 21 May 12:20 . drwxr-xr-x  14 rfanjul  staff   476 21 May 12:22 .. -rw-r--r--@  1 rfanjul  staff  6148 21 May 12:20 .DS_Store drwxr-xr-x  19 rfanjul  staff   646 17 Feb 15:13 ROOT drwxr-xr-x  51 rfanjul  staff  1734 17 Feb 15:13 docs drwxr-xr-x   6 rfanjul  staff   204 17 Feb 15:13 examples drwxr-xr-x   7 rfanjul  staff   238 17 Feb 15:13 host-manager drwxr-xr-x   8 rfanjul  staff   272 17 Feb 15:13 manager After that you will be sure that you have this permmint for you user in the file conf/tomcat-users.xml:  <role rolename=\"admin-gui\"/> <role rolename=\"manager-gui\"/> <user username=\"test\" password=\"test\" roles=\"admin-gui,manager-gui\"/> restart tomcat and stat tomcat again.  sh bin/shutdown.sh  sh bin/startup.sh I hope that will works fine for you.  \n",
    "reg_date": "2021-10-12T12:06:34.000Z"
  },
  {
    "id": 3511,
    "keyword": null,
    "link": null,
    "title": " notification manager android",
    "description": "NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(yourContext.getApplicationContext(), \"notify_001\"); Intent ii = new Intent(yourContext.getApplicationContext(), YourMainActivty.class); PendingIntent pendingIntent = PendingIntent.getActivity(yourContext, 0, ii, 0);  NotificationCompat.BigTextStyle bigText = new NotificationCompat.BigTextStyle(); bigText.bigText(notificationsTextDetailMode); //detail mode is the \"expanded\" notification bigText.setBigContentTitle(notificationTitleDetailMode); bigText.setSummaryText(usuallyAppVersionOrNumberOfNotifications); //small text under notification  mBuilder.setContentIntent(pendingIntent); mBuilder.setSmallIcon(R.mipmap.ic_launcher); //notification icon mBuilder.setContentTitle(notificationTitle); //main title mBuilder.setContentText(notificationText); //main text when you \"haven't expanded\" the notification yet mBuilder.setPriority(Notification.PRIORITY_MAX); mBuilder.setStyle(bigText);  NotificationManager mNotificationManager = (NotificationManager) yourContext.getSystemService(Context.NOTIFICATION_SERVICE);  NotificationChannel channel = new NotificationChannel(\"notify_001\",                                                       \"Channel human readable title\",                                                       NotificationManager.IMPORTANCE_DEFAULT); if (mNotificationManager != null) {   mNotificationManager.createNotificationChannel(channel); }  if (mNotificationManager != null) {   mNotificationManager.notify(0, mBuilder.build()); }\npackage com.example.notificationdemo;  import android.app.Activity; import android.app.NotificationManager; import android.app.PendingIntent; import android.content.Context; import android.content.Intent; import android.support.v4.app.NotificationCompat; import android.os.Bundle; import android.view.View; import android.widget.Button;  public class MainActivity extends Activity {    Button b1;    @Override    protected void onCreate(Bundle savedInstanceState) {       super.onCreate(savedInstanceState);       setContentView(R.layout.activity_main);        b1 = (Button)findViewById(R.id.button);       b1.setOnClickListener(new View.OnClickListener() {          @Override          public void onClick(View v) {             addNotification();          }       });    }     private void addNotification() {       NotificationCompat.Builder builder =          new NotificationCompat.Builder(this)          .setSmallIcon(R.drawable.abc)          .setContentTitle(\"Notifications Example\")          .setContentText(\"This is a test notification\");        Intent notificationIntent = new Intent(this, MainActivity.class);       PendingIntent contentIntent = PendingIntent.getActivity(this, 0, notificationIntent,          PendingIntent.FLAG_UPDATE_CURRENT);       builder.setContentIntent(contentIntent);        // Add as notification       NotificationManager manager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);       manager.notify(0, builder.build());    } }\n",
    "reg_date": "2021-10-12T12:06:34.000Z"
  },
  {
    "id": 3512,
    "keyword": null,
    "link": null,
    "title": " nth prime number java",
    "description": "import java.util.Scanner; public class NthPrime {   public static void main(String[] args) {     Scanner sc = new Scanner(System.in);     System.out.print(\"Enter n to compute the nth prime number: \");     int nth = sc.nextInt();      int num, count, i;     num=1;     count=0;       while (count < nth){       num=num+1;       for (i = 2; i <= num; i++){ //Here we will loop from 2 to num         if (num % i == 0) {           break;         }       }       if ( i == num){//if it is a prime number         count = count+1;       }     }     System.out.println(\"Value of nth prime: \" + num);   } }\n40076 \n78682097\n",
    "reg_date": "2021-10-12T12:06:34.000Z"
  },
  {
    "id": 3513,
    "keyword": null,
    "link": null,
    "title": " null character in java",
    "description": "\\u0000\n",
    "reg_date": "2021-10-12T12:06:34.000Z"
  },
  {
    "id": 3514,
    "keyword": null,
    "link": null,
    "title": " number format java",
    "description": "i will refer this site just read it and you will understand everything i hope this help:https://zetcode.com/java/numberformat/\ndouble value = 4.2352989244d; String.format(\"%.2f\", value) //output \"4.24\"); String.format(\"%.3f\", value)//output(\"4.235\");\n",
    "reg_date": "2021-10-12T12:06:34.000Z"
  },
  {
    "id": 3515,
    "keyword": null,
    "link": null,
    "title": " number of occurence string in java",
    "description": "public class StringNumberOfOccurenceLetter {      private static int countOccurences(String word, char character){          int count = 0;         for (int i = 0; i < word.length() ; i++) {             if (word.charAt(i)==character){                 count++;             }         }         return count;      }          public static void main(String[] args) {           int count = countOccurences(\"dddssad\", 'a');     }   }\n",
    "reg_date": "2021-10-12T12:06:34.000Z"
  },
  {
    "id": 3516,
    "keyword": null,
    "link": null,
    "title": " number to char java",
    "description": "int a = 65;   char c = (char)a;  System.out.print(c);// Printing: A\nchar b = Integer.toString(a);//7-->\"7\"  char b = (char) b;//65-->\"A\"\nchar a = (char) 65;\n",
    "reg_date": "2021-10-12T12:06:35.000Z"
  },
  {
    "id": 3517,
    "keyword": null,
    "link": null,
    "title": " numberformatexception",
    "description": "package com.devdaily.javasamples;  public class ConvertStringToNumber {      public static void main(String[] args) {         try {             // intentional error             String s = \"FOOBAR\";             int i = Integer.parseInt(s);              // this line of code will never be reached             System.out.println(\"int value = \" + i);         }         catch (NumberFormatException nfe) {             nfe.printStackTrace();         }     }  } \nThrown to indicate that the application has attempted to convert a string to one of the numeric types, but that the string does not have the appropriate format.\n",
    "reg_date": "2021-10-12T12:06:35.000Z"
  },
  {
    "id": 3518,
    "keyword": null,
    "link": null,
    "title": " object-oriented programming",
    "description": "class Person {  void walk() {   System.out.println(&ldquo;Can Run&hellip;.&rdquo;);  } } class Employee extends Person {  void walk() {   System.out.println(&ldquo;Running Fast&hellip;&rdquo;);  }  public static void main(String arg[]) {   Person p = new Employee(); //upcasting   p.walk();  } }\n",
    "reg_date": "2021-10-12T12:06:35.000Z"
  },
  {
    "id": 3519,
    "keyword": null,
    "link": null,
    "title": " object orientation in java",
    "description": "class Person {  void walk() {   System.out.println(&ldquo;Can Run&hellip;.&rdquo;);  } } class Employee extends Person {  void walk() {   System.out.println(&ldquo;Running Fast&hellip;&rdquo;);  }  public static void main(String arg[]) {   Person p = new Employee(); //upcasting   p.walk();  } }\n",
    "reg_date": "2021-10-12T12:06:35.000Z"
  },
  {
    "id": 3520,
    "keyword": null,
    "link": null,
    "title": " object to array java",
    "description": "// With streams map your object array to an int array Integer intArray[] = Arrays.stream(objArray)                 .map(Object::toString)                 .map(Integer::valueOf)                 .toArray(Integer[]::new);\n",
    "reg_date": "2021-10-12T12:06:35.000Z"
  },
  {
    "id": 3521,
    "keyword": null,
    "link": null,
    "title": " object type in java",
    "description": "YourObject s = new YourObject(); s.someMethod(args); \n",
    "reg_date": "2021-10-12T12:06:35.000Z"
  },
  {
    "id": 3522,
    "keyword": null,
    "link": null,
    "title": " objectmapper maven Dependency",
    "description": "<dependency>     <groupId>com.fasterxml.jackson.core</groupId>     <artifactId>jackson-databind</artifactId>     <version>2.11.1</version> </dependency> \n",
    "reg_date": "2021-10-12T12:06:35.000Z"
  },
  {
    "id": 3523,
    "keyword": null,
    "link": null,
    "title": " objectoutputstream exemple",
    "description": "public static void main(String[] args) throws IOException, ClassNotFoundException {   Obj array[] = new Obj[10];   for (int i = 0; i < array.length; i++) {     array[i] = new Emp(i);   }   try {     ObjectOutputStream fOUT = new ObjectOutputStream(new FileOutputStream(\"prodotti.dat\"));     for (int i = 0; i < array.length; i++) {       fOUT.writeObject(array[i]);     }     fOUT.close();   } catch (IOException e) {     System.out.println(\"Errore nella scrittura\");   }   ObjectInputStream fIN = new ObjectInputStream(new FileInputStream(\"prodotti.dat\"));   while (true) {     try {       Obj p = (Obj) fIN.readObject();       System.out.println(Obj.method());     } catch (EOFException e) {       break;     }   } }\n",
    "reg_date": "2021-10-12T12:06:35.000Z"
  },
  {
    "id": 3524,
    "keyword": null,
    "link": null,
    "title": " observer pattern java",
    "description": "class Signal extends Observable {    void setData(byte[] lbData){     setChanged(); // Positionne son indicateur de changement     notifyObservers(); // (1) notification   } } \nclass JPanelSignal extends JPanel implements Observer {    void init(Signal lSigAObserver) {     lSigAObserver.addObserver(this); // (2) ajout d'observateur   }    void update(Observable observable, Object objectConcerne) {     repaint();  // (3) traitement de l'observation   } } \n",
    "reg_date": "2021-10-12T12:06:36.000Z"
  },
  {
    "id": 3525,
    "keyword": null,
    "link": null,
    "title": " ocha in japanese",
    "description": "atarashii \nupvote if you feel terrible\n",
    "reg_date": "2021-10-12T12:06:36.000Z"
  },
  {
    "id": 3526,
    "keyword": null,
    "link": null,
    "title": " octal to binary in java",
    "description": "public class UsingtoOctalStringMethod {    public static void main(String[] args)    {       String strNumber = \"100101\";       int binary = Integer.parseInt(strNumber, 2);       String strOctal = Integer.toOctalString(binary);       System.out.println(\"Octal value is: \" + strOctal);    } }\nimport java.util.Scanner; public class OctalToBinaryJava {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter octal number: \");       int octal = Integer.parseInt(sc.nextLine(), 8);       String strBinary = Integer.toBinaryString(octal);       System.out.println(\"Binary value is: \" + strBinary);       sc.close();    } }\npublic class BinaryToOctal {    public static void main(String[] args)    {       long binaryNumber = 1010111;       int octalNumber = convertToOctal(binaryNumber);       System.out.println(binaryNumber + \" in binary is equal to \" + octalNumber + \" in octal.\");    }    public static int convertToOctal(long binaryNumber)    {       int octal = 0, decimal = 0, a = 0;       while(binaryNumber != 0)       {          decimal += (binaryNumber % 10) * Math.pow(2, a);          ++a;          binaryNumber /= 10;       }       a = 1;       while(decimal != 0)       {          octal += (decimal % 8) * a;          decimal /= 8;          a *= 10;       }       return octal;    } }\n",
    "reg_date": "2021-10-12T12:06:36.000Z"
  },
  {
    "id": 3527,
    "keyword": null,
    "link": null,
    "title": " octal to hexadecimal in java",
    "description": "import java.util.Scanner; public class OctalToHexadecimal {    public static void main(String[] args)    {       String strOctalNumber, strHexNumber;       Scanner sc = new Scanner(System.in);       System.out.print(\"Please enter octal number: \");       strOctalNumber = sc.nextLine();       int decimalNumber = Integer.parseInt(strOctalNumber, 8);       strHexNumber = Integer.toHexString(decimalNumber);       System.out.print(\"Hexadecimal value of \" + strOctalNumber + \" is: \\n\");       System.out.print(strHexNumber);       sc.close();    } }\nimport java.util.Scanner; public class HexadecimalToOctal {    public static void main(String[] args)    {       int decimalNumber, a = 1, b;       int[] octalNumber = new int[100];       Scanner sc = new Scanner(System.in);       System.out.print(\"Please enter a hexadecimal number: \");       String strHexNumber = sc.nextLine();       // converting hexadecimal number to decimal number       decimalNumber = hexToDecimal(strHexNumber);       // converting decimal to octal       while(decimalNumber != 0)       {          octalNumber[a++] = decimalNumber % 8;          decimalNumber = decimalNumber / 8;       }       System.out.print(\"Octal number is: \");       for(b = a - 1; b > 0; b--)       {          System.out.print(octalNumber[b]);       }       System.out.print(\"\\n\");       sc.close();    }    public static int hexToDecimal(String str)    {       String strDigits = \"0123456789ABCDEF\";       str = str.toUpperCase();       int value = 0;       for(int a = 0; a < str.length(); a++)       {          char ch = str.charAt(a);          int deci = strDigits.indexOf(ch);          value = 16 * value + deci;       }       return value;    } }\n",
    "reg_date": "2021-10-12T12:06:36.000Z"
  },
  {
    "id": 3528,
    "keyword": null,
    "link": null,
    "title": " odd are even in java",
    "description": "import java.util.Scanner;  class CheckEvenOdd {   public static void main(String args[])   {     int num;     System.out.println(\"Enter an Integer number:\");      //The input provided by user is stored in num     Scanner input = new Scanner(System.in);     num = input.nextInt();      /* If number is divisible by 2 then it's an even number      * else odd number*/     if ( num % 2 == 0 )         System.out.println(\"Entered number is even\");      else         System.out.println(\"Entered number is odd\");   } }\n",
    "reg_date": "2021-10-12T12:06:36.000Z"
  },
  {
    "id": 3529,
    "keyword": null,
    "link": null,
    "title": " on selected item changed listview javafx",
    "description": "myListView.getSelectionModel().selectedItemProperty().addListener(new ChangeListener<MyDataModel>() {      @Override     public void changed(ObservableValue<? extends MyDataModel> observable, MyDataModel oldValue, MyDataModel newValue) {         // Your action here         System.out.println(\"Selected item: \" + newValue);     } }); \n",
    "reg_date": "2021-10-12T12:06:36.000Z"
  },
  {
    "id": 3530,
    "keyword": null,
    "link": null,
    "title": " on touch listener android",
    "description": "imageButton.setOnTouchListener(new OnTouchListener() {     @Override     public boolean onTouch(View v, MotionEvent event) {         if(event.getAction() == MotionEvent.ACTION_UP){              // Do what you want             return true;         }         return false;     } }); \nprivate View.OnTouchListener handleTouch = new View.OnTouchListener() {      @Override     public boolean onTouch(View v, MotionEvent event) {          int x = (int) event.getX();         int y = (int) event.getY();          switch (event.getAction()) {             case MotionEvent.ACTION_DOWN:                 Log.i(\"TAG\", \"touched down\");                 break;             case MotionEvent.ACTION_MOVE:                 Log.i(\"TAG\", \"moving: (\" + x + \", \" + y + \")\");                 break;             case MotionEvent.ACTION_UP:                 Log.i(\"TAG\", \"touched up\");                 break;         }          return true;     } }; \n",
    "reg_date": "2021-10-12T12:06:36.000Z"
  },
  {
    "id": 3531,
    "keyword": null,
    "link": null,
    "title": " onclick listener android",
    "description": " Name.setOnClickListener(new View.OnClickListener() {             @Override             public void onClick(View view) {                 startActivity(new Intent(MainActivity.this,FileName.class));             }         });\nButton myButton; awesomeButton = new Button(this); awesomeButton.setOnClickListener(new View.OnClickListener() { \t@Override     public void onClick(View v) {     \tstartActivity(new Intent(MainActivity.this,NewActivity.class));     }); }\npublic void clickFunction (View view){}\n",
    "reg_date": "2021-10-12T12:06:36.000Z"
  },
  {
    "id": 3532,
    "keyword": null,
    "link": null,
    "title": " onclicklistener in android studio",
    "description": " Name.setOnClickListener(new View.OnClickListener() {             @Override             public void onClick(View view) {                 startActivity(new Intent(MainActivity.this,FileName.class));             }         });\nButton myButton; awesomeButton = new Button(this); awesomeButton.setOnClickListener(new View.OnClickListener() { \t@Override     public void onClick(View v) {     \tstartActivity(new Intent(MainActivity.this,NewActivity.class));     }); }\npublic void clickFunction (View view){}\n",
    "reg_date": "2021-10-12T12:06:36.000Z"
  },
  {
    "id": 3533,
    "keyword": null,
    "link": null,
    "title": " one line if statement java",
    "description": "statement ? true \t: \tfalse   ^\t\t  |\t ^\t\t\t  ^ condition |   (instruction)   \t\t  |  If the statement:     \t\t  |\tis true | is false --------------------------------------------------------------------------------  Example: int i = 10;  String out = i > 8 ? \"Bigger than Eight!\" : \"Smaller than Eight!\"; System.out.println(out); \nstatement ? true : false\n",
    "reg_date": "2021-10-12T12:06:36.000Z"
  },
  {
    "id": 3534,
    "keyword": null,
    "link": null,
    "title": " online java code fixer",
    "description": "",
    "reg_date": "2021-10-12T12:06:37.000Z"
  },
  {
    "id": 3535,
    "keyword": null,
    "link": null,
    "title": " only portrait mode android studio",
    "description": "<activity android:name=\".YourActivity\"     android:configChanges=\"orientation\"     android:screenOrientation=\"portrait\"/>\n",
    "reg_date": "2021-10-12T12:06:37.000Z"
  },
  {
    "id": 3536,
    "keyword": null,
    "link": null,
    "title": " ontouch android",
    "description": "imageButton.setOnTouchListener(new OnTouchListener() {     @Override     public boolean onTouch(View v, MotionEvent event) {         if(event.getAction() == MotionEvent.ACTION_UP){              // Do what you want             return true;         }         return false;     } }); \n",
    "reg_date": "2021-10-12T12:06:37.000Z"
  },
  {
    "id": 3537,
    "keyword": null,
    "link": null,
    "title": " open camera or gallery on button click android",
    "description": "// Android Open Camera Intent intent = new Intent(\"android.media.action.IMAGE_CAPTURE\"); startActivity(intent);\n",
    "reg_date": "2021-10-12T12:06:37.000Z"
  },
  {
    "id": 3538,
    "keyword": null,
    "link": null,
    "title": " open file java",
    "description": "import java.io.*;  public class openFile {      public static void main(String[] args) {         try{             File file = new File(\"C:\\\\file.txt\");         }catch(Exception e){             e.printStackTrace();         }     }      }\ntry (Stream<String> stream = Files.lines(Paths.get(String.valueOf(new File(\"yourFile.txt\"))))) { \tstream.forEach(System.out::println); } catch (IOException e) { \te.printStackTrace(); }\n",
    "reg_date": "2021-10-12T12:06:37.000Z"
  },
  {
    "id": 3539,
    "keyword": null,
    "link": null,
    "title": " open gallery android",
    "description": "// Select Image From Gallery Intent intent = new Intent(); intent.setType(\"image/*\"); intent.setAction(Intent.ACTION_GET_CONTENT); startActivityForResult(Intent.createChooser(intent, \"Select Picture\"),SELECT_IMAGE);  // Override this method too public void onActivityResult(int requestCode, int resultCode, Intent data) {     super.onActivityResult(requestCode, resultCode, data);     if (requestCode == SELECT_IMAGE) {         if (resultCode == Activity.RESULT_OK) {             if (data != null) {                 try {                     Bitmap bitmap = MediaStore.Images.Media.getBitmap(getActivity().getContentResolver(), data.getData());                 } catch (IOException e) {                     e.printStackTrace();                 }             }         } else if (resultCode == Activity.RESULT_CANCELED)  {             Toast.makeText(getActivity(), \"Canceled\", Toast.LENGTH_SHORT).show();         }     } }\nIntent i = new Intent(Intent.ACTION_PICK,android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);  startActivityForResult(i, RESULT_LOAD_IMAGE);\n",
    "reg_date": "2021-10-12T12:06:37.000Z"
  },
  {
    "id": 3540,
    "keyword": null,
    "link": null,
    "title": " open link in android studio",
    "description": "Intent browserIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(\"http://www.google.com\")); startActivity(browserIntent);\n",
    "reg_date": "2021-10-12T12:06:37.000Z"
  },
  {
    "id": 3541,
    "keyword": null,
    "link": null,
    "title": " open website from android activity",
    "description": "Intent intent = new Intent(Intent.ACTION_VIEW).setData(Uri.parse(\"http://www.stackoverflow.com\"));       startActivity(intent); \n",
    "reg_date": "2021-10-12T12:06:37.000Z"
  },
  {
    "id": 3542,
    "keyword": null,
    "link": null,
    "title": " operador ternario java",
    "description": "resultado = (condicion)?valor1:valor2;\nmayor=(x>y)?x:y;\n",
    "reg_date": "2021-10-12T12:06:37.000Z"
  },
  {
    "id": 3543,
    "keyword": null,
    "link": null,
    "title": " optional throw if present",
    "description": "Optional.of(usuarios.findByEmail(usuario.getEmail())).ifPresent(param -> {       throw new IllegalArgumentException(\"Only Strings allowed in path parameters.\")     });\n",
    "reg_date": "2021-10-12T12:06:38.000Z"
  },
  {
    "id": 3544,
    "keyword": null,
    "link": null,
    "title": " ordering test in junit",
    "description": "By adding @TestMethodOrder annotation on top of class and  than @Order tag on each test with giving them number   // these are all available option for ordering your tests //@TestMethodOrder(OrderAnnotation.class) //@TestMethodOrder(Random.class) //@TestMethodOrder(MethodName.class) // default options  For Example :  @TestMethodOrder(MethodOrderer.OrderAnnotation.class) public class TestOrderingInJunit5 {      @Order(3)     @DisplayName(\"3. Test A method\")     @Test     public void testA(){         System.out.println(\"running test A\");     }     @Order(1)     @DisplayName(\"1. Test C method\")     @Test     public void testC(){         System.out.println(\"running test C\");     }     @Order(4)     @DisplayName(\"4. Test D method\")     @Test     public void testD(){         System.out.println(\"running test D\");     }     @Order(2)     @DisplayName(\"2. Test B method\")     @Test     public void testB(){         System.out.println(\"running test B\");     }               In this case it will print      1. Test C     2. Test B     3. Test A     4. Test D\n@TestMethodOrder(OrderAnnotation.class) public class OrderAnnotationUnitTest {     private static StringBuilder output = new StringBuilder(\"\");           @Test     @Order(1)         public void firstTest() {         output.append(\"a\");     }           @Test     @Order(2)         public void secondTest() {         output.append(\"b\");     }        @Test     @Order(3)         public void thirdTest() {         output.append(\"c\");     }        @AfterAll     public static void assertOutput() {         assertEquals(output.toString(), \"abc\");     } } \n",
    "reg_date": "2021-10-12T12:06:38.000Z"
  },
  {
    "id": 3545,
    "keyword": null,
    "link": null,
    "title": " org.mockito.exceptions.misusing.WrongTypeOfReturnValue",
    "description": "//use  \tdoReturn(fooBar).when(bar).getFoo()      //instead of \twhen(bar.getFoo()).thenReturn(fooBar)\n",
    "reg_date": "2021-10-12T12:06:38.000Z"
  },
  {
    "id": 3546,
    "keyword": null,
    "link": null,
    "title": " org.sonar.java.AnalysisException: Please provide compiled classes of your project with sonar.java.binaries property",
    "description": "sonar.projectVersion=1.0 sonar.sources=src/main/java sonar.sourceEncoding=UTF-8 sonar.language=java sonar.java.binaries=target/classes \n",
    "reg_date": "2021-10-12T12:06:38.000Z"
  },
  {
    "id": 3547,
    "keyword": null,
    "link": null,
    "title": " output java",
    "description": "class Output {     public static void main(String[] args) {     \t         System.out.println(\"1. println \");         System.out.println(\"2. println \");     \t         System.out.print(\"1. print \");         System.out.print(\"2. print\");     } } \n",
    "reg_date": "2021-10-12T12:06:38.000Z"
  },
  {
    "id": 3548,
    "keyword": null,
    "link": null,
    "title": " ova definition",
    "description": "Original video animation, abbreviated as OVA and sometimes as OAV, are Japanese animated films and series made specially for release in home video formats without prior showings on television or in theatres, though the first part of an OVA series may be broadcast for promotional purposes. Wikipedia\n",
    "reg_date": "2021-10-12T12:06:38.000Z"
  },
  {
    "id": 3549,
    "keyword": null,
    "link": null,
    "title": " overload and override in java",
    "description": "Method overloading is providing two separate methods in a class with the same name but different arguments, while the method return type may or may not be different, which allows us to reuse the same method name.  Method overriding means defining a method in a child class that is already defined in the parent class with the same method signature, same name, arguments, and return type\nMethod overloading is providing two separate methods in a class with the same name but different arguments, while the method return type may or may not be different, which allows us to reuse the same method name.  Method overriding means defining a method in a child class that is already defined in the parent class with the same method signature, same name, arguments, and return type (stesso return type o una sottoclasse, se &egrave; un oggetto in realt&agrave;)\nMethod overloading is providing two separate methods in a class with the same name but different arguments, while the method return type may or may not be different, which allows us to reuse the same method name.  Method overriding means defining a method in a child class that is already defined in the parent class with the same method signature, same name, arguments, and return type \n",
    "reg_date": "2021-10-12T12:06:38.000Z"
  },
  {
    "id": 3550,
    "keyword": null,
    "link": null,
    "title": " overloading and overriding in java",
    "description": "Method Overloading  Method overloading is providing two separate methods in a class  with the same name but different arguments, while the method return type  may or may not be different, which allows us to reuse the same method name. 1) Method Overloading occurs with in the same class 2) Since it involves with only one class inheritance is not involved. 3)In overloading return type need not be the same  4) Parameters must be different when we do overloading 5) Static polymorphism can be acheived using method overloading 6) In overloading one method can&rsquo;t hide the another  Method Overriding Overriding means same method name and same parameter,  occur in different class that has inheritance relationship.  we use method overriding to implement specific functionality to the method. 1) Method Overriding occurs between two classes superclass and subclass 2) Since method overriding occurs between superclass and subclass inheritance is involved. 3) In overriding return type must be same. 4) Parameters must be same. 5) Dynamic polymorphism can be acheived using method overriding. 6) In overriding subclass method hides that of the superclass method\nMethod overloading is providing two separate methods in a class with the same name but different arguments, while the method return type may or may not be different, which allows us to reuse the same method name.  Method overriding means defining a method in a child class that is already defined in the parent class with the same method signature, same name, arguments, and return type\nMethod overloading is providing two separate methods in a class with the same name but different arguments, while the method return type may or may not be different, which allows us to reuse the same method name.  Method overriding means defining a method in a child class that is already defined in the parent class with the same method signature, same name, arguments, and return type (stesso return type o una sottoclasse, se &egrave; un oggetto in realt&agrave;)\nMethod Overloading  Method overloading is providing two separate methods in a class  with the same name but different arguments, while the method return type  may or may not be different, which allows us to reuse the same method name. 1) Method Overloading occurs with in the same class 2) Since it involves with only one class inheritance is not involved. 3)In overloading return type need not be the same  4) Parameters must be different when we do overloading 5) Static polymorphism can be acheived using method overloading 6) In overloading one method can&rsquo;t hide the another  Method Overriding Overriding means same method name and same parameter,  occur in different class that has inheritance relationship.  we use method overriding to implement specific functionality to the method. 1) Method Overriding occurs between two classes superclass and subclass 2) Since method overriding occurs between superclass and subclass inheritance is involved. 3) In overriding return type must be same. 4) Parameters must be same. 5) Dynamic polymorphism can be acheived using method overriding. 6) In overriding subclass method hides that of the superclass method \nMethod Overloading  Method overloading is providing two separate methods in a class with the same name but different arguments, while the method return type  may or may not be different, which allows us to reuse the same method name. 1) Method Overloading occurs with in the same class 2) Since it involves with only one class inheritance is not involved. 3)In overloading return type need not be the same  4) Parameters must be different when we do overloading 5) Static polymorphism can be acheived using method overloading 6) In overloading one method can&rsquo;t hide the another  Method Overriding Overriding means same method name and same parameter,  occur in different class that has inheritance relationship.  we use method overriding to implement specific functionality to the method. 1) Method Overriding occurs between two classes superclass and subclass 2) Since method overriding occurs between superclass and subclass inheritance is involved. 3) In overriding return type must be same. 4) Parameters must be same. 5) Dynamic polymorphism can be acheived using method overriding. 6) In overriding subclass method hides that of the superclass method\nMethod Overloading:  Access modifier can be same or different,  Return-Type can be same or different,  Parameters MUST be different, Method name MUST be same,  any method can be overloaded  Method Overriding: After a method is inherited it is possible to change  the implantation of the method in the child class.  This concept is called overriding.  Method name, Parameter, and Return-Type MUST be same access modifier MUST be same or more visible,  MUST happen in the sub class,  ONLY the instance methods can be overridden @Override annotation MUST be applicable.  Static and Constructor cannot be override. We can use the @Override annotation before the method  to declare the overriding. EXAMPLE: get method WebDriver driver = new ChromeDriver();  driver.get(\"URL\") ==> opens the url from chrome  \n",
    "reg_date": "2021-10-12T12:06:38.000Z"
  },
  {
    "id": 3551,
    "keyword": null,
    "link": null,
    "title": " override equals java",
    "description": "1.\tpublic class Test 2.\t{ 3.\t\tprivate int num; 4.\t\tprivate String data; 5. 6.\t\tpublic boolean equals(Object obj) 7.\t\t{ 8.\t\t\tif(this == obj) 9.\t\t\t\treturn true; 10.\t\t\tif((obj == null) || (obj.getClass() != this.getClass())) 11.\t\t\t\treturn false; 12.\t\t\t// object must be Test at this point 13.\t\t\tTest test = (Test)obj; 14.\t\t\treturn num == test.num && 15.\t\t\t(data == test.data || (data != null && data.equals(test.data))); 16.\t\t} 26.\t\t// other methods 27.\t}\nclass Complex {   \tprivate double re, im;   \tpublic Complex(double re, double im) {  \t\tthis.re = re;  \t\tthis.im = im;  \t}   \t// Overriding equals() to compare two Complex objects  \t@Override \tpublic boolean equals(Object o) {   \t\t// If the object is compared with itself then return true  \t\tif (o == this) {  \t\t\treturn true;  \t\t}   \t\t/* Check if o is an instance of Complex or not  \t\t\"null instanceof [type]\" also returns false */ \t\tif (!(o instanceof Complex)) {  \t\t\treturn false;  \t\t}  \t\t \t\t// typecast o to Complex so that we can compare data members  \t\tComplex c = (Complex) o;  \t\t \t\t// Compare the data members and return accordingly  \t\treturn Double.compare(re, c.re) == 0 \t\t\t\t&& Double.compare(im, c.im) == 0;  \t}  }   // Driver class to test the Complex class  public class Main {   \tpublic static void main(String[] args) {  \t\tComplex c1 = new Complex(10, 15);  \t\tComplex c2 = new Complex(10, 15);  \t\tif (c1.equals(c2)) {  \t\t\tSystem.out.println(\"Equal \");  \t\t} else {  \t\t\tSystem.out.println(\"Not Equal \");  \t\t}  \t}  }  \n",
    "reg_date": "2021-10-12T12:06:38.000Z"
  },
  {
    "id": 3552,
    "keyword": null,
    "link": null,
    "title": " override onbackpressed in fragment",
    "description": "@Override public void onResume() {     super.onResume();      getView().setFocusableInTouchMode(true);     getView().requestFocus();     getView().setOnKeyListener(new View.OnKeyListener() {         @Override         public boolean onKey(View v, int keyCode, KeyEvent event) {             if (event.getAction() == KeyEvent.ACTION_UP && keyCode == KeyEvent.KEYCODE_BACK) {                 // handle back button's click listener                 Toast.makeText(getActivity(), \"Back press\", Toast.LENGTH_SHORT).show();                 return true;             }             return false;         }     });  } \n",
    "reg_date": "2021-10-12T12:06:38.000Z"
  },
  {
    "id": 3553,
    "keyword": null,
    "link": null,
    "title": " overriding equals method in java",
    "description": "1.\tpublic class Test 2.\t{ 3.\t\tprivate int num; 4.\t\tprivate String data; 5. 6.\t\tpublic boolean equals(Object obj) 7.\t\t{ 8.\t\t\tif(this == obj) 9.\t\t\t\treturn true; 10.\t\t\tif((obj == null) || (obj.getClass() != this.getClass())) 11.\t\t\t\treturn false; 12.\t\t\t// object must be Test at this point 13.\t\t\tTest test = (Test)obj; 14.\t\t\treturn num == test.num && 15.\t\t\t(data == test.data || (data != null && data.equals(test.data))); 16.\t\t} 26.\t\t// other methods 27.\t}\nclass Complex {   \tprivate double re, im;   \tpublic Complex(double re, double im) {  \t\tthis.re = re;  \t\tthis.im = im;  \t}   \t// Overriding equals() to compare two Complex objects  \t@Override \tpublic boolean equals(Object o) {   \t\t// If the object is compared with itself then return true  \t\tif (o == this) {  \t\t\treturn true;  \t\t}   \t\t/* Check if o is an instance of Complex or not  \t\t\"null instanceof [type]\" also returns false */ \t\tif (!(o instanceof Complex)) {  \t\t\treturn false;  \t\t}  \t\t \t\t// typecast o to Complex so that we can compare data members  \t\tComplex c = (Complex) o;  \t\t \t\t// Compare the data members and return accordingly  \t\treturn Double.compare(re, c.re) == 0 \t\t\t\t&& Double.compare(im, c.im) == 0;  \t}  }   // Driver class to test the Complex class  public class Main {   \tpublic static void main(String[] args) {  \t\tComplex c1 = new Complex(10, 15);  \t\tComplex c2 = new Complex(10, 15);  \t\tif (c1.equals(c2)) {  \t\t\tSystem.out.println(\"Equal \");  \t\t} else {  \t\t\tSystem.out.println(\"Not Equal \");  \t\t}  \t}  }  \n",
    "reg_date": "2021-10-12T12:06:39.000Z"
  },
  {
    "id": 3554,
    "keyword": null,
    "link": null,
    "title": " package javafx.fxml does not exist",
    "description": "sudo apt-get install openjdk-8-jre \nsudo cp /usr/share/java/openjfx/lib/* /usr/lib/jvm/java-1.8.0-openjdk-amd64/lib \n",
    "reg_date": "2021-10-12T12:06:39.000Z"
  },
  {
    "id": 3555,
    "keyword": null,
    "link": null,
    "title": " padding a string with 0 in java",
    "description": "String.format(\"\u0005d\", yournumber); //\u0005 means length of 5 // 25 becomes 00025\n",
    "reg_date": "2021-10-12T12:06:39.000Z"
  },
  {
    "id": 3556,
    "keyword": null,
    "link": null,
    "title": " pair in array",
    "description": "import java.io.*; import java.util.*;   public class Main {   public static void main (String[]args)   {       int a[] = { 1,2,3,4,5,6};      int n = a.length;                  int r = n-1;      for(int i=0;i<n;i++){          int l = i;          while(l<r){              System.out.print(\"(\"+a[l]+\",\"+a[r] + \")   \");              r--;          }          r=n-1;      }         } }\n",
    "reg_date": "2021-10-12T12:06:39.000Z"
  },
  {
    "id": 3557,
    "keyword": null,
    "link": null,
    "title": " palindrome function java",
    "description": "package test //The function below checks if a string is a palindrome //True = Is a palindrome & False = Not a palindrome \tpublic boolean isPalindromString(String text){     \tString reverse = reverse(text);       \tif(text.equals(reverse))     \t{         \treturn true;       \t}              \treturn false;     } //This function returns the reverse String of its input. //Ex. if given \"hello\", it will return \"olleh\" \tpublic String reverse(String input)     {      \t\tif(input == null || input.isEmpty())         { \t\t\treturn input;         }         \treturn input.charAt(input.length()- 1) + reverse(input.substring(0, input.length() - 1));     }\n",
    "reg_date": "2021-10-12T12:06:39.000Z"
  },
  {
    "id": 3558,
    "keyword": null,
    "link": null,
    "title": " palindrome in java",
    "description": "public static boolean checkPalindrome(String str) {            int len = str.length();      for(int i = 0; i < len / 2; i++)  {         if (str.charAt(i) != str.charAt(len - i - 1))             return false;     }     return true; }\nimport java.util.*;    class PalindromeExample2   {      public static void main(String args[])      {         String original, reverse = \"\"; // Objects of String class         Scanner in = new Scanner(System.in);          System.out.println(\"Enter a string/number to check if it is a palindrome\");         original = in.nextLine();          int length = original.length();          for ( int i = length - 1; i >= 0; i-- )            reverse = reverse + original.charAt(i);         if (original.equals(reverse))            System.out.println(\"Entered string/number is a palindrome.\");         else            System.out.println(\"Entered string/number isn't a palindrome.\");       }   }  \nimport java.util.Scanner;  public class Palindrome {   public static void main(String args[])   {     int num,temp,reverse=0;     Scanner input=new Scanner(System.in);     num=in.nextInt();     temp=num;     //code to reverse the number     while(temp!=0)     {       int d=temp\u0010; //extracts digit at the end       reverse=reverse*10+d;       temp/=10; //removes the digit at the end     }     // 'reverse' has the reverse version of the actual input, so we check     if(reverse==num)     {       System.out.println(\"Number is palindrome\");     }     else     {       System.out.println(\"Number is not palindrome\");     }   } }\npackage test //The function below checks if a string is a palindrome //True = Is a palindrome & False = Not a palindrome \tpublic boolean isPalindromString(String text){     \tString reverse = reverse(text);       \tif(text.equals(reverse))     \t{         \treturn true;       \t}              \treturn false;     } //This function returns the reverse String of its input. //Ex. if given \"hello\", it will return \"olleh\" \tpublic String reverse(String input)     {      \t\tif(input == null || input.isEmpty())         { \t\t\treturn input;         } return input.charAt(input.length()- 1) + reverse                          (input.substring(0, input.length() - 1));     }\npublic class PlaindromeTest1 {     public static void main(String[] args) {         Scanner input = new Scanner(System.in); System.out.println(\"Enter your words\"); // Whats up body? // ?ydob pu stahW         String word = input.nextLine();          String reversedWord = \"\";         // start from last index number.         for(int i = word.length()-1; i>=0; i-- ){            reversedWord += word.charAt(i);         }         System.out.println(reversedWord);         //Level ==> leveL //ey edip adanada pide ye :)         boolean palindrome = word.equalsIgnoreCase(reversedWord);          System.out.println(palindrome);          String str = \"Anna\";         String result = \"\";          for(int i = str.length()-1; i>=0; i-- ){             result += str.substring(i, i+1);             // result += str.charAt(i); // char at de olur         }         boolean result1 = str.equalsIgnoreCase(result);         System.out.println(result1);     }\npackage com.candidjava; import java.util.Scanner; public class PalindromeUptoN{\tpublic static void main(String[] args)\t{\t\tint n, b, rev = 0;\t\tScanner sc = new Scanner(System.in);\t\tSystem.out.println(\"Enter the Palindrome No N:\");\t\tint N = sc.nextInt();\t\tSystem.out.print(\"Palindrome numbers from 1 to N:\");\t\tfor (int i = 1; i <= N; i++)\t\t{\t\t\tn = i;\t\t\twhile (n > 0)\t\t\t{\t\t\t\tb = n % 10;\t\t\t\trev = rev * 10 + b;\t\t\t\tn = n / 10;\t\t\t}\t\t\tif (rev == i)\t\t\t{\t\t\t\tSystem.out.print(i + \" \");\t\t\t}\t\t\trev = 0;\t\t}\t} }\n",
    "reg_date": "2021-10-12T12:06:39.000Z"
  },
  {
    "id": 3559,
    "keyword": null,
    "link": null,
    "title": " palindrome number in java",
    "description": "public static boolean checkPalindrome(String str) {            int len = str.length();      for(int i = 0; i < len / 2; i++)  {         if (str.charAt(i) != str.charAt(len - i - 1))             return false;     }     return true; }\nimport java.util.*;    class PalindromeExample2   {      public static void main(String args[])      {         String original, reverse = \"\"; // Objects of String class         Scanner in = new Scanner(System.in);          System.out.println(\"Enter a string/number to check if it is a palindrome\");         original = in.nextLine();          int length = original.length();          for ( int i = length - 1; i >= 0; i-- )            reverse = reverse + original.charAt(i);         if (original.equals(reverse))            System.out.println(\"Entered string/number is a palindrome.\");         else            System.out.println(\"Entered string/number isn't a palindrome.\");       }   }  \nimport java.util.Scanner;  public class Palindrome {   public static void main(String args[])   {     int num,temp,reverse=0;     Scanner input=new Scanner(System.in);     num=in.nextInt();     temp=num;     //code to reverse the number     while(temp!=0)     {       int d=temp\u0010; //extracts digit at the end       reverse=reverse*10+d;       temp/=10; //removes the digit at the end     }     // 'reverse' has the reverse version of the actual input, so we check     if(reverse==num)     {       System.out.println(\"Number is palindrome\");     }     else     {       System.out.println(\"Number is not palindrome\");     }   } }\npackage test //The function below checks if a string is a palindrome //True = Is a palindrome & False = Not a palindrome \tpublic boolean isPalindromString(String text){     \tString reverse = reverse(text);       \tif(text.equals(reverse))     \t{         \treturn true;       \t}              \treturn false;     } //This function returns the reverse String of its input. //Ex. if given \"hello\", it will return \"olleh\" \tpublic String reverse(String input)     {      \t\tif(input == null || input.isEmpty())         { \t\t\treturn input;         }         \treturn input.charAt(input.length()- 1) + reverse(input.substring(0, input.length() - 1));     }\n public boolean isPalindrome(int x) {         String str = Integer.toString(x);         String reverse =  new StringBuilder(str).reverse().toString();         return  str.equals(reverse)?true:false;      }\npackage test //The function below checks if a string is a palindrome //True = Is a palindrome & False = Not a palindrome \tpublic boolean isPalindromString(String text){     \tString reverse = reverse(text);       \tif(text.equals(reverse))     \t{         \treturn true;       \t}              \treturn false;     } //This function returns the reverse String of its input. //Ex. if given \"hello\", it will return \"olleh\" \tpublic String reverse(String input)     {      \t\tif(input == null || input.isEmpty())         { \t\t\treturn input;         } return input.charAt(input.length()- 1) + reverse                          (input.substring(0, input.length() - 1));     }\n",
    "reg_date": "2021-10-12T12:06:39.000Z"
  },
  {
    "id": 3560,
    "keyword": null,
    "link": null,
    "title": " paper api maven",
    "description": "Maven Repo (for paper-api): <repository>     <id>papermc</id>     <url>https://papermc.io/repo/repository/maven-public/</url> </repository> Artifact Information: <dependency>     <groupId>com.destroystokyo.paper</groupId>     <artifactId>paper-api</artifactId>     <version>1.16.5-R0.1-SNAPSHOT</version>     <scope>provided</scope> </dependency>\n",
    "reg_date": "2021-10-12T12:06:39.000Z"
  },
  {
    "id": 3561,
    "keyword": null,
    "link": null,
    "title": " papermc api maven",
    "description": "Maven Repo (for paper-api): <repository>     <id>papermc</id>     <url>https://papermc.io/repo/repository/maven-public/</url> </repository> Artifact Information: <dependency>     <groupId>com.destroystokyo.paper</groupId>     <artifactId>paper-api</artifactId>     <version>1.16.5-R0.1-SNAPSHOT</version>     <scope>provided</scope> </dependency>\n",
    "reg_date": "2021-10-12T12:06:39.000Z"
  },
  {
    "id": 3562,
    "keyword": null,
    "link": null,
    "title": " parse string to int java",
    "description": "String myString = \"1234\"; int foo = Integer.parseInt(myString);\nint result = Integer.parseInt(number);\nint result = Integer.parseInt(\"500\"); System.out.println(result) // prints 500 as int\n\tString number = \"10\"; \tint result = Integer.parseInt(number);\t\t\t \tSystem.out.println(result); Copy\nString myString = \"1234\"; int number = Integer.parseInt(myString);\n\tString number = \"10\"; \tint result = Integer.parseInt(number);\t\t\t \tSystem.out.println(result); \n",
    "reg_date": "2021-10-12T12:06:39.000Z"
  },
  {
    "id": 3563,
    "keyword": null,
    "link": null,
    "title": " parseints(str) java",
    "description": "         int decimalExample = Integer.parseInt(\"20\");          int signedPositiveExample = Integer.parseInt(\"+20\");          int signedNegativeExample = Integer.parseInt(\"-20\");          int radixExample = Integer.parseInt(\"20\",16);          int stringExample = Integer.parseInt(\"geeks\",29);             // Uncomment the following code to check          // NumberFormatException             //   String invalidArguments = \"\";          //   int emptyString = Integer.parseInt(invalidArguments);          //   int outOfRangeOfInteger = Integer.parseInt(\"geeksforgeeks\",29);          //   int domainOfNumberSystem = Integer.parseInt(\"geeks\",28);             System.out.println(decimalExample);          System.out.println(signedPositiveExample);          System.out.println(signedNegativeExample);          System.out.println(radixExample);          System.out.println(stringExample);   Output:  20 20 -20 32 11670324 \n",
    "reg_date": "2021-10-12T12:06:39.000Z"
  },
  {
    "id": 3564,
    "keyword": null,
    "link": null,
    "title": " pascals triangle java",
    "description": "/* Author: Jeffrey Huang */ import java.util.*; public class PascalTriangleCreator {     public static long factorial(long n){         /*         The whole purpose of this method is to find the factorial of a number,         since java does not have a built in method for it. Calculating n choose          r is done using factorial, and since this code will be used repeatedly,         it is wise to put it in a separate method.         */         long factorial;         if (n==0){             factorial=1;         }         else{             factorial=1;             for (int counter=1;counter<=n;counter++){                 factorial=factorial*counter;             }         }         return factorial;     }          public static long FinalValue(long n, long r){         //Calculates n choose r by calling the factorial method.         return factorial(n) / ( factorial(n-r) * factorial(r) );     }       public static void main(String[] args) {      Scanner sc=new Scanner (System.in);      long rows=1;      long i,j;      while (rows!=0){   System.out.println(\"How many rows of Pascal's triangle would you like to print? (0 to stop; 1-20 rows)\");   rows=sc.nextLong();   //The following while loop ensures that the user cannot input an invalid number.   while (rows<0||rows>20){       System.out.println(\"Invalid input.\");       System.out.println(\"How many rows of Pascal's triangle would you like to print? (0 to stop; 1-20 rows)\");       rows=sc.nextLong();   }   /*   The following if else block makes the code more efficient. Otherwise, if the user    enters zero at any other point than at the start of the loop, the program will go    through the long process of trying to print a triangle before terminating the   program.       Using the following method, it is true that rows==0 is tested for twice, but   it shortens the execution time immensely. And we know that when zero is true   for the if statement, it is guaranteed to be true when breaking the loop.   */   if (rows==0){       System.out.println(\"Program terminated by user.\");   }   else{   for(i = 0; i < rows; i++) {       //Iterates through the number of rows required.          for(j = 0; j <= rows-i; j++){            System.out.print(\"   \");             //Iterates the printing of spaces.          }          for(j = 0; j <= i; j++){            if ((FinalValue(i, j))>9999) {              System.out.print(\" \");             }            else if ((FinalValue(i, j))>999){              System.out.print(\"  \");             }            else if ((FinalValue(i, j))>99){              System.out.print(\"   \");             }            else if ((FinalValue(i, j))>9){              System.out.print(\"    \");             }            else{             System.out.print(\"     \");             }             System.out.print(FinalValue(i, j));             //Prints a number of spaces plus a number.          }          System.out.println();         }         }      }  sc.close();   } }\n",
    "reg_date": "2021-10-12T12:06:40.000Z"
  },
  {
    "id": 3565,
    "keyword": null,
    "link": null,
    "title": " pass dto in post request body in spring bootg",
    "description": "public class PersonDTO {    private String firstName;   private String secondName;   // Formats output date when this DTO is passed through JSON   @JsonFormat(pattern = \"dd/MM/yyyy\")   // Allows dd/MM/yyyy date to be passed into GET request in JSON   @DateTimeFormat(pattern = \"dd/MM/yyyy\")   private Date dateOfBirth;    private String profession;   private BigDecimal salary;    public PersonDTO(       String firstName, String secondName, Date dateOfBirth, String profession, BigDecimal salary) {     this.firstName = firstName;     this.secondName = secondName;     this.dateOfBirth = dateOfBirth;     this.profession = profession;     this.salary = salary;   }    public PersonDTO() {}    public String getFirstName() {     return firstName;   }    public void setFirstName(String firstName) {     this.firstName = firstName;   }    public String getSecondName() {     return secondName;   }    public void setSecondName(String secondName) {     this.secondName = secondName;   }    public Date getDateOfBirth() {     return dateOfBirth;   }    public void setDateOfBirth(Date dateOfBirth) {     this.dateOfBirth = dateOfBirth;   }    public String getProfession() {     return profession;   }    public void setProfession(String profession) {     this.profession = profession;   }    public BigDecimal getSalary() {     return salary;   }    public void setSalary(BigDecimal salary) {     this.salary = salary;   } }\n",
    "reg_date": "2021-10-12T12:06:40.000Z"
  },
  {
    "id": 3566,
    "keyword": null,
    "link": null,
    "title": " pass list to intent in android java",
    "description": "First, make the class of the list implement Serializable.  public class Object implements Serializable{} Then you can just cast the list to (Serializable). Like so:  List<Object> list = new ArrayList<Object>(); myIntent.putExtra(\"LIST\", (Serializable) list); And to retrieve the list you do:  Intent i = getIntent(); list = (List<Object>) i.getSerializableExtra(\"LIST\"); \nIntent intent = new Intent(getApplicationContext(),YourActivity.class); Bundle bundle = new Bundle(); bundle.putParcelable(\"data\", sharedBookingObject); intent.putExtras(bundle); startActivity(intent);\n",
    "reg_date": "2021-10-12T12:06:40.000Z"
  },
  {
    "id": 3567,
    "keyword": null,
    "link": null,
    "title": " password encryption and decryption in java",
    "description": "import java.security.spec.KeySpec; import javax.crypto.Cipher; import javax.crypto.SecretKey; import javax.crypto.SecretKeyFactory; import javax.crypto.spec.DESedeKeySpec; import org.apache.commons.codec.binary.Base64;  public class TrippleDes {      private static final String UNICODE_FORMAT = \"UTF8\";     public static final String DESEDE_ENCRYPTION_SCHEME = \"DESede\";     private KeySpec ks;     private SecretKeyFactory skf;     private Cipher cipher;     byte[] arrayBytes;     private String myEncryptionKey;     private String myEncryptionScheme;     SecretKey key;      public TrippleDes() throws Exception {         myEncryptionKey = \"ThisIsSpartaThisIsSparta\";         myEncryptionScheme = DESEDE_ENCRYPTION_SCHEME;         arrayBytes = myEncryptionKey.getBytes(UNICODE_FORMAT);         ks = new DESedeKeySpec(arrayBytes);         skf = SecretKeyFactory.getInstance(myEncryptionScheme);         cipher = Cipher.getInstance(myEncryptionScheme);         key = skf.generateSecret(ks);     }       public String encrypt(String unencryptedString) {         String encryptedString = null;         try {             cipher.init(Cipher.ENCRYPT_MODE, key);             byte[] plainText = unencryptedString.getBytes(UNICODE_FORMAT);             byte[] encryptedText = cipher.doFinal(plainText);             encryptedString = new String(Base64.encodeBase64(encryptedText));         } catch (Exception e) {             e.printStackTrace();         }         return encryptedString;     }       public String decrypt(String encryptedString) {         String decryptedText=null;         try {             cipher.init(Cipher.DECRYPT_MODE, key);             byte[] encryptedText = Base64.decodeBase64(encryptedString);             byte[] plainText = cipher.doFinal(encryptedText);             decryptedText= new String(plainText);         } catch (Exception e) {             e.printStackTrace();         }         return decryptedText;     }       public static void main(String args []) throws Exception     {         TrippleDes td= new TrippleDes();          String target=\"imparator\";         String encrypted=td.encrypt(target);         String decrypted=td.decrypt(encrypted);          System.out.println(\"String To Encrypt: \"+ target);         System.out.println(\"Encrypted String:\" + encrypted);         System.out.println(\"Decrypted String:\" + decrypted);      }  } \npackage com.javapapers.java.security;  import java.io.FileInputStream; import java.io.FileOutputStream; import java.util.Random;  import javax.crypto.Cipher; import javax.crypto.SecretKey; import javax.crypto.SecretKeyFactory; import javax.crypto.spec.PBEKeySpec; import javax.crypto.spec.PBEParameterSpec;  public class FileEncryption {  \tpublic static void main(String[] args) throws Exception {  \t\tFileInputStream inFile = new FileInputStream(\"plainfile.txt\"); \t\tFileOutputStream outFile = new FileOutputStream(\"plainfile.des\");  \t\tString password = \"javapapers\"; \t\tPBEKeySpec pbeKeySpec = new PBEKeySpec(password.toCharArray()); \t\tSecretKeyFactory secretKeyFactory = SecretKeyFactory \t\t\t\t.getInstance(\"PBEWithMD5AndTripleDES\"); \t\tSecretKey secretKey = secretKeyFactory.generateSecret(pbeKeySpec);  \t\tbyte[] salt = new byte[8]; \t\tRandom random = new Random(); \t\trandom.nextBytes(salt);  \t\tPBEParameterSpec pbeParameterSpec = new PBEParameterSpec(salt, 100); \t\tCipher cipher = Cipher.getInstance(\"PBEWithMD5AndTripleDES\"); \t\tcipher.init(Cipher.ENCRYPT_MODE, secretKey, pbeParameterSpec); \t\toutFile.write(salt);  \t\tbyte[] input = new byte[64]; \t\tint bytesRead; \t\twhile ((bytesRead = inFile.read(input)) != -1) { \t\t\tbyte[] output = cipher.update(input, 0, bytesRead); \t\t\tif (output != null) \t\t\t\toutFile.write(output); \t\t}  \t\tbyte[] output = cipher.doFinal(); \t\tif (output != null) \t\t\toutFile.write(output);  \t\tinFile.close(); \t\toutFile.flush(); \t\toutFile.close(); \t}  }\n",
    "reg_date": "2021-10-12T12:06:40.000Z"
  },
  {
    "id": 3568,
    "keyword": null,
    "link": null,
    "title": " perimeter of parallelogram in java",
    "description": "import java.util.Scanner; public class PerimeterOfParallelogram {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter length of adjacent side of parallelogram: \");       double a = sc.nextDouble();       System.out.println(\"Please enter another length of adjacent side of parallelogram: \");       double b = sc.nextDouble();       double perimeter = 2 * (a + b);       System.out.println(\"perimeter of parallelogram is: \" + perimeter);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:06:40.000Z"
  },
  {
    "id": 3569,
    "keyword": null,
    "link": null,
    "title": " perimeter of rhombus in java",
    "description": "import java.util.Scanner; public class PerimeterOfRhombus {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       System.out.println(\"Please enter side of rhombus: \");       double side = sc.nextDouble();       double perimeter = 4 * side;       System.out.println(\"Perimeter of Rhombus is: \" + perimeter);       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:06:40.000Z"
  },
  {
    "id": 3570,
    "keyword": null,
    "link": null,
    "title": " phonegap push error: cannot find symbol import com.google.firebase.iid.FirebaseInstanceIdService;",
    "description": "// override the file: // platforms/android/app/src/main/java/com/adobe/phonegap/push/PushInstanceIDListenerService.java // by this content package com.adobe.phonegap.push;  import android.content.Intent; import android.content.Context; import android.content.SharedPreferences; import android.util.Log;  import com.google.firebase.iid.FirebaseInstanceId; import com.google.firebase.messaging.FirebaseMessagingService;  import org.json.JSONException;  import java.io.IOException;  public class PushInstanceIDListenerService extends FirebaseMessagingService implements PushConstants {     public static final String LOG_TAG = \"Push_InsIdService\";      @Override     public void onNewToken(String token) {         // Get updated InstanceID token.         String refreshedToken = FirebaseInstanceId.getInstance().getToken();         Log.d(LOG_TAG, \"Refreshed token: \" + refreshedToken);         // TODO: Implement this method to send any registration to your app's servers.         //sendRegistrationToServer(refreshedToken);     } }\n",
    "reg_date": "2021-10-12T12:06:40.000Z"
  },
  {
    "id": 3571,
    "keyword": null,
    "link": null,
    "title": " pi in java",
    "description": "use Math.pi to get the double value of pi\n",
    "reg_date": "2021-10-12T12:06:40.000Z"
  },
  {
    "id": 3572,
    "keyword": null,
    "link": null,
    "title": " picasso circle transformation android",
    "description": "import com.squareup.picasso.Transformation;  public class CircleTransform implements Transformation {     @Override     public Bitmap transform(Bitmap source) {         int size = Math.min(source.getWidth(), source.getHeight());          int x = (source.getWidth() - size) / 2;         int y = (source.getHeight() - size) / 2;          Bitmap squaredBitmap = Bitmap.createBitmap(source, x, y, size, size);         if (squaredBitmap != source) {             source.recycle();         }          Bitmap bitmap = Bitmap.createBitmap(size, size, source.getConfig());          Canvas canvas = new Canvas(bitmap);         Paint paint = new Paint();         BitmapShader shader = new BitmapShader(squaredBitmap,                 Shader.TileMode.CLAMP, Shader.TileMode.CLAMP);         paint.setShader(shader);         paint.setAntiAlias(true);          float r = size / 2f;         canvas.drawCircle(r, r, r, paint);          squaredBitmap.recycle();         return bitmap;     }      @Override     public String key() {         return \"circle\";     } }\n",
    "reg_date": "2021-10-12T12:06:40.000Z"
  },
  {
    "id": 3573,
    "keyword": null,
    "link": null,
    "title": " place values in a hashset",
    "description": "Set<String> set = new HashSet<>(Arrays.asList(\"a\", \"b\", \"c\"));\nHashSet<Integer> set=new HashSet<>(); //adding a new element set.add(10);\n",
    "reg_date": "2021-10-12T12:06:41.000Z"
  },
  {
    "id": 3574,
    "keyword": null,
    "link": null,
    "title": " play mp3 android java",
    "description": "MediaPlayer mediaPlayer; //In the onCreate Method mediaPlayer = MediaPlayer.create(this, R.raw.alarmclockbuzzer); //Sound file goes in \"raw\" folder in \"res\" folder mediaPlayer.start(); //plays the mp3 sound (doesn't need to be in oncreate)\n",
    "reg_date": "2021-10-12T12:06:41.000Z"
  },
  {
    "id": 3575,
    "keyword": null,
    "link": null,
    "title": " play sound on button click android studio",
    "description": "Button one = (Button) this.findViewById(R.id.button1); final MediaPlayer mp = MediaPlayer.create(this, R.raw.soho); one.setOnClickListener(new OnClickListener(){      public void onClick(View v) {         mp.start();     } });\npublic class MainActivity extends AppCompatActivity{ \tButton bt; \t \t@Override \tprotected void onCreate(Bundle savedInstanceState){ \t\tsuper.onCreate(savedInstanceState); \t\tsetContentView(R.layout.activity_main); \t\tbt = (Button)findViewById(R.id.clickme); \t\tfinal MediaPlayer mp = MediaPlayer.create(this, R.raw.sample); \t\tbt.setOnClickListener(new View.OnClickListener(){ \t\t\t@Overridepublic void onClick(View view){ \t\t\t\tnp.start(); \t\t\t} \t\t} \t} }\n",
    "reg_date": "2021-10-12T12:06:41.000Z"
  },
  {
    "id": 3576,
    "keyword": null,
    "link": null,
    "title": " pointers in java",
    "description": "Java does not have pointers.\nJava doesn't support pointers explicitly. But java uses pointer implicitly:-   Java uses pointers for manipulations of references   but these pointers are not available for outside use.  A pointer is only used as an address of a memory location. The java variales of oject type store the reference of the oject.  Basically the programmer can't write the pointer program in java.\nThere are no pointers in Java. However, there is a Pointer class in JNA, which is very likely NOT what are you looking for. The only way to get and use pointers is through using Unsafe. The mechanisms are implementation-dependent between JDKs and the Unsafe class may be available at sun.misc.Unsafe or at jdk.internal.misc.Unsafe.\n",
    "reg_date": "2021-10-12T12:06:41.000Z"
  },
  {
    "id": 3577,
    "keyword": null,
    "link": null,
    "title": " pojo",
    "description": "It stands for Plain old Java Object  and basically we use it when we need to represent some data as Java object. So to that we need to  create a Java class to represent it's data.  For example: { \"name\" : \"ABC\",   \"gender : \"Female\",   \"phone : 1234567890 }    So we can create a java object with this 3 data and encapsulate them (name, gender, phone) and also we need to create constructor to create object easily   So the idea is we want to create a class and eventually we want it to turn into Json file automatically. Without us doing anything.\nIt stands for Plain old Java Object  and basically we use it when we need to represent some data as Java object. So to that we need to  create a Java class to represent it's data.  For example: { \"name\" : \"ABC\",   \"gender : \"Female\",   \"phone : 1234567890 }    So we can create a java object with this 3 data and encapsulate them (name, gender, phone) and also we need to create constructor to create object easily  So the idea is we want to create a class and eventually we want it to turn into Json file automatically. Without us doing anything.\n",
    "reg_date": "2021-10-12T12:06:41.000Z"
  },
  {
    "id": 3578,
    "keyword": null,
    "link": null,
    "title": " pojo in java",
    "description": "It stands for Plain old Java Object  and basically we use it when we need to represent some data as Java object. So to that we need to  create a Java class to represent it's data.  For example: { \"name\" : \"ABC\",   \"gender : \"Female\",   \"phone : 1234567890 }    So we can create a java object with this 3 data and encapsulate them (name, gender, phone) and also we need to create constructor to create object easily  So the idea is we want to create a class and eventually we want it to turn into Json file automatically. Without us doing anything.\nIt stands for Plain old Java Object  and basically we use it when we need to represent some data as Java object. So to that we need to  create a Java class to represent it's data.  For example: { \"name\" : \"ABC\",   \"gender : \"Female\",   \"phone : 1234567890 }    So we can create a java object with this 3 data and encapsulate them (name, gender, phone)\\ and also we need to create constructor to create object easily  So the idea is we want to create a class and eventually we want it to turn into Json file automatically. Without us doing anything.\n",
    "reg_date": "2021-10-12T12:06:41.000Z"
  },
  {
    "id": 3579,
    "keyword": null,
    "link": null,
    "title": " polar to cartesian java",
    "description": "public static double[] pol(double x, double y) { \t//return new double[]{Math.sqrt(x * x + y * y), Math.atan2(y, x)}; //red \treturn new double[]{Math.sqrt(x * x + y * y), (Math.atan2(y, x) * 180) / Math.PI}; //cart }\nstatic double[] cari(double r, double theta) {     theta = (theta / 180) * Math.PI;     return new double[]{r * Math.cos(theta), r * Math.sin(theta)}; }\n",
    "reg_date": "2021-10-12T12:06:41.000Z"
  },
  {
    "id": 3580,
    "keyword": null,
    "link": null,
    "title": " polymorphism vs overriding in java",
    "description": "Overriding is when you call a method on an object and the method in the subclass with the same signature as the one in the superclass is called. Polymorphism is where you are not sure of the objects type at runtime and the most specific method is called. Therefore the behaviour of the method called may differ, depending on the objects type at runtime. Overriding is a type of polymorphism along with overloading and dynamic (late) binding.\n",
    "reg_date": "2021-10-12T12:06:41.000Z"
  },
  {
    "id": 3581,
    "keyword": null,
    "link": null,
    "title": " populate arraylist java one line",
    "description": "List<Integer> ints = new ArrayList<>(Arrays.asList(1,2,3));\n",
    "reg_date": "2021-10-12T12:06:41.000Z"
  },
  {
    "id": 3582,
    "keyword": null,
    "link": null,
    "title": " portrait in manifest",
    "description": "android:screenOrientation=\"portrait\" \n{ \t\"orientation\": \"portrait\" }\n",
    "reg_date": "2021-10-12T12:06:41.000Z"
  },
  {
    "id": 3583,
    "keyword": null,
    "link": null,
    "title": " postfix operator in java",
    "description": "sout(X++ * ++X * X++)  1) first postfix operator: X++     1.a) X++ \"replaced\" by 10    1.b) X incremented by one: 10+1=11    At this step it should look like:  System.out.println(10 * ++X * X++), X = 11;  2) second POSTfix operator: X++     2.a) X++ \"replaced\" by 11    2.b) X incremented by one: 11+1=12    At this step it should look like:  System.out.println(10 * ++X * 11), X = 12;  3) prefix operator: ++X    3.a) X incremented by one: 12+1=13    3.b) ++X \"replaced\" by 13    At this step it should look like:  System.out.println(10 * 13 * 11), X = 13;  4) evaluating 10*13 = 130, 130*11 = 1430. \n",
    "reg_date": "2021-10-12T12:06:41.000Z"
  },
  {
    "id": 3584,
    "keyword": null,
    "link": null,
    "title": " power-hungry foobar solution in java",
    "description": "package com.google.challenges; import java.math.BigInteger;  public class Answer {  public static String answer (int[] xs){     BigInteger result = new BigInteger(\"1\");     int xsLen = xs.length, pos = 0,ng=0;     int[] negatives = new int[xsLen];     if (xsLen == 1){         return Integer.toString(xs[0]);     }      for (int n = 0;n < xsLen;n++){         int val = xs[n];         if (val == 0){             continue;         }         if (val > 0){             result = result.multiply(new BigInteger(Integer.toString(val)));             ng++;         } else {             negatives[pos] = val;             pos++;         }     }     if(ng==0)     {         int l=0;         return Integer.toString(l);     }     if ((pos % 2) == 0){          for (int i = 0;i < pos;i++){             result = result.multiply(new BigInteger(Integer.toString(negatives[i])));         }     } else {          int min = -1000; int mPos = -1;         for (int i = 0;i < pos;i++){             if(negatives[i] > min){                 min = negatives[i];                 mPos = i;             }         }         for (int j = 0;j < pos;j++){             if(j == mPos){                 continue;             }             result = result.multiply(new BigInteger(Integer.toString(negatives[j])));         }     }       return result.toString(); } }\n",
    "reg_date": "2021-10-12T12:06:42.000Z"
  },
  {
    "id": 3585,
    "keyword": null,
    "link": null,
    "title": " powershell.exe location",
    "description": "// powershell.exe location on Windows 10 C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\\n",
    "reg_date": "2021-10-12T12:06:42.000Z"
  },
  {
    "id": 3586,
    "keyword": null,
    "link": null,
    "title": " prendere valore da tastiera java",
    "description": "  import java.util.Scanner;  public class Main{     public static void main(String args[]){      Scanner scan= new Scanner(System.in);      //For string      String text= scan.nextLine();      System.out.println(text);      //for int      int num= scan.nextInt();      System.out.println(num);     }   /*Is better to create another instance of Scanner if you have to use both nextline    \tand nextInt because they can conflict each other   */    }\n",
    "reg_date": "2021-10-12T12:06:42.000Z"
  },
  {
    "id": 3587,
    "keyword": null,
    "link": null,
    "title": " prepared statement update",
    "description": "   PreparedStatement statement =       connection.prepareStatement(\"UPDATE CUSTOMERS SET FNAME = ?, LNAME = ? WHERE ID = ?\")) {   statement.setString(1, customer.getFirstName());   statement.setString(2, customer.getLastName());   statement.setInt(3, customer.getId());\n",
    "reg_date": "2021-10-12T12:06:42.000Z"
  },
  {
    "id": 3588,
    "keyword": null,
    "link": null,
    "title": " pretty print json in console",
    "description": "new JSONObject(json).toString(2) \n",
    "reg_date": "2021-10-12T12:06:42.000Z"
  },
  {
    "id": 3589,
    "keyword": null,
    "link": null,
    "title": " prime check jaba",
    "description": " static boolean isPrime(int n){         boolean result=true;         if(n <= 1) return false;         for(int i = 2; i <= n/2; i++){             if(n % i == 0){                 result = false; //if some number divides it, then prime=false;                 break;             }         }         return result;     }\n",
    "reg_date": "2021-10-12T12:06:42.000Z"
  },
  {
    "id": 3590,
    "keyword": null,
    "link": null,
    "title": " prime check java",
    "description": "  static boolean isPrime(int n){         boolean result=true;         if(n <= 1) return false;         for(int i = 2; i <= n/2; i++){ //n/2 because the largest factor of any number is either it's half or less than it             if(n % i == 0){                 result = false; //if some number divides it, then prime=false;                 break;             }         }         return result;     }\npublic class Prime {      public static void main(String[] args) {          int num = 29;         boolean flag = false;         for(int i = 2; i <= num/2; ++i)         {             // condition for nonprime number             if(num % i == 0)             {                 flag = true;                 break;             }         }          if (!flag)             System.out.println(num + \" is a prime number.\");         else             System.out.println(num + \" is not a prime number.\");     } }\npublic class PrimeNumberInJava {    public static void main(String[] args)    {       int a, b = 0, flag = 0;       int number = 17;       b = number / 2;       if(number == 0 || number == 1)       {          System.out.println(number + \" is not prime number\");       }       else       {          for(a = 2; a <= b; a++)          {             if(number % a == 0)             {                System.out.println(number + \" is not prime number.\");                flag = 1;                break;             }          }          if(flag == 0)          {             System.out.println(number + \" is prime number.\");          }       }    } }\n",
    "reg_date": "2021-10-12T12:06:42.000Z"
  },
  {
    "id": 3591,
    "keyword": null,
    "link": null,
    "title": " prime factorization java",
    "description": "import java.util.Scanner;  public class PrimeFactors {    public static void main(String args[]){       int number;       Scanner sc = new Scanner(System.in);       System.out.println(\"Enter a number ::\");       number = sc.nextInt();              for(int i = 2; i< number; i++) {          while(number%i == 0) {             System.out.println(i+\" \");             number = number/i;          }       }       if(number >2) {          System.out.println(number);       }    } }\n",
    "reg_date": "2021-10-12T12:06:42.000Z"
  },
  {
    "id": 3592,
    "keyword": null,
    "link": null,
    "title": " prime in java",
    "description": "public class Prime {     public static void main(String[] args) {          int num = 29;         boolean flag = false;         for(int i = 2; i <= num/2; ++i){             if(num % i == 0){                 flag = true;                 break;             }         }          if (!flag)             System.out.println(num + \" is a prime number.\");         else             System.out.println(num + \" is not a prime number.\"); }}\npublic class Prime {     public static void main(String[] args) {          int num = 29;         boolean flag = false;         for(int i = 2; i <= num/2; ++i){             if(num % i == 0){                 flag = true;                 break;             }         }          if (!flag)             System.out.println(num + \" is a prime number.\");         else             System.out.println(num + \" is not a prime number.\"); }} Source:www.progra \npublic class Prime {      public static void main(String[] args) {          int num = 29;         boolean flag = false;         for(int i = 2; i <= num/2; ++i)         {             // condition for nonprime number             if(num % i == 0)             {                 flag = true;                 break;             }         }          if (!flag)             System.out.println(num + \" is a prime number.\");         else             System.out.println(num + \" is not a prime number.\");     } }\npublic class Prime {    public static boolean isPrime(int num) {         if (num<2)             return false;         for(int i=3;i<=Math.sqrt(num);i+=2)             if(num%i==0)         return  false ;         return true ;     } }\n",
    "reg_date": "2021-10-12T12:06:42.000Z"
  },
  {
    "id": 3593,
    "keyword": null,
    "link": null,
    "title": " prime number",
    "description": "public class Prime {     public static void main(String[] args) {          int num = 29;         boolean flag = false;         for(int i = 2; i <= num/2; ++i){             if(num % i == 0){                 flag = true;                 break;             }         }          if (!flag)             System.out.println(num + \" is a prime number.\");         else             System.out.println(num + \" is not a prime number.\"); }}\nNumbers -- Prime Number Write a method that can check if a number is prime or not   Solution: public static boolean primeNumber(int num) {      if(num <= 1){         return false;     }      for(int i = 2; i < num; i++) {         if(num % i == 0) {             return false;         }     }      return true;  }\ndef is_prime(n):   if(n<0):     print(\"n is not a nature number!\")     return False   for i in range(1,ceil(n/2)+1):     if (i != n and i != 1 and n%i == 0):       return False   return True print(is_prime(int(input(\"number>>\"))))\na number that is divisible only by itself and 1 (e.g. 2, 3, 5, 7, 11) suppose a number 'n' it can be divided by if '1' and only by itself then it can be a prime number\n// PRIME NUMBER // 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97.  let number = 5; if(number < 2){   console.log(\"less then 2 not prime\") } let flag = false; for(let i=2;i<number;i++){   if(number % i === 0){     flag = true;   } } if(flag){   console.log(\"Not prime \") } else{   console.log(\"Prime\") }  \n#include<bits/stdc++.h> using namespace std; bool Is_Prime(long long x){ \tif(x%2==0)return false; \tfor(int i=3;i*i<=x;i+=2) \t\tif(x%i==0)return false; \treturn true; } int main(){ \tlong long x; \tcin>>x; \tif(Is_Prime(x))cout<<\"Is Prime\"; \telse cout<<\"Is not Prime\"; }\n",
    "reg_date": "2021-10-12T12:06:42.000Z"
  },
  {
    "id": 3594,
    "keyword": null,
    "link": null,
    "title": " prime number java",
    "description": "public class Main {   public static void main(String[] args) {     for (int i = 2; i < 1_000_000; ++i) {       boolean isPrime = true;       int sqrt = (int)Math.ceil(Math.sqrt(i));       for (int divisor = 2; divisor <= sqrt; ++divisor) {         if (i % divisor == 0) {           isPrime = false;           break;         }       }       if (isPrime) {         System.out.println(i);       }     }   } }\npublic class Prime {     public static void main(String[] args) {          int num = 29;         boolean flag = false;         for(int i = 2; i <= num/2; ++i){             if(num % i == 0){                 flag = true;                 break;             }         }          if (!flag)             System.out.println(num + \" is a prime number.\");         else             System.out.println(num + \" is not a prime number.\"); }}\npublic class Prime {     public static void main(String[] args) {          int num = 29;         boolean flag = false;         for(int i = 2; i <= num/2; ++i){             if(num % i == 0){                 flag = true;                 break;             }         }          if (!flag)             System.out.println(num + \" is a prime number.\");         else             System.out.println(num + \" is not a prime number.\"); }} Source:www.progra \npublic class Prime {      public static void main(String[] args) {          int num = 29;         boolean flag = false;         for(int i = 2; i <= num/2; ++i)         {             // condition for nonprime number             if(num % i == 0)             {                 flag = true;                 break;             }         }          if (!flag)             System.out.println(num + \" is a prime number.\");         else             System.out.println(num + \" is not a prime number.\");     } }\npublic class PrimeNumberInJava {    public static void main(String[] args)    {       int a, b = 0, flag = 0;       int number = 17;       b = number / 2;       if(number == 0 || number == 1)       {          System.out.println(number + \" is not prime number\");       }       else       {          for(a = 2; a <= b; a++)          {             if(number % a == 0)             {                System.out.println(number + \" is not prime number.\");                flag = 1;                break;             }          }          if(flag == 0)          {             System.out.println(number + \" is prime number.\");          }       }    } }\nIt will display the prime numbers between 1 and 100.  class PrimeNumbers {    public static void main (String[] args)    {\t\t        int i =0;        int num =0;        //Empty String        String  primeNumbers = \"\";         for (i = 1; i <= 100; i++)                 { \t\t  \t             int counter=0; \t             for(num =i; num>=1; num--) \t  {              if(i%num==0) \t     {  \t\tcounter = counter + 1; \t     } \t  } \t  if (counter ==2) \t  { \t     //Appended the Prime number to the String \t     primeNumbers = primeNumbers + i + \" \"; \t  }\t        }\t        System.out.println(\"Prime numbers from 1 to 100 are :\");        System.out.println(primeNumbers);    } }\n",
    "reg_date": "2021-10-12T12:06:42.000Z"
  },
  {
    "id": 3595,
    "keyword": null,
    "link": null,
    "title": " prime number program in java",
    "description": "public class Main {   public static void main(String[] args) {     for (int i = 2; i < 1_000_000; ++i) {       boolean isPrime = true;       int sqrt = (int)Math.ceil(Math.sqrt(i));       for (int divisor = 2; divisor <= sqrt; ++divisor) {         if (i % divisor == 0) {           isPrime = false;           break;         }       }       if (isPrime) {         System.out.println(i);       }     }   } }\npublic class Prime {     public static void main(String[] args) {          int num = 29;         boolean flag = false;         for(int i = 2; i <= num/2; ++i){             if(num % i == 0){                 flag = true;                 break;             }         }          if (!flag)             System.out.println(num + \" is a prime number.\");         else             System.out.println(num + \" is not a prime number.\"); }}\npublic class Prime {     public static void main(String[] args) {          int num = 29;         boolean flag = false;         for(int i = 2; i <= num/2; ++i){             if(num % i == 0){                 flag = true;                 break;             }         }          if (!flag)             System.out.println(num + \" is a prime number.\");         else             System.out.println(num + \" is not a prime number.\"); }} Source:www.progra \npublic class Prime {      public static void main(String[] args) {          int num = 29;         boolean flag = false;         for(int i = 2; i <= num/2; ++i)         {             // condition for nonprime number             if(num % i == 0)             {                 flag = true;                 break;             }         }          if (!flag)             System.out.println(num + \" is a prime number.\");         else             System.out.println(num + \" is not a prime number.\");     } }\nIt will display the prime numbers between 1 and 100.  class PrimeNumbers {    public static void main (String[] args)    {\t\t        int i =0;        int num =0;        //Empty String        String  primeNumbers = \"\";         for (i = 1; i <= 100; i++)                 { \t\t  \t             int counter=0; \t             for(num =i; num>=1; num--) \t  {              if(i%num==0) \t     {  \t\tcounter = counter + 1; \t     } \t  } \t  if (counter ==2) \t  { \t     //Appended the Prime number to the String \t     primeNumbers = primeNumbers + i + \" \"; \t  }\t        }\t        System.out.println(\"Prime numbers from 1 to 100 are :\");        System.out.println(primeNumbers);    } }\n",
    "reg_date": "2021-10-12T12:06:43.000Z"
  },
  {
    "id": 3596,
    "keyword": null,
    "link": null,
    "title": " prime numbers",
    "description": "public class Prime {     public static void main(String[] args) {          int num = 29;         boolean flag = false;         for(int i = 2; i <= num/2; ++i){             if(num % i == 0){                 flag = true;                 break;             }         }          if (!flag)             System.out.println(num + \" is a prime number.\");         else             System.out.println(num + \" is not a prime number.\"); }}\nNumbers -- Prime Number Write a method that can check if a number is prime or not   Solution: public static boolean primeNumber(int num) {      if(num <= 1){         return false;     }      for(int i = 2; i < num; i++) {         if(num % i == 0) {             return false;         }     }      return true;  }\ndef is_prime(n):   if(n<0):     print(\"n is not a nature number!\")     return False   for i in range(1,ceil(n/2)+1):     if (i != n and i != 1 and n%i == 0):       return False   return True print(is_prime(int(input(\"number>>\"))))\na number that is divisible only by itself and 1 (e.g. 2, 3, 5, 7, 11) suppose a number 'n' it can be divided by if '1' and only by itself then it can be a prime number\n2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97 ...\nA number only divisible by 1 and itself\n",
    "reg_date": "2021-10-12T12:06:43.000Z"
  },
  {
    "id": 3597,
    "keyword": null,
    "link": null,
    "title": " primitive data types in java",
    "description": "/*  \tJava Data Types There 2 Types Of Data Types In Java 1) Primitive -> byte, char, short, int, long, float, double and boolean. 2) Non-primitive -> (All Classes) -> String, Arrays etc.  Type\tSize\tStores byte\t1 byte\twhole numbers from -128 to 127 short\t2 bytes\t\"\" -32,768 to 32,767 int\t    4 bytes\t\"\" -2,147,483,648 to 2,147,483,647 long\t8 bytes\t\"\"-9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 float\t4 bytes\tfractional numbers; for storing 6 to 7 decimal digits double\t8 bytes\tfractional numbers; \"\" 15 \"\" boolean\t1 bit\ttrue or false values char\t2 bytes\tsingle character/letter or ASCII values */\nPrimitive data types are those data types which are used by programmers when creating variables in their program.  For example :-     * boolean     * char     * byte     * short     * int     * long     * float     * double Non-Primitive data types:     * String     * array     * enum     * class     * etc\nPrimitive types are the most basic data types available within the Java language. There are 8: boolean , byte , char , short , int , long , float and double . These types serve as the building blocks of data manipulation in Java. Such types serve only one purpose &mdash; containing pure, simple values of a kind.\nNon-Primitive Data Types: These data types are not actually defined by  the programming language but are created by the programmer. They are  also called &ldquo;reference variables&rdquo; or &ldquo;object references&rdquo; since they  refer to a memory location which stores the data.    All classes are non-primitive data types. Example : Object, String, Integer, Boolean, etc...\nPrimitive types are the most basic data types available within the Java language.  Some of them are boolean , byte , char , short , int , long , float and double .  These types serve as the building blocks of data manipulation in Java. \ndouble\t\t8 bytes\tfractional numbers; sufficient for storing 15 decimal digits \n",
    "reg_date": "2021-10-12T12:06:43.000Z"
  },
  {
    "id": 3598,
    "keyword": null,
    "link": null,
    "title": " print",
    "description": "# This is a print statement in Python print(\"Hello, world!\")\nprint(*objects, sep=' ', end='\\n', file=sys.stdout, flush=False)\nprint(\"Hello World\") # prints hello world to the screen (python) \n// This is a print statement in Java System.out.println(\"Hello, world!\")\n//This is how you print in java  System.out.println(\"bruh\");\nprint('hi')\nprint(10) print(True) print(\"String\")\nSystem.out.println(val);\nprint('Hello world') # This would print 'Hello world' as an output to the user.\n",
    "reg_date": "2021-10-12T12:06:43.000Z"
  },
  {
    "id": 3599,
    "keyword": null,
    "link": null,
    "title": " printStackTrace()",
    "description": "public void printStackTrace()    //Prints this throwable and its backtrace to the standard error stream. This method prints a stack trace for this Throwable object on the error output stream that is the value of the field System.err. The first line of output contains the result of the toString() method for this object. Remaining lines represent data previously recorded by the method fillInStackTrace(). The format of this information depends on the implementation, but the following example may be regarded as typical: \n",
    "reg_date": "2021-10-12T12:06:43.000Z"
  },
  {
    "id": 3600,
    "keyword": null,
    "link": null,
    "title": " print 2d array in java",
    "description": "for (int row = 0; row < arr.length; row++)//Cycles through rows {   for (int col = 0; col < arr[row].length; col++)//Cycles through columns   {     System.out.printf(\"]\", arr[row][col]); //change the ] to however much space you want   }   System.out.println(); //Makes a new row } //This allows you to print the array as matrix\nint[][] array = new int[rows][columns]; System.out.println(Arrays.deepToString(array)); \n",
    "reg_date": "2021-10-12T12:06:43.000Z"
  },
  {
    "id": 3601,
    "keyword": null,
    "link": null,
    "title": " print a list java",
    "description": "for(int i=0;i<list.size();i++){     System.out.println(list.get(i)); } \nArrays.toString(list.toArray())\nlist.forEach(System.out::println);\nSystem.out.println(Arrays.toString(list.toArray())); \n for(int i = 0; i < models.size(); i++) {     System.out.println(models.get(i).getName()); \n",
    "reg_date": "2021-10-12T12:06:43.000Z"
  },
  {
    "id": 3602,
    "keyword": null,
    "link": null,
    "title": " print a string java",
    "description": "//print and create new line after System.out.println(\"text\"); System.out.println(String); //You can use any variable type, not just strings, although //they are the most common  //Print without creating a new line System.out.print(\"text\"); System.out.print(String);\n public class hello {      public static void main(String[] args) { \tString hello = \"Hello\";       System.out.println(hello);      } }  or   public class hello {      public static void main(String[] args) { \t \tSystem.out.println(\"Hello\");     } }\nString data = \"Some string\"; System.out.println(data);\n",
    "reg_date": "2021-10-12T12:06:43.000Z"
  },
  {
    "id": 3603,
    "keyword": null,
    "link": null,
    "title": " print all nodes in binary tree java",
    "description": "public class Node<E>{ \tprivate Node left;   \tprivate Node right;   \tprivate E elem;   \tpublic void printNodes(){     \tif(left!=null){         \tleft.printNodes();         }       \tSystem.out.println(elem);       \tif(right!=null){         \tright.printNodes();         }     } }\n",
    "reg_date": "2021-10-12T12:06:43.000Z"
  },
  {
    "id": 3604,
    "keyword": null,
    "link": null,
    "title": " print an array java",
    "description": "import java.util.Arrays;  class Scratch{     public static void main(String[] args){         int[] arr = new int[3];         System.out.println( Arrays.toString( arr ));       \t//prints [0, 0, 0]     } }\nimport java.util.Arrays;  public class Array {      public static void main(String[] args) {         int[] array = {1, 2, 3, 4, 5};          System.out.println(Arrays.toString(array));     } }\nimport java.util.Arrays; //How to print Arrays in Java public class Printarray{        public static void main(String[] args){            String[] arr = new String[]{\"Mumbai\",\"Delhi\",\"Kolkata\",\"Chennai\"};          //Using for loop;     for(int i=0; i<arr.length;i++){       System.out.println(arr[i]);     }          //Using for-each loop;     for(String city:arr){       System.out.println(city);     }        //Using Arrays.toString() method     System.out.println(Arrays.toString(arr));                //Using Arrays.deepToString() method its also converting multidimensional arrays to strings.          System.out.println(Arrays.deepToString(arr));            //Using Array as list method     System.out.println(Arrays.asList(arr));          }    }\nSystem.out.println(Arrays.toString(arr));\npublic class Array {      public static void main(String[] args) {         int[] array = {1, 2, 3, 4, 5}; //Your array          for (int element: array) { //Advanced For Loop (For each)             System.out.println(element); //print each element of            \t\t\t\t\t\t\t     //the array for each iteration         }     } }\n",
    "reg_date": "2021-10-12T12:06:43.000Z"
  },
  {
    "id": 3605,
    "keyword": null,
    "link": null,
    "title": " print array java without loop",
    "description": "import java.util.*;    class MyArrays {     public static void main(String[] args)     {         // Get the array         int arr[]= { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };         // Print the array         System.out.println(\"Array: \"+ Arrays.toString(arr));     } } \n",
    "reg_date": "2021-10-12T12:06:43.000Z"
  },
  {
    "id": 3606,
    "keyword": null,
    "link": null,
    "title": " print arraylist java",
    "description": "for(int i=0;i<list.size();i++){     System.out.println(list.get(i)); } \nArrays.toString(list.toArray())\n for(int name: arraylist)         {             System.out.print(name + \" \");         }\n for(int i = 0; i < models.size(); i++) {     System.out.println(models.get(i).getName()); \nfor (int[] array : myList) {     for (Integer i : array) {         System.out.println(i);     } } \n",
    "reg_date": "2021-10-12T12:06:44.000Z"
  },
  {
    "id": 3607,
    "keyword": null,
    "link": null,
    "title": " print colored text java",
    "description": "System.out.println(ConsoleColors.RED + \"RED COLORED\" + ConsoleColors.RESET + \" NORMAL\"); \n",
    "reg_date": "2021-10-12T12:06:44.000Z"
  },
  {
    "id": 3608,
    "keyword": null,
    "link": null,
    "title": " print exception in java",
    "description": "        try         {              int a = 20/0;          } catch (Exception e)          {              // getMessage method              // Prints only the message of exception              // and not the name of exception              System.out.println(e.getMessage());                             // Prints what exception has been thrown              System.out.println(e);          } \n",
    "reg_date": "2021-10-12T12:06:44.000Z"
  },
  {
    "id": 3609,
    "keyword": null,
    "link": null,
    "title": " print files in java",
    "description": "BufferedReader fr=new BufferedReader(new FileReader(\"fileName\")); String line; while((line = br.readLine()) != null){     System.out.println(line); } \n",
    "reg_date": "2021-10-12T12:06:44.000Z"
  },
  {
    "id": 3610,
    "keyword": null,
    "link": null,
    "title": " print hashtable in java",
    "description": "table.forEach(              (k, v) -> System.out.println(\"Key : \" + k + \", Value : \" + v)); \n",
    "reg_date": "2021-10-12T12:06:44.000Z"
  },
  {
    "id": 3611,
    "keyword": null,
    "link": null,
    "title": " print hello world in java",
    "description": "public class Hello {   \tpublic static void main(String[] args)     {       /*Tip System.out.println(); shortcut Type 'sysout'and press Tab */       System.out.println(\"Hello world!\");     } }\npublic static void main(String[] args){   System.out.println(\"Hello World\"); }\nclass Simple{       public static void main(String args[]){        System.out.println(\"Hello Java\");       }   }  \npublic class hello{ \tpublic static void main(String[] args){ \t\tSystem.out.println(\"Hello world!\"); \t} }\nSystem.out.println(\"Hello World\");\nM.Shamshad \n",
    "reg_date": "2021-10-12T12:06:44.000Z"
  },
  {
    "id": 3612,
    "keyword": null,
    "link": null,
    "title": " print in java",
    "description": "//print and create new line after System.out.println(\"text\"); System.out.println(String); //You can use any variable type, not just strings, although //they are the most common  //Print without creating a new line System.out.print(\"text\"); System.out.print(String);\nSystem.out.println(\"Hello, World!\"); /*type System the class, the .out the field, and the println short  for print line */ \nSystem.out.println(\"whatever you want\"); //you can type sysout and then ctrl + space \nString[] array = new String[] {\"John\", \"Mary\", \"Bob\"}; System.out.println(Arrays.toString(array)); // [John, Mary, Bob]\nSystem.out.println(\"LUL\");\nSystem.out.println(String someString); /** Can take in other types as well such as integers (ints) */\n",
    "reg_date": "2021-10-12T12:06:44.000Z"
  },
  {
    "id": 3613,
    "keyword": null,
    "link": null,
    "title": " print java",
    "description": "//print and create new line after System.out.println(\"text\"); System.out.println(String); //You can use any variable type, not just strings, although //they are the most common  //Print without creating a new line System.out.print(\"text\"); System.out.print(String);\nSystem.out.println(\"Hello, World!\"); /*type System the class, the .out the field, and the println short  for print line */ \nSystem.out.println(\"whatever you want\"); //you can type sysout and then ctrl + space \nSystem.out.println(\"Your text here.\");\nSystem.out.println(\"LUL\");\n//print in Java System.out.println(\"Welcome to Java\"); \n",
    "reg_date": "2021-10-12T12:06:44.000Z"
  },
  {
    "id": 3614,
    "keyword": null,
    "link": null,
    "title": " print list in java",
    "description": "for(int i=0;i<list.size();i++){     System.out.println(list.get(i)); } \nArrays.toString(list.toArray())\nlist.forEach(System.out::println);\nSystem.out.println(Arrays.toString(list.toArray())); \n for(int i = 0; i < models.size(); i++) {     System.out.println(models.get(i).getName()); \nfor (Song song : list) { \tSystem.out.println(song.getName()); }\n",
    "reg_date": "2021-10-12T12:06:44.000Z"
  },
  {
    "id": 3615,
    "keyword": null,
    "link": null,
    "title": " print list in java 8",
    "description": "for(int i=0;i<list.size();i++){     System.out.println(list.get(i)); } \nlist.forEach(System.out::println);\nSystem.out.println(Arrays.toString(list.toArray())); \n for(int i = 0; i < models.size(); i++) {     System.out.println(models.get(i).getName()); \n",
    "reg_date": "2021-10-12T12:06:44.000Z"
  },
  {
    "id": 3616,
    "keyword": null,
    "link": null,
    "title": " print list of map java",
    "description": "list.forEach(item ->                  item.forEach((k, v) -> System.out.println(k + \": \" + (String)v)     );\n",
    "reg_date": "2021-10-12T12:06:45.000Z"
  },
  {
    "id": 3617,
    "keyword": null,
    "link": null,
    "title": " print map in java",
    "description": "map.forEach((key, value) -> System.out.println(key + \":\" + value));\n// 1. for-each with Entry Map<Integer, Integer> map = new HashMap<Integer, Integer>(); for (Map.Entry<Integer, Integer> entry : map.entrySet()) {     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); }   // 2. for-each with key or value each (faster) Map<Integer, Integer> map = new HashMap<Integer, Integer>(); //iterating over keys only for (Integer key : map.keySet()) {     System.out.println(\"Key = \" + key); }   //iterating over values only for (Integer value : map.values()) {     System.out.println(\"Value = \" + value); }   // 3. Using Iterator Map<Integer, Integer> map = new HashMap<Integer, Integer>(); // With Generic Iterator<Map.Entry<Integer, Integer>> entries = map.entrySet().iterator(); while (entries.hasNext()) {     Map.Entry<Integer, Integer> entry = entries.next();     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); }  // No Generic Map map = new HashMap(); Iterator entries = map.entrySet().iterator(); while (entries.hasNext()) {     Map.Entry entry = (Map.Entry) entries.next();     Integer key = (Integer)entry.getKey();     Integer value = (Integer)entry.getValue();     System.out.println(\"Key = \" + key + \", Value = \" + value); } \nimport java.util.HashMap; import java.util.Iterator; import java.util.Map; import java.util.stream.Stream;   class MapUtil {     // Program to print all keys present in the Map using keySet() in Java     public static void main (String[] args)     {         Map<Integer, String> map = new HashMap<>();         map.put(1, \"One\");         map.put(2, \"Two\");           // 1. using Iterator         Iterator<Integer> itr = map.keySet().iterator();         while (itr.hasNext()) {             System.out.println(itr.next());         }           // 2. For-each Loop         for (Integer key : map.keySet()) {             System.out.println(key);         }           // 3. Java 8 - Collection.iterator() + Iterator.forEachRemaining()         map.keySet().iterator()                 .forEachRemaining(System.out::println);           // 4. Java 8 - Collection.stream() + Stream.forEach()         map.keySet().stream()                 .forEach(System.out::println);           // Java 8 - Stream.of() + Collection.toArray() + Stream.forEach()         Stream.of(map.keySet().toArray())                 .forEach(System.out::println);           // 5. Convert to String         System.out.println(map.keySet().toString());           // Java 8         Stream.of(map.keySet().toString())                 .forEach(System.out::println);     } } \n// Java 8 - Collection.iterator() + Iterator.forEachRemaining()         map.keySet().iterator()                 .forEachRemaining(System.out::println);\nMap<String, Integer> map = new HashMap<>(); map.put(\"a\", 1); map.put(\"b\", 2); System.out.println(Arrays.asList(map)); // method 1 System.out.println(Collections.singletonList(map)); // method 2 \nimport java.util.HashMap; import java.util.Map; import java.util.Iterator; import java.util.Set; public class Details {     public static void main(String args[]) {        /* This is how to declare HashMap */       HashMap<Integer, String> hmap = new HashMap<Integer, String>();        /*Adding elements to HashMap*/       hmap.put(12, \"Chaitanya\");       hmap.put(2, \"Rahul\");       hmap.put(7, \"Singh\");       hmap.put(49, \"Ajeet\");       hmap.put(3, \"Anuj\");        /* Display content using Iterator*/       Set set = hmap.entrySet();       Iterator iterator = set.iterator();       while(iterator.hasNext()) {          Map.Entry mentry = (Map.Entry)iterator.next();          System.out.print(\"key is: \"+ mentry.getKey() + \" & Value is: \");          System.out.println(mentry.getValue());       }        /* Get values based on key*/       String var= hmap.get(2);       System.out.println(\"Value at index 2 is: \"+var);        /* Remove values based on key*/       hmap.remove(3);       System.out.println(\"Map key and values after removal:\");       Set set2 = hmap.entrySet();       Iterator iterator2 = set2.iterator();       while(iterator2.hasNext()) {           Map.Entry mentry2 = (Map.Entry)iterator2.next();           System.out.print(\"Key is: \"+mentry2.getKey() + \" & Value is: \");           System.out.println(mentry2.getValue());        }     } }\n",
    "reg_date": "2021-10-12T12:06:45.000Z"
  },
  {
    "id": 3618,
    "keyword": null,
    "link": null,
    "title": " print map java",
    "description": "map.forEach((key, value) -> System.out.println(key + \":\" + value));\n// 1. for-each with Entry Map<Integer, Integer> map = new HashMap<Integer, Integer>(); for (Map.Entry<Integer, Integer> entry : map.entrySet()) {     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); }   // 2. for-each with key or value each (faster) Map<Integer, Integer> map = new HashMap<Integer, Integer>(); //iterating over keys only for (Integer key : map.keySet()) {     System.out.println(\"Key = \" + key); }   //iterating over values only for (Integer value : map.values()) {     System.out.println(\"Value = \" + value); }   // 3. Using Iterator Map<Integer, Integer> map = new HashMap<Integer, Integer>(); // With Generic Iterator<Map.Entry<Integer, Integer>> entries = map.entrySet().iterator(); while (entries.hasNext()) {     Map.Entry<Integer, Integer> entry = entries.next();     System.out.println(\"Key = \" + entry.getKey() + \", Value = \" + entry.getValue()); }  // No Generic Map map = new HashMap(); Iterator entries = map.entrySet().iterator(); while (entries.hasNext()) {     Map.Entry entry = (Map.Entry) entries.next();     Integer key = (Integer)entry.getKey();     Integer value = (Integer)entry.getValue();     System.out.println(\"Key = \" + key + \", Value = \" + value); } \nimport java.util.HashMap; import java.util.Iterator; import java.util.Map; import java.util.stream.Stream;   class MapUtil {     // Program to print all keys present in the Map using keySet() in Java     public static void main (String[] args)     {         Map<Integer, String> map = new HashMap<>();         map.put(1, \"One\");         map.put(2, \"Two\");           // 1. using Iterator         Iterator<Integer> itr = map.keySet().iterator();         while (itr.hasNext()) {             System.out.println(itr.next());         }           // 2. For-each Loop         for (Integer key : map.keySet()) {             System.out.println(key);         }           // 3. Java 8 - Collection.iterator() + Iterator.forEachRemaining()         map.keySet().iterator()                 .forEachRemaining(System.out::println);           // 4. Java 8 - Collection.stream() + Stream.forEach()         map.keySet().stream()                 .forEach(System.out::println);           // Java 8 - Stream.of() + Collection.toArray() + Stream.forEach()         Stream.of(map.keySet().toArray())                 .forEach(System.out::println);           // 5. Convert to String         System.out.println(map.keySet().toString());           // Java 8         Stream.of(map.keySet().toString())                 .forEach(System.out::println);     } } \n// Java 8 - Collection.iterator() + Iterator.forEachRemaining()         map.keySet().iterator()                 .forEachRemaining(System.out::println);\nMap<String, Integer> map = new HashMap<>(); map.put(\"a\", 1); map.put(\"b\", 2); System.out.println(Arrays.asList(map)); // method 1 System.out.println(Collections.singletonList(map)); // method 2 \n",
    "reg_date": "2021-10-12T12:06:45.000Z"
  },
  {
    "id": 3619,
    "keyword": null,
    "link": null,
    "title": " print out value java",
    "description": "System.out.println('value')\n",
    "reg_date": "2021-10-12T12:06:45.000Z"
  },
  {
    "id": 3620,
    "keyword": null,
    "link": null,
    "title": " print queue in java",
    "description": "Queue<Something> yourQueue=new LinkedList<>();//or similar System.out.println(yourQueue);//print it in a single line  //print manually for(Something elem:yourQueue){ \tSystem.out.println(elem); }\n",
    "reg_date": "2021-10-12T12:06:45.000Z"
  },
  {
    "id": 3621,
    "keyword": null,
    "link": null,
    "title": " print same line in java",
    "description": "System.out.print(\"hello\");   //output   --------------------------   hello   -------------------------- System.out.println(\"hello\");   //output   --------------------------   hello      --------------------------   \n",
    "reg_date": "2021-10-12T12:06:45.000Z"
  },
  {
    "id": 3622,
    "keyword": null,
    "link": null,
    "title": " print statement in java",
    "description": "//print and create new line after System.out.println(\"text\"); System.out.println(String); //You can use any variable type, not just strings, although //they are the most common  //Print without creating a new line System.out.print(\"text\"); System.out.print(String);\nSystem.out.println(\"Hello, World!\"); /*type System the class, the .out the field, and the println short  for print line */ \nSystem.out.println(\"whatever you want\"); //you can type sysout and then ctrl + space \nString[] array = new String[] {\"John\", \"Mary\", \"Bob\"}; System.out.println(Arrays.toString(array)); // [John, Mary, Bob]\nSystem.out.println(\"LUL\");\nSystem.out.println(\"Hello!\"); //prints then ends line System.out.print(\"Hello!!\");//prints without line spacing\n",
    "reg_date": "2021-10-12T12:06:45.000Z"
  },
  {
    "id": 3623,
    "keyword": null,
    "link": null,
    "title": " print string in java",
    "description": "String data = \"Some string\"; System.out.println(data);\n",
    "reg_date": "2021-10-12T12:06:45.000Z"
  },
  {
    "id": 3624,
    "keyword": null,
    "link": null,
    "title": " print treeset java",
    "description": "TreeSet<Integer> treeset = new TreeSet<Integer>(); treeset.add(1); treeset.add(5); treeset.add(7); treeset.add(8);  treeset.forEach( element -> {     System.out.println(element); });\n",
    "reg_date": "2021-10-12T12:06:45.000Z"
  },
  {
    "id": 3625,
    "keyword": null,
    "link": null,
    "title": " print up to 2 decimal in java",
    "description": "System.out.printf(\"%.2f\", value);\n",
    "reg_date": "2021-10-12T12:06:45.000Z"
  },
  {
    "id": 3626,
    "keyword": null,
    "link": null,
    "title": " print values of bst java",
    "description": " void printTree(TreeNode node, String prefix)  {     if(node == null) return;      System.out.println(prefix + \" + \" + node.data);     printTree(node.left , prefix + \" \");     printTree(node.right , prefix + \" \");  }\n",
    "reg_date": "2021-10-12T12:06:46.000Z"
  },
  {
    "id": 3627,
    "keyword": null,
    "link": null,
    "title": " print vowels in string java",
    "description": "// There are many ways to do it the one i came up with is this:   int count = 0; String sentence = \"My name is DEATHVADER, Hello World!!! XD\"; char[] vowels = {'a', 'e', 'i', 'o', 'u'}; for (char vowel : vowels)    for (char letter : sentence.toLowerCase().toCharArray())      if (letter == vowel) count++; System.out.println(\"Number of vowels in the given sentence is \" + count);  // I have found another easier method if you guyz don't understand this // but this is also easy xD. // here you can see another method: // https://www.tutorialspoint.com/Java-program-to-count-the-number-of-vowels-in-a-given-sentence\n  package org.arpit.java2blog;   import java.util.HashSet; import java.util.Scanner; import java.util.Set;   public class VowelFinder {     public static void main(String args[])     {         Scanner scanner = new Scanner(System.in);           System.out.print(\"Enter an String : \");         String str = scanner.next();           Set<Character> set=new HashSet<Character>();         for (int i = 0; i < str.length(); i++) {             char c=str.charAt(i);             if(isVowel(c))             {                 set.add(c);             }         }           System.out.println(\"Vowels are:\");         for (Character c:set) {             System.out.print(\" \"+c);         }           scanner.close();     }       public static boolean isVowel(char character)     {           if(character=='a' || character=='A' || character=='e' || character=='E' ||                 character=='i' || character=='I' || character=='o' || character=='O' ||                 character=='u' || character=='U'){             return true;         }else{             return false;         }     }   }   \nString str = \"hello\"; String vowels = \"aeiou\";  for(char c : str) if(vowels.contains(c)) System.out.println(c + \"\");\n",
    "reg_date": "2021-10-12T12:06:46.000Z"
  },
  {
    "id": 3628,
    "keyword": null,
    "link": null,
    "title": " printf java",
    "description": "//print and create new line after System.out.println(\"text\"); System.out.println(String); //You can use any variable type, not just strings, although //they are the most common  //Print without creating a new line System.out.print(\"text\"); System.out.print(String);\nimport java.util.Scanner;  public class Solution {      public static void main(String[] args) {             Scanner sc=new Scanner(System.in);             System.out.println(\"================================\");             for(int i=0;i<3;i++){                 String s1=sc.next();                 int x=sc.nextInt();                 //Complete this line                                 System.out.printf(\"%-15s\u0003d%n\",s1,x);             }             System.out.println(\"================================\");      } } \n//minus means left alingment, zero before 3 - left zero appending to the  integer System.out.printf(\"%-14s \u0003d\\n\", s1, x);\n",
    "reg_date": "2021-10-12T12:06:46.000Z"
  },
  {
    "id": 3629,
    "keyword": null,
    "link": null,
    "title": " printf java boolean",
    "description": "boolean car = true; System.out.printf(\"%b\",car); System.out.flush(); \n",
    "reg_date": "2021-10-12T12:06:46.000Z"
  },
  {
    "id": 3630,
    "keyword": null,
    "link": null,
    "title": " printing arraylist",
    "description": "Arrays.toString(list.toArray())\n for(int name: arraylist)         {             System.out.print(name + \" \");         }\n",
    "reg_date": "2021-10-12T12:06:46.000Z"
  },
  {
    "id": 3631,
    "keyword": null,
    "link": null,
    "title": " printing elemenst in hashmap",
    "description": "import java.util.HashMap; import java.util.Map; import java.util.Iterator; import java.util.Set; public class Details {     public static void main(String args[]) {        /* This is how to declare HashMap */       HashMap<Integer, String> hmap = new HashMap<Integer, String>();        /*Adding elements to HashMap*/       hmap.put(12, \"Chaitanya\");       hmap.put(2, \"Rahul\");       hmap.put(7, \"Singh\");       hmap.put(49, \"Ajeet\");       hmap.put(3, \"Anuj\");        /* Display content using Iterator*/       Set set = hmap.entrySet();       Iterator iterator = set.iterator();       while(iterator.hasNext()) {          Map.Entry mentry = (Map.Entry)iterator.next();          System.out.print(\"key is: \"+ mentry.getKey() + \" & Value is: \");          System.out.println(mentry.getValue());       }        /* Get values based on key*/       String var= hmap.get(2);       System.out.println(\"Value at index 2 is: \"+var);        /* Remove values based on key*/       hmap.remove(3);       System.out.println(\"Map key and values after removal:\");       Set set2 = hmap.entrySet();       Iterator iterator2 = set2.iterator();       while(iterator2.hasNext()) {           Map.Entry mentry2 = (Map.Entry)iterator2.next();           System.out.print(\"Key is: \"+mentry2.getKey() + \" & Value is: \");           System.out.println(mentry2.getValue());        }     } }\n",
    "reg_date": "2021-10-12T12:06:46.000Z"
  },
  {
    "id": 3632,
    "keyword": null,
    "link": null,
    "title": " printwriter java append to file",
    "description": "public static void usingPrintWriter() throws IOException  {     String textToAppend = \"Happy Learning !!\";           FileWriter fileWriter = new FileWriter(\"c:/temp/samplefile.txt\", true); //Set true for append mode     PrintWriter printWriter = new PrintWriter(fileWriter);     printWriter.println(textToAppend);  //New line     printWriter.close(); } \n",
    "reg_date": "2021-10-12T12:06:46.000Z"
  },
  {
    "id": 3633,
    "keyword": null,
    "link": null,
    "title": " priority queue comparator java",
    "description": "Problem Statement  A shopping mall giving gift to highest purchased customer  as Independence day offer. Data stored is order_id, amount and name of customer. Implement this program using PriorityQueue  to display Details of customer who won the gift.  Example Enter customer id, amount and name who purchased in mall(0 to stop): 1 275 ram 2 500 sham 3 350 monika 0 Details of customer who won gift on highest purchase: orderId:2, orderAmount:500.0, customerName:sham  //write code here import java.util.*; class Priority_Queue{     int id;     int amount;     String name;     Priority_Queue(int i,int a,String n){         id=i;         amount=a;         name=n;     }     public String toString(){         return \"orderId:\"+id+\", orderAmount:\"+amount+\".0, customerName:\"+name;     } }  class sort_amount implements Comparator<Priority_Queue>{     @Override     public int compare(Priority_Queue o1, Priority_Queue o2){         return o1.amount-o2.amount;     } } public class Test{     public static void main(String[] args){         Scanner scan=new Scanner(System.in);         ArrayList<Priority_Queue> pq=new ArrayList<>();         System.out.println(\"Enter customer id, amount and name who purchased in mall(0 to stop):\");         for(int i=0;i<10;i++){             int id=scan.nextInt();             if(id==0){                 break;             }             int amount=scan.nextInt();             String name=scan.next();             pq.add(new Priority_Queue(id, amount, name));         }         Collections.sort(pq, new sort_amount());         System.out.println(\"Details of customer who won gift on highest purchase:\");         System.out.println(pq.get(pq.size()-1));     } }\n",
    "reg_date": "2021-10-12T12:06:46.000Z"
  },
  {
    "id": 3634,
    "keyword": null,
    "link": null,
    "title": " priority queue java comparator lambda",
    "description": "PriorityQueue<Integer> pq =new PriorityQueue<>((x, y) -> Integer.compare(y, x));  pq.add(10); pq.add(5); System.out.println(pq.peek());\n",
    "reg_date": "2021-10-12T12:06:46.000Z"
  },
  {
    "id": 3635,
    "keyword": null,
    "link": null,
    "title": " priority queue max heap in java",
    "description": "//Sol1 PriorityQueue<Integer> queue = new PriorityQueue<>(10, Collections.reverseOrder());   //Sol2 // PriorityQueue<Integer> pq = new PriorityQueue<>((x, y) -> y - x); PriorityQueue<Integer> pq =new PriorityQueue<>((x, y) -> Integer.compare(y, x));   //Sol3 PriorityQueue<Integer> pq = new PriorityQueue<Integer>(defaultSize, new Comparator<Integer>() {     public int compare(Integer lhs, Integer rhs) {         if (lhs < rhs) return +1;         if (lhs.equals(rhs)) return 0;         return -1;     } });\n#include <bits/stdc++.h> using namespace std;   // User defined class, Point class Point {    int x;    int y; public:    Point(int _x, int _y)    {       x = _x;       y = _y;    }    int getX() const { return x; }    int getY() const { return y; } };   // To compare two points class myComparator { public:     int operator() (const Point& p1, const Point& p2)     {         return p1.getX() > p2.getX();     } };   // Driver code int main () {     // Creates a Min heap of points (order by x coordinate)     priority_queue <Point, vector<Point>, myComparator > pq;       // Insert points into the min heap     pq.push(Point(10, 2));     pq.push(Point(2, 1));     pq.push(Point(1, 5));       // One by one extract items from min heap     while (pq.empty() == false)     {         Point p = pq.top();         cout << \"(\" << p.getX() << \", \" << p.getY() << \")\";         cout << endl;         pq.pop();     }       return 0; }\n",
    "reg_date": "2021-10-12T12:06:47.000Z"
  },
  {
    "id": 3636,
    "keyword": null,
    "link": null,
    "title": " priority queue reverse order java",
    "description": "PriorityQueue<Integer> pQueue = new PriorityQueue<Integer>(Collections.reverseOrder()); \nPriorityQueue<Integer> pq =new PriorityQueue<>((x, y) -> Integer.compare(y, x));  pq.add(10); pq.add(5); System.out.println(pq.peek());\n",
    "reg_date": "2021-10-12T12:06:47.000Z"
  },
  {
    "id": 3637,
    "keyword": null,
    "link": null,
    "title": " priority scheduling in java",
    "description": "import java.util.Arrays; import java.util.Scanner;  public class Priority {      public static void main(String[] args) {          System.out.println(\"*** Priority Scheduling ***\");          System.out.print(\"Enter Number of Process: \");         Scanner sc = new Scanner(System.in);         int numberOfProcess = sc.nextInt();         String process[] = new String[numberOfProcess];          int p = 1;         for (int i = 0; i < numberOfProcess; i++) {             process[i] = \"P\" + p;             p++;         }          System.out.println(Arrays.toString(process));          System.out.print(\"Enter Burst Time for \" + numberOfProcess + \" process: \");          int burstTime[] = new int[numberOfProcess];         for (int i = 0; i < numberOfProcess; i++) {             burstTime[i] = sc.nextInt();         }          System.out.println(Arrays.toString(burstTime));          System.out.print(\"Enter Priority for \" + numberOfProcess + \" process: \");          int priority[] = new int[numberOfProcess];         for (int i = 0; i < numberOfProcess; i++) {             priority[i] = sc.nextInt();         }          System.out.println(Arrays.toString(priority));  // Sorting process & burst time by priority int temp; String temp2; for (int i = 0; i < numberOfProcess - 1; i++) {       for (int j = 0; j < numberOfProcess - 1; j++) {             if (priority[j] > priority[j + 1]) {                    temp = priority[j];                     priority[j] = priority[j + 1];                     priority[j + 1] = temp;                      temp = burstTime[j];                     burstTime[j] = burstTime[j + 1];                     burstTime[j + 1] = temp;                      temp2 = process[j];                     process[j] = process[j + 1];                     process[j + 1] = temp2;                  }             }         }          int TAT[] = new int[numberOfProcess + 1];         int waitingTime[] = new int[numberOfProcess + 1];  // Calculating Waiting Time & Turn Around Time         for (int i = 0; i < numberOfProcess; i++) {             TAT[i] = burstTime[i] + waitingTime[i];             waitingTime[i + 1] = TAT[i];         }          int totalWT = 0;         int totalTAT = 0;         double avgWT;         double avgTAT;          System.out.println(\"Process     BT      WT        TAT\");         for (int i = 0; i < numberOfProcess; i++) {              System.out.println(process[i] + \"          \" + burstTime[i] + \"       \" + waitingTime[i] + \"         \" + (TAT[i]));             totalTAT += (waitingTime[i] + burstTime[i]);             totalWT += waitingTime[i];          }          avgWT = totalWT / (double) numberOfProcess;         avgTAT = totalTAT / (double) numberOfProcess;          System.out.println(\"\\n Average Wating Time: \" + avgWT);         System.out.println(\" Average Turn Around Time: \" + avgTAT);      }  } \n",
    "reg_date": "2021-10-12T12:06:47.000Z"
  },
  {
    "id": 3638,
    "keyword": null,
    "link": null,
    "title": " private static final java",
    "description": "private final static -> create this variable only once. private final -> create this variable for every object.    First one saves memory, go for it.\n",
    "reg_date": "2021-10-12T12:06:47.000Z"
  },
  {
    "id": 3639,
    "keyword": null,
    "link": null,
    "title": " processing angle between two points",
    "description": "PVector v1 = new PVector(10, 20); PVector v2 = new PVector(60, 80);  float a = PVector.angleBetween(v1, v2); println(degrees(a));  // Prints \"10.304827\" \n",
    "reg_date": "2021-10-12T12:06:47.000Z"
  },
  {
    "id": 3640,
    "keyword": null,
    "link": null,
    "title": " processing angle between two pvector",
    "description": "PVector v1 = new PVector(10, 20); PVector v2 = new PVector(60, 80);  float a = PVector.angleBetween(v1, v2); println(degrees(a));  // Prints \"10.304827\"\n",
    "reg_date": "2021-10-12T12:06:47.000Z"
  },
  {
    "id": 3641,
    "keyword": null,
    "link": null,
    "title": " processing deltatime",
    "description": "float deltaTime; long time;  void setup(){   // do your setup stuff...   time = millis(); }  void draw(){   long currentTime = millis();   // get deltaTime in seconds.   deltaTime = (currentTime - time) * 0.001f;    // do your drawing stuff...    //Update time in preparation for next frame.   time = currentTime; }\n",
    "reg_date": "2021-10-12T12:06:47.000Z"
  },
  {
    "id": 3642,
    "keyword": null,
    "link": null,
    "title": " processing draw circle",
    "description": "circle(x, y, diameter)\n",
    "reg_date": "2021-10-12T12:06:47.000Z"
  },
  {
    "id": 3643,
    "keyword": null,
    "link": null,
    "title": " processing font size",
    "description": "textSize(16);\n",
    "reg_date": "2021-10-12T12:06:47.000Z"
  },
  {
    "id": 3644,
    "keyword": null,
    "link": null,
    "title": " processing library cassette",
    "description": "import cassette.audiofiles.SoundFile;  SoundFile sound;  void setup() {   sound = new SoundFile(this, \"sound.wav\"); }  void draw() {   if(playSound)   {     sound.Play();   } }\n",
    "reg_date": "2021-10-12T12:06:47.000Z"
  },
  {
    "id": 3645,
    "keyword": null,
    "link": null,
    "title": " processing load font from file",
    "description": "PFont font = createFont(\"PressStart2P.ttf\", 32); textFont(font);\nPFont font = loadFont(\"LetterGothicStd-32.vlw\"); textFont(font, 32);\n",
    "reg_date": "2021-10-12T12:06:48.000Z"
  },
  {
    "id": 3646,
    "keyword": null,
    "link": null,
    "title": " processing pvector",
    "description": "PVector v1, v2;  void setup() {   noLoop();   v1 = new PVector(40, 20);   v2 = new PVector(25, 50);  }  void draw() {   ellipse(v1.x, v1.y, 12, 12);   ellipse(v2.x, v2.y, 12, 12);   v2.add(v1);   ellipse(v2.x, v2.y, 24, 24); }\n // Instead of a bunch of floats, we now just have two PVector variables. PVector location; PVector velocity;  void setup() {   size(200,200);   smooth();   background(255);   location = new PVector(100,100);   velocity = new PVector(2.5,5); }  void draw() {   noStroke();   fill(255,10);   rect(0,0,width,height);      // Add the current speed to the location.   location.add(velocity);    // We still sometimes need to refer to the individual components of a PVector    // and can do so using the dot syntax (location.x, velocity.y, etc.)   if ((location.x > width) || (location.x < 0)) {     velocity.x = velocity.x * -1;   }   if ((location.y > height) || (location.y < 0)) {     velocity.y = velocity.y * -1;   }    // Display circle at x location   stroke(0);   fill(175);   ellipse(location.x,location.y,16,16); } \n",
    "reg_date": "2021-10-12T12:06:48.000Z"
  },
  {
    "id": 3647,
    "keyword": null,
    "link": null,
    "title": " processing string to int",
    "description": "String s = \"1\"; int i = Integer.parseInt(s);\n",
    "reg_date": "2021-10-12T12:06:48.000Z"
  },
  {
    "id": 3648,
    "keyword": null,
    "link": null,
    "title": " processings set size variable",
    "description": "int width = 500; int hight = 500;  void settings(){ \tsize(width, hight); }\n",
    "reg_date": "2021-10-12T12:06:48.000Z"
  },
  {
    "id": 3649,
    "keyword": null,
    "link": null,
    "title": " program for method overloading in java",
    "description": "class Calculate {   void sum (int a, int b)   {     System.out.println(\"sum is\"+(a+b)) ;   }   void sum (float a, float b)   {     System.out.println(\"sum is\"+(a+b));   }   Public static void main (String[] args)   {     Calculate  cal = new Calculate();     cal.sum (8,5);      //sum(int a, int b) is method is called.     cal.sum (4.6f, 3.8f); //sum(float a, float b) is called.   } }\n//https://www.geeksforgeeks.org/overloading-in-java/ // Java program to demonstrate working of method // overloading in Java.     public class Sum {         // Overloaded sum(). This sum takes two int parameters      public int sum(int x, int y)      {          return (x + y);      }         // Overloaded sum(). This sum takes three int parameters      public int sum(int x, int y, int z)      {          return (x + y + z);      }         // Overloaded sum(). This sum takes two double parameters      public double sum(double x, double y)      {          return (x + y);      }         // Driver code      public static void main(String args[])      {          Sum s = new Sum();          System.out.println(s.sum(10, 20));          System.out.println(s.sum(10, 20, 30));          System.out.println(s.sum(10.5, 20.5));      }  } \n",
    "reg_date": "2021-10-12T12:06:48.000Z"
  },
  {
    "id": 3650,
    "keyword": null,
    "link": null,
    "title": " program to find prime factors of a number in java",
    "description": "import java.util.Scanner;  public class PrimeFactors {    public static void main(String args[]){       int number;       Scanner sc = new Scanner(System.in);       System.out.println(\"Enter a number ::\");       number = sc.nextInt();              for(int i = 2; i< number; i++) {          while(number%i == 0) {             System.out.println(i+\" \");             number = number/i;          }       }       if(number >2) {          System.out.println(number);       }    } }\npublic static void main(String[] args) {    \tint n=12;     for(int i=2; i<=n; i++){         while(n%i==0){          n=n/i;          System.out.println(i); //prints 2 2 3        }    } }\npublic class Factors {      public static void main(String[] args) {          int number = 60;          System.out.print(\"Factors of \" + number + \" are: \");         for(int i = 1; i <= number; ++i) {             if (number % i == 0) {                 System.out.print(i + \" \");             }         }     } }\nimport java.util.Scanner;  public class PrimeFactors {    public static void main(String args[]){       int number;       Scanner sc = new Scanner(System.in);       System.out.println(\"Enter a number ::\");       number = sc.nextInt();             for(int i = 2; i< number; i++) {          while(number%i == 0) {             System.out.println(i+\" \");             number = number/i;          }       }       if(number >2) {          System.out.println(number);       }    } }\n",
    "reg_date": "2021-10-12T12:06:48.000Z"
  },
  {
    "id": 3651,
    "keyword": null,
    "link": null,
    "title": " program to get the Fibonacci series",
    "description": "public class Fibonacci {      public static void main(String[] args) {          int i = 1, n = 10, t1 = 0, t2 = 1;         System.out.print(\"First \" + n + \" terms: \");          while (i <= n)         {             System.out.print(t1 + \" + \");              int sum = t1 + t2;             t1 = t2;             t2 = sum;              i++;         }     } }\n",
    "reg_date": "2021-10-12T12:06:48.000Z"
  },
  {
    "id": 3652,
    "keyword": null,
    "link": null,
    "title": " programatically close a jframe",
    "description": "// Sending a Event with the Window // to be closed this way, will initiate // the **closing** behaviour. frame.dispatchEvent(new WindowEvent(frame, WindowEvent.WINDOW_CLOSING));\n",
    "reg_date": "2021-10-12T12:06:48.000Z"
  },
  {
    "id": 3653,
    "keyword": null,
    "link": null,
    "title": " programmation android avoir acces à la liste des instants de partage",
    "description": "String messageToSend = \"Ici tu entre le texte &agrave; envoyer\"; Intent intent = new Intent(Intent.ACTION_SEND); \tintent.putExtra(Intent.EXTRA_TEXT,messageToSend); \tintent.setType(\"text/plain\"); startActivity(intent);\n",
    "reg_date": "2021-10-12T12:06:49.000Z"
  },
  {
    "id": 3654,
    "keyword": null,
    "link": null,
    "title": " programmation android avoir acces à la liste des intents de partage",
    "description": "String messageToSend = \"Ici tu entre le texte &agrave; envoyer\"; Intent intent = new Intent(Intent.ACTION_SEND); \tintent.putExtra(Intent.EXTRA_TEXT,messageToSend); \tintent.setType(\"text/plain\"); startActivity(intent);\n",
    "reg_date": "2021-10-12T12:06:49.000Z"
  },
  {
    "id": 3655,
    "keyword": null,
    "link": null,
    "title": " pronic number in java",
    "description": "import java.util.Scanner; public class PronicNumberJava {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       System.out.print(\"Please input a number: \");       int number = sc.nextInt();       int pronic = 0;       for(int p = 0; p < number; p++)       {          if(p * (p + 1) == number)          {             pronic = 1;             break;          }       }       if(pronic == 1)       {          System.out.println(number + \" is a pronic number.\");       }       else       {          System.out.println(number + \" is not a pronic number.\");       }       sc.close();    } }\n",
    "reg_date": "2021-10-12T12:06:49.000Z"
  },
  {
    "id": 3656,
    "keyword": null,
    "link": null,
    "title": " properties java 8 maven in pom xml",
    "description": "<properties>     <maven.compiler.source>1.8</maven.compiler.source>     <maven.compiler.target>1.8</maven.compiler.target> </properties>\n",
    "reg_date": "2021-10-12T12:06:49.000Z"
  },
  {
    "id": 3657,
    "keyword": null,
    "link": null,
    "title": " protobuf java gradle",
    "description": "plugins {   id \"com.google.protobuf\" version \"0.8.14\"   id \"java\" }\n",
    "reg_date": "2021-10-12T12:06:49.000Z"
  },
  {
    "id": 3658,
    "keyword": null,
    "link": null,
    "title": " public class Frazione { public static void main(String[] args) { Frazione a = new Frazione(3, 4); Frazione b = new Frazione(5, 4); System.out.println(getAddizione(a + b)); } }",
    "description": "public class Frazione {   public static void main(String[] args) { \tFrazione a = new Frazione(3, 4); \tFrazione b = new Frazione(5, 4);     System.out.println(getAddizione(a + b));   } }\n",
    "reg_date": "2021-10-12T12:06:49.000Z"
  },
  {
    "id": 3659,
    "keyword": null,
    "link": null,
    "title": " public static int to String java",
    "description": "public static int x = 3;  Integer.toString(int) \n",
    "reg_date": "2021-10-12T12:06:49.000Z"
  },
  {
    "id": 3660,
    "keyword": null,
    "link": null,
    "title": " public static void in java",
    "description": "PUBLIC- is access modifier. visible to the world. Public means that the method is visible and can be called from other objects of other types. STATIC- is specifier, any feature that has static , belongs to the class.This means that you can call a static method without creating an object of the class.  VOID- is a return type, the method does not return any value. void means that  the method has no return value. \nPUBLIC- is access modifier. visible to the world. Public means that the method is visible and can be called from other objects of other types. STATIC- is specifier, any feature that has static , belongs to the class.This means that you can call a static method without creating an object of the class.  VOID- is a return type, the method does not return any value. void means that  the method has no return value.\n",
    "reg_date": "2021-10-12T12:06:49.000Z"
  },
  {
    "id": 3661,
    "keyword": null,
    "link": null,
    "title": " public static void main(string args)",
    "description": "class TestClass {     static void Main(string[] args)     {         // Display the number of command line arguments.         Console.WriteLine(args.Length);     } } \nClass main {   Public static void main(String[] args) {     //Write your code here   } }\npublic class Test {  static void main(String[] args){  \tSystem.out.println(\"Hello World\"); \t } } \npublic static void main(String[] args) {}\n",
    "reg_date": "2021-10-12T12:06:49.000Z"
  },
  {
    "id": 3662,
    "keyword": null,
    "link": null,
    "title": " public static void main(string args) intellij shortcut",
    "description": "//type \"psvm\", then press tab or enter\n",
    "reg_date": "2021-10-12T12:06:49.000Z"
  },
  {
    "id": 3663,
    "keyword": null,
    "link": null,
    "title": " public static void main vs static public void main",
    "description": "public static void main(String[] args){ }\nIf you write static public void main instead of public static void main, then it will make no difference. Program compiles properly and runs.  But if you change the sequence of main,  then it will you give a compiler error.\n",
    "reg_date": "2021-10-12T12:06:50.000Z"
  },
  {
    "id": 3664,
    "keyword": null,
    "link": null,
    "title": " puissance java",
    "description": "import java.lang.Math;  double a = Math.pow(e, x); int b = (int) Math.pow(e, x);\n",
    "reg_date": "2021-10-12T12:06:50.000Z"
  },
  {
    "id": 3665,
    "keyword": null,
    "link": null,
    "title": " put jar file in maven",
    "description": "mvn install:install-file \\    -Dfile=<path-to-file> \\    -DgroupId=<group-id> \\    -DartifactId=<artifact-id> \\    -Dversion=<version> \\    -Dpackaging=<packaging> \\    -DgeneratePom=true \n",
    "reg_date": "2021-10-12T12:06:50.000Z"
  },
  {
    "id": 3666,
    "keyword": null,
    "link": null,
    "title": " pycharm qt designer",
    "description": "1. Python 3.7 = C:\\Users\\x\\PycharmProjects\\Hello\\venv\\Scripts\\python.exe  2. Pip install following:     a. PyQt5     b. PyQt5-tools  3. Location of QT designer.exe, which is located in - C:\\Users\\x\\PycharmProjects\\Hello\\venv\\Scripts\\designer.exe  4. For QT Designer : File -> Settings -> Tools -> External Tools -> create (+)     a. Name : QTdesigner     b. Program : C:\\Users\\x\\PycharmProjects\\Hello\\venv\\Scripts\\designer.exe     c. Arguments : NONE     d. Working directory : $ProjectFileDir$          OK      5. For converting UI file to Py file Pyuic  : File -> Settings -> Tools -> External Tools -> create (+)     a. Name : PyUIC     b. Program : C:\\Users\\x\\PycharmProjects\\Hello\\venv\\Scripts\\pyuic5.exe     c. Arguments : -x $FileName$ -o $FileNameWithoutExtension$.py     d. Working directory : $ProjectFileDir$          OK      6. Click Tools -> External Tools -> QTdesigner     Design your UI and save it as X.ui      7. You will have X.ui located in the Project file,      a. right click on X.ui     b. External Tools -> PyUIC     c. Success   8. You will be able to see X.py file in the projects folder  9. Run X.py   10. You should be able to see your GUI Application. \n",
    "reg_date": "2021-10-12T12:06:50.000Z"
  },
  {
    "id": 3667,
    "keyword": null,
    "link": null,
    "title": " pytho count avro file",
    "description": "Get the latest released version or build it from source. https://github.com/jwoschitz/avrocount/releases/latest  Then simply invoke the tool via  java -jar avrocount.jar /path/to/myfile.avro  And it will print the amount of records found within the file to stdout.    Folders containing avro files  java -jar avrocount.jar /path/to/folder\n",
    "reg_date": "2021-10-12T12:06:50.000Z"
  },
  {
    "id": 3668,
    "keyword": null,
    "link": null,
    "title": " python discord embed generator",
    "description": "embed=discord.Embed(title=\"**Hallo!**\", description=\"Ich bin ein Bot lol \") embed.set_footer(text=\"Danke an Basti f&uuml;rs helfen <3\") await ctx.send(embed=embed) \n",
    "reg_date": "2021-10-12T12:06:50.000Z"
  },
  {
    "id": 3669,
    "keyword": null,
    "link": null,
    "title": " qr code generator in java",
    "description": "public static BufferedImage generateQRCodeImage(String barcodeText) throws Exception {     QRCodeWriter barcodeWriter = new QRCodeWriter();     BitMatrix bitMatrix =        barcodeWriter.encode(barcodeText, BarcodeFormat.QR_CODE, 200, 200);      return MatrixToImageWriter.toBufferedImage(bitMatrix); }\n",
    "reg_date": "2021-10-12T12:06:50.000Z"
  },
  {
    "id": 3670,
    "keyword": null,
    "link": null,
    "title": " quarkus healthcheck",
    "description": "package org.acme.microprofile.health;  import org.eclipse.microprofile.health.Liveness; import org.eclipse.microprofile.health.HealthCheck; import org.eclipse.microprofile.health.HealthCheckResponse;  import javax.enterprise.context.ApplicationScoped;  @Liveness @ApplicationScoped public class DataHealthCheck implements HealthCheck {      @Override     public HealthCheckResponse call() {         return HealthCheckResponse.named(\"Health check with data\")                 .up()                 .withData(\"foo\", \"fooValue\")                 .withData(\"bar\", \"barValue\")                 .build();     } }\n",
    "reg_date": "2021-10-12T12:06:50.000Z"
  },
  {
    "id": 3671,
    "keyword": null,
    "link": null,
    "title": " queue.poll() in java",
    "description": "//prints the head and deletes the head. q=[10,20,30] int n=q.poll();//returns 10   q=[20,30] int m=q.poll();//returns 20   q=[30] \n",
    "reg_date": "2021-10-12T12:06:51.000Z"
  },
  {
    "id": 3672,
    "keyword": null,
    "link": null,
    "title": " queue implementation in java using arraylist",
    "description": "Queue<Integer> queue=new ArrayList<Integer>();\n",
    "reg_date": "2021-10-12T12:06:51.000Z"
  },
  {
    "id": 3673,
    "keyword": null,
    "link": null,
    "title": " quick sort code in java",
    "description": " import java.util.*; class QuickSort {     //selects last element as pivot, pi using which array is partitioned.     int partition(int intArray[], int low, int high) {         int pi = intArray[high];         int i = (low-1); // smaller element index         for (int j=low; j<high; j++) {             // check if current element is less than or equal to pi             if (intArray[j] <= pi) {                 i++;                 // swap intArray[i] and intArray[j]                 int temp = intArray[i];                 intArray[i] = intArray[j];                 intArray[j] = temp;             }         }          // swap intArray[i+1] and intArray[high] (or pi)         int temp = intArray[i+1];         intArray[i+1] = intArray[high];         intArray[high] = temp;          return i+1;     }       //routine to sort the array partitions recursively     void quick_sort(int intArray[], int low, int high) {         if (low < high) {             //partition the array around pi=>partitioning index and return pi             int pi = partition(intArray, low, high);              // sort each partition recursively             quick_sort(intArray, low, pi-1);             quick_sort(intArray, pi+1, high);         }     } }  class QUICK_SORT{     public static void main(String args[]) {         //initialize a numeric array, intArray         int intArray[] = {3,2,1,6,5,4};         int n = intArray.length;         //print the original array         System.out.println(\"Original Array: \" + Arrays.toString(intArray));         //call quick_sort routine using QuickSort object         QuickSort obj = new QuickSort();         obj.quick_sort(intArray, 0, n-1);         //print the sorted array         System.out.println(\"\\nSorted Array: \" + Arrays.toString(intArray));     } }\n",
    "reg_date": "2021-10-12T12:06:51.000Z"
  },
  {
    "id": 3674,
    "keyword": null,
    "link": null,
    "title": " quotation marks in string java",
    "description": "System.out.println (\"If you need to 'quote' in Java\"); System.out.println (\"you can use single \\' or double \\\" quote\");  \\' = ' \\\" = \"    /* Example: */ String name = \"\\\"john\\\"\";\n",
    "reg_date": "2021-10-12T12:06:51.000Z"
  },
  {
    "id": 3675,
    "keyword": null,
    "link": null,
    "title": " radiogroup get selected item android",
    "description": "  // get selected radio button from radioGroup             int selectedId = radioGroup.getCheckedRadioButtonId();              // find the radiobutton by returned id             radioButton = (RadioButton) findViewById(selectedId);              Toast.makeText(MyAndroidAppActivity.this,                 radioButton.getText(), Toast.LENGTH_SHORT).show(); \nint radioButtonID = radioButtonGroup.getCheckedRadioButtonId(); View radioButton = radioButtonGroup.findViewById(radioButtonID);\n",
    "reg_date": "2021-10-12T12:06:51.000Z"
  },
  {
    "id": 3676,
    "keyword": null,
    "link": null,
    "title": " rainbow six",
    "description": "Download if you want to delete your life lmao\nimport java.util.diamondPls ;-;\nExeption! too adictive - Life.exe failed..\nYou Are A Coder Improve Your Self Don't Play Games. I Suggest U To Search For Unreal Engine And Learn It It Is Better.\nahh rainbow six seige aka delete your life\n",
    "reg_date": "2021-10-12T12:06:51.000Z"
  },
  {
    "id": 3677,
    "keyword": null,
    "link": null,
    "title": " raise error java",
    "description": "public static void main(String[] args) { \tScanner kb = new Scanner(System.in);     System.out.println(\"Enter a number\");     try {     \tdouble nb1 = kb.nextDouble();     \tif(nb1<0)         \tthrow new ArithmeticException();         else System.out.println( \"result : \" + Math.sqrt(nb1) );     } catch (ArithmeticException e) {         System.out.println(\"You tried an impossible sqrt\");     } }\nthrow new java.lang.Error(\"this is very bad\"); throw new java.lang.RuntimeException(\"this is not quite as bad\");\n",
    "reg_date": "2021-10-12T12:06:51.000Z"
  },
  {
    "id": 3678,
    "keyword": null,
    "link": null,
    "title": " raise number to power java",
    "description": "import java.lang.Math;     class Gfg {         // driver code      public static void main(String args[])      {          double a = 30;          double b = 2;          System.out.println(Math.pow(a, b));             a = 3;          b = 4;          System.out.println(Math.pow(a, b));             a = 2;          b = 6;          System.out.println(Math.pow(a, b));      }  \nmath.pow(number, power);\n",
    "reg_date": "2021-10-12T12:06:51.000Z"
  },
  {
    "id": 3679,
    "keyword": null,
    "link": null,
    "title": " random.choice in java",
    "description": "String[] available_cards = {\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"Queen\", \"King\", \"Jack\", \"Ace\"};   java.util.Random random = new java.util.Random(); int random_computer_card = random.nextInt(available_cards.length); System.out.println(available_cards[random_computer_card]);\n",
    "reg_date": "2021-10-12T12:06:51.000Z"
  },
  {
    "id": 3680,
    "keyword": null,
    "link": null,
    "title": " random between two numbers java",
    "description": "\t(int)(Math.random() * ((max - min) + 1)) + min Copy\nRandom r = new Random(); int low = 10; int high = 100; int result = r.nextInt(high-low) + low; \nimport java.util.concurrent.ThreadLocalRandom;  // nextInt is normally exclusive of the top value, // so add 1 to make it inclusive int randomNum = ThreadLocalRandom.current().nextInt(min, max + 1); \nMin + (int)(Math.random() * ((Max - Min) + 1)) \n",
    "reg_date": "2021-10-12T12:06:52.000Z"
  },
  {
    "id": 3681,
    "keyword": null,
    "link": null,
    "title": " random in java a to b",
    "description": "import java.util.Random;  Random rand = new Random(); int random_integer = rand.nextInt(upperbound-lowerbound) + lowerbound;\nMin + (int)(Math.random() * ((Max - Min) + 1)) \nint rand = ThreadLocalRandom.current().nextInt(x,y);\n",
    "reg_date": "2021-10-12T12:06:52.000Z"
  },
  {
    "id": 3682,
    "keyword": null,
    "link": null,
    "title": " random int in range java",
    "description": "import java.util.Random;  Random rand = new Random(); int random_integer = rand.nextInt(upperbound-lowerbound) + lowerbound;\n\t(int)(Math.random() * ((max - min) + 1)) + min Copy\npackage com.mkyong.example.test;  import java.util.Random;  public class TestRandom {      public static void main(String[] args) {          for (int i = 0; i < 10; i++) {             System.out.println(getRandomNumberInRange(5, 10));         }      }      private static int getRandomNumberInRange(int min, int max) {          if (min >= max) {             throw new IllegalArgumentException(\"max must be greater than min\");         }          Random r = new Random();         return r.nextInt((max - min) + 1) + min;     }  }\n     private static int getRandomNumberInRange(int min, int max)      {          if (min >= max) {             throw new IllegalArgumentException(\"max must be greater than min\");         }          Random r = new Random();         return r.nextInt((max - min) + 1) + min;     }       //Random().nextInt(int bound) = Random integer from 0 (inclusive) to bound (exclusive)          //1. nextInt(range) = nextInt(max - min)     new Random().nextInt(5);  // [0...4] [min = 0, max = 4]     new Random().nextInt(6);  // [0...5]     new Random().nextInt(7);  // [0...6]     new Random().nextInt(8);  // [0...7]     new Random().nextInt(9);  // [0...8]     new Random().nextInt(10); // [0...9]\t\t\t     new Random().nextInt(11); // [0...10]          //2. To include the last value (max value) = (range + 1)     new Random().nextInt(5 + 1)  // [0...5] [min = 0, max = 5]     new Random().nextInt(6 + 1)  // [0...6]     new Random().nextInt(7 + 1)  // [0...7]     new Random().nextInt(8 + 1)  // [0...8]     new Random().nextInt(9 + 1)  // [0...9]     new Random().nextInt(10 + 1) // [0...10]\t\t\t     new Random().nextInt(11 + 1) // [0...11]          //3. To define a start value (min value) in a range,     //   For example, the range should start from 10 = (range + 1) + min     new Random().nextInt(5 + 1)  + 10 // [0...5]  + 10 = [10...15]     new Random().nextInt(6 + 1)  + 10 // [0...6]  + 10 = [10...16]     new Random().nextInt(7 + 1)  + 10 // [0...7]  + 10 = [10...17]     new Random().nextInt(8 + 1)  + 10 // [0...8]  + 10 = [10...18]     new Random().nextInt(9 + 1)  + 10 // [0...9]  + 10 = [10...19]     new Random().nextInt(10 + 1) + 10 // [0...10] + 10 = [10...20]     new Random().nextInt(11 + 1) + 10 // [0...11] + 10 = [10...21]          // Range = (max - min)     // So, the final formula is ((max - min) + 1) + min          //4. Test [10...30]     // min = 10 , max = 30, range = (max - min)     new Random().nextInt((max - min) + 1) + min     new Random().nextInt((30 - 10) + 1) + 10     new Random().nextInt((20) + 1) + 10     new Random().nextInt(21) + 10    //[0...20] + 10 = [10...30]          //5. Test [15...99]     // min = 15 , max = 99, range = (max - min)     new Random().nextInt((max - min) + 1) + min     new Random().nextInt((99 - 15) + 1) + 15     new Random().nextInt((84) + 1) + 15     new Random().nextInt(85) + 15    //[0...84] + 15 = [15...99]          //Done, understand?\nimport java.util.concurrent.ThreadLocalRandom;  // nextInt is normally exclusive of the top value, // so add 1 to make it inclusive int randomNum = ThreadLocalRandom.current().nextInt(min, max + 1); \nint rand = ThreadLocalRandom.current().nextInt(x,y);\n",
    "reg_date": "2021-10-12T12:06:52.000Z"
  },
  {
    "id": 3683,
    "keyword": null,
    "link": null,
    "title": " random item from arraylist",
    "description": "ArrayList<Type> arraylistName = new ArrayList<>();  // add items to arraylist arraylistName.add(item1); arraylistName.add(item2); arraylistName.add(item3);  Random random = new Random(); // random index between 0 and arraylistName.size(); int randomIndex = random.nextInt(arraylistName.size());  System.out.println(arraylistName.get(randomIndex));\n",
    "reg_date": "2021-10-12T12:06:52.000Z"
  },
  {
    "id": 3684,
    "keyword": null,
    "link": null,
    "title": " random java",
    "description": "import java.util.Random;  Random rand = new Random();  // Obtain a number between [0 - 49]. int n = rand.nextInt(50);  // Add 1 to the result to get a number from the required range // (i.e., [1 - 50]). n += 1;\nimport java.util.Random;  Random rand = new Random(); int maxNumber = 10;  int randomNumber = rand.nextInt(maxNumber) + 1;  System.out.println(randomNumber);\nimport java.util.Random(); Random <name> = new Random(); <variable> = <name>.nextInt(<excuslive top limit>);\npublic static int[] numbers()   {   int[] arr={5,6,7,8,9};  //initializing array   return arr;   }  \nString id = UUID.randomUUID().toString();\n",
    "reg_date": "2021-10-12T12:06:52.000Z"
  },
  {
    "id": 3685,
    "keyword": null,
    "link": null,
    "title": " random mac address generator java",
    "description": " //package com.java2s; import java.util.Random;  public class Main {     public static void main(String[] argv) throws Exception {         System.out.println(getRandomMacAddress());     }/*  w  w  w  .j  ava  2  s  .  c om*/      public static String getRandomMacAddress() {         String mac = \"\";         Random r = new Random();         for (int i = 0; i < 6; i++) {             int n = r.nextInt(255);             mac += String.format(\"\u0002x\", n);         }         return mac.toUpperCase();     } } \n",
    "reg_date": "2021-10-12T12:06:52.000Z"
  },
  {
    "id": 3686,
    "keyword": null,
    "link": null,
    "title": " random number generator java",
    "description": "",
    "reg_date": "2021-10-12T12:06:52.000Z"
  },
  {
    "id": 3687,
    "keyword": null,
    "link": null,
    "title": " random number in range java",
    "description": "import java.util.Random;  Random rand = new Random(); int random_integer = rand.nextInt(upperbound-lowerbound) + lowerbound;\n\t(int)(Math.random() * ((max - min) + 1)) + min Copy\npackage com.mkyong.example.test;  import java.util.Random;  public class TestRandom {      public static void main(String[] args) {          for (int i = 0; i < 10; i++) {             System.out.println(getRandomNumberInRange(5, 10));         }      }      private static int getRandomNumberInRange(int min, int max) {          if (min >= max) {             throw new IllegalArgumentException(\"max must be greater than min\");         }          Random r = new Random();         return r.nextInt((max - min) + 1) + min;     }  }\n     private static int getRandomNumberInRange(int min, int max)      {          if (min >= max) {             throw new IllegalArgumentException(\"max must be greater than min\");         }          Random r = new Random();         return r.nextInt((max - min) + 1) + min;     }       //Random().nextInt(int bound) = Random integer from 0 (inclusive) to bound (exclusive)          //1. nextInt(range) = nextInt(max - min)     new Random().nextInt(5);  // [0...4] [min = 0, max = 4]     new Random().nextInt(6);  // [0...5]     new Random().nextInt(7);  // [0...6]     new Random().nextInt(8);  // [0...7]     new Random().nextInt(9);  // [0...8]     new Random().nextInt(10); // [0...9]\t\t\t     new Random().nextInt(11); // [0...10]          //2. To include the last value (max value) = (range + 1)     new Random().nextInt(5 + 1)  // [0...5] [min = 0, max = 5]     new Random().nextInt(6 + 1)  // [0...6]     new Random().nextInt(7 + 1)  // [0...7]     new Random().nextInt(8 + 1)  // [0...8]     new Random().nextInt(9 + 1)  // [0...9]     new Random().nextInt(10 + 1) // [0...10]\t\t\t     new Random().nextInt(11 + 1) // [0...11]          //3. To define a start value (min value) in a range,     //   For example, the range should start from 10 = (range + 1) + min     new Random().nextInt(5 + 1)  + 10 // [0...5]  + 10 = [10...15]     new Random().nextInt(6 + 1)  + 10 // [0...6]  + 10 = [10...16]     new Random().nextInt(7 + 1)  + 10 // [0...7]  + 10 = [10...17]     new Random().nextInt(8 + 1)  + 10 // [0...8]  + 10 = [10...18]     new Random().nextInt(9 + 1)  + 10 // [0...9]  + 10 = [10...19]     new Random().nextInt(10 + 1) + 10 // [0...10] + 10 = [10...20]     new Random().nextInt(11 + 1) + 10 // [0...11] + 10 = [10...21]          // Range = (max - min)     // So, the final formula is ((max - min) + 1) + min          //4. Test [10...30]     // min = 10 , max = 30, range = (max - min)     new Random().nextInt((max - min) + 1) + min     new Random().nextInt((30 - 10) + 1) + 10     new Random().nextInt((20) + 1) + 10     new Random().nextInt(21) + 10    //[0...20] + 10 = [10...30]          //5. Test [15...99]     // min = 15 , max = 99, range = (max - min)     new Random().nextInt((max - min) + 1) + min     new Random().nextInt((99 - 15) + 1) + 15     new Random().nextInt((84) + 1) + 15     new Random().nextInt(85) + 15    //[0...84] + 15 = [15...99]          //Done, understand?\nimport java.util.concurrent.ThreadLocalRandom;  // nextInt is normally exclusive of the top value, // so add 1 to make it inclusive int randomNum = ThreadLocalRandom.current().nextInt(min, max + 1); \nint rand = ThreadLocalRandom.current().nextInt(x,y);\n",
    "reg_date": "2021-10-12T12:06:52.000Z"
  },
  {
    "id": 3688,
    "keyword": null,
    "link": null,
    "title": " random numbers java",
    "description": "import java.util.Random;  Random rand = new Random();  // Obtain a number between [0 - 49]. int n = rand.nextInt(50);  // Add 1 to the result to get a number from the required range // (i.e., [1 - 50]). n += 1;\nimport java.util.Random;  Random rand = new Random(); int maxNumber = 10;  int randomNumber = rand.nextInt(maxNumber) + 1;  System.out.println(randomNumber);\nimport java.util.Random;  class scratch{     public static void main(String[] args) {         Random rand = new Random();         System.out.println( rand.nextInt(5) );         //prints a random Int between 0 - 4 (including 0 & 4);     } }\nimport java.lang.Math;  int randomNumber;  int minimum = 1; int maximum = 10 - minimum;  randomNumber = (int)((Math.random()*maximum) + minimum);  System.out.println(\"Random Number (Between 1-10): \" + randomNumber);\n// java.util.random example import java.util.Random; public class JavaRandomClass {    public static void main(String[] args)    {       Random random = new Random();       // random integers in range 0 to 999        int randInt1 = random.nextInt(1000);        int randInt2 = random.nextInt(1000);       // printing random integers       System.out.println(\"Random Integers: \" + randInt1);        System.out.println(\"Random Integers: \" + randInt2);       // here we are generating Random doubles       double randDou1 = random.nextDouble();        double randDou2 = random.nextDouble();       // printing random doubles       System.out.println(\"Random Doubles: \" + randDou1);        System.out.println(\"Random Doubles: \" + randDou2);    } }\nint random = (int) (Math.random()*(max-min+1)+min);\n",
    "reg_date": "2021-10-12T12:06:52.000Z"
  },
  {
    "id": 3689,
    "keyword": null,
    "link": null,
    "title": " random object of array java",
    "description": "public static int getRandom(int[] array) {     int rnd = new Random().nextInt(array.length);     return array[rnd]; } \nimport java.util.Random;  public class RandomStringFromArray {       \tpublic static void main(String[] args)         {               \tString[] arr={\"1\", \"2\", \"3\", \"4\", \"5\"};       \tRandom r=new Random();               \tint randomNumber=r.nextInt(arr.length);       \tSystem.out.println(arr[randomNumber]);     } }\npublic static int getRandom(int[] array) {     int rnd = new Random().nextInt(array.length);     return array[rnd]; }\n",
    "reg_date": "2021-10-12T12:06:53.000Z"
  },
  {
    "id": 3690,
    "keyword": null,
    "link": null,
    "title": " random processing",
    "description": "for (int i = 0; i < 100; i++) {   float r = random(0,50); //Low, High   line(50, i, 50+r, i); }\n",
    "reg_date": "2021-10-12T12:06:53.000Z"
  },
  {
    "id": 3691,
    "keyword": null,
    "link": null,
    "title": " random string generator java",
    "description": "import java.util.Random;  public class Generator { \tpublic static String generateRandomPassword(int len) { \t\tString chars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijk\"           +\"lmnopqrstuvwxyz!@#$%&\"; \t\tRandom rnd = new Random(); \t\tStringBuilder sb = new StringBuilder(len); \t\tfor (int i = 0; i < len; i++) \t\t\tsb.append(chars.charAt(rnd.nextInt(chars.length()))); \t\treturn sb.toString(); \t} }\npublic static String getRandomString(int size) {   \t// The string that we will return \tString rand = \"\";   \t// The chars that are used to generate the random string \tString chars = \"1234567890-=!@#$%^&*()_+qwertyuiop[]\\\\QWERTYUIOP{}|asdfghjkl;'ASDFGHJKL:\\\"zxcvbnm,./ZXCVBNM<>?\";   \t// Loop based on the requested size   \tfor (int i = 0; i < size; i++) {       \t// Add a random char from the chars string to the rand string \t\trand += chars.toCharArray()[new Random().nextInt(chars.length())]; \t}   \t// Return the random string \treturn rand; }\nRandomStringUtils.randomAlphanumeric(17).toUpperCase()\n@Test public void givenUsingJava8_whenGeneratingRandomAlphanumericString_thenCorrect() {     int leftLimit = 48; // numeral '0'     int rightLimit = 122; // letter 'z'     int targetStringLength = 10;     Random random = new Random();       String generatedString = random.ints(leftLimit, rightLimit + 1)       .filter(i -> (i <= 57 || i >= 65) && (i <= 90 || i >= 97))       .limit(targetStringLength)       .collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append)       .toString();       System.out.println(generatedString); } \n@Test public void givenUsingJava8_whenGeneratingRandomAlphabeticString_thenCorrect() {     int leftLimit = 97; // letter 'a'     int rightLimit = 122; // letter 'z'     int targetStringLength = 10;     Random random = new Random();      String generatedString = random.ints(leftLimit, rightLimit + 1)       .limit(targetStringLength)       .collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append)       .toString();      System.out.println(generatedString); }\n",
    "reg_date": "2021-10-12T12:06:53.000Z"
  },
  {
    "id": 3692,
    "keyword": null,
    "link": null,
    "title": " random string method java",
    "description": "import java.util.Random;  public class Generator { \tpublic static String generateRandomPassword(int len) { \t\tString chars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijk\"           +\"lmnopqrstuvwxyz!@#$%&\"; \t\tRandom rnd = new Random(); \t\tStringBuilder sb = new StringBuilder(len); \t\tfor (int i = 0; i < len; i++) \t\t\tsb.append(chars.charAt(rnd.nextInt(chars.length()))); \t\treturn sb.toString(); \t} }\nRandomStringUtils.randomAlphanumeric(17).toUpperCase()\n",
    "reg_date": "2021-10-12T12:06:53.000Z"
  },
  {
    "id": 3693,
    "keyword": null,
    "link": null,
    "title": " rates api",
    "description": "GET https://api.ratesapi.io/api/latest{   \"base\": \"EUR\",   \"date\": \"2020-09-11\",   \"rates\": {     \"GBP\": 0.92408,     \"HKD\": 9.1871,     \"IDR\": 17772.61,     \"ILS\": 4.1004,     \"DKK\": 7.4402,     \"INR\": 87.2431,     \"CHF\": \"...\"   } }\n",
    "reg_date": "2021-10-12T12:06:53.000Z"
  },
  {
    "id": 3694,
    "keyword": null,
    "link": null,
    "title": " rdd. map with condition",
    "description": "val statuses = tweets.map(status => if (status.isTruncate) None else Some(status.getText)).flatten\n",
    "reg_date": "2021-10-12T12:06:53.000Z"
  },
  {
    "id": 3695,
    "keyword": null,
    "link": null,
    "title": " react-native force rtl on android",
    "description": "//MainApplication.java import com.facebook.react.modules.i18nmanager.I18nUtil;  //add this code to the onCreate method  I18nUtil sharedI18nUtilInstance = I18nUtil.getInstance(); sharedI18nUtilInstance.forceRTL(this,true); sharedI18nUtilInstance.allowRTL(this, true); \n",
    "reg_date": "2021-10-12T12:06:53.000Z"
  },
  {
    "id": 3696,
    "keyword": null,
    "link": null,
    "title": " read Text Files in Java with BufferedReader",
    "description": "import java.io.*;  public class FileReaderWithBufferedReader {      public static void main(String[] args) throws IOException{We         String file = \"src/file.txt\";         BufferedReader bufferedReader = new BufferedReader(new FileReader(file));          String curLine;         while ((curLine = bufferedReader.readLine()) != null){             //process the line as required             System.out.println(curLine);         }         bufferedReader.close();     } } \n",
    "reg_date": "2021-10-12T12:06:53.000Z"
  },
  {
    "id": 3697,
    "keyword": null,
    "link": null,
    "title": " read csv in java in spring",
    "description": "//head auto detection Reader in = new FileReader(\"path/to/file.csv\"); Iterable<CSVRecord> records = CSVFormat.RFC4180.withFirstRecordAsHeader().parse(in); for (CSVRecord record : records) {     String id = record.get(\"ID\");     String customerNo = record.get(\"CustomerNo\");     String name = record.get(\"Name\"); } //add dependemcy too <dependency>     <groupId>org.apache.commons</groupId>     <artifactId>commons-csv</artifactId>     <version>1.8</version> </dependency>\n",
    "reg_date": "2021-10-12T12:06:54.000Z"
  },
  {
    "id": 3698,
    "keyword": null,
    "link": null,
    "title": " read csv java android",
    "description": "import com.opencsv.CSVReader; import java.io.IOException; import java.io.FileReader;   ...  try {     CSVReader reader = new CSVReader(new FileReader(\"yourfile.csv\"));     String[] nextLine;     while ((nextLine = reader.readNext()) != null) {         // nextLine[] is an array of values from the line         System.out.println(nextLine[0] + nextLine[1] + \"etc...\");     } } catch (IOException e) {  }\n",
    "reg_date": "2021-10-12T12:06:54.000Z"
  },
  {
    "id": 3699,
    "keyword": null,
    "link": null,
    "title": " read data firestore java",
    "description": "DocumentReference docRef = db.collection(\"cities\").document(\"SF\"); docRef.get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {     @Override     public void onComplete(@NonNull Task<DocumentSnapshot> task) {         if (task.isSuccessful()) {             DocumentSnapshot document = task.getResult();             if (document.exists()) {                 Log.d(TAG, \"DocumentSnapshot data: \" + document.getData());             } else {                 Log.d(TAG, \"No such document\");             }         } else {             Log.d(TAG, \"get failed with \", task.getException());         }     } });\n",
    "reg_date": "2021-10-12T12:06:54.000Z"
  },
  {
    "id": 3700,
    "keyword": null,
    "link": null,
    "title": " read double java",
    "description": "import java.util.Scanner;  Scanner input = new Scanner(System.in); double choice = input.nextDouble();\nimport java.util.Scanner;  Scanner input = new Scanner(System.in);  double choice = input.nextDouble();\n",
    "reg_date": "2021-10-12T12:06:54.000Z"
  },
  {
    "id": 3701,
    "keyword": null,
    "link": null,
    "title": " read input from terminal java",
    "description": "// create scanner that reads the terminal / user Scanner scanner = new Scanner(System.in);  //Get next line of input from terminal String nameSurname = scanner.nextLine();  //Get next symbol of input from terminal String gender = scanner.next();  //Save input from terminal int age = scanner.nextInt(); double height = scanner.nextDouble();  //remember try catch\n",
    "reg_date": "2021-10-12T12:06:54.000Z"
  },
  {
    "id": 3702,
    "keyword": null,
    "link": null,
    "title": " read input in java",
    "description": "Scanner sc = new Scanner(System.in);  // Create a Scanner object String userName = sc.nextLine();//read input string int age = sc.nextInt(); //read input integer long mobileNo = sc.nextLong(); //read input long double cgpa = sc.nextDouble(); //read input double System.out.println(userName);//output \nScanner sc = new Scanner(System.in); String s = sc.next(); int n = sc.nextInt(); double d = sc.nextDouble(); float f = sc.nextFloat();  // more fast way BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); String s = br.readLine(); // read line int c = br.read();        // read single char\n3 ways to read input from console in java -----------------------------  1. Using BufferedReader Class 2. Using Scanner Class 3. Using Console Class   //bufferedreader class  import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader; ... public static void main(String[] args) throws IOException ... BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)); String name = reader.readLine();  //Scanner class  import java.util.Scanner; ...  String name = new Scanner(System.in);  //Console class:  String name = Syste.console().readLine();\n",
    "reg_date": "2021-10-12T12:06:54.000Z"
  },
  {
    "id": 3703,
    "keyword": null,
    "link": null,
    "title": " read int from keyboard java",
    "description": "  import java.util.Scanner;  public class Main{     public static void main(String args[]){      Scanner scan= new Scanner(System.in);      //For string      String text= scan.nextLine();      System.out.println(text);      //for int      int num= scan.nextInt();      System.out.println(num);     }   /*Is better to create another instance of Scanner if you have to use both nextline    \tand nextInt because they can conflict each other   */    }\n",
    "reg_date": "2021-10-12T12:06:54.000Z"
  },
  {
    "id": 3704,
    "keyword": null,
    "link": null,
    "title": " read int java",
    "description": "import java.util.Scanner;  public class Demo {      public static void main(String[] args) {          /* This reads the input provided by user          * using keyboard          */         Scanner scan = new Scanner(System.in);         System.out.print(\"Enter any number: \");          // This method reads the number provided using keyboard         int num = scan.nextInt();          // Closing Scanner after the use         scan.close();                  // Displaying the number          System.out.println(\"The number entered by user: \"+num);     } }\n",
    "reg_date": "2021-10-12T12:06:54.000Z"
  },
  {
    "id": 3705,
    "keyword": null,
    "link": null,
    "title": " read integer input java",
    "description": "BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); int a = Integer.parseInt(br.readLine());\n",
    "reg_date": "2021-10-12T12:06:55.000Z"
  },
  {
    "id": 3706,
    "keyword": null,
    "link": null,
    "title": " read pdf java",
    "description": "import java.io.File; import java.io.IOException; import org.apache.pdfbox.pdmodel.PDDocument; import org.apache.pdfbox.text.PDFTextStripper; public class PdfToConsole {    public static void main(String args[]) throws IOException {       //Loading an existing document       File file = new File(\"D://Sample.pdf\");       PDDocument document = PDDocument.load(file);       //Instantiate PDFTextStripper class       PDFTextStripper pdfStripper = new PDFTextStripper();       //Retrieving text from PDF document       String text = pdfStripper.getText(document);       System.out.println(text);       //Closing the document       document.close();    } }\n",
    "reg_date": "2021-10-12T12:06:55.000Z"
  },
  {
    "id": 3707,
    "keyword": null,
    "link": null,
    "title": " read wss endpoint java",
    "description": "package testapp;  import java.net.URI; import java.net.URISyntaxException;  public class TestApp {      public static void main(String[] args) {         try {             // open websocket             final WebsocketClientEndpoint clientEndPoint = new WebsocketClientEndpoint(new URI(\"wss://real.okcoin.cn:10440/websocket/okcoinapi\"));              // add listener             clientEndPoint.addMessageHandler(new WebsocketClientEndpoint.MessageHandler() {                 public void handleMessage(String message) {                     System.out.println(message);                 }             });              // send message to websocket             clientEndPoint.sendMessage(\"{'event':'addChannel','channel':'ok_btccny_ticker'}\");              // wait 5 seconds for messages from websocket             Thread.sleep(5000);          } catch (InterruptedException ex) {             System.err.println(\"InterruptedException exception: \" + ex.getMessage());         } catch (URISyntaxException ex) {             System.err.println(\"URISyntaxException exception: \" + ex.getMessage());         }     } } \n",
    "reg_date": "2021-10-12T12:06:55.000Z"
  },
  {
    "id": 3708,
    "keyword": null,
    "link": null,
    "title": " reading from a text file in java",
    "description": " public static void main(String[] args) throws Exception    {      // pass the path to the file as a parameter      FileReader fr = new FileReader(\"C:\\\\Users\\\\pankaj\\\\Desktop\\\\test.txt\");         int i;      while ((i=fr.read()) != -1)        System.out.print((char) i);    } \n",
    "reg_date": "2021-10-12T12:06:55.000Z"
  },
  {
    "id": 3709,
    "keyword": null,
    "link": null,
    "title": " reading in lines from a file java",
    "description": "private ArrayList<String> readFileLines(String filepath) throws FileNotFoundException, IOException{   File fp = new File(filepath);   FileReader fr = new FileReader(fp);   BufferedReader br = new BufferedReader(fr);    ArrayList<String> lines = new ArrayList<>();   String line;   while((line = br.readLine()) != null) { lines.add(line); }    fr.close();   return lines; }\n",
    "reg_date": "2021-10-12T12:06:55.000Z"
  },
  {
    "id": 3710,
    "keyword": null,
    "link": null,
    "title": " recompile with -Xlint:deprecation",
    "description": "//add to android project level build.gradle allprojects {     gradle.projectsEvaluated {         tasks.withType(JavaCompile) {             options.compilerArgs << \"-Xlint:unchecked\" << \"-Xlint:deprecation\"         }     } }\n",
    "reg_date": "2021-10-12T12:06:55.000Z"
  },
  {
    "id": 3711,
    "keyword": null,
    "link": null,
    "title": " recursion factorial java",
    "description": "public class Tester {    static int factorial(int n) {       if (n == 0)          return 1;       else          return (n * factorial(n - 1));    }    public static void main(String args[]) {       int i, fact = 1;       int number = 5;       fact = factorial(number);       System.out.println(number + \"! = \" + fact);    } }\npublic class FactorialDemo {    public static void main(String[] args)    {       int number = 6, factorial = 1;       for(int a = 1; a <= number; a++)       {          factorial = factorial * a;       }       System.out.println(\"Factorial of \" + number + \" is : \" + factorial);    } }\npublic class Factorial {      public static void main(String[] args) {         int num = 6;         long factorial = multiplyNumbers(num);         System.out.println(\"Factorial of \" + num + \" = \" + factorial);     }     public static long multiplyNumbers(int num)     {         if (num >= 1)             return num * multiplyNumbers(num - 1);         else             return 1;     } }\n",
    "reg_date": "2021-10-12T12:06:55.000Z"
  },
  {
    "id": 3712,
    "keyword": null,
    "link": null,
    "title": " recursion in java",
    "description": "    public static  int exponent(int n){         int ans;         if(n == 0)             return 1;         else if(n%2 == 0){             int k = exponent(n/2);             ans = k*k;         }         ans= 2 * exponent(n-1);          return ans ;     } \nclass scratch{     public static long factorial(int n){         if ( n == 1 ){             return 1;         }         else{             return n * factorial( n - 1 );         }     }     public static void main(String[] args) {         System.out.println( factorial(5) );         //Print 120 (5!) to the console     } }\n// prints x number of $ public static void recursion(int x) {   if(x == 0) { // base case     System.out.println();   } else { // recursive case     System.out.print(\"$\");     recursion(x - 1);   } }\nRecursion is a basic programming technique you can use in Java, in which a method calls itself to solve some problem.    A method that uses this technique   is recursive. Many programming problems   can be solved only by recursion, and some problems that can be solved by other techniques are better solved by recursion.  EXP-1: Factorial \t \tpublic static long factorial(int n){         if (n == 1)             return 1;         else             return n * factorial(n-1);     }  EXP-2: Fibonacci \t \tstatic int n1=1, n2=2, n3=0;     public static void printFibo(int count){         if (count > 0) {             n3 = n1 + n2;             n1 = n2;             n2 = n3;             System.out.print(\" \" + n3);             printFibo(count-1);         }     }\npublic class Main {   public static void main(String[] args) {     int result = sum(10);     System.out.println(result);   }   public static int sum(int k) {     if (k > 0) {       return k + sum(k - 1);     } else {       return 0;     }   } }\nimport java.util.Scanner;  public class SumDigit {     public static void main(String[] argh){         System.out.println(\"Enter int\");         Scanner input = new Scanner(System.in);         int n = input.nextInt();         int sum = 0 ;         int i = 0;         print( i =Sum_of_digits(sum,n));      }      public static int Sum_of_digits(int sum,int n){         if(n<=0)             return sum ;         sum += n\u0010;          return Sum_of_digits(sum,n/10);     }      public static void  print(int n){         System.out.print(n);     } } \n",
    "reg_date": "2021-10-12T12:06:55.000Z"
  },
  {
    "id": 3713,
    "keyword": null,
    "link": null,
    "title": " recursion java",
    "description": "    public static  int exponent(int n){         int ans;         if(n == 0)             return 1;         else if(n%2 == 0){             int k = exponent(n/2);             ans = k*k;         }         ans= 2 * exponent(n-1);          return ans ;     } \nclass scratch{     public static long factorial(int n){         if ( n == 1 ){             return 1;         }         else{             return n * factorial( n - 1 );         }     }     public static void main(String[] args) {         System.out.println( factorial(5) );         //Print 120 (5!) to the console     } }\n// prints x number of $ public static void recursion(int x) {   if(x == 0) { // base case     System.out.println();   } else { // recursive case     System.out.print(\"$\");     recursion(x - 1);   } }\nRecursion is a basic programming technique you can use in Java, in which a method calls itself to solve some problem.    A method that uses this technique   is recursive. Many programming problems   can be solved only by recursion, and some problems that can be solved by other techniques are better solved by recursion.  EXP-1: Factorial \t \tpublic static long factorial(int n){         if (n == 1)             return 1;         else             return n * factorial(n-1);     }  EXP-2: Fibonacci \t \tstatic int n1=1, n2=2, n3=0;     public static void printFibo(int count){         if (count > 0) {             n3 = n1 + n2;             n1 = n2;             n2 = n3;             System.out.print(\" \" + n3);             printFibo(count-1);         }     }\npublic class Main {   public static void main(String[] args) {     int result = sum(10);     System.out.println(result);   }   public static int sum(int k) {     if (k > 0) {       return k + sum(k - 1);     } else {       return 0;     }   } }\nimport java.util.Scanner;  public class SumDigit {     public static void main(String[] argh){         System.out.println(\"Enter int\");         Scanner input = new Scanner(System.in);         int n = input.nextInt();         int sum = 0 ;         int i = 0;         print( i =Sum_of_digits(sum,n));      }      public static int Sum_of_digits(int sum,int n){         if(n<=0)             return sum ;         sum += n\u0010;          return Sum_of_digits(sum,n/10);     }      public static void  print(int n){         System.out.print(n);     } } \n",
    "reg_date": "2021-10-12T12:06:55.000Z"
  },
  {
    "id": 3714,
    "keyword": null,
    "link": null,
    "title": " recycler adapter class android java",
    "description": "//java,recycler adapter class,Android studio,2021/09/23 //this is example only. copy,paste,change and use it   public class RecyclerAdapterClass extends RecyclerView.Adapter<RecyclerAdapterClass.MyViewHolder> {     List<String> headlineList=new ArrayList<>();     List<String> descriptionList=new ArrayList<>();      Context context;     int myPosition;     URL url;      public RecyclerAdapterClass(Context context, List<String> headlineList, List<String> descriptionList) {         this.context=context;         this.headlineList=headlineList;         this.descriptionList=descriptionList;         }     @NonNull     @Override     public MyViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {         LayoutInflater inflater=LayoutInflater.from(context);         View view=inflater.inflate(R.layout.single_item,parent,false);          return new MyViewHolder(view);     }     @Override     public void onBindViewHolder(@NonNull MyViewHolder holder, int position) {              holder.rowHeadline.setText(headlineList.get(position));         holder.rowDescription.setText(descriptionList.get(position))          holder.singleRowLayout.setOnClickListener(v -> { \t\t//Click event               //Do what you want...         });     }     @Override     public int getItemCount() {         return headlineList.size();     }      public static class MyViewHolder extends RecyclerView.ViewHolder {         TextView rowHeadline,rowDescription;         Linearlayout singleRowLayout;          public MyViewHolder(@NonNull View itemView) {             super(itemView);                        rowHeadline=itemView.findViewById(R.id.rowHeadline);             rowDescription=itemView.findViewById(R.id.rowDescription);                        singleRowLayout=itemView.findViewById(R.id.singleItemLayout);          }     }         @SuppressLint(\"WrongThread\")         @Override         protected void onPostExecute(Bitmap bitmap) {             super.onPostExecute(bitmap);          }         @Override         protected void onProgressUpdate(Void... values) {             super.onProgressUpdate(values);         }      } }\n",
    "reg_date": "2021-10-12T12:06:55.000Z"
  },
  {
    "id": 3715,
    "keyword": null,
    "link": null,
    "title": " recycler view dependency",
    "description": "dependencies {     implementation \"androidx.recyclerview:recyclerview:1.1.0\"     // For control over item selection of both touch and mouse driven selection     implementation \"androidx.recyclerview:recyclerview-selection:1.1.0-rc01\" }\n implementation \"androidx.recyclerview:recyclerview:1.1.0\"  implementation \"androidx.recyclerview:recyclerview-selection:1.1.0-rc03\"\nimplementation 'com.android.support:recyclerview-v7:23.1.1'\n   // recyclerView         implementation \"androidx.recyclerview:recyclerview:1.1.0\"       // For control over item selection of both touch and mouse driven selection          implementation \"androidx.recyclerview:recyclerview-selection:1.1.0\"\nimplementation \"androidx.recyclerview:recyclerview:1.1.0\"     // For control over item selection of both touch and mouse driven selection     implementation \"androidx.recyclerview:recyclerview-selection:1.1.0-rc01\"\nimplementation 'androidx.recyclerview:recyclerview:1.2.0'\n",
    "reg_date": "2021-10-12T12:06:56.000Z"
  },
  {
    "id": 3716,
    "keyword": null,
    "link": null,
    "title": " recycler view implementation",
    "description": " implementation \"androidx.recyclerview:recyclerview:1.1.0\"\nimplementation \"androidx.recyclerview:recyclerview:1.2.0\"\nElective Subjects Notes \n",
    "reg_date": "2021-10-12T12:06:56.000Z"
  },
  {
    "id": 3717,
    "keyword": null,
    "link": null,
    "title": " reduce in stream in java",
    "description": "// Identity &ndash; an element that is the initial value of the reduction operation and the default result if the stream is empty // Accumulator &ndash; a function that takes two parameters: a partial result of the reduction operation and the next element of the stream // Combiner &ndash; a function used to combine the partial result of the reduction operation when the reduction is parallelized or when there's a mismatch between the types of the accumulator arguments and the types of the accumulator implementation  import java.util.*;  import java.util.stream.*;  List<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5, 6); int result = numbers   .stream()   .reduce(0, (subtotal, element) -> subtotal + element); // Didn't use a combiner here  // A combiner should be used when objects are used in accumulator parameters // Only then, it works  List<User> users = Arrays.asList(new User(\"John\", 30), new User(\"Julie\", 35)); int result = users.stream()   .reduce(0, (partialAgeResult, user) -> partialAgeResult + user.getAge(), Integer::sum); // Integer::sum is a combiner which is a function for the desired operation. \n",
    "reg_date": "2021-10-12T12:06:56.000Z"
  },
  {
    "id": 3718,
    "keyword": null,
    "link": null,
    "title": " reference type vs primitive type",
    "description": "// The value of primitive data types are directly stored in the memory. // For example if int a is initilized to 11, then 11 is directly stored // in the memory. int a = 11; // Primitive Type   // Reference types on the other hand are a reference to values in the // memory. For example Integer(11) creates a reference in the memory // whever the value 11 is stored and passes that memory reference/ // (address) to the variable. Integer b = new Integer(11); // Reference Type \nint a = 11; // Primitive Type   Integer b = new Integer(11); // Reference Type  \n+================+=========+===================================================================================+ | Primitive type | Size    | Description                                                                       | +================+=========+===================================================================================+ | byte           | 1 byte  | Stores whole numbers from -128 to 127                                             | +----------------+---------+-----------------------------------------------------------------------------------+ | short          | 2 bytes | Stores whole numbers from -32,768 to 32,767                                       | +----------------+---------+-----------------------------------------------------------------------------------+ | int            | 4 bytes | Stores whole numbers from -2,147,483,648 to 2,147,483,647                         | +----------------+---------+-----------------------------------------------------------------------------------+ | long           | 8 bytes | Stores whole numbers from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807 | +----------------+---------+-----------------------------------------------------------------------------------+ | float          | 4 bytes | Stores fractional numbers. Sufficient for storing 6 to 7 decimal digits           | +----------------+---------+-----------------------------------------------------------------------------------+ | double         | 8 bytes | Stores fractional numbers. Sufficient for storing 15 decimal digits               | +----------------+---------+-----------------------------------------------------------------------------------+ | char           | 2 bytes | Stores a single character/letter or ASCII values                                  | +----------------+---------+-----------------------------------------------------------------------------------+ | boolean        | 1 bit   | Stores true or false values                                                       | +----------------+---------+-----------------------------------------------------------------------------------+\n",
    "reg_date": "2021-10-12T12:06:56.000Z"
  },
  {
    "id": 3719,
    "keyword": null,
    "link": null,
    "title": " reflections java",
    "description": "implementation 'org.reflections:reflections:0.9.12'\n",
    "reg_date": "2021-10-12T12:06:56.000Z"
  },
  {
    "id": 3720,
    "keyword": null,
    "link": null,
    "title": " refrence xml textfield in javafx",
    "description": "fx:controller=<Controller.Location>  @FXML TextField textfield;  fx:id=<idFromController>  textfield.getText(); textfield.setText();\n",
    "reg_date": "2021-10-12T12:06:56.000Z"
  },
  {
    "id": 3721,
    "keyword": null,
    "link": null,
    "title": " refresh activity android",
    "description": "Activity.recreate(); //Trigger the onCreate method in the activity\n",
    "reg_date": "2021-10-12T12:06:56.000Z"
  },
  {
    "id": 3722,
    "keyword": null,
    "link": null,
    "title": " regex get string between quotes java",
    "description": "Pattern p = Pattern.compile(\"\\\"([^\\\"]*)\\\"\"); Matcher m = p.matcher(line); while (m.find()) {   System.out.println(m.group(1)); }\n",
    "reg_date": "2021-10-12T12:06:57.000Z"
  },
  {
    "id": 3723,
    "keyword": null,
    "link": null,
    "title": " regex to get all numbers in a string",
    "description": "import java.util.regex.Matcher; import java.util.regex.Pattern; public class Just {    public static void main(String[] args) {       String data = \"abc12def334hjdsk7438dbds3y388\";       //Regular expression to digits       String regex = \"([0-9]+)\";       //Creating a pattern object       Pattern pattern = Pattern.compile(regex);       //Creating a Matcher object       Matcher matcher = pattern.matcher(data);       System.out.println(\"Digits in the given string are: \");       while(matcher.find()) {          System.out.print(matcher.group()+\" \");       }    } }\n",
    "reg_date": "2021-10-12T12:06:57.000Z"
  },
  {
    "id": 3724,
    "keyword": null,
    "link": null,
    "title": " region in android studio",
    "description": "//region someNameToWrite someAwesomeCode() //endregion\n",
    "reg_date": "2021-10-12T12:06:57.000Z"
  },
  {
    "id": 3725,
    "keyword": null,
    "link": null,
    "title": " register listener spigot",
    "description": "getServer().getPluginManager().registerEvents(new Listener(), this);\n",
    "reg_date": "2021-10-12T12:06:57.000Z"
  },
  {
    "id": 3726,
    "keyword": null,
    "link": null,
    "title": " regular expression java",
    "description": "import java.util.regex.Pattern; import java.util.regex.Matcher;  public class MatcherExample {      public static void main(String[] args) {          String text    =             \"This is the text to be searched \" +             \"for occurrences of the http:// pattern.\";          String patternString = \".*http://.*\";          Pattern pattern = Pattern.compile(patternString);          Matcher matcher = pattern.matcher(text);         boolean matches = matcher.matches();              \tint count = 0;         while(matcher.find()) {             count++;             System.out.println(\"found: \" + count + \" : \"                     + matcher.start() + \" - \" + matcher.end());         }     } }\nimport java.util.regex.*;   public class RegexExample1{   public static void main(String args[]){   //1st way   Pattern p = Pattern.compile(\".s\");//. represents single character   Matcher m = p.matcher(\"as\");   boolean b = m.matches();      //2nd way   boolean b2=Pattern.compile(\".s\").matcher(\"as\").matches();      //3rd way   boolean b3 = Pattern.matches(\".s\", \"as\");      System.out.println(b+\" \"+b2+\" \"+b3);   }}  \n//Ther are three type of REGULAR EXPRESSION         //first    ^(.+)@(.+)$   \"^(.+)@(.+)$\\\"\"    //second    ^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}$      //third    ^[\\\\w!#$%&'*+/=?`{|}~^-]+(?:\\\\.[\\\\w!#$%&'*+/=?`{|}~^-]+)*@(?!-)(?:[a-zA-Z0-9-]+\\\\.)+[a-zA-Z]{2,6}$  \nimport java.io.*; import java.util.regex.*;  public class testRegex {      private static Pattern pattern;     private static Matcher matcher;      public static void main(String args[]) {         pattern = Pattern.compile(\"Hugo\");         matcher = pattern.matcher(\"Hugo Eti&eacute;vant\");         while(matcher.find()) {             System.out.println(\"Trouv&eacute; !\");         }     } }\npublic class TestLambda {     public static void main(String args[]) {       List<String> lowerCaseStringsList = Arrays.asList(\"a\",\"b\",\"c\");      // the :: notation is the lambda expression      // it's the same as the anonymous function s -> s.toUpperCase()       List<String> upperCaseStringsList = lowerCaseStringsList.stream().         map(String::toUpperCase).         collect(Collectors.toList());    }    }\n",
    "reg_date": "2021-10-12T12:06:57.000Z"
  },
  {
    "id": 3727,
    "keyword": null,
    "link": null,
    "title": " reload zsh profile",
    "description": "source $HOME/.zshrc\n",
    "reg_date": "2021-10-12T12:06:57.000Z"
  },
  {
    "id": 3728,
    "keyword": null,
    "link": null,
    "title": " remeove space between date and time java",
    "description": "a.replaceAll(\"\\\\s+\",\"\");\n",
    "reg_date": "2021-10-12T12:06:57.000Z"
  },
  {
    "id": 3729,
    "keyword": null,
    "link": null,
    "title": " remoce last character froma java string",
    "description": "String s = \"Hello Worlds\"; String end = \"\"; end = s.substring((0, s.length()-1));\nstr = str.substring(0, str.length() - 1);\n",
    "reg_date": "2021-10-12T12:06:57.000Z"
  },
  {
    "id": 3730,
    "keyword": null,
    "link": null,
    "title": " remove  position of  arraylist java",
    "description": "ArrayList.remove(a);\n",
    "reg_date": "2021-10-12T12:06:57.000Z"
  },
  {
    "id": 3731,
    "keyword": null,
    "link": null,
    "title": " remove action bar android studio",
    "description": "// In your Styles.xml file, change: parent=\"Theme.AppCompat.Light.DarkActionBar\"   // to: parent=\"Theme.AppCompat.Light.NoActionBar\"\n    ActionBar actionBar=getSupportActionBar();     actionBar.hide();\n",
    "reg_date": "2021-10-12T12:06:58.000Z"
  },
  {
    "id": 3732,
    "keyword": null,
    "link": null,
    "title": " remove all element in a list java",
    "description": "list_name.removeAll(list_name);\n",
    "reg_date": "2021-10-12T12:06:58.000Z"
  },
  {
    "id": 3733,
    "keyword": null,
    "link": null,
    "title": " remove autofocus edittext android",
    "description": "     android:focusable=\"true\"      android:focusableInTouchMode=\"true\"\n cardInputWidget.clearFocus();\n",
    "reg_date": "2021-10-12T12:06:58.000Z"
  },
  {
    "id": 3734,
    "keyword": null,
    "link": null,
    "title": " remove duplicates from sorted array",
    "description": "let chars = ['A', 'B', 'A', 'C', 'B']; let uniqueChars = [...new Set(chars)];  console.log(uniqueChars);  output: [ 'A', 'B', 'C' ]\n// Java public int removeDuplicates(int[] nums) {     if (nums.length == 0) return 0;     int i = 0;     for (int j = 1; j < nums.length; j++) {         if (nums[j] != nums[i]) {             i++;             nums[i] = nums[j];         }     }     return i + 1; }\n# function for removing duplicates def removeDuplicate(arr, n):     j = 0          # traverse elements of arr     for i in range(0, n-1):          # if ith element is not equal to (i+1)th element, then store ith value in arr[j]         if (arr[i] != arr[i+1]):             arr[j] = arr[i]             j = j+1      # store last value of arr in arr[j]     arr[j] = arr[n-1]     j = j+1          # print first j elements of array arr     for i in range(0, j):         print(\"%d\"%(arr[i]), end = \" \")  arr = [1, 3, 5, 5, 7, 9] n = len(arr) # calling function when number of elements in array is greater than 1 if (n > 1):     removeDuplicate(arr, n) \ndef remove_duplicates(nums: [int]) -> int:     cnt = 1     for index in range(len(nums) - 1):         if nums[index] != nums[index + 1]:             nums[cnt] = nums[index + 1]             cnt += 1     print(cnt)\ndef remove_duplicate(nums: [int]) -> int:   nums[:] = sorted(set(nums))   return len(nums)\nj = 0  // traverse elements of arr for i=0 to n-2     // if ith element is not equal to (i+1)th element of arr, then store ith value in arr[j]     if arr[i] != arr[i+1]         arr[j] = arr[i]         j += 1  // store last value of arr in temp arr[j] = arr[n-1] j += 1  // print first j elements of array arr for i=0 to j-1      print arr[i] \n",
    "reg_date": "2021-10-12T12:06:58.000Z"
  },
  {
    "id": 3735,
    "keyword": null,
    "link": null,
    "title": " remove first character from string",
    "description": "let str = 'Hello';   str = str.slice(1); console.log(str);   /*     Output: ello */ \nString string = \"Hello World\";  //Remove first character string.substring(1); //ello World  //Remove last character string.substring(0, string.length()-1); //Hello Worl  //Remove first and last character string.substring(1, string.length()-1); //ello Worl\ns = \"hello\" print s[1:]\nlet str = 'Hello';   str = str.substring(1); console.log(str);   /*     Output: ello */ \nString str = \"Hello World\"; String str2 = str.substring(1,str.length());\n\"Hello World\".substring(1)  // ello World\n",
    "reg_date": "2021-10-12T12:06:58.000Z"
  },
  {
    "id": 3736,
    "keyword": null,
    "link": null,
    "title": " remove first element of arraylist",
    "description": "ArrayList<Integer> myList = new ArrayList<>(); myList.add(1); myList.add(2); myList.add(3);  myList.remove(0);  System.out.println(myList); //2, 3\n",
    "reg_date": "2021-10-12T12:06:58.000Z"
  },
  {
    "id": 3737,
    "keyword": null,
    "link": null,
    "title": " remove fragment from backstack",
    "description": "You add to the back state from the FragmentTransaction and remove from the backstack using FragmentManager pop methods:  FragmentManager manager = getActivity().getSupportFragmentManager(); FragmentTransaction trans = manager.beginTransaction(); trans.remove(myFrag); trans.commit(); manager.popBackStack();\n",
    "reg_date": "2021-10-12T12:06:58.000Z"
  },
  {
    "id": 3738,
    "keyword": null,
    "link": null,
    "title": " remove item from arraylist in java",
    "description": "// Java.util.ArrayList.remove(Object) method example import java.util.ArrayList; import java.util.List; public class ArrayListRemoveObjectMethod {    public static void main(String[] args)    {       List<Integer> al = new ArrayList<>();       al.add(56);       al.add(28);       al.add(39);       al.add(59);       al.add(82);       System.out.println(\"Before using ArrayList.remove(Object) method size of ArrayList: \" + al);       // removes element 56       al.remove(new Integer(56));       // removes element 28       al.remove(new Integer(28));       System.out.println(\"After using ArrayList.remove(Object) method size of ArrayList: \" + al);    } }\n//Create the ArrayList List<Integer> al = new ArrayList<>();  //Add the items al.add(10); al.add(18); //Remove item(1 = 2and item in list) al.remove(1); \n// Java program to demonstrate working of remove  // on an integer arraylist  import java.util.List;  import java.util.ArrayList;     public class GFG  {      public static void main(String[] args)      {          List<Integer> al = new ArrayList<>();          al.add(10);          al.add(30);          al.add(1);          al.add(2);             // This makes a call to remove(int) and           // removes element 20.          al.remove(1);                     // Now element 30 is moved one position back          // So element 30 is removed this time          al.remove(1);             System.out.println(\"Modified ArrayList : \" + al);      }  } \npublic E remove(int index)\t// returns removed element at index\n",
    "reg_date": "2021-10-12T12:06:58.000Z"
  },
  {
    "id": 3739,
    "keyword": null,
    "link": null,
    "title": " remove last character from string java",
    "description": "String s = \"Hello Worlds\"; String end = \"\"; end = s.substring((0, s.length()-1));\nprivate static String removeLastChar(String str) {     return str.substring(0, str.length() - 1); }\nstr = str.substring(0, str.length() - 1);\npublic static String removeLastCharacter(String str) {    \tString result = null;        if ((str != null) && (str.length() > 0)) {           \tresult = str.substring(0, str.length() - 1);        }             return result; }\npublic String method(String str) {     if (str.charAt(str.length()-1)=='x'){         str = str.replace(str.substring(str.length()-1), \"\");         return str;     } else{         return str;     } } \nString s = \"Hello Worlds\"; String end = \"\"; end = s.substring((0, s.length()-1)); \n",
    "reg_date": "2021-10-12T12:06:58.000Z"
  },
  {
    "id": 3740,
    "keyword": null,
    "link": null,
    "title": " remove last element from arraylist java",
    "description": "ArrayList<Integer> list = new ArrayList<>(); list.add(1); list.add(2); list.add(3);  list.remove(list.size()-1); //removes 3\n// How to remove last element from arraylist in java import java.util.ArrayList; import java.util.List; public class ArrayListRemoveLastElement {    public static void main(String[] args)    {       List<Integer> al = new ArrayList<>();       al.add(56);       al.add(28);       al.add(39);       al.add(59);       al.add(82);       // using size() method to find index of last element       int index = al.size() - 1;       // deleting last element by passing index       al.remove(index);       System.out.println(\"After remove last element from arraylist: \" + al);    } }\nArrays.copyOf(original, original.length-1)\n",
    "reg_date": "2021-10-12T12:06:58.000Z"
  },
  {
    "id": 3741,
    "keyword": null,
    "link": null,
    "title": " remove nth node from end of list",
    "description": "class Solution {     public ListNode removeNthFromEnd(ListNode head, int n) {                  ListNode slow = head, fast = head;         int count = 0;         while(fast != null && fast.next != null){             fast = fast.next;             if(count >= n)                 slow = slow.next;             count++;         }                  if(count+1 == n) return slow.next;                  slow.next = slow.next.next;         return head;     } }\n",
    "reg_date": "2021-10-12T12:06:59.000Z"
  },
  {
    "id": 3742,
    "keyword": null,
    "link": null,
    "title": " remove space from string java",
    "description": "st = st.replaceAll(\"\\\\s+\",\"\")\n// This is Fasted Way  str = str.replaceAll(\"\\\\s\" , \"\");\na.replaceAll(\"\\\\s+\",\"\");\n",
    "reg_date": "2021-10-12T12:06:59.000Z"
  },
  {
    "id": 3743,
    "keyword": null,
    "link": null,
    "title": " remove spaces at beginning and end of string java",
    "description": "String withSpaces = \"  Hi  \"; String withoutSpaces = withSpaces.trim();\n",
    "reg_date": "2021-10-12T12:06:59.000Z"
  },
  {
    "id": 3744,
    "keyword": null,
    "link": null,
    "title": " remove whitespaces",
    "description": "//Extenion function fun String.removeWhitespaces() = replace(\" \", \"\")  // Uses var str = \"This is an example text\".removeWhitespaces()  println(str) \n",
    "reg_date": "2021-10-12T12:06:59.000Z"
  },
  {
    "id": 3745,
    "keyword": null,
    "link": null,
    "title": " removeeventlistener",
    "description": "var someEventHander=function(event){ \tconsole.log(\"do something\"); }  //add listener document.getElementById(\"someid\").addEventListener('click',someEventHander);  //remove listener  document.getElementById(\"someid\").removeEventListener('click',someEventHander);\n//                             type         function element.removeEventListener(\"mousedown\", handleMouseDown) // full type list available here: https://developer.mozilla.org/en-US/docs/Web/Events\ntarget.removeEventListener(type, listener[, options]); target.removeEventListener(type, listener[, useCapture]);\n",
    "reg_date": "2021-10-12T12:06:59.000Z"
  },
  {
    "id": 3746,
    "keyword": null,
    "link": null,
    "title": " repeat string in java",
    "description": "public class Main  {     public static void main(String[] args)      {         String str = \"Abc\";           String repeated = new String(new char[3]).replace(\"\\0\", str);           System.out.println(repeated);     } } \npublic static String repeat(String s, int n) {    StringBuilder sb = new StringBuilder(str.length() * n);    for (int i = 0; i < n; i++)        sb.append(s);    return sb.toString();} public static void main(String[] args) {    System.out.println(repeat(\"ha\", 5));}\n",
    "reg_date": "2021-10-12T12:06:59.000Z"
  },
  {
    "id": 3747,
    "keyword": null,
    "link": null,
    "title": " replace all occurrences of a character in a string java",
    "description": "String phrase = \"An_Apple_A_Day_Keeps_The_Doctor_Away\"; System.out.println(phrase.replaceAll(\"_\", \" \"); // prints 'An Apple A Day Keeps The Doctor Away' \n",
    "reg_date": "2021-10-12T12:06:59.000Z"
  },
  {
    "id": 3748,
    "keyword": null,
    "link": null,
    "title": " replace all punctuation in string java",
    "description": "inputString.replaceAll(\"\\\\p{Punct}\", \"\");\n",
    "reg_date": "2021-10-12T12:06:59.000Z"
  },
  {
    "id": 3749,
    "keyword": null,
    "link": null,
    "title": " replace character in string java",
    "description": "String s = \"new String\"; String replaced = s.replace(\"new\",\"Test\"); \t\t\t\t\t\t\t  ^\t\t ^                              old    new char\npublic static void main(String args[]){   String s1=\"my name is khan my name is java\";   String replaceString=s1.replace(\"is\",\"was\");//replaces all occurrences of \"is\" to \"was\"   System.out.println(replaceString);   }}   \nString str = in.nextLine();\t//Original String char cr = in.next().charAt(0); // character to replace int index = in.nextInt();\t// Index where replaced str = str.substring(0, index) + cr + str.substring(index + 1);// modified string \n// We want to replace every # with a 8 String larry = \"Larry is # years old\"; String newString = larry.replace(\"#\", \"8\");\nString str = \"..............................\";           int index = 5;             char ch = '|';            StringBuilder string = new StringBuilder(str);          string.setCharAt(index, ch);           System.out.println(string); \npublic class JavaExample{    public static void main(String args[]){ \tString str = new String(\"Site is BeginnersBook.com\");  \tSystem.out.print(\"String after replacing com with net :\" ); \tSystem.out.println(str.replaceFirst(\"com\", \"net\"));  \tSystem.out.print(\"String after replacing Site name:\" ); \tSystem.out.println(str.replaceFirst(\"Beginners(.*)\", \"XYZ.com\"));    } }\n",
    "reg_date": "2021-10-12T12:06:59.000Z"
  },
  {
    "id": 3750,
    "keyword": null,
    "link": null,
    "title": " replace last char in string java",
    "description": "if(fieldName.endsWith(\",\")) {   fieldName = fieldName.substring(0,fieldName.length() - 1); }\nif (fieldName.endsWith(\",\")) {     fieldName = fieldName.substring(0, fieldName.length() - 1) + \" \"; }\n",
    "reg_date": "2021-10-12T12:06:59.000Z"
  },
  {
    "id": 3751,
    "keyword": null,
    "link": null,
    "title": " replace regex group() java",
    "description": "Pattern p = Pattern.compile(\"(\\\\d)(.*)(\\\\d)\"); String input = \"6 example input 4\"; Matcher m = p.matcher(input); if (m.find()) {     // replace first number with \"number\" and second number with the first     String output = m.replaceFirst(\"number $3$1\");  // number 46 }\n",
    "reg_date": "2021-10-12T12:06:59.000Z"
  },
  {
    "id": 3752,
    "keyword": null,
    "link": null,
    "title": " replace substring at index java",
    "description": "public static void main(String[] args) {          StringBuffer buf = new StringBuffer(\"123456789\");          int start = 3;         int end = 6;         buf.replace(start, end, \"foobar\");          System.out.println(buf);      }  } \n",
    "reg_date": "2021-10-12T12:07:00.000Z"
  },
  {
    "id": 3753,
    "keyword": null,
    "link": null,
    "title": " replaceall in java",
    "description": "public class ReplaceAllExample{   public static void main(String args[]){   String s1=\"Google is a very good website\";   String replaceString=s1.replaceAll(\"a\",\"e\");//replaces all occurrences of \"a\" to \"e\"   System.out.println(replaceString);   }}  \nString meal = \"Hambbburger\";  String replaced = meal.replaceAll(\"b\",\"\");\nString s1 = \"my name is khan and my name is java\"; String replaceString = s1.replace(\"is\",\"was\"); //replaces all occurrences of \"is\" to \"was\" System.out.println(replaceString);\n",
    "reg_date": "2021-10-12T12:07:00.000Z"
  },
  {
    "id": 3754,
    "keyword": null,
    "link": null,
    "title": " request audio focus android",
    "description": "//set the listener (this should be global) AudioManager.OnAudioFocusChangeListener audioListener = new AudioManager.OnAudioFocusChangeListener() { \t@Override \tpublic void onAudioFocusChange(int i) { \t\t//code to hundle diffrent kind of focus states. \t} };    //set the request audioManager = (AudioManager) getSystemService(Context.AUDIO_SERVICE); audioManager.requestAudioFocus(audioListener , AudioManager.STREAM_MUSIC, AudioManager.AUDIOFOCUS_GAIN);  if (focusChange == AudioManager.AUDIOFOCUS_GAIN) { \t// You now have the audio focus and may play sound. }else if (focusChange == AudioManager.AUDIOFOCUS_REQUEST_FAILED) { \t// Handle the failure. }  \n",
    "reg_date": "2021-10-12T12:07:00.000Z"
  },
  {
    "id": 3755,
    "keyword": null,
    "link": null,
    "title": " request permission foreground service",
    "description": "<manifest ...>      ...      <uses-permission android:name=\"android.permission.FOREGROUND_SERVICE\" />      ...      <application ...>      ... </manifest>\n",
    "reg_date": "2021-10-12T12:07:00.000Z"
  },
  {
    "id": 3756,
    "keyword": null,
    "link": null,
    "title": " required a bean of type 'org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder' that could not be found.",
    "description": "// Check if forgot to create the Bean on the App main class  \t@Bean \tBCryptPasswordEncoder bCryptPasswordEncoder() { \t\treturn new BCryptPasswordEncoder(); \t}\n",
    "reg_date": "2021-10-12T12:07:00.000Z"
  },
  {
    "id": 3757,
    "keyword": null,
    "link": null,
    "title": " reserved keywords in java",
    "description": "List of Java reserved Words:  abstract assert boolean break byte case catch char class const default do double else enum extends false final finally float for goto if implements import instanceof int interface long native new null package private protected public return short static strictfp super switch synchronized this throw throws transient true try void volatile while continue\n",
    "reg_date": "2021-10-12T12:07:00.000Z"
  },
  {
    "id": 3758,
    "keyword": null,
    "link": null,
    "title": " resize array in java",
    "description": "int [] basedata = new int[10];  int [] original = basedata; basedata = new int[12];  for(int i = 0; i < original.length; i++){   basedata[i] = original[i]; }\n",
    "reg_date": "2021-10-12T12:07:00.000Z"
  },
  {
    "id": 3759,
    "keyword": null,
    "link": null,
    "title": " restart application programmatically android",
    "description": "Intent mStartActivity = new Intent(context, StartActivity.class); int mPendingIntentId = 123456; PendingIntent mPendingIntent = PendingIntent.getActivity(context, mPendingIntentId,    mStartActivity, PendingIntent.FLAG_CANCEL_CURRENT); AlarmManager mgr = (AlarmManager)context.getSystemService(Context.ALARM_SERVICE); mgr.set(AlarmManager.RTC, System.currentTimeMillis() + 100, mPendingIntent); System.exit(0); //you can also kill your app's process\n",
    "reg_date": "2021-10-12T12:07:00.000Z"
  },
  {
    "id": 3760,
    "keyword": null,
    "link": null,
    "title": " result set in jdbc",
    "description": "Connection =    Helps our java project connect to database Statement =    Helps to write and execute SQL query ResultSet =    A DataStructure where the data from query result stored +++++++++++++++++++++++++++++++++++++++++++++++++++++++++         After succesfully created the connect next step is STATEMENT  Statement statement = connection.createStatement(); We use createStatement() method to create the statement from our connection. -The result we get from this type of statement can only move from top to bottom, not other way around  Statement statement = connection. createStatement(ResultSet TYPE_SCROLL_INSENSITIVE ,ResultSet CONCUR_READ_ONLY);  -The result we get from this type of statement can freely move between rows  Once we have statement we can run the query and get the result to ResultSet format  \t\timport java.sql.ResultSet;          We use the method executeQuery() to execute our queries  ResultSet result = statement.               executeQuery(\"Select * from employees\");\n",
    "reg_date": "2021-10-12T12:07:00.000Z"
  },
  {
    "id": 3761,
    "keyword": null,
    "link": null,
    "title": " resurce leak java",
    "description": "public void readShapeData() throws IOException {     Scanner in = new Scanner(System.in);     try {         System.out.println(\"Enter the width of the Rectangle: \");         width = in.nextDouble();         System.out.println(\"Enter the height of the Rectangle: \");         height = in.nextDouble();     } finally {         in.close();     } }\n",
    "reg_date": "2021-10-12T12:07:01.000Z"
  },
  {
    "id": 3762,
    "keyword": null,
    "link": null,
    "title": " retrieving parent element from child aWebelement selenium java",
    "description": "WebElement myElement = driver.findElement(By.id(\"myDiv\")); WebElement parent = (WebElement) ((JavascriptExecutor) driver).executeScript(                                    \"return arguments[0].parentNode;\", myElement);\n",
    "reg_date": "2021-10-12T12:07:01.000Z"
  },
  {
    "id": 3763,
    "keyword": null,
    "link": null,
    "title": " retrofit android",
    "description": "def retrofit_version = \"2.9.0\" implementation \"com.squareup.retrofit2:retrofit:$retrofit_version\" implementation \"com.squareup.retrofit2:converter-gson:$retrofit_version\"\nimplementation 'com.squareup.retrofit2:retrofit:2.9.0'\npublic interface GitHubService {   @GET(\"users/{user}/repos\")   Call<List<Repo>> listRepos(@Path(\"user\") String user); }\n",
    "reg_date": "2021-10-12T12:07:01.000Z"
  },
  {
    "id": 3764,
    "keyword": null,
    "link": null,
    "title": " return method java",
    "description": "int a = 20; int b = 20; public static int sum(){   return a + b; } // Return Function public static void sum(){   System.out.println(a + b); } // Void Method. it Prints and does not return anything\n    // a method for computing the area of the rectangle     public int getArea() {         return width * height;     }\nA return statement causes the program control to transfer back to the caller of a method.   \n",
    "reg_date": "2021-10-12T12:07:01.000Z"
  },
  {
    "id": 3765,
    "keyword": null,
    "link": null,
    "title": " return unique values array from two arrays java",
    "description": "import java.util.Arrays; import java.util.List; import java.util.stream.Collectors; import java.util.stream.Stream; public class MergeNames {      public static String[] uniqueNames(String[] names1, String[] names2) {          String[] combine = Stream.concat(Arrays.stream(names1), Arrays.stream(names2))                 .toArray(String[]::new);          List<String> distinctElements = Arrays.stream(combine)                 .distinct()                 .collect(Collectors.toList());          return distinctElements.toArray(new String[distinctElements.size()]);      }      public static void main(String[] args) {         String[] names1 = new String[] {\"Ava\", \"Emma\", \"Olivia\"};         String[] names2 = new String[] {\"Olivia\", \"Sophia\", \"Emma\"};         System.out.println(String.join(\", \", MergeNames.uniqueNames(names1, names2))); // should print Ava, Emma, Olivia, Sophia     } }\n",
    "reg_date": "2021-10-12T12:07:01.000Z"
  },
  {
    "id": 3766,
    "keyword": null,
    "link": null,
    "title": " reverse a integer in java",
    "description": "public class ReverseNumber {     public static void main(String[] args) {         int num = 1234, reversed = 0;          while(num != 0) {             int digit = num % 10;             reversed = reversed * 10 + digit;             num = num / 10;         }         System.out.println(\"Reversed Number: \" + reversed); }}\npublic class ReverseNumberExample1    {   public static void main(String[] args)    {   int number = 987654, reverse = 0;   while(number != 0)    {   int remainder = number % 10;   reverse = reverse * 10 + remainder;   number = number/10;   }   System.out.println(\"The reverse of the given number is: \" + reverse);   }   }  \nwhile(num != 0)  {    int digit = num % 10;    reversed = reversed * 10 + digit;    num /= 10; }\nint rev= 0; while(num > 9) {   rev= rev*10 + num\u0010;   num/= 10; }\n",
    "reg_date": "2021-10-12T12:07:01.000Z"
  },
  {
    "id": 3767,
    "keyword": null,
    "link": null,
    "title": " reverse a number using mathematical operations in java",
    "description": "//continue to loop until  a value is equal to 0  public class ReverseNum{      public static void main(String[] args {      int a = 543;   int reverse = 0;     while(a!=0){ //itera the process    int digit = a\u0010; //isolate the last digit number    reverse = digit + (reverse*10); //append last digit to reverse  a=a/10; // remove the last digit from number    }     System.out.println(reverse);          } }\n",
    "reg_date": "2021-10-12T12:07:01.000Z"
  },
  {
    "id": 3768,
    "keyword": null,
    "link": null,
    "title": " reverse an array in java using while loop",
    "description": "int length = array.length; \t\tfor(int i=0;i<length/2;i++) { \t\t\tint swap = array[i]; \t\t\tarray[i] = array[length-i-1]; \t\t\tarray[length-i-1] = swap; \t\t} or Collections.reverse(Arrays.asList(array)); \nimport java.util.Scanner; public class Example {    public static void main(String args[])    { \tint counter, i=0, j=0, temp; \tint number[] = new int[100]; \tScanner scanner = new Scanner(System.in); \tSystem.out.print(\"How many elements you want to enter: \"); \tcounter = scanner.nextInt();  \t/* This loop stores all the elements that we enter in an  \t * the array number. First element is at number[0], second at  \t * number[1] and so on \t */ \tfor(i=0; i<counter; i++) \t{ \t    System.out.print(\"Enter Array Element\"+(i+1)+\": \"); \t    number[i] = scanner.nextInt(); \t}  \t/* Here we are writing the logic to swap first element with \t * last element, second last element with second element and \t * so on. On the first iteration of while loop i is the index  \t * of first element and j is the index of last. On the second \t * iteration i is the index of second and j is the index of  \t * second last. \t */ \tj = i - 1;      \ti = 0;          \tscanner.close(); \twhile(i<j) \t{   \t   temp = number[i]; \t   number[i] = number[j]; \t   number[j] = temp; \t   i++; \t   j--; \t}  \tSystem.out.print(\"Reversed array: \"); \tfor(i=0; i<counter; i++) \t{ \t   System.out.print(number[i]+ \"  \"); \t}           } }\n",
    "reg_date": "2021-10-12T12:07:01.000Z"
  },
  {
    "id": 3769,
    "keyword": null,
    "link": null,
    "title": " reverse array in java",
    "description": "int length = array.length; \t\tfor(int i=0;i<length/2;i++) { \t\t\tint swap = array[i]; \t\t\tarray[i] = array[length-i-1]; \t\t\tarray[length-i-1] = swap; \t\t} or Collections.reverse(Arrays.asList(array)); \nint length = array.length; \t\tfor(int i=0;i<length/2;i++) { \t\t\tint swap = array[i]; \t\t\tarray[i] = array[length-i-1]; \t\t\tarray[length-i-1] = swap; \t\t}\npublic class ReverseArray {       public static void main(String[] args) {           //Initialize array           int [] arr = new int [] {1, 2, 3, 4, 5};           System.out.println(\"Original array: \");           for (int i = 0; i < arr.length; i++) {               System.out.print(arr[i] + \" \");           }           System.out.println();           System.out.println(\"Array in reverse order: \");           //Loop through the array in reverse order           for (int i = arr.length-1; i >= 0; i--) {               System.out.print(arr[i] + \" \");           }       }   } \n// reverse array  for(int i=intArray.length-1;i>=0;i--)          System.out.print(intArray[i] + \"  \");\n",
    "reg_date": "2021-10-12T12:07:01.000Z"
  },
  {
    "id": 3770,
    "keyword": null,
    "link": null,
    "title": " reverse array java",
    "description": "    List<String> stringList = Arrays.asList(\"A\", \"B\", \"C\");     Collections.reverse(stringList);     assertThat(stringList).containsExactly(\"C\", \"B\", \"A\");\nint length = array.length; \t\tfor(int i=0;i<length/2;i++) { \t\t\tint swap = array[i]; \t\t\tarray[i] = array[length-i-1]; \t\t\tarray[length-i-1] = swap; \t\t} or Collections.reverse(Arrays.asList(array)); \nint length = array.length; \t\tfor(int i=0;i<length/2;i++) { \t\t\tint swap = array[i]; \t\t\tarray[i] = array[length-i-1]; \t\t\tarray[length-i-1] = swap; \t\t}\npublic class ReverseArray {       public static void main(String[] args) {           //Initialize array           int [] arr = new int [] {1, 2, 3, 4, 5};           System.out.println(\"Original array: \");           for (int i = 0; i < arr.length; i++) {               System.out.print(arr[i] + \" \");           }           System.out.println();           System.out.println(\"Array in reverse order: \");           //Loop through the array in reverse order           for (int i = arr.length-1; i >= 0; i--) {               System.out.print(arr[i] + \" \");           }       }   } \n//java program to reverse array using for loop public class ReverseArrayDemo  {    public static void main(String[] args)     {       int[] arrNumbers = new int[]{2, 4, 6, 8, 10};         System.out.println(\"Given array: \");         for(int a = 0; a < arrNumbers.length; a++)       {          System.out.print(arrNumbers[a] + \" \");       }       System.out.println(\"Reverse array: \");       // looping array in reverse order       for(int a = arrNumbers.length - 1; a >= 0; a--)        {            System.out.print(arrNumbers[a] + \" \");         }    } }\n// reverse array  for(int i=intArray.length-1;i>=0;i--)          System.out.print(intArray[i] + \"  \");\n",
    "reg_date": "2021-10-12T12:07:01.000Z"
  },
  {
    "id": 3771,
    "keyword": null,
    "link": null,
    "title": " reverse in jaav",
    "description": "// my linkedin : https://www.linkedin.com/in/vaalarivan-prasanna-3a07bb203/ list = new ArrayList<int> {3, 4, 7};  //initialising a list Collections.reverse(list);  //reverses a List or an ArrayList //now, list is {7, 4, 3} \n",
    "reg_date": "2021-10-12T12:07:02.000Z"
  },
  {
    "id": 3772,
    "keyword": null,
    "link": null,
    "title": " reverse linked list in java to get both head and tail",
    "description": "/* public class ListNode {     public int val;     public ListNode next;     public ListNode(int x) { val = x; next = null; } } */  public static ListNode[] reverse_linked_list(ListNode head) {          ListNode prev = null;         ListNode current = head;         ListNode next;          ListNode tail = head;          while (current != null) {              next = current.next;             current.next = prev;             prev = current;             current = next;         }          head = prev;          ListNode[] result = {head, tail};          return result; }\n",
    "reg_date": "2021-10-12T12:07:02.000Z"
  },
  {
    "id": 3773,
    "keyword": null,
    "link": null,
    "title": " reverse number in java",
    "description": "public class ReverseNumber {     public static void main(String[] args) {         int num = 1234, reversed = 0;          while(num != 0) {             int digit = num % 10;             reversed = reversed * 10 + digit;             num = num / 10;         }         System.out.println(\"Reversed Number: \" + reversed); }}\npublic class ReverseNumberExample1    {   public static void main(String[] args)    {   int number = 987654, reverse = 0;   while(number != 0)    {   int remainder = number % 10;   reverse = reverse * 10 + remainder;   number = number/10;   }   System.out.println(\"The reverse of the given number is: \" + reverse);   }   }  \nwhile(num != 0)  {    int digit = num % 10;    reversed = reversed * 10 + digit;    num /= 10; }\n//continue to loop until  a value is equal to 0  public class ReverseNum{      public static void main(String[] args {      int a = 543;   int reverse = 0;     while(a!=0){ //itera the process    int digit = a\u0010; //isolate the last digit number    reverse = digit + (reverse*10); //append last digit to reverse  a=a/10; // remove the last digit from number    }     System.out.println(reverse);          } }\nint rev= 0; while(num > 9) {   rev= rev*10 + num\u0010;   num/= 10; }\n",
    "reg_date": "2021-10-12T12:07:02.000Z"
  },
  {
    "id": 3774,
    "keyword": null,
    "link": null,
    "title": " reverse sentence in java",
    "description": "// INPUT: \"you shall not pass\" // OUTPUT: \"pass not shall you\"    String s[] = \"you shall not pass\".split(\" \");  String ans = \"\";  for (int i = s.length - 1; i >= 0; i--) {   ans += s[i] + \" \"; } System.out.println(ans);\n",
    "reg_date": "2021-10-12T12:07:02.000Z"
  },
  {
    "id": 3775,
    "keyword": null,
    "link": null,
    "title": " reverse string array java",
    "description": "String rev = new StringBuilder(\"Your String\").reverse().toString();\n// reverse a string using ByteArray class ReverseStringByteArray {    public static void main(String[] args)    {       String input = \"HelloWorld\";       // getBytes() method to convert string into bytes[].       byte[] strByteArray = input.getBytes();       byte[] output = new byte[strByteArray.length];       // store output in reverse order       for(int a = 0; a < strByteArray.length; a++)          output[a] = strByteArray[strByteArray.length - a - 1];       System.out.println(new String(output));    } }\n//java program to reverse array using for loop public class ReverseArrayDemo  {    public static void main(String[] args)     {       int[] arrNumbers = new int[]{2, 4, 6, 8, 10};         System.out.println(\"Given array: \");         for(int a = 0; a < arrNumbers.length; a++)       {          System.out.print(arrNumbers[a] + \" \");       }       System.out.println(\"Reverse array: \");       // looping array in reverse order       for(int a = arrNumbers.length - 1; a >= 0; a--)        {            System.out.print(arrNumbers[a] + \" \");         }    } }\nimport java.util.Arrays; public class ReverseStringArrayInJava {    public static void main(String[] args)    {       String[] strHierarchy = new String[]{\"Junior Developer\",\"Senior Developer\",\"Team Lead\",\"Project Manager\",\"Senior Manager\",\"CEO\"};       System.out.println(\"Given string array: \" + Arrays.toString(strHierarchy));       for(int a = 0; a < strHierarchy.length / 2; a++)       {          String strTemp = strHierarchy[a];          strHierarchy[a] = strHierarchy[strHierarchy.length - a - 1];          strHierarchy[strHierarchy.length - a - 1] = strTemp;       }       System.out.println(\"Reversed string array: \");       for(int a = 0; a < strHierarchy.length; a++)       {          System.out.println(strHierarchy[a]);       }    } }\n",
    "reg_date": "2021-10-12T12:07:02.000Z"
  },
  {
    "id": 3776,
    "keyword": null,
    "link": null,
    "title": " reverse string java",
    "description": "public class ReverseString {     public static void main(String[] args) {         String s1 = \"neelendra\";         for(int i=s1.length()-1;i>=0;i--)             {                 System.out.print(s1.charAt(i));             }     } }\nString string=\"whatever\"; String reverse = new StringBuffer(string).reverse().toString(); System.out.println(reverse); \n// Library approach public static String solution(String str) { \t// StringBuilder is not thread-safe, use StringBuffer \treturn new StringBuffer(str).reverse().toString(); }  // DIY approach public static String solution(String str) { \tchar[] chars = str.toCharArray(); \tfor(int i = 0, j = str.length() - 1; i < j; i++, j--) { \t\tchar ch = chars[i]; \t\tchars[i] = chars[j]; \t\tchars[j] = ch; \t} \treturn new String(chars); }\n// reverse a string using reverse() method of StringBuilder class class ReverseUsingReverseMethod {    public static void main(String[] args)    {       String str = \"Hello world Java\";       StringBuilder sb = new StringBuilder();       // append string to StringBuilder       sb.append(str);       sb = sb.reverse();       // printing reversed String       System.out.println(sb);    } }\nString rev = new StringBuilder(\"Your String\").reverse().toString();\nString str = \"Hello\"; String reverse(String str){   StringBuilder sb = new StringBuilder();   sb.append(str);   sb.reverse();   return sb.toString(); }\n",
    "reg_date": "2021-10-12T12:07:02.000Z"
  },
  {
    "id": 3777,
    "keyword": null,
    "link": null,
    "title": " reverse string using recursion java with explanation",
    "description": "public static String reverse(String str) {     if ((null == str) || (str.length() <= 1)) {         return str;     }     return reverse(str.substring(1)) + str.charAt(0); }\npublic class Test {      private static int i = 0;      public static void main(String args[]) {         reverse(\"Hello\");     }      public static String reverse(String str) {         int localI = i++;         if ((null == str) || (str.length()  <= 1)) {             return str;         }         System.out.println(\"Step \" + localI + \": \" + str.substring(1) + \" / \" + str.charAt(0));         String reversed = reverse(str.substring(1)) + str.charAt(0);          System.out.println(\"Step \" + localI + \" returns: \" + reversed);         return reversed;     } }\n",
    "reg_date": "2021-10-12T12:07:02.000Z"
  },
  {
    "id": 3778,
    "keyword": null,
    "link": null,
    "title": " revese the linked list java",
    "description": "/* public class ListNode {     public int val;     public ListNode next;     public ListNode(int x) { val = x; next = null; } } */  public static ListNode[] reverse_linked_list(ListNode head) {          ListNode prev = null;         ListNode current = head;         ListNode next;          ListNode tail = head;          while (current != null) {              next = current.next;             current.next = prev;             prev = current;             current = next;         }          head = prev;          ListNode[] result = {head, tail};          return result; }\nEasiest way   public static LinkedList reverse(LinkedList head) { \t\tLinkedList prevAddress = null; \t\tLinkedList currentAddress = head; \t\tLinkedList nextAddress = head.next; \t\t \t\twhile(nextAddress!=null) { \t\t\tcurrentAddress.next = prevAddress; \t\t\tprevAddress = currentAddress; \t\t\tcurrentAddress = nextAddress; \t\t\tnextAddress= currentAddress.next; \t\t\tcurrentAddress.next = prevAddress; \t\t} \t\thead = currentAddress; \t\treturn head; \t}      Just try to visualize its all about pointers game. :-)   NO GFG ANSWER\n",
    "reg_date": "2021-10-12T12:07:02.000Z"
  },
  {
    "id": 3779,
    "keyword": null,
    "link": null,
    "title": " rewrite file java",
    "description": "Writer fileWriter = new FileWriter(\"c:\\\\data\\\\output.txt\", true);  //appends to file  Writer fileWriter = new FileWriter(\"c:\\\\data\\\\output.txt\", false); //overwrites file \n",
    "reg_date": "2021-10-12T12:07:02.000Z"
  },
  {
    "id": 3780,
    "keyword": null,
    "link": null,
    "title": " rgb to hex java",
    "description": "int r = 20; int g = 99; int b = 155; String hex = String.format(\"#\u0002X\u0002X\u0002X\", r, g, b); System.out.println(hex);  //Output #14639B\nColor.decode(\"#FFCCEE\");\n",
    "reg_date": "2021-10-12T12:07:02.000Z"
  },
  {
    "id": 3781,
    "keyword": null,
    "link": null,
    "title": " rider find and replace",
    "description": "//Rider - Find and replace Ctrl+H\n",
    "reg_date": "2021-10-12T12:07:02.000Z"
  },
  {
    "id": 3782,
    "keyword": null,
    "link": null,
    "title": " right shift operator in java",
    "description": "int x  = 25; System.out.println(x);\t    //     1 1 0 0 1 : 25 System.out.println(x >> 2); //         1 1 0 : 6 System.out.println(x << 2); // 1 1 0 0 1 0 0 : 100 // Negative numbers are stored as two's complement // and will trail right shifts with one // Unsigned operators <<< >>> ignore sign and trail with 0\nint a=a<<n; //where n is the number of places a is shifted towards left.\n",
    "reg_date": "2021-10-12T12:07:03.000Z"
  },
  {
    "id": 3783,
    "keyword": null,
    "link": null,
    "title": " rjava error",
    "description": "Sys.setenv(JAVA_HOME='C:\\\\Program Files\\\\Java\\\\jre1.8.0_144') \n",
    "reg_date": "2021-10-12T12:07:03.000Z"
  },
  {
    "id": 3784,
    "keyword": null,
    "link": null,
    "title": " rock paper scissors java",
    "description": "import java.util.Random; import java.util.Scanner;  public class RockPaperScissors {     private static boolean playAgain(Scanner scanner) {         System.out.println(\"Play again? Y(8), N(9)?\");         switch (scanner.nextInt()) {         case 8:             System.out.println(\"Rock, Paper, Scissors!\");             return true;         default:             System.out.println(\"Thanks for playing!\");             return false;         }     }      public static void main(String[] args) {         Scanner scanner = new Scanner(System.in);         RPSPlayer computer = new RandomComputerPlayer(new Random());         RPSPlayer human = new HumanPlayer(scanner);          System.out.println(\"Rock Paper Scissors, by 200_success!\");         do {             String comp = computer.play();             String you = human.play();              System.out.printf(\"%s vs. %s\", comp, you);             if (you.equals(comp)) {                 System.out.println(\", IT'S A TIE!\");             } else if ( (\"Rock\".equals(you) && \"Scissors\".equals(comp)) ||                         (\"Scissors\".equals(you) && \"Paper\".equals(comp)) ||                         (\"Paper\".equals(you) && \"Rock\".equals(comp)) ) {                 System.out.println(\"! You win!\");             } else {                 assert ((\"Rock\".equals(comp) && \"Scissors\".equals(you)) ||                         (\"Scissors\".equals(comp) && \"Paper\".equals(you)) ||                         (\"Paper\".equals(comp) && \"Rock\".equals(you)));                 System.out.println(\"! You lose!\");             }         } while (playAgain(scanner));     } }\nimport java.util.Scanner;  public class rps2 {     public void rps2(){         Scanner sage = new Scanner(System.in);         int b;         b = 1;         System.out.println(\"Play again? Y(8), N(9)?\");         int yes= 8, no = 9;         int input;         input = sage.nextInt();              if(input == yes){                 System.out.println(\"Rock,Paper,Scissors!\");              }else{                 System.out.println(\"Thanks for playing!\");             }        } }\nimport java.util.Random;  public class RandomComputerPlayer implements RPSPlayer {     private final Random random;      public RandomComputerPlayer(Random random) {         this.random = random;     }      public String play() {         return CHOICES[this.random.nextInt(CHOICES.length)];     } }\nimport java.util.Scanner;  public class HumanPlayer implements RPSPlayer {     private final Scanner scanner;      public HumanPlayer(Scanner scanner) {         this.scanner = scanner;     }      public String play() {         System.out.println(\"Select 1, 2, or 3 for Rock, Paper, Scissors\");         int choice = this.scanner.nextInt();         // Keeping things simple, not doing any validation here         return CHOICES[choice - 1];     } }\nimport java.util.Scanner; import java.util.Random;  public class rps {     public static void main (String args[]){         int input;         int b = 1;         Scanner sage = new Scanner(System.in);         Random rnd = new Random();     System.out.println(\"Rock Paper Scissors, by Sage!\");     System.out.println(\"Select 1, 2, 3, for Rock, Paper, Scissors\");     //Menu Present, pretty bad still          while (b != 0){         int rock = 1, paper = 2, scissors = 3;         input = sage.nextInt();         int randomNumber = rnd.nextInt(3-1+1)+1;              if(randomNumber == rock){                 if(input == rock){                     System.out.println(\"Rock vs. Rock, ITS A TIE!\");             }    else if(input == paper){                     System.out.println(\"Rock vs. Paper! You win!\" );             }    else if(input == scissors){                     System.out.println(\"Rock vs. Scissors! You lose!\");             }  //These blocks establish options if the computer got Rock              else if(randomNumber == paper){                 if(input == rock){                     System.out.println(\"Paper vs. Rock! You lose!\");             }   else if(input == scissors){                     System.out.println(\"Paper vs. Scissors! You win!\");             }   else if(input == paper){                     System.out.println(\"Paper vs. Paper! Its a tie!\");             } //These blocks establish the options if comp. got paper              else if(randomNumber == scissors){                 if(input == rock){                     System.out.println(\"Scissors vs. Rock! You win!\");             }   else if(input == scissors){                     System.out.println(\"Scissors vs. Scissors, ITS A TIE!\");             }   else if(input == paper){                     System.out.println(\"Scissors vs Paper! You lose!\");             } //These blocks establish if the computer got scissors.              }             }             rps2 rps2Object = new rps2();             rps2Object.rps2();           }      }     } }\n",
    "reg_date": "2021-10-12T12:07:03.000Z"
  },
  {
    "id": 3785,
    "keyword": null,
    "link": null,
    "title": " role of scanner class in java",
    "description": "The Java Scanner class is widely used to parse text for strings  and primitive types using a regular expression. It is the simplest way to get input in Java.  By the help of Scanner in Java, we can get input from the user  in primitive types such as int, long, double, byte, float, short, etc.     Scanner in = new Scanner(System.in);   \n",
    "reg_date": "2021-10-12T12:07:03.000Z"
  },
  {
    "id": 3786,
    "keyword": null,
    "link": null,
    "title": " room library dependency",
    "description": "dependencies {   def room_version = \"2.2.5\"    implementation \"androidx.room:room-runtime:$room_version\"   annotationProcessor \"androidx.room:room-compiler:$room_version\" // For Kotlin use kapt instead of annotationProcessor    // optional - Kotlin Extensions and Coroutines support for Room   implementation \"androidx.room:room-ktx:$room_version\"    // optional - RxJava support for Room   implementation \"androidx.room:room-rxjava2:$room_version\"    // optional - Guava support for Room, including Optional and ListenableFuture   implementation \"androidx.room:room-guava:$room_version\"    // Test helpers   testImplementation \"androidx.room:room-testing:$room_version\" }\n",
    "reg_date": "2021-10-12T12:07:03.000Z"
  },
  {
    "id": 3787,
    "keyword": null,
    "link": null,
    "title": " round bg android",
    "description": "<?xml version=\"1.0\" encoding=\"UTF-8\"?> <shape xmlns:android=\"http://schemas.android.com/apk/res/android\">     <solid android:color=\"#FFFFFF\"/>     <stroke android:width=\"3dp\" android:color=\"#B1BCBE\" />     <corners android:radius=\"10dp\"/>     <padding android:left=\"0dp\" android:top=\"0dp\" android:right=\"0dp\" android:bottom=\"0dp\" /> </shape> \n",
    "reg_date": "2021-10-12T12:07:03.000Z"
  },
  {
    "id": 3788,
    "keyword": null,
    "link": null,
    "title": " round off java 2 decimal places",
    "description": "class round{     public static void main(String args[]){      double a = 123.13698;     double roundOff = Math.round(a*100)/100;      System.out.println(roundOff); } } \n",
    "reg_date": "2021-10-12T12:07:03.000Z"
  },
  {
    "id": 3789,
    "keyword": null,
    "link": null,
    "title": " run a java class without main method",
    "description": "//This is prior to Java 7 class StaticInitializationBlock{    static{       System.out.println(\"class without a main method\");       System.exit(0);    } }\n",
    "reg_date": "2021-10-12T12:07:03.000Z"
  },
  {
    "id": 3790,
    "keyword": null,
    "link": null,
    "title": " run code periodically android",
    "description": "/* USING HANDLER METHOD */ Handler myHandler = new Handler(); int delay = 1000; // 1000 milliseconds == 1 second  myHandler.postDelayed(new Runnable() {     public void run() {         System.out.println(\"myHandler: here!\"); // Do your work here         handler.postDelayed(this, delay);     } }, delay);  /* USING ALARM MANAGER METHOD */ // Some time when you want to run Date when = new Date(System.currentTimeMillis());  try {     Intent someIntent = new Intent(someContext, MyReceiver.class); // intent to be launched      // Note: this could be getActivity if you want to launch an activity     PendingIntent pendingIntent = PendingIntent.getBroadcast(         context,         0, // id (optional)         someIntent, // intent to launch         PendingIntent.FLAG_CANCEL_CURRENT // PendingIntent flag     );      AlarmManager alarms = (AlarmManager) context.getSystemService(         Context.ALARM_SERVICE     );      alarms.setRepeating(         AlarmManager.RTC_WAKEUP,         when.getTime(),         AlarmManager.INTERVAL_FIFTEEN_MINUTES,         pendingIntent     ); } catch(Exception e) {     e.printStackTrace(); }  /* THEN RECEIVE YOUR INTENT */ public class MyReceiver extends BroadcastReceiver {     @Override     public void onReceive(Context context, Intent intent)     {         System.out.println(\"MyReceiver: here!\") // Do your work here     } }  /* THEN REGISTER YOUR RECEIVER */ MyReceiver receiver = new MyReceiver(); context.registerReceiver(receiver, intentFilter);\n",
    "reg_date": "2021-10-12T12:07:03.000Z"
  },
  {
    "id": 3791,
    "keyword": null,
    "link": null,
    "title": " run java file",
    "description": "// compile > javac myCode.java // run > java myCode\njavac MyFisrtProgam.java // enter to compile    java MyfirstProgram // run program  \njavac hello.java\njavac filename.java //(This will compile the program) java filename //(This will run the file)\n// Assuming that you have an executable jar java -jar myJavaProject.jar  // Assuming that you have packaged jar java -jar target/myJavaProject.jar\njavac FirstJavaProgram.java\n",
    "reg_date": "2021-10-12T12:07:04.000Z"
  },
  {
    "id": 3792,
    "keyword": null,
    "link": null,
    "title": " run java program maven",
    "description": "mvn exec:java -Dexec.mainClass=\"com.vineetmanohar.module.Main\" -Dexec.args=\"arg0 arg1 arg2\"  \n",
    "reg_date": "2021-10-12T12:07:04.000Z"
  },
  {
    "id": 3793,
    "keyword": null,
    "link": null,
    "title": " run spring boot application command line",
    "description": "mvn spring-boot:run\njava -jar target/myJavaProject.jar\n",
    "reg_date": "2021-10-12T12:07:04.000Z"
  },
  {
    "id": 3794,
    "keyword": null,
    "link": null,
    "title": " runtime exception in java",
    "description": "RuntimeException is the superclass of those exceptions that can be thrown during the normal operation of the Java Virtual Machine. A method is not required to declare in its throws clause any subclasses of RuntimeException that might be thrown during the execution of the method but not caugh\n",
    "reg_date": "2021-10-12T12:07:04.000Z"
  },
  {
    "id": 3795,
    "keyword": null,
    "link": null,
    "title": " rwegex java",
    "description": "String regex, str;  boolean doesMatch = Pattern.compile(regex).matcher(str).matches();\n",
    "reg_date": "2021-10-12T12:07:04.000Z"
  },
  {
    "id": 3796,
    "keyword": null,
    "link": null,
    "title": " salesforce publish platform event apex",
    "description": "List<Low_Ink__e> inkEvents = new List<Low_Ink__e>(); inkEvents.add(new Low_Ink__e(Printer_Model__c='XZO-5', Serial_Number__c='12345',                Ink_Percentage__c=0.2)); inkEvents.add(new Low_Ink__e(Printer_Model__c='MN-123', Serial_Number__c='10013',                Ink_Percentage__c=0.15));     // Call method to publish events List<Database.SaveResult> results = EventBus.publish(inkEvents);   // Inspect publishing result for each event for (Database.SaveResult sr : results) {     if (sr.isSuccess()) {         System.debug('Successfully published event.');     } else {         for(Database.Error err : sr.getErrors()) {             System.debug('Error returned: ' +                         err.getStatusCode() +                         ' - ' +                         err.getMessage());         }     }        }  \n",
    "reg_date": "2021-10-12T12:07:04.000Z"
  },
  {
    "id": 3797,
    "keyword": null,
    "link": null,
    "title": " save map to file java",
    "description": "// Save map in file Map<String, String> map = new HashMap<String, String>(); Properties properties = new Properties();  for (Map.Entry<String,String> entry : map.entrySet()) {     properties.put(entry.getKey(), entry.getValue()); }  properties.store(new FileOutputStream(\"data.properties\"), null);  // Load the map Map<String, String> map_from_file = new HashMap<String, String>(); Properties properties = new Properties(); properties.load(new FileInputStream(\"data.properties\"));  for (String key : properties.stringPropertyNames()) {    map_from_file.put(key, properties.get(key).toString()); } \n",
    "reg_date": "2021-10-12T12:07:04.000Z"
  },
  {
    "id": 3798,
    "keyword": null,
    "link": null,
    "title": " saving String character in arraylist",
    "description": "//storing String character in arraylist import java.util.*; public class Basic_Practice2 { \tpublic static void main(String[] args) { \t\t \t\tString s = \"Hello\";        \t\tArrayList<String> al = new ArrayList<String>();       //storing String character in arraylist \t\tfor(int i = 0; i < s.length(); i++) \t\t\t{ \t\t\t\tal.add(Character.toString(s.charAt(i))); \t\t\t}       // printing ArrayList \t\tSystem.out.println(al);//[H,e,l,l,o] \t\t \t} }\n",
    "reg_date": "2021-10-12T12:07:04.000Z"
  },
  {
    "id": 3799,
    "keyword": null,
    "link": null,
    "title": " savve array to <List>",
    "description": "Integer[] spam = new Integer[] { 1, 2, 3 }; List<Integer> list = Arrays.asList(spam);\nArrays.asList(array);\n",
    "reg_date": "2021-10-12T12:07:04.000Z"
  },
  {
    "id": 3800,
    "keyword": null,
    "link": null,
    "title": " sc.nextline skips",
    "description": "int option = input.nextInt(); input.nextLine();  // Consume newline left-over String str1 = input.nextLine();\n",
    "reg_date": "2021-10-12T12:07:05.000Z"
  },
  {
    "id": 3801,
    "keyword": null,
    "link": null,
    "title": " scala vs java",
    "description": "Scala is a statically typed programming language whereas Java is a multi-platform, network-centric, programming language. Scala uses an actor model for supporting modern concurrency whereas Java uses the conventional thread-based model for concurrency. Scala variables are by default immutable type while Java variables are by default mutable type. Scala supports lazy evaluation while Java doesn&rsquo;t support lazy evaluation. Scala doesn&rsquo;t contain static members whereas Java contains static members. Scala supports operator overloading whereas Java doesn&rsquo;t support operator overloading. Scala doesn&rsquo;t offer backward compatibility whereas Java offers backward compatibility. Scala is less readable because of nested code whereas Java is more readable. Scala frameworks are Play, Lift whereas Java frameworks are Spring, Grails, and many more.\n",
    "reg_date": "2021-10-12T12:07:05.000Z"
  },
  {
    "id": 3802,
    "keyword": null,
    "link": null,
    "title": " scan folat in java",
    "description": "float n = sc.nextFloat();\n",
    "reg_date": "2021-10-12T12:07:05.000Z"
  },
  {
    "id": 3803,
    "keyword": null,
    "link": null,
    "title": " scanner check if int",
    "description": "boolean isAnInt = scanner.hasNextInt();\nScanner sc = new Scanner(System.in); int number; do {     System.out.println(\"Please enter a positive number!\");     while (!sc.hasNextInt()) {         System.out.println(\"That's not a number!\");         sc.next(); // this is important!     }     number = sc.nextInt(); } while (number <= 0); System.out.println(\"Thank you! Got \" + number);\n",
    "reg_date": "2021-10-12T12:07:05.000Z"
  },
  {
    "id": 3804,
    "keyword": null,
    "link": null,
    "title": " scanner in java",
    "description": "import java.util.Scanner;  // import scanner   Scanner myScanner = new Scanner(System.in); // Make scanner obj  String inputString = myScanner.nextLine(); // Take whole line  boolean inputBoolean = myScanner.nextBoolean(); //Boolean input  long inputLong = myScanner.nextLong(); //Interger,long ... input\nimport java.util.Scanner;\t\t//Import Scanner in java  class classname{   public void methodname(){     Scanner s_name = new Scanner(System.in);\t//Scanner declaration     //Use Scanner object to take input     int val1    =  s_name.nextInt();\t\t\t//int     float val2  =  s_name.nextFloat();\t\t\t//float     double val3 =  s_name.nextDouble();\t\t\t//double     string name =  s_name.nextLine();\t\t\t//string     char ch     =  s_name.nextLine().charAt(0);\t//character   }}\nimport java.util.Scanner;  Public class Scanner { \tPublic static void main(String[] args) {     \t// Scanner *scanner name here* = new Scanner(System.in);       \tScanner scan = new Scanner(System.in);       \tSystem.out.println(\"Type anything and the scanner will take that input and print it\");       \tString next = scan.next();       \tSystem.out.println(next);     }  }\nimport java.util.Scanner;//import Scanner  Scanner input=new Scanner(System.in);//Create the scanner Obj  float numF = input.nextFloat();//Returns float int num1 = input.nextInt(); //Returns int byte byte1 = input.nextByte();//Returns Byte long lg1 = input.nextLong();//Returns long boolean b1 = input.nextBoolean();//Returns bool double num2 = input.nextDouble();//Returns Double String nome = input.nextLine();//Returns String  //execution is pause until you give input  \nimport java.util.Scanner; ...   Scanner console = new Scanner(System.in);   int num = console.nextInt();   console.nextLine() // to take in the enter after the nextInt()    String str = console.nextLine();\n// import Scanner import java.util.Scanner;  // Initialize Scanner Scanner input = new Scanner(System.in);  // Test program with Scanner System.out.println(\"What is your name?\"); String name = input.nextLine();  System.out.println(\"Hello,\" + name + \" , it is nice to meet you!\");\n",
    "reg_date": "2021-10-12T12:07:05.000Z"
  },
  {
    "id": 3805,
    "keyword": null,
    "link": null,
    "title": " scanner java",
    "description": "import java.util.Scanner;  // import scanner   Scanner myScanner = new Scanner(System.in); // Make scanner obj  String inputString = myScanner.nextLine(); // Take whole line  boolean inputBoolean = myScanner.nextBoolean(); //Boolean input  long inputLong = myScanner.nextLong(); //Interger,long ... input\nimport java.util.Scanner;\t\t//Import Scanner in java  class classname{   public void methodname(){     Scanner s_name = new Scanner(System.in);\t//Scanner declaration     //Use Scanner object to take input     int val1    =  s_name.nextInt();\t\t\t//int     float val2  =  s_name.nextFloat();\t\t\t//float     double val3 =  s_name.nextDouble();\t\t\t//double     string name =  s_name.nextLine();\t\t\t//string     char ch     =  s_name.nextLine().charAt(0);\t//character   }}\nScanner scanner = new Scanner(\"Hello world\");  //do something with scanner  scanner.close(); \nimport java.util.Scanner;  Public class Scanner { \tPublic static void main(String[] args) {     \t// Scanner *scanner name here* = new Scanner(System.in);       \tScanner scan = new Scanner(System.in);       \tSystem.out.println(\"Type anything and the scanner will take that input and print it\");       \tString next = scan.next();       \tSystem.out.println(next);     }  }\nimport java.util.Scanner;//import Scanner  Scanner input=new Scanner(System.in);//Create the scanner Obj  float numF = input.nextFloat();//Returns float int num1 = input.nextInt(); //Returns int byte byte1 = input.nextByte();//Returns Byte long lg1 = input.nextLong();//Returns long boolean b1 = input.nextBoolean();//Returns bool double num2 = input.nextDouble();//Returns Double String nome = input.nextLine();//Returns String  //execution is pause until you give input  \n     Scanner sc = new Scanner(System.in);      int i = sc.nextInt();  \n",
    "reg_date": "2021-10-12T12:07:05.000Z"
  },
  {
    "id": 3806,
    "keyword": null,
    "link": null,
    "title": " scanner methods java char",
    "description": "Scanner scanner = new Scanner(System.in); char ch = scanner.next().charAt(0);\n",
    "reg_date": "2021-10-12T12:07:06.000Z"
  },
  {
    "id": 3807,
    "keyword": null,
    "link": null,
    "title": " scroll down selenium java",
    "description": "import org.openqa.selenium.JavascriptExecutor; import org.openqa.selenium.WebDriver; import org.openqa.selenium.chrome.ChromeDriver; import org.testng.annotations.Test;  public class ScrollByPixel {      WebDriver driver;     @Test     public void ByPixel() {         System.setProperty(\"webdriver.chrome.driver\", \"E://Selenium//Selenium_Jars//chromedriver.exe\");         driver = new ChromeDriver();          JavascriptExecutor js = (JavascriptExecutor) driver;          // Launch the application\t\t         driver.get(\"http://demo.guru99.com/test/guru99home/\");          //To maximize the window. This code may not work with Selenium 3 jars. If script fails you can remove the line below\t\t         driver.manage().window().maximize();          // This  will scroll down the page by  1000 pixel vertical\t\t         js.executeScript(\"window.scrollBy(0,1000)\");     } } \n Selenium does not have a method for scrolling  but there are some ways to scroll:      #1 ->=moveToElement= coming from Actions class    will scroll down and up to given web element    #2 Using JSExecutor: We can inject JavaScript    code in our Java+Selenium code using JSExecutor    which helps us scroll up, down, left, right.    We need to create instance of JS executor,    then cast our driver type of it. ==================================================          syntax is =       JavaScriptExecutor js = (JavaScriptExecutor) Driver.getDriver();    js.executeScript(\"in here we need to pass js code that scrolls\");              js.executeScript(\"window.scrollBy(0,250)\");      js.executeScript(\"arguments[0].scrollIntoView(true);\", WebElement);\nSelenium does not have a method for scrolling but there are some ways to scroll: #1 ->=moveToElement= coming from Actions class    will scroll down and up to given web element #2 Using JSExecutor: We can inject JavaScript    code in our Java+Selenium code using JSExecutor    which helps us scroll up, down, left, right.    We need to create instance of JS executor,    then cast our driver type of it. WebDriver driver = new ChromeDriver();  JavascriptExecutor jse = (JavascriptExecutor)driver; jse.executeScript(\"scroll(0, 250);\"); Scroll Down jse.executeScript(\"scroll(0,-250);\"); Scroll Up \n",
    "reg_date": "2021-10-12T12:07:06.000Z"
  },
  {
    "id": 3808,
    "keyword": null,
    "link": null,
    "title": " scrollbar in textarea java",
    "description": "textArea = new JTextArea(); scroll = new JScrollPane(textArea); //this.add(textArea); // get rid of this this.add(scroll);\n",
    "reg_date": "2021-10-12T12:07:06.000Z"
  },
  {
    "id": 3809,
    "keyword": null,
    "link": null,
    "title": " search an element in an array java",
    "description": "package com.mkyong.core;  import java.util.Arrays; import java.util.List;  public class StringArrayExample1 {      public static void main(String[] args) {          String[] alphabet = new String[]{\"A\", \"B\", \"C\"};          // Convert String Array to List         List<String> list = Arrays.asList(alphabet);                  if(list.contains(\"A\")){             System.out.println(\"Hello A\");         }      }  } Copy\nimport java.util.Scanner; public class Search_Element {     public static void main(String[] args)      {         int n, x, flag = 0, i = 0;         Scanner s = new Scanner(System.in);         System.out.print(\"Enter no. of elements you want in array:\");         n = s.nextInt();         int a[] = new int[n];         System.out.println(\"Enter all the elements:\");         for(i = 0; i < n; i++)         {             a[i] = s.nextInt();         }         System.out.print(\"Enter the element you want to find:\");         x = s.nextInt();         for(i = 0; i < n; i++)         {             if(a[i] == x)             {                 flag = 1;                 break;             }             else             {                 flag = 0;             }         }         if(flag == 1)         {             System.out.println(\"Element found at position:\"+(i + 1));         }         else         {             System.out.println(\"Element not found\");         }     } }\narray[array.indexOf(element)]\n\t// Convert to stream and test it \tboolean result = Arrays.stream(alphabet).anyMatch(\"A\"::equals); \tif (result) { \t\tSystem.out.println(\"Hello A\"); \t} Copy\n",
    "reg_date": "2021-10-12T12:07:06.000Z"
  },
  {
    "id": 3810,
    "keyword": null,
    "link": null,
    "title": " search file java",
    "description": "File dir = new File(directory);  File[] matches = dir.listFiles(new FilenameFilter() {   public boolean accept(File dir, String name)   {      return name.startsWith(\"temp\") && name.endsWith(\".txt\");   } }); \n",
    "reg_date": "2021-10-12T12:07:06.000Z"
  },
  {
    "id": 3811,
    "keyword": null,
    "link": null,
    "title": " searching in database using java",
    "description": "import java.sql.*;  public class jdbcConn {    public static void main(String[] args) throws Exception {       Class.forName(\"org.apache.derby.jdbc.ClientDriver\");       Connection con = DriverManager.getConnection(          \"jdbc:derby://localhost:1527/testDb\",\"username\", \"password\");              Statement stmt = con.createStatement();       String query[] = {          \"SELECT * FROM emp where id = 1\",           \"select name from emp where name like 'ravi_'\",           \"select name from emp where name like 'ravi%'\"        };              for(String q : query) {          ResultSet rs = stmt.executeQuery(q);          System.out.println(\"Names for query \"+q+\" are\");                    while (rs.next()) {             String name = rs.getString(\"name\");             System.out.print(name+\"  \");          }          System.out.println();       }    } }\n",
    "reg_date": "2021-10-12T12:07:06.000Z"
  },
  {
    "id": 3812,
    "keyword": null,
    "link": null,
    "title": " second largest value in array java 8",
    "description": "public class ThirdLargestNumberInAnArray {    public static void main(String args[]){       int temp, size;       int array[] = {10, 20, 25, 63, 96, 57};       size = array.length;        for(int i = 0; i<size; i++ ){          for(int j = i+1; j<size; j++){              if(array[i]>array[j]){                temp = array[i];                array[i] = array[j];                array[j] = temp;             }          }       }       System.out.println(\"Third second largest number is:: \"+array[size-2]);    } }\n",
    "reg_date": "2021-10-12T12:07:07.000Z"
  },
  {
    "id": 3813,
    "keyword": null,
    "link": null,
    "title": " seconds to hours java",
    "description": "int s=123456; \t\t\tint sec = s % 60; \t\t    int min = (s / 60)`; \t\t    int hours = (s/60)/60;              \t\t    String strSec=(sec<10)?\"0\"+Integer.toString(sec):Integer.toString(sec); \t\t    String strmin=(min<10)?\"0\"+Integer.toString(min):Integer.toString(min); \t\t    String strHours=(hours<10)?\"0\"+Integer.toString(hours):Integer.toString(hours); \t\t     \t\t    System.out.println(strHours + \":\" + strmin + \":\" + strSec);\n",
    "reg_date": "2021-10-12T12:07:07.000Z"
  },
  {
    "id": 3814,
    "keyword": null,
    "link": null,
    "title": " see date in java",
    "description": "// get current date and timein java using Calendar.getTime() method import java.util.Calendar; import java.util.Date; public class UsingCalendarClass {    public static void main(String[] args)    {       Date date = Calendar.getInstance().getTime();       System.out.println(date);    } }\n// Get current date and time in java 8 import java.time.LocalDate; import java.time.LocalDateTime; import java.time.LocalTime; public class CurrentDateTimeJava8  {    public static void main(String[] args)     {       LocalDate ld = LocalDate.now();       System.out.println(\"Current date: \" + ld);       // get current time value       LocalTime lt = LocalTime.now();       System.out.println(\"Current time: \" + lt);       // get current date-time value       LocalDateTime ldt = LocalDateTime.now();       System.out.println(\"Current date-time: \" + ldt);    } }\n// get current date and time in java using LocalDate.now() method import java.time.LocalDate; public class UsingLocalDate {    public static void main(String[] args)    {       System.out.println(LocalDate.now());    } }\n// get current date and time in java using LocalDateTime.now() method import java.time.LocalDateTime; public class UsingLocalDateTime {    public static void main(String[] args)    {       System.out.println(LocalDateTime.now());    } }\nimport java.util.Date;  public class Main {    public static void main(String[] args) {     Date date = new Date(System.currentTimeMillis());     System.out.println(date);     } }\n",
    "reg_date": "2021-10-12T12:07:07.000Z"
  },
  {
    "id": 3815,
    "keyword": null,
    "link": null,
    "title": " see openjdk version",
    "description": "java -version\n",
    "reg_date": "2021-10-12T12:07:07.000Z"
  },
  {
    "id": 3816,
    "keyword": null,
    "link": null,
    "title": " select a random element from a list java",
    "description": "Random randomizer = new Random(); String random = list.get(randomizer.nextInt(list.size())); \n// Import all the libraries import javax.swing.*; import java.util.ArrayList; import java.util.List; import java.util.Random;  // Declare the Class public class Hello {       // Declare the Main Function     public static void main(String[] args)     {         // Declare a List (Be sure to include java.util.ArrayList; and java.util.List;)         List<String> l = new ArrayList<>();         l.add(\"Quote of the Day \\r\\nIf you find it in your heart to care for somebody else, you will have succeeded.  \\r\\nReopen the program for another quote.\");         l.add(\"Love Quote of the Day \\r\\nIf there's delight in love, 'Tis when I see that heart, which others bleed for, bleed for me.  \\r\\nReopen the program for another quote.\");         l.add(\"Art Quote of the Day \\r\\nArt is the stored honey of the human soul, gathered on wings of misery and travail.  \\r\\nReopen the program for another quote.\");         l.add(\"Nature Quote of the Day \\r\\nThe earth has received the embrace of the sun and we shall see the results of that love.  \\r\\nReopen the program for another quote.\");         l.add(\"Funny Quote Of the Day \\r\\nThe first condition of understanding a foreign country is to smell it.  \\r\\nReopen the program for another quote.\");         l.add(\"Quote of the Day \\r\\nAnger cannot be dishonest.  \\r\\nReopen the program for another quote.\");         l.add(\"Love Quote of the Day \\r\\nLove is when he gives you a piece of your soul, that you never knew was missing.  \\r\\nReopen the program for another quote.\");         l.add(\"Art Quote of the Day \\r\\nIt is only an auctioneer who can equally and impartially admire all schools of art.  \\r\\nReopen the program for another quote.\");         l.add(\"Nature Quote of the Day \\r\\nNature reserves the right to inflict upon her children the most terrifying jests.  \\r\\nReopen the program for another quote.\");         l.add(\"Funny Quote Of the Day \\r\\nMarriage is not just spiritual communion, it is also remembering to take out the trash.  \\r\\nReopen the program for another quote.\");                         // Object name should be same as class         Hello obj = new Hello();         // Display the input dialog box from JOptionPane         String inputValue = JOptionPane.showInputDialog(\"Please enter your name: \");         // Declare Random object (Be sure to include java.util.Random;)         Random rand = new Random();         // Get Random Index from the List         int randomIndex = rand.nextInt(l.size());         // Get the element on the random index in the list         String randomElement = l.get(randomIndex);         //Display the output dialog box from JOptionPane to display the random element         JOptionPane.showMessageDialog(null, randomElement + \"\\r\\n\\r\\nHave a nice day \" + inputValue + \"!\");     }      } \n",
    "reg_date": "2021-10-12T12:07:07.000Z"
  },
  {
    "id": 3817,
    "keyword": null,
    "link": null,
    "title": " select in selenium java",
    "description": "// Create object of the Select class Select se = new Select(driver.findElement(By.xpath(\"//*[@id='oldSelectMenu']\")));   // Select the option with value \"6\" se.selectByValue(\"6\"); \npackage newpackage; import org.openqa.selenium.WebDriver; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.support.ui.Select; import org.openqa.selenium.By;  public class accessDropDown {  public static void main(String[] args) {  \t\tSystem.setProperty(\"webdriver.gecko.driver\",\"C:\\\\geckodriver.exe\"); \t    String baseURL = \"http://demo.guru99.com/test/newtours/register.php\"; \t    WebDriver driver = new FirefoxDriver(); \t\tdriver.get(baseURL);  \t\tSelect drpCountry = new Select(driver.findElement(By.name(\"country\"))); \t\tdrpCountry.selectByVisibleText(\"ANTARCTICA\");  \t\t//Selecting Items in a Multiple SELECT elements \t\tdriver.get(\"http://jsbin.com/osebed/2\"); \t\tSelect fruits = new Select(driver.findElement(By.id(\"fruits\"))); \t\tfruits.selectByVisibleText(\"Banana\"); \t\tfruits.selectByIndex(1);  } } \nimport org.openqa.selenium.By;\t\t import org.openqa.selenium.WebDriver;\t\t import org.openqa.selenium.chrome.ChromeDriver;\t\t  public class MyClass {\t\t\t\t     \t\t     public static void main(String[] args) {\t\t\t\t\t\t\t\t\t         String baseUrl = \"http://demo.guru99.com/test/link.html\";\t\t\t\t\t         System.setProperty(\"webdriver.chrome.driver\",\"G:\\\\chromedriver.exe\");\t\t\t\t\t         WebDriver driver = new ChromeDriver();\t\t\t\t\t         \t\t         driver.get(baseUrl);\t\t\t\t\t         driver.findElement(By.linkText(\"click here\")).click();\t\t\t\t\t         System.out.println(\"title of page is: \" + driver.getTitle());\t\t\t\t\t\t\t         driver.quit();\t\t\t     }\t\t  }\t\t\t \n",
    "reg_date": "2021-10-12T12:07:07.000Z"
  },
  {
    "id": 3818,
    "keyword": null,
    "link": null,
    "title": " select java version linux",
    "description": "sudo update-alternatives --config java\nsudo update-java-alternatives -s java-8-oracle export JAVA_HOME=/usr/lib/jvm/java-8-oracle/ export PATH=$PATH:$JAVA_HOME 123\n",
    "reg_date": "2021-10-12T12:07:07.000Z"
  },
  {
    "id": 3819,
    "keyword": null,
    "link": null,
    "title": " select photo from camera android",
    "description": "private void pickFromGallery(){        //Create an Intent with action as ACTION_PICK        Intent intent=new Intent(Intent.ACTION_PICK);        // Sets the type as image/*. This ensures only components of type image are selected        intent.setType(\"image/*\");        //We pass an extra array with the accepted mime types. This will ensure only components with these MIME types as targeted.        String[] mimeTypes = {\"image/jpeg\", \"image/png\"};        intent.putExtra(Intent.EXTRA_MIME_TYPES,mimeTypes);        // Launching the Intent         startActivityForResult(intent,GALLERY_REQUEST_CODE);    }      public void onActivityResult(int requestCode,int resultCode,Intent data){           // Result code is RESULT_OK only if the user selects an Image           if (resultCode == Activity.RESULT_OK)           switch (requestCode){               case GALLERY_REQUEST_CODE:                   //data.getData returns the content URI for the selected Image                   Uri selectedImage = data.getData();                   imageView.setImageURI(selectedImage);                   break;           }       }\n",
    "reg_date": "2021-10-12T12:07:07.000Z"
  },
  {
    "id": 3820,
    "keyword": null,
    "link": null,
    "title": " selection sort in java",
    "description": "public static void SelectionSort(int[] arr) {   int small;   for (int i = 0; i <arr.length - 1; i++)   {     small = i;     for (int j = i + 1; j < arr.length; j++)     {       //if current position is less than previous smallest       if (arr[j] < arr[small])       {         small = j;                  //swap values         int temp = arr[i];         arr[i] = arr[small];         arr[small] = temp;        }   \t}   } }\n// example on selection sort java public class SelectionSortInJava {    void toSort(int[] arrNum)    {       int number = arrNum.length;       for(int a = 0; a < number - 1; a++)       {          // finding minimum element          int minimum = a;          for(int b = a + 1; b < number; b++)          {             if(arrNum[b] < arrNum[minimum])             {                minimum = b;             }          }          // swapping minimum element with first element          int temp = arrNum[minimum];          arrNum[minimum] = arrNum[a];          arrNum[a] = temp;       }    }    // printing array    void displayArray(int[] arrPrint)    {       int num = arrPrint.length;       for(int a = 0; a < num; ++a)       {          System.out.print(arrPrint[a] + \" \");       }       System.out.println();    }    public static void main(String[] args)    {       SelectionSortInJava obj = new SelectionSortInJava();       int[] arrInput = {5, 4, -3, 2, -1};       obj.toSort(arrInput);       System.out.println(\"After sorting : \");       obj.displayArray(arrInput);    } }\nstatic void selectionSort(int[] arr) {         int lowest, lowestIndex;         for(int i = 0; i < arr.length -1; i++) {             //Find the lowest             lowest = arr[i];             lowestIndex = i;             for(int j = i; j < arr.length; j++) {                 if(arr[j] < lowest) {                     lowest = arr[j];                     lowestIndex = j;                 }             }             //Swap             if(i != lowestIndex) {                 int temp = arr[i];                 arr[i] = arr[lowestIndex];                 arr[lowestIndex] = temp;             }                      }     }\n",
    "reg_date": "2021-10-12T12:07:07.000Z"
  },
  {
    "id": 3821,
    "keyword": null,
    "link": null,
    "title": " selection sort java",
    "description": "public static void SelectionSort(int[] arr) {   int small;   for (int i = 0; i <arr.length - 1; i++)   {     small = i;     for (int j = i + 1; j < arr.length; j++)     {       //if current position is less than previous smallest       if (arr[j] < arr[small])       {         small = j;                  //swap values         int temp = arr[i];         arr[i] = arr[small];         arr[small] = temp;        }   \t}   } }\n// example on selection sort java public class SelectionSortInJava {    void toSort(int[] arrNum)    {       int number = arrNum.length;       for(int a = 0; a < number - 1; a++)       {          // finding minimum element          int minimum = a;          for(int b = a + 1; b < number; b++)          {             if(arrNum[b] < arrNum[minimum])             {                minimum = b;             }          }          // swapping minimum element with first element          int temp = arrNum[minimum];          arrNum[minimum] = arrNum[a];          arrNum[a] = temp;       }    }    // printing array    void displayArray(int[] arrPrint)    {       int num = arrPrint.length;       for(int a = 0; a < num; ++a)       {          System.out.print(arrPrint[a] + \" \");       }       System.out.println();    }    public static void main(String[] args)    {       SelectionSortInJava obj = new SelectionSortInJava();       int[] arrInput = {5, 4, -3, 2, -1};       obj.toSort(arrInput);       System.out.println(\"After sorting : \");       obj.displayArray(arrInput);    } }\nstatic void selectionSort(int[] arr) {         int lowest, lowestIndex;         for(int i = 0; i < arr.length -1; i++) {             //Find the lowest             lowest = arr[i];             lowestIndex = i;             for(int j = i; j < arr.length; j++) {                 if(arr[j] < lowest) {                     lowest = arr[j];                     lowestIndex = j;                 }             }             //Swap             if(i != lowestIndex) {                 int temp = arr[i];                 arr[i] = arr[lowestIndex];                 arr[lowestIndex] = temp;             }                      }     }\n",
    "reg_date": "2021-10-12T12:07:07.000Z"
  },
  {
    "id": 3822,
    "keyword": null,
    "link": null,
    "title": " selenium java",
    "description": "from selenium import webdriver from selenium.webdriver.common.keys import Keys  driver = webdriver.Firefox() driver.get(\"http://www.python.org\") assert \"Python\" in driver.title elem = driver.find_element_by_name(\"q\") elem.clear() elem.send_keys(\"pycon\") elem.send_keys(Keys.RETURN) assert \"No results found.\" not in driver.page_source driver.close() \n import org.openqa.selenium.By; import org.openqa.selenium.Keys; import org.openqa.selenium.WebDriver; import org.openqa.selenium.WebElement; import org.openqa.selenium.firefox.FirefoxDriver; import org.openqa.selenium.support.ui.WebDriverWait; import static org.openqa.selenium.support.ui.ExpectedConditions.presenceOfElementLocated; import java.time.Duration;  public class HelloSelenium {      public static void main(String[] args) {         WebDriver driver = new FirefoxDriver();         WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));         try {             driver.get(\"https://google.com/ncr\");             driver.findElement(By.name(\"q\")).sendKeys(\"cheese\" + Keys.ENTER);             WebElement firstResult = wait.until(presenceOfElementLocated(By.cssSelector(\"h3>div\")));             System.out.println(firstResult.getAttribute(\"textContent\"));         } finally {             driver.quit();         }     } }   \n",
    "reg_date": "2021-10-12T12:07:08.000Z"
  },
  {
    "id": 3823,
    "keyword": null,
    "link": null,
    "title": " selenium java wait for page load",
    "description": "WebDriverWait wait = new WebDriverWait(driver, 20); wait.until(ExpectedConditions.elementToBeClickable(lastElementToLoad)); \nfrom selenium import webdriver from selenium.webdriver.common.by import By from selenium.webdriver.support.ui import WebDriverWait from selenium.webdriver.support import expected_conditions as EC    driver=webdriver.Firefox() driver.get(\"http://www.example.com\") #This is a dummy website URl try:     elem=WebDriverWait(driver,10).until(         EC.presence_of_element_located((By.ID,\"Element_to_be_found\")) #This is a dummy element</span>     ) finally:     driver.quit() \n<span class=\"kn\">from selenium import webdriver from</span> <span class=\"nn\">selenium.webdriver.common.by</span> <span class=\"k\">import</span> <span class=\"n\">By</span> <span class=\"kn\">from</span> <span class=\"nn\">selenium.webdriver.support.ui</span> <span class=\"k\">import</span> <span class=\"n\">WebDriverWait</span> <span class=\"kn\">from</span> <span class=\"nn\">selenium.webdriver.support</span> <span class=\"k\">import</span> <span class=\"n\">expected_conditions</span> <span class=\"k\">as</span> <span class=\"n\">EC</span>   <span class=\"n\">driver</span> <span class=\"o\">=</span> <span class=\"n\">webdriver</span><span class=\"o\">.</span><span class=\"n\">Firefox</span><span class=\"p\">()</span> <span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"http://www.example.com\"</span><span class=\"p\">) #This is a dummy website URL</span> <span class=\"k\">try</span><span class=\"p\">:</span>     <span class=\"n\">elem </span><span class=\"o\">=</span> <span class=\"n\">WebDriverWait</span><span class=\"p\">(</span><span class=\"n\">driver</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">until</span><span class=\"p\">(</span>         <span class=\"n\">EC</span><span class=\"o\">.</span><span class=\"n\">presence_of_element_located</span><span class=\"p\">((</span><span class=\"n\">By</span><span class=\"o\">.</span><span class=\"n\">ID</span><span class=\"p\">,</span> <span class=\"s2\">\"Element_to_be_found\"</span><span class=\"p\">)) #This is a dummy element</span>     <span class=\"p\">)</span> <span class=\"k\">finally</span><span class=\"p\">:</span>     <span class=\"n\">driver</span><span class=\"o\">.</span><span class=\"n\">quit</span><span class=\"p\">()</span> \n",
    "reg_date": "2021-10-12T12:07:08.000Z"
  },
  {
    "id": 3824,
    "keyword": null,
    "link": null,
    "title": " selet all elemnts",
    "description": "var elems = document.body.getElementsByTagName(\"*\");\n",
    "reg_date": "2021-10-12T12:07:08.000Z"
  },
  {
    "id": 3825,
    "keyword": null,
    "link": null,
    "title": " send action bar spigot",
    "description": "player.spigot().sendMessage(ChatMessageType.ACTION_BAR, new TextComponent(\"This message will be in the Action Bar\")); \nplayer.spigot().sendMessage(   ChatMessageType.ACTION_BAR,   new TextComponent(\"This message will be in the Action Bar\"));\nplayer.spigot().sendMessage(ChatMessageType.ACTION_BAR, new TextComponent(\"This message will be in the Action Bar\"));\n",
    "reg_date": "2021-10-12T12:07:08.000Z"
  },
  {
    "id": 3826,
    "keyword": null,
    "link": null,
    "title": " send message to all player java spigot",
    "description": "for (Player p : Bukkit.getOnlinePlayers()) {     p.sendMessage(\"\"); }\nBukkit.broadcastMessage(\"your message\");\n",
    "reg_date": "2021-10-12T12:07:08.000Z"
  },
  {
    "id": 3827,
    "keyword": null,
    "link": null,
    "title": " send variable intent",
    "description": "String sessionId = getIntent().getStringExtra(\"EXTRA_SESSION_ID\");\nIntent intent = new Intent(getBaseContext(), SignoutActivity.class); intent.putExtra(\"EXTRA_SESSION_ID\", sessionId); startActivity(intent);\n",
    "reg_date": "2021-10-12T12:07:08.000Z"
  },
  {
    "id": 3828,
    "keyword": null,
    "link": null,
    "title": " send whatsapp message java android studio",
    "description": "//Java / Android_Studio : best Answer ...                             Intent In_Whats = new Intent(Intent.ACTION_VIEW);               In_Whats.setData(Uri.parse(\" http://api.whatsapp.com/send?phone=+99999999999&&text=Hi \"));               startActivity(In_Whats); \n",
    "reg_date": "2021-10-12T12:07:08.000Z"
  },
  {
    "id": 3829,
    "keyword": null,
    "link": null,
    "title": " sending status code along with entity in spring boot",
    "description": "package com.example.demo.com.example.demo.resource;  import java.util.ArrayList; import java.util.List; import java.util.Optional;  import org.springframework.beans.factory.annotation.Autowired; import org.springframework.http.HttpStatus; import org.springframework.http.ResponseEntity; import org.springframework.web.bind.annotation.PathVariable; import org.springframework.web.bind.annotation.RequestBody; import org.springframework.web.bind.annotation.RequestMapping; import org.springframework.web.bind.annotation.RequestMethod; import org.springframework.web.bind.annotation.RestController;  import com.example.demo.com.example.demo.model.Employee; import com.example.demo.com.example.demo.repository.EmployeeRepo;  @RestController @RequestMapping(value = \"/webapi\") public class EmployeeResource {  \t@Autowired \tprivate EmployeeRepo employeeRepo;  \t@RequestMapping(method = RequestMethod.GET, value = \"/employees\") \tpublic List<Employee> getAllEmployees() {  \t\treturn employeeRepo.findAll(); \t}  \t@RequestMapping(method = RequestMethod.POST, value = \"/addemployee\") \tpublic ResponseEntity<Employee> addEmployee(@RequestBody Employee employee) { \t\temployeeRepo.save(employee); \t\tSystem.out.println(employee); \t\treturn new ResponseEntity<Employee>(employee, HttpStatus.CREATED); \t}  \t@RequestMapping(method = RequestMethod.GET, value = \"/employees/{employeeId}\") \tpublic ResponseEntity<Object> getEmployee(@PathVariable String employeeId) {  \t\tOptional<Employee> employee = employeeRepo.findById(employeeId);  \t\tif (employeeRepo.findById(employeeId).isEmpty()) { \t\t\treturn ResponseEntity.status(HttpStatus.NO_CONTENT).body(employee); \t\t} else { \t\t\treturn ResponseEntity.status(HttpStatus.OK).body(employee);  \t\t}  \t}  \t@RequestMapping(method = RequestMethod.DELETE, value = \"/deleteemployee/{employeeId}\") \tpublic String deleteEmployee(@PathVariable String employeeId) {  \t\temployeeRepo.deleteById(employeeId); \t\treturn \"Record Deleted : \" + employeeId;  \t}  \t@RequestMapping(method = RequestMethod.PUT, value = \"/updateemployee\") \tpublic ResponseEntity<Object> updateemployee(@RequestBody Employee employee) {  \t\tif (employeeRepo.existsById(employee.getEmployeeId())) { \t\t\temployeeRepo.save(employee); \t\t\treturn ResponseEntity.status(HttpStatus.ACCEPTED).body(employee); \t\t} else {  \t\t\treturn ResponseEntity.status(HttpStatus.NOT_FOUND).body(employee); \t\t}  \t}  } \n",
    "reg_date": "2021-10-12T12:07:08.000Z"
  },
  {
    "id": 3830,
    "keyword": null,
    "link": null,
    "title": " separate string by comma java",
    "description": "String names = \"prappo,prince\"; String[] namesList = names.split(\",\"); \n",
    "reg_date": "2021-10-12T12:07:08.000Z"
  },
  {
    "id": 3831,
    "keyword": null,
    "link": null,
    "title": " serialversionuid java",
    "description": "ANY-ACCESS-MODIFIER static final long serialVersionUID = 42L;\n",
    "reg_date": "2021-10-12T12:07:09.000Z"
  },
  {
    "id": 3832,
    "keyword": null,
    "link": null,
    "title": " servlet redirect java",
    "description": "response.sendRedirect(\"login.jsp\"); \n",
    "reg_date": "2021-10-12T12:07:09.000Z"
  },
  {
    "id": 3833,
    "keyword": null,
    "link": null,
    "title": " set $JAVA HOME variable in ubuntu",
    "description": "export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\n",
    "reg_date": "2021-10-12T12:07:09.000Z"
  },
  {
    "id": 3834,
    "keyword": null,
    "link": null,
    "title": " set  java",
    "description": "import java.util.*; public class SetDemo {    public static void main(String args[]) {        int count[] = {34, 22,10,60,30,22};       Set<Integer> set = new HashSet<Integer>();       try {          for(int i = 0; i < 5; i++) {             set.add(count[i]);          }          System.out.println(set);           TreeSet sortedSet = new TreeSet<Integer>(set);          System.out.println(\"The sorted list is:\");          System.out.println(sortedSet);           System.out.println(\"The First element of the set is: \"+ (Integer)sortedSet.first());          System.out.println(\"The last element of the set is: \"+ (Integer)sortedSet.last());       }       catch(Exception e) {}    } }   OUTPUT:                [34, 22, 10, 60, 30]               The sorted list is:               [10, 22, 30, 34, 60]               The First element of the set is: 10               The last element of the set is: 60\nA Set is a Collection that cannot contain duplicate elements.    The Set interface contains only methods inherited from Collection  and adds the restriction that duplicate elements are prohibited.\n SET: Can only store unique values,       And does not maintain order - HashSet can have null, order is not guaranteed - LinkedHashSet can have null and keeps the order  - TreeSet sorts the order and don't accept null   \n",
    "reg_date": "2021-10-12T12:07:09.000Z"
  },
  {
    "id": 3835,
    "keyword": null,
    "link": null,
    "title": " set char value to null java",
    "description": "//Primitives data types aren't nullable. However, you can use the following     c[i]= '\\0';  OR  c[i] = 0;\n",
    "reg_date": "2021-10-12T12:07:09.000Z"
  },
  {
    "id": 3836,
    "keyword": null,
    "link": null,
    "title": " set color of text for jlabel",
    "description": "JLabel title = new JLabel(\"Want a Raise?\", JLabel.CENTER); title.setForeground(Color.white); \n",
    "reg_date": "2021-10-12T12:07:09.000Z"
  },
  {
    "id": 3837,
    "keyword": null,
    "link": null,
    "title": " set height of layout programmatically android",
    "description": "// Gets linearlayout LinearLayout layout = findViewById(R.id.numberPadLayout); // Gets the layout params that will allow you to resize the layout LayoutParams params = layout.getLayoutParams(); // Changes the height and width to the specified *pixels* params.height = 100; params.width = 100; layout.setLayoutParams(params); \n",
    "reg_date": "2021-10-12T12:07:09.000Z"
  },
  {
    "id": 3838,
    "keyword": null,
    "link": null,
    "title": " set html text android java",
    "description": "if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {     textView.setText(Html.fromHtml(\"<h2>Title</h2><br><p>Description here</p>\", Html.FROM_HTML_MODE_COMPACT)); } else {      textView.setText(Html.fromHtml(\"<h2>Title</h2><br><p>Description here</p>\")); } \n",
    "reg_date": "2021-10-12T12:07:09.000Z"
  },
  {
    "id": 3839,
    "keyword": null,
    "link": null,
    "title": " set image programmatically android",
    "description": "mImageView.setBackgroundResource(R.drawable.ic_thumbs_up);\n",
    "reg_date": "2021-10-12T12:07:09.000Z"
  },
  {
    "id": 3840,
    "keyword": null,
    "link": null,
    "title": " set iteration java",
    "description": "import java.util.HashSet; import java.util.Set;  class IterateHashSet{    public static void main(String[] args) {      Set<String> hset = new HashSet<String>();      hset.add(\"Chaitanya\");      hset.add(\"Rahul\");        for (String temp : hset) {         System.out.println(temp);      }   } }\nimport java.util.HashSet; import java.util.Iterator;  class IterateHashSet{    public static void main(String[] args) {      HashSet<String> hset = new HashSet<String>();      hset.add(\"Chaitanya\");      hset.add(\"Rahul\");        Iterator<String> it = hset.iterator();      while(it.hasNext()){         System.out.println(it.next());      }   } }\n",
    "reg_date": "2021-10-12T12:07:09.000Z"
  },
  {
    "id": 3841,
    "keyword": null,
    "link": null,
    "title": " set java",
    "description": "import java.util.*; public class SetDemo {    public static void main(String args[]) {        int count[] = {34, 22,10,60,30,22};       Set<Integer> set = new HashSet<Integer>();       try {          for(int i = 0; i < 5; i++) {             set.add(count[i]);          }          System.out.println(set);           TreeSet sortedSet = new TreeSet<Integer>(set);          System.out.println(\"The sorted list is:\");          System.out.println(sortedSet);           System.out.println(\"The First element of the set is: \"+ (Integer)sortedSet.first());          System.out.println(\"The last element of the set is: \"+ (Integer)sortedSet.last());       }       catch(Exception e) {}    } }   OUTPUT:                [34, 22, 10, 60, 30]               The sorted list is:               [10, 22, 30, 34, 60]               The First element of the set is: 10               The last element of the set is: 60\nimport java.util.*; public class SetDemo {    public static void main(String args[]) {        int count[] = {34, 22,10,60,30,22};       Set<Integer> set = new HashSet<Integer>();       try {          for(int i = 0; i < 5; i++) {             set.add(count[i]);          }          System.out.println(set);           TreeSet sortedSet = new TreeSet<Integer>(set);          System.out.println(\"The sorted list is:\");          System.out.println(sortedSet);           System.out.println(\"The First element of the set is: \"+ (Integer)sortedSet.first());          System.out.println(\"The last element of the set is: \"+ (Integer)sortedSet.last());       }       catch(Exception e) {}    } } \nA Set is a Collection that cannot contain duplicate elements.    The Set interface contains only methods inherited from Collection  and adds the restriction that duplicate elements are prohibited.\n SET: Can only store unique values,       And does not maintain order - HashSet can have null, order is not guaranteed - LinkedHashSet can have null and keeps the order  - TreeSet sorts the order and don't accept null   \n",
    "reg_date": "2021-10-12T12:07:09.000Z"
  },
  {
    "id": 3842,
    "keyword": null,
    "link": null,
    "title": " set jframe fullscreen",
    "description": "frame.setExtendedState(JFrame.MAXIMIZED_BOTH);\nGraphicsEnvironment graphics =  \t\tGraphicsEnvironment.getLocalGraphicsEnvironment();          GraphicsDevice device = graphics.getDefaultScreenDevice(); JFrame frame = new JFrame(\"Fullscreen\"); device.setFullScreenWindow(frame);\n",
    "reg_date": "2021-10-12T12:07:10.000Z"
  },
  {
    "id": 3843,
    "keyword": null,
    "link": null,
    "title": " set layout margin programmatically android",
    "description": "LinearLayout ll = new LinearLayout(this); ll.setOrientation(LinearLayout.VERTICAL);  LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(      LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT);  layoutParams.setMargins(30, 20, 30, 0);  Button okButton=new Button(this); okButton.setText(\"some text\"); ll.addView(okButton, layoutParams); \nint sizeInDP = 16;  int marginInDp = (int) TypedValue.applyDimension(             TypedValue.COMPLEX_UNIT_DIP, sizeInDP, getResources()                     .getDisplayMetrics()); setMargins(view, sizeInDP, sizeInDP, sizeInDP, sizeInDP);   void setMargins (View view, int left, int top, int right, int bottom) {   if (view.getLayoutParams() instanceof ViewGroup.MarginLayoutParams) {     ViewGroup.MarginLayoutParams p = (ViewGroup.MarginLayoutParams) view.getLayoutParams();     p.setMargins(left, top, right, bottom);     view.requestLayout();   } } \nViewGroup.LayoutParams p = this.getLayoutParams();     if (p instanceof LinearLayout.LayoutParams) {         LinearLayout.LayoutParams lp = (LinearLayout.LayoutParams)p;         if (_default) lp.setMargins(mc.oml, mc.omt, mc.omr, mc.omb);         else lp.setMargins(mc.ml, mc.mt, mc.mr, mc.mb);         this.setLayoutParams(lp);     }     else if (p instanceof RelativeLayout.LayoutParams) {         RelativeLayout.LayoutParams lp = (RelativeLayout.LayoutParams)p;         if (_default) lp.setMargins(mc.oml, mc.omt, mc.omr, mc.omb);         else lp.setMargins(mc.ml, mc.mt, mc.mr, mc.mb);         this.setLayoutParams(lp);     }     else if (p instanceof TableRow.LayoutParams) {         TableRow.LayoutParams lp = (TableRow.LayoutParams)p;         if (_default) lp.setMargins(mc.oml, mc.omt, mc.omr, mc.omb);         else lp.setMargins(mc.ml, mc.mt, mc.mr, mc.mb);         this.setLayoutParams(lp);     } } \n",
    "reg_date": "2021-10-12T12:07:10.000Z"
  },
  {
    "id": 3844,
    "keyword": null,
    "link": null,
    "title": " set method in listiterator in java",
    "description": "import java.util.ArrayList; import java.util.ListIterator;  public class Main {       public static void main(String[] args) {         ArrayList days = new ArrayList<>();          days.add(\"Sun\");         days.add(\"Mon\");         days.add(\"Tue\");         days.add(\"Thu\");         days.add(\"Fri\");         days.add(\"Sat\");          ListIterator iterator = days.listIterator();          while (iterator.hasNext()) {             System.out.println(iterator.next());         }          iterator.set(\"None\");          System.out.println(\"After set : \");          for (String item : days) {             System.out.println(item);         }     }  }\n",
    "reg_date": "2021-10-12T12:07:10.000Z"
  },
  {
    "id": 3845,
    "keyword": null,
    "link": null,
    "title": " set of char in java",
    "description": "myString.chars().mapToObj(i -> (char) i).collect(Collectors.toList()); myString     .chars() // Convert to an IntStream     .mapToObj(i -> (char) i) // Convert int to char, which gets boxed to Character     .collect(Collectors.toList()); // Collect in a List<Character>\n",
    "reg_date": "2021-10-12T12:07:10.000Z"
  },
  {
    "id": 3846,
    "keyword": null,
    "link": null,
    "title": " set password visible in android",
    "description": " button.setOnTouchListener(new View.OnTouchListener() {         @Override         public boolean onTouch(View view, MotionEvent motionEvent) {             if(button.isPressed()) {                 upass.setInputType(InputType.TYPE_TEXT_VARIATION_PASSWORD);                 return true;             }             return true;         }    });\n",
    "reg_date": "2021-10-12T12:07:10.000Z"
  },
  {
    "id": 3847,
    "keyword": null,
    "link": null,
    "title": " set path in windows",
    "description": "set path=C:\\Program Files\\Java\\jdk1.6.0_23\\bin \n FOR MAC:   1&ordm; - Open Finder  2&ordm; - Choose Go > Go to folder  3&ordm; - Go to ~/Library/  4&ordm; - Look for hidden files: Cmd + Shift + . (dot)   5&ordm; - Depending on the shell you use, the file can be .bash_profile, or .bashrc, or .zshrc, ...  6&ordm; - Open that file in the text editor  7&ordm; - Add the new path like: export PATH=\"$PATH:\"User/new_path/...\"  8&ordm; - Test in your command line if it worked: echo $PATH  \n",
    "reg_date": "2021-10-12T12:07:10.000Z"
  },
  {
    "id": 3848,
    "keyword": null,
    "link": null,
    "title": " set precision in java",
    "description": "Double value = 10.0; value.setPrecision(4); \n",
    "reg_date": "2021-10-12T12:07:10.000Z"
  },
  {
    "id": 3849,
    "keyword": null,
    "link": null,
    "title": " set size of a jframe",
    "description": "import java.util.*; public static void main(string args){ JFrame frame = new JFrame(); frame.setSize(200,200); // Where you set size frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); frame.setVisible(true); }\n",
    "reg_date": "2021-10-12T12:07:10.000Z"
  },
  {
    "id": 3850,
    "keyword": null,
    "link": null,
    "title": " set solid color background android programatically in drawable",
    "description": "(view.getBackground()).setColorFilter(Color.parseColor(\"#FFDE03\"), PorterDuff.Mode.SRC_IN);\n",
    "reg_date": "2021-10-12T12:07:10.000Z"
  },
  {
    "id": 3851,
    "keyword": null,
    "link": null,
    "title": " set spring context",
    "description": "public class SpringBean {   @Autowired   private ApplicationContext appContext; }\nserver.servlet.context-path=/SOMETHING\n",
    "reg_date": "2021-10-12T12:07:11.000Z"
  },
  {
    "id": 3852,
    "keyword": null,
    "link": null,
    "title": " set to list java",
    "description": "Set<Foo> foo = new HashSet<Foo>(myList);\npublic void givenUsingCoreJava_whenSetConvertedToList_thenCorrect() {    Set<Integer> sourceSet = Sets.newHashSet(0, 1, 2, 3, 4, 5);    List<Integer> targetList = new ArrayList<>(sourceSet); }\n",
    "reg_date": "2021-10-12T12:07:11.000Z"
  },
  {
    "id": 3853,
    "keyword": null,
    "link": null,
    "title": " set top corner of shape radius programmatically android",
    "description": " GradientDrawable shape =  new GradientDrawable();  shape.setCornerRadius( 8 );   // add some color  // You can add your random color generator here  // and set color  if (i % 2 == 0) {   shape.setColor(Color.RED);  } else {   shape.setColor(Color.BLUE);  }   // now find your view and add background to it  View view = (LinearLayout) findViewById( R.id.my_view );  view.setBackground(shape);\n",
    "reg_date": "2021-10-12T12:07:11.000Z"
  },
  {
    "id": 3854,
    "keyword": null,
    "link": null,
    "title": " set view layout params android",
    "description": "yourView.setLayoutParams(new LinearLayout.LayoutParams(                     LinearLayout.LayoutParams.MATCH_PARENT,                     LinearLayout.LayoutParams.WRAP_CONTENT                     //change the parameters as whatever you want             )); //keep in mind that LinearLayout is not the only Layout, e.g. you can use ConstrainLayout etc... //after, you need to add yourView to a layout as it won't redraw itself if you just change the layout parameters e.g.: yourLayout.addView(yourView); //yourView will pop on yourLayout\n",
    "reg_date": "2021-10-12T12:07:11.000Z"
  },
  {
    "id": 3855,
    "keyword": null,
    "link": null,
    "title": " set view size android",
    "description": "someView.setLayoutParams(new LayoutParams(width, height));\n",
    "reg_date": "2021-10-12T12:07:11.000Z"
  },
  {
    "id": 3856,
    "keyword": null,
    "link": null,
    "title": " setbackground color hexadecimal android",
    "description": "view.setBackgroundColor(0x00FF00)\n",
    "reg_date": "2021-10-12T12:07:11.000Z"
  },
  {
    "id": 3857,
    "keyword": null,
    "link": null,
    "title": " setimagedrawable in android",
    "description": "int id = getResources().getIdentifier(\"yourpackagename:drawable/\" + StringGenerated, null, null); \n",
    "reg_date": "2021-10-12T12:07:11.000Z"
  },
  {
    "id": 3858,
    "keyword": null,
    "link": null,
    "title": " setting scale to big decimal java",
    "description": "// 1. new BigDecimal(\"35.3456\").round(new MathContext(4, RoundingMode.HALF_UP)); //result = 35.35 // 2. new BigDecimal(\"35.3456\").setScale(4, RoundingMode.HALF_UP); // result = 35.3456 \n",
    "reg_date": "2021-10-12T12:07:11.000Z"
  },
  {
    "id": 3859,
    "keyword": null,
    "link": null,
    "title": " setting up javafx in eclipse vm argument",
    "description": "After you set your user library with the required JavaFX classes, click the dropdown menu next to the run button Click \"Run Configurations\" and go to the \"Arguments\" tab  In the \"VM arguments\" box copypaste the following: --module-path=\"Add\\path\\to\\JavaFX\\lib\" --add-modules=javafx.controls,javafx.fxml\n",
    "reg_date": "2021-10-12T12:07:11.000Z"
  },
  {
    "id": 3860,
    "keyword": null,
    "link": null,
    "title": " shakescleare merchant of venice",
    "description": "class java {    public static void main()   {     system.out.println(\"leave it\");   } }\n",
    "reg_date": "2021-10-12T12:07:11.000Z"
  },
  {
    "id": 3861,
    "keyword": null,
    "link": null,
    "title": " share intent android",
    "description": " Intent shareIntent = new Intent(Intent.ACTION_SEND);             shareIntent.setType(\"text/plain\");             shareIntent.putExtra(Intent.EXTRA_SUBJECT, \"My application name\");             String shareMessage = \"\\n\" + tvBlogTitle.getText().toString()+ \"\\n\\n\";             shareMessage = shareMessage + bundle.getString(\"link\") + \"\\n\\n\";             shareIntent.putExtra(Intent.EXTRA_TEXT, shareMessage);              startActivity(Intent.createChooser(shareIntent, \"choose one\"));\n",
    "reg_date": "2021-10-12T12:07:11.000Z"
  },
  {
    "id": 3862,
    "keyword": null,
    "link": null,
    "title": " shift elements in array java",
    "description": "// Shift right from index of 'a' to 'b' for(int i = b; i>a; i--) { array[i] = array[i-1]; } /* Note: element at 'a' index will remain unchanged */  // Shift left from index of 'b' to 'a'  for(int i = a; i<b; i++) { array[i] = array[i+1]; } /* Note: element at 'b' index will remain unchanged */      \n",
    "reg_date": "2021-10-12T12:07:12.000Z"
  },
  {
    "id": 3863,
    "keyword": null,
    "link": null,
    "title": " short.max value java",
    "description": "Short.MIN_VALUE =  -32768 Short.MAX_VALUE = 32767    // Example    public class MyClass {     public static void main(String args[]) {              short z = Short.MAX_VALUE;       short y = Short.MIN_VALUE;        System.out.println(\"Max value= \" + z);       System.out.println(\"Min value= \" + y);     } }\n",
    "reg_date": "2021-10-12T12:07:12.000Z"
  },
  {
    "id": 3864,
    "keyword": null,
    "link": null,
    "title": " short java",
    "description": "short numberMin = -32768; short numberMax = 32767;\n",
    "reg_date": "2021-10-12T12:07:12.000Z"
  },
  {
    "id": 3865,
    "keyword": null,
    "link": null,
    "title": " shortcut for for loop in java",
    "description": "int[] numArray = {10, 20, 30, 40};   for(int num : numArray)  {         System.out.println(num); } \n",
    "reg_date": "2021-10-12T12:07:12.000Z"
  },
  {
    "id": 3866,
    "keyword": null,
    "link": null,
    "title": " show confirmation dialog java android",
    "description": "public void onDeleteClick(View v) {     int i = Integer.parseInt((String)v.getTag());      AlertDialog.Builder alert = new AlertDialog.Builder(AddressListActivity.this);     alert.setTitle(\"Delete\");     alert.setMessage(\"Are you sure you want to delete?\");     alert.setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {          @Override         public void onClick(DialogInterface dialog, int which) {             Address address = _list.get(_currentPage*PANELS_PER_PAGE + i);             _dbAdapter.deleteAddress(address.Id);              _GetAddresses();              dialog.dismiss();         }     });      alert.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {          @Override         public void onClick(DialogInterface dialog, int which) {                 dialog.dismiss();         }     });      alert.show(); } \n",
    "reg_date": "2021-10-12T12:07:12.000Z"
  },
  {
    "id": 3867,
    "keyword": null,
    "link": null,
    "title": " show dialog fragment from adapter",
    "description": "public class YourPagerAdapter extends PagerAdapter{     private Context context;     public YourPagerAdapter(Context c) {           this.context = c;    }     @Override       public void onClick(View v) {             FragmentActivity activity = (FragmentActivity)(context);             FragmentManager fm = activity.getSupportFragmentManager();             YourDialogFragment alertDialog = new YourDialogFragment();             alertDialog.show(fm, \"fragment_alert\");       } } \n",
    "reg_date": "2021-10-12T12:07:12.000Z"
  },
  {
    "id": 3868,
    "keyword": null,
    "link": null,
    "title": " show input dialog java",
    "description": " import javax.swing.JOptionPane;  public class SimpleInputDialog1 {      public static void main(String[] args){          String m = JOptionPane.showInputDialog(\"Anyone there?\");         System.out.println(m);      }  }\n",
    "reg_date": "2021-10-12T12:07:12.000Z"
  },
  {
    "id": 3869,
    "keyword": null,
    "link": null,
    "title": " shutdown batch file windows 10",
    "description": "shutdown /s /f /t 0\n",
    "reg_date": "2021-10-12T12:07:12.000Z"
  },
  {
    "id": 3870,
    "keyword": null,
    "link": null,
    "title": " sieve in java",
    "description": "class SieveOfEratosthenes  {      void sieveOfEratosthenes(int n)      {          // Create a boolean array \"prime[0..n]\" and initialize          // all entries it as true. A value in prime[i] will          // finally be false if i is Not a prime, else true.          boolean prime[] = new boolean[n+1];          for(int i=0;i<n;i++)              prime[i] = true;                     for(int p = 2; p*p <=n; p++)          {              // If prime[p] is not changed, then it is a prime              if(prime[p] == true)              {                  // Update all multiples of p                  for(int i = p*p; i <= n; i += p)                      prime[i] = false;              }          }                     // Print all prime numbers          for(int i = 2; i <= n; i++)          {              if(prime[i] == true)                  System.out.print(i + \" \");          }      }             // Driver Program to test above function      public static void main(String args[])      {          int n = 30;          System.out.print(\"Following are the prime numbers \");          System.out.println(\"smaller than or equal to \" + n);          SieveOfEratosthenes g = new SieveOfEratosthenes();          g.sieveOfEratosthenes(n);      }  } \n",
    "reg_date": "2021-10-12T12:07:12.000Z"
  },
  {
    "id": 3871,
    "keyword": null,
    "link": null,
    "title": " simple yes no dialog android default java",
    "description": "DialogInterface.OnClickListener dialogClickListener = new DialogInterface.OnClickListener() {     @Override     public void onClick(DialogInterface dialog, int which) {         switch (which){         case DialogInterface.BUTTON_POSITIVE:             //Yes button clicked             break;          case DialogInterface.BUTTON_NEGATIVE:             //No button clicked             break;         }     } };  AlertDialog.Builder builder = new AlertDialog.Builder(context); builder.setMessage(\"Are you sure?\").setPositiveButton(\"Yes\", dialogClickListener)     .setNegativeButton(\"No\", dialogClickListener).show(); \n",
    "reg_date": "2021-10-12T12:07:12.000Z"
  },
  {
    "id": 3872,
    "keyword": null,
    "link": null,
    "title": " simplify fractions in java",
    "description": "//only works with even fractions  //definitly a more efficant way but its working for me  //fraction must be split into numerator and denominator float numerator = 4; float denominator = 8; while(1==1){ //devides the numerator and the denomenator by 2 (or whatever number you put)   numerator = numerator/2;    denominator = denominator/2;      //if after deviding by 2 both the numerator and the denominator are whole numbers it will loop and devide and check them again   if(numerator == (int)numerator && denominator ==(int)denominator){     println(\"good\");    }  //if after being devided by 2 either the numerator or the denomerator are not whole numbers   else{      //both are multiplied by 2 to make them go back to being their simplest  whole number     numerator = numerator*2;       denominator = denominator*2;       //the fraction is simplifies and saved to the ints Simple_numerator and Simple_denominator and the loop stops     int Simple_numerator = int(numerator);     int Simple_denominator = int(denominator);     println(Simple_numerator + \"/\" + Simple_denominator);    break;    }  }            \n",
    "reg_date": "2021-10-12T12:07:12.000Z"
  },
  {
    "id": 3873,
    "keyword": null,
    "link": null,
    "title": " site:javaexample.org",
    "description": "package com.beginner.examples;  import java.util.Date;  public class DelayRun {    public static void main(String[] args) {      System.out.println(\"It is : \" + new Date());     try {       Thread.sleep(4000); // delay few seconds       System.out.println(\"It is : \" + new Date());     } catch (InterruptedException e) {         e.printStackTrace();     }   } } Copy\n",
    "reg_date": "2021-10-12T12:07:13.000Z"
  },
  {
    "id": 3874,
    "keyword": null,
    "link": null,
    "title": " size list java",
    "description": "        Collection<Object> list = new ArrayList<>();         list.size();                  // All collections use size()         // array use array. length  \nArrayList<String> listOfBanks = new ArrayList<>();  int size = listOfBanks.size();  System.out.println(\"size of array list after creating: \" + size);\nBefore operation: [1, 2, 3, 4, 5] Size of list = 5   \na.size() where a is list\n",
    "reg_date": "2021-10-12T12:07:13.000Z"
  },
  {
    "id": 3875,
    "keyword": null,
    "link": null,
    "title": " skip values in a for loop java",
    "description": "for(int i = 0; i < 10; i++) {     \t/*    \t\t Want to skip values between 3 and 7?          'continue' tells the for loop to skip to the next value of i \t*/     if(i >= 3 && i <= 7) continue;    }\n",
    "reg_date": "2021-10-12T12:07:13.000Z"
  },
  {
    "id": 3876,
    "keyword": null,
    "link": null,
    "title": " sleep() java",
    "description": "import java.util.concurrent.TimeUnit  TimeUnit.SECONDS.sleep(1); or TimeUnit.MINUTES.sleep(1);\n package com.journaldev.threads;  public class ThreadSleep {      public static void main(String[] args) throws InterruptedException {         long start = System.currentTimeMillis();         Thread.sleep(2000);         System.out.println(\"Sleep time in ms = \"+(System.currentTimeMillis()-start));              }  } \nimport java.util.concurrent.TimeUnit  try { \tTimeUnit.SECONDS.sleep(1); } catch (Exception e) { \tSystem.out.println(\"Oops! Something went wrong!\") }\n",
    "reg_date": "2021-10-12T12:07:13.000Z"
  },
  {
    "id": 3877,
    "keyword": null,
    "link": null,
    "title": " sleep for milliseconds in java",
    "description": "public class SleepThingy { \tpublic static void main(String[] args)     throws InterruptedException {     \t// the Thread.sleep function throws an InterruptedException       \tfor (int i = 1; i < 11; i++) {         \tSystem.out.println(i);           \tThread.sleep(1000); // sleep 1000 ms or 1 sec         }     } }\n",
    "reg_date": "2021-10-12T12:07:13.000Z"
  },
  {
    "id": 3878,
    "keyword": null,
    "link": null,
    "title": " sleep n seconds in go",
    "description": "/* this is golang code but the java syntax highlighting was good, so yeah */ package main import ( \t\"fmt\" \t\"time\" )  func main() { \tfor i := 1; i <= 5; i++ {     \tfmt.Println(i)         time.Sleep(1 * time.Second) // for 1 second         time.Sleep(1 * time.Millisecond) // for 1 millisecond     } }\n",
    "reg_date": "2021-10-12T12:07:13.000Z"
  },
  {
    "id": 3879,
    "keyword": null,
    "link": null,
    "title": " slice a list java",
    "description": "new ArrayList(input.subList(0, input.size()/2)) \n",
    "reg_date": "2021-10-12T12:07:13.000Z"
  },
  {
    "id": 3880,
    "keyword": null,
    "link": null,
    "title": " slicing array in java",
    "description": "int[] newArray = Arrays.copyOfRange(oldArray, startIndex, endIndex);\nimport java.util.Arrays; public class SlicingAnArray {    public static void main(String args[]){       int intArray[] = {12, 14, 58, 225, 56, 96 , 3, 45, 8 };       intArray = Arrays.copyOfRange(intArray, 3, 7);       System.out.println(Arrays.toString(intArray));    } }\nimport java.util.IntStream; // for java 8 and 8+ IntStream.range(start, end).map(x -> arr[x]).toArray();\n   //index   0   1   2   3   4 int[] arr = {10, 20, 30, 40, 50}; Arrays.copyOfRange(arr, 0, 2);          // returns {10, 20} Arrays.copyOfRange(arr, 1, 4);          // returns {20, 30, 40} Arrays.copyOfRange(arr, 2, arr.length); // returns {30, 40, 50} (length = 5) \n",
    "reg_date": "2021-10-12T12:07:13.000Z"
  },
  {
    "id": 3881,
    "keyword": null,
    "link": null,
    "title": " sliverlist flutter example",
    "description": "#In the below example, we will see how to use the SliverList with CustomScrollView.  import 'package:flutter/material.dart';      void main() => runApp(MyApp());      class MyApp extends StatelessWidget {     @override     Widget build(BuildContext context) {       return MaterialApp(         home: Scaffold(           body: CustomScrollView(             slivers: <Widget>[               SliverAppBar(                 actions: <Widget>[                   Icon(Icons.person, size: 40,)               ],                 title: Text(\"SliverList Example\"),                 leading: Icon(Icons.menu),                 backgroundColor: Colors.green,                 expandedHeight: 100.0,                 floating: true,                 pinned: true               ),               SliverList(                 delegate: new SliverChildListDelegate(_buildList(20)),               ),// Place sliver widgets here             ],           ),         ),       );     }   }   List _buildList(int count) {     List<Widget> listItems = List();     for (int i = 0; i < count; i++) {       listItems.add(new Padding(padding: new EdgeInsets.all(16.0),           child: new Text(               'Sliver Item ${i.toString()}',               style: new TextStyle(fontSize: 22.0)           )       ));     }     return listItems;   }  \n",
    "reg_date": "2021-10-12T12:07:13.000Z"
  },
  {
    "id": 3882,
    "keyword": null,
    "link": null,
    "title": " smallest int in java",
    "description": "// min value that an int can store: Integer.MIN_VALUE // max value that an int can store: Integer.MAX_VALUE // min value that a long can store: Long.MIN_VALUE // max value that a long can store: Long.MAX_VALUE\n",
    "reg_date": "2021-10-12T12:07:14.000Z"
  },
  {
    "id": 3883,
    "keyword": null,
    "link": null,
    "title": " smallest positive integer not in array java",
    "description": "If the expected running time should be linear, you can't use a TreeSet, which sorts the input and therefore requires O(NlogN). Therefore you should use a HashSet, which requires O(N) time to add N elements.  Besides, you don't need 4 loops. It's sufficient to add all the positive input elements to a HashSet (first loop) and then find the first positive integer not in that Set (second loop).  int N = A.length; Set<Integer> set = new HashSet<>(); for (int a : A) {     if (a > 0) {         set.add(a);     } } for (int i = 1; i <= N + 1; i++) {     if (!set.contains(i)) {         return i;     } }\n",
    "reg_date": "2021-10-12T12:07:14.000Z"
  },
  {
    "id": 3884,
    "keyword": null,
    "link": null,
    "title": " socket in java",
    "description": "// File Name GreetingServer.java import java.net.*; import java.io.*;  public class GreetingServer extends Thread {    private ServerSocket serverSocket;        public GreetingServer(int port) throws IOException {       serverSocket = new ServerSocket(port);       serverSocket.setSoTimeout(10000);    }     public void run() {       while(true) {          try {             System.out.println(\"Waiting for client on port \" +                 serverSocket.getLocalPort() + \"...\");             Socket server = serverSocket.accept();                          System.out.println(\"Just connected to \" + server.getRemoteSocketAddress());             DataInputStream in = new DataInputStream(server.getInputStream());                          System.out.println(in.readUTF());             DataOutputStream out = new DataOutputStream(server.getOutputStream());             out.writeUTF(\"Thank you for connecting to \" + server.getLocalSocketAddress()                + \"\\nGoodbye!\");             server.close();                       } catch (SocketTimeoutException s) {             System.out.println(\"Socket timed out!\");             break;          } catch (IOException e) {             e.printStackTrace();             break;          }       }    }        public static void main(String [] args) {       int port = Integer.parseInt(args[0]);       try {          Thread t = new GreetingServer(port);          t.start();       } catch (IOException e) {          e.printStackTrace();       }    } }\n// File Name GreetingClient.java import java.net.*; import java.io.*;  public class GreetingClient {     public static void main(String [] args) {       String serverName = args[0];       int port = Integer.parseInt(args[1]);       try {          System.out.println(\"Connecting to \" + serverName + \" on port \" + port);          Socket client = new Socket(serverName, port);                    System.out.println(\"Just connected to \" + client.getRemoteSocketAddress());          OutputStream outToServer = client.getOutputStream();          DataOutputStream out = new DataOutputStream(outToServer);                    out.writeUTF(\"Hello from \" + client.getLocalSocketAddress());          InputStream inFromServer = client.getInputStream();          DataInputStream in = new DataInputStream(inFromServer);                    System.out.println(\"Server says \" + in.readUTF());          client.close();       } catch (IOException e) {          e.printStackTrace();       }    } }\npublic class GreetServer {     private ServerSocket serverSocket;     private Socket clientSocket;     private PrintWriter out;     private BufferedReader in;      public void start(int port) {         serverSocket = new ServerSocket(port);         clientSocket = serverSocket.accept();         out = new PrintWriter(clientSocket.getOutputStream(), true);         in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));         String greeting = in.readLine();             if (\"hello server\".equals(greeting)) {                 out.println(\"hello client\");             }             else {                 out.println(\"unrecognised greeting\");             }     }      public void stop() {         in.close();         out.close();         clientSocket.close();         serverSocket.close();     }     public static void main(String[] args) {         GreetServer server=new GreetServer();         server.start(6666);     } }\nSocket Programming\n$ java GreetingServer 6066 Waiting for client on port 6066... \n",
    "reg_date": "2021-10-12T12:07:14.000Z"
  },
  {
    "id": 3885,
    "keyword": null,
    "link": null,
    "title": " socket programming in java",
    "description": "// File Name GreetingServer.java import java.net.*; import java.io.*;  public class GreetingServer extends Thread {    private ServerSocket serverSocket;        public GreetingServer(int port) throws IOException {       serverSocket = new ServerSocket(port);       serverSocket.setSoTimeout(10000);    }     public void run() {       while(true) {          try {             System.out.println(\"Waiting for client on port \" +                 serverSocket.getLocalPort() + \"...\");             Socket server = serverSocket.accept();                          System.out.println(\"Just connected to \" + server.getRemoteSocketAddress());             DataInputStream in = new DataInputStream(server.getInputStream());                          System.out.println(in.readUTF());             DataOutputStream out = new DataOutputStream(server.getOutputStream());             out.writeUTF(\"Thank you for connecting to \" + server.getLocalSocketAddress()                + \"\\nGoodbye!\");             server.close();                       } catch (SocketTimeoutException s) {             System.out.println(\"Socket timed out!\");             break;          } catch (IOException e) {             e.printStackTrace();             break;          }       }    }        public static void main(String [] args) {       int port = Integer.parseInt(args[0]);       try {          Thread t = new GreetingServer(port);          t.start();       } catch (IOException e) {          e.printStackTrace();       }    } }\n// File Name GreetingClient.java import java.net.*; import java.io.*;  public class GreetingClient {     public static void main(String [] args) {       String serverName = args[0];       int port = Integer.parseInt(args[1]);       try {          System.out.println(\"Connecting to \" + serverName + \" on port \" + port);          Socket client = new Socket(serverName, port);                    System.out.println(\"Just connected to \" + client.getRemoteSocketAddress());          OutputStream outToServer = client.getOutputStream();          DataOutputStream out = new DataOutputStream(outToServer);                    out.writeUTF(\"Hello from \" + client.getLocalSocketAddress());          InputStream inFromServer = client.getInputStream();          DataInputStream in = new DataInputStream(inFromServer);                    System.out.println(\"Server says \" + in.readUTF());          client.close();       } catch (IOException e) {          e.printStackTrace();       }    } }\npublic class GreetServer {     private ServerSocket serverSocket;     private Socket clientSocket;     private PrintWriter out;     private BufferedReader in;      public void start(int port) {         serverSocket = new ServerSocket(port);         clientSocket = serverSocket.accept();         out = new PrintWriter(clientSocket.getOutputStream(), true);         in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));         String greeting = in.readLine();             if (\"hello server\".equals(greeting)) {                 out.println(\"hello client\");             }             else {                 out.println(\"unrecognised greeting\");             }     }      public void stop() {         in.close();         out.close();         clientSocket.close();         serverSocket.close();     }     public static void main(String[] args) {         GreetServer server=new GreetServer();         server.start(6666);     } }\nSocket Programming\n$ java GreetingServer 6066 Waiting for client on port 6066... \n",
    "reg_date": "2021-10-12T12:07:14.000Z"
  },
  {
    "id": 3886,
    "keyword": null,
    "link": null,
    "title": " solucion var java",
    "description": "dfrvdfsdfsdfsdf\n",
    "reg_date": "2021-10-12T12:07:14.000Z"
  },
  {
    "id": 3887,
    "keyword": null,
    "link": null,
    "title": " sort 2d array by column java",
    "description": "Arrays.sort(myArr, (a, b) -> a[0] - b[0]); \nArrays.sort(myArr,(double[] a,double[] b)->{                 //here multiple lines of code can be placed                 return a[0]-b[0];              });\nArrays.sort(contests, (a, b) -> Integer.compare(b[0],a[0])); //decreasing order      Arrays.sort(contests, (a, b) -> Integer.compare(a[0],b[0]); //increasing order \nArrays.sort(myArr, (a, b) -> a[0] - b[0]);\nArrays.sort(array, Comparator.comparingDouble(o -> o[0])); \n",
    "reg_date": "2021-10-12T12:07:14.000Z"
  },
  {
    "id": 3888,
    "keyword": null,
    "link": null,
    "title": " sort a collection based on one value java",
    "description": " Collections.sort(agentDtoList, (o1, o2) -> o1.getCustomerCount() - o2.getCustomerCount());\n",
    "reg_date": "2021-10-12T12:07:14.000Z"
  },
  {
    "id": 3889,
    "keyword": null,
    "link": null,
    "title": " sort a map based on keys and values using java 8",
    "description": "Map< Integer, String> map=new HashMap<Integer, String>();  map.put(101, \"Hemendra\"); map.put(99, \"Andrew\"); map.put(103, \"Anish\"); map.put(18, \"Mohan\"); map.put(11, \"Christine\"); map.put(109, \"Rebeca\"); map.put(111, \"David\"); map.put(19, \"Rahim\"); map.put(10, \"Krishna\");  Required to sort the map:  1. On the basis of keys:  [10=Krishna, 11=Christine, 18=Mohan, 19=Rahim, 99=Andrew, 101=Hemendra, 103=Anish, 109=Rebeca, 111=David]  2. On the basis of values:  [99=Andrew, 103=Anish, 11=Christine, 111=David, 101=Hemendra, 10=Krishna, 18=Mohan, 19=Rahim, 109=Rebeca]  Solution:  System.out.println(map.entrySet().stream().sorted(Map.Entry.comparingByKey()).collect(Collectors.toList())); System.out.println(map.entrySet().stream().sorted(Map.Entry.comparingByValue()).collect(Collectors.toList()));\n",
    "reg_date": "2021-10-12T12:07:14.000Z"
  },
  {
    "id": 3890,
    "keyword": null,
    "link": null,
    "title": " sort a string array java",
    "description": "String[] myArray = {\"JavaFX\", \"HBase\", \"OpenCV\", \"Java\", \"Hadoop\",\"Neo4j\"}; Arrays.sort(myArray); System.out.println(Arrays.toString(myArray));\n",
    "reg_date": "2021-10-12T12:07:14.000Z"
  },
  {
    "id": 3891,
    "keyword": null,
    "link": null,
    "title": " sort algorithms java",
    "description": "for (int i = 0; i < arr.length; i++) {    for (int j = 0; j < arr.length-1-i; j++) {       if(arr[j]>arr[j+1])      {        int temp=arr[j];        arr[j]=arr[j+1];        arr[j+1]=temp;      }    }    System.out.print(\"Iteration \"+(i+1)+\": \");    printArray(arr);   }   return arr; // BUBBLE SORT\nA Sorting Algorithm is used to rearrange a given array or list elements according to a comparison operator on the elements. The comparison operator is used to decide the new order of element in the respective data structure.\n",
    "reg_date": "2021-10-12T12:07:14.000Z"
  },
  {
    "id": 3892,
    "keyword": null,
    "link": null,
    "title": " sort an arraylist of integer",
    "description": "//METHOD RETURNS VOID Collections.sort(arrayList);\n",
    "reg_date": "2021-10-12T12:07:15.000Z"
  },
  {
    "id": 3893,
    "keyword": null,
    "link": null,
    "title": " sort array<entry> float android studio",
    "description": "Collections.sort(Arrays, new Comparator<Object>() {             @Override             public int compare(Object o1, Object o2) {                 return Float.compare(o1.getFloatValue(), o2.getFloatValue());             }         });\n",
    "reg_date": "2021-10-12T12:07:15.000Z"
  },
  {
    "id": 3894,
    "keyword": null,
    "link": null,
    "title": " sort array java",
    "description": "import java. util. Arrays; Arrays. sort(array);\nHere&rsquo;s the java program to sort an array using Arrays.sort() method.  import java.util.Arrays; public class JavaArraySortMethod {    public static void main(String[] args)    {       String[] strGiven = {\"Great Barrier Reef\", \"Paris\", \"borabora\", \"Florence\",\"tokyo\", \"Cusco\"};       Arrays.sort(strGiven);       System.out.println(\"Output(case sensitive) : \" + Arrays.toString(strGiven));    } }\n// how to sort an array in java without using sort() method (ascending order) public class WithoutSortMethod {    public static void main(String[] args)    {       int temp;       int[] arrNumbers = {14, 8, 5, 54, 41, 10, 1, 500};       System.out.println(\"Before sort: \");       for(int num : arrNumbers)       {          System.out.println(num);       }       for(int a = 0; a < arrNumbers.length; a++)       {          for(int b = a + 1; b < arrNumbers.length; b++)          {             if(arrNumbers[a] > arrNumbers[b])             {                temp = arrNumbers[a];                arrNumbers[a] = arrNumbers[b];                arrNumbers[b] = temp;             }          }       }       System.out.println(\"---------------\");       System.out.println(\"After sort: \");       for(int num : arrNumbers)       {          System.out.println(num);       }    } }\npublic class SortingData {     public static void main(String[] args)     {         int[] arr = { 13, 7, 6, 45, 21, 9, 101, 102 };   \t\t         Arrays.sort(arr);//sort() function            System.out.printf(\"Modified arr[] : %s\",                           Arrays.toString(arr));     } }\n// java sort arraylist import java.util.ArrayList; import java.util.Collections; public class JavaSortArraylist  {    public static void main(String[] args)     {       ArrayList<String> al = new ArrayList<String>();       al.add(\"Bear\");        al.add(\"Fox\");        al.add(\"Deer\");        al.add(\"Cheetah\");        al.add(\"Anteater\");       al.add(\"Elephant\");       System.out.println(\"Before sorting ArrayList: \" + al);       Collections.sort(al);        System.out.println(\"After sorting ArrayList in Ascending order: \" + al);    } }\n// how to sort an array in java without using sort method public class WithoutUsingSortMethod {    public static void main(String[] args)     {       int temp;       int[] arrNumbers = {14, 8, 5, 54, 41, 10, 1, 500};       System.out.println(\"Before sort: \");       for(int num : arrNumbers)       {          System.out.println(num);       }       for(int a = 0; a <= arrNumbers.length - 1; a++)       {          for(int b = 0; b <= arrNumbers.length - 2; b++)          {             if(arrNumbers[b] < arrNumbers[b + 1])             {                temp = arrNumbers[b];                arrNumbers[b] = arrNumbers[b + 1];                arrNumbers[b + 1] = temp;             }          }       }       System.out.println(\"---------------\");       System.out.println(\"After sort: \");       for(int num : arrNumbers)         {          System.out.println(num);       }    } }\n",
    "reg_date": "2021-10-12T12:07:15.000Z"
  },
  {
    "id": 3895,
    "keyword": null,
    "link": null,
    "title": " sort array with n elements",
    "description": "\t\tScanner scanner = new Scanner( System.in );         int n = scanner.nextInt();         int[] a=new int[ n + 1 ];         for( int k = 1; k <= n; k ++ ){             a[ k ] = scanner.nextInt();         }         Arrays.sort( a );         for( int k = 1; k <= n; k ++ ){             System.out.print( a[k] + \" \" );         }\n",
    "reg_date": "2021-10-12T12:07:15.000Z"
  },
  {
    "id": 3896,
    "keyword": null,
    "link": null,
    "title": " sorting array in ascending order java",
    "description": "Arrays.sort(myArr, (a, b) -> a[0] - b[0]); \nHere&rsquo;s the java program to sort an array using Arrays.sort() method.  import java.util.Arrays; public class JavaArraySortMethod {    public static void main(String[] args)    {       String[] strGiven = {\"Great Barrier Reef\", \"Paris\", \"borabora\", \"Florence\",\"tokyo\", \"Cusco\"};       Arrays.sort(strGiven);       System.out.println(\"Output(case sensitive) : \" + Arrays.toString(strGiven));    } }\nint countOfArray = 5; int num [] =  new int[counfOfArray];  int num[] = [8 , 5 , 9 , 3 , 4];  for (int i = 0; i < countOfArray; i++)          {             for (int j = i + 1; j < countOfArray; j++) {                  if (num[i] > num[j])                  {                     temp = num[i];                     num[i] = num[j];                     num[j] = temp;                 }             }         }\nimport java.util.Arrays; public class JavaArraySortMethod {    public static void main(String[] args)    {    String[] strGiven = {\"Great Barrier Reef\", \"Paris\", \"borabora\",\"tokyo\", \"Cusco\"};    Arrays.sort(strGiven);    System.out.println(\"Output(case sensitive) : \" + Arrays.toString(strGiven));    } }\nArrays.sort();//this method is an inbuild function in java //to sort the array\n",
    "reg_date": "2021-10-12T12:07:15.000Z"
  },
  {
    "id": 3897,
    "keyword": null,
    "link": null,
    "title": " sorting hashmap by key in java 8",
    "description": "Map<String, String> newMapSortedByKey = sample.entrySet().stream()                 .sorted((e1,e2) -> e1.getKey().compareTo(e2.getKey()))                 .collect(Collectors.toMap(Map.Entry::getKey, Map.Entry::getValue, (e1,e2) -> e1, LinkedHashMap::new)); \n",
    "reg_date": "2021-10-12T12:07:15.000Z"
  },
  {
    "id": 3898,
    "keyword": null,
    "link": null,
    "title": " sorting in ascending",
    "description": "ArrayList -- sorting in ascending Write a method that can sort the ArrayList in Ascending order without using the sort method   Solution: public static void SortingArrayListAsc(List<Integer> list) {         for (int i = 0; i < list.size(); i++) {         for (int j = 0; j < list.size(); j++) {         if (list.get(i) < list.get(j)) {                     Integer temp = list.get(i);                     list.set(i, list.get(j));                     list.set(j, temp);           }             }         }            }\n",
    "reg_date": "2021-10-12T12:07:15.000Z"
  },
  {
    "id": 3899,
    "keyword": null,
    "link": null,
    "title": " sorting in descending order",
    "description": "ArrayList -- sorting in descending order Write a method that can sort the ArrayList in descending order without using the sort method   Solution: public static void SortingArrayListDesc(List<Integer> list) {         for (int i = 0; i < list.size(); i++) {         for (int j = 0; j < list.size(); j++) {         if (list.get(i) > list.get(j)) {                     Integer temp = list.get(i);                     list.set(i, list.get(j));                     list.set(j, temp);                     }             }    }     }\nfunction solution(n) {     return parseInt(n.toString().split('').sort((val1,val2) => val2-val1).join('')); }  \n",
    "reg_date": "2021-10-12T12:07:15.000Z"
  },
  {
    "id": 3900,
    "keyword": null,
    "link": null,
    "title": " sorting java",
    "description": "import java. util. Arrays; Arrays. sort(array);\nHere&rsquo;s the java program to sort an array using Arrays.sort() method.  import java.util.Arrays; public class JavaArraySortMethod {    public static void main(String[] args)    {       String[] strGiven = {\"Great Barrier Reef\", \"Paris\", \"borabora\", \"Florence\",\"tokyo\", \"Cusco\"};       Arrays.sort(strGiven);       System.out.println(\"Output(case sensitive) : \" + Arrays.toString(strGiven));    } }\n// how to sort an array in java without using sort() method (ascending order) public class WithoutSortMethod {    public static void main(String[] args)    {       int temp;       int[] arrNumbers = {14, 8, 5, 54, 41, 10, 1, 500};       System.out.println(\"Before sort: \");       for(int num : arrNumbers)       {          System.out.println(num);       }       for(int a = 0; a < arrNumbers.length; a++)       {          for(int b = a + 1; b < arrNumbers.length; b++)          {             if(arrNumbers[a] > arrNumbers[b])             {                temp = arrNumbers[a];                arrNumbers[a] = arrNumbers[b];                arrNumbers[b] = temp;             }          }       }       System.out.println(\"---------------\");       System.out.println(\"After sort: \");       for(int num : arrNumbers)       {          System.out.println(num);       }    } }\npublic class SortingData {     public static void main(String[] args)     {         int[] arr = { 13, 7, 6, 45, 21, 9, 101, 102 };   \t\t         Arrays.sort(arr);//sort() function            System.out.printf(\"Modified arr[] : %s\",                           Arrays.toString(arr));     } }\nfor (int i = 0; i < arr.length; i++) {    for (int j = 0; j < arr.length-1-i; j++) {       if(arr[j]>arr[j+1])      {        int temp=arr[j];        arr[j]=arr[j+1];        arr[j+1]=temp;      }    }    System.out.print(\"Iteration \"+(i+1)+\": \");    printArray(arr);   }   return arr; // BUBBLE SORT\n// java sort arraylist import java.util.ArrayList; import java.util.Collections; public class JavaSortArraylist  {    public static void main(String[] args)     {       ArrayList<String> al = new ArrayList<String>();       al.add(\"Bear\");        al.add(\"Fox\");        al.add(\"Deer\");        al.add(\"Cheetah\");        al.add(\"Anteater\");       al.add(\"Elephant\");       System.out.println(\"Before sorting ArrayList: \" + al);       Collections.sort(al);        System.out.println(\"After sorting ArrayList in Ascending order: \" + al);    } }\n",
    "reg_date": "2021-10-12T12:07:15.000Z"
  },
  {
    "id": 3901,
    "keyword": null,
    "link": null,
    "title": " sorting the arrayList in reverse order",
    "description": "Collections.sort(arraylist, Collections.reverseOrder());\n",
    "reg_date": "2021-10-12T12:07:15.000Z"
  },
  {
    "id": 3902,
    "keyword": null,
    "link": null,
    "title": " space in java",
    "description": "System.out.println(\"Str1\" + \"\\t\" + \"Str2\");\n",
    "reg_date": "2021-10-12T12:07:16.000Z"
  },
  {
    "id": 3903,
    "keyword": null,
    "link": null,
    "title": " space seperator in string in java",
    "description": "String[] splitted = \"peter,james,thomas\".split(\",\");\n",
    "reg_date": "2021-10-12T12:07:16.000Z"
  },
  {
    "id": 3904,
    "keyword": null,
    "link": null,
    "title": " spannable string in android java for color",
    "description": "String text2 = text + CepVizyon.getPhoneCode() + \"\\n\\n\"             + getText(R.string.currentversion) + CepVizyon.getLicenseText();  Spannable spannable = new SpannableString(text2);  spannable.setSpan(new ForegroundColorSpan(Color.WHITE), text.length(), (text + CepVizyon.getPhoneCode()).length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);  myTextView.setText(spannable, TextView.BufferType.SPANNABLE);\n",
    "reg_date": "2021-10-12T12:07:16.000Z"
  },
  {
    "id": 3905,
    "keyword": null,
    "link": null,
    "title": " specify decimal places java",
    "description": "DecimalFormat df = new DecimalFormat(); df.setMaximumFractionDigits(2); System.out.println(df.format(decimalNumber));\nd % 1 == 0 //THIS CHECKS IF VARIABLE D IS A WHOLE NUMBER\ndouble test = 12.15; DecimalFormat df = new DecimalFormat(\"#.0\"); System.out.println(df.format(test)); // Console: 12.2 // # - prints a digit if provided, nothing otherwise // . - indicates where to put the decimal seperator // 0 - prints a digit if provided, 0 otherwise\ntotal = (double) 100 / listMember.size(); DecimalFormat df = new DecimalFormat(\"#.##\"); String dx = df.format(total); total = Double.valueOf(dx);\n",
    "reg_date": "2021-10-12T12:07:16.000Z"
  },
  {
    "id": 3906,
    "keyword": null,
    "link": null,
    "title": " spigot action bar",
    "description": "player.spigot().sendMessage(   ChatMessageType.ACTION_BAR,   new TextComponent(\"This message will be in the Action Bar\"));\nplayer.spigot().sendMessage(ChatMessageType.ACTION_BAR, new TextComponent(\"This message will be in the Action Bar\"));\n",
    "reg_date": "2021-10-12T12:07:16.000Z"
  },
  {
    "id": 3907,
    "keyword": null,
    "link": null,
    "title": " spigot actionbar",
    "description": "player.spigot().sendMessage(   ChatMessageType.ACTION_BAR,   new TextComponent(\"This message will be in the Action Bar\"));\n",
    "reg_date": "2021-10-12T12:07:16.000Z"
  },
  {
    "id": 3908,
    "keyword": null,
    "link": null,
    "title": " spigot api maven",
    "description": "Add this to your pom.xml: <repositories>     <!-- This adds the Spigot Maven repository to the build -->     <repository>         <id>spigot-repo</id>         <url>https://hub.spigotmc.org/nexus/content/repositories/snapshots/</url>     </repository> </repositories>  <dependencies>     <!--This adds the Spigot API artifact to the build -->     <dependency>            <groupId>org.spigotmc</groupId>            <artifactId>spigot-api</artifactId>            <version>1.16.5-R0.1-SNAPSHOT</version>            <scope>provided</scope>     </dependency> </dependencies>\n",
    "reg_date": "2021-10-12T12:07:16.000Z"
  },
  {
    "id": 3909,
    "keyword": null,
    "link": null,
    "title": " spigot broadcast message",
    "description": "Bukkit.getServer().broadcastMessage(\"Your message\");\n",
    "reg_date": "2021-10-12T12:07:16.000Z"
  },
  {
    "id": 3910,
    "keyword": null,
    "link": null,
    "title": " spigot cancel repeating task",
    "description": "int taskID; public void startCountdown(){ \ttaskID = Bukkit.getServer().getScheduler().scheduleSyncRepeatingTask(this,new Countdown(),20L,20L); } public void stopCountdown(){ \tBukkit.getServer().getScheduler().cancelTask(taskID); } // 20L = 1 Second\n",
    "reg_date": "2021-10-12T12:07:16.000Z"
  },
  {
    "id": 3911,
    "keyword": null,
    "link": null,
    "title": " spigot chat color with symbol",
    "description": "\tYou can use symbol '&sect;' to select ChatColor inside a String. \tFor example  '&sect;bYour &sect;3Castle&sect;b is a safe space' \tequals  ChatColor.AQUA+\"Your \"+ChatColor.DARK_AQUA+\"Castle\"       +ChatColor.AQUA+\" is a safe space\"    \tValid colors: 0: black 1: dark.blue 2: green 3: dark.aqua 4: red 5: purple 6: gold 7: grey 8: dark.grey 9: blue a: light.green b: aqua c: light.red d: magenta e: yellow f: white \tValid Modifiers: k: obfuscated l: bold m: strikethrough n: underlined o: italic\n",
    "reg_date": "2021-10-12T12:07:16.000Z"
  },
  {
    "id": 3912,
    "keyword": null,
    "link": null,
    "title": " spigot custom join message",
    "description": "@EventHandler public void onJoin(PlayerJoinEvent e) { \te.setJoinMessage(\"Welcome, \" + e.getPlayer().getDisplayName()); }\n",
    "reg_date": "2021-10-12T12:07:17.000Z"
  },
  {
    "id": 3913,
    "keyword": null,
    "link": null,
    "title": " spigot despawn entity",
    "description": "entity.remove() // this will mark it for removing\n",
    "reg_date": "2021-10-12T12:07:17.000Z"
  },
  {
    "id": 3914,
    "keyword": null,
    "link": null,
    "title": " spigot disable join message",
    "description": "@EventHandler public void onJoin(PlayerJoinEvent e) {   e.setJoinMessage(\"\"); }\n",
    "reg_date": "2021-10-12T12:07:17.000Z"
  },
  {
    "id": 3915,
    "keyword": null,
    "link": null,
    "title": " spigot dispatchcommand",
    "description": "//as console : Bukkit.dispatchCommand(Bukkit.getConsoleSender(), \"command\"); //or as player : player.performCommand(\"command without /\");\n",
    "reg_date": "2021-10-12T12:07:17.000Z"
  },
  {
    "id": 3916,
    "keyword": null,
    "link": null,
    "title": " spigot execute command as console",
    "description": "ConsoleCommandSender console = Bukkit.getServer().getConsoleSender(); String command = \"command\"; Bukkit.dispatchCommand(console, command)\n",
    "reg_date": "2021-10-12T12:07:17.000Z"
  },
  {
    "id": 3917,
    "keyword": null,
    "link": null,
    "title": " spigot get player from UUID",
    "description": "Bukkit.getPlayer(UUID.fromString(yourString);\n",
    "reg_date": "2021-10-12T12:07:17.000Z"
  },
  {
    "id": 3918,
    "keyword": null,
    "link": null,
    "title": " spigot how to make an inventory",
    "description": "Inventory inv = Bukkit.createInventory(player, yourSize, \"My Inventory Name\");\n",
    "reg_date": "2021-10-12T12:07:17.000Z"
  },
  {
    "id": 3919,
    "keyword": null,
    "link": null,
    "title": " spigot kill entity",
    "description": "@EventHandler \tpublic void onEntitySpawn(EntitySpawnEvent event) { \t\tif (event.getEntityType() == EntityType.CREEPER) { \t\t\tif (event.getEntity() instanceof Damageable) { \t\t\t\t \t\t\t\tDamageable creeper = (Damageable) event.getEntity(); \t\t\t\tcreeper.damage(1000); \t\t\t} \t\t}     }\n",
    "reg_date": "2021-10-12T12:07:17.000Z"
  },
  {
    "id": 3920,
    "keyword": null,
    "link": null,
    "title": " spigot make config file",
    "description": "\t@Override     public void onEnable() {         createFiles();     }      private void createFiles(){         File configf = new File(getDataFolder(), \"config.yml\");          if(!configf.exists()){             configf.getParentFile().mkdirs();             saveResource(\"config.yml\", false);         }         FileConfiguration config = new YamlConfiguration();          try{             config.load(configf);         }catch (IOException | InvalidConfigurationException e){             e.printStackTrace();         }     }\n    public private File configf;     public FileConfiguration config;      private void createFiles(){         configf = new File(getDataFolder(), \"config.yml\");          if(!configf.exists()){             configf.getParentFile().mkdirs();             saveResource(\"config.yml\", false);         }         config = new YamlConfiguration();          try{             config.load(configf);         }catch (IOException | InvalidConfigurationException e){             e.printStackTrace();         }     }\n",
    "reg_date": "2021-10-12T12:07:17.000Z"
  },
  {
    "id": 3921,
    "keyword": null,
    "link": null,
    "title": " spigot plugin.yml",
    "description": "main: PATHTOMAINCLASS.MAINCLASS # Name can not contain spaces! name: YourPluginName # plugin version version: '1.0.0' description: What your plugin does # for api version make sure its your minecraft version without patches eg: 1.15, 1.14 etc api-version: 1.16 author: YOURNAME prefix: YourPluginName website: YourPluginWebsite depend: [PluginsYouDependOn] softdepend: [PluginsYouUseButDon'tNeed] loadbefore: [PluginsToLoadBefore] permissions:  PLUGINNAME.testpermission:   description: Everyone gets this permission by default   default: true  PLUGINNAME.testpermission2:   description: No one gets this permission by default   default: false  PLUGINNAME.testpermission3:   description: Operators get this permission by default   default: op commands:  commandname:   description: Your commands description that is show in /help   aliases:   -alternatecommandname   -alternatecommandname2   permission: PLUGINNAME.permissionYouMadeEarlier   usage: /<command> [args]\n",
    "reg_date": "2021-10-12T12:07:18.000Z"
  },
  {
    "id": 3922,
    "keyword": null,
    "link": null,
    "title": " spigot remove every entity",
    "description": " //Get all entities Bukkit.getWorld(\"world\").getEntities().forEach(entity -> {              //Check if entity isnt a player             if(!(entity instanceof Player))                 entity.remove();  });\n",
    "reg_date": "2021-10-12T12:07:18.000Z"
  },
  {
    "id": 3923,
    "keyword": null,
    "link": null,
    "title": " spigot repeating task",
    "description": "Bukkit.getScheduler().scheduleSyncRepeatingTask(plugin, new Runnable() {     @Override     public void run() {         Bukkit.broadcastMessage(\"This message is shown immediately and then repeated every second\");     } }, 0L, 20L); //0 Tick initial delay, 20 Tick (1 Second) between repeats\nint taskID; public void startCountdown(){ \ttaskID = Bukkit.getServer().getScheduler().scheduleSyncRepeatingTask(this,new Countdown(),20L,20L); } public void stopCountdown(){ \tBukkit.getServer().getScheduler().cancelTask(taskID); } // 20L = 1 Second\n",
    "reg_date": "2021-10-12T12:07:18.000Z"
  },
  {
    "id": 3924,
    "keyword": null,
    "link": null,
    "title": " spigot respawn player location",
    "description": "@EventHandler public void playerRespawn(PlayerRespawnEvent e) { \te.setRespawnLocation(new Location(world, x, y, z, yaw, pitch)); }\n",
    "reg_date": "2021-10-12T12:07:18.000Z"
  },
  {
    "id": 3925,
    "keyword": null,
    "link": null,
    "title": " spigot run task later",
    "description": "Bukkit.getScheduler().scheduleSyncDelayedTask(plugin, new Runnable() {     @Override     public void run() {         Bukkit.broadcastMessage(\"This message is shown after one second\");     } }, 20L); //20 Tick (1 Second) delay before run() is called\n// 20L = 1 Second Bukkit.getScheduler().runTaskLater(main, new Runnable() { \tpublic void run() { \t\tSystem.out.println(\"Plugin has been enabled for 5 seconds!\"); \t} }, 100L);\n",
    "reg_date": "2021-10-12T12:07:18.000Z"
  },
  {
    "id": 3926,
    "keyword": null,
    "link": null,
    "title": " spigot scheduler",
    "description": "Bukkit.getScheduler().scheduleSyncRepeatingTask(this, new Runnable() {     public void run() {              } }, 20, 20);  \n// 20L = 1 Second Bukkit.getScheduler().runTaskLater(main, new Runnable() { \tpublic void run() { \t\tSystem.out.println(\"Plugin has been enabled for 5 seconds!\"); \t} }, 100L);\nBukkit.getScheduler().scheduleSyncRepeatingTask(instance, new Runnable() {   @Override   public void run() {     //Your Code Here   } }, 0L, 20L);\n",
    "reg_date": "2021-10-12T12:07:18.000Z"
  },
  {
    "id": 3927,
    "keyword": null,
    "link": null,
    "title": " spigot spawn entity",
    "description": "\tWorld myWorld = Bukkit.getWorld(\"world\"); \tLocation spawnLocation = new Location(myWorld, 0, 10, 0); \tEntity spawnedPig = myWorld.spawnEntity(spawnLocation, EntityType.PIG);\t\n",
    "reg_date": "2021-10-12T12:07:18.000Z"
  },
  {
    "id": 3928,
    "keyword": null,
    "link": null,
    "title": " spigot spawn firework",
    "description": " public static void spawnFireworks(Location location, int amount) {    Location loc = location;    Firework fw = (Firework) loc.getWorld().spawnEntity(loc, EntityType.FIREWORK);    FireworkMeta fwm = fw.getFireworkMeta();    fwm.setPower(2);   fwm.addEffect(FireworkEffect.builder().withColor(Color.LIME).flicker(true).build());    fw.setFireworkMeta(fwm);   fw.detonate();    for(int i = 0;i<amount; i++){     Firework fw2 = (Firework) loc.getWorld().spawnEntity(loc, EntityType.FIREWORK);     fw2.setFireworkMeta(fwm);   } }\n",
    "reg_date": "2021-10-12T12:07:18.000Z"
  },
  {
    "id": 3929,
    "keyword": null,
    "link": null,
    "title": " spigot title",
    "description": "// String title, String subtitle, int fadeIn, int stay, int fadeOut. player.sendTitle(\"Welcome, \" + ChatColor.AQUA + player.getDisplayName(), 10, 70, 20); \n",
    "reg_date": "2021-10-12T12:07:18.000Z"
  },
  {
    "id": 3930,
    "keyword": null,
    "link": null,
    "title": " spinner get item text",
    "description": "Spinner spinner = (Spinner)findViewById(R.id.spinner); String text = spinner.getSelectedItem().toString();\n",
    "reg_date": "2021-10-12T12:07:18.000Z"
  },
  {
    "id": 3931,
    "keyword": null,
    "link": null,
    "title": " spinner get selected index",
    "description": "spinner1.getSelectedItemPosition();\n",
    "reg_date": "2021-10-12T12:07:18.000Z"
  },
  {
    "id": 3932,
    "keyword": null,
    "link": null,
    "title": " splay tree java implementation",
    "description": "/* https://www.link.cs.cmu.edu/splay/download/SplayTree.java Implementation of a top-down splay tree without the node storing a parent variable */\n",
    "reg_date": "2021-10-12T12:07:19.000Z"
  },
  {
    "id": 3933,
    "keyword": null,
    "link": null,
    "title": " splice javascritp",
    "description": "let arr = ['foo', 'bar', 10, 'qux'];  // arr.splice(<index>, <steps>, [elements ...]);  arr.splice(1, 1);\t\t\t// Removes 1 item at index 1 // => ['foo', 10, 'qux']  arr.splice(2, 1, 'tmp');\t// Replaces 1 item at index 2 with 'tmp' // => ['foo', 10, 'tmp']  arr.splice(0, 1, 'x', 'y');\t// Inserts 'x' and 'y' replacing 1 item at index 0 // => ['x', 'y', 10, 'tmp']\nlet colors = ['red', 'blue', 'green'];  let index_element_to_be_delete = colors.indexOf('green');  colors.splice(index_element_to_be_delete);   //Colors now: ['red', 'blue']\n/\"removes any number of consecutive elements from anywhere in an array.\"/ let array = ['today', 'was', 'not', 'so', 'great'];  array.splice(2, 2); // remove 2 elements beginning with the 3rd element // array now equals ['today', 'was', 'great']\nlet myFish = ['angel', 'clown', 'mandarin', 'sturgeon'] //insert new element into array at index 2 let removed = myFish.splice(2, 0, 'drum')  // myFish is [\"angel\", \"clown\", \"drum\", \"mandarin\", \"sturgeon\"]  // removed is [], no elements removed\nSplice and Slice both are Javascript Array functions. Splice vs Slice. The splice() method returns the removed item(s) in an array and slice() method returns the selected element(s) in an array, as a new array object. The splice() method changes the original array and slice() method doesn't change the original array.27-Jan-2018\n",
    "reg_date": "2021-10-12T12:07:19.000Z"
  },
  {
    "id": 3934,
    "keyword": null,
    "link": null,
    "title": " split by new line java",
    "description": "String lines[] = string.split(\"\\\\r?\\\\n\");\n",
    "reg_date": "2021-10-12T12:07:19.000Z"
  },
  {
    "id": 3935,
    "keyword": null,
    "link": null,
    "title": " split each character in a string (java)",
    "description": "String s=\"abcd\"; char[] a=s.toCharArray();\n class Test {          public static void main( String[] args) {              String[] result = \"Stack Me 123 Heppa1 oeu\".split(\"\\\\a\");                                                                                                  // output should be              // S              // t              // a              // c              // k              // M              // e              // H              // e              // ...              for ( int x=0; x<result.length; x++) {                  System.out.println(result[x] + \"\\n\");              }          }      } \n",
    "reg_date": "2021-10-12T12:07:19.000Z"
  },
  {
    "id": 3936,
    "keyword": null,
    "link": null,
    "title": " split every character in string into array java",
    "description": "String s=\"abcd\"; char[] a=s.toCharArray();\n",
    "reg_date": "2021-10-12T12:07:19.000Z"
  },
  {
    "id": 3937,
    "keyword": null,
    "link": null,
    "title": " split method in java",
    "description": "String string = \"004-034556\"; String[] parts = string.split(\"-\"); String part1 = parts[0]; // 004 String part2 = parts[1]; // 034556 \nString yourString = \"Hello/Test/World\"; String[] strings = yourString.split(\"/\" /*<- Regex */);   Output: strings = [Hello, Test, World]\npublic class SplitExample2 {      public static void main(String args[])      {          String str = \"My name is Chaitanya\";         //regular expression is a whitespace here          String[] arr = str.split(\" \");             for (String s : arr)              System.out.println(s);      }  }\nString textfile = \"ReadMe.txt\"; String filename = textfile.split(\".\")[0]; String extension = textfile.split(\".\")[1];\nString textfile = \"ReadMe.txt\"; String filename = textfile.split(\"\\\\.\")[0]; String extension = textfile.split(\"\\\\.\")[1];\n var str = \"How are you doing today?\";  var res = str.split(\" \", 3);  \n",
    "reg_date": "2021-10-12T12:07:19.000Z"
  },
  {
    "id": 3938,
    "keyword": null,
    "link": null,
    "title": " split on . in java",
    "description": "String string = \"004-034556\"; String[] parts = string.split(\"-\"); String part1 = parts[0]; // 004 String part2 = parts[1]; // 034556 \npublic class SplitExample2 {      public static void main(String args[])      {          String str = \"My name is Chaitanya\";         //regular expression is a whitespace here          String[] arr = str.split(\" \");             for (String s : arr)              System.out.println(s);      }  }\nString textfile = \"ReadMe.txt\"; String filename = textfile.split(\".\")[0]; String extension = textfile.split(\".\")[1];\nString textfile = \"ReadMe.txt\"; String filename = textfile.split(\"\\\\.\")[0]; String extension = textfile.split(\"\\\\.\")[1];\n",
    "reg_date": "2021-10-12T12:07:19.000Z"
  },
  {
    "id": 3939,
    "keyword": null,
    "link": null,
    "title": " split string",
    "description": "//split into array of strings. var str = \"Well, how, are , we , doing, today\"; var res = str.split(\",\");\nvar myString = 'no,u'; var MyArray = myString.split(',');//splits the text up in chunks \n// bad example https://stackoverflow.com/questions/6484670/how-do-i-split-a-string-into-an-array-of-characters/38901550#38901550  var arr = foo.split('');  console.log(arr); // [\"s\", \"o\", \"m\", \"e\", \"s\", \"t\", \"r\", \"i\", \"n\", \"g\"]\nvar str = \"12,15,16,78,59\"; var res = str.split(\",\"); console.log(res[0]); // result: 12 console.log(res[2]); // result: 16\nconst str = 'The quick brown fox jumps over the lazy dog.';  const words = str.split(' '); console.log(words[3]); // expected output: \"fox\"  const chars = str.split(''); console.log(chars[8]); // expected output: \"k\"  const strCopy = str.split(); console.log(strCopy); // expected output: Array [\"The quick brown fox jumps over the lazy dog.\"] \n     String[] result = \"this is a test\".split(\"\\\\s\");      for (int x=0; x<result.length; x++)          System.out.println(result[x]);  \n",
    "reg_date": "2021-10-12T12:07:19.000Z"
  },
  {
    "id": 3940,
    "keyword": null,
    "link": null,
    "title": " split string 2 characters java",
    "description": "        String str= \"abcdef\";          String[] array=str.split(\"(?<=\\\\G.{2})\");          System.out.println(java.util.Arrays.toString(array));     \n",
    "reg_date": "2021-10-12T12:07:19.000Z"
  },
  {
    "id": 3941,
    "keyword": null,
    "link": null,
    "title": " split string into array java",
    "description": "String string = \"004-034556\"; String[] parts = string.split(\"-\"); String part1 = parts[0]; // 004 String part2 = parts[1]; // 034556 \nString yourString = \"Hello/Test/World\"; String[] strings = yourString.split(\"/\" /*<- Regex */);   Output: strings = [Hello, Test, World]\nString s=\"abcd\"; char[] a=s.toCharArray();\npublic class SplitExample2 {      public static void main(String args[])      {          String str = \"My name is Chaitanya\";         //regular expression is a whitespace here          String[] arr = str.split(\" \");             for (String s : arr)              System.out.println(s);      }  }\nString[] array = values.split(\"\\\\|\", -1);\nString s =\"123456789abcdefgh\"; String sub = s.substring(0, 10); String remainder = s.substring(10);\n",
    "reg_date": "2021-10-12T12:07:19.000Z"
  },
  {
    "id": 3942,
    "keyword": null,
    "link": null,
    "title": " split string into int array",
    "description": "String[] strArray = input.split(\",\"); int[] intArray = new int[strArray.length]; for(int i = 0; i < strArray.length; i++) {     intArray[i] = Integer.parseInt(strArray[i]); }\n",
    "reg_date": "2021-10-12T12:07:20.000Z"
  },
  {
    "id": 3943,
    "keyword": null,
    "link": null,
    "title": " split with multiple condition in java",
    "description": "String text = \"s: saturday, sunday, solar, selfie\"; String[] words = text.split(\"[:,] \");\n",
    "reg_date": "2021-10-12T12:07:20.000Z"
  },
  {
    "id": 3944,
    "keyword": null,
    "link": null,
    "title": " spring-boot actuator not working",
    "description": "  .   ____          _            __ _ _  /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\ ( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\  \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )   '  |____| .__|_| |_|_| |_\\__, | / / / /  =========|_|==============|___/=/_/_/_/  :: Spring Boot ::        (v1.0.2.RELEASE)\n",
    "reg_date": "2021-10-12T12:07:20.000Z"
  },
  {
    "id": 3945,
    "keyword": null,
    "link": null,
    "title": " spring @restcontroller",
    "description": "package com.example.restservice;  import java.util.concurrent.atomic.AtomicLong;  import org.springframework.web.bind.annotation.GetMapping; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController;  @RestController public class GreetingController {  \tprivate static final String template = \"Hello, %s!\"; \tprivate final AtomicLong counter = new AtomicLong();  \t@GetMapping(\"/greeting\") \tpublic Greeting greeting(@RequestParam(value = \"name\", defaultValue = \"World\") String name) { \t\treturn new Greeting(counter.incrementAndGet(), String.format(template, name)); \t} }Copy\n",
    "reg_date": "2021-10-12T12:07:20.000Z"
  },
  {
    "id": 3946,
    "keyword": null,
    "link": null,
    "title": " spring Caused by: java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 30001ms",
    "description": "//Your database is not obtaining connection  //within (30000 milliseconds that is default connectionTimeout property)  //because of network latency or some of the queries which are taking too  //long to execute(more than 30000 milliseconds).  //Please try to increase value of property connectionTimeout.  //YML configuration example:  spring:   datasource:     hikari:       minimumIdle: 2       maximumPoolSize: 20  //increase if you guess that you will have more than 20       idleTimeout: 120000       connectionTimeout: 300000       leakDetectionThreshold: 300000 //Java Config example:  HikariConfig config = new HikariConfig();         config.setMaximumPoolSize(20);         config.setConnectionTimeout(300000);         config.setConnectionTimeout(120000);         config.setLeakDetectionThreshold(300000);\n",
    "reg_date": "2021-10-12T12:07:20.000Z"
  },
  {
    "id": 3947,
    "keyword": null,
    "link": null,
    "title": " spring annotations xml configuration",
    "description": "<?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns=\"http://www.springframework.org/schema/beans\" \txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \txmlns:context=\"http://www.springframework.org/schema/context\" \txsi:schemaLocation=\"http://www.springframework.org/schema/beans         https://www.springframework.org/schema/beans/spring-beans.xsd         http://www.springframework.org/schema/context    https://www.springframework.org/schema/context/spring-context.xsd\">  \t<context:annotation-config /> \t<!-- bean definitions go here -->  </beans>\n",
    "reg_date": "2021-10-12T12:07:20.000Z"
  },
  {
    "id": 3948,
    "keyword": null,
    "link": null,
    "title": " spring application properties mysql jpa",
    "description": "spring.datasource.url=jdbc:mysql://localhost:yourDatabase?serverTimezone=UTC //set username and password as environment variables under application configuration so that the real ones won't be pushed to github, only their aliases: USERNAME and PASSWORD in this case.  spring.datasource.username=${USERNAME} // instead of ${USERNAME} you may use a generic one as well, like 'root' but then it will be pushed to github with the app so anyone can see you username and password. spring.datasource.password=${PASSWORD} spring.jpa.hibernate.ddl-auto=create-drop //running after the first time (when the tables are created in the database) or later when you want the data remain for later tests you have to change the key word 'create-drop' to 'update' so that the data remains in place. Oops! the database itself without the tables needs to be created manually first. spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect spring.logging.level.org.hibernate.SQL=debug spring.jpa.show-sql=true\n",
    "reg_date": "2021-10-12T12:07:20.000Z"
  },
  {
    "id": 3949,
    "keyword": null,
    "link": null,
    "title": " spring bean xml configuration",
    "description": "<?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns=\"http://www.springframework.org/schema/beans\"     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"     xsi:schemaLocation=\"         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\">      <!-- bean definitions here -->  </beans>\n",
    "reg_date": "2021-10-12T12:07:20.000Z"
  },
  {
    "id": 3950,
    "keyword": null,
    "link": null,
    "title": " spring boot base url",
    "description": "server.servlet.context-path=/api \nserver.servlet.context-path=/api\n",
    "reg_date": "2021-10-12T12:07:20.000Z"
  },
  {
    "id": 3951,
    "keyword": null,
    "link": null,
    "title": " spring boot devtools",
    "description": "<dependencies>     <dependency>         <groupId>org.springframework.boot</groupId>         <artifactId>spring-boot-devtools</artifactId>         <optional>true</optional>     </dependency> </dependencies>\n",
    "reg_date": "2021-10-12T12:07:20.000Z"
  },
  {
    "id": 3952,
    "keyword": null,
    "link": null,
    "title": " spring boot docker",
    "description": "FROM java:8-jdk-alpine  COPY ./target/demo-docker-0.0.1-SNAPSHOT.jar /usr/app/  WORKDIR /usr/app  RUN sh -c 'touch demo-docker-0.0.1-SNAPSHOT.jar'  ENTRYPOINT [\"java\",\"-jar\",\"demo-docker-0.0.1-SNAPSHOT.jar\"] \n",
    "reg_date": "2021-10-12T12:07:21.000Z"
  },
  {
    "id": 3953,
    "keyword": null,
    "link": null,
    "title": " spring boot example with swagger",
    "description": "@Override public void addResourceHandlers(ResourceHandlerRegistry registry) {     registry.addResourceHandler(\"swagger-ui.html\")       .addResourceLocations(\"classpath:/META-INF/resources/\");      registry.addResourceHandler(\"/webjars/**\")       .addResourceLocations(\"classpath:/META-INF/resources/webjars/\"); }\n<!-- Spring Fox Dependencies --> <dependency> \t<groupId>io.springfox</groupId> \t<artifactId>springfox-swagger2</artifactId> \t<version>2.9.2</version> </dependency> <dependency> \t<groupId>io.springfox</groupId> \t<artifactId>springfox-swagger-ui</artifactId> \t<version>2.9.2</version> </dependency>\n",
    "reg_date": "2021-10-12T12:07:21.000Z"
  },
  {
    "id": 3954,
    "keyword": null,
    "link": null,
    "title": " spring boot get bean",
    "description": "@Autowired private ApplicationContext appContext;  appContext.getBean(...)\n",
    "reg_date": "2021-10-12T12:07:21.000Z"
  },
  {
    "id": 3955,
    "keyword": null,
    "link": null,
    "title": " spring boot hibernate log sql",
    "description": "logging.level.org.hibernate.SQL=DEBUG logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE\n",
    "reg_date": "2021-10-12T12:07:21.000Z"
  },
  {
    "id": 3956,
    "keyword": null,
    "link": null,
    "title": " spring boot intellij auto reload",
    "description": "<!-- auto build & deploy, add to maven-->     <dependency> \t\t<groupId>org.springframework.boot</groupId> \t\t<artifactId>spring-boot-devtools</artifactId> \t\t<optional>true</optional> \t</dependency>  // Intellij, checkbox File -> Settings &ndash;> Build, Execution, Deployment &ndash;>          Compiler &ndash;> Build project automatically\n",
    "reg_date": "2021-10-12T12:07:21.000Z"
  },
  {
    "id": 3957,
    "keyword": null,
    "link": null,
    "title": " spring boot jpa in clause",
    "description": "@Query( \"select o from MyObject o where inventoryId in :ids\" ) List<MyObject> findByInventoryIds(@Param(\"ids\") List<Long> inventoryIdList);\n",
    "reg_date": "2021-10-12T12:07:21.000Z"
  },
  {
    "id": 3958,
    "keyword": null,
    "link": null,
    "title": " spring boot maven run with profile",
    "description": "mvn spring-boot:run -Drun.profiles=dev\n",
    "reg_date": "2021-10-12T12:07:21.000Z"
  },
  {
    "id": 3959,
    "keyword": null,
    "link": null,
    "title": " spring boot mongodb update subdocument",
    "description": "final Query query = new Query(new Criteria().andOperator(         Criteria.where(\"_id\").is(\"id\"),         Criteria.where(\"listA\").elemMatch(Criteria.where(\"_id\").is(\"id\")) )); final Update update = new Update().addToSet(\"listA.$.listB\", stuff).set(\"listA.$.thing\", \"thing\"); final WriteResult wr = mongoOperations.updateFirst(query, update, \"collectionName\");\n",
    "reg_date": "2021-10-12T12:07:21.000Z"
  },
  {
    "id": 3960,
    "keyword": null,
    "link": null,
    "title": " spring boot param object",
    "description": "@RequestMapping(\"/{someID}\") public @ResponseBody int getAttr(@PathVariable(value=\"someID\") String id,                                   @RequestParam String someAttr) { } \n@RequestMapping(\"/{someID}\") public @ResponseBody int getAttr(@PathVariable(value=\"someID\") String id,                                   @RequestParam String someAttr) { }\n",
    "reg_date": "2021-10-12T12:07:21.000Z"
  },
  {
    "id": 3961,
    "keyword": null,
    "link": null,
    "title": " spring boot postgres",
    "description": "spring.main.banner-mode=off logging.level.org.springframework=ERROR  spring.jpa.hibernate.ddl-auto=none  spring.datasource.initialization-mode=always spring.datasource.platform=postgres spring.datasource.url=jdbc:postgresql://localhost:5432/testdb spring.datasource.username=postgres spring.datasource.password=s$cret  spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true \n<dependency>     <groupId>org.postgresql</groupId>     <artifactId>postgresql</artifactId>     <version>42.2.18</version> </dependency>\n",
    "reg_date": "2021-10-12T12:07:21.000Z"
  },
  {
    "id": 3962,
    "keyword": null,
    "link": null,
    "title": " spring boot procfile run profile",
    "description": "web: java -Dspring.profiles.active=prod -Dserver.port=$PORT $JAVA_OPTS -jar target/*.jar\n",
    "reg_date": "2021-10-12T12:07:21.000Z"
  },
  {
    "id": 3963,
    "keyword": null,
    "link": null,
    "title": " spring boot resource optional request param",
    "description": "public String processForm(@RequestParam(defaultValue=\"Guest\") String name,         @RequestParam(required = false) String adult) { \n",
    "reg_date": "2021-10-12T12:07:22.000Z"
  },
  {
    "id": 3964,
    "keyword": null,
    "link": null,
    "title": " spring boot save file to static folder",
    "description": "String fileLocation = new File(\"src\\\\main\\\\resources\\\\static\\\\uploads\").getAbsolutePath() + \"\\\\\" + fileName;  \t\tFileOutputStream output = new FileOutputStream(fileLocation);  \t\toutput.write(imagem.getBytes());  \t\toutput.close();\n",
    "reg_date": "2021-10-12T12:07:22.000Z"
  },
  {
    "id": 3965,
    "keyword": null,
    "link": null,
    "title": " spring boot show sql",
    "description": "logging.level.org.hibernate.SQL=DEBUG logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE\n",
    "reg_date": "2021-10-12T12:07:22.000Z"
  },
  {
    "id": 3966,
    "keyword": null,
    "link": null,
    "title": " spring boot unauthorized",
    "description": "import org.springframework.context.annotation.Configuration; import org.springframework.security.config.annotation.web.builders.HttpSecurity; import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity; import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;  @EnableWebSecurity @Configuration public class WebSecurityConfig extends WebSecurityConfigurerAdapter {      @Override     protected void configure(HttpSecurity http) throws Exception {         http.csrf().disable();     }  } \n",
    "reg_date": "2021-10-12T12:07:22.000Z"
  },
  {
    "id": 3967,
    "keyword": null,
    "link": null,
    "title": " spring cors",
    "description": "@Override \tpublic void configure(HttpSecurity http) throws Exception { \t\thttp.cors().configurationSource(request -> new CorsConfiguration().applyPermitDefaultValues())  \t\t// ... \t}   \t@Bean \tpublic WebMvcConfigurer corsConfigurer() { \t\treturn new WebMvcConfigurer() { \t\t\t@Override \t\t\tpublic void addCorsMappings(CorsRegistry registry) { \t\t\t\tregistry.addMapping(\"/**\") \t\t\t\t.allowedOrigins(\"*\") \t\t\t\t.allowedMethods(\"GET\", \"PUT\", \"POST\", \"PATCH\", \"DELETE\", \"OPTIONS\"); \t\t\t} \t\t}; \t}\n@CrossOrigin \n\tpublic WebMvcConfigurer corsConfigurer() { \t\treturn new WebMvcConfigurer() { \t\t\t@Override \t\t\tpublic void addCorsMappings(CorsRegistry registry) { \t\t\t\tregistry.addMapping(\"/greeting-javaconfig\").allowedOrigins(\"http://localhost:9000\"); \t\t\t} \t\t}; \t}Copy\n",
    "reg_date": "2021-10-12T12:07:22.000Z"
  },
  {
    "id": 3968,
    "keyword": null,
    "link": null,
    "title": " spring custom auth frugalis",
    "description": "package com.frugalis;   import java.util.ArrayList; import java.util.List;   import org.springframework.security.authentication.AuthenticationProvider; import org.springframework.security.authentication.UsernamePasswordAuthenticationToken; import org.springframework.security.core.Authentication; import org.springframework.security.core.AuthenticationException; import org.springframework.security.core.GrantedAuthority; import org.springframework.security.core.authority.SimpleGrantedAuthority; import org.springframework.security.core.userdetails.UserDetails; import org.springframework.security.core.userdetails.User; import org.springframework.stereotype.Component;   @Component public class CustomAuthenticationProvider implements AuthenticationProvider {   \tboolean shouldAuthenticateAgainstThirdPartySystem = true;   \t@Override \tpublic Authentication authenticate(Authentication authentication) throws AuthenticationException { \t\tString name = authentication.getName(); \t\tString password = authentication.getCredentials().toString();   \t\tif (name.equals(\"admin\") && password.equals(\"password\")) { \t\t\tfinal List<GrantedAuthority> grantedAuths = new ArrayList<>(); \t\t\tgrantedAuths.add(new SimpleGrantedAuthority(\"ROLE_USER\")); \t\t\tfinal UserDetails principal = new User(name, password, grantedAuths); \t\t\tfinal Authentication auth = new UsernamePasswordAuthenticationToken(principal, password, grantedAuths); \t\t\treturn auth; \t\t} else { \t\t\treturn null; \t\t}   \t}   \t@Override \tpublic boolean supports(Class<?> authentication) {   \t\treturn authentication.equals(UsernamePasswordAuthenticationToken.class); \t}   }   \n",
    "reg_date": "2021-10-12T12:07:22.000Z"
  },
  {
    "id": 3969,
    "keyword": null,
    "link": null,
    "title": " spring db properties",
    "description": "spring:     profiles: local     datasource:         url: jdbc:postgresql://localhost:5432/postgres         username: postgres         password: root\n",
    "reg_date": "2021-10-12T12:07:22.000Z"
  },
  {
    "id": 3970,
    "keyword": null,
    "link": null,
    "title": " spring difference between save and saveandflush",
    "description": "Save may or may not write your changes to the DB straight away.  When we call saveAndFlush system are enforcing the synchronization of your model state with the DB.  ...  It doesn't flush data directly to a database until and unless we explicitly call flush and commit method.  It's flush directly flush data to a database.\n",
    "reg_date": "2021-10-12T12:07:22.000Z"
  },
  {
    "id": 3971,
    "keyword": null,
    "link": null,
    "title": " spring document application context example",
    "description": "public class SpringBean {   @Autowired   private ApplicationContext appContext; }\n<?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns=\"http://www.springframework.org/schema/beans\"        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"        xsi:schemaLocation=\"http://www.springframework.org/schema/beans            http://www.springframework.org/schema/beans/spring-beans.xsd\">    <bean id=\"...\" class=\"...\">     <!-- collaborators and configuration for this bean go here -->   </bean>    <bean id=\"...\" class=\"...\">     <!-- collaborators and configuration for this bean go here -->   </bean>    <!-- more bean definitions go here -->  </beans>\n",
    "reg_date": "2021-10-12T12:07:22.000Z"
  },
  {
    "id": 3972,
    "keyword": null,
    "link": null,
    "title": " spring environment get active profiles",
    "description": "@ActiveProfiles(\"dev\")\n",
    "reg_date": "2021-10-12T12:07:22.000Z"
  },
  {
    "id": 3973,
    "keyword": null,
    "link": null,
    "title": " spring filter exception handling",
    "description": "public class ExceptionHandlerFilter extends OncePerRequestFilter {      @Override     public void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain) throws ServletException, IOException {         try {             filterChain.doFilter(request, response);         } catch (RuntimeException e) {              // custom error response class used across my project             ErrorResponse errorResponse = new ErrorResponse(e);              response.setStatus(HttpStatus.INTERNAL_SERVER_ERROR.value());             response.getWriter().write(convertObjectToJson(errorResponse));     } }      public String convertObjectToJson(Object object) throws JsonProcessingException {         if (object == null) {             return null;         }         ObjectMapper mapper = new ObjectMapper();         return mapper.writeValueAsString(object);     } }\n",
    "reg_date": "2021-10-12T12:07:23.000Z"
  },
  {
    "id": 3974,
    "keyword": null,
    "link": null,
    "title": " spring h2 database dependency",
    "description": "<dependency>     <groupId>org.springframework.boot</groupId>     <artifactId>spring-boot-starter-data-jpa</artifactId>     <version>2.1.4.RELEASE</version> </dependency> <dependency>     <groupId>com.h2database</groupId>     <artifactId>h2</artifactId>     <scope>runtime</scope>     <version>1.4.199</version> </dependency> \n",
    "reg_date": "2021-10-12T12:07:23.000Z"
  },
  {
    "id": 3975,
    "keyword": null,
    "link": null,
    "title": " spring mvc get all request parameters",
    "description": "@RequestMapping(value = {\"/search/\", \"/search\"}, method = RequestMethod.GET) public String search(@RequestParam Map<String,String> allRequestParams) {    return \"viewName\"; }\n",
    "reg_date": "2021-10-12T12:07:23.000Z"
  },
  {
    "id": 3976,
    "keyword": null,
    "link": null,
    "title": " spring port",
    "description": "server.port=8081\nserver.port=8081 \n",
    "reg_date": "2021-10-12T12:07:23.000Z"
  },
  {
    "id": 3977,
    "keyword": null,
    "link": null,
    "title": " spring security after login redirect",
    "description": "\t@Configuration \t@EnableWebSecurity \tpublic class SecSecurityConfig extends WebSecurityConfigurerAdapter { \t  \t    @Override \t    protected void configure(final HttpSecurity http) throws Exception { \t        http \t            .authorizeRequests() \t            // ... endpoints \t            .formLogin() \t                .loginPage(\"/login.html\") \t                .loginProcessingUrl(\"/login\") \t                .defaultSuccessUrl(\"/homepage.html\", true) \t            // ... other configuration        \t    } \t}\n",
    "reg_date": "2021-10-12T12:07:23.000Z"
  },
  {
    "id": 3978,
    "keyword": null,
    "link": null,
    "title": " spring security antmatchers id",
    "description": "antMatchers(\"/account/{\\\\d+}/download\").access(\"hasAnyAuthority('ROLE_TOKENSAVED')\")\n",
    "reg_date": "2021-10-12T12:07:23.000Z"
  },
  {
    "id": 3979,
    "keyword": null,
    "link": null,
    "title": " spring security enable global cors",
    "description": "@Override \tpublic void configure(HttpSecurity http) throws Exception { \t\thttp.cors().configurationSource(request -> new CorsConfiguration().applyPermitDefaultValues())  \t\t// ... \t}   \t@Bean \tpublic WebMvcConfigurer corsConfigurer() { \t\treturn new WebMvcConfigurer() { \t\t\t@Override \t\t\tpublic void addCorsMappings(CorsRegistry registry) { \t\t\t\tregistry.addMapping(\"/**\") \t\t\t\t.allowedOrigins(\"*\") \t\t\t\t.allowedMethods(\"GET\", \"PUT\", \"POST\", \"PATCH\", \"DELETE\", \"OPTIONS\"); \t\t\t} \t\t}; \t}\n",
    "reg_date": "2021-10-12T12:07:23.000Z"
  },
  {
    "id": 3980,
    "keyword": null,
    "link": null,
    "title": " spring serve robots.txt",
    "description": "    @Override     protected void configure(HttpSecurity http) throws Exception {         http.authorizeRequests()             .antMatchers(\"/robots.txt\").permitAll()     } \n",
    "reg_date": "2021-10-12T12:07:23.000Z"
  },
  {
    "id": 3981,
    "keyword": null,
    "link": null,
    "title": " spring url parameter",
    "description": "@RequestMapping(value = {\"/search/\", \"/search\"}, method = RequestMethod.GET) public String search(@RequestParam Map<String,String> allRequestParams) {    return \"viewName\"; }\n@RequestMapping(\"/{someID}\") public @ResponseBody int getAttr(@PathVariable(value=\"someID\") String id,                                   @RequestParam String someAttr) { } \n",
    "reg_date": "2021-10-12T12:07:23.000Z"
  },
  {
    "id": 3982,
    "keyword": null,
    "link": null,
    "title": " spring valid request body custom message",
    "description": "@ControllerAdvice @RestController public class CustomizedResponseEntityExceptionHandler extends ResponseEntityExceptionHandler {          @Override         protected ResponseEntity<Object> handleMethodArgumentNotValid(                 MethodArgumentNotValidException ex, HttpHeaders headers, HttpStatus status, WebRequest request) {             // ex.getBindingResult(): extract the bind result for default message.                String errorResult = ex.getBindingResult().toString();              CustomizedExceptionHandlerResponse exceptionResponse = new CustomizedExceptionHandlerResponse(                     errorResult, new Date(), request.getDescription(false));              return new ResponseEntity<>(exceptionResponse, HttpStatus.BAD_REQUEST);         }   }  class CustomizedExceptionHandlerResponse {     private String message;    private String status;    private Date timestamp;     // constuctor, setters, getters... }\n",
    "reg_date": "2021-10-12T12:07:23.000Z"
  },
  {
    "id": 3983,
    "keyword": null,
    "link": null,
    "title": " spring xml file configuration",
    "description": "<?xml version = \"1.0\" encoding = \"UTF-8\"?>  <beans xmlns = \"http://www.springframework.org/schema/beans\"    xmlns:xsi = \"http://www.w3.org/2001/XMLSchema-instance\"    xsi:schemaLocation = \"http://www.springframework.org/schema/beans    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd\">         </beans>\n",
    "reg_date": "2021-10-12T12:07:23.000Z"
  },
  {
    "id": 3984,
    "keyword": null,
    "link": null,
    "title": " springboot starter jpa",
    "description": "<dependency>   <groupId>org.springframework.boot</groupId>   <artifactId>spring-boot-starter-data-jpa</artifactId>   <version>2.4.1</version> </dependency>\n",
    "reg_date": "2021-10-12T12:07:24.000Z"
  },
  {
    "id": 3985,
    "keyword": null,
    "link": null,
    "title": " sprintf",
    "description": "char myConcatenation[80];     char myCharArray[16]=\"A variable name\";     int myInt=5;     sprintf(myConcatenation,\"%s = %i\",myCharArray,myInt);     Serial.println(myConcatenation);\n There are already some comments on using sprintf to force leading leading zeros but the examples only include integers. I needed leading zeros on floating point numbers and was surprised that it didn't work as expected.  Example: <?php sprintf('\u0002d', 1); ?>  This will result in 01. However, trying the same for a float with precision doesn't work:  <?php sprintf('\u0002.2f', 1); ?>  Yields 1.00.   This threw me a little off. To get the desired result, one needs to add the precision (2) and the length of the decimal seperator \".\" (1). So the correct pattern would be  <?php sprintf('\u0005.2f', 1); ?>  Output: 01.00  Please see http://stackoverflow.com/a/28739819/413531 for a more detailed explanation. \n<?php $num = 5; $location = 'tree';  $format = 'There are %d monkeys in the %s'; echo sprintf($format, $num, $location);\nint sprintf(char *str, const char *format, ...)  Parameters:  str &minus; This is the pointer to an array of char elements where the resulting C string is stored.  format &minus; This is the String that contains the text to be written to buffer. It can optionally contain embedded format tags that are replaced by the values specified in subsequent additional arguments and formatted as requested. Format tags prototype: %[flags][width][.precision][length]specifier  EXAMPLE:  #include <stdio.h> #include <math.h>  int main () {    char str[80];     sprintf(str, \"Value of Pi = %f\", M_PI);    puts(str);        return(0); }  OUTPUT:  Value of Pi = 3.141593\n",
    "reg_date": "2021-10-12T12:07:24.000Z"
  },
  {
    "id": 3986,
    "keyword": null,
    "link": null,
    "title": " square root of a number in java",
    "description": "Scanner in=new Scanner(System.in); int num=in.nextInt(); Systen.out.println(Math.pow(num,0.5));\nScanner in=new Scanner(System.in); int num=in.nextInt(); System.out.println(Math.sqrt(num)); // the sqrt function gives a value in 'double' data type.\n",
    "reg_date": "2021-10-12T12:07:24.000Z"
  },
  {
    "id": 3987,
    "keyword": null,
    "link": null,
    "title": " square root of a number in java without sqrt",
    "description": "Scanner in=new Scanner(System.in); int num=in.nextInt(); Systen.out.println(Math.pow(num,0.5));\n",
    "reg_date": "2021-10-12T12:07:24.000Z"
  },
  {
    "id": 3988,
    "keyword": null,
    "link": null,
    "title": " sreekanth kasani",
    "description": "sreekanthkasani.github.io \n",
    "reg_date": "2021-10-12T12:07:24.000Z"
  },
  {
    "id": 3989,
    "keyword": null,
    "link": null,
    "title": " stack class in java",
    "description": "// construct with non-primative elements only! Stack<String> stack = new Stack<String>();  // to add a value to the top of the stack: stack.push(\"Hello\");  // to return and remove a value from the top: String top = stack.pop();  // to return a value without removing it: String peek = stack.peek();\nimport java.util.Stack<E>; Stack<Integer> myStack = new Stack<Integer>(); myStack.push(1); myStack.pop(); myStack.peek(); myStack.empty(); // True if stack is empty\nimport java.util.Stack; class Main {     public static void main(String[] args) {         Stack<String> animals= new Stack<>();         // Add elements to Stack         animals.push(\"Dog\");         animals.push(\"Horse\");         // Remove element from Stack       \tanimals.pop();       \t// Access element from top of Stack       \tanimals.peek();     } }\n// Java code for stack implementation   import java.io.*;  import java.util.*;   class Test  {  \t// Pushing element on the top of the stack  \tstatic void stack_push(Stack<Integer> stack)  \t{  \t\tfor(int i = 0; i < 5; i++)  \t\t{  \t\t\tstack.push(i);  \t\t}  \t}  \t \t// Popping element from the top of the stack  \tstatic void stack_pop(Stack<Integer> stack)  \t{  \t\tSystem.out.println(\"Pop Operation:\");   \t\tfor(int i = 0; i < 5; i++)  \t\t{  \t\t\tInteger y = (Integer) stack.pop();  \t\t\tSystem.out.println(y);  \t\t}  \t}   \t// Displaying element on the top of the stack  \tstatic void stack_peek(Stack<Integer> stack)  \t{  \t\tInteger element = (Integer) stack.peek();  \t\tSystem.out.println(\"Element on stack top: \" + element);  \t}  \t \t// Searching element in the stack  \tstatic void stack_search(Stack<Integer> stack, int element)  \t{  \t\tInteger pos = (Integer) stack.search(element);   \t\tif(pos == -1)  \t\t\tSystem.out.println(\"Element not found\");  \t\telse \t\t\tSystem.out.println(\"Element is found at position: \" + pos);  \t}    \tpublic static void main (String[] args)  \t{  \t\tStack<Integer> stack = new Stack<Integer>();   \t\tstack_push(stack);  \t\tstack_pop(stack);  \t\tstack_push(stack);  \t\tstack_peek(stack);  \t\tstack_search(stack, 2);  \t\tstack_search(stack, 6);  \t}  }  \n",
    "reg_date": "2021-10-12T12:07:24.000Z"
  },
  {
    "id": 3990,
    "keyword": null,
    "link": null,
    "title": " stack in java",
    "description": "// construct with non-primative elements only! Stack<String> stack = new Stack<String>();  // to add a value to the top of the stack: stack.push(\"Hello\");  // to return and remove a value from the top: String top = stack.pop();  // to return a value without removing it: String peek = stack.peek();\nimport java.util.Stack<E>; Stack<Integer> myStack = new Stack<Integer>(); myStack.push(1); myStack.pop(); myStack.peek(); myStack.empty(); // True if stack is empty\nimport java.util.Stack; class Main {     public static void main(String[] args) {         Stack<String> animals= new Stack<>();         // Add elements to Stack         animals.push(\"Dog\");         animals.push(\"Horse\");         // Remove element from Stack       \tanimals.pop();       \t// Access element from top of Stack       \tanimals.peek();     } }\n// Java code for stack implementation   import java.io.*;  import java.util.*;   class Test  {  \t// Pushing element on the top of the stack  \tstatic void stack_push(Stack<Integer> stack)  \t{  \t\tfor(int i = 0; i < 5; i++)  \t\t{  \t\t\tstack.push(i);  \t\t}  \t}  \t \t// Popping element from the top of the stack  \tstatic void stack_pop(Stack<Integer> stack)  \t{  \t\tSystem.out.println(\"Pop Operation:\");   \t\tfor(int i = 0; i < 5; i++)  \t\t{  \t\t\tInteger y = (Integer) stack.pop();  \t\t\tSystem.out.println(y);  \t\t}  \t}   \t// Displaying element on the top of the stack  \tstatic void stack_peek(Stack<Integer> stack)  \t{  \t\tInteger element = (Integer) stack.peek();  \t\tSystem.out.println(\"Element on stack top: \" + element);  \t}  \t \t// Searching element in the stack  \tstatic void stack_search(Stack<Integer> stack, int element)  \t{  \t\tInteger pos = (Integer) stack.search(element);   \t\tif(pos == -1)  \t\t\tSystem.out.println(\"Element not found\");  \t\telse \t\t\tSystem.out.println(\"Element is found at position: \" + pos);  \t}    \tpublic static void main (String[] args)  \t{  \t\tStack<Integer> stack = new Stack<Integer>();   \t\tstack_push(stack);  \t\tstack_pop(stack);  \t\tstack_push(stack);  \t\tstack_peek(stack);  \t\tstack_search(stack, 2);  \t\tstack_search(stack, 6);  \t}  }  \npackage com.tutorialspoint;  import java.util.*;  public class StackDemo {    public static void main(String args[]) {        // creating stack       Stack st = new Stack();        // populating stack       st.push(\"Java\");       st.push(\"Source\");       st.push(\"code\");        // removing top object       System.out.println(\"Removed object is: \"+st.pop());        // elements after remove       System.out.println(\"Elements after remove: \"+st);    }     }\ntypedef struct Nodo{    Elem val;    struct Nodo *next; } *Stack; Stack Empty(){return NULL;} bool IsEmpty(Stack a){return a==NULL;} Elem Top(Stack a){return a->val;}  Stack Pop(Stack l){return l->next;} Stack Push(Elem x,Stack res){     Stack nuevo=(Stack)malloc(sizeof(struct Nodo));     nuevo->val=x;     nuevo->next=res;     return nuevo; }\n",
    "reg_date": "2021-10-12T12:07:24.000Z"
  },
  {
    "id": 3991,
    "keyword": null,
    "link": null,
    "title": " start fragment from activity",
    "description": "FragmentManager manager = getFragmentManager(); FragmentTransaction transaction = manager.beginTransaction(); transaction.add(R.id.container,YOUR_FRAGMENT_NAME,YOUR_FRAGMENT_STRING_TAG); transaction.addToBackStack(null); transaction.commit(); \n// put the following code in onClickListner // public void onClickListner(View view){ Navigation.findNavController(view).navigate(R.id.action_fromFragment_toFragment); // action_fromFragment_toFragment is the id of transformatino, look in fragment map. // }\n",
    "reg_date": "2021-10-12T12:07:24.000Z"
  },
  {
    "id": 3992,
    "keyword": null,
    "link": null,
    "title": " statement delete sql java",
    "description": "public static void DeleteRow(String name) {     try {           Class.forName(\"com.mysql.jdbc.Driver\");         Connection connection = DriverManager.getConnection(url, username, password);         PreparedStatement st = connection.prepareStatement(\"DELETE FROM Table WHERE name = ?\");         st.setString(1,name);         st.executeUpdate();      } catch(Exception e) {         System.out.println(e);     } }\n",
    "reg_date": "2021-10-12T12:07:24.000Z"
  },
  {
    "id": 3993,
    "keyword": null,
    "link": null,
    "title": " static and final in java",
    "description": "The two really aren't similar.  \"STATIC\" fields are fields that do not  belong to any particular instance of a class. and there is only one copy of the variable in memory shared by all instances of the class. On the other hand \"FINAL\" The final keyword just means the value can't be changed. Without final, any object can  change the value of the variable\nThe two really aren't similar.  \"STATIC\" fields are fields that do not  belong to any particular instance of a class. and there is only one copy of the variable in memory shared by all instances of the class. On the other hand \"FINAL\" The final keyword just means the value can't be changed. Without final, any object can  change the value of the variable  \nNull\n",
    "reg_date": "2021-10-12T12:07:24.000Z"
  },
  {
    "id": 3994,
    "keyword": null,
    "link": null,
    "title": " static in java",
    "description": "//Java Program to get the cube of a given number using the static method   using static before a method or variable we can access it by not creating a  instance of it.in the program we directly used student.cube(5) class Calculate{     static int cube(int x){     return x*x*x;     }        public static void main(String args[]){     int result=Calculate.cube(5);     System.out.println(result);     }   }  \nStatic keyword is used a lot in java.   Static means, you can access those static variables without creating an object, just by using a class name. This means that only one instance of that static member is created which is shared across all instances of the class. Basically we use static keyword when all members share same instance.\nIn Java, static keyword is mainly used for memory management. It can be used with variables, methods, blocks and nested classes. It is a keyword which is used to share the same variable or method of a given class. Basically, static is used for a constant variable or a method that is same for every instance of a class\nThe static keyword in Java is used for memory management mainly. We can apply static keyword with variables, methods, blocks and nested classes. The static keyword belongs to the class    than an instance of the class.  The static can be:  Variable (also known as a class variable) Method (also known as a class method) Block Nested class\nstatic keyword is a non-access modifier. static keyword can be used with  class level variable, block, method and inner class or nested class.\nstatic keyword: belongs to the class, also can be called through the class static variable: declared outside any block with static keyword static: runs first, only runs one time static member: 1. static variables 2. static methods 3. static initializer block 4. static inner class(nested class) static methods: methods that we can call it through the class name.    belongs to the class Ex: Webdriver driver = WebdriverFactory.getDriver();  *********  Static methods only accepts class member(static) ************ *********   None static can ONLY be called through the object ***********  Static only accept static. Anything not static you cannot call directly. You can call Instance variable in Constructor. You cannot call instance variable in static you have to create object first. You can call non static (instance variable) in the instance block. You can call static in the instance block Static variable da last initialization will be final value.  \n",
    "reg_date": "2021-10-12T12:07:24.000Z"
  },
  {
    "id": 3995,
    "keyword": null,
    "link": null,
    "title": " static scanner java",
    "description": "import java.util.Scanner;  // import scanner   Scanner myScanner = new Scanner(System.in); // Make scanner obj  String inputString = myScanner.nextLine(); // Take whole line  boolean inputBoolean = myScanner.nextBoolean(); //Boolean input  long inputLong = myScanner.nextLong(); //Interger,long ... input\nimport java.util.Scanner;\t\t//Import Scanner in java  class classname{   public void methodname(){     Scanner s_name = new Scanner(System.in);\t//Scanner declaration     //Use Scanner object to take input     int val1    =  s_name.nextInt();\t\t\t//int     float val2  =  s_name.nextFloat();\t\t\t//float     double val3 =  s_name.nextDouble();\t\t\t//double     string name =  s_name.nextLine();\t\t\t//string     char ch     =  s_name.nextLine().charAt(0);\t//character   }}\nimport java.util.Scanner;//import Scanner  Scanner input=new Scanner(System.in);//Create the scanner Obj  float numF = input.nextFloat();//Returns float int num1 = input.nextInt(); //Returns int byte byte1 = input.nextByte();//Returns Byte long lg1 = input.nextLong();//Returns long boolean b1 = input.nextBoolean();//Returns bool double num2 = input.nextDouble();//Returns Double String nome = input.nextLine();//Returns String  //execution is pause until you give input  \n// import Scanner import java.util.Scanner;  // Initialize Scanner Scanner input = new Scanner(System.in);  // Test program with Scanner System.out.println(\"What is your name?\"); String name = input.nextLine();  System.out.println(\"Hello,\" + name + \" , it is nice to meet you!\");\n     Scanner sc = new Scanner(System.in);      int i = sc.nextInt();  \nimport java.util.Scanner;   class ComputerScienceHomework16 {   // making it static in other functions   static Scanner scanner = new Scanner(System.in);      public static void test(){     System.out.print(\"type a number: \");     int num = scanner.nextInt();     System.out.println(\"you typed the number \" + num);   }      public static void main(String[] args) {     test()        } }\n",
    "reg_date": "2021-10-12T12:07:25.000Z"
  },
  {
    "id": 3996,
    "keyword": null,
    "link": null,
    "title": " static variables java",
    "description": "Static keyword is used a lot in java.   Static means, you can access those static variables without creating an object, just by using a class name. This means that only one instance of that static member is created which is shared across all instances of the class. Basically we use static keyword when all members share same instance.\nstatic keyword is a non-access modifier. static keyword can be used with  class level variable, block, method and inner class or nested class.\nWe can declare a method as static by adding keyword &ldquo;static&rdquo; before method name. Let&rsquo;s see example on static method in java.  public class StaticMethodExample {    static void print()    {       System.out.println(\"in static method.\");    }    public static void main(String[] args)    {       StaticMethodExample.print();    } }\nclass JavaExample{    private static String str = \"BeginnersBook\";     //Static class    static class MyNestedClass{ \t//non-static method \tpublic void disp() {  \t   /* If you make the str variable of outer class \t    * non-static then you will get compilation error \t    * because: a nested static class cannot access non- \t    * static members of the outer class. \t    */ \t   System.out.println(str);  \t}     }    public static void main(String args[])    {        /* To create instance of nested class we didn't need the outer \t* class instance but for a regular nested class you would need  \t* to create an instance of outer class first         */ \tJavaExample.MyNestedClass obj = new JavaExample.MyNestedClass(); \tobj.disp();    } }\n",
    "reg_date": "2021-10-12T12:07:25.000Z"
  },
  {
    "id": 3997,
    "keyword": null,
    "link": null,
    "title": " static vs non static java",
    "description": "//You simply need to create an instance of the Object you created public Class Obj{ \tpublic void nonStaticMethod(){ \t//execute code \t} \tpublic static void main(string args[]){ \t\tObj obj = new Obj(); \t    obj.nonStaticMethod \t} }\n// Static vs Object Called // Static Methods don't require you to call a constructor  // Initialize statically public class MyClass {    private static int myInt;    static {       myInt = 1;   }    public static int getInt() {       return myInt;   } }  // Then call it System.out.println(MyClass.getInt());  // VS Constructor  public class MyClass {     private int myInt;      public MyClass() {     myInt = 1;   }      public int getInt() { \treturn this.myInt;   } } // Then call it MyClass myObj = new MyClass(); System.out.println(myObj.getInt());\n",
    "reg_date": "2021-10-12T12:07:25.000Z"
  },
  {
    "id": 3998,
    "keyword": null,
    "link": null,
    "title": " statusbar text color android",
    "description": "getWindow().setStatusBarColor(ContextCompat.getColor(BookReaderActivity.this, R.color.black)); View decorView = getWindow().getDecorView(); //set status background black  decorView.setSystemUiVisibility(decorView.getSystemUiVisibility() & ~View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR); //set status text  light\ngetWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR);//  set status text dark getWindow().setStatusBarColor(ContextCompat.getColor(BookReaderActivity.this,R.color.white));// set status background white\ngetWindow().getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR);//  set status text dark  getWindow().setStatusBarColor(ContextCompat.getColor(MainActivity.this,R.color.colorPrimaryDark));// set status background white\n",
    "reg_date": "2021-10-12T12:07:25.000Z"
  },
  {
    "id": 3999,
    "keyword": null,
    "link": null,
    "title": " storage permission android",
    "description": "<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" /> <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n",
    "reg_date": "2021-10-12T12:07:25.000Z"
  },
  {
    "id": 4000,
    "keyword": null,
    "link": null,
    "title": " str.substring last 2 java",
    "description": "String substring = str.length() > 2 ? str.substring(str.length() - 2) : str;\n",
    "reg_date": "2021-10-12T12:07:25.000Z"
  },
  {
    "id": 4001,
    "keyword": null,
    "link": null,
    "title": " stream java example",
    "description": "the Stream API is used to process collections of objects. A stream is a sequence of objects that supports various methods which can be pipelined to produce the desired result.   It is very similar to build().perform()    method in Actions class. It is chaining   some operations in an order.  The features of Java stream are: - A stream is not a data structure instead it takes input from the Collections,  Arrays or I/O channels. - Streams don&rsquo;t change the original data structure, they only provide the result as per the pipelined methods. - Each intermediate operation is lazily executed and returns a stream as a result, hence various intermediate operations can be pipelined. Terminal operations mark the end of the stream and return the result.  Different Operations On Streams:  map ==> The map method is used to return a stream consisting of the results of applying the given function to the elements of this stream. List number = Arrays.asList(2,3,4,5); List square = number.stream().map(x->x*x).collect(Collectors.toList());  filter ==> The filter method is used to select elements as per the Predicate passed as argument. List names = Arrays.asList(\"Reflection\",\"Collection\",\"Stream\"); List result = names.stream().filter(s->s.startsWith(\"S\")).collect(Collectors.toList());  sorted ==> The sorted method is used to sort the stream. List names = Arrays.asList(\"Reflection\",\"Collection\",\"Stream\"); List result = names.stream().sorted().collect(Collectors.toList());  ArrayList<String> list3 = new ArrayList(Arrays.asList(\"monkey\", \"donkey\",\"onion\")); List<String> list4 = list3.stream().filter(each->!\"onion\".equals(each)).collect(Collectors.toList()); System.out.println(list4);  static String reverse(String word){     return Arrays.stream(word.split(\"\")).reduce(\"\", (x,y) -> y+x ); }\npublic class StreamBuilders  {      public static void main(String[] args)      {          Stream<Integer> stream = Stream.of( new Integer[]{1,2,3,4,5,6,7,8,9} );          stream.forEach(p -> System.out.println(p));      } } \n",
    "reg_date": "2021-10-12T12:07:25.000Z"
  },
  {
    "id": 4002,
    "keyword": null,
    "link": null,
    "title": " stream to list",
    "description": "List<String> temp = toCheck.stream().map((a -> a.getFoo())).collect(Collectors.toList());\n.collect(Collectors.toList());\n",
    "reg_date": "2021-10-12T12:07:25.000Z"
  },
  {
    "id": 4003,
    "keyword": null,
    "link": null,
    "title": " strictfp java",
    "description": "strictfp is a modifier in the Java programming language that restricts floating-point calculations to ensure portability. The strictfp command was introduced into Java with the Java virtual machine version 1.2 and is available for use on all currently updated Java VMs.  strictfp class Test { } strictfp interface Test { } class A {    strictfp void Test() {    } }\n",
    "reg_date": "2021-10-12T12:07:25.000Z"
  },
  {
    "id": 4004,
    "keyword": null,
    "link": null,
    "title": " string.join java 8",
    "description": "public class main {       public static void main(String args[]) {         String[] wordsToJoin = new String[] {\"Hi\", \"there\", \"<3\"};      \t// first argument is the delimeter \t    String example1 = String.join(\", \", wordsToJoin);              \t// can also do this instead         String example2 = String.join(\"^ \",\"Hi\",\"there\",\"<3\");   \t         System.out.println(example1; // Hi, there, <3 \t    System.out.println(example2); // Hi^there^<3     } }\n",
    "reg_date": "2021-10-12T12:07:25.000Z"
  },
  {
    "id": 4005,
    "keyword": null,
    "link": null,
    "title": " string a int java",
    "description": "String number = \"1\" int num = Integer.parseInt (name); //num equals 1\nint sample2 = Integer.parseInt(\"47\");   // returns 47 int sample3 = Integer.parseInt(\"+4\");   // returns 4\n",
    "reg_date": "2021-10-12T12:07:26.000Z"
  },
  {
    "id": 4006,
    "keyword": null,
    "link": null,
    "title": " string array in java methods",
    "description": "String[] vowels = { \"a\", \"e\", \"i\", \"o\", \"u\" }; System.out.println(vowels); System.out.println(Arrays.toString(vowels)); \n",
    "reg_date": "2021-10-12T12:07:26.000Z"
  },
  {
    "id": 4007,
    "keyword": null,
    "link": null,
    "title": " string array to arraylist",
    "description": "String [] strings = new String [] {\"1\", \"2\" }; List<String> stringList = new ArrayList<String>(Arrays.asList(strings)); //new ArrayList is only needed if you absolutely need an ArrayList\nnew ArrayList<>(Arrays.asList(array));\nArrayList<String> al = new ArrayList<String>();       al.add(\"Hello\");       al.add(\"Wor\");       al.add(\"ld\");       StringBuffer sb = new StringBuffer();              for (String s : al) {          sb.append(s);          sb.append(\" \");       }       String str = sb.toString();       System.out.println(str);//\"Hello wor ld\" \nString [] strings = new String [] {\"1\", \"2\" }; List<String> stringList = new ArrayList<String>(Arrays.asList(strings)); //new ArrayList is only needed if you absolutely need an ArrayList \nnew ArrayList( Arrays.asList( new String[]{\"abc\", \"def\"} ) );\nimport java.util.ArrayList; import java.util.List; import java.util.Arrays; public class JavaExample {     public static void main(String args[]){ \tString num = \"22,33,44,55,66,77\"; \tString str[] = num.split(\",\"); \tList<String> al = new ArrayList<String>(); \tal = Arrays.asList(str); \tfor(String s: al){ \t   System.out.println(s); \t}    } }\n",
    "reg_date": "2021-10-12T12:07:26.000Z"
  },
  {
    "id": 4008,
    "keyword": null,
    "link": null,
    "title": " string array to arraylist android",
    "description": "String [] strings = new String [] {\"1\", \"2\" }; List<String> stringList = new ArrayList<String>(Arrays.asList(strings)); //new ArrayList is only needed if you absolutely need an ArrayList\nString [] strings = new String [] {\"1\", \"2\" }; List<String> stringList = new ArrayList<String>(Arrays.asList(strings)); //new ArrayList is only needed if you absolutely need an ArrayList \nnew ArrayList( Arrays.asList( new String[]{\"abc\", \"def\"} ) );\n",
    "reg_date": "2021-10-12T12:07:26.000Z"
  },
  {
    "id": 4009,
    "keyword": null,
    "link": null,
    "title": " string array to stream",
    "description": "// import java.util.Arrays; // import java.util.stream.Stream;  String[] array = {\"a\", \"b\", \"c\", \"d\", \"e\"};  //Arrays.stream Stream<String> stream1 = Arrays.stream(array); stream1.forEach(x -> System.out.println(x));  //Stream.of Stream<String> stream2 = Stream.of(array); stream2.forEach(x -> System.out.println(x)); \n",
    "reg_date": "2021-10-12T12:07:26.000Z"
  },
  {
    "id": 4010,
    "keyword": null,
    "link": null,
    "title": " string buffer in java",
    "description": "StringBuffer buffer = new StringBuffer(\"Harvard\");  // mutable we modify object         buffer.append(\" School\");  // append method we are calling from Buffer ** synchronized means slow          System.out.println(buffer); // Harvard School\n",
    "reg_date": "2021-10-12T12:07:26.000Z"
  },
  {
    "id": 4011,
    "keyword": null,
    "link": null,
    "title": " string builder in java",
    "description": "StringBuilder stringBuilder = new StringBuilder();  stringBuilder.append(\"string\");  System.out.println(\"String = \" + stringBuilder.toString());\nJava StringBuilder class is used to create   mutable (modifiable) string. The Java   StringBuilder class is same as StringBuffer   class except that it is non-synchronized.      StringBuilder()     creates an empty string Builder with the initial capacity of 16. StringBuilder(String str)     creates a string Builder with the specified string. StringBuilder(int length)     creates an empty string Builder with the specified capacity as length.    StringBuilder builder = new StringBuilder(\"Harvard\");  // mutable you modify object new keyword ile olusturuoyrsun StringBuilder         builder.append(\" School\");  // append method we are calling from Builder  //** it is not synchronized means fast         System.out.println(builder); // Harvard School\nStringBuilder objects are like String objects, except that they can be modified\nJava StringBuilder class is used to create   mutable (modifiable) string. The Java   StringBuilder class is same as StringBuffer   class except that it is non-synchronized.      StringBuilder()     creates an empty string Builder with the initial capacity of 16. StringBuilder(String str)     creates a string Builder with the specified string. StringBuilder(int length)     creates an empty string Builder with the specified capacity as length.    \nIt is mutable char sequence and it is not thread safe.\n",
    "reg_date": "2021-10-12T12:07:26.000Z"
  },
  {
    "id": 4012,
    "keyword": null,
    "link": null,
    "title": " string builder vs string buffer",
    "description": "String vs StringBuilder vs StringBuffer                  STRING          STRINGBUFFER       STRINGBUILDER  Storage         String Pool     Heap                Heap Modifiable      Immutable   \tMutable           \tMutable Thread Safe     YES             YES                 NO Performance     FAST            VERY SLOW           FAST\nThe main similarity between String and StringBuffer class is that both are thread safe.  The main difference is that String is immutable; StringBuffer is mutable.  \nThe StringBuffer and StringBuilder  class both produces mutable string objects.  The main difference between   them is that StringBuffer is thread safe;  StringBuilder is not thread safe.\nString is immutable and thread safe String builder mutable and not thread safe\nString vs StringBuilder vs StringBuffer: String: Immutable version char sequences StringBuilder: mutable version char sequences, not synchronized StringBuffer: mutable version char sequences, synchronized , thread-safe, slow String str = new String(\"a\") StringBuilder s2 = new StringBuilder(\"B\") // MUTABLE StringBuffer s2 = new StringBuffer(\"c\") // Synchronized \nThey both mutable, they are exactly same but String buffer is thread safe so it runs slower than String builder. We are using StringBuffer when we are doing parallel testing since it is a thread safe.\n",
    "reg_date": "2021-10-12T12:07:26.000Z"
  },
  {
    "id": 4013,
    "keyword": null,
    "link": null,
    "title": " string cannot be resolved to a type eclipse",
    "description": "you miss the JRE Runtime Library in your project\n",
    "reg_date": "2021-10-12T12:07:26.000Z"
  },
  {
    "id": 4014,
    "keyword": null,
    "link": null,
    "title": " string char at java",
    "description": "String words = \"Hi There\"; //creating a string var named 'words' char index = words.charAt(0); /* setting a variable 'index' to letter '0' of variable 'words'. In this case, index = 'H'.*/ System.out.println(index); //print var 'index' which will print \"H\"\nString str = \"Grepper\"; char ch = str.charAt(0); //ch is assigned the value of G\nCharacter ch = new Character('a'); \nchar ch=name.charAt(4);\npublic class EsempioCharat {    public static void main(String args[]) { \tString str = \"informaticappunti.it\"; \t//Estraiamo il primo carattere della stringa \tchar ch1 = str.charAt(0); \t\t \t//Estraiamo il sesto carattere della stringa \tchar ch2 = str.charAt(5); \t\t \tSystem.out.println(\"Il carattere all'indice 0 &egrave;: \"+ch1); \tSystem.out.println(\" Il carattere all'indice 5 &egrave;: \"+ch2);    } }\n",
    "reg_date": "2021-10-12T12:07:26.000Z"
  },
  {
    "id": 4015,
    "keyword": null,
    "link": null,
    "title": " string compare java ==",
    "description": "// These two have the same value new String(\"test\").equals(\"test\") // --> true   // ... but they are not the same object new String(\"test\") == \"test\" // --> false   // ... neither are these new String(\"test\") == new String(\"test\") // --> false  \n",
    "reg_date": "2021-10-12T12:07:26.000Z"
  },
  {
    "id": 4016,
    "keyword": null,
    "link": null,
    "title": " string concat in java",
    "description": "// String concatenation in java using concat() method public class StringConcatMethodDemo {    public static void main(String[] args)    {       String str1 = \"Flower \";       String str2 = \"Brackets\";       String str3 = str1.concat(str2);       System.out.println(str3);    } }\n// StringBuilder String stringBuilderConcat = new StringBuilder()     .append(greeting)     .append(\" \")     .append(person)     .append(\"! Welcome to the \")     .append(location)     .append(\"!\")     .build();\npublic class ConcatenationExample {    public static void main(String args[]) {        //One way of doing concatenation        String str1 = \"Welcome\";        str1 = str1.concat(\" to \");        str1 = str1.concat(\" String handling \");        System.out.println(str1);         //Other way of doing concatenation in one line        String str2 = \"This\";        str2 = str2.concat(\" is\").concat(\" just a\").concat(\" String\");        System.out.println(str2);    } }\npublic class Concat {     String cat(String a, String b) {         a += b;         return a;     } }\nString s=\"Sachin\"+\" Tendulkar\";      System.out.println(s);//Sachin Tendulkar    Output:Sachin Tendulkar \n// Java program to demonstrate // working of concat() method    class Gfg {     public static void main(String args[])     {         String s = \"Gfg\";         s = s.concat(\"! is the best.\");         System.out.println(s);     } } \n",
    "reg_date": "2021-10-12T12:07:27.000Z"
  },
  {
    "id": 4017,
    "keyword": null,
    "link": null,
    "title": " string constant pool",
    "description": "String uses a special memory location to reuse of String objects called String Constant Pool. String objects created without the use of new keyword are stored in the String Constant Pool part of the heap. It doesn't create the same string object if there is already string constant in the pool.   String str = new String(\"\"); String str2 = \"\";  Str goes to heap memory str2 goes to string pool location  They both immutable and they save in different  memory location. \n",
    "reg_date": "2021-10-12T12:07:27.000Z"
  },
  {
    "id": 4018,
    "keyword": null,
    "link": null,
    "title": " string immutable in java",
    "description": "In java, string objects are immutable.  Immutable basically means unmodifiable or unchangeable. Once string object is created its data or state can't be changed but a new   string object is created\nIn java, string objects are immutable. Immutable simply means unmodifiable or unchangeable.  Once string object is created its data or state can't be changed but a new string object is created.\n",
    "reg_date": "2021-10-12T12:07:27.000Z"
  },
  {
    "id": 4019,
    "keyword": null,
    "link": null,
    "title": " string isEmpty java",
    "description": "public boolean isEmpty()\n",
    "reg_date": "2021-10-12T12:07:27.000Z"
  },
  {
    "id": 4020,
    "keyword": null,
    "link": null,
    "title": " string length in java",
    "description": "String data = \"Hello, World!\"; int nameLength = data.length(); // 13\npublic class Sample_String {     public static void main(String[] args) {         //declare the String as an object S1 S2         String S1 = \"Hello Java String Method\";         String S2 = \"RockStar\";          //length() method of String returns the length of a String S1.         int length = S1.length();         System.out.println(\"Length of a String is: \" + length);         //8 Length of a String RockStar         System.out.println(\"Length of a String is: \" + S2.length());     } } \nString data = \"Hello, World!\"; int nameLength = data.length(); \nstr.length();\nstring.length() \n// String length() method example public class StringLengthJava {    public static void main(String[] args)    {       String str1 = \"flowerbrackets\";       String str2 = \"helloworld\";       System.out.println(\"string length : \" + str1.length());       System.out.println(\"string length : \" + str2.length());    } }\n",
    "reg_date": "2021-10-12T12:07:27.000Z"
  },
  {
    "id": 4021,
    "keyword": null,
    "link": null,
    "title": " string pool in java",
    "description": "String uses a special memory location to reuse of String objects called String Constant Pool. String objects created without the use of new keyword are stored in the String Constant Pool part of the heap. It doesn't create the same string object if there is already string constant in the pool.   String str = new String(\"\"); String str2 = \"\";  Str goes to heap memory str2 goes to string pool location  They both immutable and they save in different  memory location. \n",
    "reg_date": "2021-10-12T12:07:27.000Z"
  },
  {
    "id": 4022,
    "keyword": null,
    "link": null,
    "title": " string remove last character",
    "description": "String s = \"Hello Worlds\"; String end = \"\"; end = s.substring((0, s.length()-1));\nprivate static String removeLastChar(String str) {     return str.substring(0, str.length() - 1); }\nlet str = \"12345.00\"; str = str.substring(0, str.length - 1); \nstr = str.substring(0, str.length() - 1);\npublic static String removeLastCharacter(String str) {    \tString result = null;        if ((str != null) && (str.length() > 0)) {           \tresult = str.substring(0, str.length() - 1);        }             return result; }\npublic String method(String str) {     if (str.charAt(str.length()-1)=='x'){         str = str.replace(str.substring(str.length()-1), \"\");         return str;     } else{         return str;     } } \n",
    "reg_date": "2021-10-12T12:07:27.000Z"
  },
  {
    "id": 4023,
    "keyword": null,
    "link": null,
    "title": " string replace java",
    "description": "public static void main(String args[]){   String s1=\"my name is khan my name is java\";   String replaceString=s1.replace(\"is\",\"was\");//replaces all occurrences of \"is\" to \"was\"   System.out.println(replaceString);   }}   \nString str = \"..............................\";           int index = 5;             char ch = '|';            StringBuilder string = new StringBuilder(str);          string.setCharAt(index, ch);           System.out.println(string); \nString s1 = \"my name is khan and my name is java\"; String replaceString = s1.replace(\"is\",\"was\"); //replaces all occurrences of \"is\" to \"was\" System.out.println(replaceString);\nString a = \"Cool\"; a = a.replace(\"o\",\"yy\"); \npublic static void main(String args[]){   String s1=\"my name is khan my name is java\";   String replaceString=s1.replace(\"is\",\"was\");//replaces all occurrences of \"is\" to \"was\"   System.out.println(replaceString);   }}  \nString str = \"helloslkhellodjladfjhello\"; String findStr = \"hello\"; int lastIndex = 0; int count = 0; while(lastIndex != -1){     lastIndex = str.indexOf(findStr,lastIndex);     if(lastIndex != -1){         count ++;         lastIndex += findStr.length();     } } System.out.println(count);\n",
    "reg_date": "2021-10-12T12:07:27.000Z"
  },
  {
    "id": 4024,
    "keyword": null,
    "link": null,
    "title": " string replace last character java",
    "description": "if(fieldName.endsWith(\",\")) {   fieldName = fieldName.substring(0,fieldName.length() - 1); }\n",
    "reg_date": "2021-10-12T12:07:27.000Z"
  },
  {
    "id": 4025,
    "keyword": null,
    "link": null,
    "title": " string reverse in java",
    "description": "public class ReverseString {     public static void main(String[] args) {         String s1 = \"neelendra\";         for(int i=s1.length()-1;i>=0;i--)             {                 System.out.print(s1.charAt(i));             }     } }\nString rev = new StringBuilder(\"Your String\").reverse().toString();\nString str = \"Hello\"; String reverse(String str){   StringBuilder sb = new StringBuilder();   sb.append(str);   sb.reverse();   return sb.toString(); }\nStringBuilder sb1 = new StringBuilder(\"Mahmut\");         sb1.reverse();         System.out.println(sb1); // tumhaM\n// reverse string array in java using collections import java.util.ArrayList; import java.util.Collections; import java.util.List; public class ReverseStringArrayUsingCollections {    public static void main(String[] args)    {       // creating list of strings       List<String> li = new ArrayList<String>();       li.add(\"java\");       li.add(\"core\");       li.add(\"world\");       li.add(\"hello\");       System.out.println(\"Given list: \" + li);       Collections.reverse(li);       System.out.println(\"After using collections: \" + li);    } }\n1) String str = \"Hello\"; String result = \"\";    for(int i = str.length()-1; i>=0; i--){      result += str.charAt(i); // first solution, charAt method  //  result += str1.substring(i, i+1); // first solution,  substring method    }    System.out.println(result); }  \n",
    "reg_date": "2021-10-12T12:07:27.000Z"
  },
  {
    "id": 4026,
    "keyword": null,
    "link": null,
    "title": " string startswith java",
    "description": "public class StringExample  {     public static void main(String[] args)      {         String blogName = \"howtodoinjava.com\";                   System.out.println( blogName.startsWith(\"how\") );               //true                   System.out.println( \"howtodoinjava.com\".startsWith(\"howto\") );  //true                   System.out.println( \"howtodoinjava.com\".startsWith(\"hello\") );  //false     } } \n",
    "reg_date": "2021-10-12T12:07:28.000Z"
  },
  {
    "id": 4027,
    "keyword": null,
    "link": null,
    "title": " string to bigdecimal",
    "description": "  BigDecimal(String val)   \n",
    "reg_date": "2021-10-12T12:07:28.000Z"
  },
  {
    "id": 4028,
    "keyword": null,
    "link": null,
    "title": " string to char in java",
    "description": "char c = 'a'; String s = Character.toString(c); //s == \"a\"\nstd::string str = \"string\"; const char *cstr = str.c_str(); \nString string =  \"ABCDEF\" ;   char[] charsFromString = string.toCharArray(); // { 'A', 'B', 'C', 'D', 'E', 'F' }\n// Convert char to string java public class CharToStringJava {    public static void main(String[] args)    {       char ch ='G';       String str = Character.toString(ch);       System.out.println(\"char to string is: \" + str);    } }\n// getting single character from string.. String str=\"abcd\";  char c=str.toChar(0);   System.out.println(\"output is \"+c); // output is a\nchar[] chars = { 'A', 'B', 'C', 'D', 'E', 'F' };  String str1 = String.valueOf(chars); //\"ABCDEF\" String str2 = new String(chars);// \"ABCDEF\"  System.out.println(str1.equals(str2)); //\"true\"\n",
    "reg_date": "2021-10-12T12:07:28.000Z"
  },
  {
    "id": 4029,
    "keyword": null,
    "link": null,
    "title": " string to date conversion java",
    "description": "import java.text.SimpleDateFormat;   import java.util.Date;   public class StringToDateExample1 {   public static void main(String[] args)throws Exception {       String sDate1=\"31/12/1998\";       Date date1=new SimpleDateFormat(\"dd/MM/yyyy\").parse(sDate1);       System.out.println(sDate1+\"\\t\"+date1);   }   }  \n",
    "reg_date": "2021-10-12T12:07:28.000Z"
  },
  {
    "id": 4030,
    "keyword": null,
    "link": null,
    "title": " string to double java",
    "description": "public class stringtodouble { \tpublic static void main(String args) {     \tString string = \"1.23\";       \tdouble decimal = Double.parseDouble(string);     } }\ntry {   a = Double.parseDouble(b); } catch (NumberFormatException e) {   //the parseDouble failed and you need to handle it here }\nString str=\"122.202\"; double dnum = Double.parseDouble(str);\nDouble d = Double.valueOf(String str);\nDouble myDouble = Double.parseDouble(\"23.5\");\nString text = \"12.34\"; double value = Double.parseDouble(text);\n",
    "reg_date": "2021-10-12T12:07:28.000Z"
  },
  {
    "id": 4031,
    "keyword": null,
    "link": null,
    "title": " string to double java exception",
    "description": "try {   a = Double.parseDouble(b); } catch (NumberFormatException e) {   //the parseDouble failed and you need to handle it here }\n",
    "reg_date": "2021-10-12T12:07:28.000Z"
  },
  {
    "id": 4032,
    "keyword": null,
    "link": null,
    "title": " string to float java",
    "description": "String yourString = \"23.7\"; float yourFloat = Float.parseFloat(yourString);\nString output = Float.parseFloat(floatNum); /** convert float to string using objName.parse(ObjName) <--capitalized usually. */\nFloat myFloat = Float.parseFloat(\"23.5\")\n",
    "reg_date": "2021-10-12T12:07:28.000Z"
  },
  {
    "id": 4033,
    "keyword": null,
    "link": null,
    "title": " string to int",
    "description": "String myString = \"1234\"; int foo = Integer.parseInt(myString);\nint result = Integer.parseInt(number);\nint result = Integer.parseInt(\"500\"); System.out.println(result) // prints 500 as int\n\tString number = \"10\"; \tint result = Integer.parseInt(number);\t\t\t \tSystem.out.println(result); Copy\nint i=Integer.parseInt(\"200\");  \nstring = \"some string\" string = int(string)\n",
    "reg_date": "2021-10-12T12:07:28.000Z"
  },
  {
    "id": 4034,
    "keyword": null,
    "link": null,
    "title": " string to int array",
    "description": "// CONVERT ARRAY STRING TO ARRAY NUMBER const arrStr = [\"1\", \"3\", \"5\", \"9\"]; const nuevo = arrStr.map((i) => Number(i)); console.log(nuevo); // [1,3,5,9];\nimport java.util.Arrays; public class StringToIntegerArray {    public static void main(String args[]) {       String [] str = {\"123\", \"345\", \"437\", \"894\"};       int size = str.length;       int [] arr = new int [size];       for(int i=0; i<size; i++) {          arr[i] = Integer.parseInt(str[i]);       }       System.out.println(Arrays.toString(arr));    } }\nchar c = '2'; int asInt = c - '0'; //asInt = 2 \nString s = \"1234\"; int[] intArray = new int[s.length()];  for (int i = 0; i < s.length(); i++) { \tintArray[i] = Character.digit(s.charAt(i), 10); }  \nint i, k = 0; for (i = 0; i < n; i++)     k = 10 * k + a[i];\n",
    "reg_date": "2021-10-12T12:07:28.000Z"
  },
  {
    "id": 4035,
    "keyword": null,
    "link": null,
    "title": " string to int in java",
    "description": "String myString = \"1234\"; int foo = Integer.parseInt(myString);\nint result = Integer.parseInt(number);\nint result = Integer.parseInt(\"500\"); System.out.println(result) // prints 500 as int\n\tString number = \"10\"; \tint result = Integer.parseInt(number);\t\t\t \tSystem.out.println(result); Copy\nString number = \"1\" int num = Integer.parseInt (name); //num equals 1\nint sample2 = Integer.parseInt(\"47\");   // returns 47 int sample3 = Integer.parseInt(\"+4\");   // returns 4\n",
    "reg_date": "2021-10-12T12:07:28.000Z"
  },
  {
    "id": 4036,
    "keyword": null,
    "link": null,
    "title": " string to int java",
    "description": "String myString = \"1234\"; int foo = Integer.parseInt(myString);\nint result = Integer.parseInt(number);\nint result = Integer.parseInt(\"500\"); System.out.println(result) // prints 500 as int\n\tString number = \"10\"; \tint result = Integer.parseInt(number);\t\t\t \tSystem.out.println(result); Copy\nString number = \"1\" int num = Integer.parseInt (name); //num equals 1\nint i = Integer.parseInt(myString);\n",
    "reg_date": "2021-10-12T12:07:29.000Z"
  },
  {
    "id": 4037,
    "keyword": null,
    "link": null,
    "title": " string to localdate in java",
    "description": "package com.mkyong.date;  import java.time.LocalDate;  public class JavaDateExample1 {      public static void main(String[] args) {          String date = \"2016-08-16\";          //default, ISO_LOCAL_DATE         LocalDate localDate = LocalDate.parse(date);          System.out.println(localDate);      } } Copy\n// Localdate to Date Date.from(localdate.atStartOfDay(ZoneId.systemDefault()).toInstant())\n   DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"d/MM/yyyy\");   String date = \"16/08/2016\";    //convert String to LocalDate   LocalDate localDate = LocalDate.parse(date, formatter); \npublic LocalDateTime convertToLocalDateTimeViaMilisecond(Date dateToConvert) {     return Instant.ofEpochMilli(dateToConvert.getTime())       .atZone(ZoneId.systemDefault())       .toLocalDateTime(); }\n",
    "reg_date": "2021-10-12T12:07:29.000Z"
  },
  {
    "id": 4038,
    "keyword": null,
    "link": null,
    "title": " string to long java",
    "description": "public class Example {    public static void main(String[] args)    {        String str = \"11111\";        String str2 = \"88888\";        //Conversion using valueOf(String) method        long num = Long.valueOf(str);        long num2 = Long.valueOf(str2);        System.out.println(num+num2);\t\t    } } Output: 99999\n Long.parseLong(\"0\", 10)        // returns 0L  Long.parseLong(\"473\", 10)      // returns 473L  Long.parseLong(\"-0\", 10)       // returns 0L  Long.parseLong(\"-FF\", 16)      // returns -255L  Long.parseLong(\"1100110\", 2)   // returns 102L  Long.parseLong(\"99\", 8)        // throws a NumberFormatException  Long.parseLong(\"Hazelnut\", 10) // throws a NumberFormatException  Long.parseLong(\"Hazelnut\", 36) // returns 1356099454469L  Long.parseLong(\"999\")          // returns 999L\npublic class Example {    public static void main(String[] args)    {        String str = \"10000\";        String str2 = \"22222\";        //Conversion using Long(String s) constructor        long num = new Long(str);        long num2 = new Long(str2);        System.out.println(num*num2);\t\t    } } Output: 222220000\nLong l= new Long(i); //first way Long l2=Long.valueOf(i); //second way\n",
    "reg_date": "2021-10-12T12:07:29.000Z"
  },
  {
    "id": 4039,
    "keyword": null,
    "link": null,
    "title": " string to string array java",
    "description": "String[] ary = \"abc\".split(\"\");  //(java.lang.String[]) [, a, b, c]\nArrays.toString(charArr);\n",
    "reg_date": "2021-10-12T12:07:29.000Z"
  },
  {
    "id": 4040,
    "keyword": null,
    "link": null,
    "title": " string vs new string",
    "description": "String str = new String(\"\"); String str2 = \"\";  They both immutable and they save in different  memory location. String objects created without the use of new keyword are stored in the String Constant Pool part of the heap. It doesn't create the same string object if there is already string constant in the pool. \n",
    "reg_date": "2021-10-12T12:07:29.000Z"
  },
  {
    "id": 4041,
    "keyword": null,
    "link": null,
    "title": " string vs stringbuffer",
    "description": "String vs StringBuilder vs StringBuffer                  STRING          STRINGBUFFER       STRINGBUILDER  Storage         String Pool     Heap                Heap Modifiable      Immutable   \tMutable           \tMutable Thread Safe     YES             YES                 NO Performance     FAST            VERY SLOW           FAST\nThe StringBuffer and StringBuilder class both produces mutable string objects.  The main difference between them is that StringBuffer is thread safe;  StringBuilder is not thread safe. \nThe main similarity between String and StringBuffer class is that both are thread safe.  The main difference is that String is immutable; StringBuffer is mutable.  \nThe StringBuffer and StringBuilder class both produces mutable string objects.  The main difference between them is that StringBuffer is thread safe;  StringBuilder is not thread safe. String is immutable and thread safe. We are using StringBuffer when we are doing parallel testing since it is a thread safe.\nThey both mutable, they are exactly same but String buffer is thread safe so it runs slower than String builder. We are using StringBuffer when we are doing parallel testing since it is a thread safe.\nThe main similarity between String and StringBuffer class is that both are  thread safe. The main difference is that String is immutable; StringBuffer is mutable. \n",
    "reg_date": "2021-10-12T12:07:29.000Z"
  },
  {
    "id": 4042,
    "keyword": null,
    "link": null,
    "title": " string vs stringbuilder",
    "description": "String is immutable and thread safe String builder mutable and not thread safe\n",
    "reg_date": "2021-10-12T12:07:29.000Z"
  },
  {
    "id": 4043,
    "keyword": null,
    "link": null,
    "title": " stringbuffer vs stringbuilder java",
    "description": "The StringBuffer and StringBuilder class both produces mutable string objects.  The main difference between them is that StringBuffer is thread safe;  StringBuilder is not thread safe. \n",
    "reg_date": "2021-10-12T12:07:29.000Z"
  },
  {
    "id": 4044,
    "keyword": null,
    "link": null,
    "title": " stringbuffer vs stringbuilder vs string in java",
    "description": "The StringBuffer and StringBuilder class both produces mutable string objects.  The main difference between them is that StringBuffer is thread safe;  StringBuilder is not thread safe. \nThe main similarity between String and StringBuffer class is that both are thread safe.  The main difference is that String is immutable; StringBuffer is mutable.  \nThe StringBuffer and StringBuilder class both produces mutable string objects.  The main difference between them is that StringBuffer is thread safe;  StringBuilder is not thread safe. String is immutable and thread safe. We are using StringBuffer when we are doing parallel testing since it is a thread safe.\nString is immutable and thread safe String builder mutable and not thread safe\nThey both mutable, they are exactly same but String buffer is thread safe so it runs slower than String builder. We are using StringBuffer when we are doing parallel testing since it is a thread safe.\n",
    "reg_date": "2021-10-12T12:07:29.000Z"
  },
  {
    "id": 4045,
    "keyword": null,
    "link": null,
    "title": " stringbuilder in java",
    "description": "StringBuilder stringBuilder = new StringBuilder();  stringBuilder.append(\"string\");  System.out.println(\"String = \" + stringBuilder.toString());\nJava StringBuilder class is used to create   mutable (modifiable) string. The Java   StringBuilder class is same as StringBuffer   class except that it is non-synchronized.      StringBuilder()     creates an empty string Builder with the initial capacity of 16. StringBuilder(String str)     creates a string Builder with the specified string. StringBuilder(int length)     creates an empty string Builder with the specified capacity as length.    StringBuilder builder = new StringBuilder(\"Harvard\");  // mutable you modify object new keyword ile olusturuoyrsun StringBuilder         builder.append(\" School\");  // append method we are calling from Builder  //** it is not synchronized means fast         System.out.println(builder); // Harvard School\nStringBuilder objects are like String objects, except that they can be modified\nJava StringBuilder class is used to create   mutable (modifiable) string. The Java   StringBuilder class is same as StringBuffer   class except that it is non-synchronized.      StringBuilder()     creates an empty string Builder with the initial capacity of 16. StringBuilder(String str)     creates a string Builder with the specified string. StringBuilder(int length)     creates an empty string Builder with the specified capacity as length.    \nIt is mutable char sequence and it is not thread safe.\npublic StringBuilder reverse()\n",
    "reg_date": "2021-10-12T12:07:29.000Z"
  },
  {
    "id": 4046,
    "keyword": null,
    "link": null,
    "title": " stringbuilder insert beginning",
    "description": "StringBuilder sb = new StringBuilder(); sb.insert(0, \"string\");\n",
    "reg_date": "2021-10-12T12:07:30.000Z"
  },
  {
    "id": 4047,
    "keyword": null,
    "link": null,
    "title": " stringbuilder java",
    "description": "StringBuilder stringBuilder = new StringBuilder();  stringBuilder.append(\"string\");  System.out.println(\"String = \" + stringBuilder.toString());\nStringBuilder objects are like String objects, except that they can be modified\nJava StringBuilder class is used to create   mutable (modifiable) string. The Java   StringBuilder class is same as StringBuffer   class except that it is non-synchronized.      StringBuilder()     creates an empty string Builder with the initial capacity of 16. StringBuilder(String str)     creates a string Builder with the specified string. StringBuilder(int length)     creates an empty string Builder with the specified capacity as length.    \nIt is mutable char sequence and it is not thread safe.\n",
    "reg_date": "2021-10-12T12:07:30.000Z"
  },
  {
    "id": 4048,
    "keyword": null,
    "link": null,
    "title": " stringbuilder to string java",
    "description": "StringBuilder.toString(); //the text will be whatever information you gave in the constructor\nString singleString = sb.toString(); //the text will be whatever information you gave in the constructor\n",
    "reg_date": "2021-10-12T12:07:30.000Z"
  },
  {
    "id": 4049,
    "keyword": null,
    "link": null,
    "title": " stringjoiner stream java",
    "description": "setOfTags.stream().collect(Collectors.joining(\";\"))\n",
    "reg_date": "2021-10-12T12:07:30.000Z"
  },
  {
    "id": 4050,
    "keyword": null,
    "link": null,
    "title": " style jbuttons",
    "description": "btn.setBorderPainted(false); btn.setFocusPainted(false);\n",
    "reg_date": "2021-10-12T12:07:30.000Z"
  },
  {
    "id": 4051,
    "keyword": null,
    "link": null,
    "title": " subaray in java by slicing",
    "description": "import java.util.Arrays; public class SlicingAnArray {    public static void main(String args[]){       int intArray[] = {12, 14, 58, 225, 56, 96 , 3, 45, 8 };       intArray = Arrays.copyOfRange(intArray, 3, 7);       System.out.println(Arrays.toString(intArray));    } }\n",
    "reg_date": "2021-10-12T12:07:30.000Z"
  },
  {
    "id": 4052,
    "keyword": null,
    "link": null,
    "title": " subset symbol latex",
    "description": "\\subset\n\\documentclass{article} \\usepackage{graphicx} \\usepackage{amsmath}  \\newcommand\\Inn{%   \\mathrel{\\ooalign{$\\subset$\\cr\\hfil\\scalebox{0.8}[1]{$=$}\\hfil\\cr}}% } \\begin{document}  \\[ A\\in B % one stroke in middle \\]  \\[ A\\Inn B % two strokes in middle \\]  \\end{document}\n\\epsilon\n",
    "reg_date": "2021-10-12T12:07:30.000Z"
  },
  {
    "id": 4053,
    "keyword": null,
    "link": null,
    "title": " subtract two numbers without using arithmetic operators in java",
    "description": "public class SubtractWithoutArithmeticOperators {    static int subtractNumber(int i, int j)    {       while(j != 0)       {          int carry = (~i) & j;          i = i ^ j;          j = carry << 1;       }       return i;    }    public static void main(String[] args)    {       int a = 23, b = 10;       System.out.println(\"a - b is \" + subtractNumber(a, b));    } }\n",
    "reg_date": "2021-10-12T12:07:30.000Z"
  },
  {
    "id": 4054,
    "keyword": null,
    "link": null,
    "title": " sum and array list java",
    "description": "int sum = (list.stream().         mapToInt(i -> i.intValue()).sum()\ndouble sum = 0; for(int i = 0; i < m.size(); i++)     sum += m.get(i); return sum; \n",
    "reg_date": "2021-10-12T12:07:30.000Z"
  },
  {
    "id": 4055,
    "keyword": null,
    "link": null,
    "title": " sum numbers in array java",
    "description": "int[] a = {10,20,30,40,50}; int sum = IntStream.of(a).sum(); System.out.println(\"The sum is \" + sum); \npublic class Exercise2 { public static void main(String[] args) {       int my_array[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}; int sum = 0;  for (int i : my_array)     sum += i; System.out.println(\"The sum is \" + sum); } }\npublic static void main(String[] args) {  String str = \"a1b2c3d4\"; char[] arr = str.toCharArray(); // stringi char array return etti.  System.out.println(Arrays.toString(arr)); // [a, 1, b, 2, c, 3, d, 4]  int sum = 0;    // will contain sum of all digits   for(char each  : arr ){ // '0'    if( Character.isDigit(each) ){     // isDigit(): identifies if the given character is digit     sum += Integer.parseInt(\"\"+each); }  }    System.out.println(sum); // 10\n",
    "reg_date": "2021-10-12T12:07:30.000Z"
  },
  {
    "id": 4056,
    "keyword": null,
    "link": null,
    "title": " sum of all numbers in array java",
    "description": "int[] a = {10,20,30,40,50}; int sum = IntStream.of(a).sum(); System.out.println(\"The sum is \" + sum); \nvar numbers = [10, 20, 30, 40]  var sum = 0; for (var i = 0; i < numbers.length; i++) {  sum += numbers[i]}\nconst numbers = [10, 20, 30, 40]  add = (a, b) =>  a + b const sum = numbers.reduce(add)\n",
    "reg_date": "2021-10-12T12:07:31.000Z"
  },
  {
    "id": 4057,
    "keyword": null,
    "link": null,
    "title": " sum of arraylist java 8",
    "description": "int total = numbers.stream().mapToInt(i -> i.intValue()).sum(); \t\tSystem.out.print(total);\n",
    "reg_date": "2021-10-12T12:07:31.000Z"
  },
  {
    "id": 4058,
    "keyword": null,
    "link": null,
    "title": " sum of digits in java",
    "description": "import java.util.Scanner; public class SumDigit {     public static void main(String[] argh){         System.out.println(\"Enter int\");         Scanner input = new Scanner(System.in);         int n = input.nextInt();         int sum = 0 ;         int i = 0;         print( i =Sum_of_digits(sum,n));     }      public static int Sum_of_digits(int sum,int n){         if(n<=0)             return sum ;         sum += n\u0010;         return Sum_of_digits(sum,n/10);     }      public static void  print(int n){         System.out.print(n);     } }\nlong number, sum; Scanner sc = new Scanner(System.in); System.out.println(\"Enter any DIGIT number: \"); number = sc.nextLong(); sc.close(); // For Logic for adding all digits in the given number for (sum = 0; number != 0; number /= 10) { \tsum += number % 10; \t} System.out.println(\"ForLoop Sum of ALL digits: \" + sum);\nimport java.io.*; public class sd {   public static void main(String [] args)throws IOException   {      InputStreamReader hi = new InputStreamReader(System.in);         BufferedReader in = new BufferedReader(hi);         System.out.println(\"Enter the number\");         int num=Integer.parseInt(in.readLine());     int sum=0;     while(num>=0)     {       int rem=n;       sum+=rem;       int quo=n/10;       n=quo;     }     System.out.println(sum);   } }\n//To find the sum of even digits in a given Number      public static int getEvenDigitSum(int number){         if(number<0){             return -1;         }         int finalNumber=0;         while(number>0){            if((number\u0010)%2==0){                finalNumber+=number\u0010;             }            number=number/10; //takes out last digit to test the next digit           }         return finalNumber;     } //Output: ex:number=12323 -- Ans: 4\npublic class SumNatural {      public static void main(String[] args) {          int num = 100, sum = 0;          for(int i = 1; i <= num; ++i)         {             // sum = sum + i;             sum += i;         }          System.out.println(\"Sum = \" + sum);     } }\n",
    "reg_date": "2021-10-12T12:07:31.000Z"
  },
  {
    "id": 4059,
    "keyword": null,
    "link": null,
    "title": " sum of digits java",
    "description": "import java.util.Scanner; public class SumDigit {     public static void main(String[] argh){         System.out.println(\"Enter int\");         Scanner input = new Scanner(System.in);         int n = input.nextInt();         int sum = 0 ;         int i = 0;         print( i =Sum_of_digits(sum,n));     }      public static int Sum_of_digits(int sum,int n){         if(n<=0)             return sum ;         sum += n\u0010;         return Sum_of_digits(sum,n/10);     }      public static void  print(int n){         System.out.print(n);     } }\nlong number, sum; Scanner sc = new Scanner(System.in); System.out.println(\"Enter any DIGIT number: \"); number = sc.nextLong(); sc.close(); // For Logic for adding all digits in the given number for (sum = 0; number != 0; number /= 10) { \tsum += number % 10; \t} System.out.println(\"ForLoop Sum of ALL digits: \" + sum);\nimport java.io.*; public class sd {   public static void main(String [] args)throws IOException   {      InputStreamReader hi = new InputStreamReader(System.in);         BufferedReader in = new BufferedReader(hi);         System.out.println(\"Enter the number\");         int num=Integer.parseInt(in.readLine());     int sum=0;     while(num>=0)     {       int rem=n;       sum+=rem;       int quo=n/10;       n=quo;     }     System.out.println(sum);   } }\n//To find the sum of even digits in a given Number      public static int getEvenDigitSum(int number){         if(number<0){             return -1;         }         int finalNumber=0;         while(number>0){            if((number\u0010)%2==0){                finalNumber+=number\u0010;             }            number=number/10; //takes out last digit to test the next digit           }         return finalNumber;     } //Output: ex:number=12323 -- Ans: 4\npublic class SumNatural {      public static void main(String[] args) {          int num = 100, sum = 0;          for(int i = 1; i <= num; ++i)         {             // sum = sum + i;             sum += i;         }          System.out.println(\"Sum = \" + sum);     } }\n",
    "reg_date": "2021-10-12T12:07:31.000Z"
  },
  {
    "id": 4060,
    "keyword": null,
    "link": null,
    "title": " sum of list java",
    "description": "doubleList.stream().reduce((a,b)->a+b).get(); \nint sum = (list.stream().         mapToInt(i -> i.intValue()).sum()\ndouble sum = 0; for(int i = 0; i < m.size(); i++)     sum += m.get(i); return sum; \n//If you have a List<Integer> int sum = list.stream().mapToInt(Integer::intValue).sum();  //If it's an int[] int sum = IntStream.of(a).sum();\n",
    "reg_date": "2021-10-12T12:07:31.000Z"
  },
  {
    "id": 4061,
    "keyword": null,
    "link": null,
    "title": " sum of two numbers in java",
    "description": "import java.util.Scanner;  public class Main {      public static void main(String[] args) {          Scanner scanner = new Scanner(System.in);          System.out.print(\"Enter two numbers: \");         int num1 = scanner.nextInt() , num2 = scanner.nextInt();          int sum = num1 + num2 ;         System.out.printf(\"The sum of %d and %d is %d\",num1, num2, sum);     } }\npublic class SumNatural {      public static void main(String[] args) {          int num = 100, sum = 0;          for(int i = 1; i <= num; ++i)         {             // sum = sum + i;             sum += i;         }          System.out.println(\"Sum = \" + sum);     } }\n",
    "reg_date": "2021-10-12T12:07:31.000Z"
  },
  {
    "id": 4062,
    "keyword": null,
    "link": null,
    "title": " super in javascirpt",
    "description": "class Rectangle {   constructor(height, width) {     this.name = 'Rectangle';     this.height = height;     this.width = width;   }   sayName() {     console.log('Hi, I am a ', this.name + '.');   }   get area() {     return this.height * this.width;   }   set area(value) {     this._area = value;   } }  class Square extends Rectangle {   constructor(length) {     this.height; // ReferenceError, super needs to be called first!      // Here, it calls the parent class's constructor with lengths     // provided for the Rectangle's width and height     super(length, length);      // Note: In derived classes, super() must be called before you     // can use 'this'. Leaving this out will cause a reference error.     this.name = 'Square';   } }\n",
    "reg_date": "2021-10-12T12:07:31.000Z"
  },
  {
    "id": 4063,
    "keyword": null,
    "link": null,
    "title": " super keyword in java",
    "description": "ObjMaker = function() {this.a = 'first';}; // ObjMaker is just a function, there's nothing special about it that makes  // it a constructor.  ObjMaker.prototype.b = 'second'; // like all functions, ObjMaker has an accessible prototype property that  // we can alter. I just added a property called 'b' to it. Like  // all objects, ObjMaker also has an inaccessible [[prototype]] property // that we can't do anything with  obj1 = new ObjMaker(); // 3 things just happened. // A new, empty object was created called obj1.  At first obj1 was the same // as {}. The [[prototype]] property of obj1 was then set to the current // object value of the ObjMaker.prototype (if ObjMaker.prototype is later // assigned a new object value, obj1's [[prototype]] will not change, but you // can alter the properties of ObjMaker.prototype to add to both the // prototype and [[prototype]]). The ObjMaker function was executed, with // obj1 in place of this... so obj1.a was set to 'first'.  obj1.a; // returns 'first' obj1.b; // obj1 doesn't have a property called 'b', so JavaScript checks  // its [[prototype]]. Its [[prototype]] is the same as ObjMaker.prototype // ObjMaker.prototype has a property called 'b' with value 'second' // returns 'second'\nVariables and methods of super class can be overridden in subclass.  In case of overriding , a subclass object call its own variables and methods. Subclass cannot  access the variables and methods of superclass because the overridden variables or methods hides the  methods and variables of super class. But still java provides a way to access  super class members even if  its members are overridden. Super is used to access superclass variables, methods, constructors. Super can be used in two forms : 1) First form is for calling super class constructor. 2) Second one is to call super class variables,methods. Super if present must be the first statement.\n**Important Points**   1.It creates a new object. The type of this object is object. 2.It sets this new object's internal, inaccessible, [[prototype]] (i.e. __proto__) property to be the constructor function's external, accessible, prototype object (every function object automatically has a prototype property). 3.It makes the this variable point to the newly created object. 4.It executes the constructor function, using the newly created object whenever this is mentioned. 5.It returns the newly created object, unless the constructor function returns a non-null object reference. In this case, that object reference is returned instead. Note: constructor function refers to the function after the new keyword, as in  new ConstructorFunction(arg1, arg2)\nVariables and methods of super class can be overridden in subclass.  In case of overriding , a subclass object call its own variables and methods. Subclass cannot  access the variables and methods of superclass because the overridden variables or methods hides the  methods and variables of super class. But still java provides a way to access super class members even if  its members are overridden. Super is used to access superclass variables, methods, constructors. Super can be used in two forms : 1) First form is for calling super class constructor. 2) Second one is to call super class variables,methods. Super if present must be the first statement.\n",
    "reg_date": "2021-10-12T12:07:32.000Z"
  },
  {
    "id": 4064,
    "keyword": null,
    "link": null,
    "title": " swagger implementation in spring boot",
    "description": "package com.bhutanio.config;  import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import springfox.documentation.builders.ApiInfoBuilder; import springfox.documentation.builders.PathSelectors; import springfox.documentation.builders.RequestHandlerSelectors; import springfox.documentation.service.ApiInfo; import springfox.documentation.service.Contact; import springfox.documentation.spi.DocumentationType; import springfox.documentation.spring.web.plugins.Docket; import springfox.documentation.swagger2.annotations.EnableSwagger2;  @Configuration @EnableSwagger2 public class SwaggerConfiguration {     @Bean     public Docket bookHotelApi() {         return new Docket( DocumentationType.SWAGGER_2)                 .select()                 .apis( RequestHandlerSelectors.any())                 .paths( PathSelectors.any())                 .build()                 .apiInfo(getApiInfo());     }      private ApiInfo getApiInfo() {         return new ApiInfoBuilder()                 .title(\"Swagger By Bhutan IO\")                 .version(\"1.0\")                 .description(\"Some description here..\")                 .contact(new Contact(\"Bhutan IO\", \"http://www.bhutanio.com\", \"abcde@email.com\"))                 .license(\"Apache License Version 2.0\")                 .build();     } }Code language: JavaScript (javascript)\n@Override public void addResourceHandlers(ResourceHandlerRegistry registry) {     registry.addResourceHandler(\"swagger-ui.html\")       .addResourceLocations(\"classpath:/META-INF/resources/\");      registry.addResourceHandler(\"/webjars/**\")       .addResourceLocations(\"classpath:/META-INF/resources/webjars/\"); }\n// Fixed by lowering the swagger version to 2.7.0  @EnableWebSecurity @Configuration public class ResourceServerConfig extends WebSecurityConfigurerAdapter { //...//     public static final String[] AUTH_WHITELIST = {         \"/swagger-ui.html/**\", \"/configuration/**\", \"/swagger-resources/**\", \"/v2/api-docs\", \"/webjars/**\"     }; //...//      @Override     public void configure(WebSecurity web) throws Exception {         web.ignoring().mvcMatchers(HttpMethod.OPTIONS, \"/**\");         web.ignoring().antMatchers(AUTH_WHITELIST);     }    }\n",
    "reg_date": "2021-10-12T12:07:32.000Z"
  },
  {
    "id": 4065,
    "keyword": null,
    "link": null,
    "title": " swap function java",
    "description": "public static void swap(int[] a, int i, int j){ \tint temp = a[i];   \ta[i] = a[j];   \ta[j] = temp; }\n// a, b can be a numeric value a += b; // a = a + b b = a - b; // b = (a + b) - b = a  ---> b=a a -= b; // a = (a + b) - (a) = b  ---> a=b\nSwapping\n",
    "reg_date": "2021-10-12T12:07:32.000Z"
  },
  {
    "id": 4066,
    "keyword": null,
    "link": null,
    "title": " swap items in arraylist java",
    "description": "public class ArrayListExample  {     public static void main(String[] args)      {         ArrayList<String> list = new ArrayList<>(Arrays.asList(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"));                   System.out.println(list);                   Collections.swap(list, 1, 2);                   System.out.println(list);     } } \n",
    "reg_date": "2021-10-12T12:07:32.000Z"
  },
  {
    "id": 4067,
    "keyword": null,
    "link": null,
    "title": " swap two variables in java in single line",
    "description": "// swap two variables in java in single line public class SwapTwoVariablesInOneLine {    public static void main(String[] args)    {       int x = 23;       int y = 75;       System.out.println(\"Before swapping two numbers: x = \" + x + \" y = \" + y);       x = x ^ y ^ (y = x);       System.out.println(\"After swapping two numbers: x = \" + x + \" y = \" + y);    } }\n",
    "reg_date": "2021-10-12T12:07:32.000Z"
  },
  {
    "id": 4068,
    "keyword": null,
    "link": null,
    "title": " swap two variables without temporary java",
    "description": "import java.*;     class noTemp {         public static void main(String a[])      {          int x = 10;          int y = 5;          x = x + y;          y = x - y;          x = x - y;          System.out.println(\"After swaping:\"                            + \" x = \" + x + \", y = \" + y);      }  } \nimport java.*;     class noTemp {         public static void main(String a[])      {          int x = 10;          int y = 5;          x = x + y;          y = x - y;          x = x - y;          System.out.println(x , y);      }  } \n",
    "reg_date": "2021-10-12T12:07:32.000Z"
  },
  {
    "id": 4069,
    "keyword": null,
    "link": null,
    "title": " swapping with two variables in java",
    "description": "public class Exercise15 {   public static void main(String[] args) {      // int, double, float    int a, b;    a = 15;    b = 27;    System.out.println(\"Before swapping : a, b = \"+a+\", \"+ + b);    a = a + b;    b = a - b;    a = a - b;    System.out.println(\"After swapping : a, b = \"+a+\", \"+ + b);  }   }  \n",
    "reg_date": "2021-10-12T12:07:32.000Z"
  },
  {
    "id": 4070,
    "keyword": null,
    "link": null,
    "title": " swing timer",
    "description": "  int delay = 1000; //milliseconds   ActionListener taskPerformer = new ActionListener() {       public void actionPerformed(ActionEvent evt) {           //...Perform a task...       }   };   new Timer(delay, taskPerformer).start();\n",
    "reg_date": "2021-10-12T12:07:32.000Z"
  },
  {
    "id": 4071,
    "keyword": null,
    "link": null,
    "title": " switch case in android",
    "description": "switch(position) {     case 0:         setContentView(R.layout.xml0);         break;     case 1:         setContentView(R.layout.xml1);         break;     default:         setContentView(R.layout.default);         break; } \n",
    "reg_date": "2021-10-12T12:07:33.000Z"
  },
  {
    "id": 4072,
    "keyword": null,
    "link": null,
    "title": " switch expression java",
    "description": "int day = 4; switch (day) {   case 6:     System.out.println(\"Today is Saturday\");     break;   case 7:     System.out.println(\"Today is Sunday\");     break;   default:     System.out.println(\"Looking forward to the Weekend\"); } // Outputs \"Looking forward to the Weekend\"\nSystem.out.println(         switch (day) {             case MONDAY, FRIDAY, SUNDAY -> 6;             case TUESDAY                -> 7;             case THURSDAY, SATURDAY     -> 8;             case WEDNESDAY              -> 9;             default -> throw new IllegalStateException(\"Invalid day: \" + day);         }     );\nswitch (/*Variable*/) {   case /*Variable*/:     /*Action*/;     break;           default:     /*Action*/;              }\n",
    "reg_date": "2021-10-12T12:07:33.000Z"
  },
  {
    "id": 4073,
    "keyword": null,
    "link": null,
    "title": " switch java 11",
    "description": "public String exampleOfSwitch(String animal) {     String result;     switch (animal) {         case \"DOG\":             result = \"domestic animal\";              break;         case \"CAT\":             result = \"domestic animal\";             break;         case \"TIGER\":             result = \"wild animal\";             break;         default:             result = \"unknown animal\";             break;     }     return result; } \nswitch (profe) {   case \"Anah&iacute;\":     System.out.println(\"&iexcl;Profesora de Java!\");     break;   case \"Oscar\":     System.out.println(\"&iexcl;Profesor de React.js!\");     break;   case \"JuanDC\":     System.out.println(\"Oye ni&ntilde;o, &iquest;qu&eacute; haces aqu&iacute;?\");     break;   default:     System.out.println(\"&iexcl;Un nuevo profe!\");     break; } \n",
    "reg_date": "2021-10-12T12:07:33.000Z"
  },
  {
    "id": 4074,
    "keyword": null,
    "link": null,
    "title": " switch material android tutorial",
    "description": "// To check a switch switchMaterial.isChecked = true  // To listen for a switch's checked/unchecked state changes switchMaterial.setOnCheckedChangeListener { buttonView, isChecked     // Responds to switch being checked/unchecked }\n",
    "reg_date": "2021-10-12T12:07:33.000Z"
  },
  {
    "id": 4075,
    "keyword": null,
    "link": null,
    "title": " switch statement in apex",
    "description": "for(Integer i=1; i<=5; i++){     Switch on i {         when 1,2{             System.debug('case 1 and 2');         }         when 5{             System.debug('case 5');         }         when else{             System.debug('case 3 and 4');         }     }  } \n",
    "reg_date": "2021-10-12T12:07:33.000Z"
  },
  {
    "id": 4076,
    "keyword": null,
    "link": null,
    "title": " switch statement in java",
    "description": "int day = 4; switch (day) {   case 6:     System.out.println(\"Today is Saturday\");     break;   case 7:     System.out.println(\"Today is Sunday\");     break;   default:     System.out.println(\"Looking forward to the Weekend\"); } // Outputs \"Looking forward to the Weekend\"\n// switch case in java example programs public class SwitchStatementExample {    public static void main(String[] args)    {       char grade = 'A';       switch(grade) {           case 'A' :               System.out.println(\"Distinction.\");               break;           case 'B' :           case 'C' :               System.out.println(\"First class.\");               break;           case 'D' :               System.out.println(\"You have passed.\");           case 'F' :               System.out.println(\"Fail. Try again.\");               break;           default :               System.out.println(\"Invalid grade\");       }       System.out.println(\"Grade is: \" + grade);    } }\nswitch(x){ \tcase(0):\t\t//if x == 0     \t//do some stuff     \tbreak;     //add more cases   default:\t\t\t//when x does not match any case     //do some stuff     break; }\n//the cooler looking edition (with input example) Scanner scn = new Scanner(System.in); int asd = scn.nextInt();  switch(asd) {   case 1 -> System.out.println(\"case 1\");   case 2 -> System.out.println(\"case 2\");   case 5 -> System.out.println(\"case 5\");   //case n...   default -> case 1 -> System.out.println(\"check out tunalad.bandcamp.com\"); }  /* Output: asd = 1: \"case 1\" asd = 2: \"case 2\" asd = 5: \"case 5\" asd = 33213: \"check out tunalad.bandcamp.com\" */\nSystem.out.println(         switch (day) {             case MONDAY, FRIDAY, SUNDAY -> 6;             case TUESDAY                -> 7;             case THURSDAY, SATURDAY     -> 8;             case WEDNESDAY              -> 9;             default -> throw new IllegalStateException(\"Invalid day: \" + day);         }     );\n// syntax of switch statement in java switch(expression) {    case 1 value :    // code goes here    break;     case 2 value :    // code goes here    break;     case 3 value :    // code goes here    break;    .    .    .    .        default: // optional    // default code goes here }\n",
    "reg_date": "2021-10-12T12:07:33.000Z"
  },
  {
    "id": 4077,
    "keyword": null,
    "link": null,
    "title": " synchronization program in java",
    "description": "class First {   synchronized public void display(String msg)   {     System.out.print (\"[\"+msg);     try     {       Thread.sleep(1000);     }     catch(InterruptedException e)     {       e.printStackTrace();     }     System.out.println (\"]\");   } }  class Second extends Thread {   String msg;   First fobj;   Second (First fp,String str)   {     fobj = fp;     msg = str;     start();   }   public void run()   {     fobj.display(msg);   } }  public class MyThread {   public static void main (String[] args)   {     First fnew = new First();     Second ss = new Second(fnew, \"welcome\");     Second ss1= new Second(fnew,\"new\");     Second ss2 = new Second(fnew, \"programmer\");   } } \n",
    "reg_date": "2021-10-12T12:07:33.000Z"
  },
  {
    "id": 4078,
    "keyword": null,
    "link": null,
    "title": " synchronized block java",
    "description": "synchronized blocks the next thread's call to method   as long as the previous thread's execution is not finished.    Threads can access this method one at a time.    Without synchronized all threads can access this method simultaneously.\nThe synchronized keyword is all about different threads reading and writing  to the same variables, objects and resources.\npublic class MyCounter {    private int count = 0;    public synchronized void add(int value){       this.count += value;   } } \n",
    "reg_date": "2021-10-12T12:07:33.000Z"
  },
  {
    "id": 4079,
    "keyword": null,
    "link": null,
    "title": " synchronized java",
    "description": "synchronized blocks the next thread's call to method   as long as the previous thread's execution is not finished.    Threads can access this method one at a time.    Without synchronized all threads can access this method simultaneously.\nThe synchronized keyword is all about different threads reading and writing  to the same variables, objects and resources.\npublic class MyCounter {    private int count = 0;    public synchronized void add(int value){       this.count += value;   } } \nclass First {   synchronized public void display(String msg)   {     System.out.print (\"[\"+msg);     try     {       Thread.sleep(1000);     }     catch(InterruptedException e)     {       e.printStackTrace();     }     System.out.println (\"]\");   } }  class Second extends Thread {   String msg;   First fobj;   Second (First fp,String str)   {     fobj = fp;     msg = str;     start();   }   public void run()   {     fobj.display(msg);   } }  public class MyThread {   public static void main (String[] args)   {     First fnew = new First();     Second ss = new Second(fnew, \"welcome\");     Second ss1= new Second(fnew,\"new\");     Second ss2 = new Second(fnew, \"programmer\");   } } \n",
    "reg_date": "2021-10-12T12:07:33.000Z"
  },
  {
    "id": 4080,
    "keyword": null,
    "link": null,
    "title": " system.currenttimemillis()",
    "description": "// gets total number of milliseconds since the UNIX Epoch long totalMilliseconds = System.currentTimeMillis();  long totalSeconds = totalMilliseconds / 1000; long currentSeconds = totalSeconds % 60;  long totalMinutes = totalSeconds / 60; long currentMinutes = totalMinutes % 60;  long totalHours = totalMinutes / 60; long currentHours = totalHours % 24;  // first function call MUST be long // current times don't have to be long, can be {int, double, etc...} // total times should usually be long\n// gets total number of milliseconds since the UNIX Epoch long totalMilliseconds = System.currentTimeMillis();  long totalSeconds = totalMilliseconds / 1000; long currentSeconds = totalSeconds % 60;  long totalMinutes = totalSeconds / 60; long currentMinutes = totalMinutes % 60;  long totalHours = totalMinutes / 60; long currentHours = totalHours % 24;  // first function call MUST be long // current times don't have to be long, can be {int, double, etc...} // total times should usually be long \n",
    "reg_date": "2021-10-12T12:07:33.000Z"
  },
  {
    "id": 4081,
    "keyword": null,
    "link": null,
    "title": " system.getproperty( )",
    "description": "Key\tMeaning \"file.separator\"\tCharacter that separates components of a file path. This is \"/\" on UNIX and \"\\\" on Windows. \"java.class.path\"\tPath used to find directories and JAR archives containing class files. Elements of the class path are separated by a platform-specific character specified in the path.separator property. \"java.home\"\t\t\tInstallation directory for Java Runtime Environment (JRE) \"java.vendor\"\t\tJRE vendor name \"java.vendor.url\"\tJRE vendor URL \"java.version\"\t\tJRE version number \"line.separator\"\tSequence used by operating system to separate lines in text files \"os.arch\"\t\t\tOperating system architecture \"os.name\"\t\t\tOperating system name \"os.version\"\t\tOperating system version \"path.separator\"\tPath separator character used in java.class.path \"user.dir\"\t\t\tUser working directory \"user.home\"\t\t\tUser home directory \"user.name\"\t\t\tUser account name\n",
    "reg_date": "2021-10-12T12:07:34.000Z"
  },
  {
    "id": 4082,
    "keyword": null,
    "link": null,
    "title": " system.in example in java",
    "description": "package com.mkyong.io;  import java.util.Scanner;  public class JavaScanner {      public static void main(String[] args) {          Scanner scanner = new Scanner(System.in);          String input = \"\";         while (!\"q\".equalsIgnoreCase(input)) {              System.out.print(\"Enter something (q to quite): \");              input = scanner.nextLine();             System.out.println(\"input : \" + input);         }          System.out.println(\"bye bye!\");     }  }\n",
    "reg_date": "2021-10-12T12:07:34.000Z"
  },
  {
    "id": 4083,
    "keyword": null,
    "link": null,
    "title": " system.out.println",
    "description": "public static void main(String[] args){ \tSystem.out.println(\"Hello World\");  }\nSystem.out.print(<string>); //prints in the same line as the previous print System.out.println(<string>); //prints in a new line  // Example System.out.print(\"This \"); System.out.print(\"will \"); System.out.print(\"be \"); System.out.print(\"all \"); System.out.print(\"in \"); System.out.print(\"one \"); System.out.print(\"line.\");  System.out.println(\"Hello World!\"); System.out.println(\"second line\");\nSystem.out.println(\"Hello World\");\n",
    "reg_date": "2021-10-12T12:07:34.000Z"
  },
  {
    "id": 4084,
    "keyword": null,
    "link": null,
    "title": " system.out.println giving error Syntax error on token \".\", @ expected after this token",
    "description": "include your System.out.println() statment inside  some function or inside the main function.\n",
    "reg_date": "2021-10-12T12:07:34.000Z"
  },
  {
    "id": 4085,
    "keyword": null,
    "link": null,
    "title": " system.out.println shortcut",
    "description": "// Shortcut on Netbeans. Type sout and press Tab key. // Shortcut on Eclipse. Type syso and press Ctrl+space. // Shortcut on JDeveloper. Type sop and press Ctrl+Enter. // Shortcut on Intellij IDEA Type sout and press Tab key\n--eclipse syso: ctrl+Space --intelij sysout: ctrl+space\n",
    "reg_date": "2021-10-12T12:07:34.000Z"
  },
  {
    "id": 4086,
    "keyword": null,
    "link": null,
    "title": " system.out.write in java example",
    "description": "public class JavaPrintStreamWriteExample4 { public static void main(String[] args) { //out is the object class PrintStream. byte[] b= {115,104,117,98,104,97,109,95,106,97,100,111,110}; System.out.write(b, 0, 13); System.out.println(); System.out.print(\"Successfully printed byte array to this stream.\"); } \n",
    "reg_date": "2021-10-12T12:07:34.000Z"
  },
  {
    "id": 4087,
    "keyword": null,
    "link": null,
    "title": " systemtime java",
    "description": "System.currentTimeMillis();\n",
    "reg_date": "2021-10-12T12:07:34.000Z"
  },
  {
    "id": 4088,
    "keyword": null,
    "link": null,
    "title": " tableau de classe java",
    "description": "// d&eacute;clarer un tableau de classe Forme[] tabForme; // Construire le tableau (tableau de taille 2) tabForme = new Forme[2]; // D&eacute;clarer et construire le tableau sur une ligne Forme[] tabForme = new Forme[2]; // Changer la classe d'une case du tableau ( Triangle est une classe enfant de Forme) tabForme[0] = new Triangle(); // Afficher le nom de la classe d'une case du tableau tabForme[0].getClass().getName();\n",
    "reg_date": "2021-10-12T12:07:34.000Z"
  },
  {
    "id": 4089,
    "keyword": null,
    "link": null,
    "title": " tag' has private access in 'androidx.fragment.app.fragmentactivity'",
    "description": "private static final String TAG = \"MainActivity\"\n",
    "reg_date": "2021-10-12T12:07:34.000Z"
  },
  {
    "id": 4090,
    "keyword": null,
    "link": null,
    "title": " take a value from keyboard java",
    "description": "  import java.util.Scanner;  public class Main{     public static void main(String args[]){      Scanner scan= new Scanner(System.in);      //For string      String text= scan.nextLine();      System.out.println(text);      //for int      int num= scan.nextInt();      System.out.println(num);     }   /*Is better to create another instance of Scanner if you have to use both nextline    \tand nextInt because they can conflict each other   */    }\n",
    "reg_date": "2021-10-12T12:07:34.000Z"
  },
  {
    "id": 4091,
    "keyword": null,
    "link": null,
    "title": " take string array input in java",
    "description": "String[] array = new String[20];          System.out.println(\"Please enter 20 names to sort\");                       Scanner s1 = new Scanner(System.in);         for (int i = 0; i < 20;){              array[i] = s1.nextLine();           } \n",
    "reg_date": "2021-10-12T12:07:35.000Z"
  },
  {
    "id": 4092,
    "keyword": null,
    "link": null,
    "title": " take string until /",
    "description": "String filename = \"abc.def.ghi\";  String start = StringUtils.substringBefore(filename, \".\"); // returns \"abc\"\n",
    "reg_date": "2021-10-12T12:07:35.000Z"
  },
  {
    "id": 4093,
    "keyword": null,
    "link": null,
    "title": " taking date as input in java",
    "description": "import java.text.SimpleDateFormat; import java.util.Date; public class StringToDateExample1 { public static void main(String[] args)throws Exception { String sDate1=\"31/12/1998\"; Date date1=new SimpleDateFormat(\"dd/MM/yyyy\").parse(sDate1); System.out.println(sDate1+\"\\t\"+date1); }\n",
    "reg_date": "2021-10-12T12:07:35.000Z"
  },
  {
    "id": 4094,
    "keyword": null,
    "link": null,
    "title": " taking string input in java",
    "description": "Scanner in = new Scanner(System.in); String s = in.nextLine();\n",
    "reg_date": "2021-10-12T12:07:35.000Z"
  },
  {
    "id": 4095,
    "keyword": null,
    "link": null,
    "title": " terminate a frame java",
    "description": "Jframe frame = new Jframe(); int count = 0; if(count==10){   frame.setVisable(false);   frame.dispose(); }\nTo terminate/close a frame in AWT, use the 'dispose()' method  \"frameObject.dispose()\"\n",
    "reg_date": "2021-10-12T12:07:35.000Z"
  },
  {
    "id": 4096,
    "keyword": null,
    "link": null,
    "title": " ternary operator in java",
    "description": "int val1 = 10; int val2 = 20;  int max = val1 >= val2 ? val1 : val2; \nObject myObject = booleanExpression ? valueIfTrue : valueIfFalse;\n// variable= condition ? value if condition is True : value if condition is false // only ternary operator in java int max,a=1,b=2; max= a>b ? a : b;  //will result in max = b\nbooleanExpression ? expression1 : expression2; //expression1 if booleanExpression==true //expression2 if booleanExpression==false\nbooleanExpression ? expression1 : expression2;\nvariable = (expression) ? expressionIsTrue : expressionIsFalse;\n",
    "reg_date": "2021-10-12T12:07:35.000Z"
  },
  {
    "id": 4097,
    "keyword": null,
    "link": null,
    "title": " ternary operator in java for null check",
    "description": "String value = object != null ? object.getValue() : null;\n",
    "reg_date": "2021-10-12T12:07:35.000Z"
  },
  {
    "id": 4098,
    "keyword": null,
    "link": null,
    "title": " ternary operator java",
    "description": "int val1 = 10; int val2 = 20;  int max = val1 >= val2 ? val1 : val2; \nObject myObject = booleanExpression ? valueIfTrue : valueIfFalse;\n// variable= condition ? value if condition is True : value if condition is false // only ternary operator in java int max,a=1,b=2; max= a>b ? a : b;  //will result in max = b\nbooleanExpression ? expression1 : expression2; //expression1 if booleanExpression==true //expression2 if booleanExpression==false\nbooleanExpression ? expression1 : expression2;\nThe condition part of a ternary operator is followed by a question mark (?).  After the question mark are the two values the ternary operator can return, separated by a colon (:).  The values part consists of two values. The first value is returned if the condition parts evaluates to true. The second value is returned if the condition part evaluates to false.\n",
    "reg_date": "2021-10-12T12:07:35.000Z"
  },
  {
    "id": 4099,
    "keyword": null,
    "link": null,
    "title": " ternery java",
    "description": "int val1 = 10; int val2 = 20;  int max = val1 >= val2 ? val1 : val2; \nThe condition part of a ternary operator is followed by a question mark (?).  After the question mark are the two values the ternary operator can return, separated by a colon (:).  The values part consists of two values. The first value is returned if the condition parts evaluates to true. The second value is returned if the condition part evaluates to false.\n",
    "reg_date": "2021-10-12T12:07:35.000Z"
  },
  {
    "id": 4100,
    "keyword": null,
    "link": null,
    "title": " testException = com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field",
    "description": "ObjectMapper mapper = new ObjectMapper(); mapper.disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES); mapper.setVisibility(VisibilityChecker.Std.defaultInstance().withFieldVisibility(JsonAutoDetect.Visibility.ANY)); \n",
    "reg_date": "2021-10-12T12:07:36.000Z"
  },
  {
    "id": 4101,
    "keyword": null,
    "link": null,
    "title": " test if string is float java",
    "description": "public static void main(String[] args) {     String str = \"5588\";     //check if int     try{         Integer.parseInt(str);     }catch(NumberFormatException e){         //not int     }     //check if float     try{         Float.parseFloat(str);     }catch(NumberFormatException e){         //not float     } } \n",
    "reg_date": "2021-10-12T12:07:36.000Z"
  },
  {
    "id": 4102,
    "keyword": null,
    "link": null,
    "title": " test thrown expected with jupiter spring boot",
    "description": "@Test public void whenExceptionThrown_thenAssertionSucceeds() {     Exception exception = assertThrows(NumberFormatException.class, () -> {         Integer.parseInt(\"1a\");     });      String expectedMessage = \"For input string\";     String actualMessage = exception.getMessage();      assertTrue(actualMessage.contains(expectedMessage)); }\n",
    "reg_date": "2021-10-12T12:07:36.000Z"
  },
  {
    "id": 4103,
    "keyword": null,
    "link": null,
    "title": " testing if editText is empty java",
    "description": "if (TextUtils.isEmpty(editText.getText().toString())) {     Toast.makeText(MainActivity.this,                     \"Empty field not allowed!\",                    Toast.LENGTH_SHORT).show(); } else  {     Toast.makeText(MainActivity.this,                   \"Proceed..\",                   Toast.LENGTH_SHORT).show(); }\n",
    "reg_date": "2021-10-12T12:07:36.000Z"
  },
  {
    "id": 4104,
    "keyword": null,
    "link": null,
    "title": " testing the web layer without authentication spring",
    "description": "@RunWith(SpringRunner.class) @SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT) public class SecuredControllerRestTemplateIntegrationTest {       @Autowired     private TestRestTemplate template;       // ... other methods       @Test     public void givenAuthRequestOnPrivateService_shouldSucceedWith200() throws Exception {         ResponseEntity<String> result = template.withBasicAuth(\"spring\", \"secret\")           .getForEntity(\"/private/hello\", String.class);         assertEquals(HttpStatus.OK, result.getStatusCode());     } } \n",
    "reg_date": "2021-10-12T12:07:36.000Z"
  },
  {
    "id": 4105,
    "keyword": null,
    "link": null,
    "title": " text.settextcolor android",
    "description": "mTextView.setTextColor(Color.parseColor(\"#bdbdbd\"));\n//From API 23 onward, getResources().getColor() is deprecated. textView.setTextColor(ContextCompat.getColor(getApplicationContext(), R.color.color_black)); \n",
    "reg_date": "2021-10-12T12:07:36.000Z"
  },
  {
    "id": 4106,
    "keyword": null,
    "link": null,
    "title": " textarea user select disable java swing",
    "description": "JtextArea.setHighlighter(null);\n",
    "reg_date": "2021-10-12T12:07:36.000Z"
  },
  {
    "id": 4107,
    "keyword": null,
    "link": null,
    "title": " textfield set value flutter",
    "description": "/// You can use a [TextFormField] instead of [TextField] /// and use the [initialValue] property. for example:  TextFormField(initialValue: \"I am smart\")\n",
    "reg_date": "2021-10-12T12:07:36.000Z"
  },
  {
    "id": 4108,
    "keyword": null,
    "link": null,
    "title": " textview set drawable right programmatically",
    "description": "TextView textView = (TextView) findViewById(R.id.myTxtView); textView.setCompoundDrawablesWithIntrinsicBounds(R.drawable.icon, 0, 0, 0); \n",
    "reg_date": "2021-10-12T12:07:36.000Z"
  },
  {
    "id": 4109,
    "keyword": null,
    "link": null,
    "title": " textview set text bold programmatically",
    "description": "textView.setTypeface(null, Typeface.BOLD_ITALIC); textView.setTypeface(null, Typeface.BOLD); textView.setTypeface(null, Typeface.ITALIC); textView.setTypeface(null, Typeface.NORMAL);  //To keep the previous typeface  textView.setTypeface(textView.getTypeface(), Typeface.BOLD_ITALIC)\n",
    "reg_date": "2021-10-12T12:07:36.000Z"
  },
  {
    "id": 4110,
    "keyword": null,
    "link": null,
    "title": " thank you coronavirus helpers",
    "description": "# STAY HOME\nThank you to the coronavirus helpers! #Stay_Home #Be_Safe \nSystem.out.println(\"Thank you coronavirus helpers\");\n<h1>Thanks coronavirus helpers!</h1> <p>Everyone reading this, we will get through this together -    really, we will. But we will only get through this with the help   of everyone behind the scenes working to stop the pandemic. I'm a    12-year-old, so things really scare me. Even so, I will (like   everyone else) be brave and face my fears. Thank you. No seriously   thank you people helping to stop COVID-19! From truck drivers to   social workers to nurses, we all thank you from the bottom of   our hearts. </p>\n<?php echo \"Thank you coronavirus helpers\"; ?>\n#StayHome StaySafe print(\"Thankyou coronavirus helper\")\nWear Mask,maintain social distancing & wash hands And thanks to all covid warriors including  doctors,nurses,police officer,transport service,daily needs supplier each & everyone  from deep of my heart We are still fighting with this virus so, stay at home and take care of everyone especially elder ones #NeverGiveUp #SaveHumanity\nThanks a lot, coronavirus helpers!!! #WearAMask #StaySafe\n<h1>Thank you coronavirus helpers, without your help we are nothing  in this situation. #MaskOnFace</h1>\nThanks for helping us slow the spread of Cov-19  coronavirus helpers! #Stay_Home #Be_Safe \n",
    "reg_date": "2021-10-12T12:07:36.000Z"
  },
  {
    "id": 4111,
    "keyword": null,
    "link": null,
    "title": " the result o trim is ignored java",
    "description": "//String objects are immutable. String output = StringUtils.trimWhitespace(input);\n",
    "reg_date": "2021-10-12T12:07:37.000Z"
  },
  {
    "id": 4112,
    "keyword": null,
    "link": null,
    "title": " the type javax.servlet.ServletException cannot be resolved. It is indirectly referenced from required .class files",
    "description": "<dependency>     <groupId>javax.servlet</groupId>     <artifactId>javax.servlet-api</artifactId>     <version>3.1.0</version>     <scope>provided</scope> </dependency>\n<dependency>     <groupId>javax</groupId>     <artifactId>javaee-api</artifactId>     <version>7.0</version>     <scope>provided</scope> </dependency>\n",
    "reg_date": "2021-10-12T12:07:37.000Z"
  },
  {
    "id": 4113,
    "keyword": null,
    "link": null,
    "title": " thread example in android",
    "description": "//if your project supports java8, you can implement with lambda function new Thread(() -> {         // do background stuff here         runOnUiThread(()->{             // OnPostExecute stuff here         });     }).start();\n",
    "reg_date": "2021-10-12T12:07:37.000Z"
  },
  {
    "id": 4114,
    "keyword": null,
    "link": null,
    "title": " thread join java",
    "description": "class ThreadJoining extends Thread  {      @Override     public void run()      {          for (int i = 0; i < 2; i++)          {              try             {                  Thread.sleep(500);                  System.out.println(\"Current Thread: \"                         + Thread.currentThread().getName());              }                 catch(Exception ex)              {                  System.out.println(\"Exception has\" +                                  \" been caught\" + ex);              }              System.out.println(i);          }      }  }     class GFG  {      public static void main (String[] args)      {          ThreadJoining t1 = new ThreadJoining();          ThreadJoining t2 = new ThreadJoining();          ThreadJoining t3 = new ThreadJoining();          t1.start();          try         {              System.out.println(\"Current Thread: \"                   + Thread.currentThread().getName());              t1.join();          }          catch(Exception ex)          {              System.out.println(\"Exception has \" +                                  \"been caught\" + ex);          }          t2.start();          try         {              System.out.println(\"Current Thread: \"                  + Thread.currentThread().getName());              t2.join();          }          catch(Exception ex)          {              System.out.println(\"Exception has been\" +                                      \" caught\" + ex);          }          t3.start();      }  } \n",
    "reg_date": "2021-10-12T12:07:37.000Z"
  },
  {
    "id": 4115,
    "keyword": null,
    "link": null,
    "title": " thread priority in java",
    "description": "class TestMultiPriority1 extends Thread{    public void run(){      System.out.println(\"running thread name is:\"+Thread.currentThread().getName());      System.out.println(\"running thread priority is:\"+Thread.currentThread().getPriority());        }    public static void main(String args[]){     TestMultiPriority1 m1=new TestMultiPriority1();     TestMultiPriority1 m2=new TestMultiPriority1();     m1.setPriority(Thread.MIN_PRIORITY);     m2.setPriority(Thread.MAX_PRIORITY);     m1.start();     m2.start();        }   }     \n",
    "reg_date": "2021-10-12T12:07:37.000Z"
  },
  {
    "id": 4116,
    "keyword": null,
    "link": null,
    "title": " thread sleep function",
    "description": " package com.journaldev.threads;  public class ThreadSleep {      public static void main(String[] args) throws InterruptedException {         long start = System.currentTimeMillis();         Thread.sleep(2000);         System.out.println(\"Sleep time in ms = \"+(System.currentTimeMillis()-start));              }  } \n",
    "reg_date": "2021-10-12T12:07:37.000Z"
  },
  {
    "id": 4117,
    "keyword": null,
    "link": null,
    "title": " thread sleep java",
    "description": "import java.util.concurrent.TimeUnit  TimeUnit.SECONDS.sleep(1); or TimeUnit.MINUTES.sleep(1);\n package com.journaldev.threads;  public class ThreadSleep {      public static void main(String[] args) throws InterruptedException {         long start = System.currentTimeMillis();         Thread.sleep(2000);         System.out.println(\"Sleep time in ms = \"+(System.currentTimeMillis()-start));              }  } \nimport java.util.concurrent.TimeUnit  try { \tTimeUnit.SECONDS.sleep(1); } catch (Exception e) { \tSystem.out.println(\"Oops! Something went wrong!\") }\nThread.sleep(2000);\n",
    "reg_date": "2021-10-12T12:07:37.000Z"
  },
  {
    "id": 4118,
    "keyword": null,
    "link": null,
    "title": " threads java",
    "description": "Set<Thread> threadSet = Thread.getAllStackTraces().keySet();\npublic class ClassName extends Thread{   public void run(){     super.run();     //Your Code   } }  public class Main{   public static void main(String[] args){     ClassName thread = new ClassName();     thread.start();   } }\n// Copy and test // They run simultaneously  public static void main(String[] args) {   \t\t// How to create a thread         Thread thread = new Thread(new Runnable() {             @Override \t\t\t// Loop running in thread             public void run() {                 for (int i = 0; i < 20; i++) {                     System.out.println(\"Printing plus \" + i + \" in a worker thread.\");                     try {                         Thread.sleep(1000);                     } catch(Exception e) {                         e.printStackTrace();                     }                 }             }         });         thread.start();   \t\t// Loop running in main thread          for (int j = 0; j < 20 ; j++) {             System.out.println(\"Printing plus \" + j + \" in a main thread.\");             try {                 Thread.sleep(900);             } catch(Exception e) {                 e.printStackTrace();             }         }         }\nclass MultithreadingDemo extends Thread{     public void run(){       System.out.println(\"My thread is in running state.\");     }      public static void main(String args[]){        MultithreadingDemo obj=new MultithreadingDemo();         obj.start();     }   }\npublic static void main(String[] args {    ...    Thread t1= new Thread(...);    t1.start();    ... }\n",
    "reg_date": "2021-10-12T12:07:37.000Z"
  },
  {
    "id": 4119,
    "keyword": null,
    "link": null,
    "title": " throw and throws keyword in java",
    "description": "public void doChangePin(int oldPin, int pin) throws Exception {\t//need to add throws followed by exception name \t\tif (oldPin == pinCode) { \t\t\tpinCode = pin; \t\t} else { \t\t\tthrow new Exception(\"some message\");\t//throwing the exception by creating its new object \t\t} \t}\nGenerally JVM throws the exception and we handle the exceptions by  using try catch block. But there are situations where we have to throw  userdefined exceptions or runtime exceptions.   In such case we use throw keyword  to throw exception explicitly.    Syntax : throw throwableInstance;  \nThrows keyword used for handling exceptions.    Where do you use it? Methods signature.   If you want to handling right away in selenium or Api use &ldquo;throws&rdquo; keyword. Throw is creating an exception. Basically there are doing opposite.  Where do you use it? We use it with in the block.\n",
    "reg_date": "2021-10-12T12:07:37.000Z"
  },
  {
    "id": 4120,
    "keyword": null,
    "link": null,
    "title": " throw error java",
    "description": "public static void foo() throws IOException {     // some code here, when something goes wrong, you might do:     throw new IOException(\"error message\"); }  public static void main(String[] args) {     try {         foo();     } catch (IOException e) {         System.out.println(e.getMessage());     } }\npublic void doChangePin(int oldPin, int pin) throws Exception {\t//need to add throws followed by exception name \t\tif (oldPin == pinCode) { \t\t\tpinCode = pin; \t\t} else { \t\t\tthrow new Exception(\"some message\");\t//throwing the exception by creating its new object \t\t} \t}\npublic static void main(String[] args) { \tScanner kb = new Scanner(System.in);     System.out.println(\"Enter a number\");     try {     \tdouble nb1 = kb.nextDouble();     \tif(nb1<0)         \tthrow new ArithmeticException();         else System.out.println( \"result : \" + Math.sqrt(nb1) );     } catch (ArithmeticException e) {         System.out.println(\"You tried an impossible sqrt\");     } }\n/* In this program we are checking the Student age  * if the student age<12 and weight <40 then our program   * should return that the student is not eligible for registration.  */ public class ThrowExample {    static void checkEligibilty(int stuage, int stuweight){        if(stuage<12 && stuweight<40) {          throw new ArithmeticException(\"Student is not eligible for registration\");        }       else {          System.out.println(\"Student Entry is Valid!!\");        }    }      public static void main(String args[]){       System.out.println(\"Welcome to the Registration process!!\");      checkEligibilty(10, 39);       System.out.println(\"Have a nice day..\");   }  }\nthrow new java.lang.Error(\"this is very bad\"); throw new java.lang.RuntimeException(\"this is not quite as bad\");\nGenerally JVM throws the exception and we handle the exceptions by  using try catch block. But there are situations where we have to throw  userdefined exceptions or runtime exceptions.   In such case we use throw keyword  to throw exception explicitly.    Syntax : throw throwableInstance;  \n",
    "reg_date": "2021-10-12T12:07:37.000Z"
  },
  {
    "id": 4121,
    "keyword": null,
    "link": null,
    "title": " throw io exception java",
    "description": "public static void foo() throws IOException {     // some code here, when something goes wrong, you might do:     throw new IOException(\"error message\"); }  public static void main(String[] args) {     try {         foo();     } catch (IOException e) {         System.out.println(e.getMessage());     } }\npublic static void main(String[] args) { \tScanner kb = new Scanner(System.in);     System.out.println(\"Enter a number\");     try {     \tdouble nb1 = kb.nextDouble();     \tif(nb1<0)         \tthrow new ArithmeticException();         else System.out.println( \"result : \" + Math.sqrt(nb1) );     } catch (ArithmeticException e) {         System.out.println(\"You tried an impossible sqrt\");     } }\nthrow new java.lang.Error(\"this is very bad\"); throw new java.lang.RuntimeException(\"this is not quite as bad\");\n",
    "reg_date": "2021-10-12T12:07:37.000Z"
  },
  {
    "id": 4122,
    "keyword": null,
    "link": null,
    "title": " throwing exceptions java",
    "description": "/* In this program we are checking the Student age  * if the student age<12 and weight <40 then our program   * should return that the student is not eligible for registration.  */ public class ThrowExample {    static void checkEligibilty(int stuage, int stuweight){        if(stuage<12 && stuweight<40) {          throw new ArithmeticException(\"Student is not eligible for registration\");        }       else {          System.out.println(\"Student Entry is Valid!!\");        }    }      public static void main(String args[]){       System.out.println(\"Welcome to the Registration process!!\");      checkEligibilty(10, 39);       System.out.println(\"Have a nice day..\");   }  }\n",
    "reg_date": "2021-10-12T12:07:38.000Z"
  },
  {
    "id": 4123,
    "keyword": null,
    "link": null,
    "title": " thymeleaf Request method 'POST' not supportedorg.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported",
    "description": "// FOR DELETE METHODS THIS CONFIG MAY BE NECESSARY IN YOUR app.properties:  spring.mvc.hiddenmethod.filter.enabled=true\n",
    "reg_date": "2021-10-12T12:07:38.000Z"
  },
  {
    "id": 4124,
    "keyword": null,
    "link": null,
    "title": " thymeleaf string not equal",
    "description": "th:if=\"${!#strings.equals(param.size, '10')}\"\n",
    "reg_date": "2021-10-12T12:07:38.000Z"
  },
  {
    "id": 4125,
    "keyword": null,
    "link": null,
    "title": " time",
    "description": "import time  start = time.time() print(\"hello\") end = time.time() print(end - start)\n// get current time in java using LocalTime.now() method  import java.time.LocalTime; public class UsingLocalDate {    public static void main(String[] args)    {       System.out.println(LocalTime.now());      // hr : min : sec.fimto sec    } }\nlook in your house, must have clock somewhere right?\nconsole.log(new Date().toUTCString());  // IF YOU REALLY WANT THE TIME, JUST LOOK AT YOUR SYSTEM CLOCK BTW.\n#python import time\na+a-b*(2345) x b = \n>>> from DateTime import DateTime >>> e = DateTime('US/Eastern') >>> e.timezone() 'US/Eastern' \n10' \nতুমি কোন দেশের?\n[     '%Y-%m-%d %H:%M:%S',     # '2006-10-25 14:30:59'     '%Y-%m-%d %H:%M:%S.%f',  # '2006-10-25 14:30:59.000200'     '%Y-%m-%d %H:%M',        # '2006-10-25 14:30'     '%m/%d/%Y %H:%M:%S',     # '10/25/2006 14:30:59'     '%m/%d/%Y %H:%M:%S.%f',  # '10/25/2006 14:30:59.000200'     '%m/%d/%Y %H:%M',        # '10/25/2006 14:30'     '%m/%d/%y %H:%M:%S',     # '10/25/06 14:30:59'     '%m/%d/%y %H:%M:%S.%f',  # '10/25/06 14:30:59.000200'     '%m/%d/%y %H:%M',        # '10/25/06 14:30' ] \n",
    "reg_date": "2021-10-12T12:07:38.000Z"
  },
  {
    "id": 4126,
    "keyword": null,
    "link": null,
    "title": " time complexity of hashset java add",
    "description": "Time complexity of hashset in java for adding, removing, or containing has a constant time complexity\n",
    "reg_date": "2021-10-12T12:07:38.000Z"
  },
  {
    "id": 4127,
    "keyword": null,
    "link": null,
    "title": " timers in android studio",
    "description": "// a simple 5 second timer in android studio // the first value is the duration of timer in miliseconds // and second value is intervale of one tick in miliseconds CountDownTimer timer = new CountDownTimer(5000, 1000) {             @Override             public void onTick(long millisUntilFinished) {               // divide the millisUntilFinished by 1000 because it is in miliseconds                 int sec = Integer.parseInt(String.valueOf(millisUntilFinished / 1000));                  Log.i(TAG, \"secs left\" + sec );                  binding.timeProgress.setProgress(0);             }              @Override             public void onFinish() {              }         };  // and add {timer.start()} where you have to strt the timer // and add {timer.cancle()} where you have to cancle it\n",
    "reg_date": "2021-10-12T12:07:38.000Z"
  },
  {
    "id": 4128,
    "keyword": null,
    "link": null,
    "title": " toString convert to long",
    "description": " long l = 12345L; String str = Long.toString(l); System.out.println(str); //prints '12345' \n long l = 12345L; String str = new StringBuilder().append(l).toString(); \n long l = 0x11L; String str = Long.toString(l); System.out.println(str); //prints '17' l = 011L; str = Long.toString(l); System.out.println(str); //prints '9' \n package com.journaldev.string;  import java.text.DecimalFormat;  public class JavaLongToString {  \t@SuppressWarnings(\"deprecation\") \tpublic static void main(String[] args) { \t\tlong l = 12345L; \t\tString str = Long.toString(l); \t\tSystem.out.println(str);  \t\tstr = String.valueOf(l); \t\tSystem.out.println(str);  \t\t// deprecated from Java 9, use valueOf for better performance \t\tstr = new Long(l).toString(); \t\tSystem.out.println(str);  \t\tstr = String.format(\"%d\", l); \t\tSystem.out.println(str);  \t\tstr = l + \"\"; \t\tSystem.out.println(str);  \t\tstr = DecimalFormat.getNumberInstance().format(l); \t\tSystem.out.println(str);  \t\tstr = new DecimalFormat(\"#\").format(l); \t\tSystem.out.println(str);  \t\tstr = new StringBuilder().append(l).toString(); \t\tSystem.out.println(str); \t} } \n long l = 12345L; //deprecated from Java 9, use valueOf for better performance String str = new Long(l).toString(); // str is '12345' \n long l = 369L; String s = String.format(\"%d\", l); \n long l = 12345L; String str = String.valueOf(l); // str is '12345' \n long number = 45; System.out.println(Long.toBinaryString(number)); //101101 System.out.println(Long.toOctalString(number)); //55 System.out.println(Long.toHexString(number)); //2d System.out.println(Long.toString(number, 5)); //140 \n long l = 12345L; String str = DecimalFormat.getNumberInstance().format(l); System.out.println(str); //str is '12,345' //if you don't want formatting str = new DecimalFormat(\"#\").format(l); System.out.println(str); //str is '12345' \n",
    "reg_date": "2021-10-12T12:07:38.000Z"
  },
  {
    "id": 4129,
    "keyword": null,
    "link": null,
    "title": " to get sum of even digits java",
    "description": "//To find the sum of even digits in a given Number      public static int getEvenDigitSum(int number){         if(number<0){             return -1;         }         int finalNumber=0;         while(number>0){            if((number\u0010)%2==0){                finalNumber+=number\u0010;             }            number=number/10; //takes out last digit to test the next digit           }         return finalNumber;     } //Output: ex:number=12323 -- Ans: 4\n",
    "reg_date": "2021-10-12T12:07:38.000Z"
  },
  {
    "id": 4130,
    "keyword": null,
    "link": null,
    "title": " toast.maketext error kotlin",
    "description": "// Only for fragments Toast.makeText(getContext(), \"Your Message\", Toast.LENGTH_SHORT).show()\nToast.makeText(this, \".....\", Toast.LENGTH_SHORT).show\n//Only for fragments Toast.makeText(getContext(), \"Your Message\", Toast.LENGTH_SHORT).show()\n",
    "reg_date": "2021-10-12T12:07:38.000Z"
  },
  {
    "id": 4131,
    "keyword": null,
    "link": null,
    "title": " toast java example",
    "description": "Toast.makeText(getApplicationContext(),\"Hello Javatpoint\",Toast.LENGTH_SHORT).show();\nToast.makeText(context this, text \"Example of Text\", Toast.LENGTH_LONG).show();\nToast.makeText(this, \"Mmm Toasty\", Toast.LENGTH_LONG).show();\n",
    "reg_date": "2021-10-12T12:07:38.000Z"
  },
  {
    "id": 4132,
    "keyword": null,
    "link": null,
    "title": " top wishlisted games on steam",
    "description": "Now If You Don't Know What Karlson is ,Its Just a 3D Fps Pakour Puzzle Game That Made A By A Guy Called DANI Karlson is just 14th most wishlist game on steam so go press that thicc wishlist to karlson on steam And Go Subscribe To Awesome Milk Coding Dude Dani and Drink You Milk and Beat Your Bi........  https://www.youtube.com/channel/UCIabPXjvT5BVTxRDPCBBOOQ\nwhishlist karlson on steam\nNow if you dont know what Karlson is, it's a game that Dani is working on. It is currently the 13th most wishlisten game on steam. Help us to get to number 1 boners\nSteam.getGames().stream().forEach((game) -> {    if(game.getName().equals(\"Karlson\") {     game.wishList();   } });    // Wishlist karlson <3\nWhat up GAMERS!!\nWHISHLIST KARLSON NOW\n",
    "reg_date": "2021-10-12T12:07:39.000Z"
  },
  {
    "id": 4133,
    "keyword": null,
    "link": null,
    "title": " transformer un string en double java",
    "description": "String s = \"10.1\"; Double d = Double.parseDouble(s);\ndouble d = Double.parseDouble(aString);\nString text = \"12.34\"; // example String double value = Double.parseDouble(text);\nString number = \"123,321\"; double value = Double.parseDouble( number.replace(\",\",\".\") );\nString doubleAsString = \"23.23\"; BigDecimal price = new BigDecimal(doubleAsString); BigDecimal total = price.plus(anotherPrice);\ndouble total = Double.parseDouble(jlbTotal.getText()); double price = Double.parseDouble(jlbPrice.getText());\n",
    "reg_date": "2021-10-12T12:07:39.000Z"
  },
  {
    "id": 4134,
    "keyword": null,
    "link": null,
    "title": " transformez integer en string",
    "description": "  public class ConvertirIntEnString {   public static void main(String[] args) {       int unInt = 1;       String aString = Integer.toString(unInt);     } }\n",
    "reg_date": "2021-10-12T12:07:39.000Z"
  },
  {
    "id": 4135,
    "keyword": null,
    "link": null,
    "title": " transparent dialog in android",
    "description": " dialog.getWindow().setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT)); \nthis.window?.setBackgroundDrawableResource(android.R.color.transparent)\n",
    "reg_date": "2021-10-12T12:07:39.000Z"
  },
  {
    "id": 4136,
    "keyword": null,
    "link": null,
    "title": " transpose of a matrix in java without using second matrix",
    "description": "import java.util.Scanner; public class MatrixTransposeInJava {    public static void main(String[] args)    {       int[][] arrGiven = {{2,4,6},{8,1,3},{5,7,9}};\t           // another matrix to store transpose of matrix         int[][] arrTranspose = new int[3][3];\t           // transpose matrix code         for(int a = 0; a < 3; a++)       {              for(int b = 0; b < 3; b++)          {                 arrTranspose[a][b] = arrGiven[b][a];            }        }\t         System.out.println(\"Before matrix transpose: \");         for(int a = 0; a < 3; a++)       {              for(int b = 0; b < 3; b++)          {                 System.out.print(arrGiven[a][b] + \" \");              }           System.out.println();       }           System.out.println(\"After matrix transpose: \");         for(int a = 0; a < 3; a++)       {              for(int b = 0; b < 3; b++)          {                 System.out.print(arrTranspose[a][b] + \" \");              }           System.out.println();       }    } }\n// transpose of a matrix in java without using second matrix import java.util.Scanner; public class WithoutSecondMatrix {    public static void main(String[] args)    {       Scanner sc = new Scanner(System.in);       int a, b, row, column, temp;       System.out.println(\"Please enter number of rows: \");       row = sc.nextInt();       System.out.println(\"Please enter the number of columns: \");       column = sc.nextInt();       int[][] matrix = new int[row][column];       System.out.println(\"Please enter elements of matrix: \");       for(a = 0; a < row; a++)       {          for(b = 0; b < column; b++)          {             matrix[a][b] = sc.nextInt();          }       }       System.out.println(\"Elements of the matrix: \");       for(a = 0; a < row; a++)       {          for(b = 0; b < column; b++)          {             System.out.print(matrix[a][b] + \"\\t\");          }          System.out.println(\"\");       }       // transpose of a matrix       for(a = 0; a < row; a++)       {          for(b = 0; b < a; b++)          {             temp = matrix[a][b];             matrix[a][b] = matrix[b][a];             matrix[b][a] = temp;          }       }       System.out.println(\"transpose of a matrix without using second matrix: \");       for(a = 0; a < row; a++)       {          for(b = 0; b < column; b++)          {             System.out.print(matrix[a][b] + \"\\t\");          }          System.out.println(\"\");       }       sc.close();    } }\nfor (int row = 0; row < matrix.length; row++) {         for (int col = row; col < matrix[row].length; col++)     {     \t// Swap       \tint data = matrix[row][col];     \tmatrix[row][col] = matrix[col][row];    \t\tmatrix[col][row] = data;    }      }\n",
    "reg_date": "2021-10-12T12:07:39.000Z"
  },
  {
    "id": 4137,
    "keyword": null,
    "link": null,
    "title": " transpose of a matrix java",
    "description": "import java.util.Scanner; public class MatrixTransposeInJava {    public static void main(String[] args)    {       int[][] arrGiven = {{2,4,6},{8,1,3},{5,7,9}};\t           // another matrix to store transpose of matrix         int[][] arrTranspose = new int[3][3];\t           // transpose matrix code         for(int a = 0; a < 3; a++)       {              for(int b = 0; b < 3; b++)          {                 arrTranspose[a][b] = arrGiven[b][a];            }        }\t         System.out.println(\"Before matrix transpose: \");         for(int a = 0; a < 3; a++)       {              for(int b = 0; b < 3; b++)          {                 System.out.print(arrGiven[a][b] + \" \");              }           System.out.println();       }           System.out.println(\"After matrix transpose: \");         for(int a = 0; a < 3; a++)       {              for(int b = 0; b < 3; b++)          {                 System.out.print(arrTranspose[a][b] + \" \");              }           System.out.println();       }    } }\n  //Transpose a Matrix    for (int row = 0; row < matrix.length; row++) {         for (int col = row; row < matrix[row].length; col++)     {     \t// Swap       \tint data = matrix[row][col];     \tmatrix[row][col] = matrix[col][row];    \t\tmatrix[col][row] = data;    }      }\nfor (int row = 0; row < matrix.length; row++) {         for (int col = row; col < matrix[row].length; col++)     {     \t// Swap       \tint data = matrix[row][col];     \tmatrix[row][col] = matrix[col][row];    \t\tmatrix[col][row] = data;    }      }\n",
    "reg_date": "2021-10-12T12:07:39.000Z"
  },
  {
    "id": 4138,
    "keyword": null,
    "link": null,
    "title": " traversal of list in java",
    "description": "import java.util.ArrayList; import java.util.Iterator;  public class IteratorSample {    public static void main(String[] args) {       ArrayList<String> list = new ArrayList<String>();       list.add(\"JavaFx\");       list.add(\"Java\");       list.add(\"WebGL\");       list.add(\"OpenCV\");       Iterator iterator = list.iterator();       while(iterator.hasNext()) {          System.out.println(iterator.next());       }    } }\n",
    "reg_date": "2021-10-12T12:07:39.000Z"
  },
  {
    "id": 4139,
    "keyword": null,
    "link": null,
    "title": " tree data structure in java",
    "description": "package MyPackage;    public class Tree {      static class Node {         int value;          Node left, right;                     Node(int value){              this.value = value;              left = null;              right = null;          }      }              public void insert(Node node, int value) {         if (value < node.value) {            \tif (node.left != null) {                \tinsert(node.left, value);              } else {                System.out.println(\" Inserted \" + value + \" to left of \" + node.value);                node.left = new Node(value);              }          } else if (value > node.value) {           if (node.right != null) {             insert(node.right, value);           } else {             System.out.println(\"  Inserted \" + value + \" to right of \"                 + node.value);             node.right = new Node(value);           }         }       }      public void traverseInOrder(Node node) {         if (node != null) {             traverseInOrder(node.left);             System.out.print(\" \" + node.value);             traverseInOrder(node.right);         }      }            public static void main(String args[])      {      Tree tree = new Tree();                 Node root = new Node(5);                 System.out.println(\"Binary Tree Example\");                 System.out.println(\"Building tree with root value \" + root.value);                 tree.insert(root, 2);                 tree.insert(root, 4);                 tree.insert(root, 8);                 tree.insert(root, 6);                 tree.insert(root, 7);                 tree.insert(root, 3);                 tree.insert(root, 9);                 System.out.println(\"Traversing tree in order\");                 tree.traverseLevelOrder();                                } }    \npackage MyPackage;    public class Tree {      static class Node {         int value;          Node left, right;                     Node(int value){              this.value = value;              left = null;              right = null;          }      }              public void insert(Node node, int value) {         if (value < node.value) { if (node.left != null) { insert(node.left, value); } else { System.out.println(\" Inserted \" + value + \" to left of \" + node.value); node.left = new Node(value); } } else if (value > node.value) {           if (node.right != null) {             insert(node.right, value);           } else {             System.out.println(\"  Inserted \" + value + \" to right of \"                 + node.value);             node.right = new Node(value);           }         }       }      public void traverseInOrder(Node node) {         if (node != null) {             traverseInOrder(node.left);             System.out.print(\" \" + node.value);             traverseInOrder(node.right);         }      }            public static void main(String args[])      {      Tree tree = new Tree();                 Node root = new Node(5);                 System.out.println(\"Binary Tree Example\");                 System.out.println(\"Building tree with root value \" + root.value);                 tree.insert(root, 2);                 tree.insert(root, 4);                 tree.insert(root, 8);                 tree.insert(root, 6);                 tree.insert(root, 7);                 tree.insert(root, 3);                 tree.insert(root, 9);                 System.out.println(\"Traversing tree in order\");                 tree.traverseLevelOrder();                                } }\n",
    "reg_date": "2021-10-12T12:07:39.000Z"
  },
  {
    "id": 4140,
    "keyword": null,
    "link": null,
    "title": " trees in java",
    "description": "package MyPackage;    public class Tree {      static class Node {         int value;          Node left, right;                     Node(int value){              this.value = value;              left = null;              right = null;          }      }              public void insert(Node node, int value) {         if (value < node.value) {            \tif (node.left != null) {                \tinsert(node.left, value);              } else {                System.out.println(\" Inserted \" + value + \" to left of \" + node.value);                node.left = new Node(value);              }          } else if (value > node.value) {           if (node.right != null) {             insert(node.right, value);           } else {             System.out.println(\"  Inserted \" + value + \" to right of \"                 + node.value);             node.right = new Node(value);           }         }       }      public void traverseInOrder(Node node) {         if (node != null) {             traverseInOrder(node.left);             System.out.print(\" \" + node.value);             traverseInOrder(node.right);         }      }            public static void main(String args[])      {      Tree tree = new Tree();                 Node root = new Node(5);                 System.out.println(\"Binary Tree Example\");                 System.out.println(\"Building tree with root value \" + root.value);                 tree.insert(root, 2);                 tree.insert(root, 4);                 tree.insert(root, 8);                 tree.insert(root, 6);                 tree.insert(root, 7);                 tree.insert(root, 3);                 tree.insert(root, 9);                 System.out.println(\"Traversing tree in order\");                 tree.traverseLevelOrder();                                } }    \npackage MyPackage;    public class Tree {      static class Node {         int value;          Node left, right;                     Node(int value){              this.value = value;              left = null;              right = null;          }      }              public void insert(Node node, int value) {         if (value < node.value) { if (node.left != null) { insert(node.left, value); } else { System.out.println(\" Inserted \" + value + \" to left of \" + node.value); node.left = new Node(value); } } else if (value > node.value) {           if (node.right != null) {             insert(node.right, value);           } else {             System.out.println(\"  Inserted \" + value + \" to right of \"                 + node.value);             node.right = new Node(value);           }         }       }      public void traverseInOrder(Node node) {         if (node != null) {             traverseInOrder(node.left);             System.out.print(\" \" + node.value);             traverseInOrder(node.right);         }      }            public static void main(String args[])      {      Tree tree = new Tree();                 Node root = new Node(5);                 System.out.println(\"Binary Tree Example\");                 System.out.println(\"Building tree with root value \" + root.value);                 tree.insert(root, 2);                 tree.insert(root, 4);                 tree.insert(root, 8);                 tree.insert(root, 6);                 tree.insert(root, 7);                 tree.insert(root, 3);                 tree.insert(root, 9);                 System.out.println(\"Traversing tree in order\");                 tree.traverseLevelOrder();                                } }\n// java treeset example import java.util.Iterator; import java.util.TreeSet; public class TreeSetExamples {    public static void main(String[] args)    {       TreeSet<String> ts = new TreeSet<String>();       ts.add(\"red\");       ts.add(\"blue\");       ts.add(\"green\");       ts.add(\"red\");       Iterator<String> iterate = ts.iterator();       while(iterate.hasNext())       {          System.out.println(iterate.next());       }    } }\nimport java.util.*;  // Declare the variable using the interface of the object for flexibility. // Non-primative data types only. Set<String> movies = new TreeSet<String>();  movies.add(E); // TreeSet will be sorted by element. // Work with any comparable object.  movies.add(\"The Shining\"); movies.add(\"Dawn of the Dead\"); movies.add(\"Zombieland\");\n- TreeSet sorts the order and don't accept null \n",
    "reg_date": "2021-10-12T12:07:39.000Z"
  },
  {
    "id": 4141,
    "keyword": null,
    "link": null,
    "title": " triplet in array",
    "description": "import java.io.*; import java.util.*;   public class Main {   public static void main (String[]args)   {       int a[] = { 1,2,3,4,5,6};      int n = a.length;                        for(int i=0;i<n-1;i++){         int l = i+1;         int r = n-1;         int x = a[i];          while(l<r){              System.out.print(\"(\"+ x +\",\"+ a[l] +\",\"+ a[r]+\") \");              r--;          }      }      } }\n",
    "reg_date": "2021-10-12T12:07:40.000Z"
  },
  {
    "id": 4142,
    "keyword": null,
    "link": null,
    "title": " try and catch keywords in java",
    "description": "try {   // Code that may have error } catch(ErrorName e){   // Another code }\ntry block: code that is protected for any exceptions. and it is mandatory  (only try) catch block: if any exception happens during runtime in the try block,  the catch block will catch that exception. if any exception happens during runtime in the try block,  control will be given to catch block. An optional finally block gives us a chance to run the code which  we want to execute EVERYTIME a try-catch block is completed  &ndash; either with errors or without any error.\n",
    "reg_date": "2021-10-12T12:07:40.000Z"
  },
  {
    "id": 4143,
    "keyword": null,
    "link": null,
    "title": " try block in java",
    "description": "try {   // Code that may have error } catch(ErrorName e){   // Another code }\npublic class MyClass {   public static void main(String[ ] args) {     try {       int[] myNumbers = {1, 2, 3, 4, 5, 6};       System.out.println(myNumbers[10]);     } catch (Exception e) {       System.out.println(\"Something went wrong. check again\");     }   } }  \ntry {   //  Block of code to try } catch(Exception e) {   //  Block of code to handle errors }\ntry block: code that is protected for any exceptions. and it is mandatory  (only try) catch block: if any exception happens during runtime in the try block,  the catch block will catch that exception. if any exception happens during runtime in the try block,  control will be given to catch block. An optional finally block gives us a chance to run the code which  we want to execute EVERYTIME a try-catch block is completed  &ndash; either with errors or without any error.\n",
    "reg_date": "2021-10-12T12:07:40.000Z"
  },
  {
    "id": 4144,
    "keyword": null,
    "link": null,
    "title": " try catch in java",
    "description": "Java try block is used to enclose the code that might throw an exception\ntry {   // Code that may have error } catch(ErrorName e){   // Another code }\npublic class MyClass {   public static void main(String[ ] args) {     try {       int[] myNumbers = {1, 2, 3, 4, 5, 6};       System.out.println(myNumbers[10]);     } catch (Exception e) {       System.out.println(\"Something went wrong. check again\");     }   } }  \ntry {   // Code to try, which is throwing an Exception, e.g.   /*example*/ Thread.sleep(100) } catch (InterruptedException e /*Or any other exception*/) {   // Handle Exception, usually:   e.printStackTrace(); // Print the StackTrace of the exception to see what cause it } finally {   // Code executed after try / catch, used to close streams   /*example*/ in.close(); }\ntry {   //  Block of code to try } catch(Exception e) {   //  Block of code to handle errors }\ntry block: code that is protected for any exceptions. and it is mandatory  (only try) catch block: if any exception happens during runtime in the try block,  the catch block will catch that exception. if any exception happens during runtime in the try block,  control will be given to catch block. An optional finally block gives us a chance to run the code which  we want to execute EVERYTIME a try-catch block is completed  &ndash; either with errors or without any error.\n",
    "reg_date": "2021-10-12T12:07:40.000Z"
  },
  {
    "id": 4145,
    "keyword": null,
    "link": null,
    "title": " try catch java",
    "description": "try {   // Code that may have error } catch(ErrorName e){   // Another code }\npublic class MyClass {   public static void main(String[ ] args) {     try {       int[] myNumbers = {1, 2, 3, 4, 5, 6};       System.out.println(myNumbers[10]);     } catch (Exception e) {       System.out.println(\"Something went wrong. check again\");     }   } }  \ntry {   // Code to try, which is throwing an Exception, e.g.   /*example*/ Thread.sleep(100) } catch (InterruptedException e /*Or any other exception*/) {   // Handle Exception, usually:   e.printStackTrace(); // Print the StackTrace of the exception to see what cause it } finally {   // Code executed after try / catch, used to close streams   /*example*/ in.close(); }\ntry {   //  Block of code to try } catch(Exception e) {   //  Block of code to handle errors }\npublic static void main(String[] args) { \tScanner kb = new Scanner(System.in);     System.out.println(\"Enter a number\");     try {     \tdouble nb1 = kb.nextDouble();     \tif(nb1<0)         \tthrow new ArithmeticException();         else System.out.println( \"result : \" + Math.sqrt(nb1) );     } catch (ArithmeticException e) {         System.out.println(\"You tried an impossible sqrt\");     } }\ntry block: code that is protected for any exceptions. and it is mandatory  (only try) catch block: if any exception happens during runtime in the try block,  the catch block will catch that exception. if any exception happens during runtime in the try block,  control will be given to catch block. An optional finally block gives us a chance to run the code which  we want to execute EVERYTIME a try-catch block is completed  &ndash; either with errors or without any error.\n",
    "reg_date": "2021-10-12T12:07:40.000Z"
  },
  {
    "id": 4146,
    "keyword": null,
    "link": null,
    "title": " tuple in java",
    "description": "Map.Entry tuple=Map.entry(\"value1\",\"value2\");//since Java 9 //Map.Entry tuple=new AbstractMap.SimpleEntry(\"value1\",\"value2\");//until Java 8 String val1=tuple.getKey(); String val2=tuple.getValue();\n",
    "reg_date": "2021-10-12T12:07:40.000Z"
  },
  {
    "id": 4147,
    "keyword": null,
    "link": null,
    "title": " turn ascii into text javascriot",
    "description": "const character = String.fromCharCode(67);  console.log(character); // \"C\"\n",
    "reg_date": "2021-10-12T12:07:40.000Z"
  },
  {
    "id": 4148,
    "keyword": null,
    "link": null,
    "title": " turning a sentence to an array java",
    "description": "String s = \"This is a sample sentence.\"; String[] words = s.split(\"\\\\s+\"); for (int i = 0; i < words.length; i++) {     // You may want to check for a non-word character before blindly     // performing a replacement     // It may also be necessary to adjust the character class     words[i] = words[i].replaceAll(\"[^\\\\w]\", \"\"); }\n",
    "reg_date": "2021-10-12T12:07:40.000Z"
  },
  {
    "id": 4149,
    "keyword": null,
    "link": null,
    "title": " tutorial app widget android",
    "description": "package de.vogella.android.widget.example;  import java.util.Random;  import android.app.PendingIntent; import android.appwidget.AppWidgetManager; import android.appwidget.AppWidgetProvider; import android.content.ComponentName; import android.content.Context; import android.content.Intent; import android.util.Log; import android.widget.RemoteViews;  public class MyWidgetProvider extends AppWidgetProvider {      private static final String ACTION_CLICK = \"ACTION_CLICK\";      @Override     public void onUpdate(Context context, AppWidgetManager appWidgetManager,             int[] appWidgetIds) {          // Get all ids         ComponentName thisWidget = new ComponentName(context,                 MyWidgetProvider.class);         int[] allWidgetIds = appWidgetManager.getAppWidgetIds(thisWidget);         for (int widgetId : allWidgetIds) {             // create some random data             int number = (new Random().nextInt(100));              RemoteViews remoteViews = new RemoteViews(context.getPackageName(),                     R.layout.widget_layout);             Log.w(\"WidgetExample\", String.valueOf(number));             // Set the text             remoteViews.setTextViewText(R.id.update, String.valueOf(number));              // Register an onClickListener             Intent intent = new Intent(context, MyWidgetProvider.class);              intent.setAction(AppWidgetManager.ACTION_APPWIDGET_UPDATE);             intent.putExtra(AppWidgetManager.EXTRA_APPWIDGET_IDS, appWidgetIds);              PendingIntent pendingIntent = PendingIntent.getBroadcast(context,                     0, intent, PendingIntent.FLAG_UPDATE_CURRENT);             remoteViews.setOnClickPendingIntent(R.id.update, pendingIntent);             appWidgetManager.updateAppWidget(widgetId, remoteViews);         }     } }\n",
    "reg_date": "2021-10-12T12:07:40.000Z"
  },
  {
    "id": 4150,
    "keyword": null,
    "link": null,
    "title": " twitch",
    "description": "please man, ive been coding for 10 min straight, i need a break\ni just want to see some people play COD Cold War, im sorry\nI'm a grown-ass adult. You can't tell me what to do! *Goes back to work*\nYou can watch  some random dude wasting time playing video games later and finish your leftover work\nSo this is what we use grepper for now?\n// You're not my mom!\nHey, you. You're finally awake. You were trying to cross the border, right? Walked right into that Imperial ambush, same as us, and that thief over there. Damn you Stormcloaks. Skyrim was fine until you came along. Empire was nice and lazy. If they hadn't been looking for you, I could've stolen that horse and be halfway to Hammerfell. You there. You and me - we shouldn't be here. It's these Stormcloaks the Empire wants. We're all brothers and sisters in binds now, thief. Shut up back there! And what's wrong with him, huh? Watch your tongue. You're speaking to Ulfric Stormcloak, the true High King. Ulfric? The Jarl of Windhelm? You're the leader of the rebellion. But if they've captured you... Oh gods, where are they taking us? I don't know where we're going, but Sovngarde awaits. No, this can't be happening. This isn't happening. Hey, what village are you from, horse thief? Why do you care? A Nord's last thoughts should be of home. Rorikstead. I'm... I'm from Rorikstead.  ...looks like the Thalmor are with him.  General Tullius, sir. The headsman is waiting. Good. Let's get this over with! Shor, Mara, Dibella, Kynareth, Akatosh. Divines, please help me. Look at him. General Tullius the Military Governor. And it looks like the Thalmor are with him. Damn elves. I bet they had something to do with this.  Why are we stopping? Why do you think? End of the line. Let's go. Shouldn't keep the gods waiting for us. Enough with procrastination. Go back to coding.\n//Leave me alone, My code is giving stressing me out *starts stress eating and sleeping*\n//Oh, come on. It's sunday\n//play minecraft,code hard\n",
    "reg_date": "2021-10-12T12:07:40.000Z"
  },
  {
    "id": 4151,
    "keyword": null,
    "link": null,
    "title": " two pointer approach java",
    "description": "The algorithm basically uses the fact that the input array is  sorted. We start the sum of extreme values (smallest and  largest) and conditionally move both pointers. We move left  pointer i when the sum of A[i] and A[j] is less than X. We  do not miss any pair because the sum is already smaller than X.  Same logic applies for right pointer j.\n",
    "reg_date": "2021-10-12T12:07:40.000Z"
  },
  {
    "id": 4152,
    "keyword": null,
    "link": null,
    "title": " two sum java",
    "description": "class Solution {     public int[] twoSum(int[] nums, int target) {         int[] sol = new int[2];         if(nums.length == 2) {             sol[0] = 0;             sol[1] = 1;         }         else {             for(int i = 0; i < nums.length-1; i++) {                 for(int j = 1; j <= nums.length-1; j++) {                     if((nums[i] + nums[j]) == target && i != j) {                         sol[0] = i;                         sol[1] = j;                         break;                     }                 }             }         }         return sol;     } }\n",
    "reg_date": "2021-10-12T12:07:41.000Z"
  },
  {
    "id": 4153,
    "keyword": null,
    "link": null,
    "title": " type javascirpt",
    "description": "console.log(typeof 42);\n",
    "reg_date": "2021-10-12T12:07:42.000Z"
  },
  {
    "id": 4154,
    "keyword": null,
    "link": null,
    "title": " type of constructor in java",
    "description": "There are three types of constructors:  Default, No-arg constructor and Parameterized.    If you do not implement any constructor in your class, Java compiler inserts a default constructor into your code on your behalf. This constructor is known as default constructor.    Constructor with no arguments is known as no-arg constructor  Constructor with arguments(or you can say parameters) is known as  Parameterized constructor.\nA constructor is a special method used to initialize objects in java. we use constructors to initialize all variables in the class  when an object is created. As and when an object is created it is initialized automatically with the help of  constructor in java.    We have two types of constructors: Default Constructor Parameterized Constructor  public classname(){ } public classname(parameters list){ }\n",
    "reg_date": "2021-10-12T12:07:42.000Z"
  },
  {
    "id": 4155,
    "keyword": null,
    "link": null,
    "title": " type variable java",
    "description": "public class A   {       static int m=100;//static variable       void method()       {             int n=90;//local variable         }       public static void main(String args[])       {           int data=50;//instance variable         }   }//end of class   \n",
    "reg_date": "2021-10-12T12:07:42.000Z"
  },
  {
    "id": 4156,
    "keyword": null,
    "link": null,
    "title": " typecasting java",
    "description": "Assigning a value of one type to a variable of another type is known as Type Casting. Auto-boxing; is a process when you take a primitive value and assign into wrapper class object. Un-boxing; is a process when you take Wrapper class object and convert to primitive.   \n// You can typecast to convert a variable of one data type to another. // Wide Casting converts small data types to larger ones. // Narrow Casting converts large data types to smaller ones. // Java can automatically Wide Cast. // Java will throw an error when trying to automatically Narrow Cast. // This is because data is often lost when Narrow Casting. // Narrow Casting must be done manually.  //Wide Cast: int SomeNumber = 5; double WideCastedNumber = (double)SomeNumber;  //Narrow Cast: double SomeNumber = 5.39; int NarrowCastedNumber = (int)SomeNumber; //Note: The data that holds the decimal places will be lost!\nJAVA: Example of cast:  int SomeNumber = 5; //int  double WideCastedNumber = (double)SomeNumber; //from int to double  double myDouble = 9.78; int myInt = (int) myDouble; // from double to int\n",
    "reg_date": "2021-10-12T12:07:42.000Z"
  },
  {
    "id": 4157,
    "keyword": null,
    "link": null,
    "title": " ubuntu change default java path",
    "description": "#Update repo sudo apt update  # Install java 8 from ubuntu repo sudo apt install openjdk-8-jdk -y  #Set JAVA_HOME Path ls /usr/lib/jvm/java-8-openjdk-amd64/  export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64  echo $JAVA_HOME    #Add JAVA bin directory to the PATH variable  export PATH=$PATH:$JAVA_HOME/bin  echo $PATH  java -version\nsudo update-alternatives --config java\n",
    "reg_date": "2021-10-12T12:07:42.000Z"
  },
  {
    "id": 4158,
    "keyword": null,
    "link": null,
    "title": " ubuntu change java version",
    "description": "$ sudo update-alternatives --config java\nsudo update-alternatives --config java\nsudo update-java-alternatives -s java-8-oracle export JAVA_HOME=/usr/lib/jvm/java-8-oracle/ export PATH=$PATH:$JAVA_HOME 123\n",
    "reg_date": "2021-10-12T12:07:43.000Z"
  },
  {
    "id": 4159,
    "keyword": null,
    "link": null,
    "title": " ubuntu java compiler version",
    "description": "javac --version\n",
    "reg_date": "2021-10-12T12:07:43.000Z"
  },
  {
    "id": 4160,
    "keyword": null,
    "link": null,
    "title": " unable to access jarfile",
    "description": "java -jar myjar.jar\njava -jar \"%~dp0\\myjar.jar\" \n",
    "reg_date": "2021-10-12T12:07:43.000Z"
  },
  {
    "id": 4161,
    "keyword": null,
    "link": null,
    "title": " unhandled exception: platformexception(error, java.lang.illegalstateexception: trying to create a platform view of unregistered type: plugins.flutter.io/webview",
    "description": "Updated plugin flutter_inappwebview! Latest release is 3.3.0+3 at the time of this writing. It has a lot of new events, methods, and options to control WebViews.\n",
    "reg_date": "2021-10-12T12:07:43.000Z"
  },
  {
    "id": 4162,
    "keyword": null,
    "link": null,
    "title": " uninstall java 11 linux",
    "description": "sudo apt remove openjdk-11* sudo apt remove icedtea*\nsudo update-alternatives --remove \"java\" \"/usr/lib/jvm/jdk[version]/bin/java\" \n",
    "reg_date": "2021-10-12T12:07:43.000Z"
  },
  {
    "id": 4163,
    "keyword": null,
    "link": null,
    "title": " unparseable date error in java",
    "description": "String v_date_str=\"Sun Mar 06 11:28:16 IST 2011\";         DateFormat formatter;         formatter = new SimpleDateFormat(\"dd-MMM-yyyy\");         Date date_temp=null;         try {             date_temp = (Date) formatter.parse(v_date_str);         } catch (ParseException ex) {             Logger.getLogger(Attendance_Calculation.class.getName()).log(Level.SEVERE, null, ex);         }         System.out.println(\"output: \"+date_temp);\n",
    "reg_date": "2021-10-12T12:07:43.000Z"
  },
  {
    "id": 4164,
    "keyword": null,
    "link": null,
    "title": " unresolved reference activity main",
    "description": "you should remove import android.R\n",
    "reg_date": "2021-10-12T12:07:43.000Z"
  },
  {
    "id": 4165,
    "keyword": null,
    "link": null,
    "title": " upcasting and downcasting in java",
    "description": "Upcasting is a type of object typecasting in which a child object is typecasted to a parent class object. By using the Upcasting, we can easily access the variables and methods of the parent class to the child class. Here, we don't access all the variables and the method. We access only some specified variables and methods of the child class. Upcasting is also known as Generalization and Widening.  \nA process of converting one data type to another is known as Typecasting and Upcasting and Downcasting is the type of object typecasting. In Java, the object can also be typecasted like the datatypes. Parent and Child objects are two types of objects. So, there are two types of typecasting possible for an object, i.e., Parent to Child and Child to Parent or can say Upcasting and Downcasting.   \nDowncasting is casting to a subtype,  going down in the inheritance tree. It is done to access sub class features. It has to be done manually  (TakeScreenShot)driver).takeScreenShot();  \nDowncasting is casting to a subtype,  going down in the inheritance tree. It is done to access sub class features. It has to be done manually  (TakeScreenShot)driver).takeScreenShot();\nUpcasting is casting a subtype to a supertype,  going up in the inheritance tree. It is done implicitly  in order to use method available on any  interface/class, the object should be of  same class or of class implementing the interface.      WebDriver driver = new ChromeDriver(); or \tTakeScreenShot ts = new ChromeDriver();\nUpcasting is casting a subtype to a supertype,  going up in the inheritance tree. It is done implicitly  in order to use method available on any  interface/class, the object should be of  same class or of class implementing the interface.      WebDriver driver = new ChromeDriver(); or \tTakeScreenShot ts = new ChromeDriver();    Downcasting is casting to a subtype,  going down in the inheritance tree. It is done to access sub class features. It has to be done manually  (TakeScreenShot)driver).takeScreenShot();     \n",
    "reg_date": "2021-10-12T12:07:44.000Z"
  },
  {
    "id": 4166,
    "keyword": null,
    "link": null,
    "title": " upcasting in java",
    "description": "Upcasting is a type of object typecasting in which a child object is typecasted to a parent class object. By using the Upcasting, we can easily access the variables and methods of the parent class to the child class. Here, we don't access all the variables and the method. We access only some specified variables and methods of the child class. Upcasting is also known as Generalization and Widening.  \nA process of converting one data type to another is known as Typecasting and Upcasting and Downcasting is the type of object typecasting. In Java, the object can also be typecasted like the datatypes. Parent and Child objects are two types of objects. So, there are two types of typecasting possible for an object, i.e., Parent to Child and Child to Parent or can say Upcasting and Downcasting.   \nUpcasting is casting a subtype to a supertype,  going up in the inheritance tree. It is done implicitly  in order to use method available on any  interface/class, the object should be of  same class or of class implementing the interface.      WebDriver driver = new ChromeDriver(); or \tTakeScreenShot ts = new ChromeDriver();\nUpcasting is casting a subtype to a supertype,  going up in the inheritance tree. It is done implicitly  in order to use method available on any  interface/class, the object should be of  same class or of class implementing the interface.      WebDriver driver = new ChromeDriver(); or \tTakeScreenShot ts = new ChromeDriver();    Downcasting is casting to a subtype,  going down in the inheritance tree. It is done to access sub class features. It has to be done manually  (TakeScreenShot)driver).takeScreenShot();     \n",
    "reg_date": "2021-10-12T12:07:44.000Z"
  },
  {
    "id": 4167,
    "keyword": null,
    "link": null,
    "title": " update query jpa",
    "description": "@Modifying @Transactional //helps with exception: Executing an update/delete query @Query(\"update User u set u.active = false where u.lastLoginDate < :date\") void deactivateUsersNotLoggedInSince(@Param(\"date\") LocalDate date);\n",
    "reg_date": "2021-10-12T12:07:44.000Z"
  },
  {
    "id": 4168,
    "keyword": null,
    "link": null,
    "title": " update value in hashmap java",
    "description": "map.replace(key, map.get(key) + 1); //or map.put(key, map.get(key) + 1);\nmap.replace(key, newValue);\nmyMap.put(key, value);\n",
    "reg_date": "2021-10-12T12:07:44.000Z"
  },
  {
    "id": 4169,
    "keyword": null,
    "link": null,
    "title": " update value of an arraylist java",
    "description": "//first arg it is position yourExistingArray.set(1, \"New Value\");\n",
    "reg_date": "2021-10-12T12:07:45.000Z"
  },
  {
    "id": 4170,
    "keyword": null,
    "link": null,
    "title": " upper en java",
    "description": "public class Guru99 {        public static void main(String args[]) {                String S1 = new String(\"min&uacute;sculas convertidas en may&uacute;sculas\");                  // Convertir a UpperCase             System.out.println(S1.toUpperCase());        } } \n",
    "reg_date": "2021-10-12T12:07:45.000Z"
  },
  {
    "id": 4171,
    "keyword": null,
    "link": null,
    "title": " uppercase java",
    "description": "string s=\"hello\"; s = Character.toUpperCase(s.charAt(0)) + s.substring(1); The output will be: Hello\n\"Hello World\".toUpperCase()\npublic class Guru99 {        public static void main(String args[]) {                String S1 = new String(\"min&uacute;sculas convertidas en may&uacute;sculas\");                  // Convertir a UpperCase             System.out.println(S1.toUpperCase());        } } \npublic class StringToUppercaseDemo {    public static void main(String[] args)    {       String str = \"flower brackets\";       String strUpper = str.toUpperCase();       System.out.println(strUpper);    } }\nString var_name = \"Jerry\"; System.out.println(var_name.toUpperCase()); //JERRY\n",
    "reg_date": "2021-10-12T12:07:45.000Z"
  },
  {
    "id": 4172,
    "keyword": null,
    "link": null,
    "title": " uri to filepath, get file path from uri",
    "description": "public static String getPathFromUri(final Context context, final Uri uri) {          final boolean isKitKat = Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT;          // DocumentProvider         if (isKitKat && DocumentsContract.isDocumentUri(context, uri)) {             // ExternalStorageProvider             if (isExternalStorageDocument(uri)) {                 final String docId = DocumentsContract.getDocumentId(uri);                 final String[] split = docId.split(\":\");                 final String type = split[0];                  if (\"primary\".equalsIgnoreCase(type)) {                     return Environment.getExternalStorageDirectory() + \"/\" + split[1];                 }                  // TODO handle non-primary volumes             }             // DownloadsProvider             else if (isDownloadsDocument(uri)) {                  final String id = DocumentsContract.getDocumentId(uri);                 final Uri contentUri = ContentUris.withAppendedId(                         Uri.parse(\"content://downloads/public_downloads\"), Long.valueOf(id));                  return getDataColumn(context, contentUri, null, null);             }             // MediaProvider             else if (isMediaDocument(uri)) {                 final String docId = DocumentsContract.getDocumentId(uri);                 final String[] split = docId.split(\":\");                 final String type = split[0];                  Uri contentUri = null;                 if (\"image\".equals(type)) {                     contentUri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;                 } else if (\"video\".equals(type)) {                     contentUri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI;                 } else if (\"audio\".equals(type)) {                     contentUri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;                 }                  final String selection = \"_id=?\";                 final String[] selectionArgs = new String[] {                         split[1]                 };                  return getDataColumn(context, contentUri, selection, selectionArgs);             }         }         // MediaStore (and general)         else if (\"content\".equalsIgnoreCase(uri.getScheme())) {              // Return the remote address             if (isGooglePhotosUri(uri))                 return uri.getLastPathSegment();              return getDataColumn(context, uri, null, null);         }         // File         else if (\"file\".equalsIgnoreCase(uri.getScheme())) {             return uri.getPath();         }          return null;     }      public static String getDataColumn(Context context, Uri uri, String selection,                                        String[] selectionArgs) {          Cursor cursor = null;         final String column = \"_data\";         final String[] projection = {                 column         };          try {             cursor = context.getContentResolver().query(uri, projection, selection, selectionArgs,                     null);             if (cursor != null && cursor.moveToFirst()) {                 final int index = cursor.getColumnIndexOrThrow(column);                 return cursor.getString(index);             }         } finally {             if (cursor != null)                 cursor.close();         }         return null;     }       /**      * @param uri The Uri to check.      * @return Whether the Uri authority is ExternalStorageProvider.      */     public static boolean isExternalStorageDocument(Uri uri) {         return \"com.android.externalstorage.documents\".equals(uri.getAuthority());     }      /**      * @param uri The Uri to check.      * @return Whether the Uri authority is DownloadsProvider.      */     public static boolean isDownloadsDocument(Uri uri) {         return \"com.android.providers.downloads.documents\".equals(uri.getAuthority());     }      /**      * @param uri The Uri to check.      * @return Whether the Uri authority is MediaProvider.      */     public static boolean isMediaDocument(Uri uri) {         return \"com.android.providers.media.documents\".equals(uri.getAuthority());     }      /**      * @param uri The Uri to check.      * @return Whether the Uri authority is Google Photos.      */     public static boolean isGooglePhotosUri(Uri uri) {         return \"com.google.android.apps.photos.content\".equals(uri.getAuthority()); } \n",
    "reg_date": "2021-10-12T12:07:45.000Z"
  },
  {
    "id": 4173,
    "keyword": null,
    "link": null,
    "title": " url regular expression",
    "description": "(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,}) \n^http[s]?:\\/\\/(www\\.)?(.*)?\\/?(.)*\nIf you require HTTP/HTTPS protocol:   /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)/ \n_^(?:(?:https?|ftp)://)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\x{00a1}-\\x{ffff}0-9]+-?)*[a-z\\x{00a1}-\\x{ffff}0-9]+)(?:\\.(?:[a-z\\x{00a1}-\\x{ffff}0-9]+-?)*[a-z\\x{00a1}-\\x{ffff}0-9]+)*(?:\\.(?:[a-z\\x{00a1}-\\x{ffff}]{2,})))(?::\\d{2,5})?(?:/[^\\s]*)?$_iuS\n",
    "reg_date": "2021-10-12T12:07:46.000Z"
  },
  {
    "id": 4174,
    "keyword": null,
    "link": null,
    "title": " url string from url java",
    "description": "URL url = new URL(\"www.google.com\"); string urlString = url.getPath();\n",
    "reg_date": "2021-10-12T12:07:46.000Z"
  },
  {
    "id": 4175,
    "keyword": null,
    "link": null,
    "title": " use Java NetBeans to write code to implement the list [5, 3, 17, 10, 84, 19, 6, 22, 9] in a Max Heap data structure. For each parent node, display the left and right child of the node.",
    "description": "The Max Heap is   PARENT : 52 LEFT CHILD : 21 RIGHT CHILD :23  PARENT : 21 LEFT CHILD : 15 RIGHT CHILD :13  PARENT : 23 LEFT CHILD : 7 RIGHT CHILD :16  PARENT : 15 LEFT CHILD : 5 RIGHT CHILD :9 The max val is 52 \n",
    "reg_date": "2021-10-12T12:07:46.000Z"
  },
  {
    "id": 4176,
    "keyword": null,
    "link": null,
    "title": " use custom font java",
    "description": "try {        Font font = Font.createFont(Font.TRUETYPE_FONT,                                 new File(\"./Fonts/AyyBoyyy.ttf\"));     Font bold = font.deriveFont(Font.BOLD, 12); \tFont plain = font.deriveFont(Font.PLAIN, 12);    } catch (FontFormatException | IOException e) {   e.printStackTrace(); }\ntry {      GraphicsEnvironment ge =           GraphicsEnvironment.getLocalGraphicsEnvironment();      ge.registerFont(Font.createFont(Font.TRUETYPE_FONT, new File(\"A.ttf\"))); } catch (IOException|FontFormatException e) {      //Handle exception } \n",
    "reg_date": "2021-10-12T12:07:46.000Z"
  },
  {
    "id": 4177,
    "keyword": null,
    "link": null,
    "title": " use variables in interface java",
    "description": "public class MyInterfaceImpl implements MyInterface {      public void sayHello() {         System.out.println(MyInterface.hello);     } } \n",
    "reg_date": "2021-10-12T12:07:46.000Z"
  },
  {
    "id": 4178,
    "keyword": null,
    "link": null,
    "title": " use view binding in fragment",
    "description": "private FragmentJavaPracticeBinding binding;  @Nullable     @Override     public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {         binding = FragmentJavaPracticeBinding.inflate(inflater,container,false);         return binding.getRoot();     }      @Override     public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {         binding.notesRecyclerView.setVisibility(View.VISIBLE);//this hide/show recyclerview visibility          Log.d(\"TAG\", \"hidden: \");     }\n",
    "reg_date": "2021-10-12T12:07:47.000Z"
  },
  {
    "id": 4179,
    "keyword": null,
    "link": null,
    "title": " uses internet android",
    "description": "<uses-permission android:name=\"android.permission.INTERNET\" /> \n",
    "reg_date": "2021-10-12T12:07:47.000Z"
  },
  {
    "id": 4180,
    "keyword": null,
    "link": null,
    "title": " using buidfeatures to enable viewbinding",
    "description": "// Android Studio 4.0 android {     buildFeatures {         viewBinding = true     } }\n",
    "reg_date": "2021-10-12T12:07:47.000Z"
  },
  {
    "id": 4181,
    "keyword": null,
    "link": null,
    "title": " uuid from any string java",
    "description": "// Import Java UUID Utils import java.utils.UUID;  // Execute function fromString() with your string as argument. // Returns an uuid, which is your string converted into an UUID. UUID uuid = UUID.fromString(string);\nimport java.utils.UUID;  String strInput = \"-1068942631\"; String uuidFromString = UUID.nameUUIDFromBytes( String.valueOf( strInput ).getBytes() ).toString();  System.out.println(uuidFromString);\nUUID.fromString(string);\n",
    "reg_date": "2021-10-12T12:07:47.000Z"
  },
  {
    "id": 4182,
    "keyword": null,
    "link": null,
    "title": " validar cnpj java",
    "description": "package meuPacote;  import java.util.InputMismatchException;  public class ValidaCNPJ {    public static boolean isCNPJ(String CNPJ) { // considera-se erro CNPJ's formados por uma sequencia de numeros iguais     if (CNPJ.equals(\"00000000000000\") || CNPJ.equals(\"11111111111111\") ||         CNPJ.equals(\"22222222222222\") || CNPJ.equals(\"33333333333333\") ||         CNPJ.equals(\"44444444444444\") || CNPJ.equals(\"55555555555555\") ||         CNPJ.equals(\"66666666666666\") || CNPJ.equals(\"77777777777777\") ||         CNPJ.equals(\"88888888888888\") || CNPJ.equals(\"99999999999999\") ||        (CNPJ.length() != 14))        return(false);      char dig13, dig14;     int sm, i, r, num, peso;  // \"try\" - protege o c&oacute;digo para eventuais erros de conversao de tipo (int)     try { // Calculo do 1o. Digito Verificador       sm = 0;       peso = 2;       for (i=11; i>=0; i--) { // converte o i-&eacute;simo caractere do CNPJ em um n&uacute;mero: // por exemplo, transforma o caractere '0' no inteiro 0 // (48 eh a posi&ccedil;&atilde;o de '0' na tabela ASCII)         num = (int)(CNPJ.charAt(i) - 48);         sm = sm + (num * peso);         peso = peso + 1;         if (peso == 10)            peso = 2;       }        r = sm % 11;       if ((r == 0) || (r == 1))          dig13 = '0';       else dig13 = (char)((11-r) + 48);  // Calculo do 2o. Digito Verificador       sm = 0;       peso = 2;       for (i=12; i>=0; i--) {         num = (int)(CNPJ.charAt(i)- 48);         sm = sm + (num * peso);         peso = peso + 1;         if (peso == 10)            peso = 2;       }        r = sm % 11;       if ((r == 0) || (r == 1))          dig14 = '0';       else dig14 = (char)((11-r) + 48);  // Verifica se os d&iacute;gitos calculados conferem com os d&iacute;gitos informados.       if ((dig13 == CNPJ.charAt(12)) && (dig14 == CNPJ.charAt(13)))          return(true);       else return(false);     } catch (InputMismatchException erro) {         return(false);     }   }    public static String imprimeCNPJ(String CNPJ) { // m&aacute;scara do CNPJ: 99.999.999.9999-99     return(CNPJ.substring(0, 2) + \".\" + CNPJ.substring(2, 5) + \".\" +       CNPJ.substring(5, 8) + \".\" + CNPJ.substring(8, 12) + \"-\" +       CNPJ.substring(12, 14));   } }\n",
    "reg_date": "2021-10-12T12:07:47.000Z"
  },
  {
    "id": 4183,
    "keyword": null,
    "link": null,
    "title": " validate cpf java",
    "description": "package meuPacote;  import java.util.InputMismatchException;  public class ValidaCPF {      public static boolean isCPF(String CPF) {         // considera-se erro CPF's formados por uma sequencia de numeros iguais         if (CPF.equals(\"00000000000\") ||             CPF.equals(\"11111111111\") ||             CPF.equals(\"22222222222\") || CPF.equals(\"33333333333\") ||             CPF.equals(\"44444444444\") || CPF.equals(\"55555555555\") ||             CPF.equals(\"66666666666\") || CPF.equals(\"77777777777\") ||             CPF.equals(\"88888888888\") || CPF.equals(\"99999999999\") ||             (CPF.length() != 11))             return(false);          char dig10, dig11;         int sm, i, r, num, peso;          // \"try\" - protege o codigo para eventuais erros de conversao de tipo (int)         try {         // Calculo do 1o. Digito Verificador             sm = 0;             peso = 10;             for (i=0; i<9; i++) {         // converte o i-esimo caractere do CPF em um numero:         // por exemplo, transforma o caractere '0' no inteiro 0         // (48 eh a posicao de '0' na tabela ASCII)             num = (int)(CPF.charAt(i) - 48);             sm = sm + (num * peso);             peso = peso - 1;             }              r = 11 - (sm % 11);             if ((r == 10) || (r == 11))                 dig10 = '0';             else dig10 = (char)(r + 48); // converte no respectivo caractere numerico          // Calculo do 2o. Digito Verificador             sm = 0;             peso = 11;             for(i=0; i<10; i++) {             num = (int)(CPF.charAt(i) - 48);             sm = sm + (num * peso);             peso = peso - 1;             }              r = 11 - (sm % 11);             if ((r == 10) || (r == 11))                  dig11 = '0';             else dig11 = (char)(r + 48);          // Verifica se os digitos calculados conferem com os digitos informados.             if ((dig10 == CPF.charAt(9)) && (dig11 == CPF.charAt(10)))                  return(true);             else return(false);                 } catch (InputMismatchException erro) {                 return(false);             }         }          public static String imprimeCPF(String CPF) {             return(CPF.substring(0, 3) + \".\" + CPF.substring(3, 6) + \".\" +             CPF.substring(6, 9) + \"-\" + CPF.substring(9, 11));         }     }\n",
    "reg_date": "2021-10-12T12:07:48.000Z"
  },
  {
    "id": 4184,
    "keyword": null,
    "link": null,
    "title": " validate date java",
    "description": "The current way is to use the calendar class. It has the setLenient method that will validate the date and throw and exception if it is out of range as in your example.  Forgot to add: If you get a calendar instance and set the time using your date, this is how you get the validation.  Calendar cal = Calendar.getInstance(); cal.setLenient(false); cal.setTime(yourDate); try {     cal.getTime(); } catch (Exception e) {   System.out.println(\"Invalid date\"); }\n",
    "reg_date": "2021-10-12T12:07:48.000Z"
  },
  {
    "id": 4185,
    "keyword": null,
    "link": null,
    "title": " validating string input java",
    "description": "boolean quit = false; do{ // change your while by this      // your own stuff here       // then after all your program stuff     boolean choiceIsOK = false;     do{     String userinput = sc.next();     char choice = userinput.toLowerCase().charAt(0);     switch(choice){     case 'y':         // case y, do nothing, you could even remove that case.         choiceIsOK = true;         break;     case 'n':         // case n, do something here         choiceIsOK = false;         quit = true;         break;     default:         // error or warning         System.out.println(\"Type Y or N to respectively continue or quit\");         break;     }     }while(!choiceIsOK); }while (!quit); \n",
    "reg_date": "2021-10-12T12:07:48.000Z"
  },
  {
    "id": 4186,
    "keyword": null,
    "link": null,
    "title": " valueof in java",
    "description": "/*   The java string valueOf() method converts different types of    values into string. By the help of string valueOf() method,    you can convert int to string, long to string, boolean to string,    character to string, float to string, double to string, object to string    and char array to string. */ public static String valueOf(Object obj) {   \treturn (obj == null) ? \"null\" : obj.toString();   }   // you can see more here:  // https://www.javatpoint.com/java-string-valueof\n",
    "reg_date": "2021-10-12T12:07:48.000Z"
  },
  {
    "id": 4187,
    "keyword": null,
    "link": null,
    "title": " valueof vs tostring",
    "description": "public static void main(String args[]) {       String str = null;     System.out.println(String.valueOf(str));  // This will print a String equal to \"null\"             System.out.println(str.toString()); // This will throw a NullPointerException } \n",
    "reg_date": "2021-10-12T12:07:48.000Z"
  },
  {
    "id": 4188,
    "keyword": null,
    "link": null,
    "title": " variable between two numbers java",
    "description": "if (angle >= 90 && angle <= 180) {  // do action } \n",
    "reg_date": "2021-10-12T12:07:49.000Z"
  },
  {
    "id": 4189,
    "keyword": null,
    "link": null,
    "title": " variable not initialized in ajva",
    "description": "int i; //declaration i = 10; //initialization int x = 10; //initialization + declaration\n",
    "reg_date": "2021-10-12T12:07:49.000Z"
  },
  {
    "id": 4190,
    "keyword": null,
    "link": null,
    "title": " variables java",
    "description": "/* Depending on what variables you want to declare */ String hello = \"hello\"; //characters short one = 12;//shorter integers int two = 2000; //complete integer up too 32 bits long number = 2000000; //complete integer up to 64 bits float decimal = 1.512 //up to 7 decimal digits double million = 1.387892847395 //up tp 16 decmial digits Bool condition = true; // true or false char a = \"a\"; // unicode character\n/* ##\tVariable - Container which holds the value while the Java program is executed.  - Assigned with a data type.  - Name of memory location.   ##\tThere are three types of variables in java:  1) Local variable  2) Static (or class) variable  3) Instance variable */\nint myVariable = 42;    //This is the most commonly used variable. Only use other variables if you have a good reason to.\n",
    "reg_date": "2021-10-12T12:07:49.000Z"
  },
  {
    "id": 4191,
    "keyword": null,
    "link": null,
    "title": " vector2 java",
    "description": "public class Vector2  {                    // Members     public float x;     public float y;              // Constructors     public Vector2() {         this.x = 0.0f;         this.y = 0.0f;     }              public Vector2(float x, float y) {         this.x = x;         this.y = y;     }              // Compare two vectors     public boolean equals(Vector2 other) {         return (this.x == other.x && this.y == other.y);     } }\n",
    "reg_date": "2021-10-12T12:07:49.000Z"
  },
  {
    "id": 4192,
    "keyword": null,
    "link": null,
    "title": " vector in java",
    "description": "Array based data structure -It is synchronized - thread safe. -It is mostly used in multi-threaded environment. -It is much slower than ArrayList because it is thread-safe\nArray based data structure/Internally uses dynamic array. -It is synchronized - thread safe. -It is mostly used in multi-threaded environment. -It is much slower than ArrayList because it is thread-safe\n",
    "reg_date": "2021-10-12T12:07:49.000Z"
  },
  {
    "id": 4193,
    "keyword": null,
    "link": null,
    "title": " viewwillappear android",
    "description": "Activity.onResume  \n",
    "reg_date": "2021-10-12T12:07:49.000Z"
  },
  {
    "id": 4194,
    "keyword": null,
    "link": null,
    "title": " vm options javafx",
    "description": "--module-path /path/to/javafx-sdk-15.0.1/lib --add-modules javafx.controls,javafx.fxml\n",
    "reg_date": "2021-10-12T12:07:49.000Z"
  },
  {
    "id": 4195,
    "keyword": null,
    "link": null,
    "title": " void method java",
    "description": "int a = 20; int b = 20; public static void sum(){ // Void Method   System.out.println(a + b); } public static int sum(){ // Return Function   return a + b; }\npublic class methods{   public static void main(String[] args){     printSum(5, 15); // Print 20   }   public static void printSum(int a, int b){     System.out.println(a + b);   }   // Our method should be outside the main methods bounds   // Call your function inside the main method. }\n",
    "reg_date": "2021-10-12T12:07:49.000Z"
  },
  {
    "id": 4196,
    "keyword": null,
    "link": null,
    "title": " volley dependency",
    "description": " implementation(\"com.android.volley:volley:1.2.0\")\ndependencies {     def version = '1.1.1'     implementation \"com.android.volley:volley:$version\" } \n",
    "reg_date": "2021-10-12T12:07:49.000Z"
  },
  {
    "id": 4197,
    "keyword": null,
    "link": null,
    "title": " wait method in java",
    "description": "java.lang.Object.wait() causes current thread to wait until another thread  invokes the notify() method or the notifyAll() method for this object.\n",
    "reg_date": "2021-10-12T12:07:49.000Z"
  },
  {
    "id": 4198,
    "keyword": null,
    "link": null,
    "title": " wat is voorbereiden voltooid deelwoord",
    "description": "print(\"hi\")        \n",
    "reg_date": "2021-10-12T12:07:50.000Z"
  },
  {
    "id": 4199,
    "keyword": null,
    "link": null,
    "title": " watch service does not detect more than one poll java",
    "description": "Path pathBattlesFolder = Paths.get(\"filepath\"); WatchService watchService = pathBattlesFolder.getFileSystem().newWatchService(); pathBattlesFolder.register(watchService, StandardWatchEventKinds.ENTRY_MODIFY); WatchKey watchKey = null; while(true){    watchKey = watchService.poll();   if (watchKey != null){     if (watchKey.pollEvents().size() > 0){       //if it gets here then something has been changed     }     watchKey.reset();   }  }  **watchKey.reset() should fix the problem.\n",
    "reg_date": "2021-10-12T12:07:50.000Z"
  },
  {
    "id": 4200,
    "keyword": null,
    "link": null,
    "title": " webpack-cli/bin/config-yargs",
    "description": "NPM package.json scripts are a convenient and useful means to run locally installed binaries without having to be concerned about their full paths. Simply define a script as such:  + For webpack-cli 3.x: + \"scripts\": {   \"start:dev\": \"webpack-dev-server\" }  + For webpack-cli 4.x: + + \"scripts\": { +  \"start:dev\": \"webpack serve\" +}  And run the following in your terminal/console:\n",
    "reg_date": "2021-10-12T12:07:50.000Z"
  },
  {
    "id": 4201,
    "keyword": null,
    "link": null,
    "title": " webview in android studio",
    "description": " private WebView webView;       @Override     protected void onCreate(Bundle savedInstanceState) {         super.onCreate(savedInstanceState);         setContentView(R.layout.activity_main);          webView = (WebView) findViewById(R.id.webview);         webView.setWebViewClient(new WebViewClient());         webView.loadUrl(\"https://www.javatpoint.com/java-tutorial\");          WebSettings webSettings = webView.getSettings();         webSettings.setJavaScriptEnabled(true);      }     @Override     public void onBackPressed() {         if (webView.canGoBack()) {             webView.goBack();         } else {             super.onBackPressed();         }     }\n",
    "reg_date": "2021-10-12T12:07:50.000Z"
  },
  {
    "id": 4202,
    "keyword": null,
    "link": null,
    "title": " webview load url",
    "description": "webView.loadUrl(\"https://google.com\");\n// Private variable private WebView web;  // Locating the webView ID form (For example activity_main) myWebView = findViewById(R.id.myWebView);  // Loading the URL (google.com) into the webview web.loadUrl(\"https://google.com\");\n",
    "reg_date": "2021-10-12T12:07:50.000Z"
  },
  {
    "id": 4203,
    "keyword": null,
    "link": null,
    "title": " what's a spliterator in java",
    "description": "public interface Spliterator<T> An object for traversing and partitioning elements of a source. The source of elements covered by a Spliterator could be, for example, an array, a Collection, an IO channel, or a generator function. A Spliterator may traverse elements individually (tryAdvance()) or sequentially in bulk (forEachRemaining()).\n",
    "reg_date": "2021-10-12T12:07:50.000Z"
  },
  {
    "id": 4204,
    "keyword": null,
    "link": null,
    "title": " what's method overriding",
    "description": "Overriding means same method name and same parameter,  occur in different class that has inheritance relationship.  we use method overriding to implement specific functionality to the method.  Example: get method WebDriver driver = new ChromeDriver(); driver.get(\"URL\") ==> opens the url from chrome  WebDriver driver = new FireFoxDriver(); driver.get(\"URL\") ==> opens the url from Firefox  we can only override instance methods and method override  takes place in sub class. instance method that we are going to override cannot be private and final\n",
    "reg_date": "2021-10-12T12:07:50.000Z"
  },
  {
    "id": 4205,
    "keyword": null,
    "link": null,
    "title": " what are the access modifiers",
    "description": "In Java, access specifiers are the  keywords which are used to define  the access scope of the method, class, or a variable.    In Java, there are four access specifiers.      * Public: The classes, methods, or variables   which are defined as public,    can be accessed by any class or method.   * Protected: Protected can be accessed   by the class of the same package,  or by the sub-class of this class, or within the same class.   * Default: Default are accessible   within the package only.      By default, all the classes, methods, and variables are of default scope.   * Private: The private class, methods, or variables defined as private      can be accessed within the class only\n",
    "reg_date": "2021-10-12T12:07:50.000Z"
  },
  {
    "id": 4206,
    "keyword": null,
    "link": null,
    "title": " what are the access specifiers",
    "description": "In Java, access specifiers are the  keywords which are used to define  the access scope of the method, class, or a variable.    In Java, there are four access specifiers.      * Public: The classes, methods, or variables   which are defined as public,    can be accessed by any class or method.   * Protected: Protected can be accessed   by the class of the same package,  or by the sub-class of this class, or within the same class.   * Default: Default are accessible   within the package only.      By default, all the classes, methods, and variables are of default scope.   * Private: The private class, methods, or variables defined as private      can be accessed within the class only\n",
    "reg_date": "2021-10-12T12:07:50.000Z"
  },
  {
    "id": 4207,
    "keyword": null,
    "link": null,
    "title": " what are the dependencies",
    "description": " I have a  Selenium Java  Cucumber  JRE System library 1.8 in <properties>  TestNG  WebDriverManager_BoniGarcia  Cucumber Java  Cucumber TestNG  Apache POI.XML  APACHE POI  JDBC  Restassured  Gson  Log4j  and lastly  JavaFaker to generate random input\n",
    "reg_date": "2021-10-12T12:07:51.000Z"
  },
  {
    "id": 4208,
    "keyword": null,
    "link": null,
    "title": " what are the hibernate dependencies",
    "description": "<dependency>    <groupId>org.hibernate</groupId>    <artifactId>hibernate-core</artifactId>    <version>5.4.16.Final</version> </dependency>\norg.hibernate:hibernate-core:5.4.16.Final\n",
    "reg_date": "2021-10-12T12:07:51.000Z"
  },
  {
    "id": 4209,
    "keyword": null,
    "link": null,
    "title": " what does const mean in java",
    "description": "Although reserved as a keyword in Java, const is not used and has  no function.\n",
    "reg_date": "2021-10-12T12:07:51.000Z"
  },
  {
    "id": 4210,
    "keyword": null,
    "link": null,
    "title": " what does cop mean",
    "description": "really lol\n",
    "reg_date": "2021-10-12T12:07:51.000Z"
  },
  {
    "id": 4211,
    "keyword": null,
    "link": null,
    "title": " what is a char in java",
    "description": "Character ch = new Character('a'); \nchar ch=name.charAt(4);\nchar ch = 'a';  // Unicode for uppercase Greek omega character char uniChar = '\\u03A9'; // an array of chars char[] charArray = { 'a', 'b', 'c', 'd', 'e' }; \npublic class EsempioCharat {    public static void main(String args[]) { \tString str = \"informaticappunti.it\"; \t//Estraiamo il primo carattere della stringa \tchar ch1 = str.charAt(0); \t\t \t//Estraiamo il sesto carattere della stringa \tchar ch2 = str.charAt(5); \t\t \tSystem.out.println(\"Il carattere all'indice 0 &egrave;: \"+ch1); \tSystem.out.println(\" Il carattere all'indice 5 &egrave;: \"+ch2);    } }\n",
    "reg_date": "2021-10-12T12:07:51.000Z"
  },
  {
    "id": 4212,
    "keyword": null,
    "link": null,
    "title": " what is a do while loop in java",
    "description": "do {   //something you want to execute at least once } while (someBooleanCondition); \n10 9 8 7 6 5 4 3 2\ndo {   // do something } while (true);\n",
    "reg_date": "2021-10-12T12:07:51.000Z"
  },
  {
    "id": 4213,
    "keyword": null,
    "link": null,
    "title": " what is a float java",
    "description": "float int = 3.1415 //pi is a float because it is a decimal\n",
    "reg_date": "2021-10-12T12:07:51.000Z"
  },
  {
    "id": 4214,
    "keyword": null,
    "link": null,
    "title": " what is bytecode in java",
    "description": "When a javac compiler compiler compiles a class it generates .class file.  This .class file contains set of instructions called byte code. Byte code is a machine independent language  and contains set of instructions which are to be executed only by JVM. JVM can understand  this byte codes.\n",
    "reg_date": "2021-10-12T12:07:51.000Z"
  },
  {
    "id": 4215,
    "keyword": null,
    "link": null,
    "title": " what is constructor in java",
    "description": "class Other{     public Other(String message){         System.out.println(message);     } }  class scratch{     public static void main(String[] args) {         Other method = new Other(\"Hey\");         //prints Hey to the console     } }\nclass MyClass {   public MyClass () {     //constructor code   } }\nA constructor is a special method used to initialize objects in java. we use constructors to initialize all variables in the class  when an object is created. As and when an object is created it is initialized automatically with the help of  constructor in java.    We have two types of constructors: Default Constructor Parameterized Constructor  public classname(){ } public classname(parameters list){ }\nclass Huso {   public Huso() {   \t//constructor code about a huso   } }\nclass Vehicle {                public int mYear;               public String mBrand;               public String mModel;               public int mMiles;               public int mPrice;                public Vehicle(int year, String brand, String model, int miles, int price) {                 mYear = year;                 mBrand = brand;                 mModel = model;                 mMiles = miles;                 mPrice = price;               }                public boolean worthBuying(int maxPrice){                 return (mPrice < maxPrice);               }              }            \nA constructor in Java is a block of code similar to a method that's called when an instance of an object is created.\n",
    "reg_date": "2021-10-12T12:07:51.000Z"
  },
  {
    "id": 4216,
    "keyword": null,
    "link": null,
    "title": " what is enumeration in java",
    "description": "public class DaysOfTheWeek {      public enum Days {m, t, w, r, f, sat, s};   \t    public static void main(String[] args) {           Days d = Days.t;            System.out.println(d);           //the output would be t         } }\npublic enum Feu {      VERT(0), ORANGE(1), ROUGE(2);       private int value;      private Feu( int value ) {         this.value = value;     }      public int toInt() {         return value;        }          public static Feu fromInt( int value ) {         switch( value ) {             case 0: return VERT;             case 1: return ORANGE;             default: return ROUGE;         }     }      } \n",
    "reg_date": "2021-10-12T12:07:51.000Z"
  },
  {
    "id": 4217,
    "keyword": null,
    "link": null,
    "title": " what is exception in java",
    "description": "In java exception is an object. Exceptions are created when an abnormal  situations are arised in our program. Exceptions can be created by JVM or  by our application code. All Exception classes are defined in java.lang.  In otherwords we can say Exception as run time error. \nAn exception is an event, which occurs during the execution of a  program, that disrupts the normal flow of the program's instructions.\nIn java exception is an object. Exceptions are created when an abnormal  situations are arised in our program. Exceptions can be created by JVM or  by our application code. All Exception classes are defined in java.lang.  In otherwords we can say Exception as run time error. I use try & catch blocks  to handle any exceptions in my code.    I am familiar with major checked and unchecked exceptions and    handle it accordingly to make my code execution smooth\n1.Unchecked: occurs during run time 2.Checked Exceptions:occurs during the compile time.  needs to be handled IMMEDIATELY Exception handling: try & catch: blocks, used for handling the exception    throws keyword is used within the method signature  disadvantage is: throws keyword whoever calls the method  will have to handle the exception again but with  try/catch you handle once. Try/catch is better way to handle it  in utility class. Next time you call method you don&rsquo;t get any exceptions   most common Exception like NullPointerExceptio,  ArrayIndexOutOfBound, ClassNotFoundException, IOException. are unchecked and they are descended from java.lang.RuntimeException In Selenium: nosuchelement, nostaleexception, nosuchaframe  In SQL: SQL exception \n public class Exception8 { public static void main(String[]args) {    fun1();    fun2(); } static void fun1() {    \tfun3(); } static void fun2() {      \tfun3(); } static void fun3() { \ttry { \tSystem.out.println(20/0); \t} \tcatch(ArithmeticException e) \t{ \t\tSystem.out.println(\"Zero divison \"); \t} } } \nWe can handle exceptions in either of the two ways : 1) By specifying try catch block where we can catch the exception. 2) Declaring a method with throws clause \n",
    "reg_date": "2021-10-12T12:07:52.000Z"
  },
  {
    "id": 4218,
    "keyword": null,
    "link": null,
    "title": " what is final in java",
    "description": "First of all, final is a non-access modifier applicable only to  a variable, a method or a class  When a variable is declared with final keyword, its value can&rsquo;t be modified,  essentially, a constant. This also means that you must initialize a  final variable. If the final variable is a reference, this means that  the variable cannot be re-bound to reference another object, but internal  state of the object pointed by that reference variable can be changed  i.e. you can add or remove elements from final array or final collection.    It is good practice to represent final variables in all uppercase, using    underscore to separate words.\nFinal is used to apply restrictions on class, method, and variable. The final class can't be inherited, final method can't be overridden, and final variable value can't be changed. Final is a keyword \nprivate final String hello = \"Hello World!\"; /* The keyword final states that the variable, method or class associated will not have it's value changed. */\npublic static final String Name = \"Jeff\";\nclass scratch{ \tpublic static void main(String[] args){ \t\tfinal pi = 3.14; \t} }\n",
    "reg_date": "2021-10-12T12:07:52.000Z"
  },
  {
    "id": 4219,
    "keyword": null,
    "link": null,
    "title": " what is hello world java",
    "description": "public class HelloWorld {     public static void main(String []args) {       /* println() function to write Hello, World! */       System.out.println(\"Hello, World!\");         } }\n// This is just a line of code, but publilc class.... is needed!         System.out.println(\"This will be printed\");\n",
    "reg_date": "2021-10-12T12:07:52.000Z"
  },
  {
    "id": 4220,
    "keyword": null,
    "link": null,
    "title": " what is java plug-in",
    "description": "Java Plug-in is a software product from Sun Microsystems, Inc.  that allows enterprise web managers to direct Java applets  and JavaBeans components on their intranet web pages to run  using Sun's Java Runtime Environment (JRE).\n",
    "reg_date": "2021-10-12T12:07:52.000Z"
  },
  {
    "id": 4221,
    "keyword": null,
    "link": null,
    "title": " what is junit",
    "description": "-It is an open-source testing framework for java programmers.  -Test runner support to execute the test case -It is one of the unit testing framework. -Assertion support for checking the expected result. -Annotation support for test cases \n-It is an open-source testing framework for java programmers.  -Test runner support to execute the test case -It is one of the unit testing framework. -Assertion support for checking the expected result. -Annotation support for test cases\n@Test\n",
    "reg_date": "2021-10-12T12:07:52.000Z"
  },
  {
    "id": 4222,
    "keyword": null,
    "link": null,
    "title": " what is jvm jdk and jre",
    "description": "Java Virtual Machine: JVM is an abstract machine.  It actually runs by Java code. Most people know Java with this slogan  \"Write once and run everywhere' This slogan is because of JVM.  &bull; Java Runtime Environment : JRE is what we need to run a Java program  and containsset of libraries and other files that JVM uses at run time.  JRE = JVM + Library Classes  &bull; Java Development Kit : JDK is what we need to compile Java source code  and contains JRE, development tools. JDK = JRE + Development tools\nJVM: 1.\tJVM is an abstract machine.      Because it doesn't physically exist. 2.\tIt is a very important part of both JDK      and JRE because it is inbuilt in both.  3.\tWhatever Java program we want to run, goes into JVM.  4.\tAnd JVM is responsible for loading,     verifying and executing the java program      line by line hence it is also known as interpreter.      The Java Development Kit (JDK) is a software development  environment used for developing Java applications.  It includes: \tJava Virtual Machine,  \tJava Runtime Environment, \tLoader,  \tJava compiler,  \tDocumentation generator  \tArchiver (jar),  \tOther tools needed in Java development.       Java Runtime Environment : \tIt physically exists.  \tThe Java Runtime Environment provides     the minimum requirements such as libraries     and Class Loader for executing a      Java application on JVM.  \tIt consists of the Java Virtual Machine     core classes, and supporting files.    \nJDK is a software development kit whereas JRE is a software bundle that allows Java program to run, whereas JVM is an environment for executing bytecode. The full form of JDK is Java Development Kit, while the full form of JRE is Java Runtime Environment, while the full form of JVM is Java Virtual Machine.\n",
    "reg_date": "2021-10-12T12:07:52.000Z"
  },
  {
    "id": 4223,
    "keyword": null,
    "link": null,
    "title": " what is lambda expression in java",
    "description": "A lambda expression is a short block  of code which takes in parameters and returns a value. Lambda expressions are similar to methods, but they do not need a name and they can be implemented right in the body of a method.  parameter -> expression  To use more than one parameter, wrap them in parentheses:  (parameter1, parameter2) -> expression  Example Use a lamba expression in the ArrayList's  forEach() method to print every item in the list:  import java.util.ArrayList;  public class Main {   public static void main(String[] args) {     ArrayList<Integer> numbers = new ArrayList<Integer>();     numbers.add(5);     numbers.add(9);     numbers.add(8);     numbers.add(1);     numbers.forEach( (n) -> { System.out.println(n); } );   } }\nStateOwner stateOwner = new StateOwner();  stateOwner.addStateListener(     (oldState, newState) -> System.out.println(\"State changed\") ); \npublic class TestLambda {     public static void main(String args[]) {       List<String> lowerCaseStringsList = Arrays.asList(\"a\",\"b\",\"c\");      // the :: notation is the lambda expression      // it's the same as the anonymous function s -> s.toUpperCase()       List<String> upperCaseStringsList = lowerCaseStringsList.stream().         map(String::toUpperCase).         collect(Collectors.toList());    }    }\nLambda Expression\n",
    "reg_date": "2021-10-12T12:07:52.000Z"
  },
  {
    "id": 4224,
    "keyword": null,
    "link": null,
    "title": " what is linearlayout in android studio",
    "description": "LinearLayout : is a ViewGroup that aligns all children in a single direction, vertically or horizontally. RelativeLayout : is a ViewGroup that displays child views in relative positions. AbsoluteLayout : allows us to specify the exact location of the child views and widgets.\n",
    "reg_date": "2021-10-12T12:07:52.000Z"
  },
  {
    "id": 4225,
    "keyword": null,
    "link": null,
    "title": " what is local variable in java",
    "description": " Local variables are declared in methods, constructors, or blocks. Local variables  are created when the method, constructor  or block is entered and the variable will be destroyed once it exits the method,  constructor, or block.\njava decleartion   int a, b, c;         // Declares three ints, a, b, and c. int a = 10, b = 10;  // Example of initialization byte B = 22;         // initializes a byte type variable B. double pi = 3.14159; // declares and assigns a value of PI. char a = 'a';        // the char variable a iis initialized with value 'a'\n",
    "reg_date": "2021-10-12T12:07:52.000Z"
  },
  {
    "id": 4226,
    "keyword": null,
    "link": null,
    "title": " what is marshalling and unmarshalling in java",
    "description": "Marshalling; when we MAP a Java object to API JSON format (CONVERT JAVA OBJECT TO JSON);  Unmarshalling; API JSON/XML ^ MAP it to Java Object (JSON TO JAVA OBJECT)\n umharshalling also know as Deserialization; API JSON/XML ^ MAP it to Java Object (JSON TO JAVA OBJECT)\n",
    "reg_date": "2021-10-12T12:07:52.000Z"
  },
  {
    "id": 4227,
    "keyword": null,
    "link": null,
    "title": " what is method",
    "description": "A method in java is a group of statements to carry out some operation also  known as functions.\n",
    "reg_date": "2021-10-12T12:07:52.000Z"
  },
  {
    "id": 4228,
    "keyword": null,
    "link": null,
    "title": " what is never closed java",
    "description": "public void readShapeData() throws IOException {     Scanner in = new Scanner(System.in);     try {         System.out.println(\"Enter the width of the Rectangle: \");         width = in.nextDouble();         System.out.println(\"Enter the height of the Rectangle: \");         height = in.nextDouble();     } finally {         in.close();     } }\n",
    "reg_date": "2021-10-12T12:07:53.000Z"
  },
  {
    "id": 4229,
    "keyword": null,
    "link": null,
    "title": " what is opps concept",
    "description": "class Person {  void walk() {   System.out.println(&ldquo;Can Run&hellip;.&rdquo;);  } } class Employee extends Person {  void walk() {   System.out.println(&ldquo;Running Fast&hellip;&rdquo;);  }  public static void main(String arg[]) {   Person p = new Employee(); //upcasting   p.walk();  } }\n",
    "reg_date": "2021-10-12T12:07:53.000Z"
  },
  {
    "id": 4230,
    "keyword": null,
    "link": null,
    "title": " what is pojo",
    "description": "It stands for Plain old Java Object  and basically we use it when we need to represent some data as Java object. So to that we need to  create a Java class to represent it's data.  For example: { \"name\" : \"ABC\",   \"gender : \"Female\",   \"phone : 1234567890 }    So we can create a java object with this 3 data and encapsulate them (name, gender, phone) and also we need to create constructor to create object easily   So the idea is we want to create a class and eventually we want it to turn into Json file automatically. Without us doing anything.\nIt stands for Plain old Java Object  and basically we use it when we need to represent some data as Java object. So to that we need to  create a Java class to represent it's data.  For example: { \"name\" : \"ABC\",   \"gender : \"Female\",   \"phone : 1234567890 }    So we can create a java object with this 3 data and encapsulate them (name, gender, phone) and also we need to create constructor to create object easily  So the idea is we want to create a class and eventually we want it to turn into Json file automatically. Without us doing anything.\n",
    "reg_date": "2021-10-12T12:07:53.000Z"
  },
  {
    "id": 4231,
    "keyword": null,
    "link": null,
    "title": " what is splice in javascript",
    "description": "let arr = ['foo', 'bar', 10, 'qux'];  // arr.splice(<index>, <steps>, [elements ...]);  arr.splice(1, 1);\t\t\t// Removes 1 item at index 1 // => ['foo', 10, 'qux']  arr.splice(2, 1, 'tmp');\t// Replaces 1 item at index 2 with 'tmp' // => ['foo', 10, 'tmp']  arr.splice(0, 1, 'x', 'y');\t// Inserts 'x' and 'y' replacing 1 item at index 0 // => ['x', 'y', 10, 'tmp']\nlet colors = ['red', 'blue', 'green'];  let index_element_to_be_delete = colors.indexOf('green');  colors.splice(index_element_to_be_delete);   //Colors now: ['red', 'blue']\nconst months = ['Jan', 'March', 'April', 'June']; months.splice(1, 0, 'Feb'); // inserts at index 1 console.log(months); // expected output: Array [\"Jan\", \"Feb\", \"March\", \"April\", \"June\"]  months.splice(4, 1, 'May'); // replaces 1 element at index 4 console.log(months); // expected output: Array [\"Jan\", \"Feb\", \"March\", \"April\", \"May\"]  months.splice(0, 1); // removes 1 element at index 0 console.log(months); // expected output: Array [\"Feb\", \"March\", \"April\", \"May\"]\nconst numbers = [10, 11, 12, 12, 15]; const startIndex = 3; const amountToDelete = 1;  numbers.splice(startIndex, amountToDelete, 13, 14); // the second entry of 12 is removed, and we add 13 and 14 at the same index console.log(numbers); // returns [ 10, 11, 12, 13, 14, 15 ] \n/\"removes any number of consecutive elements from anywhere in an array.\"/ let array = ['today', 'was', 'not', 'so', 'great'];  array.splice(2, 2); // remove 2 elements beginning with the 3rd element // array now equals ['today', 'was', 'great']\nlet myFish = ['angel', 'clown', 'mandarin', 'sturgeon'] //insert new element into array at index 2 let removed = myFish.splice(2, 0, 'drum')  // myFish is [\"angel\", \"clown\", \"drum\", \"mandarin\", \"sturgeon\"]  // removed is [], no elements removed\n",
    "reg_date": "2021-10-12T12:07:53.000Z"
  },
  {
    "id": 4232,
    "keyword": null,
    "link": null,
    "title": " what is static keyword in java",
    "description": "Static keyword is used a lot in java.   Static means, you can access those static variables without creating an object, just by using a class name. This means that only one instance of that static member is created which is shared across all instances of the class. Basically we use static keyword when all members share same instance.\n",
    "reg_date": "2021-10-12T12:07:53.000Z"
  },
  {
    "id": 4233,
    "keyword": null,
    "link": null,
    "title": " what is stringbuilder used for in java",
    "description": "StringBuilder stringBuilder = new StringBuilder();  stringBuilder.append(\"string\");  System.out.println(\"String = \" + stringBuilder.toString());\nJava StringBuilder class is used to create   mutable (modifiable) string. The Java   StringBuilder class is same as StringBuffer   class except that it is non-synchronized.      StringBuilder()     creates an empty string Builder with the initial capacity of 16. StringBuilder(String str)     creates a string Builder with the specified string. StringBuilder(int length)     creates an empty string Builder with the specified capacity as length.    \n",
    "reg_date": "2021-10-12T12:07:53.000Z"
  },
  {
    "id": 4234,
    "keyword": null,
    "link": null,
    "title": " what is the difference ArrayList vs LinkedList",
    "description": "ArrayList is array based, internally uses array LinkedList consists of nodes/values that are related to each other ArrayList and LinkedList both keep ordering ArrayList and LinkedList both allow duplicates\n",
    "reg_date": "2021-10-12T12:07:53.000Z"
  },
  {
    "id": 4235,
    "keyword": null,
    "link": null,
    "title": " what is the difference between int and integer in java",
    "description": "int is a primitive type. Variables of type int store the actual binary value for the integer you want to represent. int.parseInt(\"1\") doesn't make sense because int is not a class and therefore doesn't have any methods.  Integer is a class, no different from any other in the Java language. Variables of type Integer store references to Integer objects, just as with any other reference (object) type. Integer.parseInt(\"1\") is a call to the static method parseInt from class Integer (note that this method actually returns an int and not an Integer).  To be more specific, Integer is a class with a single field of type int. This class is used where you need an int to be treated like any other object, such as in generic types or situations where you need nullability.  Note that every primitive type in Java has an equivalent wrapper class:      byte has Byte     short has Short     int has Integer     long has Long     boolean has Boolean     char has Character     float has Float     double has Double  Wrapper classes inherit from Object class, and primitive don't. So it can be used in collections with Object reference or with Generics.  Since java 5 we have autoboxing, and the conversion between primitive and wrapper class is done automatically. Beware, however, as this can introduce subtle bugs and performance problems; being explicit about conversions never hurts. \nInt is a primitive data type On the other hand Integer is a wrapper class that wraps a primitive type int into an object Int provides less flexibility as compare to Integer as it only allows the binary value of an integer in it. The Intege on the other hand is more flexible in storing and manupulating in data since wrapper class inherit object class.\n",
    "reg_date": "2021-10-12T12:07:53.000Z"
  },
  {
    "id": 4236,
    "keyword": null,
    "link": null,
    "title": " what is the difference between sc.nextLine() and sc.next() in java",
    "description": "Their differences are...  next() can read the input only till the space. It can't read two words separated by space. Also, next() places the cursor in the same line after reading the input.  nextLine() reads input including space between the words (that is, it reads till the end of line \\n). Once the input is read, nextLine() positions the cursor in the next line.\n",
    "reg_date": "2021-10-12T12:07:53.000Z"
  },
  {
    "id": 4237,
    "keyword": null,
    "link": null,
    "title": " what is vector",
    "description": "Array based data structure -It is synchronized - thread safe. -It is mostly used in multi-threaded environment. -It is much slower than ArrayList because it is thread-safe\n",
    "reg_date": "2021-10-12T12:07:53.000Z"
  },
  {
    "id": 4238,
    "keyword": null,
    "link": null,
    "title": " what is vector in java",
    "description": "Array based data structure -It is synchronized - thread safe. -It is mostly used in multi-threaded environment. -It is much slower than ArrayList because it is thread-safe\nArray based data structure/Internally uses dynamic array. -It is synchronized - thread safe. -It is mostly used in multi-threaded environment. -It is much slower than ArrayList because it is thread-safe\n",
    "reg_date": "2021-10-12T12:07:54.000Z"
  },
  {
    "id": 4239,
    "keyword": null,
    "link": null,
    "title": " what it means when create final variable in java",
    "description": "First of all, final is a non-access modifier applicable only to  a variable, a method or a class  When a variable is declared with final keyword, its value can&rsquo;t be modified,  essentially, a constant. This also means that you must initialize a  final variable. If the final variable is a reference, this means that  the variable cannot be re-bound to reference another object, but internal  state of the object pointed by that reference variable can be changed  i.e. you can add or remove elements from final array or final collection.    It is good practice to represent final variables in all uppercase, using    underscore to separate words.\n",
    "reg_date": "2021-10-12T12:07:54.000Z"
  },
  {
    "id": 4240,
    "keyword": null,
    "link": null,
    "title": " where is java installed in ubuntu",
    "description": "readlink -f $(which java)  \n",
    "reg_date": "2021-10-12T12:07:54.000Z"
  },
  {
    "id": 4241,
    "keyword": null,
    "link": null,
    "title": " while loop in java",
    "description": "do { \t// loop content } while (/* condition */);\n//runs as long as the condition is true while(condition){ //do what you want in here doStuff() }\n// Java infinite while loop import java.util.*; public class WhileLoopExample {    public static void main(String[] args)    {       boolean value = true;       while(value)       {          System.out.println(\"Infinite loop\");       }    } }\npublic class WhileLoopDemo {    public static void main(String args[])    {       int a = 1;       while(a < 10)       {          System.out.println(a);          a++;          System.out.print(\"\\n\");       }    } }\nA while loop iterates a block of statements until condition is true. In a  while loop condition is executed first. Syntax:  while(condition) {    // code goes here }\n// Iterate Array using while loop public class ArrayWhileLoop {    public static void main(String[] args)     {       int[] arrNumbers = {2, 4, 6, 8, 10, 12};       int a = 0;       System.out.println(\"Printing even numbers: \");       while(a < 6)       {          System.out.println(arrNumbers[a]);          a++;       }    } }\n",
    "reg_date": "2021-10-12T12:07:54.000Z"
  },
  {
    "id": 4242,
    "keyword": null,
    "link": null,
    "title": " while loop java",
    "description": "do { \t// loop content } while (/* condition */);\n//runs as long as the condition is true while(condition){ //do what you want in here doStuff() }\npublic class WhileLoopDemo {    public static void main(String args[])    {       int a = 1;       while(a < 10)       {          System.out.println(a);          a++;          System.out.print(\"\\n\");       }    } }\nint number = 1;  while(number < 10){   System.out.println(number);   number += 1; }  \nA while loop iterates a block of statements until condition is true. In a  while loop condition is executed first. Syntax:  while(condition) {    // code goes here }\nwhile(i < 5) //while i < 5 stay in the loop {   System.out.print(i);   i++; } /* \tdo someting \tchange variable     call methods     etc... */\n",
    "reg_date": "2021-10-12T12:07:54.000Z"
  },
  {
    "id": 4243,
    "keyword": null,
    "link": null,
    "title": " why are there no destructors in java?",
    "description": "Because Java is a garbage collected language you cannot predict when (or even if) an object will be destroyed. Hence there is no direct equivalent of a destructor.\n",
    "reg_date": "2021-10-12T12:07:54.000Z"
  },
  {
    "id": 4244,
    "keyword": null,
    "link": null,
    "title": " why bufferedreader is faster than scanner",
    "description": "Difference between BufferedReader and Scanner are following:  BufferedReader is synchronized but Scanner is not synchronized. BufferedReader is thread safe but Scanner is not thread safe. BufferedReader has larger buffer memory but Scanner has smaller buffer memory. BufferedReader is faster but Scanner is slower in execution. Code to read a line from console:\n",
    "reg_date": "2021-10-12T12:07:54.000Z"
  },
  {
    "id": 4245,
    "keyword": null,
    "link": null,
    "title": " why java don't support multiple inheritance",
    "description": "C++ and few other languages supports multiple inheritance while java doesn&rsquo;t support it.   Java doesn&rsquo;t allow multiple inheritance   to avoid the ambiguity caused by it.   \n",
    "reg_date": "2021-10-12T12:07:54.000Z"
  },
  {
    "id": 4246,
    "keyword": null,
    "link": null,
    "title": " why java is secure",
    "description": "Java is the most popular object-oriented programming language.  It provides a variety of salient features that are preferred by the developers. It is the reason that a billion of devices runs on Java. In this section, we are going to discuss why Java is secure.  Java is secure due to the following reasons:  Java programs run inside a virtual machine which is known as a sandbox. Java does not support explicit pointer. Byte-code verifier checks the code fragments for illegal code that can violate access right to object. It provides java.security package implements explicit security. It provides library level safety. Run-time security check takes place when we load new code.\n",
    "reg_date": "2021-10-12T12:07:54.000Z"
  },
  {
    "id": 4247,
    "keyword": null,
    "link": null,
    "title": " why java platform independent",
    "description": "The most unique feature of java is platform independent.  In any programming language soruce code is compiled in to executable code . This cannot be run across all platforms.  When javac compiles a java program it generates an executable file called .class file. class file contains byte codes. Byte codes are interpreted only by JVM&rsquo;s .  Since these JVM&rsquo;s are made available across all platforms by Sun Microsystems, we can execute this byte  code in any platform. Byte code generated in windows environment can also be executed in linux  environment. This makes java platform independent\n",
    "reg_date": "2021-10-12T12:07:54.000Z"
  },
  {
    "id": 4248,
    "keyword": null,
    "link": null,
    "title": " why main method is public static void in java",
    "description": "Because the object is not required to call the static method.  If we make the main method non-static,  JVM will have to create its object first and then call main() method which  will lead to the extra memory allocation.\npublic : &ldquo;public&rdquo; is an access specifier which can be used outside the class.  When main method is declared public it means it can be used outside class. static : To call a method we require object. Sometimes it may be  required to call a method without the help of object. Then we declare that  method as static. JVM calls the main() method without creating object by declaring keyword static. If we make the main method non-static,  JVM will have to create its object first and then call main() method which  will lead to the extra memory allocation. void : void return type is used when a method does&rsquo;nt return any value.  main() method doesn&rsquo;t return any value, so main() is declared as void.\n",
    "reg_date": "2021-10-12T12:07:55.000Z"
  },
  {
    "id": 4249,
    "keyword": null,
    "link": null,
    "title": " why override equals and hashcode in java",
    "description": "// EXAMPLE CLASS public class User {     private String name;     private int age;     private String passport; \t \t@Override public boolean equals(Object o) {         if (o == this)  {           return true;         }         if (!(o instanceof User)) {             return false;         }          User user = (User) o;          return user.name.equals(name) &&  \t\t\t\tuser.age == age &&            \t\tuser.passport.equals(passport);     }        @Override public int hashCode() {         int result = 17;         result = 31 * result + name.hashCode();         result = 31 * result + age;         result = 31 * result + passport.hashCode();         return result;     }\n",
    "reg_date": "2021-10-12T12:07:55.000Z"
  },
  {
    "id": 4250,
    "keyword": null,
    "link": null,
    "title": " why python is slower than java",
    "description": "Python is dynamically typed, while Java is statically typed. That's very important when we're talking about speed, because  it is actually noticeable in compilation time.  Generally speaking, we could say that Python launches faster  and runs slower, while Java launches slower and runs faster.\n",
    "reg_date": "2021-10-12T12:07:55.000Z"
  },
  {
    "id": 4251,
    "keyword": null,
    "link": null,
    "title": " why string immutable in java",
    "description": "In java, string objects are immutable.  Immutable basically means unmodifiable or unchangeable. Once string object is created its data or state can't be changed but a new   string object is created\nIn java, string objects are immutable. Immutable simply means unmodifiable or unchangeable.  Once string object is created its data or state can't be changed but a new string object is created.\n",
    "reg_date": "2021-10-12T12:07:55.000Z"
  },
  {
    "id": 4252,
    "keyword": null,
    "link": null,
    "title": " why we use static in java",
    "description": "//Java Program to get the cube of a given number using the static method   using static before a method or variable we can access it by not creating a  instance of it.in the program we directly used student.cube(5) class Calculate{     static int cube(int x){     return x*x*x;     }        public static void main(String args[]){     int result=Calculate.cube(5);     System.out.println(result);     }   }  \nIn Java, static keyword is mainly used for memory management. It can be used with variables, methods, blocks and nested classes. It is a keyword which is used to share the same variable or method of a given class. Basically, static is used for a constant variable or a method that is same for every instance of a class\nThe static keyword in Java is used for memory management mainly. We can apply static keyword with variables, methods, blocks and nested classes. The static keyword belongs to the class    than an instance of the class.  The static can be:  Variable (also known as a class variable) Method (also known as a class method) Block Nested class\nstatic keyword is a non-access modifier. static keyword can be used with  class level variable, block, method and inner class or nested class.\nIn the Java programming language, the keyword static indicates that the particular member belongs to a type itself, rather than to an instance of that type. This means that only one instance of that static member is created which is shared across all instances of the class.\nWe can declare a method as static by adding keyword &ldquo;static&rdquo; before method name. Let&rsquo;s see example on static method in java.  public class StaticMethodExample {    static void print()    {       System.out.println(\"in static method.\");    }    public static void main(String[] args)    {       StaticMethodExample.print();    } }\n",
    "reg_date": "2021-10-12T12:07:55.000Z"
  },
  {
    "id": 4253,
    "keyword": null,
    "link": null,
    "title": " will my java minecraft be discontinued",
    "description": "//nah bro we good just need to link a microsoft acc and java dont go away\n",
    "reg_date": "2021-10-12T12:07:55.000Z"
  },
  {
    "id": 4254,
    "keyword": null,
    "link": null,
    "title": " windows Jmeter java.net.BindException: Address already in use: connect",
    "description": "//Ref https://www.baselogic.com/2011/11/23/solved-java-net-bindexception-address-use-connect-issue-windows/\n",
    "reg_date": "2021-10-12T12:07:55.000Z"
  },
  {
    "id": 4255,
    "keyword": null,
    "link": null,
    "title": " work with arrays java",
    "description": "int[] array = new int[/*size*/]; // Works for double, char, etc.\nint[] intArray = new int[20]; String[] cars = {\"Volvo\", \"BMW\", \"Ford\", \"Mazda\"};\nnew String[] { \"A\", \"B\"}\n",
    "reg_date": "2021-10-12T12:07:55.000Z"
  },
  {
    "id": 4256,
    "keyword": null,
    "link": null,
    "title": " working with buttons in applet java",
    "description": "import java.applet.*; import java.awt.*; import java.awt.event.*;  public class AnAppletWithButtons extends Applet implements ActionListener { \tpublic void init() { \t\tbutton1 = new Button(\"Button 1\"); \t\tadd(button1); \t\tbutton1.addActionListener(this);  \t\tbutton2 = new Button(\"Button 2\"); \t\tadd(button2); \t\tbutton2.addActionListener(this); \t}  \tpublic void actionPerformed(ActionEvent e) { \t\tif (e.getSource() == button1)  \t\t\tSystem.out.println(\"Button 1 was pressed\"); \t\telse \t\t\tSystem.out.println(\"Button 2 was pressed\"); \t}  \tButton button1, button2; } \n",
    "reg_date": "2021-10-12T12:07:55.000Z"
  },
  {
    "id": 4257,
    "keyword": null,
    "link": null,
    "title": " wrapper classes in java",
    "description": "Wrapper classes: classes that are dedicated to primitives         Byte, Short, Integer, Long, Float, Double, Character, Boolean presented in \"java.lang\" package AutoBoxing: converting primitive values to wrapper class \t\tint a = 100; \t\tInteger b = a  // auto boxing Unboxing: converting wrapper class value to primitives \t\tInteger a = 100; \t\tint b = a;  // unboxing \tint a = 100; \tdouble b = a;    // none \npublic class CommandLineArguments {     public static void main(String[] args) {         int a = Integer.parseInt(args[0]);         int b = Integer.parseInt(args[1]);         int sum = a + b;         System.out.println(\"Sum is \" + sum);     } } \n public class HelloWorld {   public static void main(String[] args) {          // how to use class in java     class User{     \t     \tint score;     }          User dave = new User();          dave.score = 20;          System.out.println(dave.score);          } } \nIn Java, for each Primitive type, there is a matching class type.   We call them Wrapper classes: \tPrimitive types are the most basic data types     available within the Java language.  \tThere are 8: boolean , byte , char , short ,                   int , long , float and double .  \tThese types serve as the building blocks of     data manipulation in Java. \tWrapper classes: Byte, Short, Integer, Long,                  Float, Double, Boolean, Character \t\t\t \tAll the wrapper classes are subclasses     of the abstract class Number.  \tThe object of the wrapper class contains or       wraps its respective primitive data type.  \tConverting primitive data types into object     is called boxing, and this is taken care by the compiler. \t\t\t \t\t\tDifferences:  \t\t\t\t1. Wrappers classes are object  \t\t\t\t2. null can only be assigned to classes \t\t\t\t3. Wrapper class does have methods \t\t\t\t4. Primitives does have default values \t\t\t\t\t\tdefault value of primitives:   \t\t\t\t\t\t\t\t byte, short, int, long ==> 0 \t\t\t\t\t\t\t\t float, double ==> 0.0; \t\t\t\t\t\t\t\t boolean ==> false; \t\t\t\t\t\t\t\t char ==> space\t\t  \t\t\t\t5. Default values of wrapper class: null \nArrayList<Integer> myNumbers = new ArrayList<Integer>(); // Valid \nArrayList<int> myNumbers = new ArrayList<int>(); // Invalid \n",
    "reg_date": "2021-10-12T12:07:55.000Z"
  },
  {
    "id": 4258,
    "keyword": null,
    "link": null,
    "title": " write a java program to ReverseNumber",
    "description": "public class ReverseNumber {     public static void main(String[] args) {         int num = 1234, reversed = 0;          while(num != 0) {             int digit = num % 10;             reversed = reversed * 10 + digit;             num = num / 10;         }         System.out.println(\"Reversed Number: \" + reversed); }}\n",
    "reg_date": "2021-10-12T12:07:56.000Z"
  },
  {
    "id": 4259,
    "keyword": null,
    "link": null,
    "title": " write a java program to fibonacci series",
    "description": "public class Fibonacci {      public static void main(String[] args) {          int n = 10, t1 = 0, t2 = 1;         System.out.print(\"First \" + n + \" terms: \");          for (int i = 1; i <= n; ++i)         {             System.out.print(t1 + \" + \");              int sum = t1 + t2;             t1 = t2;             t2 = sum;         }     } }\n",
    "reg_date": "2021-10-12T12:07:56.000Z"
  },
  {
    "id": 4260,
    "keyword": null,
    "link": null,
    "title": " write a program to check whether the character is in lowercase or uppercase in java",
    "description": "import java.io.BufferedReader; import java.io.IOException; import java.io.InputStreamReader;  public class Alphabet_Check {     public static void main(String args[]) throws IOException{         char m;         BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));         System.out.print(\"Enter any alphabet:\");         m = (char) bf.read();         if(m >= 97 && m <= 123){             System.out.println(\"Lower Case\");         }         else if(m >= 65 && m <= 96){             System.out.println(\"Upper Case\");         }         else if(m >= 48 && m <= 57){             System.out.println(\"Digit\");         }     } }\n",
    "reg_date": "2021-10-12T12:07:56.000Z"
  },
  {
    "id": 4261,
    "keyword": null,
    "link": null,
    "title": " write an infinite loop java",
    "description": "while(true) {   //do whatever }\n",
    "reg_date": "2021-10-12T12:07:56.000Z"
  },
  {
    "id": 4262,
    "keyword": null,
    "link": null,
    "title": " write an object java in a file",
    "description": "package com.mkyong;  package com.mkyong;  import java.io.File; import java.io.FileInputStream; import java.io.FileNotFoundException; import java.io.FileOutputStream; import java.io.IOException; import java.io.ObjectInputStream; import java.io.ObjectOutputStream;  public class WriterReader {  \tpublic static void main(String[] args) {  \t\tPerson p1 = new Person(\"John\", 30, \"Male\"); \t\tPerson p2 = new Person(\"Rachel\", 25, \"Female\");  \t\ttry { \t\t\tFileOutputStream f = new FileOutputStream(new File(\"myObjects.txt\")); \t\t\tObjectOutputStream o = new ObjectOutputStream(f);  \t\t\t// Write objects to file \t\t\to.writeObject(p1); \t\t\to.writeObject(p2);  \t\t\to.close(); \t\t\tf.close();  \t\t\tFileInputStream fi = new FileInputStream(new File(\"myObjects.txt\")); \t\t\tObjectInputStream oi = new ObjectInputStream(fi);  \t\t\t// Read objects \t\t\tPerson pr1 = (Person) oi.readObject(); \t\t\tPerson pr2 = (Person) oi.readObject();  \t\t\tSystem.out.println(pr1.toString()); \t\t\tSystem.out.println(pr2.toString());  \t\t\toi.close(); \t\t\tfi.close();  \t\t} catch (FileNotFoundException e) { \t\t\tSystem.out.println(\"File not found\"); \t\t} catch (IOException e) { \t\t\tSystem.out.println(\"Error initializing stream\"); \t\t} catch (ClassNotFoundException e) { \t\t\t// TODO Auto-generated catch block \t\t\te.printStackTrace(); \t\t}  \t}  }\n",
    "reg_date": "2021-10-12T12:07:56.000Z"
  },
  {
    "id": 4263,
    "keyword": null,
    "link": null,
    "title": " write data firestore java",
    "description": "Map<String, Object> city = new HashMap<>(); city.put(\"name\", \"Los Angeles\"); city.put(\"state\", \"CA\"); city.put(\"country\", \"USA\");  db.collection(\"cities\").document(\"LA\")         .set(city)         .addOnSuccessListener(new OnSuccessListener<Void>() {             @Override             public void onSuccess(Void aVoid) {                 Log.d(TAG, \"DocumentSnapshot successfully written!\");             }         })         .addOnFailureListener(new OnFailureListener() {             @Override             public void onFailure(@NonNull Exception e) {                 Log.w(TAG, \"Error writing document\", e);             }         });\n",
    "reg_date": "2021-10-12T12:07:56.000Z"
  },
  {
    "id": 4264,
    "keyword": null,
    "link": null,
    "title": " write file java",
    "description": "import java.io.FileWriter;   // Import the FileWriter class import java.io.IOException;  // Import the IOException class to handle errors  public class WriteToFile {   public static void main(String[] args) {     try {       FileWriter myWriter = new FileWriter(\"filename.txt\");       myWriter.write(\"Files in Java might be tricky, but it is fun enough!\");       myWriter.close();       System.out.println(\"Successfully wrote to the file.\");     } catch (IOException e) {       System.out.println(\"An error occurred.\");       e.printStackTrace();     }   } }\nimport java.io.FileWriter;   // Import the FileWriter class import java.io.IOException;  // Import the IOException class to handle errors  public class WriteToFile {   public static void main(String[] args) {     try {       FileWriter fw = new FileWriter(\"C:/path/to/filename.txt\");       fw.write(\"this is how u write a string\"); \t  fw.write(String.valueOf(108)); // cast number to string       myWriter.close();     } catch (IOException e) {         ..     }   } } \nPrintWriter writer = new PrintWriter(\"the-file-name.txt\", \"UTF-8\"); writer.println(\"The first line\"); writer.println(\"The second line\"); writer.close(); \n@Test public void givenUsingJava7_whenWritingToFile_thenCorrect()    throws IOException {     String str = \"Hello\";       Path path = Paths.get(fileName);     byte[] strToBytes = str.getBytes();       Files.write(path, strToBytes);       String read = Files.readAllLines(path).get(0);     assertEquals(str, read); } \n",
    "reg_date": "2021-10-12T12:07:56.000Z"
  },
  {
    "id": 4265,
    "keyword": null,
    "link": null,
    "title": " write file to internal storage android",
    "description": "public static boolean saveToInternalStorage(String data, String filename, Context context) throws IOException {   FileOutputStream fos = context.openFileOutput(filename, Context.MODE_PRIVATE);   //default mode is PRIVATE, can be APPEND etc.   fos.write(data.getBytes());   fos.close();   return true; }  public static String readFileFromInternalStorage(String filename, Context context) throws IOException {   FileInputStream fis = context.openFileInput(filename);   InputStreamReader isr = new InputStreamReader(fis);   BufferedReader bufferedReader = new BufferedReader(isr);   StringBuilder sb = new StringBuilder();   String line;   while ((line = bufferedReader.readLine()) != null) {     sb.append(line);   }   bufferedReader.close();   return sb.toString(); }\n",
    "reg_date": "2021-10-12T12:07:56.000Z"
  },
  {
    "id": 4266,
    "keyword": null,
    "link": null,
    "title": " write input stream to file java",
    "description": "InputStream pdf = // greate some input stream data try (FileOutputStream outputStream = new FileOutputStream(new File(\"/Users/kirkbrown/documents/my.pdf\"))) {  \t\t\tint read; \t\t\tbyte[] bytes = new byte[1024];  \t\t\twhile ((read = pdf.read(bytes)) != -1) { \t\t\t\toutputStream.write(bytes, 0, read); \t\t\t} \t\t}\n",
    "reg_date": "2021-10-12T12:07:56.000Z"
  },
  {
    "id": 4267,
    "keyword": null,
    "link": null,
    "title": " writing java program for database update query",
    "description": "//STEP 1. Import required packages import java.sql.*;  public class JDBCExample {    // JDBC driver name and database URL    static final String JDBC_DRIVER = \"com.mysql.jdbc.Driver\";      static final String DB_URL = \"jdbc:mysql://localhost/STUDENTS\";     //  Database credentials    static final String USER = \"username\";    static final String PASS = \"password\";        public static void main(String[] args) {    Connection conn = null;    Statement stmt = null;    try{       //STEP 2: Register JDBC driver       Class.forName(\"com.mysql.jdbc.Driver\");        //STEP 3: Open a connection       System.out.println(\"Connecting to a selected database...\");       conn = DriverManager.getConnection(DB_URL, USER, PASS);       System.out.println(\"Connected database successfully...\");              //STEP 4: Execute a query       System.out.println(\"Creating statement...\");       stmt = conn.createStatement();       String sql = \"UPDATE Registration \" +                    \"SET age = 30 WHERE id in (100, 101)\";       stmt.executeUpdate(sql);        // Now you can extract all the records       // to see the updated records       sql = \"SELECT id, first, last, age FROM Registration\";       ResultSet rs = stmt.executeQuery(sql);        while(rs.next()){          //Retrieve by column name          int id  = rs.getInt(\"id\");          int age = rs.getInt(\"age\");          String first = rs.getString(\"first\");          String last = rs.getString(\"last\");           //Display values          System.out.print(\"ID: \" + id);          System.out.print(\", Age: \" + age);          System.out.print(\", First: \" + first);          System.out.println(\", Last: \" + last);       }       rs.close();    }catch(SQLException se){       //Handle errors for JDBC       se.printStackTrace();    }catch(Exception e){       //Handle errors for Class.forName       e.printStackTrace();    }finally{       //finally block used to close resources       try{          if(stmt!=null)             conn.close();       }catch(SQLException se){       }// do nothing       try{          if(conn!=null)             conn.close();       }catch(SQLException se){          se.printStackTrace();       }//end finally try    }//end try    System.out.println(\"Goodbye!\"); }//end main }//end JDBCExample\n",
    "reg_date": "2021-10-12T12:07:56.000Z"
  },
  {
    "id": 4268,
    "keyword": null,
    "link": null,
    "title": " writing to a file in java",
    "description": "import java.io.FileWriter;   // Import the FileWriter class import java.io.IOException;  // Import the IOException class to handle errors  public class WriteToFile {   public static void main(String[] args) {     try {       FileWriter myWriter = new FileWriter(\"filename.txt\");       myWriter.write(\"Files in Java might be tricky, but it is fun enough!\");       myWriter.close();       System.out.println(\"Successfully wrote to the file.\");     } catch (IOException e) {       System.out.println(\"An error occurred.\");       e.printStackTrace();     }   } }\nPrintWriter writer = new PrintWriter(\"the-file-name.txt\", \"UTF-8\"); writer.println(\"The first line\"); writer.println(\"The second line\"); writer.close();\nFile filename = new File(filepath)\nPrintWriter writer = new PrintWriter(\"the-file-name.txt\", \"UTF-8\"); writer.println(\"The first line\"); writer.println(\"The second line\"); writer.close(); \n@Test public void givenUsingJava7_whenWritingToFile_thenCorrect()    throws IOException {     String str = \"Hello\";       Path path = Paths.get(fileName);     byte[] strToBytes = str.getBytes();       Files.write(path, strToBytes);       String read = Files.readAllLines(path).get(0);     assertEquals(str, read); } \n",
    "reg_date": "2021-10-12T12:07:57.000Z"
  },
  {
    "id": 4269,
    "keyword": null,
    "link": null,
    "title": " writing to a text file java",
    "description": "import java.io.FileWriter;   // Import the FileWriter class import java.io.IOException;  // Import the IOException class to handle errors  public class WriteToFile {   public static void main(String[] args) {     try {       FileWriter myWriter = new FileWriter(\"filename.txt\");       myWriter.write(\"Files in Java might be tricky, but it is fun enough!\");       myWriter.close();       System.out.println(\"Successfully wrote to the file.\");     } catch (IOException e) {       System.out.println(\"An error occurred.\");       e.printStackTrace();     }   } }\nPrintWriter writer = new PrintWriter(\"the-file-name.txt\", \"UTF-8\"); writer.println(\"The first line\"); writer.println(\"The second line\"); writer.close();\n",
    "reg_date": "2021-10-12T12:07:57.000Z"
  },
  {
    "id": 4270,
    "keyword": null,
    "link": null,
    "title": " xAxis.setTextSize() text gets clipped",
    "description": "lineChart.setExtraBottomOffset(5);\n",
    "reg_date": "2021-10-12T12:07:57.000Z"
  },
  {
    "id": 4271,
    "keyword": null,
    "link": null,
    "title": " youtube",
    "description": "think twice, You can be trapped for couple of hours instead of coding\nYou're supposed to be doing something arn't you...\ngo back to coding\nONLY use for programming help. Do not get distracted!\n// I hope you're about to search solutions for your code and not watch PewDiePie\n #dont waste time get back to codin\nGo Coding my Friend :)\nd i s t r a c t i o n s\nProcrastinating is like masterbaiting, in the end your only screwing yourself. get back to programming.\ndont procrastinate mf, code some more\n",
    "reg_date": "2021-10-12T12:07:57.000Z"
  },
  {
    "id": 4272,
    "keyword": null,
    "link": null,
    "title": " youtube video to mp3",
    "description": "// https://ytmp3.cc/en16/ - really nice site. Converts youtube video // (e.g www.youtube.com/watch?v=KkqOjbbLpcY) // to mp3.\nThis man is doing gods work\n",
    "reg_date": "2021-10-12T12:07:57.000Z"
  },
  {
    "id": 4273,
    "keyword": null,
    "link": null,
    "title": " zip file java",
    "description": "import java.io.FileOutputStream; import java.io.IOException; import java.nio.file.*; import java.nio.file.attribute.BasicFileAttributes; import java.util.zip.ZipEntry; import java.util.zip.ZipOutputStream;  public class ZipCompress {     public static void compress(String dirPath) {         final Path sourceDir = Paths.get(dirPath);         String zipFileName = dirPath.concat(\".zip\");         try {             final ZipOutputStream outputStream = new ZipOutputStream(new FileOutputStream(zipFileName));             Files.walkFileTree(sourceDir, new SimpleFileVisitor<Path>() {                 @Override                 public FileVisitResult visitFile(Path file, BasicFileAttributes attributes) {                     try {                         Path targetFile = sourceDir.relativize(file);                         outputStream.putNextEntry(new ZipEntry(targetFile.toString()));                         byte[] bytes = Files.readAllBytes(file);                         outputStream.write(bytes, 0, bytes.length);                         outputStream.closeEntry();                     } catch (IOException e) {                         e.printStackTrace();                     }                     return FileVisitResult.CONTINUE;                 }             });             outputStream.close();         } catch (IOException e) {             e.printStackTrace();         }     } }\nimport java.io.BufferedOutputStream; import java.io.File; import java.io.FileOutputStream; import java.nio.file.Files; import java.nio.file.Paths; import java.util.ArrayList; import java.util.List; import java.util.zip.ZipEntry; import java.util.zip.ZipOutputStream;  public class zip {      public static void main(String[] args) {     \tzipFolder(mapFolder(\"Test\"));     \t         System.out.println(\"Done\");     }      \tpublic static List<String> mapFolder(String path, boolean includeEmptyFolders) {     \tList<String> map = new ArrayList<String>();     \tList<String> unmappedDirs = new ArrayList<String>();     \tFile[] items = new File(path).listFiles();      \tif (!path.substring(path.length() - 1).equals(\"/\")) {     \t\tpath += \"/\";     \t}     \t\t     \tif (items != null) { \t    \tfor (File item : items) { \t    \t\tif (item.isFile()) { \t    \t\t\t\tmap.add(path+item.getName()); \t    \t\t} else { \t    \t\t\tunmappedDirs.add(path+item.getName()); \t    \t\t} \t    \t} \t    \t \t    \tif (!unmappedDirs.isEmpty()) { \t    \t\tfor (String folder : unmappedDirs) { \t    \t\t\tList<String> temp = mapFolder(folder, includeEmptyFolders); \t    \t\t\tif (!temp.isEmpty()) { \t    \t\t\t\tfor (String item : temp) \t    \t\t\t\t\tmap.add(item);     \t\t\t\t} else if (includeEmptyFolders == true) {     \t\t\t\t\tmap.add(folder+\"/\");     \t\t\t\t} \t    \t\t} \t    \t}     \t}     \treturn map;     }          public static void zipFolder(String zipPath, List<String> items) {     \ttry {             FileOutputStream f = new FileOutputStream(zipPath);             ZipOutputStream zip = new ZipOutputStream(new BufferedOutputStream(f));                          for (String item : items) {             \tString contents = String.join(\"\\n\", Files.readAllLines(Paths.get(item)));             \tzip.putNextEntry(new ZipEntry(item));             \t             \tbyte[] data = contents.getBytes();             \tzip.write(data, 0, data.length);             \tzip.closeEntry();             } \t\t    \t             zip.close();             f.close();         } catch(Exception e) {             System.out.println(e.getMessage());         }     } }\nimport java.io.BufferedInputStream; import java.io.FileInputStream; import java.io.FileOutputStream; import java.io.IOException; import java.io.InputStream; import java.util.Date; import java.util.Enumeration; import java.util.zip.ZipEntry; import java.util.zip.ZipFile; import java.util.zip.ZipInputStream;  /**  * Java program to iterate and read file entries from Zip archive.  * This program demonstrate two ways to retrieve files from Zip using ZipFile and by using ZipInputStream class.  * @author Javin  */  public class ZipFileReader {      // This Zip file contains 11 PNG images     private static final String FILE_NAME = \"C:\\\\temp\\\\pics.zip\";     private static final String OUTPUT_DIR = \"C:\\\\temp\\\\Images\\\\\";     private static final int BUFFER_SIZE = 8192;      public static void main(String args[]) throws IOException {          // Prefer ZipFile over ZipInputStream         readUsingZipFile();     //  readUsingZipInputStream();      }      /*      * Example of reading Zip archive using ZipFile class      */      private static void readUsingZipFile() throws IOException {         final ZipFile file = new ZipFile(FILE_NAME);         System.out.println(\"Iterating over zip file : \" + FILE_NAME);          try {             final Enumeration<? extends ZipEntry> entries = file.entries();             while (entries.hasMoreElements()) {                 final ZipEntry entry = entries.nextElement();                 System.out.printf(\"File: %s Size %d  Modified on %TD %n\", entry.getName(), entry.getSize(), new Date(entry.getTime()));                 extractEntry(entry, file.getInputStream(entry));             }             System.out.printf(\"Zip file %s extracted successfully in %s\", FILE_NAME, OUTPUT_DIR);         } finally {             file.close();         }      }      /*      * Example of reading Zip file using ZipInputStream in Java.      */      private static void readUsingZipInputStream() throws IOException {         BufferedInputStream bis = new BufferedInputStream(new FileInputStream(FILE_NAME));         final ZipInputStream is = new ZipInputStream(bis);          try {             ZipEntry entry;             while ((entry = is.getNextEntry()) != null) {                 System.out.printf(\"File: %s Size %d  Modified on %TD %n\", entry.getName(), entry.getSize(), new Date(entry.getTime()));                 extractEntry(entry, is);             }         } finally {             is.close();         }      }      /*      * Utility method to read  data from InputStream      */      private static void extractEntry(final ZipEntry entry, InputStream is) throws IOException {         String exractedFile = OUTPUT_DIR + entry.getName();         FileOutputStream fos = null;          try {             fos = new FileOutputStream(exractedFile);             final byte[] buf = new byte[BUFFER_SIZE];             int read = 0;             int length;              while ((length = is.read(buf, 0, buf.length)) >= 0) {                 fos.write(buf, 0, length);             }          } catch (IOException ioex) {             fos.close();         }      }  }  Output: Iterating over zip file : C:\\temp\\pics.zip File: Image  (11).png Size 21294  Modified on 10/24/13 File: Image  (1).png Size 22296  Modified on 11/19/13 File: Image  (2).png Size 10458  Modified on 10/24/13 File: Image  (3).png Size 18425  Modified on 11/19/13 File: Image  (4).png Size 31888  Modified on 11/19/13 File: Image  (5).png Size 27454  Modified on 11/19/13 File: Image  (6).png Size 67608  Modified on 11/19/13 File: Image  (7).png Size 8659  Modified on 11/19/13 File: Image  (8).png Size 40015  Modified on 11/19/13 File: Image  (9).png Size 17062  Modified on 10/24/13 File: Image  (10).png Size 42467  Modified on 10/24/13 Zip file C:\\temp\\pics.zip extracted successfully in C:\\temp\\Images\\\n",
    "reg_date": "2021-10-12T12:07:57.000Z"
  },
  {
    "id": 4274,
    "keyword": null,
    "link": null,
    "title": " zpool",
    "description": "Happy Pool Mining!!Wish you good Profits!!!\n",
    "reg_date": "2021-10-12T12:07:57.000Z"
  },
  {
    "id": 4275,
    "keyword": null,
    "link": null,
    "title": " zufallszahlen in java",
    "description": "(int) (Math.random()*(max-min+1)+min)\n",
    "reg_date": "2021-10-12T12:07:57.000Z"
  }
]