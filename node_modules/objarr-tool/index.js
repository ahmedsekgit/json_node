module.exports = class {
    filterObjects(array, { keys, values }) {
        const resArray = []
        if (!keys) {
            array.forEach((item) => {
                Object.keys(item).forEach((key) => {
                    values.forEach(value => {
                        if (item[key] === value) {
                            resArray.push(item)
                        }
                    });
                })
            })
            return resArray
        }

        array.forEach((item, i) => {
            keys.forEach(key => {
                if (item[key]) {
                    if (!values) {
                        return resArray.push(item)
                    }

                    values.forEach(value => {
                        if (item[key] === value) {
                            return resArray.push(item)
                        }
                    })
                }
            });
        })

        return resArray
    }

    getObjValueByKey(array, key) {
        const resArray = []

        array.forEach((item) => {
            Object.keys(item).forEach((itemKey) => {
                if (itemKey === key) {
                    resArray.push(item[itemKey])
                }
            })
        })

        return resArray
    }

    removeMatches(array) {
        const res = [...new Set(array.map(JSON.stringify))].map(JSON.parse);
        return res;
    }

    sortedByKey(array, key, sortMode = 0) {
        if (sortMode !== 0 && sortMode !== 1 && sortMode !== -1) {
            throw new Error('sortMode can only take values: 0, 1, -1')
        }

        const res = []

        array.forEach(item => {
            if (item[key]) {
                res.push(item)
            }
        });

        if (sortMode === 0) {
            res.sort(function (a, b) {
                if (a[key] > b[key]) {
                    return 1;
                }

                if (a[key] < b[key]) {
                    return -1;
                }

                return 0;
            })
        } else if (sortMode === 1) {
            res.sort((a, b) => a[key] - b[key])
        } else if (sortMode === -1) {
            res.sort((a, b) => b[key] - a[key])
        }

        return res
    }
}