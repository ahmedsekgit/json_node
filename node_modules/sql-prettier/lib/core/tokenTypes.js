"use strict";

exports.__esModule = true;
exports.useStandardFormat = undefined;

var _upperCase = require("lodash/upperCase");

var _upperCase2 = _interopRequireDefault(_upperCase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/**
 * Constants for token types
 */
exports["default"] = {
    WHITESPACE: "whitespace",
    WORD: "word",
    STRING: "string",
    RESERVED: "reserved",
    RESERVED_TOPLEVEL: "reserved-toplevel",
    RESERVED_NEWLINE: "reserved-newline",
    OPERATOR: "operator",
    OPEN_PAREN: "open-paren",
    CLOSE_PAREN: "close-paren",
    LINE_COMMENT: "line-comment",
    BLOCK_COMMENT: "block-comment",
    NUMBER: "number",
    PLACEHOLDER: "placeholder",
    OPEN_CONDITION: 'open-condition',
    CLOSE_CONDITION: 'close-condition',
    CONDITION_WORDS: 'condition'
};

/**
 * @desc 使用特殊句首关键词，决定statement是否开启上下多区块对齐。如下所示
 * @example select * from table_1;  => select *
 *                                     from   table_1;
 * 
 */
/**
 * @file 关键词的相关处理内容
 * @author zuoyi
 */

var useStandardFormat = exports.useStandardFormat = function useStandardFormat() {
    var keyword = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

    var token = (0, _upperCase2["default"])(keyword);
    // 不需要开启上下区块对齐的句首词，通常为DML、DDL相关
    var spaceByIndentTypesToken = ['CREATE', 'ALTER', 'ADD', 'DROP', 'UPDATE', 'DELETE', 'SHOW', 'SET'];
    // 需要开启对齐，通常为DQL
    var spaceWithAdditionalToken = ['SELECT', 'VALUES', 'FROM'];

    return {
        // success表示，当前词是否可以决定作用域
        success: spaceByIndentTypesToken.includes(token) || spaceWithAdditionalToken.includes(token),
        // 是否开启区块对齐（新版本格式化效果）
        standardMode: spaceWithAdditionalToken.includes(token)
    };
};